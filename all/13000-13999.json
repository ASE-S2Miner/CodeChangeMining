[{"original_method":"public void clear() {\r\n\t\troomManager.getRoom(getLocalScope().getName()).clear();\r\n\t\tISharedObject drawSO = getSharedObject(getLocalScope(), WHITEBOARD_SHARED_OBJECT);\r\n\t\tdrawSO.sendMessage(\"clear\", new ArrayList<Object>());\r\n\t}","id":13000,"modified_method":"public void clear() {\r\n\t\troomManager.getRoom(getLocalScope().getName()).clear();\r\n//\t\tISharedObject drawSO = getSharedObject(getLocalScope(), WHITEBOARD_SHARED_OBJECT);\r\n//\t\tdrawSO.sendMessage(\"clear\", new ArrayList<Object>());\r\n\t\t\r\n\t\tMap<String, Object> message = new HashMap<String, Object>();\t\t\r\n\t\tClientMessage m = new ClientMessage(ClientMessage.BROADCAST, getLocalScope().getName(), \"WhiteboardClearCommand\", message);\r\n\t\tconnInvokerService.sendMessage(m);\r\n\t\t\r\n\t}","commit_id":"1fab7a430c0e7445f2ed5cb191ccb9c7e91ccd11","url":"https://github.com/bigbluebutton/bigbluebutton"},{"original_method":"/**\r\n\t * Sets the active page\r\n\t * @param pageNum - the number of the page to set to active\r\n\t * @return - returns the number of shapes in the history of the requested page. This way the client can perform a simple check of whether\r\n\t * it should retrieve the page history. This saves some bandwidth for the server.\r\n\t */\r\n\tpublic int setActivePage(int pageNum){\r\n\t\tlog.info(\"WhiteboardApplication - Getting number of shapes for page: \" + pageNum);\r\n\t\treturn 1; //application.getNumShapesOnPage(pageNum);\r\n\t}","id":13001,"modified_method":"/**\r\n\t * Sets the active page\r\n\t * @param pageNum - the number of the page to set to active\r\n\t * @return - returns the number of shapes in the history of the requested page. This way the client can perform a simple check of whether\r\n\t * it should retrieve the page history. This saves some bandwidth for the server.\r\n\t */\r\n\tpublic void setActivePage(int pageNum){\r\n\t\tlog.info(\"WhiteboardApplication - Getting number of shapes for page: \" + pageNum);\r\n\t\tapplication.changePage(pageNum);\r\n\t}","commit_id":"1fab7a430c0e7445f2ed5cb191ccb9c7e91ccd11","url":"https://github.com/bigbluebutton/bigbluebutton"},{"original_method":"private void sendMessageToClient(ClientMessage message) {\r\n\t\tif (message.getType().equals(ClientMessage.BROADCAST)) {\r\n\t\t\tIScope scope = scopes.get(message.getDest());\r\n\t\t\tif (scope != null) {\r\n\t\t\t\tList<Object> params = new ArrayList<Object>();\r\n\t\t\t\tparams.add(message.getMessage());\r\n\t\t\t\tServiceUtils.invokeOnAllConnections(scope, \"onMessageFromServer\", params.toArray());\t\t\t\t\r\n\t\t\t}\r\n\t\t} else if (message.getType().equals(ClientMessage.DIRECT)) {\r\n\t\t\tIConnection conn = connections.get(message.getDest());\r\n\t\t\tif (conn != null) {\r\n\t\t\t\tif (conn.isConnected()) {\r\n\t\t\t\t\tList<Object> params = new ArrayList<Object>();\r\n\t\t\t\t\tparams.add(message.getMessageName());\r\n\t\t\t\t\tparams.add(message.getMessage());\r\n\t\t\t\t\tServiceUtils.invokeOnConnection(conn, \"onMessageFromServer\", params.toArray());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}","id":13002,"modified_method":"private void sendMessageToClient(ClientMessage message) {\r\n\t\tif (message.getType().equals(ClientMessage.BROADCAST)) {\r\n\t\t\tIScope scope = scopes.get(message.getDest());\r\n\t\t\tif (scope != null) {\r\n\t\t\t\tList<Object> params = new ArrayList<Object>();\r\n\t\t\t\tparams.add(message.getMessageName());\r\n\t\t\t\tparams.add(message.getMessage());\r\n\t\t\t\tServiceUtils.invokeOnAllConnections(scope, \"onMessageFromServer\", params.toArray());\t\t\t\t\r\n\t\t\t}\r\n\t\t} else if (message.getType().equals(ClientMessage.DIRECT)) {\r\n\t\t\tIConnection conn = connections.get(message.getDest());\r\n\t\t\tif (conn != null) {\r\n\t\t\t\tif (conn.isConnected()) {\r\n\t\t\t\t\tList<Object> params = new ArrayList<Object>();\r\n\t\t\t\t\tparams.add(message.getMessageName());\r\n\t\t\t\t\tparams.add(message.getMessage());\r\n\t\t\t\t\tServiceUtils.invokeOnConnection(conn, \"onMessageFromServer\", params.toArray());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}","commit_id":"45faed3019f66e1091ba30b300758165524e06cd","url":"https://github.com/bigbluebutton/bigbluebutton"},{"original_method":"public void sendAnnotationHistory(String userid) {\r\n\t\tMap<String, Object> message = new HashMap<String, Object>();\r\n\t\tmessage.put(\"type\", \"pencil\");\r\n\t\t\r\n\t\tClientMessage m = new ClientMessage(ClientMessage.DIRECT, userid, \"receiveAnnotationHistory\", message);\r\n\t\tconnInvokerService.sendMessage(m);\r\n\t}","id":13003,"modified_method":"public void sendAnnotationHistory(String userid) {\r\n\t\tMap<String, Object> message = new HashMap<String, Object>();\t\t\r\n\t\tList<Map<String, Object>> annotations = roomManager.getRoom(getLocalScope().getName()).getAnnotations();\r\n\t\tmessage.put(\"count\", new Integer(annotations.size()));\r\n\t\tmessage.put(\"annotations\", annotations);\r\n\t\tClientMessage m = new ClientMessage(ClientMessage.DIRECT, userid, \"RequestAnnotationHistoryReply\", message);\r\n\t\tconnInvokerService.sendMessage(m);\r\n\t}","commit_id":"45faed3019f66e1091ba30b300758165524e06cd","url":"https://github.com/bigbluebutton/bigbluebutton"},{"original_method":"public void enableWhiteboard(boolean enabled){\r\n\t\troomManager.getRoom(getLocalScope().getName()).setWhiteboardEnabled(enabled);\r\n\t\tISharedObject drawSO = getSharedObject(getLocalScope(), WHITEBOARD_SHARED_OBJECT);\r\n\t\tList<Boolean> arguments = new ArrayList<Boolean>();\r\n\t\targuments.add(enabled);\r\n\t\tdrawSO.sendMessage(\"modifyEnabledCallback\", arguments);\r\n\t}","id":13004,"modified_method":"public void enableWhiteboard(boolean enabled) {\r\n\t\troomManager.getRoom(getLocalScope().getName()).setWhiteboardEnabled(enabled);\r\n//\t\tISharedObject drawSO = getSharedObject(getLocalScope(), WHITEBOARD_SHARED_OBJECT);\r\n//\t\tList<Boolean> arguments = new ArrayList<Boolean>();\r\n//\t\targuments.add(enabled);\r\n//\t\tdrawSO.sendMessage(\"modifyEnabledCallback\", arguments);\r\n\r\n\t\tMap<String, Object> message = new HashMap<String, Object>();\r\n\t\tmessage.put(\"enabled\", roomManager.getRoom(getLocalScope().getName()).isWhiteboardEnabled());\r\n\t\tClientMessage m = new ClientMessage(ClientMessage.BROADCAST, getLocalScope().getName(), \"EnableWhiteboardCommand\", message);\r\n\t\tconnInvokerService.sendMessage(m);\r\n\t}","commit_id":"45faed3019f66e1091ba30b300758165524e06cd","url":"https://github.com/bigbluebutton/bigbluebutton"},{"original_method":"public boolean isWhiteboardEnabled(){\r\n\t\treturn roomManager.getRoom(getLocalScope().getName()).isWhiteboardEnabled();\r\n\t}","id":13005,"modified_method":"public void isWhiteboardEnabled(String userid) {\r\n\t\tMap<String, Object> message = new HashMap<String, Object>();\r\n\t\tmessage.put(\"enabled\", roomManager.getRoom(getLocalScope().getName()).isWhiteboardEnabled());\r\n\t\tClientMessage m = new ClientMessage(ClientMessage.DIRECT, userid, \"IsWhiteboardEnabledReply\", message);\r\n\t\tconnInvokerService.sendMessage(m);\r\n\t}","commit_id":"45faed3019f66e1091ba30b300758165524e06cd","url":"https://github.com/bigbluebutton/bigbluebutton"},{"original_method":"public void sendAnnotation(Map<String, Object> annotation) {\r\n\t\tISharedObject drawSO = getSharedObject(getLocalScope(), WHITEBOARD_SHARED_OBJECT);\r\n\t\troomManager.getRoom(getLocalScope().getName()).addAnnotation(annotation);\r\n\t\tList<Object> arguments = new ArrayList<Object>();\r\n\t\targuments.add(annotation);\r\n\t\tdrawSO.sendMessage(\"receiveAnnotation\", arguments);\r\n\t}","id":13006,"modified_method":"public void sendAnnotation(Map<String, Object> annotation) {\r\n//\t\tISharedObject drawSO = getSharedObject(getLocalScope(), WHITEBOARD_SHARED_OBJECT);\r\n//\t\troomManager.getRoom(getLocalScope().getName()).addAnnotation(annotation);\r\n//\t\tList<Object> arguments = new ArrayList<Object>();\r\n//\t\targuments.add(annotation);\r\n//\t\tdrawSO.sendMessage(\"receiveAnnotation\", arguments);\r\n\t\t\r\n\t\tMap<String, Object> message = new HashMap<String, Object>();\t\t\r\n\t\troomManager.getRoom(getLocalScope().getName()).addAnnotation(annotation);\r\n\t\tmessage.put(\"annotation\", annotation);\r\n\t\tClientMessage m = new ClientMessage(ClientMessage.BROADCAST, getLocalScope().getName(), \"NewAnnotationCommand\", annotation);\r\n\t\tconnInvokerService.sendMessage(m);\r\n\t}","commit_id":"45faed3019f66e1091ba30b300758165524e06cd","url":"https://github.com/bigbluebutton/bigbluebutton"},{"original_method":"public boolean isWhiteboardEnabled(){\r\n\t\treturn application.isWhiteboardEnabled();\r\n\t}","id":13007,"modified_method":"public void isWhiteboardEnabled(){\r\n\t\tapplication.isWhiteboardEnabled(Red5.getConnectionLocal().getClient().getId());\r\n\t}","commit_id":"45faed3019f66e1091ba30b300758165524e06cd","url":"https://github.com/bigbluebutton/bigbluebutton"},{"original_method":"public void sendAnnotation(Map<String, Object> annotation) {\r\n\t\tfor (Map.Entry<String, Object> entry : annotation.entrySet()) {\r\n\t\t    String key = entry.getKey();\r\n\t\t    Object value = entry.getValue();\r\n\t\t    \r\n\t\t    if (key.equals(\"points\")) {\r\n\t\t    \tString points = \"points=[\";\r\n\t\t    \tArrayList<Double> v = (ArrayList<Double>) value;\r\n\t\t    \tlog.debug(points + pointsToString(v) + \"]\");\r\n\t\t    } else {\r\n\t\t    \tlog.debug(key + \"=[\" + value + \"]\");\r\n\t\t    }\r\n\t\t}\r\n\t\t\r\n\t\tapplication.sendAnnotation(annotation);\r\n\t}","id":13008,"modified_method":"public void sendAnnotation(Map<String, Object> annotation) {\r\n//\t\tfor (Map.Entry<String, Object> entry : annotation.entrySet()) {\r\n//\t\t    String key = entry.getKey();\r\n//\t\t    Object value = entry.getValue();\r\n\t\t    \r\n//\t\t    if (key.equals(\"points\")) {\r\n//\t\t    \tString points = \"points=[\";\r\n//\t\t    \tArrayList<Double> v = (ArrayList<Double>) value;\r\n//\t\t    \tlog.debug(points + pointsToString(v) + \"]\");\r\n//\t\t    } else {\r\n//\t\t    \tlog.debug(key + \"=[\" + value + \"]\");\r\n//\t\t    }\r\n//\t\t}\r\n\t\t\r\n\t\tapplication.sendAnnotation(annotation);\r\n\t}","commit_id":"45faed3019f66e1091ba30b300758165524e06cd","url":"https://github.com/bigbluebutton/bigbluebutton"},{"original_method":"private String pointsToString(ArrayList<Double> points){\r\n    \tString datapoints = \"\";\r\n    \tfor (Double i : points) {\r\n    \t\tdatapoints += i + \",\";\r\n    \t}\r\n    \t// Trim the trailing comma\r\n    \tlog.debug(\"Data Point = \" + datapoints);\r\n    \treturn datapoints.substring(0, datapoints.length() - 1);\r\n\t}","id":13009,"modified_method":"private String pointsToString(ArrayList<Double> points){\r\n    \tString datapoints = \"\";\r\n    \tfor (Double i : points) {\r\n    \t\tdatapoints += i + \",\";\r\n    \t}\r\n    \t// Trim the trailing comma\r\n//    \tlog.debug(\"Data Point = \" + datapoints);\r\n    \treturn datapoints.substring(0, datapoints.length() - 1);\r\n\t}","commit_id":"45faed3019f66e1091ba30b300758165524e06cd","url":"https://github.com/bigbluebutton/bigbluebutton"},{"original_method":"private void findFields() {\n        //traverse class hierarchy and find all annotated fields\n        for(Class<?> clazz=getObject().getClass();clazz != null; clazz=clazz.getSuperclass()) {\n\n            Field[] fields=clazz.getDeclaredFields();\n            for(Field field:fields) {\n                ManagedAttribute attr=field.getAnnotation(ManagedAttribute.class);\n                if(attr != null) {\n                    String fieldName = renameToJavaCodingConvention(field.getName());\n                    MBeanAttributeInfo info=new MBeanAttributeInfo(fieldName,\n                                                                   field.getType().getCanonicalName(),\n                                                                   attr.description(),\n                                                                   true,\n                                                                   !Modifier.isFinal(field.getModifiers()) && attr.writable(),\n                                                                   false);\n\n                    atts.put(fieldName, new FieldAttributeEntry(info, field));\n                }\n            }\n        }\n    }","id":13010,"modified_method":"private void findFields() {\n        //traverse class hierarchy and find all annotated fields\n        for(Class<?> clazz=getObject().getClass();clazz != null; clazz=clazz.getSuperclass()) {\n\n            Field[] fields=clazz.getDeclaredFields();\n            for(Field field:fields) {\n                ManagedAttribute attr=field.getAnnotation(ManagedAttribute.class);\n                Property prop=field.getAnnotation(Property.class);\n                boolean expose_prop=prop != null && prop.exposeAsManagedAttribute();\n                boolean expose=attr != null || expose_prop;\n\n                if(expose) {\n                    String fieldName = Util.attributeNameToMethodName(field.getName());\n                    String descr=attr != null? attr.description() : prop.description();\n                    boolean writable=attr != null? attr.writable() : prop.writable();\n\n                    MBeanAttributeInfo info=new MBeanAttributeInfo(fieldName,\n                                                                   field.getType().getCanonicalName(),\n                                                                   descr,\n                                                                   true,\n                                                                   !Modifier.isFinal(field.getModifiers()) && writable,\n                                                                   false);\n\n                    atts.put(fieldName, new FieldAttributeEntry(info, field));\n                }\n            }\n        }\n    }","commit_id":"a0fae81101b7c28dfbd7191c8c930a94fa41f353","url":"https://github.com/belaban/JGroups"},{"original_method":"private void findDescription() {\n        MBean mbean=getObject().getClass().getAnnotation(MBean.class);\n        if(mbean != null && mbean.description() != null && mbean.description().trim().length() > 0) {\n            description=mbean.description();\n            MBeanAttributeInfo info=new MBeanAttributeInfo(ResourceDMBean.MBEAN_DESCRITION,\n                                                           \"java.lang.String\",\n                                                           \"@MBean description\",\n                                                           true,\n                                                           false,\n                                                           false);\n            try {\n                atts.put(ResourceDMBean.MBEAN_DESCRITION,\n                         new FieldAttributeEntry(info,getClass().getDeclaredField(\"description\")));\n            }\n            catch(NoSuchFieldException e) {\n               //this should not happen unless somebody removes description field \n               log.warn(\"Could not reflect field description of this class. Was it removed?\");               \n            }\n        }\n    }","id":13011,"modified_method":"private void findDescription() {\n        MBean mbean=getObject().getClass().getAnnotation(MBean.class);\n        if(mbean != null && mbean.description() != null && mbean.description().trim().length() > 0) {\n            description=mbean.description();\n            MBeanAttributeInfo info=new MBeanAttributeInfo(ResourceDMBean.MBEAN_DESCRITION,\n                                                           \"java.lang.String\",\n                                                           \"MBean description\",\n                                                           true,\n                                                           false,\n                                                           false);\n            try {\n                atts.put(ResourceDMBean.MBEAN_DESCRITION,\n                         new FieldAttributeEntry(info,getClass().getDeclaredField(\"description\")));\n            }\n            catch(NoSuchFieldException e) {\n               //this should not happen unless somebody removes description field \n               log.warn(\"Could not reflect field description of this class. Was it removed?\");               \n            }\n        }\n    }","commit_id":"a0fae81101b7c28dfbd7191c8c930a94fa41f353","url":"https://github.com/belaban/JGroups"},{"original_method":"private void exposeManagedAttribute(Method method){\n        String methodName=method.getName();\n        if(!methodName.startsWith(\"get\") && !methodName.startsWith(\"set\")\n           && !methodName.startsWith(\"is\")) {\n            if(log.isWarnEnabled())\n                log.warn(\"method name \" + methodName\n                         + \" doesn't start with \\\"get\\\", \\\"set\\\", or \\\"is\\\"\"\n                         + \", but is annotated with @ManagedAttribute: will be ignored\");\n        }\n        else {\n            ManagedAttribute attr = method.getAnnotation(ManagedAttribute.class);\n            MBeanAttributeInfo info=null;\n            //Is name field of @ManagedAttributed used?\n            String attributeName=attr.name().length()>0?attr.name().trim():null;\n            boolean writeAttribute=false;\n            if(isSetMethod(method)) { // setter\n                attributeName=(attributeName==null)?methodName.substring(3):attributeName;\n                info=new MBeanAttributeInfo(attributeName,\n                                            method.getParameterTypes()[0].getCanonicalName(),\n                                            attr.description(),\n                                            true,\n                                            true,\n                                            false);\n                writeAttribute=true;\n            }\n            else { // getter\n                if(method.getParameterTypes().length == 0 && method.getReturnType() != java.lang.Void.TYPE) {\n                    boolean hasSetter=atts.containsKey(attributeName);\n                    //we found is method\n                    if(methodName.startsWith(\"is\")) {\n                        attributeName=(attributeName==null)?methodName.substring(2):attributeName;\n                        info=new MBeanAttributeInfo(attributeName,\n                                                    method.getReturnType().getCanonicalName(),\n                                                    attr.description(),\n                                                    true,\n                                                    hasSetter,\n                                                    true);\n                    }\n                    else {\n                        //this has to be get\n                        attributeName=(attributeName==null)?methodName.substring(3):attributeName;\n                        info=new MBeanAttributeInfo(attributeName,\n                                                    method.getReturnType().getCanonicalName(),\n                                                    attr.description(),\n                                                    true,\n                                                    hasSetter,\n                                                    false);\n                    }\n                }\n                else {\n                    if(log.isWarnEnabled()) {\n                        log.warn(\"Method \" + method.getName() + \" must have a valid return type and zero parameters\");\n                    }\n                    //silently skip this method\n                    return;\n                }\n            }                                      \n            \n            AttributeEntry ae=atts.get(attributeName);\n            //is it a read method?\n            if(!writeAttribute) {\n                //we already have annotated field as read\n                if(ae instanceof FieldAttributeEntry && ae.getInfo().isReadable()) {\n                    log.warn(\"not adding annotated method \" + method + \" since we already have read attribute\");\n                }\n                //we already have annotated set method\n                else if(ae instanceof MethodAttributeEntry) {\n                    MethodAttributeEntry mae=(MethodAttributeEntry)ae;\n                    if(mae.hasSetMethod()) {\n                        atts.put(attributeName,\n                                 new MethodAttributeEntry(mae.getInfo(), mae.getSetMethod(), method));\n                    }\n                } //we don't have such entry \n                else {\n                    atts.put(attributeName, new MethodAttributeEntry(info, null, method));\n                }\n            }//is it a set method?\n            else {                        \n                if(ae instanceof FieldAttributeEntry) {\n                    //we already have annotated field as write\n                    if(ae.getInfo().isWritable()) {\n                        log.warn(\"Not adding annotated method \" + methodName + \" since we already have writable attribute\");\n                    }\n                    else {\n                        //we already have annotated field as read\n                        //lets make the field writable\n                        Field f = ((FieldAttributeEntry)ae).getField();\n                        MBeanAttributeInfo i=new MBeanAttributeInfo(ae.getInfo().getName(),\n                                                                    f.getType().getCanonicalName(),\n                                                                    attr.description(),\n                                                                    true,\n                                                                    !Modifier.isFinal(f.getModifiers()),\n                                                                    false);                               \n                        atts.put(attributeName,new FieldAttributeEntry(i,f));\n                    }\n                }\n                //we already have annotated getOrIs method\n                else if(ae instanceof MethodAttributeEntry) {\n                    MethodAttributeEntry mae=(MethodAttributeEntry)ae;\n                    if(mae.hasIsOrGetMethod()) {\n                        atts.put(attributeName,\n                                 new MethodAttributeEntry(info,\n                                                          method,\n                                                          mae.getIsOrGetMethod()));\n                    }\n                } //we don't have such entry \n                else {\n                    atts.put(attributeName, new MethodAttributeEntry(info, method, null));\n                }\n            }\n        }\n    }","id":13012,"modified_method":"private void exposeManagedAttribute(Method method){\n        String methodName=method.getName();\n        if(!methodName.startsWith(\"get\") && !methodName.startsWith(\"set\") && !methodName.startsWith(\"is\")) {\n            if(log.isWarnEnabled())\n                log.warn(\"method name \" + methodName + \" doesn't start with \\\"get\\\", \\\"set\\\", or \\\"is\\\"\"\n                        + \", but is annotated with @ManagedAttribute: will be ignored\");\n            return;\n        }\n        ManagedAttribute attr = method.getAnnotation(ManagedAttribute.class);\n        Property prop=method.getAnnotation(Property.class);\n\n        boolean expose_prop=prop != null && prop.exposeAsManagedAttribute();\n        boolean expose=attr != null || expose_prop;\n        if(!expose)\n            return;\n\n        // Is name field of @ManagedAttributed used?\n        String attributeName=attr != null? attr.name() : null;\n        if(attributeName != null && attributeName.trim().length() > 0)\n            attributeName=attributeName.trim();\n        else\n            attributeName=null;\n            \n        String descr=attr != null ? attr.description() : prop != null? prop.description() : null;\n\n        boolean writeAttribute=false;\n        MBeanAttributeInfo info=null;\n        if(isSetMethod(method)) { // setter\n            attributeName=(attributeName==null)?methodName.substring(3):attributeName;\n            info=new MBeanAttributeInfo(attributeName,\n                                        method.getParameterTypes()[0].getCanonicalName(),\n                                        descr,\n                                        true,\n                                        true,\n                                        false);\n            writeAttribute=true;\n        }\n        else { // getter\n            if(method.getParameterTypes().length == 0 && method.getReturnType() != java.lang.Void.TYPE) {\n                boolean hasSetter=atts.containsKey(attributeName);\n                //we found is method\n                if(methodName.startsWith(\"is\")) {\n                    attributeName=(attributeName==null)?methodName.substring(2):attributeName;\n                    info=new MBeanAttributeInfo(attributeName,\n                                                method.getReturnType().getCanonicalName(),\n                                                descr,\n                                                true,\n                                                hasSetter,\n                                                true);\n                }\n                else {\n                    // this has to be get\n                    attributeName=(attributeName==null)?methodName.substring(3):attributeName;\n                    info=new MBeanAttributeInfo(attributeName,\n                                                method.getReturnType().getCanonicalName(),\n                                                descr,\n                                                true,\n                                                hasSetter,\n                                                false);\n                }\n            }\n            else {\n                if(log.isWarnEnabled()) {\n                    log.warn(\"Method \" + method.getName() + \" must have a valid return type and zero parameters\");\n                }\n                //silently skip this method\n                return;\n            }\n        }\n            \n        AttributeEntry ae=atts.get(attributeName);\n        //is it a read method?\n        if(!writeAttribute) {\n            //we already have annotated field as read\n            if(ae instanceof FieldAttributeEntry && ae.getInfo().isReadable()) {\n                log.warn(\"not adding annotated method \" + method + \" since we already have read attribute\");\n            }\n            //we already have annotated set method\n            else if(ae instanceof MethodAttributeEntry) {\n                MethodAttributeEntry mae=(MethodAttributeEntry)ae;\n                if(mae.hasSetMethod()) {\n                    atts.put(attributeName,\n                             new MethodAttributeEntry(mae.getInfo(), mae.getSetMethod(), method));\n                }\n            } //we don't have such entry\n            else {\n                atts.put(attributeName, new MethodAttributeEntry(info, findSetter(obj.getClass(), attributeName), method));\n            }\n        } //is it a set method?\n        else {\n            if(ae instanceof FieldAttributeEntry) {\n                //we already have annotated field as write\n                if(ae.getInfo().isWritable()) {\n                    log.warn(\"Not adding annotated method \" + methodName + \" since we already have writable attribute\");\n                }\n                else {\n                    //we already have annotated field as read\n                    //lets make the field writable\n                    Field f = ((FieldAttributeEntry)ae).getField();\n                    MBeanAttributeInfo i=new MBeanAttributeInfo(ae.getInfo().getName(),\n                                                                f.getType().getCanonicalName(),\n                                                                descr,\n                                                                true,\n                                                                !Modifier.isFinal(f.getModifiers()),\n                                                                false);\n                    atts.put(attributeName,new FieldAttributeEntry(i,f));\n                }\n            }\n            //we already have annotated getOrIs method\n            else if(ae instanceof MethodAttributeEntry) {\n                MethodAttributeEntry mae=(MethodAttributeEntry)ae;\n                if(mae.hasIsOrGetMethod()) {\n                    atts.put(attributeName,\n                             new MethodAttributeEntry(info,\n                                                      method,\n                                                      mae.getIsOrGetMethod()));\n                }\n            } // we don't have such entry\n            else {\n                atts.put(attributeName, new MethodAttributeEntry(info, method, findGetter(obj.getClass(), attributeName)));\n            }\n        }\n    }","commit_id":"a0fae81101b7c28dfbd7191c8c930a94fa41f353","url":"https://github.com/belaban/JGroups"},{"original_method":"private void findMethods() {\n        //find all methods but don't include methods from Object class               \n        List<Method> methods = new ArrayList<Method>(Arrays.asList(getObject().getClass().getMethods()));\n        List<Method> objectMethods = new ArrayList<Method>(Arrays.asList(Object.class.getMethods()));\n        methods.removeAll(objectMethods);\n               \n        for(Method method:methods) {\n            //does method have @ManagedAttribute annotation?\n            if(method.isAnnotationPresent(ManagedAttribute.class)) {\n                exposeManagedAttribute(method);\n            }\n            //or @ManagedOperation\n            else if (method.isAnnotationPresent(ManagedOperation.class) || isMBeanAnnotationPresentWithExposeAll()){\n                exposeManagedOperation(method);                \n            }                     \n        }\n    }","id":13013,"modified_method":"private void findMethods() {\n        //find all methods but don't include methods from Object class               \n        List<Method> methods = new ArrayList<Method>(Arrays.asList(getObject().getClass().getMethods()));\n        List<Method> objectMethods = new ArrayList<Method>(Arrays.asList(Object.class.getMethods()));\n        methods.removeAll(objectMethods);\n               \n        for(Method method:methods) {\n            //does method have @ManagedAttribute annotation?\n            if(method.isAnnotationPresent(ManagedAttribute.class) || method.isAnnotationPresent(Property.class)) {\n                exposeManagedAttribute(method);\n            }\n            //or @ManagedOperation\n            else if (method.isAnnotationPresent(ManagedOperation.class) || isMBeanAnnotationPresentWithExposeAll()){\n                exposeManagedOperation(method);                \n            }                     \n        }\n    }","commit_id":"a0fae81101b7c28dfbd7191c8c930a94fa41f353","url":"https://github.com/belaban/JGroups"},{"original_method":"private void findDescription() {\n        MBean mbean=getObject().getClass().getAnnotation(MBean.class);\n        if(mbean != null && mbean.description() != null && mbean.description().trim().length() > 0) {\n            description=mbean.description();\n            MBeanAttributeInfo info=new MBeanAttributeInfo(ResourceDMBean.MBEAN_DESCRITION,\n                                                           \"java.lang.String\",\n                                                           \"@MBean description\",\n                                                           true,\n                                                           false,\n                                                           false);\n            try {\n                atts.put(ResourceDMBean.MBEAN_DESCRITION,\n                         new FieldAttributeEntry(info,getClass().getDeclaredField(\"description\")));\n            }\n            catch(NoSuchFieldException e) {\n               //this should not happen unless somebody removes description field \n               log.warn(\"Could not reflect field description of this class. Was it removed?\");               \n            }\n        }\n    }","id":13014,"modified_method":"private void findDescription() {\n        MBean mbean=getObject().getClass().getAnnotation(MBean.class);\n        if(mbean != null && mbean.description() != null && mbean.description().trim().length() > 0) {\n            description=mbean.description();\n            MBeanAttributeInfo info=new MBeanAttributeInfo(ResourceDMBean.MBEAN_DESCRITION,\n                                                           \"java.lang.String\",\n                                                           \"MBean description\",\n                                                           true,\n                                                           false,\n                                                           false);\n            try {\n                atts.put(ResourceDMBean.MBEAN_DESCRITION,\n                         new FieldAttributeEntry(info,getClass().getDeclaredField(\"description\")));\n            }\n            catch(NoSuchFieldException e) {\n               //this should not happen unless somebody removes description field \n               log.warn(\"Could not reflect field description of this class. Was it removed?\");               \n            }\n        }\n    }","commit_id":"b8e59d0cb4041d5a6fefe72686c8487ba977ac54","url":"https://github.com/belaban/JGroups"},{"original_method":"private void exposeManagedAttribute(Method method){\n        String methodName=method.getName();\n        if(!methodName.startsWith(\"get\") && !methodName.startsWith(\"set\")\n           && !methodName.startsWith(\"is\")) {\n            if(log.isWarnEnabled())\n                log.warn(\"method name \" + methodName\n                         + \" doesn't start with \\\"get\\\", \\\"set\\\", or \\\"is\\\"\"\n                         + \", but is annotated with @ManagedAttribute: will be ignored\");\n        }\n        else {\n            ManagedAttribute attr = method.getAnnotation(ManagedAttribute.class);\n            MBeanAttributeInfo info=null;\n            //Is name field of @ManagedAttributed used?\n            String attributeName=attr.name().length()>0?attr.name().trim():null;\n            boolean writeAttribute=false;\n            if(isSetMethod(method)) { // setter\n                attributeName=(attributeName==null)?methodName.substring(3):attributeName;\n                info=new MBeanAttributeInfo(attributeName,\n                                            method.getParameterTypes()[0].getCanonicalName(),\n                                            attr.description(),\n                                            true,\n                                            true,\n                                            false);\n                writeAttribute=true;\n            }\n            else { // getter\n                if(method.getParameterTypes().length == 0 && method.getReturnType() != java.lang.Void.TYPE) {\n                    boolean hasSetter=atts.containsKey(attributeName);\n                    //we found is method\n                    if(methodName.startsWith(\"is\")) {\n                        attributeName=(attributeName==null)?methodName.substring(2):attributeName;\n                        info=new MBeanAttributeInfo(attributeName,\n                                                    method.getReturnType().getCanonicalName(),\n                                                    attr.description(),\n                                                    true,\n                                                    hasSetter,\n                                                    true);\n                    }\n                    else {\n                        //this has to be get\n                        attributeName=(attributeName==null)?methodName.substring(3):attributeName;\n                        info=new MBeanAttributeInfo(attributeName,\n                                                    method.getReturnType().getCanonicalName(),\n                                                    attr.description(),\n                                                    true,\n                                                    hasSetter,\n                                                    false);\n                    }\n                }\n                else {\n                    if(log.isWarnEnabled()) {\n                        log.warn(\"Method \" + method.getName() + \" must have a valid return type and zero parameters\");\n                    }\n                    //silently skip this method\n                    return;\n                }\n            }                                      \n            \n            AttributeEntry ae=atts.get(attributeName);\n            //is it a read method?\n            if(!writeAttribute) {\n                //we already have annotated field as read\n                if(ae instanceof FieldAttributeEntry && ae.getInfo().isReadable()) {\n                    log.warn(\"not adding annotated method \" + method + \" since we already have read attribute\");\n                }\n                //we already have annotated set method\n                else if(ae instanceof MethodAttributeEntry) {\n                    MethodAttributeEntry mae=(MethodAttributeEntry)ae;\n                    if(mae.hasSetMethod()) {\n                        atts.put(attributeName,\n                                 new MethodAttributeEntry(mae.getInfo(), mae.getSetMethod(), method));\n                    }\n                } //we don't have such entry \n                else {\n                    atts.put(attributeName, new MethodAttributeEntry(info, null, method));\n                }\n            }//is it a set method?\n            else {                        \n                if(ae instanceof FieldAttributeEntry) {\n                    //we already have annotated field as write\n                    if(ae.getInfo().isWritable()) {\n                        log.warn(\"Not adding annotated method \" + methodName + \" since we already have writable attribute\");\n                    }\n                    else {\n                        //we already have annotated field as read\n                        //lets make the field writable\n                        Field f = ((FieldAttributeEntry)ae).getField();\n                        MBeanAttributeInfo i=new MBeanAttributeInfo(ae.getInfo().getName(),\n                                                                    f.getType().getCanonicalName(),\n                                                                    attr.description(),\n                                                                    true,\n                                                                    !Modifier.isFinal(f.getModifiers()),\n                                                                    false);                               \n                        atts.put(attributeName,new FieldAttributeEntry(i,f));\n                    }\n                }\n                //we already have annotated getOrIs method\n                else if(ae instanceof MethodAttributeEntry) {\n                    MethodAttributeEntry mae=(MethodAttributeEntry)ae;\n                    if(mae.hasIsOrGetMethod()) {\n                        atts.put(attributeName,\n                                 new MethodAttributeEntry(info,\n                                                          method,\n                                                          mae.getIsOrGetMethod()));\n                    }\n                } //we don't have such entry \n                else {\n                    atts.put(attributeName, new MethodAttributeEntry(info, method, null));\n                }\n            }\n        }\n    }","id":13015,"modified_method":"private void exposeManagedAttribute(Method method){\n        String methodName=method.getName();\n        if(!methodName.startsWith(\"get\") && !methodName.startsWith(\"set\") && !methodName.startsWith(\"is\")) {\n            if(log.isWarnEnabled())\n                log.warn(\"method name \" + methodName + \" doesn't start with \\\"get\\\", \\\"set\\\", or \\\"is\\\"\"\n                        + \", but is annotated with @ManagedAttribute: will be ignored\");\n            return;\n        }\n        ManagedAttribute attr = method.getAnnotation(ManagedAttribute.class);\n        Property prop=method.getAnnotation(Property.class);\n\n        boolean expose_prop=prop != null && prop.exposeAsManagedAttribute();\n        boolean expose=attr != null || expose_prop;\n        if(!expose)\n            return;\n\n        // Is name field of @ManagedAttributed used?\n        String attributeName=attr != null? attr.name() : null;\n        if(attributeName != null && attributeName.trim().length() > 0)\n            attributeName=attributeName.trim();\n        else\n            attributeName=null;\n            \n        String descr=attr != null ? attr.description() : prop != null? prop.description() : null;\n\n        boolean writeAttribute=false;\n        MBeanAttributeInfo info=null;\n        if(isSetMethod(method)) { // setter\n            attributeName=(attributeName==null)?methodName.substring(3):attributeName;\n            info=new MBeanAttributeInfo(attributeName,\n                                        method.getParameterTypes()[0].getCanonicalName(),\n                                        descr,\n                                        true,\n                                        true,\n                                        false);\n            writeAttribute=true;\n        }\n        else { // getter\n            if(method.getParameterTypes().length == 0 && method.getReturnType() != java.lang.Void.TYPE) {\n                boolean hasSetter=atts.containsKey(attributeName);\n                //we found is method\n                if(methodName.startsWith(\"is\")) {\n                    attributeName=(attributeName==null)?methodName.substring(2):attributeName;\n                    info=new MBeanAttributeInfo(attributeName,\n                                                method.getReturnType().getCanonicalName(),\n                                                descr,\n                                                true,\n                                                hasSetter,\n                                                true);\n                }\n                else {\n                    // this has to be get\n                    attributeName=(attributeName==null)?methodName.substring(3):attributeName;\n                    info=new MBeanAttributeInfo(attributeName,\n                                                method.getReturnType().getCanonicalName(),\n                                                descr,\n                                                true,\n                                                hasSetter,\n                                                false);\n                }\n            }\n            else {\n                if(log.isWarnEnabled()) {\n                    log.warn(\"Method \" + method.getName() + \" must have a valid return type and zero parameters\");\n                }\n                //silently skip this method\n                return;\n            }\n        }\n            \n        AttributeEntry ae=atts.get(attributeName);\n        //is it a read method?\n        if(!writeAttribute) {\n            //we already have annotated field as read\n            if(ae instanceof FieldAttributeEntry && ae.getInfo().isReadable()) {\n                log.warn(\"not adding annotated method \" + method + \" since we already have read attribute\");\n            }\n            //we already have annotated set method\n            else if(ae instanceof MethodAttributeEntry) {\n                MethodAttributeEntry mae=(MethodAttributeEntry)ae;\n                if(mae.hasSetMethod()) {\n                    atts.put(attributeName,\n                             new MethodAttributeEntry(mae.getInfo(), mae.getSetMethod(), method));\n                }\n            } //we don't have such entry\n            else {\n                atts.put(attributeName, new MethodAttributeEntry(info, findSetter(obj.getClass(), attributeName), method));\n            }\n        } //is it a set method?\n        else {\n            if(ae instanceof FieldAttributeEntry) {\n                //we already have annotated field as write\n                if(ae.getInfo().isWritable()) {\n                    log.warn(\"Not adding annotated method \" + methodName + \" since we already have writable attribute\");\n                }\n                else {\n                    //we already have annotated field as read\n                    //lets make the field writable\n                    Field f = ((FieldAttributeEntry)ae).getField();\n                    MBeanAttributeInfo i=new MBeanAttributeInfo(ae.getInfo().getName(),\n                                                                f.getType().getCanonicalName(),\n                                                                descr,\n                                                                true,\n                                                                !Modifier.isFinal(f.getModifiers()),\n                                                                false);\n                    atts.put(attributeName,new FieldAttributeEntry(i,f));\n                }\n            }\n            //we already have annotated getOrIs method\n            else if(ae instanceof MethodAttributeEntry) {\n                MethodAttributeEntry mae=(MethodAttributeEntry)ae;\n                if(mae.hasIsOrGetMethod()) {\n                    atts.put(attributeName,\n                             new MethodAttributeEntry(info,\n                                                      method,\n                                                      mae.getIsOrGetMethod()));\n                }\n            } // we don't have such entry\n            else {\n                atts.put(attributeName, new MethodAttributeEntry(info, method, findGetter(obj.getClass(), attributeName)));\n            }\n        }\n    }","commit_id":"b8e59d0cb4041d5a6fefe72686c8487ba977ac54","url":"https://github.com/belaban/JGroups"},{"original_method":"private void findMethods() {\n        //find all methods but don't include methods from Object class               \n        List<Method> methods = new ArrayList<Method>(Arrays.asList(getObject().getClass().getMethods()));\n        List<Method> objectMethods = new ArrayList<Method>(Arrays.asList(Object.class.getMethods()));\n        methods.removeAll(objectMethods);\n               \n        for(Method method:methods) {\n            //does method have @ManagedAttribute annotation?\n            if(method.isAnnotationPresent(ManagedAttribute.class)) {\n                exposeManagedAttribute(method);\n            }\n            //or @ManagedOperation\n            else if (method.isAnnotationPresent(ManagedOperation.class) || isMBeanAnnotationPresentWithExposeAll()){\n                exposeManagedOperation(method);                \n            }                     \n        }\n    }","id":13016,"modified_method":"private void findMethods() {\n        //find all methods but don't include methods from Object class               \n        List<Method> methods = new ArrayList<Method>(Arrays.asList(getObject().getClass().getMethods()));\n        List<Method> objectMethods = new ArrayList<Method>(Arrays.asList(Object.class.getMethods()));\n        methods.removeAll(objectMethods);\n               \n        for(Method method:methods) {\n            //does method have @ManagedAttribute annotation?\n            if(method.isAnnotationPresent(ManagedAttribute.class) || method.isAnnotationPresent(Property.class)) {\n                exposeManagedAttribute(method);\n            }\n            //or @ManagedOperation\n            else if (method.isAnnotationPresent(ManagedOperation.class) || isMBeanAnnotationPresentWithExposeAll()){\n                exposeManagedOperation(method);                \n            }                     \n        }\n    }","commit_id":"b8e59d0cb4041d5a6fefe72686c8487ba977ac54","url":"https://github.com/belaban/JGroups"},{"original_method":"private void findFields() {\n        //traverse class hierarchy and find all annotated fields\n        for(Class<?> clazz=getObject().getClass();clazz != null; clazz=clazz.getSuperclass()) {\n\n            Field[] fields=clazz.getDeclaredFields();\n            for(Field field:fields) {\n                ManagedAttribute attr=field.getAnnotation(ManagedAttribute.class);\n                if(attr != null) {\n                    String fieldName = renameToJavaCodingConvention(field.getName());\n                    MBeanAttributeInfo info=new MBeanAttributeInfo(fieldName,\n                                                                   field.getType().getCanonicalName(),\n                                                                   attr.description(),\n                                                                   true,\n                                                                   !Modifier.isFinal(field.getModifiers()) && attr.writable(),\n                                                                   false);\n\n                    atts.put(fieldName, new FieldAttributeEntry(info, field));\n                }\n            }\n        }\n    }","id":13017,"modified_method":"private void findFields() {\n        //traverse class hierarchy and find all annotated fields\n        for(Class<?> clazz=getObject().getClass();clazz != null; clazz=clazz.getSuperclass()) {\n\n            Field[] fields=clazz.getDeclaredFields();\n            for(Field field:fields) {\n                ManagedAttribute attr=field.getAnnotation(ManagedAttribute.class);\n                Property prop=field.getAnnotation(Property.class);\n                boolean expose_prop=prop != null && prop.exposeAsManagedAttribute();\n                boolean expose=attr != null || expose_prop;\n\n                if(expose) {\n                    String fieldName = Util.attributeNameToMethodName(field.getName());\n                    String descr=attr != null? attr.description() : prop.description();\n                    boolean writable=attr != null? attr.writable() : prop.writable();\n\n                    MBeanAttributeInfo info=new MBeanAttributeInfo(fieldName,\n                                                                   field.getType().getCanonicalName(),\n                                                                   descr,\n                                                                   true,\n                                                                   !Modifier.isFinal(field.getModifiers()) && writable,\n                                                                   false);\n\n                    atts.put(fieldName, new FieldAttributeEntry(info, field));\n                }\n            }\n        }\n    }","commit_id":"b8e59d0cb4041d5a6fefe72686c8487ba977ac54","url":"https://github.com/belaban/JGroups"},{"original_method":"/**\n     * Creates a new {@link IndexSettings} instance. The given node settings will be merged with the settings in the metadata\n     * while index level settings will overwrite node settings.\n     *\n     * @param indexMetaData the index metadata this settings object is associated with\n     * @param nodeSettings the nodes settings this index is allocated on.\n     * @param indexNameMatcher a matcher that can resolve an expression to the index name or index alias\n     */\n    public IndexSettings(final IndexMetaData indexMetaData, final Settings nodeSettings, final Predicate<String> indexNameMatcher, IndexScopedSettings indexScopedSettings) {\n        scopedSettings = indexScopedSettings.copy(nodeSettings, indexMetaData);\n        this.nodeSettings = nodeSettings;\n        this.settings = Settings.builder().put(nodeSettings).put(indexMetaData.getSettings()).build();\n        this.index = new Index(indexMetaData.getIndex());\n        version = Version.indexCreated(settings);\n        uuid = settings.get(IndexMetaData.SETTING_INDEX_UUID, IndexMetaData.INDEX_UUID_NA_VALUE);\n        logger = Loggers.getLogger(getClass(), settings, index);\n        nodeName = settings.get(\"name\", \"\");\n        this.indexMetaData = indexMetaData;\n        numberOfShards = settings.getAsInt(IndexMetaData.SETTING_NUMBER_OF_SHARDS, null);\n        isShadowReplicaIndex = IndexMetaData.isIndexUsingShadowReplicas(settings);\n\n        this.defaultField = DEFAULT_FIELD_SETTING.get(settings);\n        this.queryStringLenient = QUERY_STRING_LENIENT_SETTING.get(settings);\n        this.queryStringAnalyzeWildcard = QUERY_STRING_ANALYZE_WILDCARD.get(nodeSettings);\n        this.queryStringAllowLeadingWildcard = QUERY_STRING_ALLOW_LEADING_WILDCARD.get(nodeSettings);\n        this.parseFieldMatcher = new ParseFieldMatcher(settings);\n        this.defaultAllowUnmappedFields = scopedSettings.get(ALLOW_UNMAPPED);\n        this.indexNameMatcher = indexNameMatcher;\n        this.durability = scopedSettings.get(INDEX_TRANSLOG_DURABILITY_SETTING);\n        scopedSettings.addSettingsUpdateConsumer(INDEX_TRANSLOG_DURABILITY_SETTING, this::setTranslogDurability);\n        syncInterval = INDEX_TRANSLOG_SYNC_INTERVAL_SETTING.get(settings);\n        refreshInterval = scopedSettings.get(INDEX_REFRESH_INTERVAL_SETTING);\n        scopedSettings.addSettingsUpdateConsumer(INDEX_REFRESH_INTERVAL_SETTING, this::setRefreshInterval);\n        flushThresholdSize = scopedSettings.get(INDEX_TRANSLOG_FLUSH_THRESHOLD_SIZE_SETTTING);\n        scopedSettings.addSettingsUpdateConsumer(INDEX_TRANSLOG_FLUSH_THRESHOLD_SIZE_SETTTING, this::setTranslogFlushThresholdSize);\n        mergeSchedulerConfig = new MergeSchedulerConfig(this);\n        scopedSettings.addSettingsUpdateConsumer(INDEX_GC_DELETES_SETTING, this::setGCDeletes);\n        gcDeletesInMillis = scopedSettings.get(INDEX_GC_DELETES_SETTING).getMillis();\n        warmerEnabled = scopedSettings.get(INDEX_WARMER_ENABLED_SETTING);\n        scopedSettings.addSettingsUpdateConsumer(INDEX_WARMER_ENABLED_SETTING, this::setEnableWarmer);\n        maxResultWindow = scopedSettings.get(MAX_RESULT_WINDOW_SETTING);\n        scopedSettings.addSettingsUpdateConsumer(MAX_RESULT_WINDOW_SETTING, this::setMaxResultWindow);\n        TTLPurgeDisabled = scopedSettings.get(INDEX_TTL_DISABLE_PURGE_SETTING);\n        scopedSettings.addSettingsUpdateConsumer(INDEX_TTL_DISABLE_PURGE_SETTING, this::setTTLPurgeDisabled);\n        this.mergePolicyConfig = new MergePolicyConfig(logger, this);\n        assert indexNameMatcher.test(indexMetaData.getIndex());\n\n    }","id":13018,"modified_method":"/**\n     * Creates a new {@link IndexSettings} instance. The given node settings will be merged with the settings in the metadata\n     * while index level settings will overwrite node settings.\n     *\n     * @param indexMetaData the index metadata this settings object is associated with\n     * @param nodeSettings the nodes settings this index is allocated on.\n     * @param indexNameMatcher a matcher that can resolve an expression to the index name or index alias\n     */\n    public IndexSettings(final IndexMetaData indexMetaData, final Settings nodeSettings, final Predicate<String> indexNameMatcher, IndexScopedSettings indexScopedSettings) {\n        scopedSettings = indexScopedSettings.copy(nodeSettings, indexMetaData);\n        this.nodeSettings = nodeSettings;\n        this.settings = Settings.builder().put(nodeSettings).put(indexMetaData.getSettings()).build();\n        this.index = new Index(indexMetaData.getIndex());\n        version = Version.indexCreated(settings);\n        uuid = settings.get(IndexMetaData.SETTING_INDEX_UUID, IndexMetaData.INDEX_UUID_NA_VALUE);\n        logger = Loggers.getLogger(getClass(), settings, index);\n        nodeName = settings.get(\"name\", \"\");\n        this.indexMetaData = indexMetaData;\n        numberOfShards = settings.getAsInt(IndexMetaData.SETTING_NUMBER_OF_SHARDS, null);\n        isShadowReplicaIndex = IndexMetaData.isIndexUsingShadowReplicas(settings);\n\n        this.defaultField = DEFAULT_FIELD_SETTING.get(settings);\n        this.queryStringLenient = QUERY_STRING_LENIENT_SETTING.get(settings);\n        this.queryStringAnalyzeWildcard = QUERY_STRING_ANALYZE_WILDCARD.get(nodeSettings);\n        this.queryStringAllowLeadingWildcard = QUERY_STRING_ALLOW_LEADING_WILDCARD.get(nodeSettings);\n        this.parseFieldMatcher = new ParseFieldMatcher(settings);\n        this.defaultAllowUnmappedFields = scopedSettings.get(ALLOW_UNMAPPED);\n        this.indexNameMatcher = indexNameMatcher;\n        this.durability = scopedSettings.get(INDEX_TRANSLOG_DURABILITY_SETTING);\n        syncInterval = INDEX_TRANSLOG_SYNC_INTERVAL_SETTING.get(settings);\n        refreshInterval = scopedSettings.get(INDEX_REFRESH_INTERVAL_SETTING);\n        flushThresholdSize = scopedSettings.get(INDEX_TRANSLOG_FLUSH_THRESHOLD_SIZE_SETTTING);\n        mergeSchedulerConfig = new MergeSchedulerConfig(this);\n        gcDeletesInMillis = scopedSettings.get(INDEX_GC_DELETES_SETTING).getMillis();\n        warmerEnabled = scopedSettings.get(INDEX_WARMER_ENABLED_SETTING);\n        maxResultWindow = scopedSettings.get(MAX_RESULT_WINDOW_SETTING);\n        TTLPurgeDisabled = scopedSettings.get(INDEX_TTL_DISABLE_PURGE_SETTING);\n        this.mergePolicyConfig = new MergePolicyConfig(logger, this);\n        assert indexNameMatcher.test(indexMetaData.getIndex());\n\n        scopedSettings.addSettingsUpdateConsumer(MergePolicyConfig.INDEX_COMPOUND_FORMAT_SETTING, mergePolicyConfig::setNoCFSRatio);\n        scopedSettings.addSettingsUpdateConsumer(MergePolicyConfig.INDEX_MERGE_POLICY_EXPUNGE_DELETES_ALLOWED_SETTING, mergePolicyConfig::setExpungeDeletesAllowed);\n        scopedSettings.addSettingsUpdateConsumer(MergePolicyConfig.INDEX_MERGE_POLICY_FLOOR_SEGMENT_SETTING, mergePolicyConfig::setFloorSegmentSetting);\n        scopedSettings.addSettingsUpdateConsumer(MergePolicyConfig.INDEX_MERGE_POLICY_MAX_MERGE_AT_ONCE_SETTING, mergePolicyConfig::setMaxMergesAtOnce);\n        scopedSettings.addSettingsUpdateConsumer(MergePolicyConfig.INDEX_MERGE_POLICY_MAX_MERGE_AT_ONCE_EXPLICIT_SETTING, mergePolicyConfig::setMaxMergesAtOnceExplicit);\n        scopedSettings.addSettingsUpdateConsumer(MergePolicyConfig.INDEX_MERGE_POLICY_MAX_MERGED_SEGMENT_SETTING, mergePolicyConfig::setMaxMergedSegment);\n        scopedSettings.addSettingsUpdateConsumer(MergePolicyConfig.INDEX_MERGE_POLICY_SEGMENTS_PER_TIER_SETTING, mergePolicyConfig::setSegmentsPerTier);\n        scopedSettings.addSettingsUpdateConsumer(MergePolicyConfig.INDEX_MERGE_POLICY_RECLAIM_DELETES_WEIGHT_SETTING, mergePolicyConfig::setReclaimDeletesWeight);\n        scopedSettings.addSettingsUpdateConsumer(MergeSchedulerConfig.MAX_THREAD_COUNT_SETTING, mergeSchedulerConfig::setMaxThreadCount);\n        scopedSettings.addSettingsUpdateConsumer(MergeSchedulerConfig.MAX_MERGE_COUNT_SETTING, mergeSchedulerConfig::setMaxMergeCount);\n        scopedSettings.addSettingsUpdateConsumer(MergeSchedulerConfig.AUTO_THROTTLE_SETTING, mergeSchedulerConfig::setAutoThrottle);\n        scopedSettings.addSettingsUpdateConsumer(INDEX_TRANSLOG_DURABILITY_SETTING, this::setTranslogDurability);\n        scopedSettings.addSettingsUpdateConsumer(INDEX_TTL_DISABLE_PURGE_SETTING, this::setTTLPurgeDisabled);\n        scopedSettings.addSettingsUpdateConsumer(MAX_RESULT_WINDOW_SETTING, this::setMaxResultWindow);\n        scopedSettings.addSettingsUpdateConsumer(INDEX_WARMER_ENABLED_SETTING, this::setEnableWarmer);\n        scopedSettings.addSettingsUpdateConsumer(INDEX_GC_DELETES_SETTING, this::setGCDeletes);\n        scopedSettings.addSettingsUpdateConsumer(INDEX_TRANSLOG_FLUSH_THRESHOLD_SIZE_SETTTING, this::setTranslogFlushThresholdSize);\n        scopedSettings.addSettingsUpdateConsumer(INDEX_REFRESH_INTERVAL_SETTING, this::setRefreshInterval);\n    }","commit_id":"ebc9dcf0c7f80611e163016035aec4ae1ed00a50","url":"https://github.com/elastic/elasticsearch"},{"original_method":"private void maxMergedSegment(ByteSizeValue maxMergedSegment) {\n        mergePolicy.setMaxMergedSegmentMB(maxMergedSegment.mbFrac());\n    }","id":13019,"modified_method":"void setMaxMergedSegment(ByteSizeValue maxMergedSegment) {\n        mergePolicy.setMaxMergedSegmentMB(maxMergedSegment.mbFrac());\n    }","commit_id":"ebc9dcf0c7f80611e163016035aec4ae1ed00a50","url":"https://github.com/elastic/elasticsearch"},{"original_method":"private void maxMergesAtOnceExplicit(Integer maxMergeAtOnceExplicit) {\n        mergePolicy.setMaxMergeAtOnceExplicit(maxMergeAtOnceExplicit);\n    }","id":13020,"modified_method":"void setMaxMergesAtOnceExplicit(Integer maxMergeAtOnceExplicit) {\n        mergePolicy.setMaxMergeAtOnceExplicit(maxMergeAtOnceExplicit);\n    }","commit_id":"ebc9dcf0c7f80611e163016035aec4ae1ed00a50","url":"https://github.com/elastic/elasticsearch"},{"original_method":"private void maxMergesAtOnce(Integer maxMergeAtOnce) {\n        mergePolicy.setMaxMergeAtOnce(maxMergeAtOnce);\n    }","id":13021,"modified_method":"void setMaxMergesAtOnce(Integer maxMergeAtOnce) {\n        mergePolicy.setMaxMergeAtOnce(maxMergeAtOnce);\n    }","commit_id":"ebc9dcf0c7f80611e163016035aec4ae1ed00a50","url":"https://github.com/elastic/elasticsearch"},{"original_method":"MergePolicyConfig(ESLogger logger, IndexSettings indexSettings) {\n        this.logger = logger;\n        IndexScopedSettings scopedSettings = indexSettings.getScopedSettings();\n        scopedSettings.addSettingsUpdateConsumer(INDEX_COMPOUND_FORMAT_SETTING, this::setNoCFSRatio);\n        scopedSettings.addSettingsUpdateConsumer(INDEX_MERGE_POLICY_EXPUNGE_DELETES_ALLOWED_SETTING, this::expungeDeletesAllowed);\n        scopedSettings.addSettingsUpdateConsumer(INDEX_MERGE_POLICY_FLOOR_SEGMENT_SETTING, this::floorSegmentSetting);\n        scopedSettings.addSettingsUpdateConsumer(INDEX_MERGE_POLICY_MAX_MERGE_AT_ONCE_SETTING, this::maxMergesAtOnce);\n        scopedSettings.addSettingsUpdateConsumer(INDEX_MERGE_POLICY_MAX_MERGE_AT_ONCE_EXPLICIT_SETTING, this::maxMergesAtOnceExplicit);\n        scopedSettings.addSettingsUpdateConsumer(INDEX_MERGE_POLICY_MAX_MERGED_SEGMENT_SETTING, this::maxMergedSegment);\n        scopedSettings.addSettingsUpdateConsumer(INDEX_MERGE_POLICY_SEGMENTS_PER_TIER_SETTING, this::segmentsPerTier);\n        scopedSettings.addSettingsUpdateConsumer(INDEX_MERGE_POLICY_RECLAIM_DELETES_WEIGHT_SETTING, this::reclaimDeletesWeight);\n        double forceMergeDeletesPctAllowed = indexSettings.getValue(INDEX_MERGE_POLICY_EXPUNGE_DELETES_ALLOWED_SETTING); // percentage\n        ByteSizeValue floorSegment = indexSettings.getValue(INDEX_MERGE_POLICY_FLOOR_SEGMENT_SETTING);\n        int maxMergeAtOnce = indexSettings.getValue(INDEX_MERGE_POLICY_MAX_MERGE_AT_ONCE_SETTING);\n        int maxMergeAtOnceExplicit = indexSettings.getValue(INDEX_MERGE_POLICY_MAX_MERGE_AT_ONCE_EXPLICIT_SETTING);\n        // TODO is this really a good default number for max_merge_segment, what happens for large indices, won't they end up with many segments?\n        ByteSizeValue maxMergedSegment = indexSettings.getValue(INDEX_MERGE_POLICY_MAX_MERGED_SEGMENT_SETTING);\n        double segmentsPerTier = indexSettings.getValue(INDEX_MERGE_POLICY_SEGMENTS_PER_TIER_SETTING);\n        double reclaimDeletesWeight = indexSettings.getValue(INDEX_MERGE_POLICY_RECLAIM_DELETES_WEIGHT_SETTING);\n        this.mergesEnabled = indexSettings.getSettings().getAsBoolean(INDEX_MERGE_ENABLED, true);\n        if (mergesEnabled == false) {\n            logger.warn(\"[{}] is set to false, this should only be used in tests and can cause serious problems in production environments\", INDEX_MERGE_ENABLED);\n        }\n        maxMergeAtOnce = adjustMaxMergeAtOnceIfNeeded(maxMergeAtOnce, segmentsPerTier);\n        mergePolicy.setNoCFSRatio(indexSettings.getValue(INDEX_COMPOUND_FORMAT_SETTING));\n        mergePolicy.setForceMergeDeletesPctAllowed(forceMergeDeletesPctAllowed);\n        mergePolicy.setFloorSegmentMB(floorSegment.mbFrac());\n        mergePolicy.setMaxMergeAtOnce(maxMergeAtOnce);\n        mergePolicy.setMaxMergeAtOnceExplicit(maxMergeAtOnceExplicit);\n        mergePolicy.setMaxMergedSegmentMB(maxMergedSegment.mbFrac());\n        mergePolicy.setSegmentsPerTier(segmentsPerTier);\n        mergePolicy.setReclaimDeletesWeight(reclaimDeletesWeight);\n        if (logger.isTraceEnabled()) {\n            logger.trace(\"using [tiered] merge mergePolicy with expunge_deletes_allowed[{}], floor_segment[{}], max_merge_at_once[{}], max_merge_at_once_explicit[{}], max_merged_segment[{}], segments_per_tier[{}], reclaim_deletes_weight[{}]\",\n                forceMergeDeletesPctAllowed, floorSegment, maxMergeAtOnce, maxMergeAtOnceExplicit, maxMergedSegment, segmentsPerTier, reclaimDeletesWeight);\n        }\n    }","id":13022,"modified_method":"MergePolicyConfig(ESLogger logger, IndexSettings indexSettings) {\n        this.logger = logger;\n        IndexScopedSettings scopedSettings = indexSettings.getScopedSettings();\n        double forceMergeDeletesPctAllowed = indexSettings.getValue(INDEX_MERGE_POLICY_EXPUNGE_DELETES_ALLOWED_SETTING); // percentage\n        ByteSizeValue floorSegment = indexSettings.getValue(INDEX_MERGE_POLICY_FLOOR_SEGMENT_SETTING);\n        int maxMergeAtOnce = indexSettings.getValue(INDEX_MERGE_POLICY_MAX_MERGE_AT_ONCE_SETTING);\n        int maxMergeAtOnceExplicit = indexSettings.getValue(INDEX_MERGE_POLICY_MAX_MERGE_AT_ONCE_EXPLICIT_SETTING);\n        // TODO is this really a good default number for max_merge_segment, what happens for large indices, won't they end up with many segments?\n        ByteSizeValue maxMergedSegment = indexSettings.getValue(INDEX_MERGE_POLICY_MAX_MERGED_SEGMENT_SETTING);\n        double segmentsPerTier = indexSettings.getValue(INDEX_MERGE_POLICY_SEGMENTS_PER_TIER_SETTING);\n        double reclaimDeletesWeight = indexSettings.getValue(INDEX_MERGE_POLICY_RECLAIM_DELETES_WEIGHT_SETTING);\n        this.mergesEnabled = indexSettings.getSettings().getAsBoolean(INDEX_MERGE_ENABLED, true);\n        if (mergesEnabled == false) {\n            logger.warn(\"[{}] is set to false, this should only be used in tests and can cause serious problems in production environments\", INDEX_MERGE_ENABLED);\n        }\n        maxMergeAtOnce = adjustMaxMergeAtOnceIfNeeded(maxMergeAtOnce, segmentsPerTier);\n        mergePolicy.setNoCFSRatio(indexSettings.getValue(INDEX_COMPOUND_FORMAT_SETTING));\n        mergePolicy.setForceMergeDeletesPctAllowed(forceMergeDeletesPctAllowed);\n        mergePolicy.setFloorSegmentMB(floorSegment.mbFrac());\n        mergePolicy.setMaxMergeAtOnce(maxMergeAtOnce);\n        mergePolicy.setMaxMergeAtOnceExplicit(maxMergeAtOnceExplicit);\n        mergePolicy.setMaxMergedSegmentMB(maxMergedSegment.mbFrac());\n        mergePolicy.setSegmentsPerTier(segmentsPerTier);\n        mergePolicy.setReclaimDeletesWeight(reclaimDeletesWeight);\n        if (logger.isTraceEnabled()) {\n            logger.trace(\"using [tiered] merge mergePolicy with expunge_deletes_allowed[{}], floor_segment[{}], max_merge_at_once[{}], max_merge_at_once_explicit[{}], max_merged_segment[{}], segments_per_tier[{}], reclaim_deletes_weight[{}]\",\n                forceMergeDeletesPctAllowed, floorSegment, maxMergeAtOnce, maxMergeAtOnceExplicit, maxMergedSegment, segmentsPerTier, reclaimDeletesWeight);\n        }\n    }","commit_id":"ebc9dcf0c7f80611e163016035aec4ae1ed00a50","url":"https://github.com/elastic/elasticsearch"},{"original_method":"private void setNoCFSRatio(Double noCFSRatio) {\n        mergePolicy.setNoCFSRatio(noCFSRatio);\n    }","id":13023,"modified_method":"void setNoCFSRatio(Double noCFSRatio) {\n        mergePolicy.setNoCFSRatio(noCFSRatio);\n    }","commit_id":"ebc9dcf0c7f80611e163016035aec4ae1ed00a50","url":"https://github.com/elastic/elasticsearch"},{"original_method":"private void reclaimDeletesWeight(Double reclaimDeletesWeight) {\n        mergePolicy.setReclaimDeletesWeight(reclaimDeletesWeight);\n    }","id":13024,"modified_method":"void setReclaimDeletesWeight(Double reclaimDeletesWeight) {\n        mergePolicy.setReclaimDeletesWeight(reclaimDeletesWeight);\n    }","commit_id":"ebc9dcf0c7f80611e163016035aec4ae1ed00a50","url":"https://github.com/elastic/elasticsearch"},{"original_method":"private void expungeDeletesAllowed(Double value) {\n        mergePolicy.setForceMergeDeletesPctAllowed(value);\n    }","id":13025,"modified_method":"void setExpungeDeletesAllowed(Double value) {\n        mergePolicy.setForceMergeDeletesPctAllowed(value);\n    }","commit_id":"ebc9dcf0c7f80611e163016035aec4ae1ed00a50","url":"https://github.com/elastic/elasticsearch"},{"original_method":"private void floorSegmentSetting(ByteSizeValue floorSegementSetting) {\n        mergePolicy.setFloorSegmentMB(floorSegementSetting.mbFrac());\n    }","id":13026,"modified_method":"void setFloorSegmentSetting(ByteSizeValue floorSegementSetting) {\n        mergePolicy.setFloorSegmentMB(floorSegementSetting.mbFrac());\n    }","commit_id":"ebc9dcf0c7f80611e163016035aec4ae1ed00a50","url":"https://github.com/elastic/elasticsearch"},{"original_method":"private void segmentsPerTier(Double segmentsPerTier) {\n        mergePolicy.setSegmentsPerTier(segmentsPerTier);\n    }","id":13027,"modified_method":"void setSegmentsPerTier(Double segmentsPerTier) {\n        mergePolicy.setSegmentsPerTier(segmentsPerTier);\n    }","commit_id":"ebc9dcf0c7f80611e163016035aec4ae1ed00a50","url":"https://github.com/elastic/elasticsearch"},{"original_method":"MergeSchedulerConfig(IndexSettings indexSettings) {\n        indexSettings.getScopedSettings().addSettingsUpdateConsumer(MAX_THREAD_COUNT_SETTING, this::setMaxThreadCount);\n        indexSettings.getScopedSettings().addSettingsUpdateConsumer(MAX_MERGE_COUNT_SETTING, this::setMaxMergeCount);\n        indexSettings.getScopedSettings().addSettingsUpdateConsumer(AUTO_THROTTLE_SETTING, this::setAutoThrottle);\n        maxThreadCount = indexSettings.getValue(MAX_THREAD_COUNT_SETTING);\n        maxMergeCount = indexSettings.getValue(MAX_MERGE_COUNT_SETTING);\n        this.autoThrottle = indexSettings.getValue(AUTO_THROTTLE_SETTING);\n    }","id":13028,"modified_method":"MergeSchedulerConfig(IndexSettings indexSettings) {\n        maxThreadCount = indexSettings.getValue(MAX_THREAD_COUNT_SETTING);\n        maxMergeCount = indexSettings.getValue(MAX_MERGE_COUNT_SETTING);\n        this.autoThrottle = indexSettings.getValue(AUTO_THROTTLE_SETTING);\n    }","commit_id":"ebc9dcf0c7f80611e163016035aec4ae1ed00a50","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public boolean allocateUnassigned(RoutingAllocation allocation) {\n        boolean changed = false;\n        final RoutingNodes routingNodes = allocation.routingNodes();\n        final MetaData metaData = routingNodes.metaData();\n\n        final RoutingNodes.UnassignedShards.UnassignedIterator unassignedIterator = routingNodes.unassigned().iterator();\n        while (unassignedIterator.hasNext()) {\n            final ShardRouting shard = unassignedIterator.next();\n\n            if (shard.primary() == false) {\n                continue;\n            }\n\n            final IndexMetaData indexMetaData = metaData.index(shard.getIndex());\n            final IndexSettings indexSettings = new IndexSettings(indexMetaData, settings);\n\n            if (shard.allocatedPostIndexCreate(indexMetaData) == false) {\n                // when we create a fresh index\n                continue;\n            }\n\n            final AsyncShardFetch.FetchResult<TransportNodesListGatewayStartedShards.NodeGatewayStartedShards> shardState = fetchData(shard, allocation);\n            if (shardState.hasData() == false) {\n                logger.trace(\"{}: ignoring allocation, still fetching shard started state\", shard);\n                allocation.setHasPendingAsyncFetch();\n                unassignedIterator.removeAndIgnore();\n                continue;\n            }\n\n            final Set<String> lastActiveAllocationIds = indexMetaData.activeAllocationIds(shard.id());\n            final boolean snapshotRestore = shard.restoreSource() != null;\n            final boolean recoverOnAnyNode = recoverOnAnyNode(indexSettings);\n\n            final NodesAndVersions nodesAndVersions;\n            final boolean enoughAllocationsFound;\n\n            if (lastActiveAllocationIds.isEmpty()) {\n                assert indexSettings.getIndexVersionCreated().before(Version.V_3_0_0) : \"trying to allocated a primary with an empty allocation id set, but index is new\";\n                // when we load an old index (after upgrading cluster) or restore a snapshot of an old index\n                // fall back to old version-based allocation mode\n                // Note that once the shard has been active, lastActiveAllocationIds will be non-empty\n                nodesAndVersions = buildNodesAndVersions(shard, snapshotRestore || recoverOnAnyNode, allocation.getIgnoreNodes(shard.shardId()), shardState);\n                if (snapshotRestore || recoverOnAnyNode) {\n                    enoughAllocationsFound = nodesAndVersions.allocationsFound > 0;\n                } else {\n                    enoughAllocationsFound = isEnoughVersionBasedAllocationsFound(shard, indexMetaData, nodesAndVersions);\n                }\n                logger.debug(\"[{}][{}]: version-based allocation for pre-{} index found {} allocations of {}, highest version: [{}]\", shard.index(), shard.id(), Version.V_3_0_0, nodesAndVersions.allocationsFound, shard, nodesAndVersions.highestVersion);\n            } else {\n                assert lastActiveAllocationIds.isEmpty() == false;\n                // use allocation ids to select nodes\n                nodesAndVersions = buildAllocationIdBasedNodes(shard, snapshotRestore || recoverOnAnyNode,\n                        allocation.getIgnoreNodes(shard.shardId()), lastActiveAllocationIds, shardState);\n                enoughAllocationsFound = nodesAndVersions.allocationsFound > 0;\n                logger.debug(\"[{}][{}]: found {} allocations of {} based on allocation ids: [{}]\", shard.index(), shard.id(), nodesAndVersions.allocationsFound, shard, lastActiveAllocationIds);\n            }\n\n            if (enoughAllocationsFound == false){\n                if (snapshotRestore) {\n                    // let BalancedShardsAllocator take care of allocating this shard\n                    logger.debug(\"[{}][{}]: missing local data, will restore from [{}]\", shard.index(), shard.id(), shard.restoreSource());\n                } else if (recoverOnAnyNode) {\n                    // let BalancedShardsAllocator take care of allocating this shard\n                    logger.debug(\"[{}][{}]: missing local data, recover from any node\", shard.index(), shard.id());\n                } else {\n                    // we can't really allocate, so ignore it and continue\n                    unassignedIterator.removeAndIgnore();\n                    logger.debug(\"[{}][{}]: not allocating, number_of_allocated_shards_found [{}]\", shard.index(), shard.id(), nodesAndVersions.allocationsFound);\n                }\n                continue;\n            }\n\n            final NodesToAllocate nodesToAllocate = buildNodesToAllocate(shard, allocation, nodesAndVersions.nodes);\n            if (nodesToAllocate.yesNodes.isEmpty() == false) {\n                DiscoveryNode node = nodesToAllocate.yesNodes.get(0);\n                logger.debug(\"[{}][{}]: allocating [{}] to [{}] on primary allocation\", shard.index(), shard.id(), shard, node);\n                changed = true;\n                unassignedIterator.initialize(node.id(), nodesAndVersions.highestVersion, ShardRouting.UNAVAILABLE_EXPECTED_SHARD_SIZE);\n            } else if (nodesToAllocate.throttleNodes.isEmpty() == true && nodesToAllocate.noNodes.isEmpty() == false) {\n                DiscoveryNode node = nodesToAllocate.noNodes.get(0);\n                logger.debug(\"[{}][{}]: forcing allocating [{}] to [{}] on primary allocation\", shard.index(), shard.id(), shard, node);\n                changed = true;\n                unassignedIterator.initialize(node.id(), nodesAndVersions.highestVersion, ShardRouting.UNAVAILABLE_EXPECTED_SHARD_SIZE);\n            } else {\n                // we are throttling this, but we have enough to allocate to this node, ignore it for now\n                logger.debug(\"[{}][{}]: throttling allocation [{}] to [{}] on primary allocation\", shard.index(), shard.id(), shard, nodesToAllocate.throttleNodes);\n                unassignedIterator.removeAndIgnore();\n            }\n        }\n        return changed;\n    }","id":13029,"modified_method":"public boolean allocateUnassigned(RoutingAllocation allocation) {\n        boolean changed = false;\n        final RoutingNodes routingNodes = allocation.routingNodes();\n        final MetaData metaData = routingNodes.metaData();\n\n        final RoutingNodes.UnassignedShards.UnassignedIterator unassignedIterator = routingNodes.unassigned().iterator();\n        while (unassignedIterator.hasNext()) {\n            final ShardRouting shard = unassignedIterator.next();\n\n            if (shard.primary() == false) {\n                continue;\n            }\n\n            final IndexMetaData indexMetaData = metaData.index(shard.getIndex());\n            // don't go wild here and create a new IndexSetting object for every shard this could cause a lot of garbage\n            // on cluster restart if we allocate a boat load of shards\n            if (shard.allocatedPostIndexCreate(indexMetaData) == false) {\n                // when we create a fresh index\n                continue;\n            }\n\n            final AsyncShardFetch.FetchResult<TransportNodesListGatewayStartedShards.NodeGatewayStartedShards> shardState = fetchData(shard, allocation);\n            if (shardState.hasData() == false) {\n                logger.trace(\"{}: ignoring allocation, still fetching shard started state\", shard);\n                allocation.setHasPendingAsyncFetch();\n                unassignedIterator.removeAndIgnore();\n                continue;\n            }\n\n            final Set<String> lastActiveAllocationIds = indexMetaData.activeAllocationIds(shard.id());\n            final boolean snapshotRestore = shard.restoreSource() != null;\n            final boolean recoverOnAnyNode = recoverOnAnyNode(indexMetaData);\n\n            final NodesAndVersions nodesAndVersions;\n            final boolean enoughAllocationsFound;\n\n            if (lastActiveAllocationIds.isEmpty()) {\n                assert Version.indexCreated(indexMetaData.getSettings()).before(Version.V_3_0_0) : \"trying to allocated a primary with an empty allocation id set, but index is new\";\n                // when we load an old index (after upgrading cluster) or restore a snapshot of an old index\n                // fall back to old version-based allocation mode\n                // Note that once the shard has been active, lastActiveAllocationIds will be non-empty\n                nodesAndVersions = buildNodesAndVersions(shard, snapshotRestore || recoverOnAnyNode, allocation.getIgnoreNodes(shard.shardId()), shardState);\n                if (snapshotRestore || recoverOnAnyNode) {\n                    enoughAllocationsFound = nodesAndVersions.allocationsFound > 0;\n                } else {\n                    enoughAllocationsFound = isEnoughVersionBasedAllocationsFound(shard, indexMetaData, nodesAndVersions);\n                }\n                logger.debug(\"[{}][{}]: version-based allocation for pre-{} index found {} allocations of {}, highest version: [{}]\", shard.index(), shard.id(), Version.V_3_0_0, nodesAndVersions.allocationsFound, shard, nodesAndVersions.highestVersion);\n            } else {\n                assert lastActiveAllocationIds.isEmpty() == false;\n                // use allocation ids to select nodes\n                nodesAndVersions = buildAllocationIdBasedNodes(shard, snapshotRestore || recoverOnAnyNode,\n                        allocation.getIgnoreNodes(shard.shardId()), lastActiveAllocationIds, shardState);\n                enoughAllocationsFound = nodesAndVersions.allocationsFound > 0;\n                logger.debug(\"[{}][{}]: found {} allocations of {} based on allocation ids: [{}]\", shard.index(), shard.id(), nodesAndVersions.allocationsFound, shard, lastActiveAllocationIds);\n            }\n\n            if (enoughAllocationsFound == false){\n                if (snapshotRestore) {\n                    // let BalancedShardsAllocator take care of allocating this shard\n                    logger.debug(\"[{}][{}]: missing local data, will restore from [{}]\", shard.index(), shard.id(), shard.restoreSource());\n                } else if (recoverOnAnyNode) {\n                    // let BalancedShardsAllocator take care of allocating this shard\n                    logger.debug(\"[{}][{}]: missing local data, recover from any node\", shard.index(), shard.id());\n                } else {\n                    // we can't really allocate, so ignore it and continue\n                    unassignedIterator.removeAndIgnore();\n                    logger.debug(\"[{}][{}]: not allocating, number_of_allocated_shards_found [{}]\", shard.index(), shard.id(), nodesAndVersions.allocationsFound);\n                }\n                continue;\n            }\n\n            final NodesToAllocate nodesToAllocate = buildNodesToAllocate(shard, allocation, nodesAndVersions.nodes);\n            if (nodesToAllocate.yesNodes.isEmpty() == false) {\n                DiscoveryNode node = nodesToAllocate.yesNodes.get(0);\n                logger.debug(\"[{}][{}]: allocating [{}] to [{}] on primary allocation\", shard.index(), shard.id(), shard, node);\n                changed = true;\n                unassignedIterator.initialize(node.id(), nodesAndVersions.highestVersion, ShardRouting.UNAVAILABLE_EXPECTED_SHARD_SIZE);\n            } else if (nodesToAllocate.throttleNodes.isEmpty() == true && nodesToAllocate.noNodes.isEmpty() == false) {\n                DiscoveryNode node = nodesToAllocate.noNodes.get(0);\n                logger.debug(\"[{}][{}]: forcing allocating [{}] to [{}] on primary allocation\", shard.index(), shard.id(), shard, node);\n                changed = true;\n                unassignedIterator.initialize(node.id(), nodesAndVersions.highestVersion, ShardRouting.UNAVAILABLE_EXPECTED_SHARD_SIZE);\n            } else {\n                // we are throttling this, but we have enough to allocate to this node, ignore it for now\n                logger.debug(\"[{}][{}]: throttling allocation [{}] to [{}] on primary allocation\", shard.index(), shard.id(), shard, nodesToAllocate.throttleNodes);\n                unassignedIterator.removeAndIgnore();\n            }\n        }\n        return changed;\n    }","commit_id":"ebc9dcf0c7f80611e163016035aec4ae1ed00a50","url":"https://github.com/elastic/elasticsearch"},{"original_method":"/**\n     * Return {@code true} if the index is configured to allow shards to be\n     * recovered on any node\n     */\n    private boolean recoverOnAnyNode(IndexSettings indexSettings) {\n        return indexSettings.isOnSharedFilesystem()\n            && IndexMetaData.INDEX_SHARED_FS_ALLOW_RECOVERY_ON_ANY_NODE_SETTING.get(indexSettings.getSettings());\n    }","id":13030,"modified_method":"/**\n     * Return {@code true} if the index is configured to allow shards to be\n     * recovered on any node\n     */\n    private boolean recoverOnAnyNode(IndexMetaData metaData) {\n        return (IndexMetaData.isOnSharedFilesystem(metaData.getSettings()) || IndexMetaData.isOnSharedFilesystem(this.settings))\n            && IndexMetaData.INDEX_SHARED_FS_ALLOW_RECOVERY_ON_ANY_NODE_SETTING.get(metaData.getSettings(), this.settings);\n    }","commit_id":"ebc9dcf0c7f80611e163016035aec4ae1ed00a50","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n\tpublic String buildPath(LiferayPortletURL liferayPortletURL) {\n\t\tMap<String, String> routeParameters = new HashMap<String, String>();\n\n\t\tbuildRouteParameters(liferayPortletURL, routeParameters);\n\n\t\tif (routeParameters.containsKey(\"nodeName\")) {\n\t\t\tString nodeName = routeParameters.get(\"nodeName\");\n\n\t\t\tnodeName = StringUtil.replace(\n\t\t\t\tnodeName, _UNESCAPED_CHARS, _ESCAPED_CHARS);\n\n\t\t\trouteParameters.put(\"nodeName\", nodeName);\n\t\t}\n\n\t\tif (routeParameters.containsKey(\"title\")) {\n\t\t\tString title = routeParameters.get(\"title\");\n\n\t\t\ttitle = StringUtil.replace(title, _UNESCAPED_CHARS, _ESCAPED_CHARS);\n\n\t\t\trouteParameters.put(\"title\", title);\n\t\t}\n\n\t\tString friendlyURLPath = router.parametersToUrl(routeParameters);\n\n\t\tif (Validator.isNull(friendlyURLPath)) {\n\t\t\treturn null;\n\t\t}\n\n\t\taddParametersIncludedInPath(liferayPortletURL, routeParameters);\n\n\t\tfriendlyURLPath = StringPool.SLASH.concat(getMapping()).concat(\n\t\t\tfriendlyURLPath);\n\n\t\treturn friendlyURLPath;\n\t}","id":13031,"modified_method":"@Override\n\tpublic String buildPath(LiferayPortletURL liferayPortletURL) {\n\t\tMap<String, String> routeParameters = new HashMap<String, String>();\n\n\t\tbuildRouteParameters(liferayPortletURL, routeParameters);\n\n\t\t_populateParameter(\"nodeName\", routeParameters);\n\t\t_populateParameter(\"title\", routeParameters);\n\n\t\tString friendlyURLPath = router.parametersToUrl(routeParameters);\n\n\t\tif (Validator.isNull(friendlyURLPath)) {\n\t\t\treturn null;\n\t\t}\n\n\t\taddParametersIncludedInPath(liferayPortletURL, routeParameters);\n\n\t\tfriendlyURLPath = StringPool.SLASH.concat(getMapping()).concat(\n\t\t\tfriendlyURLPath);\n\n\t\treturn friendlyURLPath;\n\t}","commit_id":"559a431f1b50409b964360482fd8eba0f45a6af2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tprotected void populateParams(\n\t\tMap<String, String[]> parameterMap, String namespace,\n\t\tMap<String, String> routeParameters) {\n\n\t\tif (routeParameters.containsKey(\"nodeName\")) {\n\t\t\tString nodeName = routeParameters.get(\"nodeName\");\n\n\t\t\tnodeName = StringUtil.replace(\n\t\t\t\tnodeName, _ESCAPED_CHARS, _UNESCAPED_CHARS);\n\n\t\t\trouteParameters.put(\"nodeName\", nodeName);\n\t\t}\n\n\t\tif (routeParameters.containsKey(\"title\")) {\n\t\t\tString title = routeParameters.get(\"title\");\n\n\t\t\ttitle = StringUtil.replace(title, _ESCAPED_CHARS, _UNESCAPED_CHARS);\n\n\t\t\trouteParameters.put(\"title\", title);\n\t\t}\n\n\t\tsuper.populateParams(parameterMap, namespace, routeParameters);\n\t}","id":13032,"modified_method":"@Override\n\tprotected void populateParams(\n\t\tMap<String, String[]> parameterMap, String namespace,\n\t\tMap<String, String> routeParameters) {\n\n\t\t_populateParameter(\"nodeName\", routeParameters);\n\t\t_populateParameter(\"title\", routeParameters);\n\n\t\tsuper.populateParams(parameterMap, namespace, routeParameters);\n\t}","commit_id":"559a431f1b50409b964360482fd8eba0f45a6af2","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Test\n  public void testDuplicateTimeSeriesNotSaved() throws Exception {\n    HadoopTimelineMetricsSink sink =\n      createMockBuilder(HadoopTimelineMetricsSink.class)\n        .withConstructor().addMockedMethod(\"appendPrefix\")\n        .addMockedMethod(\"findLiveCollectorHostsFromKnownCollector\")\n        .addMockedMethod(\"emitMetrics\").createNiceMock();\n\n    SubsetConfiguration conf = createNiceMock(SubsetConfiguration.class);\n    expect(conf.getString(\"slave.host.name\")).andReturn(\"localhost\").anyTimes();\n    expect(conf.getParent()).andReturn(null).anyTimes();\n    expect(conf.getPrefix()).andReturn(\"service\").anyTimes();\n    expect(conf.getString(eq(COLLECTOR_PROPERTY), eq(\"\"))).andReturn(\"localhost:6188\").anyTimes();\n    expect(conf.getString(eq(\"serviceName-prefix\"), eq(\"\"))).andReturn(\"\").anyTimes();\n    expect(conf.getString(eq(COLLECTOR_PROTOCOL), eq(\"http\"))).andReturn(\"http\").anyTimes();\n    expect(conf.getString(eq(COLLECTOR_PORT), eq(\"6188\"))).andReturn(\"6188\").anyTimes();\n\n    expect(conf.getInt(eq(MAX_METRIC_ROW_CACHE_SIZE), anyInt())).andReturn(10).anyTimes();\n    // Return eviction time smaller than time diff for first 3 entries\n    // Third entry will result in eviction\n    expect(conf.getInt(eq(METRICS_SEND_INTERVAL), anyInt())).andReturn(90).anyTimes();\n\n    expect(sink.findLiveCollectorHostsFromKnownCollector(\"localhost\", \"6188\"))\n      .andReturn(Collections.singletonList(\"localhost\")).anyTimes();\n\n    conf.setListDelimiter(eq(','));\n    expectLastCall().anyTimes();\n\n    expect(conf.getKeys()).andReturn(new Iterator() {\n      @Override\n      public boolean hasNext() {\n        return false;\n      }\n\n      @Override\n      public Object next() {\n        return null;\n      }\n\n      @Override\n      public void remove() {\n\n      }\n    }).once();\n\n    AbstractMetric metric = createNiceMock(AbstractMetric.class);\n    expect(metric.name()).andReturn(\"metricName\").anyTimes();\n    expect(metric.value()).andReturn(1.0).once();\n    expect(metric.value()).andReturn(2.0).once();\n    expect(metric.value()).andReturn(3.0).once();\n    expect(metric.value()).andReturn(4.0).once();\n    expect(metric.value()).andReturn(5.0).once();\n\n    MetricsRecord record = createNiceMock(MetricsRecord.class);\n    expect(record.name()).andReturn(\"testName\").anyTimes();\n    expect(record.context()).andReturn(\"testContext\").anyTimes();\n\n    sink.appendPrefix(eq(record), (StringBuilder) anyObject());\n    expectLastCall().anyTimes().andStubAnswer(new IAnswer<Object>() {\n      @Override\n      public Object answer() throws Throwable {\n        return null;\n      }\n    });\n\n    final Long now = System.currentTimeMillis();\n    // TODO: Current implementation of cache needs > 1 elements to evict any\n    expect(record.timestamp()).andReturn(now).times(2);\n    expect(record.timestamp()).andReturn(now + 100l).once();\n    expect(record.timestamp()).andReturn(now + 200l).once();\n    expect(record.timestamp()).andReturn(now + 300l).once();\n\n    expect(record.metrics()).andReturn(Arrays.asList(metric)).anyTimes();\n\n    final List<TimelineMetrics> capturedMetrics = new ArrayList<TimelineMetrics>();\n    sink.emitMetrics((TimelineMetrics) anyObject());\n    expectLastCall().andStubAnswer(new IAnswer<Object>() {\n      @Override\n      public Object answer() throws Throwable {\n        capturedMetrics.add((TimelineMetrics) EasyMock.getCurrentArguments()[0]);\n        return null;\n      }\n    });\n\n    replay(conf, sink, record, metric);\n\n    sink.init(conf);\n\n    // time = t1\n    sink.putMetrics(record);\n    // time = t1\n    sink.putMetrics(record);\n    // time = t2\n    sink.putMetrics(record);\n    // Evict\n    // time = t2\n    sink.putMetrics(record);\n    // time = t3\n    sink.putMetrics(record);\n\n    verify(conf, sink, record, metric);\n\n    Assert.assertEquals(2, capturedMetrics.size());\n    Iterator<TimelineMetrics> metricsIterator = capturedMetrics.iterator();\n\n    // t1, t2\n    TimelineMetric timelineMetric1 = metricsIterator.next().getMetrics().get(0);\n    Assert.assertEquals(2, timelineMetric1.getMetricValues().size());\n    Iterator<Long> timestamps = timelineMetric1.getMetricValues().keySet().iterator();\n    Assert.assertEquals(now, timestamps.next());\n    Assert.assertEquals(new Long(now + 100l), timestamps.next());\n    Iterator<Double> values = timelineMetric1.getMetricValues().values().iterator();\n    Assert.assertEquals(new Double(2.0), values.next());\n    Assert.assertEquals(new Double(3.0), values.next());\n    // t3, t4\n    TimelineMetric timelineMetric2 = metricsIterator.next().getMetrics().get(0);\n    Assert.assertEquals(2, timelineMetric2.getMetricValues().size());\n    timestamps = timelineMetric2.getMetricValues().keySet().iterator();\n    Assert.assertEquals(new Long(now + 200l), timestamps.next());\n    Assert.assertEquals(new Long(now + 300l), timestamps.next());\n    values = timelineMetric2.getMetricValues().values().iterator();\n    Assert.assertEquals(new Double(4.0), values.next());\n    Assert.assertEquals(new Double(5.0), values.next());\n  }","id":13033,"modified_method":"@Test\n  public void testDuplicateTimeSeriesNotSaved() throws Exception {\n    HadoopTimelineMetricsSink sink =\n      createMockBuilder(HadoopTimelineMetricsSink.class)\n        .withConstructor().addMockedMethod(\"appendPrefix\")\n        .addMockedMethod(\"findLiveCollectorHostsFromKnownCollector\")\n        .addMockedMethod(\"emitMetrics\").createNiceMock();\n\n    SubsetConfiguration conf = createNiceMock(SubsetConfiguration.class);\n    expect(conf.getString(\"slave.host.name\")).andReturn(\"localhost\").anyTimes();\n    expect(conf.getParent()).andReturn(null).anyTimes();\n    expect(conf.getPrefix()).andReturn(\"service\").anyTimes();\n    expect(conf.getString(eq(COLLECTOR_PROPERTY), eq(\"\"))).andReturn(\"localhost:6188\").anyTimes();\n    expect(conf.getString(eq(\"serviceName-prefix\"), eq(\"\"))).andReturn(\"\").anyTimes();\n    expect(conf.getString(eq(COLLECTOR_PROTOCOL), eq(\"http\"))).andReturn(\"http\").anyTimes();\n    expect(conf.getString(eq(COLLECTOR_PORT), eq(\"6188\"))).andReturn(\"6188\").anyTimes();\n\n    expect(conf.getInt(eq(MAX_METRIC_ROW_CACHE_SIZE), anyInt())).andReturn(10).anyTimes();\n    // Return eviction time smaller than time diff for first 3 entries\n    // Third entry will result in eviction\n    expect(conf.getInt(eq(METRICS_SEND_INTERVAL), anyInt())).andReturn(10).anyTimes();\n\n    expect(sink.findLiveCollectorHostsFromKnownCollector(\"localhost\", \"6188\"))\n      .andReturn(Collections.singletonList(\"localhost\")).anyTimes();\n\n    conf.setListDelimiter(eq(','));\n    expectLastCall().anyTimes();\n\n    expect(conf.getKeys()).andReturn(new Iterator() {\n      @Override\n      public boolean hasNext() {\n        return false;\n      }\n\n      @Override\n      public Object next() {\n        return null;\n      }\n\n      @Override\n      public void remove() {\n\n      }\n    }).once();\n\n    AbstractMetric metric = createNiceMock(AbstractMetric.class);\n    expect(metric.name()).andReturn(\"metricName\").anyTimes();\n    expect(metric.value()).andReturn(1.0).once();\n    expect(metric.value()).andReturn(2.0).once();\n    expect(metric.value()).andReturn(3.0).once();\n    expect(metric.value()).andReturn(4.0).once();\n    expect(metric.value()).andReturn(5.0).once();\n    expect(metric.value()).andReturn(6.0).once();\n\n    MetricsRecord record = createNiceMock(MetricsRecord.class);\n    expect(record.name()).andReturn(\"testName\").anyTimes();\n    expect(record.context()).andReturn(\"testContext\").anyTimes();\n\n    sink.appendPrefix(eq(record), (StringBuilder) anyObject());\n    expectLastCall().anyTimes().andStubAnswer(new IAnswer<Object>() {\n      @Override\n      public Object answer() throws Throwable {\n        return null;\n      }\n    });\n\n    final Long now = System.currentTimeMillis();\n    // TODO: Current implementation of cache needs > 1 elements to evict any\n    expect(record.timestamp()).andReturn(now).times(2);\n    expect(record.timestamp()).andReturn(now + 100l).times(2);\n    expect(record.timestamp()).andReturn(now + 200l).once();\n    expect(record.timestamp()).andReturn(now + 300l).once();\n\n    expect(record.metrics()).andReturn(Arrays.asList(metric)).anyTimes();\n\n    final List<TimelineMetrics> capturedMetrics = new ArrayList<TimelineMetrics>();\n    sink.emitMetrics((TimelineMetrics) anyObject());\n    expectLastCall().andStubAnswer(new IAnswer<Object>() {\n      @Override\n      public Object answer() throws Throwable {\n        capturedMetrics.add((TimelineMetrics) EasyMock.getCurrentArguments()[0]);\n        return null;\n      }\n    });\n\n    replay(conf, sink, record, metric);\n\n    sink.init(conf);\n\n    // time = t1\n    sink.putMetrics(record);\n    // time = t1\n    sink.putMetrics(record);\n    // time = t2\n    sink.putMetrics(record);\n    // Evict\n    // time = t2\n    sink.putMetrics(record);\n    // time = t3\n    sink.putMetrics(record);\n    // time = t4\n    sink.putMetrics(record);\n\n    verify(conf, sink, record, metric);\n\n    Assert.assertEquals(2, capturedMetrics.size());\n    Iterator<TimelineMetrics> metricsIterator = capturedMetrics.iterator();\n\n    // t1, t2\n    TimelineMetric timelineMetric1 = metricsIterator.next().getMetrics().get(0);\n    Assert.assertEquals(2, timelineMetric1.getMetricValues().size());\n    Iterator<Long> timestamps = timelineMetric1.getMetricValues().keySet().iterator();\n    Assert.assertEquals(now, timestamps.next());\n    Assert.assertEquals(new Long(now + 100l), timestamps.next());\n    Iterator<Double> values = timelineMetric1.getMetricValues().values().iterator();\n    Assert.assertEquals(new Double(1.0), values.next());\n    Assert.assertEquals(new Double(3.0), values.next());\n    // t3, t4\n    TimelineMetric timelineMetric2 = metricsIterator.next().getMetrics().get(0);\n    Assert.assertEquals(2, timelineMetric2.getMetricValues().size());\n    timestamps = timelineMetric2.getMetricValues().keySet().iterator();\n    Assert.assertEquals(new Long(now + 200l), timestamps.next());\n    Assert.assertEquals(new Long(now + 300l), timestamps.next());\n    values = timelineMetric2.getMetricValues().values().iterator();\n    Assert.assertEquals(new Double(5.0), values.next());\n    Assert.assertEquals(new Double(6.0), values.next());\n  }","commit_id":"f210586ad57ff60d467c3e84e7f4783d34435660","url":"https://github.com/apache/ambari"},{"original_method":"public TimelineMetricsCache(int maxRecsPerName, int maxEvictionTimeInMillis,\n                              boolean skipCounterTransform) {\n    this.maxRecsPerName = maxRecsPerName;\n    this.maxEvictionTimeInMillis = maxEvictionTimeInMillis;\n    this.skipCounterTransform = skipCounterTransform;\n    this.timelineMetricCache = CacheBuilder.newBuilder().expireAfterWrite(maxEvictionTimeInMillis * 2, TimeUnit.MILLISECONDS).build();\n  }","id":13034,"modified_method":"public TimelineMetricsCache(int maxRecsPerName, int maxEvictionTimeInMillis,\n                              boolean skipCounterTransform) {\n    this.maxRecsPerName = maxRecsPerName;\n    this.maxEvictionTimeInMillis = maxEvictionTimeInMillis;\n    this.skipCounterTransform = skipCounterTransform;\n  }","commit_id":"f210586ad57ff60d467c3e84e7f4783d34435660","url":"https://github.com/apache/ambari"},{"original_method":"public TimelineMetric getTimelineMetric(String metricName) {\n    TimelineMetricWrapper timelineMetricWrapper = timelineMetricCache.getIfPresent(metricName);\n    if (timelineMetricWrapper != null) {\n      return timelineMetricWrapper.getTimelineMetric();\n    }\n    return null;\n  }","id":13035,"modified_method":"public TimelineMetric getTimelineMetric(String metricName) {\n    if (timelineMetricCache.containsKey(metricName)) {\n      return timelineMetricCache.evict(metricName);\n    }\n\n    return null;\n  }","commit_id":"f210586ad57ff60d467c3e84e7f4783d34435660","url":"https://github.com/apache/ambari"},{"original_method":"TimelineMetricWrapper(TimelineMetric timelineMetric) {\n      this.timelineMetric = timelineMetric;\n      dataPointsCache = CacheBuilder.newBuilder().\n              maximumSize(maxRecsPerName).expireAfterWrite(maxEvictionTimeInMillis * 2, TimeUnit.MILLISECONDS).build();\n\n      putMetric(timelineMetric);\n    }","id":13036,"modified_method":"TimelineMetricWrapper(TimelineMetric timelineMetric) {\n      this.timelineMetric = timelineMetric;\n      this.oldestTimestamp = timelineMetric.getStartTime();\n    }","commit_id":"f210586ad57ff60d467c3e84e7f4783d34435660","url":"https://github.com/apache/ambari"},{"original_method":"public synchronized TimelineMetric getTimelineMetric() {\n      TreeMap<Long, Double> metricValues = new TreeMap<>(dataPointsCache.asMap());\n      if (metricValues.isEmpty() || newestTimeStamp - oldestTimeStamp < maxEvictionTimeInMillis) {\n        return null;\n      }\n      dataPointsCache.invalidateAll();\n      timelineMetric.setStartTime(metricValues.firstKey());\n      timelineMetric.setMetricValues(metricValues);\n      return new TimelineMetric(timelineMetric);\n    }","id":13037,"modified_method":"public synchronized TimelineMetric getTimelineMetric() {\n      return timelineMetric;\n    }","commit_id":"f210586ad57ff60d467c3e84e7f4783d34435660","url":"https://github.com/apache/ambari"},{"original_method":"public synchronized void putMetric(TimelineMetric metric) {\n      if (dataPointsCache.size() == 0) {\n        oldestTimeStamp = metric.getStartTime();\n        newestTimeStamp = metric.getStartTime();\n      }\n      TreeMap<Long, Double> metricValues = metric.getMetricValues();\n      for (Map.Entry<Long, Double> entry : metricValues.entrySet()) {\n        Long key = entry.getKey();\n        dataPointsCache.put(key, entry.getValue());\n      }\n      oldestTimeStamp = Math.min(oldestTimeStamp, metric.getStartTime());\n      newestTimeStamp = Math.max(newestTimeStamp, metric.getStartTime());\n    }","id":13038,"modified_method":"public synchronized void putMetric(TimelineMetric metric) {\n      TreeMap<Long, Double> metricValues = this.timelineMetric.getMetricValues();\n      if (metricValues.size() > maxRecsPerName) {\n        // remove values for eldest maxEvictionTimeInMillis\n        long newEldestTimestamp = oldestTimestamp + maxEvictionTimeInMillis;\n        TreeMap<Long, Double> metricsSubSet =\n          new TreeMap<>(metricValues.tailMap(newEldestTimestamp));\n        if (metricsSubSet.isEmpty()) {\n          oldestTimestamp = metric.getStartTime();\n          this.timelineMetric.setStartTime(metric.getStartTime());\n        } else {\n          Long newStartTime = metricsSubSet.firstKey();\n          oldestTimestamp = newStartTime;\n          this.timelineMetric.setStartTime(newStartTime);\n        }\n        this.timelineMetric.setMetricValues(metricsSubSet);\n        LOG.warn(\"Metrics cache overflow. Values for metric \" +\n          metric.getMetricName() + \" older than \" + newEldestTimestamp +\n          \" were removed to clean up the cache.\");\n      }\n      this.timelineMetric.addMetricValues(metric.getMetricValues());\n      updateTimeDiff(metric.getStartTime());\n    }","commit_id":"f210586ad57ff60d467c3e84e7f4783d34435660","url":"https://github.com/apache/ambari"},{"original_method":"public TimelineMetrics getAllMetrics() {\n    TimelineMetrics timelineMetrics = new TimelineMetrics();\n    Collection<TimelineMetricWrapper> timelineMetricWrapperCollection = timelineMetricCache.asMap().values();\n    List<TimelineMetric> timelineMetricList =\n            new ArrayList<>(timelineMetricWrapperCollection.size());\n\n    for (TimelineMetricWrapper timelineMetricWrapper : timelineMetricWrapperCollection) {\n      timelineMetricList.add(timelineMetricWrapper.getTimelineMetric());\n    }\n\n    timelineMetrics.setMetrics(timelineMetricList);\n    return timelineMetrics;\n  }","id":13039,"modified_method":"public TimelineMetrics getAllMetrics() {\n    return timelineMetricCache.evictAll();\n  }","commit_id":"f210586ad57ff60d467c3e84e7f4783d34435660","url":"https://github.com/apache/ambari"},{"original_method":"public void putTimelineMetric(TimelineMetric timelineMetric) {\n    String metricName = timelineMetric.getMetricName();\n    TimelineMetricWrapper timelineMetricWrapper = timelineMetricCache.getIfPresent(metricName);\n\n    if (timelineMetricWrapper != null) {\n      timelineMetricWrapper.putMetric(timelineMetric);\n    } else {\n      timelineMetricCache.put(metricName, new TimelineMetricWrapper(timelineMetric));\n    }\n  }","id":13040,"modified_method":"public void putTimelineMetric(TimelineMetric timelineMetric) {\n    timelineMetricCache.put(timelineMetric.getMetricName(), timelineMetric);\n  }","commit_id":"f210586ad57ff60d467c3e84e7f4783d34435660","url":"https://github.com/apache/ambari"},{"original_method":"@Test\n  public void testDuplicateTimeSeriesNotSaved() throws Exception {\n    HadoopTimelineMetricsSink sink =\n      createMockBuilder(HadoopTimelineMetricsSink.class)\n        .withConstructor().addMockedMethod(\"appendPrefix\")\n        .addMockedMethod(\"findLiveCollectorHostsFromKnownCollector\")\n        .addMockedMethod(\"emitMetrics\").createNiceMock();\n\n    SubsetConfiguration conf = createNiceMock(SubsetConfiguration.class);\n    expect(conf.getString(\"slave.host.name\")).andReturn(\"localhost\").anyTimes();\n    expect(conf.getParent()).andReturn(null).anyTimes();\n    expect(conf.getPrefix()).andReturn(\"service\").anyTimes();\n    expect(conf.getString(eq(COLLECTOR_PROPERTY), eq(\"\"))).andReturn(\"localhost:6188\").anyTimes();\n    expect(conf.getString(eq(\"serviceName-prefix\"), eq(\"\"))).andReturn(\"\").anyTimes();\n    expect(conf.getString(eq(COLLECTOR_PROTOCOL), eq(\"http\"))).andReturn(\"http\").anyTimes();\n    expect(conf.getString(eq(COLLECTOR_PORT), eq(\"6188\"))).andReturn(\"6188\").anyTimes();\n\n    expect(conf.getInt(eq(MAX_METRIC_ROW_CACHE_SIZE), anyInt())).andReturn(10).anyTimes();\n    // Return eviction time smaller than time diff for first 3 entries\n    // Third entry will result in eviction\n    expect(conf.getInt(eq(METRICS_SEND_INTERVAL), anyInt())).andReturn(90).anyTimes();\n\n    expect(sink.findLiveCollectorHostsFromKnownCollector(\"localhost\", \"6188\"))\n      .andReturn(Collections.singletonList(\"localhost\")).anyTimes();\n\n    conf.setListDelimiter(eq(','));\n    expectLastCall().anyTimes();\n\n    expect(conf.getKeys()).andReturn(new Iterator() {\n      @Override\n      public boolean hasNext() {\n        return false;\n      }\n\n      @Override\n      public Object next() {\n        return null;\n      }\n\n      @Override\n      public void remove() {\n\n      }\n    }).once();\n\n    AbstractMetric metric = createNiceMock(AbstractMetric.class);\n    expect(metric.name()).andReturn(\"metricName\").anyTimes();\n    expect(metric.value()).andReturn(1.0).once();\n    expect(metric.value()).andReturn(2.0).once();\n    expect(metric.value()).andReturn(3.0).once();\n    expect(metric.value()).andReturn(4.0).once();\n    expect(metric.value()).andReturn(5.0).once();\n\n    MetricsRecord record = createNiceMock(MetricsRecord.class);\n    expect(record.name()).andReturn(\"testName\").anyTimes();\n    expect(record.context()).andReturn(\"testContext\").anyTimes();\n\n    sink.appendPrefix(eq(record), (StringBuilder) anyObject());\n    expectLastCall().anyTimes().andStubAnswer(new IAnswer<Object>() {\n      @Override\n      public Object answer() throws Throwable {\n        return null;\n      }\n    });\n\n    final Long now = System.currentTimeMillis();\n    // TODO: Current implementation of cache needs > 1 elements to evict any\n    expect(record.timestamp()).andReturn(now).times(2);\n    expect(record.timestamp()).andReturn(now + 100l).once();\n    expect(record.timestamp()).andReturn(now + 200l).once();\n    expect(record.timestamp()).andReturn(now + 300l).once();\n\n    expect(record.metrics()).andReturn(Arrays.asList(metric)).anyTimes();\n\n    final List<TimelineMetrics> capturedMetrics = new ArrayList<TimelineMetrics>();\n    sink.emitMetrics((TimelineMetrics) anyObject());\n    expectLastCall().andStubAnswer(new IAnswer<Object>() {\n      @Override\n      public Object answer() throws Throwable {\n        capturedMetrics.add((TimelineMetrics) EasyMock.getCurrentArguments()[0]);\n        return null;\n      }\n    });\n\n    replay(conf, sink, record, metric);\n\n    sink.init(conf);\n\n    // time = t1\n    sink.putMetrics(record);\n    // time = t1\n    sink.putMetrics(record);\n    // time = t2\n    sink.putMetrics(record);\n    // Evict\n    // time = t2\n    sink.putMetrics(record);\n    // time = t3\n    sink.putMetrics(record);\n\n    verify(conf, sink, record, metric);\n\n    Assert.assertEquals(2, capturedMetrics.size());\n    Iterator<TimelineMetrics> metricsIterator = capturedMetrics.iterator();\n\n    // t1, t2\n    TimelineMetric timelineMetric1 = metricsIterator.next().getMetrics().get(0);\n    Assert.assertEquals(2, timelineMetric1.getMetricValues().size());\n    Iterator<Long> timestamps = timelineMetric1.getMetricValues().keySet().iterator();\n    Assert.assertEquals(now, timestamps.next());\n    Assert.assertEquals(new Long(now + 100l), timestamps.next());\n    Iterator<Double> values = timelineMetric1.getMetricValues().values().iterator();\n    Assert.assertEquals(new Double(2.0), values.next());\n    Assert.assertEquals(new Double(3.0), values.next());\n    // t3, t4\n    TimelineMetric timelineMetric2 = metricsIterator.next().getMetrics().get(0);\n    Assert.assertEquals(2, timelineMetric2.getMetricValues().size());\n    timestamps = timelineMetric2.getMetricValues().keySet().iterator();\n    Assert.assertEquals(new Long(now + 200l), timestamps.next());\n    Assert.assertEquals(new Long(now + 300l), timestamps.next());\n    values = timelineMetric2.getMetricValues().values().iterator();\n    Assert.assertEquals(new Double(4.0), values.next());\n    Assert.assertEquals(new Double(5.0), values.next());\n  }","id":13041,"modified_method":"@Test\n  public void testDuplicateTimeSeriesNotSaved() throws Exception {\n    HadoopTimelineMetricsSink sink =\n      createMockBuilder(HadoopTimelineMetricsSink.class)\n        .withConstructor().addMockedMethod(\"appendPrefix\")\n        .addMockedMethod(\"findLiveCollectorHostsFromKnownCollector\")\n        .addMockedMethod(\"emitMetrics\").createNiceMock();\n\n    SubsetConfiguration conf = createNiceMock(SubsetConfiguration.class);\n    expect(conf.getString(\"slave.host.name\")).andReturn(\"localhost\").anyTimes();\n    expect(conf.getParent()).andReturn(null).anyTimes();\n    expect(conf.getPrefix()).andReturn(\"service\").anyTimes();\n    expect(conf.getString(eq(COLLECTOR_PROPERTY), eq(\"\"))).andReturn(\"localhost:6188\").anyTimes();\n    expect(conf.getString(eq(\"serviceName-prefix\"), eq(\"\"))).andReturn(\"\").anyTimes();\n    expect(conf.getString(eq(COLLECTOR_PROTOCOL), eq(\"http\"))).andReturn(\"http\").anyTimes();\n    expect(conf.getString(eq(COLLECTOR_PORT), eq(\"6188\"))).andReturn(\"6188\").anyTimes();\n\n    expect(conf.getInt(eq(MAX_METRIC_ROW_CACHE_SIZE), anyInt())).andReturn(10).anyTimes();\n    // Return eviction time smaller than time diff for first 3 entries\n    // Third entry will result in eviction\n    expect(conf.getInt(eq(METRICS_SEND_INTERVAL), anyInt())).andReturn(10).anyTimes();\n\n    expect(sink.findLiveCollectorHostsFromKnownCollector(\"localhost\", \"6188\"))\n      .andReturn(Collections.singletonList(\"localhost\")).anyTimes();\n\n    conf.setListDelimiter(eq(','));\n    expectLastCall().anyTimes();\n\n    expect(conf.getKeys()).andReturn(new Iterator() {\n      @Override\n      public boolean hasNext() {\n        return false;\n      }\n\n      @Override\n      public Object next() {\n        return null;\n      }\n\n      @Override\n      public void remove() {\n\n      }\n    }).once();\n\n    AbstractMetric metric = createNiceMock(AbstractMetric.class);\n    expect(metric.name()).andReturn(\"metricName\").anyTimes();\n    expect(metric.value()).andReturn(1.0).once();\n    expect(metric.value()).andReturn(2.0).once();\n    expect(metric.value()).andReturn(3.0).once();\n    expect(metric.value()).andReturn(4.0).once();\n    expect(metric.value()).andReturn(5.0).once();\n    expect(metric.value()).andReturn(6.0).once();\n\n    MetricsRecord record = createNiceMock(MetricsRecord.class);\n    expect(record.name()).andReturn(\"testName\").anyTimes();\n    expect(record.context()).andReturn(\"testContext\").anyTimes();\n\n    sink.appendPrefix(eq(record), (StringBuilder) anyObject());\n    expectLastCall().anyTimes().andStubAnswer(new IAnswer<Object>() {\n      @Override\n      public Object answer() throws Throwable {\n        return null;\n      }\n    });\n\n    final Long now = System.currentTimeMillis();\n    // TODO: Current implementation of cache needs > 1 elements to evict any\n    expect(record.timestamp()).andReturn(now).times(2);\n    expect(record.timestamp()).andReturn(now + 100l).times(2);\n    expect(record.timestamp()).andReturn(now + 200l).once();\n    expect(record.timestamp()).andReturn(now + 300l).once();\n\n    expect(record.metrics()).andReturn(Arrays.asList(metric)).anyTimes();\n\n    final List<TimelineMetrics> capturedMetrics = new ArrayList<TimelineMetrics>();\n    sink.emitMetrics((TimelineMetrics) anyObject());\n    expectLastCall().andStubAnswer(new IAnswer<Object>() {\n      @Override\n      public Object answer() throws Throwable {\n        capturedMetrics.add((TimelineMetrics) EasyMock.getCurrentArguments()[0]);\n        return null;\n      }\n    });\n\n    replay(conf, sink, record, metric);\n\n    sink.init(conf);\n\n    // time = t1\n    sink.putMetrics(record);\n    // time = t1\n    sink.putMetrics(record);\n    // time = t2\n    sink.putMetrics(record);\n    // Evict\n    // time = t2\n    sink.putMetrics(record);\n    // time = t3\n    sink.putMetrics(record);\n    // time = t4\n    sink.putMetrics(record);\n\n    verify(conf, sink, record, metric);\n\n    Assert.assertEquals(2, capturedMetrics.size());\n    Iterator<TimelineMetrics> metricsIterator = capturedMetrics.iterator();\n\n    // t1, t2\n    TimelineMetric timelineMetric1 = metricsIterator.next().getMetrics().get(0);\n    Assert.assertEquals(2, timelineMetric1.getMetricValues().size());\n    Iterator<Long> timestamps = timelineMetric1.getMetricValues().keySet().iterator();\n    Assert.assertEquals(now, timestamps.next());\n    Assert.assertEquals(new Long(now + 100l), timestamps.next());\n    Iterator<Double> values = timelineMetric1.getMetricValues().values().iterator();\n    Assert.assertEquals(new Double(1.0), values.next());\n    Assert.assertEquals(new Double(3.0), values.next());\n    // t3, t4\n    TimelineMetric timelineMetric2 = metricsIterator.next().getMetrics().get(0);\n    Assert.assertEquals(2, timelineMetric2.getMetricValues().size());\n    timestamps = timelineMetric2.getMetricValues().keySet().iterator();\n    Assert.assertEquals(new Long(now + 200l), timestamps.next());\n    Assert.assertEquals(new Long(now + 300l), timestamps.next());\n    values = timelineMetric2.getMetricValues().values().iterator();\n    Assert.assertEquals(new Double(5.0), values.next());\n    Assert.assertEquals(new Double(6.0), values.next());\n  }","commit_id":"8d30f1a4d1da10225f66ecc02f757b4db904c5c0","url":"https://github.com/apache/ambari"},{"original_method":"public synchronized TimelineMetric getTimelineMetric() {\n      TreeMap<Long, Double> metricValues = new TreeMap<>(dataPointsCache.asMap());\n      if (metricValues.isEmpty() || newestTimeStamp - oldestTimeStamp < maxEvictionTimeInMillis) {\n        return null;\n      }\n      dataPointsCache.invalidateAll();\n      timelineMetric.setStartTime(metricValues.firstKey());\n      timelineMetric.setMetricValues(metricValues);\n      return new TimelineMetric(timelineMetric);\n    }","id":13042,"modified_method":"public synchronized TimelineMetric getTimelineMetric() {\n      return timelineMetric;\n    }","commit_id":"8d30f1a4d1da10225f66ecc02f757b4db904c5c0","url":"https://github.com/apache/ambari"},{"original_method":"TimelineMetricWrapper(TimelineMetric timelineMetric) {\n      this.timelineMetric = timelineMetric;\n      dataPointsCache = CacheBuilder.newBuilder().\n              maximumSize(maxRecsPerName).expireAfterWrite(maxEvictionTimeInMillis * 2, TimeUnit.MILLISECONDS).build();\n\n      putMetric(timelineMetric);\n    }","id":13043,"modified_method":"TimelineMetricWrapper(TimelineMetric timelineMetric) {\n      this.timelineMetric = timelineMetric;\n      this.oldestTimestamp = timelineMetric.getStartTime();\n    }","commit_id":"8d30f1a4d1da10225f66ecc02f757b4db904c5c0","url":"https://github.com/apache/ambari"},{"original_method":"public synchronized void putMetric(TimelineMetric metric) {\n      if (dataPointsCache.size() == 0) {\n        oldestTimeStamp = metric.getStartTime();\n        newestTimeStamp = metric.getStartTime();\n      }\n      TreeMap<Long, Double> metricValues = metric.getMetricValues();\n      for (Map.Entry<Long, Double> entry : metricValues.entrySet()) {\n        Long key = entry.getKey();\n        dataPointsCache.put(key, entry.getValue());\n      }\n      oldestTimeStamp = Math.min(oldestTimeStamp, metric.getStartTime());\n      newestTimeStamp = Math.max(newestTimeStamp, metric.getStartTime());\n    }","id":13044,"modified_method":"public synchronized void putMetric(TimelineMetric metric) {\n      TreeMap<Long, Double> metricValues = this.timelineMetric.getMetricValues();\n      if (metricValues.size() > maxRecsPerName) {\n        // remove values for eldest maxEvictionTimeInMillis\n        long newEldestTimestamp = oldestTimestamp + maxEvictionTimeInMillis;\n        TreeMap<Long, Double> metricsSubSet =\n          new TreeMap<>(metricValues.tailMap(newEldestTimestamp));\n        if (metricsSubSet.isEmpty()) {\n          oldestTimestamp = metric.getStartTime();\n          this.timelineMetric.setStartTime(metric.getStartTime());\n        } else {\n          Long newStartTime = metricsSubSet.firstKey();\n          oldestTimestamp = newStartTime;\n          this.timelineMetric.setStartTime(newStartTime);\n        }\n        this.timelineMetric.setMetricValues(metricsSubSet);\n        LOG.warn(\"Metrics cache overflow. Values for metric \" +\n          metric.getMetricName() + \" older than \" + newEldestTimestamp +\n          \" were removed to clean up the cache.\");\n      }\n      this.timelineMetric.addMetricValues(metric.getMetricValues());\n      updateTimeDiff(metric.getStartTime());\n    }","commit_id":"8d30f1a4d1da10225f66ecc02f757b4db904c5c0","url":"https://github.com/apache/ambari"},{"original_method":"public void putTimelineMetric(TimelineMetric timelineMetric) {\n    String metricName = timelineMetric.getMetricName();\n    TimelineMetricWrapper timelineMetricWrapper = timelineMetricCache.getIfPresent(metricName);\n\n    if (timelineMetricWrapper != null) {\n      timelineMetricWrapper.putMetric(timelineMetric);\n    } else {\n      timelineMetricCache.put(metricName, new TimelineMetricWrapper(timelineMetric));\n    }\n  }","id":13045,"modified_method":"public void putTimelineMetric(TimelineMetric timelineMetric) {\n    timelineMetricCache.put(timelineMetric.getMetricName(), timelineMetric);\n  }","commit_id":"8d30f1a4d1da10225f66ecc02f757b4db904c5c0","url":"https://github.com/apache/ambari"},{"original_method":"public TimelineMetrics getAllMetrics() {\n    TimelineMetrics timelineMetrics = new TimelineMetrics();\n    Collection<TimelineMetricWrapper> timelineMetricWrapperCollection = timelineMetricCache.asMap().values();\n    List<TimelineMetric> timelineMetricList =\n            new ArrayList<>(timelineMetricWrapperCollection.size());\n\n    for (TimelineMetricWrapper timelineMetricWrapper : timelineMetricWrapperCollection) {\n      timelineMetricList.add(timelineMetricWrapper.getTimelineMetric());\n    }\n\n    timelineMetrics.setMetrics(timelineMetricList);\n    return timelineMetrics;\n  }","id":13046,"modified_method":"public TimelineMetrics getAllMetrics() {\n    return timelineMetricCache.evictAll();\n  }","commit_id":"8d30f1a4d1da10225f66ecc02f757b4db904c5c0","url":"https://github.com/apache/ambari"},{"original_method":"public TimelineMetric getTimelineMetric(String metricName) {\n    TimelineMetricWrapper timelineMetricWrapper = timelineMetricCache.getIfPresent(metricName);\n    if (timelineMetricWrapper != null) {\n      return timelineMetricWrapper.getTimelineMetric();\n    }\n    return null;\n  }","id":13047,"modified_method":"public TimelineMetric getTimelineMetric(String metricName) {\n    if (timelineMetricCache.containsKey(metricName)) {\n      return timelineMetricCache.evict(metricName);\n    }\n\n    return null;\n  }","commit_id":"8d30f1a4d1da10225f66ecc02f757b4db904c5c0","url":"https://github.com/apache/ambari"},{"original_method":"public TimelineMetricsCache(int maxRecsPerName, int maxEvictionTimeInMillis,\n                              boolean skipCounterTransform) {\n    this.maxRecsPerName = maxRecsPerName;\n    this.maxEvictionTimeInMillis = maxEvictionTimeInMillis;\n    this.skipCounterTransform = skipCounterTransform;\n    this.timelineMetricCache = CacheBuilder.newBuilder().expireAfterWrite(maxEvictionTimeInMillis * 2, TimeUnit.MILLISECONDS).build();\n  }","id":13048,"modified_method":"public TimelineMetricsCache(int maxRecsPerName, int maxEvictionTimeInMillis,\n                              boolean skipCounterTransform) {\n    this.maxRecsPerName = maxRecsPerName;\n    this.maxEvictionTimeInMillis = maxEvictionTimeInMillis;\n    this.skipCounterTransform = skipCounterTransform;\n  }","commit_id":"8d30f1a4d1da10225f66ecc02f757b4db904c5c0","url":"https://github.com/apache/ambari"},{"original_method":"@Test\n  public void testDuplicateTimeSeriesNotSaved() throws Exception {\n    HadoopTimelineMetricsSink sink =\n      createMockBuilder(HadoopTimelineMetricsSink.class)\n        .withConstructor().addMockedMethod(\"appendPrefix\")\n        .addMockedMethod(\"findLiveCollectorHostsFromKnownCollector\")\n        .addMockedMethod(\"emitMetrics\").createNiceMock();\n\n    SubsetConfiguration conf = createNiceMock(SubsetConfiguration.class);\n    expect(conf.getString(\"slave.host.name\")).andReturn(\"localhost\").anyTimes();\n    expect(conf.getParent()).andReturn(null).anyTimes();\n    expect(conf.getPrefix()).andReturn(\"service\").anyTimes();\n    expect(conf.getString(eq(COLLECTOR_PROPERTY), eq(\"\"))).andReturn(\"localhost:6188\").anyTimes();\n    expect(conf.getString(eq(\"serviceName-prefix\"), eq(\"\"))).andReturn(\"\").anyTimes();\n    expect(conf.getString(eq(COLLECTOR_PROTOCOL), eq(\"http\"))).andReturn(\"http\").anyTimes();\n    expect(conf.getString(eq(COLLECTOR_PORT), eq(\"6188\"))).andReturn(\"6188\").anyTimes();\n\n    expect(conf.getInt(eq(MAX_METRIC_ROW_CACHE_SIZE), anyInt())).andReturn(10).anyTimes();\n    // Return eviction time smaller than time diff for first 3 entries\n    // Third entry will result in eviction\n    expect(conf.getInt(eq(METRICS_SEND_INTERVAL), anyInt())).andReturn(10).anyTimes();\n\n    expect(sink.findLiveCollectorHostsFromKnownCollector(\"localhost\", \"6188\"))\n      .andReturn(Collections.singletonList(\"localhost\")).anyTimes();\n\n    conf.setListDelimiter(eq(','));\n    expectLastCall().anyTimes();\n\n    expect(conf.getKeys()).andReturn(new Iterator() {\n      @Override\n      public boolean hasNext() {\n        return false;\n      }\n\n      @Override\n      public Object next() {\n        return null;\n      }\n\n      @Override\n      public void remove() {\n\n      }\n    }).once();\n\n    AbstractMetric metric = createNiceMock(AbstractMetric.class);\n    expect(metric.name()).andReturn(\"metricName\").anyTimes();\n    expect(metric.value()).andReturn(1.0).once();\n    expect(metric.value()).andReturn(2.0).once();\n    expect(metric.value()).andReturn(3.0).once();\n    expect(metric.value()).andReturn(4.0).once();\n    expect(metric.value()).andReturn(5.0).once();\n    expect(metric.value()).andReturn(6.0).once();\n\n    MetricsRecord record = createNiceMock(MetricsRecord.class);\n    expect(record.name()).andReturn(\"testName\").anyTimes();\n    expect(record.context()).andReturn(\"testContext\").anyTimes();\n\n    sink.appendPrefix(eq(record), (StringBuilder) anyObject());\n    expectLastCall().anyTimes().andStubAnswer(new IAnswer<Object>() {\n      @Override\n      public Object answer() throws Throwable {\n        return null;\n      }\n    });\n\n    final Long now = System.currentTimeMillis();\n    // TODO: Current implementation of cache needs > 1 elements to evict any\n    expect(record.timestamp()).andReturn(now).times(2);\n    expect(record.timestamp()).andReturn(now + 100l).times(2);\n    expect(record.timestamp()).andReturn(now + 200l).once();\n    expect(record.timestamp()).andReturn(now + 300l).once();\n\n    expect(record.metrics()).andReturn(Arrays.asList(metric)).anyTimes();\n\n    final List<TimelineMetrics> capturedMetrics = new ArrayList<TimelineMetrics>();\n    sink.emitMetrics((TimelineMetrics) anyObject());\n    expectLastCall().andStubAnswer(new IAnswer<Object>() {\n      @Override\n      public Object answer() throws Throwable {\n        capturedMetrics.add((TimelineMetrics) EasyMock.getCurrentArguments()[0]);\n        return null;\n      }\n    });\n\n    replay(conf, sink, record, metric);\n\n    sink.init(conf);\n\n    // time = t1\n    sink.putMetrics(record);\n    // time = t1\n    sink.putMetrics(record);\n    // time = t2\n    sink.putMetrics(record);\n    // Evict\n    // time = t2\n    sink.putMetrics(record);\n    // time = t3\n    sink.putMetrics(record);\n    // time = t4\n    sink.putMetrics(record);\n\n    verify(conf, sink, record, metric);\n\n    Assert.assertEquals(2, capturedMetrics.size());\n    Iterator<TimelineMetrics> metricsIterator = capturedMetrics.iterator();\n\n    // t1, t2\n    TimelineMetric timelineMetric1 = metricsIterator.next().getMetrics().get(0);\n    Assert.assertEquals(2, timelineMetric1.getMetricValues().size());\n    Iterator<Long> timestamps = timelineMetric1.getMetricValues().keySet().iterator();\n    Assert.assertEquals(now, timestamps.next());\n    Assert.assertEquals(new Long(now + 100l), timestamps.next());\n    Iterator<Double> values = timelineMetric1.getMetricValues().values().iterator();\n    Assert.assertEquals(new Double(1.0), values.next());\n    Assert.assertEquals(new Double(3.0), values.next());\n    // t3, t4\n    TimelineMetric timelineMetric2 = metricsIterator.next().getMetrics().get(0);\n    Assert.assertEquals(2, timelineMetric2.getMetricValues().size());\n    timestamps = timelineMetric2.getMetricValues().keySet().iterator();\n    Assert.assertEquals(new Long(now + 200l), timestamps.next());\n    Assert.assertEquals(new Long(now + 300l), timestamps.next());\n    values = timelineMetric2.getMetricValues().values().iterator();\n    Assert.assertEquals(new Double(5.0), values.next());\n    Assert.assertEquals(new Double(6.0), values.next());\n  }","id":13049,"modified_method":"@Test\n  public void testDuplicateTimeSeriesNotSaved() throws Exception {\n    HadoopTimelineMetricsSink sink =\n      createMockBuilder(HadoopTimelineMetricsSink.class)\n        .withConstructor().addMockedMethod(\"appendPrefix\")\n        .addMockedMethod(\"findLiveCollectorHostsFromKnownCollector\")\n        .addMockedMethod(\"emitMetrics\").createNiceMock();\n\n    SubsetConfiguration conf = createNiceMock(SubsetConfiguration.class);\n    expect(conf.getString(\"slave.host.name\")).andReturn(\"localhost\").anyTimes();\n    expect(conf.getParent()).andReturn(null).anyTimes();\n    expect(conf.getPrefix()).andReturn(\"service\").anyTimes();\n    expect(conf.getString(eq(COLLECTOR_PROPERTY), eq(\"\"))).andReturn(\"localhost:6188\").anyTimes();\n    expect(conf.getString(eq(\"serviceName-prefix\"), eq(\"\"))).andReturn(\"\").anyTimes();\n    expect(conf.getString(eq(COLLECTOR_PROTOCOL), eq(\"http\"))).andReturn(\"http\").anyTimes();\n    expect(conf.getString(eq(COLLECTOR_PORT), eq(\"6188\"))).andReturn(\"6188\").anyTimes();\n\n    expect(conf.getInt(eq(MAX_METRIC_ROW_CACHE_SIZE), anyInt())).andReturn(10).anyTimes();\n    // Return eviction time smaller than time diff for first 3 entries\n    // Third entry will result in eviction\n    expect(conf.getInt(eq(METRICS_SEND_INTERVAL), anyInt())).andReturn(90).anyTimes();\n\n    expect(sink.findLiveCollectorHostsFromKnownCollector(\"localhost\", \"6188\"))\n      .andReturn(Collections.singletonList(\"localhost\")).anyTimes();\n\n    conf.setListDelimiter(eq(','));\n    expectLastCall().anyTimes();\n\n    expect(conf.getKeys()).andReturn(new Iterator() {\n      @Override\n      public boolean hasNext() {\n        return false;\n      }\n\n      @Override\n      public Object next() {\n        return null;\n      }\n\n      @Override\n      public void remove() {\n\n      }\n    }).once();\n\n    AbstractMetric metric = createNiceMock(AbstractMetric.class);\n    expect(metric.name()).andReturn(\"metricName\").anyTimes();\n    expect(metric.value()).andReturn(1.0).once();\n    expect(metric.value()).andReturn(2.0).once();\n    expect(metric.value()).andReturn(3.0).once();\n    expect(metric.value()).andReturn(4.0).once();\n    expect(metric.value()).andReturn(5.0).once();\n\n    MetricsRecord record = createNiceMock(MetricsRecord.class);\n    expect(record.name()).andReturn(\"testName\").anyTimes();\n    expect(record.context()).andReturn(\"testContext\").anyTimes();\n\n    sink.appendPrefix(eq(record), (StringBuilder) anyObject());\n    expectLastCall().anyTimes().andStubAnswer(new IAnswer<Object>() {\n      @Override\n      public Object answer() throws Throwable {\n        return null;\n      }\n    });\n\n    final Long now = System.currentTimeMillis();\n    // TODO: Current implementation of cache needs > 1 elements to evict any\n    expect(record.timestamp()).andReturn(now).times(2);\n    expect(record.timestamp()).andReturn(now + 100l).once();\n    expect(record.timestamp()).andReturn(now + 200l).once();\n    expect(record.timestamp()).andReturn(now + 300l).once();\n\n    expect(record.metrics()).andReturn(Arrays.asList(metric)).anyTimes();\n\n    final List<TimelineMetrics> capturedMetrics = new ArrayList<TimelineMetrics>();\n    sink.emitMetrics((TimelineMetrics) anyObject());\n    expectLastCall().andStubAnswer(new IAnswer<Object>() {\n      @Override\n      public Object answer() throws Throwable {\n        capturedMetrics.add((TimelineMetrics) EasyMock.getCurrentArguments()[0]);\n        return null;\n      }\n    });\n\n    replay(conf, sink, record, metric);\n\n    sink.init(conf);\n\n    // time = t1\n    sink.putMetrics(record);\n    // time = t1\n    sink.putMetrics(record);\n    // time = t2\n    sink.putMetrics(record);\n    // Evict\n    // time = t2\n    sink.putMetrics(record);\n    // time = t3\n    sink.putMetrics(record);\n\n    verify(conf, sink, record, metric);\n\n    Assert.assertEquals(2, capturedMetrics.size());\n    Iterator<TimelineMetrics> metricsIterator = capturedMetrics.iterator();\n\n    // t1, t2\n    TimelineMetric timelineMetric1 = metricsIterator.next().getMetrics().get(0);\n    Assert.assertEquals(2, timelineMetric1.getMetricValues().size());\n    Iterator<Long> timestamps = timelineMetric1.getMetricValues().keySet().iterator();\n    Assert.assertEquals(now, timestamps.next());\n    Assert.assertEquals(new Long(now + 100l), timestamps.next());\n    Iterator<Double> values = timelineMetric1.getMetricValues().values().iterator();\n    Assert.assertEquals(new Double(2.0), values.next());\n    Assert.assertEquals(new Double(3.0), values.next());\n    // t3, t4\n    TimelineMetric timelineMetric2 = metricsIterator.next().getMetrics().get(0);\n    Assert.assertEquals(2, timelineMetric2.getMetricValues().size());\n    timestamps = timelineMetric2.getMetricValues().keySet().iterator();\n    Assert.assertEquals(new Long(now + 200l), timestamps.next());\n    Assert.assertEquals(new Long(now + 300l), timestamps.next());\n    values = timelineMetric2.getMetricValues().values().iterator();\n    Assert.assertEquals(new Double(4.0), values.next());\n    Assert.assertEquals(new Double(5.0), values.next());\n  }","commit_id":"bef695d3fc44528d94a0fa60a3f1b6c5db51f02d","url":"https://github.com/apache/ambari"},{"original_method":"public void putTimelineMetric(TimelineMetric timelineMetric) {\n    timelineMetricCache.put(timelineMetric.getMetricName(), timelineMetric);\n  }","id":13050,"modified_method":"public void putTimelineMetric(TimelineMetric timelineMetric) {\n    String metricName = timelineMetric.getMetricName();\n    TimelineMetricWrapper timelineMetricWrapper = timelineMetricCache.getIfPresent(metricName);\n\n    if (timelineMetricWrapper != null) {\n      timelineMetricWrapper.putMetric(timelineMetric);\n    } else {\n      timelineMetricCache.put(metricName, new TimelineMetricWrapper(timelineMetric));\n    }\n  }","commit_id":"bef695d3fc44528d94a0fa60a3f1b6c5db51f02d","url":"https://github.com/apache/ambari"},{"original_method":"public TimelineMetricsCache(int maxRecsPerName, int maxEvictionTimeInMillis,\n                              boolean skipCounterTransform) {\n    this.maxRecsPerName = maxRecsPerName;\n    this.maxEvictionTimeInMillis = maxEvictionTimeInMillis;\n    this.skipCounterTransform = skipCounterTransform;\n  }","id":13051,"modified_method":"public TimelineMetricsCache(int maxRecsPerName, int maxEvictionTimeInMillis,\n                              boolean skipCounterTransform) {\n    this.maxRecsPerName = maxRecsPerName;\n    this.maxEvictionTimeInMillis = maxEvictionTimeInMillis;\n    this.skipCounterTransform = skipCounterTransform;\n    this.timelineMetricCache = CacheBuilder.newBuilder().expireAfterWrite(maxEvictionTimeInMillis * 2, TimeUnit.MILLISECONDS).build();\n  }","commit_id":"bef695d3fc44528d94a0fa60a3f1b6c5db51f02d","url":"https://github.com/apache/ambari"},{"original_method":"public synchronized void putMetric(TimelineMetric metric) {\n      TreeMap<Long, Double> metricValues = this.timelineMetric.getMetricValues();\n      if (metricValues.size() > maxRecsPerName) {\n        // remove values for eldest maxEvictionTimeInMillis\n        long newEldestTimestamp = oldestTimestamp + maxEvictionTimeInMillis;\n        TreeMap<Long, Double> metricsSubSet =\n          new TreeMap<>(metricValues.tailMap(newEldestTimestamp));\n        if (metricsSubSet.isEmpty()) {\n          oldestTimestamp = metric.getStartTime();\n          this.timelineMetric.setStartTime(metric.getStartTime());\n        } else {\n          Long newStartTime = metricsSubSet.firstKey();\n          oldestTimestamp = newStartTime;\n          this.timelineMetric.setStartTime(newStartTime);\n        }\n        this.timelineMetric.setMetricValues(metricsSubSet);\n        LOG.warn(\"Metrics cache overflow. Values for metric \" +\n          metric.getMetricName() + \" older than \" + newEldestTimestamp +\n          \" were removed to clean up the cache.\");\n      }\n      this.timelineMetric.addMetricValues(metric.getMetricValues());\n      updateTimeDiff(metric.getStartTime());\n    }","id":13052,"modified_method":"public synchronized void putMetric(TimelineMetric metric) {\n      if (dataPointsCache.size() == 0) {\n        oldestTimeStamp = metric.getStartTime();\n        newestTimeStamp = metric.getStartTime();\n      }\n      TreeMap<Long, Double> metricValues = metric.getMetricValues();\n      for (Map.Entry<Long, Double> entry : metricValues.entrySet()) {\n        Long key = entry.getKey();\n        dataPointsCache.put(key, entry.getValue());\n      }\n      oldestTimeStamp = Math.min(oldestTimeStamp, metric.getStartTime());\n      newestTimeStamp = Math.max(newestTimeStamp, metric.getStartTime());\n    }","commit_id":"bef695d3fc44528d94a0fa60a3f1b6c5db51f02d","url":"https://github.com/apache/ambari"},{"original_method":"public TimelineMetrics getAllMetrics() {\n    return timelineMetricCache.evictAll();\n  }","id":13053,"modified_method":"public TimelineMetrics getAllMetrics() {\n    TimelineMetrics timelineMetrics = new TimelineMetrics();\n    Collection<TimelineMetricWrapper> timelineMetricWrapperCollection = timelineMetricCache.asMap().values();\n    List<TimelineMetric> timelineMetricList =\n            new ArrayList<>(timelineMetricWrapperCollection.size());\n\n    for (TimelineMetricWrapper timelineMetricWrapper : timelineMetricWrapperCollection) {\n      timelineMetricList.add(timelineMetricWrapper.getTimelineMetric());\n    }\n\n    timelineMetrics.setMetrics(timelineMetricList);\n    return timelineMetrics;\n  }","commit_id":"bef695d3fc44528d94a0fa60a3f1b6c5db51f02d","url":"https://github.com/apache/ambari"},{"original_method":"public synchronized TimelineMetric getTimelineMetric() {\n      return timelineMetric;\n    }","id":13054,"modified_method":"public synchronized TimelineMetric getTimelineMetric() {\n      TreeMap<Long, Double> metricValues = new TreeMap<>(dataPointsCache.asMap());\n      if (metricValues.isEmpty() || newestTimeStamp - oldestTimeStamp < maxEvictionTimeInMillis) {\n        return null;\n      }\n      dataPointsCache.invalidateAll();\n      timelineMetric.setStartTime(metricValues.firstKey());\n      timelineMetric.setMetricValues(metricValues);\n      return new TimelineMetric(timelineMetric);\n    }","commit_id":"bef695d3fc44528d94a0fa60a3f1b6c5db51f02d","url":"https://github.com/apache/ambari"},{"original_method":"public TimelineMetric getTimelineMetric(String metricName) {\n    if (timelineMetricCache.containsKey(metricName)) {\n      return timelineMetricCache.evict(metricName);\n    }\n\n    return null;\n  }","id":13055,"modified_method":"public TimelineMetric getTimelineMetric(String metricName) {\n    TimelineMetricWrapper timelineMetricWrapper = timelineMetricCache.getIfPresent(metricName);\n    if (timelineMetricWrapper != null) {\n      return timelineMetricWrapper.getTimelineMetric();\n    }\n    return null;\n  }","commit_id":"bef695d3fc44528d94a0fa60a3f1b6c5db51f02d","url":"https://github.com/apache/ambari"},{"original_method":"TimelineMetricWrapper(TimelineMetric timelineMetric) {\n      this.timelineMetric = timelineMetric;\n      this.oldestTimestamp = timelineMetric.getStartTime();\n    }","id":13056,"modified_method":"TimelineMetricWrapper(TimelineMetric timelineMetric) {\n      this.timelineMetric = timelineMetric;\n      dataPointsCache = CacheBuilder.newBuilder().\n              maximumSize(maxRecsPerName).expireAfterWrite(maxEvictionTimeInMillis * 2, TimeUnit.MILLISECONDS).build();\n\n      putMetric(timelineMetric);\n    }","commit_id":"bef695d3fc44528d94a0fa60a3f1b6c5db51f02d","url":"https://github.com/apache/ambari"},{"original_method":"@Test\n  public void testDuplicateTimeSeriesNotSaved() throws Exception {\n    HadoopTimelineMetricsSink sink =\n      createMockBuilder(HadoopTimelineMetricsSink.class)\n        .withConstructor().addMockedMethod(\"appendPrefix\")\n        .addMockedMethod(\"findLiveCollectorHostsFromKnownCollector\")\n        .addMockedMethod(\"emitMetrics\").createNiceMock();\n\n    SubsetConfiguration conf = createNiceMock(SubsetConfiguration.class);\n    expect(conf.getString(\"slave.host.name\")).andReturn(\"localhost\").anyTimes();\n    expect(conf.getParent()).andReturn(null).anyTimes();\n    expect(conf.getPrefix()).andReturn(\"service\").anyTimes();\n    expect(conf.getString(eq(COLLECTOR_PROPERTY), eq(\"\"))).andReturn(\"localhost:6188\").anyTimes();\n    expect(conf.getString(eq(\"serviceName-prefix\"), eq(\"\"))).andReturn(\"\").anyTimes();\n    expect(conf.getString(eq(COLLECTOR_PROTOCOL), eq(\"http\"))).andReturn(\"http\").anyTimes();\n    expect(conf.getString(eq(COLLECTOR_PORT), eq(\"6188\"))).andReturn(\"6188\").anyTimes();\n\n    expect(conf.getInt(eq(MAX_METRIC_ROW_CACHE_SIZE), anyInt())).andReturn(10).anyTimes();\n    // Return eviction time smaller than time diff for first 3 entries\n    // Third entry will result in eviction\n    expect(conf.getInt(eq(METRICS_SEND_INTERVAL), anyInt())).andReturn(10).anyTimes();\n\n    expect(sink.findLiveCollectorHostsFromKnownCollector(\"localhost\", \"6188\"))\n      .andReturn(Collections.singletonList(\"localhost\")).anyTimes();\n\n    conf.setListDelimiter(eq(','));\n    expectLastCall().anyTimes();\n\n    expect(conf.getKeys()).andReturn(new Iterator() {\n      @Override\n      public boolean hasNext() {\n        return false;\n      }\n\n      @Override\n      public Object next() {\n        return null;\n      }\n\n      @Override\n      public void remove() {\n\n      }\n    }).once();\n\n    AbstractMetric metric = createNiceMock(AbstractMetric.class);\n    expect(metric.name()).andReturn(\"metricName\").anyTimes();\n    expect(metric.value()).andReturn(1.0).once();\n    expect(metric.value()).andReturn(2.0).once();\n    expect(metric.value()).andReturn(3.0).once();\n    expect(metric.value()).andReturn(4.0).once();\n    expect(metric.value()).andReturn(5.0).once();\n    expect(metric.value()).andReturn(6.0).once();\n\n    MetricsRecord record = createNiceMock(MetricsRecord.class);\n    expect(record.name()).andReturn(\"testName\").anyTimes();\n    expect(record.context()).andReturn(\"testContext\").anyTimes();\n\n    sink.appendPrefix(eq(record), (StringBuilder) anyObject());\n    expectLastCall().anyTimes().andStubAnswer(new IAnswer<Object>() {\n      @Override\n      public Object answer() throws Throwable {\n        return null;\n      }\n    });\n\n    final Long now = System.currentTimeMillis();\n    // TODO: Current implementation of cache needs > 1 elements to evict any\n    expect(record.timestamp()).andReturn(now).times(2);\n    expect(record.timestamp()).andReturn(now + 100l).times(2);\n    expect(record.timestamp()).andReturn(now + 200l).once();\n    expect(record.timestamp()).andReturn(now + 300l).once();\n\n    expect(record.metrics()).andReturn(Arrays.asList(metric)).anyTimes();\n\n    final List<TimelineMetrics> capturedMetrics = new ArrayList<TimelineMetrics>();\n    sink.emitMetrics((TimelineMetrics) anyObject());\n    expectLastCall().andStubAnswer(new IAnswer<Object>() {\n      @Override\n      public Object answer() throws Throwable {\n        capturedMetrics.add((TimelineMetrics) EasyMock.getCurrentArguments()[0]);\n        return null;\n      }\n    });\n\n    replay(conf, sink, record, metric);\n\n    sink.init(conf);\n\n    // time = t1\n    sink.putMetrics(record);\n    // time = t1\n    sink.putMetrics(record);\n    // time = t2\n    sink.putMetrics(record);\n    // Evict\n    // time = t2\n    sink.putMetrics(record);\n    // time = t3\n    sink.putMetrics(record);\n    // time = t4\n    sink.putMetrics(record);\n\n    verify(conf, sink, record, metric);\n\n    Assert.assertEquals(2, capturedMetrics.size());\n    Iterator<TimelineMetrics> metricsIterator = capturedMetrics.iterator();\n\n    // t1, t2\n    TimelineMetric timelineMetric1 = metricsIterator.next().getMetrics().get(0);\n    Assert.assertEquals(2, timelineMetric1.getMetricValues().size());\n    Iterator<Long> timestamps = timelineMetric1.getMetricValues().keySet().iterator();\n    Assert.assertEquals(now, timestamps.next());\n    Assert.assertEquals(new Long(now + 100l), timestamps.next());\n    Iterator<Double> values = timelineMetric1.getMetricValues().values().iterator();\n    Assert.assertEquals(new Double(1.0), values.next());\n    Assert.assertEquals(new Double(3.0), values.next());\n    // t3, t4\n    TimelineMetric timelineMetric2 = metricsIterator.next().getMetrics().get(0);\n    Assert.assertEquals(2, timelineMetric2.getMetricValues().size());\n    timestamps = timelineMetric2.getMetricValues().keySet().iterator();\n    Assert.assertEquals(new Long(now + 200l), timestamps.next());\n    Assert.assertEquals(new Long(now + 300l), timestamps.next());\n    values = timelineMetric2.getMetricValues().values().iterator();\n    Assert.assertEquals(new Double(5.0), values.next());\n    Assert.assertEquals(new Double(6.0), values.next());\n  }","id":13057,"modified_method":"@Test\n  public void testDuplicateTimeSeriesNotSaved() throws Exception {\n    HadoopTimelineMetricsSink sink =\n      createMockBuilder(HadoopTimelineMetricsSink.class)\n        .withConstructor().addMockedMethod(\"appendPrefix\")\n        .addMockedMethod(\"findLiveCollectorHostsFromKnownCollector\")\n        .addMockedMethod(\"emitMetrics\").createNiceMock();\n\n    SubsetConfiguration conf = createNiceMock(SubsetConfiguration.class);\n    expect(conf.getString(\"slave.host.name\")).andReturn(\"localhost\").anyTimes();\n    expect(conf.getParent()).andReturn(null).anyTimes();\n    expect(conf.getPrefix()).andReturn(\"service\").anyTimes();\n    expect(conf.getString(eq(COLLECTOR_PROPERTY), eq(\"\"))).andReturn(\"localhost:6188\").anyTimes();\n    expect(conf.getString(eq(\"serviceName-prefix\"), eq(\"\"))).andReturn(\"\").anyTimes();\n    expect(conf.getString(eq(COLLECTOR_PROTOCOL), eq(\"http\"))).andReturn(\"http\").anyTimes();\n    expect(conf.getString(eq(COLLECTOR_PORT), eq(\"6188\"))).andReturn(\"6188\").anyTimes();\n\n    expect(conf.getInt(eq(MAX_METRIC_ROW_CACHE_SIZE), anyInt())).andReturn(10).anyTimes();\n    // Return eviction time smaller than time diff for first 3 entries\n    // Third entry will result in eviction\n    expect(conf.getInt(eq(METRICS_SEND_INTERVAL), anyInt())).andReturn(90).anyTimes();\n\n    expect(sink.findLiveCollectorHostsFromKnownCollector(\"localhost\", \"6188\"))\n      .andReturn(Collections.singletonList(\"localhost\")).anyTimes();\n\n    conf.setListDelimiter(eq(','));\n    expectLastCall().anyTimes();\n\n    expect(conf.getKeys()).andReturn(new Iterator() {\n      @Override\n      public boolean hasNext() {\n        return false;\n      }\n\n      @Override\n      public Object next() {\n        return null;\n      }\n\n      @Override\n      public void remove() {\n\n      }\n    }).once();\n\n    AbstractMetric metric = createNiceMock(AbstractMetric.class);\n    expect(metric.name()).andReturn(\"metricName\").anyTimes();\n    expect(metric.value()).andReturn(1.0).once();\n    expect(metric.value()).andReturn(2.0).once();\n    expect(metric.value()).andReturn(3.0).once();\n    expect(metric.value()).andReturn(4.0).once();\n    expect(metric.value()).andReturn(5.0).once();\n\n    MetricsRecord record = createNiceMock(MetricsRecord.class);\n    expect(record.name()).andReturn(\"testName\").anyTimes();\n    expect(record.context()).andReturn(\"testContext\").anyTimes();\n\n    sink.appendPrefix(eq(record), (StringBuilder) anyObject());\n    expectLastCall().anyTimes().andStubAnswer(new IAnswer<Object>() {\n      @Override\n      public Object answer() throws Throwable {\n        return null;\n      }\n    });\n\n    final Long now = System.currentTimeMillis();\n    // TODO: Current implementation of cache needs > 1 elements to evict any\n    expect(record.timestamp()).andReturn(now).times(2);\n    expect(record.timestamp()).andReturn(now + 100l).once();\n    expect(record.timestamp()).andReturn(now + 200l).once();\n    expect(record.timestamp()).andReturn(now + 300l).once();\n\n    expect(record.metrics()).andReturn(Arrays.asList(metric)).anyTimes();\n\n    final List<TimelineMetrics> capturedMetrics = new ArrayList<TimelineMetrics>();\n    sink.emitMetrics((TimelineMetrics) anyObject());\n    expectLastCall().andStubAnswer(new IAnswer<Object>() {\n      @Override\n      public Object answer() throws Throwable {\n        capturedMetrics.add((TimelineMetrics) EasyMock.getCurrentArguments()[0]);\n        return null;\n      }\n    });\n\n    replay(conf, sink, record, metric);\n\n    sink.init(conf);\n\n    // time = t1\n    sink.putMetrics(record);\n    // time = t1\n    sink.putMetrics(record);\n    // time = t2\n    sink.putMetrics(record);\n    // Evict\n    // time = t2\n    sink.putMetrics(record);\n    // time = t3\n    sink.putMetrics(record);\n\n    verify(conf, sink, record, metric);\n\n    Assert.assertEquals(2, capturedMetrics.size());\n    Iterator<TimelineMetrics> metricsIterator = capturedMetrics.iterator();\n\n    // t1, t2\n    TimelineMetric timelineMetric1 = metricsIterator.next().getMetrics().get(0);\n    Assert.assertEquals(2, timelineMetric1.getMetricValues().size());\n    Iterator<Long> timestamps = timelineMetric1.getMetricValues().keySet().iterator();\n    Assert.assertEquals(now, timestamps.next());\n    Assert.assertEquals(new Long(now + 100l), timestamps.next());\n    Iterator<Double> values = timelineMetric1.getMetricValues().values().iterator();\n    Assert.assertEquals(new Double(2.0), values.next());\n    Assert.assertEquals(new Double(3.0), values.next());\n    // t3, t4\n    TimelineMetric timelineMetric2 = metricsIterator.next().getMetrics().get(0);\n    Assert.assertEquals(2, timelineMetric2.getMetricValues().size());\n    timestamps = timelineMetric2.getMetricValues().keySet().iterator();\n    Assert.assertEquals(new Long(now + 200l), timestamps.next());\n    Assert.assertEquals(new Long(now + 300l), timestamps.next());\n    values = timelineMetric2.getMetricValues().values().iterator();\n    Assert.assertEquals(new Double(4.0), values.next());\n    Assert.assertEquals(new Double(5.0), values.next());\n  }","commit_id":"46b2fcdef0b0fa9d741951cbb6f9c97b53d09be4","url":"https://github.com/apache/ambari"},{"original_method":"public TimelineMetricsCache(int maxRecsPerName, int maxEvictionTimeInMillis,\n                              boolean skipCounterTransform) {\n    this.maxRecsPerName = maxRecsPerName;\n    this.maxEvictionTimeInMillis = maxEvictionTimeInMillis;\n    this.skipCounterTransform = skipCounterTransform;\n  }","id":13058,"modified_method":"public TimelineMetricsCache(int maxRecsPerName, int maxEvictionTimeInMillis,\n                              boolean skipCounterTransform) {\n    this.maxRecsPerName = maxRecsPerName;\n    this.maxEvictionTimeInMillis = maxEvictionTimeInMillis;\n    this.skipCounterTransform = skipCounterTransform;\n    this.timelineMetricCache = CacheBuilder.newBuilder().expireAfterWrite(maxEvictionTimeInMillis * 2, TimeUnit.MILLISECONDS).build();\n  }","commit_id":"46b2fcdef0b0fa9d741951cbb6f9c97b53d09be4","url":"https://github.com/apache/ambari"},{"original_method":"public void putTimelineMetric(TimelineMetric timelineMetric) {\n    timelineMetricCache.put(timelineMetric.getMetricName(), timelineMetric);\n  }","id":13059,"modified_method":"public void putTimelineMetric(TimelineMetric timelineMetric) {\n    String metricName = timelineMetric.getMetricName();\n    TimelineMetricWrapper timelineMetricWrapper = timelineMetricCache.getIfPresent(metricName);\n\n    if (timelineMetricWrapper != null) {\n      timelineMetricWrapper.putMetric(timelineMetric);\n    } else {\n      timelineMetricCache.put(metricName, new TimelineMetricWrapper(timelineMetric));\n    }\n  }","commit_id":"46b2fcdef0b0fa9d741951cbb6f9c97b53d09be4","url":"https://github.com/apache/ambari"},{"original_method":"public TimelineMetric getTimelineMetric(String metricName) {\n    if (timelineMetricCache.containsKey(metricName)) {\n      return timelineMetricCache.evict(metricName);\n    }\n\n    return null;\n  }","id":13060,"modified_method":"public TimelineMetric getTimelineMetric(String metricName) {\n    TimelineMetricWrapper timelineMetricWrapper = timelineMetricCache.getIfPresent(metricName);\n    if (timelineMetricWrapper != null) {\n      return timelineMetricWrapper.getTimelineMetric();\n    }\n    return null;\n  }","commit_id":"46b2fcdef0b0fa9d741951cbb6f9c97b53d09be4","url":"https://github.com/apache/ambari"},{"original_method":"public synchronized void putMetric(TimelineMetric metric) {\n      TreeMap<Long, Double> metricValues = this.timelineMetric.getMetricValues();\n      if (metricValues.size() > maxRecsPerName) {\n        // remove values for eldest maxEvictionTimeInMillis\n        long newEldestTimestamp = oldestTimestamp + maxEvictionTimeInMillis;\n        TreeMap<Long, Double> metricsSubSet =\n          new TreeMap<>(metricValues.tailMap(newEldestTimestamp));\n        if (metricsSubSet.isEmpty()) {\n          oldestTimestamp = metric.getStartTime();\n          this.timelineMetric.setStartTime(metric.getStartTime());\n        } else {\n          Long newStartTime = metricsSubSet.firstKey();\n          oldestTimestamp = newStartTime;\n          this.timelineMetric.setStartTime(newStartTime);\n        }\n        this.timelineMetric.setMetricValues(metricsSubSet);\n        LOG.warn(\"Metrics cache overflow. Values for metric \" +\n          metric.getMetricName() + \" older than \" + newEldestTimestamp +\n          \" were removed to clean up the cache.\");\n      }\n      this.timelineMetric.addMetricValues(metric.getMetricValues());\n      updateTimeDiff(metric.getStartTime());\n    }","id":13061,"modified_method":"public synchronized void putMetric(TimelineMetric metric) {\n      if (dataPointsCache.size() == 0) {\n        oldestTimeStamp = metric.getStartTime();\n        newestTimeStamp = metric.getStartTime();\n      }\n      TreeMap<Long, Double> metricValues = metric.getMetricValues();\n      for (Map.Entry<Long, Double> entry : metricValues.entrySet()) {\n        Long key = entry.getKey();\n        dataPointsCache.put(key, entry.getValue());\n      }\n      oldestTimeStamp = Math.min(oldestTimeStamp, metric.getStartTime());\n      newestTimeStamp = Math.max(newestTimeStamp, metric.getStartTime());\n    }","commit_id":"46b2fcdef0b0fa9d741951cbb6f9c97b53d09be4","url":"https://github.com/apache/ambari"},{"original_method":"TimelineMetricWrapper(TimelineMetric timelineMetric) {\n      this.timelineMetric = timelineMetric;\n      this.oldestTimestamp = timelineMetric.getStartTime();\n    }","id":13062,"modified_method":"TimelineMetricWrapper(TimelineMetric timelineMetric) {\n      this.timelineMetric = timelineMetric;\n      dataPointsCache = CacheBuilder.newBuilder().\n              maximumSize(maxRecsPerName).expireAfterWrite(maxEvictionTimeInMillis * 2, TimeUnit.MILLISECONDS).build();\n\n      putMetric(timelineMetric);\n    }","commit_id":"46b2fcdef0b0fa9d741951cbb6f9c97b53d09be4","url":"https://github.com/apache/ambari"},{"original_method":"public synchronized TimelineMetric getTimelineMetric() {\n      return timelineMetric;\n    }","id":13063,"modified_method":"public synchronized TimelineMetric getTimelineMetric() {\n      TreeMap<Long, Double> metricValues = new TreeMap<>(dataPointsCache.asMap());\n      if (metricValues.isEmpty() || newestTimeStamp - oldestTimeStamp < maxEvictionTimeInMillis) {\n        return null;\n      }\n      dataPointsCache.invalidateAll();\n      timelineMetric.setStartTime(metricValues.firstKey());\n      timelineMetric.setMetricValues(metricValues);\n      return new TimelineMetric(timelineMetric);\n    }","commit_id":"46b2fcdef0b0fa9d741951cbb6f9c97b53d09be4","url":"https://github.com/apache/ambari"},{"original_method":"public TimelineMetrics getAllMetrics() {\n    return timelineMetricCache.evictAll();\n  }","id":13064,"modified_method":"public TimelineMetrics getAllMetrics() {\n    TimelineMetrics timelineMetrics = new TimelineMetrics();\n    Collection<TimelineMetricWrapper> timelineMetricWrapperCollection = timelineMetricCache.asMap().values();\n    List<TimelineMetric> timelineMetricList =\n            new ArrayList<>(timelineMetricWrapperCollection.size());\n\n    for (TimelineMetricWrapper timelineMetricWrapper : timelineMetricWrapperCollection) {\n      timelineMetricList.add(timelineMetricWrapper.getTimelineMetric());\n    }\n\n    timelineMetrics.setMetrics(timelineMetricList);\n    return timelineMetrics;\n  }","commit_id":"46b2fcdef0b0fa9d741951cbb6f9c97b53d09be4","url":"https://github.com/apache/ambari"},{"original_method":"public void testValidListener() throws Exception\n    {\n        HttpsConnector connector = (HttpsConnector)getConnector();\n\n        MuleDescriptor d = getTestDescriptor(\"orange\", Orange.class.getName());\n        UMOComponent component = getTestComponent(d);\n        UMOEndpoint endpoint = getTestEndpoint(\"Test\", UMOEndpoint.ENDPOINT_TYPE_RECEIVER);\n        endpoint.setEndpointURI(null);\n        endpoint.setConnector(connector);\n\n        try\n        {\n            connector.registerListener(component, endpoint);\n            fail(\"cannot register with null endpointUri\");\n        }\n        catch (Exception e)\n        {\n            /* expected */\n        }\n\n        endpoint.setEndpointURI(null);\n        try\n        {\n            connector.registerListener(component, endpoint);\n            fail(\"cannot register with empty endpointUri\");\n        }\n        catch (Exception e)\n        {\n            /* expected */\n        }\n\n        endpoint.setEndpointURI(new MuleEndpointURI(\"https://localhost:0\"));\n        connector.registerListener(component, endpoint);\n        try\n        {\n            connector.registerListener(component, endpoint);\n            fail(\"cannot register on the same endpointUri\");\n        }\n        catch (Exception e)\n        {\n            /* expected */\n        }\n\n        connector.dispose();\n    }","id":13065,"modified_method":"public void testValidListener() throws Exception\n    {\n        MuleDescriptor d = getTestDescriptor(\"orange\", Orange.class.getName());\n        UMOComponent component = getTestComponent(d);\n        UMOEndpoint endpoint = new MuleEndpoint(getTestEndpointURI(), true);\n\n        try\n        {\n            endpoint.setEndpointURI(null);\n            fail(\"cannot register with empty endpointUri\");\n        }\n        catch (Exception e)\n        {\n            /* expected */\n        }\n\n        endpoint.setEndpointURI(new MuleEndpointURI(getTestEndpointURI()));\n        connector.registerListener(component, endpoint);\n    }","commit_id":"a4aff2906531bd9b07ae1dbf89e6896c36235ca1","url":"https://github.com/mulesoft/mule"},{"original_method":"public UMOConnector getConnector() throws Exception\n    {\n        return createConnector(managementContext, true);\n    }","id":13066,"modified_method":"public UMOConnector getConnector() throws Exception\n    {\n        return createConnector(managementContext, false);\n    }","commit_id":"a4aff2906531bd9b07ae1dbf89e6896c36235ca1","url":"https://github.com/mulesoft/mule"},{"original_method":"public UMOConnector getConnector() throws Exception\n    {\n        HttpConnector c = new HttpConnector();\n        c.setName(\"HttpConnector\");\n        c.initialise();\n        return c;\n    }","id":13067,"modified_method":"public UMOConnector getConnector() throws Exception\n    {\n        HttpConnector c = new HttpConnector();\n        c.setName(\"HttpConnector\");\n        return c;\n    }","commit_id":"2048f8543ab7924b43f80714d0b0ee0f515413e2","url":"https://github.com/mulesoft/mule"},{"original_method":"public void testValidListener() throws Exception\n    {\n        HttpConnector connector = (HttpConnector)getConnector();\n\n        MuleDescriptor d = getTestDescriptor(\"orange\", Orange.class.getName());\n        UMOComponent component = getTestComponent(d);\n        UMOEndpoint endpoint = getTestEndpoint(\"Test\", UMOEndpoint.ENDPOINT_TYPE_RECEIVER);\n        endpoint.setEndpointURI(null);\n        endpoint.setConnector(connector);\n\n        try\n        {\n            connector.registerListener(component, endpoint);\n            fail(\"cannot register with null endpointUri\");\n        }\n        catch (Exception e)\n        {\n            /* expected */\n        }\n\n        endpoint.setEndpointURI(null);\n        try\n        {\n            connector.registerListener(component, endpoint);\n            fail(\"cannot register with empty endpointUri\");\n        }\n        catch (Exception e)\n        {\n            /* expected */\n        }\n\n        endpoint.setEndpointURI(new MuleEndpointURI(\"http://localhost:0\"));\n        connector.registerListener(component, endpoint);\n        try\n        {\n            connector.registerListener(component, endpoint);\n            fail(\"cannot register on the same endpointUri\");\n        }\n        catch (Exception e)\n        {\n            /* expected */\n        }\n\n        connector.dispose();\n    }","id":13068,"modified_method":"public void testValidListener() throws Exception\n    {\n        MuleDescriptor d = getTestDescriptor(\"orange\", Orange.class.getName());\n        UMOComponent component = getTestComponent(d);\n        UMOEndpoint endpoint = new MuleEndpoint(getTestEndpointURI(), true);\n\n        try\n        {\n            endpoint.setEndpointURI(null);\n            fail(\"cannot register with empty endpointUri\");\n        }\n        catch (Exception e)\n        {\n            /* expected */\n        }\n\n        endpoint.setEndpointURI(new MuleEndpointURI(getTestEndpointURI()));\n        connector.registerListener(component, endpoint);\n    }","commit_id":"2048f8543ab7924b43f80714d0b0ee0f515413e2","url":"https://github.com/mulesoft/mule"},{"original_method":"public void testHostPortAndPathUrlAndUserInfo() throws Exception\n    {\n        UMOEndpointURI endpointUri = new MuleEndpointURI(\"http://admin:pwd@localhost:8080/app/path\");\n        assertEquals(\"http\", endpointUri.getScheme());\n        assertEquals(\"http://localhost:8080/app/path\", endpointUri.getAddress());\n        assertNull(endpointUri.getEndpointName());\n        assertEquals(8080, endpointUri.getPort());\n        assertEquals(\"localhost\", endpointUri.getHost());\n        assertEquals(\"http://localhost:8080/app/path\", endpointUri.getAddress());\n        assertEquals(endpointUri.getPath(), \"/app/path\");\n        assertEquals(0, endpointUri.getParams().size());\n        assertEquals(\"admin:pwd\", endpointUri.getUserInfo());\n        assertEquals(\"admin\", endpointUri.getUsername());\n        assertEquals(\"pwd\", endpointUri.getPassword());\n    }","id":13069,"modified_method":"public void testHostPortAndPathUrlAndUserInfo() throws Exception\n    {\n        UMOEndpointURI endpointUri = new MuleEndpointURI(\"http://admin:pwd@localhost:8080/app/path\");\n        endpointUri.initialise();\n        assertEquals(\"http\", endpointUri.getScheme());\n        assertEquals(\"http://localhost:8080/app/path\", endpointUri.getAddress());\n        assertNull(endpointUri.getEndpointName());\n        assertEquals(8080, endpointUri.getPort());\n        assertEquals(\"localhost\", endpointUri.getHost());\n        assertEquals(\"http://localhost:8080/app/path\", endpointUri.getAddress());\n        assertEquals(endpointUri.getPath(), \"/app/path\");\n        assertEquals(0, endpointUri.getParams().size());\n        assertEquals(\"admin:pwd\", endpointUri.getUserInfo());\n        assertEquals(\"admin\", endpointUri.getUsername());\n        assertEquals(\"pwd\", endpointUri.getPassword());\n    }","commit_id":"2048f8543ab7924b43f80714d0b0ee0f515413e2","url":"https://github.com/mulesoft/mule"},{"original_method":"public void testHostPortOnlyUrl() throws Exception\n    {\n        UMOEndpointURI endpointUri = new MuleEndpointURI(\"http://localhost:8080\");\n        assertEquals(\"http\", endpointUri.getScheme());\n        assertEquals(\"http://localhost:8080\", endpointUri.getAddress());\n        assertNull(endpointUri.getEndpointName());\n        assertEquals(8080, endpointUri.getPort());\n        assertEquals(\"localhost\", endpointUri.getHost());\n        assertEquals(\"http://localhost:8080\", endpointUri.getAddress());\n        assertEquals(0, endpointUri.getParams().size());\n    }","id":13070,"modified_method":"public void testHostPortOnlyUrl() throws Exception\n    {\n        UMOEndpointURI endpointUri = new MuleEndpointURI(\"http://localhost:8080\");\n        endpointUri.initialise();\n        assertEquals(\"http\", endpointUri.getScheme());\n        assertEquals(\"http://localhost:8080\", endpointUri.getAddress());\n        assertNull(endpointUri.getEndpointName());\n        assertEquals(8080, endpointUri.getPort());\n        assertEquals(\"localhost\", endpointUri.getHost());\n        assertEquals(\"http://localhost:8080\", endpointUri.getAddress());\n        assertEquals(0, endpointUri.getParams().size());\n    }","commit_id":"2048f8543ab7924b43f80714d0b0ee0f515413e2","url":"https://github.com/mulesoft/mule"},{"original_method":"public void testHostPortOnlyUrlAndUserInfo() throws Exception\n    {\n        UMOEndpointURI endpointUri = new MuleEndpointURI(\"http://admin:pwd@localhost:8080\");\n        assertEquals(\"http\", endpointUri.getScheme());\n        assertEquals(\"http://localhost:8080\", endpointUri.getAddress());\n        assertNull(endpointUri.getEndpointName());\n        assertEquals(8080, endpointUri.getPort());\n        assertEquals(\"localhost\", endpointUri.getHost());\n        assertEquals(\"http://localhost:8080\", endpointUri.getAddress());\n        assertEquals(0, endpointUri.getParams().size());\n        assertEquals(\"admin:pwd\", endpointUri.getUserInfo());\n        assertEquals(\"admin\", endpointUri.getUsername());\n        assertEquals(\"pwd\", endpointUri.getPassword());\n    }","id":13071,"modified_method":"public void testHostPortOnlyUrlAndUserInfo() throws Exception\n    {\n        UMOEndpointURI endpointUri = new MuleEndpointURI(\"http://admin:pwd@localhost:8080\");\n        endpointUri.initialise();\n        assertEquals(\"http\", endpointUri.getScheme());\n        assertEquals(\"http://localhost:8080\", endpointUri.getAddress());\n        assertNull(endpointUri.getEndpointName());\n        assertEquals(8080, endpointUri.getPort());\n        assertEquals(\"localhost\", endpointUri.getHost());\n        assertEquals(\"http://localhost:8080\", endpointUri.getAddress());\n        assertEquals(0, endpointUri.getParams().size());\n        assertEquals(\"admin:pwd\", endpointUri.getUserInfo());\n        assertEquals(\"admin\", endpointUri.getUsername());\n        assertEquals(\"pwd\", endpointUri.getPassword());\n    }","commit_id":"2048f8543ab7924b43f80714d0b0ee0f515413e2","url":"https://github.com/mulesoft/mule"},{"original_method":"public void testHostPortAndPathUrl() throws Exception\n    {\n        UMOEndpointURI url = new MuleEndpointURI(\"http://localhost:8080/app/path\");\n        assertEquals(\"http\", url.getScheme());\n        assertEquals(\"http://localhost:8080/app/path\", url.getAddress());\n        assertNull(url.getEndpointName());\n        assertEquals(8080, url.getPort());\n        assertEquals(\"localhost\", url.getHost());\n        assertEquals(\"http://localhost:8080/app/path\", url.getAddress());\n        assertEquals(url.getPath(), \"/app/path\");\n        assertEquals(0, url.getParams().size());\n    }","id":13072,"modified_method":"public void testHostPortAndPathUrl() throws Exception\n    {\n        UMOEndpointURI endpointUri = new MuleEndpointURI(\"http://localhost:8080/app/path\");\n        endpointUri.initialise();\n        assertEquals(\"http\", endpointUri.getScheme());\n        assertEquals(\"http://localhost:8080/app/path\", endpointUri.getAddress());\n        assertNull(endpointUri.getEndpointName());\n        assertEquals(8080, endpointUri.getPort());\n        assertEquals(\"localhost\", endpointUri.getHost());\n        assertEquals(\"http://localhost:8080/app/path\", endpointUri.getAddress());\n        assertEquals(endpointUri.getPath(), \"/app/path\");\n        assertEquals(0, endpointUri.getParams().size());\n    }","commit_id":"2048f8543ab7924b43f80714d0b0ee0f515413e2","url":"https://github.com/mulesoft/mule"},{"original_method":"public UMOConnector getConnector() throws Exception\n    {\n        ServletConnector c = new ServletConnector();\n        c.setName(\"test\");\n        c.initialise();\n        return c;\n    }","id":13073,"modified_method":"public UMOConnector getConnector() throws Exception\n    {\n        ServletConnector c = new ServletConnector();\n        c.setName(\"test\");\n        return c;\n    }","commit_id":"2048f8543ab7924b43f80714d0b0ee0f515413e2","url":"https://github.com/mulesoft/mule"},{"original_method":"public void testValidListener() throws Exception\n    {\n        MuleDescriptor d = getTestDescriptor(\"orange\", Orange.class.getName());\n        UMOComponent component = getTestComponent(d);\n        UMOEndpoint endpoint = getTestEndpoint(\"Test\", UMOEndpoint.ENDPOINT_TYPE_RECEIVER);\n        endpoint.setEndpointURI(null);\n        endpoint.setConnector(connector);\n\n        try\n        {\n            connector.registerListener(component, endpoint);\n            fail(\"cannot register with null endpointUri\");\n        }\n        catch (Exception e)\n        {\n            /* expected */\n        }\n\n        endpoint.setEndpointURI(null);\n        try\n        {\n            connector.registerListener(component, endpoint);\n            fail(\"cannot register with empty endpointUri\");\n        }\n        catch (Exception e)\n        {\n            /* expected */\n        }\n\n        endpoint.setEndpointURI(new MuleEndpointURI(\"tcp://localhost:30303\"));\n        connector.registerListener(component, endpoint);\n        try\n        {\n            // connector.registerListener(component, endpoint);\n            // fail(\"cannot register on the same endpointUri\");\n        }\n        catch (Exception e)\n        {\n            /* expected */\n        }\n    }","id":13074,"modified_method":"public void testValidListener() throws Exception\n    {\n        MuleDescriptor d = getTestDescriptor(\"orange\", Orange.class.getName());\n        UMOComponent component = getTestComponent(d);\n        UMOEndpoint endpoint = new MuleEndpoint(getTestEndpointURI(), true);\n\n       // endpoint.setConnector(connector);\n\n        try\n        {\n            endpoint.setEndpointURI(null);\n            //connector.registerListener(component, endpoint);\n            fail(\"endpointUri cannot be null\");\n        }\n        catch (Exception e)\n        {\n            /* expected */\n        }\n\n        endpoint.setEndpointURI(new MuleEndpointURI(getTestEndpointURI()));\n        connector.registerListener(component, endpoint);\n    }","commit_id":"06facdcc2da91c0a0f82ced8ccb1679c4c9e0f61","url":"https://github.com/mulesoft/mule"},{"original_method":"public UMOConnector getConnector() throws Exception\n    {\n        TcpConnector c = new TcpConnector();\n        c.setName(\"TcpConnector\");\n        c.initialise();\n        return c;\n    }","id":13075,"modified_method":"public UMOConnector getConnector() throws Exception\n    {\n        TcpConnector c = new TcpConnector();\n        c.setName(\"TcpConnector\");\n        return c;\n    }","commit_id":"06facdcc2da91c0a0f82ced8ccb1679c4c9e0f61","url":"https://github.com/mulesoft/mule"},{"original_method":"private void replaceAccessUsages(SNode accessOperation, SNode method) {\n    SNode source = SNodeOperations.cast(SNodeOperations.getParent(accessOperation), \"jetbrains.mps.baseLanguage.structure.DotExpression\");\n    SNode operand = SLinkOperations.getTarget(source, \"operand\", true);\n    SNode parent = SNodeOperations.getParent(source);\n    String accessName = SPropertyOperations.getString(SLinkOperations.getTarget(accessOperation, \"conceptProperty\", false), \"name\");\n    if (eq_azpnkk_a0e0o(accessName, \"alias\")) {\n      migrateAccess(source, new ConceptPropertiesHelper.QuotationClass_azpnkk_a1a0a4a41().createNode(operand), new ConceptPropertiesHelper.QuotationClass_azpnkk_a2a0a4a41().createNode(operand));\n      if (SNodeOperations.isInstanceOf(parent, \"jetbrains.mps.baseLanguage.structure.DotExpression\") && SNodeOperations.isInstanceOf(SLinkOperations.getTarget(SNodeOperations.cast(parent, \"jetbrains.mps.baseLanguage.structure.DotExpression\"), \"operation\", true), \"jetbrains.mps.lang.smodel.structure.ConceptProperty_SetOperation\")) {\n        SNode setOperation = SNodeOperations.cast(SLinkOperations.getTarget(SNodeOperations.cast(parent, \"jetbrains.mps.baseLanguage.structure.DotExpression\"), \"operation\", true), \"jetbrains.mps.lang.smodel.structure.ConceptProperty_SetOperation\");\n        SNodeOperations.replaceWithAnother(setOperation, SLinkOperations.getTarget(new ConceptPropertiesHelper.QuotationClass_azpnkk_a0b0b0b0e0o().createNode(SLinkOperations.getTarget(setOperation, \"value\", true)), \"operation\", true));\n      }\n    } else if (eq_azpnkk_a0a4a41(accessName, \"shortDescription\")) {\n      migrateAccess(source, new ConceptPropertiesHelper.QuotationClass_azpnkk_a1a0a0e0o().createNode(operand), new ConceptPropertiesHelper.QuotationClass_azpnkk_a2a0a0e0o().createNode(operand));\n    } else if (eq_azpnkk_a0b4a41(accessName, \"final\")) {\n      migrateAccess(source, new ConceptPropertiesHelper.QuotationClass_azpnkk_a1a0a1e0o().createNode(operand), new ConceptPropertiesHelper.QuotationClass_azpnkk_a2a0a1e0o().createNode(operand));\n    } else if (eq_azpnkk_a0c4a41(accessName, \"abstract\")) {\n      migrateAccess(source, new ConceptPropertiesHelper.QuotationClass_azpnkk_a1a0a2e0o().createNode(operand), new ConceptPropertiesHelper.QuotationClass_azpnkk_a2a0a2e0o().createNode(operand));\n    } else {\n      SNode methodCall = SConceptOperations.createNewNode(\"jetbrains.mps.lang.smodel.structure.Node_ConceptMethodCall\", null);\n      SLinkOperations.setTarget(methodCall, \"baseMethodDeclaration\", method, false);\n\n      migrateAccess(source, new ConceptPropertiesHelper.QuotationClass_azpnkk_a1a3a0e0o().createNode(operand, methodCall), new ConceptPropertiesHelper.QuotationClass_azpnkk_a2a3a0e0o().createNode(methodCall, operand));\n    }\n\n\n  }","id":13076,"modified_method":"private void replaceAccessUsages(SNode accessOperation, SNode method) {\n    SNode source = SNodeOperations.cast(SNodeOperations.getParent(accessOperation), \"jetbrains.mps.baseLanguage.structure.DotExpression\");\n    SNode operand = SLinkOperations.getTarget(source, \"operand\", true);\n    SNode parent = SNodeOperations.getParent(source);\n    String accessName = SPropertyOperations.getString(SLinkOperations.getTarget(accessOperation, \"conceptProperty\", false), \"name\");\n    if (eq_azpnkk_a0e0o(accessName, \"alias\")) {\n      migrateAccess(source, new ConceptPropertiesHelper.QuotationClass_azpnkk_a1a0a4a41().createNode(operand), new ConceptPropertiesHelper.QuotationClass_azpnkk_a2a0a4a41().createNode(operand));\n      if (SNodeOperations.isInstanceOf(parent, \"jetbrains.mps.baseLanguage.structure.DotExpression\") && SNodeOperations.isInstanceOf(SLinkOperations.getTarget(SNodeOperations.cast(parent, \"jetbrains.mps.baseLanguage.structure.DotExpression\"), \"operation\", true), \"jetbrains.mps.lang.smodel.structure.ConceptProperty_SetOperation\")) {\n        SNode setOperation = SNodeOperations.cast(SLinkOperations.getTarget(SNodeOperations.cast(parent, \"jetbrains.mps.baseLanguage.structure.DotExpression\"), \"operation\", true), \"jetbrains.mps.lang.smodel.structure.ConceptProperty_SetOperation\");\n        SNodeOperations.replaceWithAnother(setOperation, SLinkOperations.getTarget(new ConceptPropertiesHelper.QuotationClass_azpnkk_a0b0b0b0e0o().createNode(SLinkOperations.getTarget(setOperation, \"value\", true)), \"operation\", true));\n      }\n    } else if (eq_azpnkk_a0a4a41(accessName, \"shortDescription\")) {\n      migrateAccess(source, new ConceptPropertiesHelper.QuotationClass_azpnkk_a1a0a0e0o().createNode(operand), new ConceptPropertiesHelper.QuotationClass_azpnkk_a2a0a0e0o().createNode(operand));\n    } else if (eq_azpnkk_a0b4a41(accessName, \"final\")) {\n      migrateAccess(source, new ConceptPropertiesHelper.QuotationClass_azpnkk_a1a0a1e0o().createNode(operand), new ConceptPropertiesHelper.QuotationClass_azpnkk_a2a0a1e0o().createNode(operand));\n    } else if (eq_azpnkk_a0c4a41(accessName, \"abstract\")) {\n      migrateAccess(source, new ConceptPropertiesHelper.QuotationClass_azpnkk_a1a0a2e0o().createNode(operand), new ConceptPropertiesHelper.QuotationClass_azpnkk_a2a0a2e0o().createNode(operand));\n    } else {\n      SNode methodCall = SConceptOperations.createNewNode(\"jetbrains.mps.lang.smodel.structure.Node_ConceptMethodCall\", null);\n      SLinkOperations.setTarget(methodCall, \"baseMethodDeclaration\", method, false);\n      SNode dotExpression = SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null);\n      SLinkOperations.setTarget(dotExpression, \"operand\", SNodeOperations.copyNode(SNodeOperations.cast(operand, \"jetbrains.mps.baseLanguage.structure.Expression\")), true);\n      SLinkOperations.setTarget(dotExpression, \"operation\", methodCall, true);\n\n      SNode conceptDotExpression = SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null);\n      SLinkOperations.setTarget(conceptDotExpression, \"operand\", SNodeOperations.copyNode(SNodeOperations.cast(operand, \"jetbrains.mps.baseLanguage.structure.Expression\")), true);\n      SLinkOperations.setTarget(conceptDotExpression, \"operation\", SConceptOperations.createNewNode(\"jetbrains.mps.lang.smodel.structure.Node_GetConceptOperation\", null), true);\n\n      SNode resultConceptExpression = SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null);\n      SLinkOperations.setTarget(resultConceptExpression, \"operand\", conceptDotExpression, true);\n      SLinkOperations.setTarget(resultConceptExpression, \"operation\", methodCall, true);\n\n      migrateAccess(source, dotExpression, resultConceptExpression);\n    }\n\n\n  }","commit_id":"5d510f0ce703e7bb20f372eee2256f56fdd6aea0","url":"https://github.com/JetBrains/MPS"},{"original_method":"private EditorCell createConstant_kih9m6_d0(EditorContext editorContext, SNode node) {\n    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, \")\");\n    editorCell.setCellId(\"rightParen\");\n    Style style = new StyleImpl();\n    BaseLanguageStyle_StyleSheet.apply_RightParen(style, editorCell);\n    style.set(StyleAttributes.SELECTABLE, true);\n    editorCell.getStyle().putAll(style);\n    editorCell.setDefaultText(\"\");\n    return editorCell;\n  }","id":13077,"modified_method":"private EditorCell createConstant_kih9m6_c0(EditorContext editorContext, SNode node) {\n    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, \"(\");\n    editorCell.setCellId(\"leftParen\");\n    Style style = new StyleImpl();\n    BaseLanguageStyle_StyleSheet.apply_LeftParenAfterName(style, editorCell);\n    editorCell.getStyle().putAll(style);\n    editorCell.setDefaultText(\"\");\n    return editorCell;\n  }","commit_id":"c4a0c5fbee273f57ccdc3ae7b0581c1c9cc8ef36","url":"https://github.com/JetBrains/MPS"},{"original_method":"private EditorCell createCollection_kih9m6_a(EditorContext editorContext, SNode node) {\n    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);\n    editorCell.setCellId(\"Collection_kih9m6_a\");\n    editorCell.setBig(true);\n    editorCell.addEditorCell(this.createProperty_kih9m6_a0(editorContext, node));\n    editorCell.addEditorCell(this.createConstant_kih9m6_b0(editorContext, node));\n    editorCell.addEditorCell(this.createRefNodeList_kih9m6_c0(editorContext, node));\n    editorCell.addEditorCell(this.createConstant_kih9m6_d0(editorContext, node));\n    if (renderingCondition_kih9m6_a4a(node, editorContext)) {\n      editorCell.addEditorCell(this.createCollection_kih9m6_e0(editorContext, node));\n    }\n    editorCell.addEditorCell(this.createConstant_kih9m6_f0(editorContext, node));\n    editorCell.addEditorCell(this.createRefNode_kih9m6_g0(editorContext, node));\n    editorCell.addEditorCell(this.createConstant_kih9m6_h0(editorContext, node));\n    return editorCell;\n  }","id":13078,"modified_method":"private EditorCell createCollection_kih9m6_a(EditorContext editorContext, SNode node) {\n    EditorCell_Collection editorCell = EditorCell_Collection.createIndent2(editorContext, node);\n    editorCell.setCellId(\"Collection_kih9m6_a\");\n    editorCell.setBig(true);\n    editorCell.addEditorCell(this.createRefNode_kih9m6_a0(editorContext, node));\n    editorCell.addEditorCell(this.createProperty_kih9m6_b0(editorContext, node));\n    editorCell.addEditorCell(this.createConstant_kih9m6_c0(editorContext, node));\n    editorCell.addEditorCell(this.createRefNodeList_kih9m6_d0(editorContext, node));\n    editorCell.addEditorCell(this.createConstant_kih9m6_e0(editorContext, node));\n    editorCell.addEditorCell(this.createConstant_kih9m6_f0(editorContext, node));\n    editorCell.addEditorCell(this.createRefNode_kih9m6_g0(editorContext, node));\n    editorCell.addEditorCell(this.createConstant_kih9m6_h0(editorContext, node));\n    return editorCell;\n  }","commit_id":"c4a0c5fbee273f57ccdc3ae7b0581c1c9cc8ef36","url":"https://github.com/JetBrains/MPS"},{"original_method":"private EditorCell createProperty_kih9m6_a0(EditorContext editorContext, SNode node) {\n    CellProviderWithRole provider = new PropertyCellProvider(node, editorContext);\n    provider.setRole(\"name\");\n    provider.setNoTargetText(\"<no name>\");\n    EditorCell editorCell;\n    editorCell = provider.createEditorCell(editorContext);\n    editorCell.setCellId(\"property_name\");\n    Style style = new StyleImpl();\n    style.set(StyleAttributes.SELECTABLE, true);\n    style.set(StyleAttributes.EDITABLE, false);\n    style.set(StyleAttributes.TEXT_COLOR, StyleRegistry.getInstance().getSimpleColor(MPSColors.DARK_BLUE));\n    editorCell.getStyle().putAll(style);\n    ConceptFunc_Actions.setCellActions(editorCell, node, editorContext);\n    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());\n    SNode attributeConcept = provider.getRoleAttribute();\n    Class attributeKind = provider.getRoleAttributeClass();\n    if (attributeConcept != null) {\n      IOperationContext opContext = editorContext.getOperationContext();\n      EditorManager manager = EditorManager.getInstanceFromContext(opContext);\n      return manager.createNodeRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);\n    } else\n    return editorCell;\n  }","id":13079,"modified_method":"private EditorCell createProperty_kih9m6_b0(EditorContext editorContext, SNode node) {\n    CellProviderWithRole provider = new PropertyCellProvider(node, editorContext);\n    provider.setRole(\"name\");\n    provider.setNoTargetText(\"<no name>\");\n    EditorCell editorCell;\n    editorCell = provider.createEditorCell(editorContext);\n    editorCell.setCellId(\"property_name\");\n    Style style = new StyleImpl();\n    style.set(StyleAttributes.SELECTABLE, true);\n    style.set(StyleAttributes.EDITABLE, false);\n    style.set(StyleAttributes.TEXT_COLOR, StyleRegistry.getInstance().getSimpleColor(MPSColors.DARK_BLUE));\n    editorCell.getStyle().putAll(style);\n    ConceptFunc_Actions.setCellActions(editorCell, node, editorContext);\n    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());\n    SNode attributeConcept = provider.getRoleAttribute();\n    Class attributeKind = provider.getRoleAttributeClass();\n    if (attributeConcept != null) {\n      IOperationContext opContext = editorContext.getOperationContext();\n      EditorManager manager = EditorManager.getInstanceFromContext(opContext);\n      return manager.createNodeRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);\n    } else\n    return editorCell;\n  }","commit_id":"c4a0c5fbee273f57ccdc3ae7b0581c1c9cc8ef36","url":"https://github.com/JetBrains/MPS"},{"original_method":"private EditorCell createConstant_kih9m6_b0(EditorContext editorContext, SNode node) {\n    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, \"(\");\n    editorCell.setCellId(\"leftParen\");\n    Style style = new StyleImpl();\n    BaseLanguageStyle_StyleSheet.apply_LeftParenAfterName(style, editorCell);\n    editorCell.getStyle().putAll(style);\n    editorCell.setDefaultText(\"\");\n    return editorCell;\n  }","id":13080,"modified_method":"private EditorCell createConstant_kih9m6_e0(EditorContext editorContext, SNode node) {\n    EditorCell_Constant editorCell = new EditorCell_Constant(editorContext, node, \")\");\n    editorCell.setCellId(\"rightParen\");\n    Style style = new StyleImpl();\n    BaseLanguageStyle_StyleSheet.apply_RightParen(style, editorCell);\n    style.set(StyleAttributes.SELECTABLE, true);\n    editorCell.getStyle().putAll(style);\n    editorCell.setDefaultText(\"\");\n    return editorCell;\n  }","commit_id":"c4a0c5fbee273f57ccdc3ae7b0581c1c9cc8ef36","url":"https://github.com/JetBrains/MPS"},{"original_method":"private EditorCell createRefNodeList_kih9m6_b4a(EditorContext editorContext, SNode node) {\n    AbstractCellListHandler handler = new ClassLikeMethod_Editor.throwsItemListHandler_kih9m6_b4a(node, \"throwsItem\", editorContext);\n    EditorCell_Collection editorCell = handler.createCells(editorContext, new CellLayout_Indent(), false);\n    editorCell.setCellId(\"refNodeList_throwsItem\");\n    Style style = new StyleImpl();\n    style.set(StyleAttributes.READ_ONLY, true);\n    editorCell.getStyle().putAll(style);\n    editorCell.setRole(handler.getElementRole());\n    return editorCell;\n  }","id":13081,"modified_method":"private EditorCell createRefNode_kih9m6_a0(EditorContext editorContext, SNode node) {\n    CellProviderWithRole provider = new RefNodeCellProvider(node, editorContext);\n    provider.setRole(\"returnType\");\n    provider.setNoTargetText(\"<no returnType>\");\n    EditorCell editorCell;\n    editorCell = provider.createEditorCell(editorContext);\n    if (editorCell.getRole() == null) {\n      editorCell.setRole(\"returnType\");\n    }\n    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());\n    SNode attributeConcept = provider.getRoleAttribute();\n    Class attributeKind = provider.getRoleAttributeClass();\n    if (attributeConcept != null) {\n      IOperationContext opContext = editorContext.getOperationContext();\n      EditorManager manager = EditorManager.getInstanceFromContext(opContext);\n      return manager.createNodeRoleAttributeCell(editorContext, attributeConcept, attributeKind, editorCell);\n    } else\n    return editorCell;\n  }","commit_id":"c4a0c5fbee273f57ccdc3ae7b0581c1c9cc8ef36","url":"https://github.com/JetBrains/MPS"},{"original_method":"private EditorCell createRefNodeList_kih9m6_c0(EditorContext editorContext, SNode node) {\n    AbstractCellListHandler handler = new ClassLikeMethod_Editor.parameterListHandler_kih9m6_c0(node, \"parameter\", editorContext);\n    EditorCell_Collection editorCell = handler.createCells(editorContext, new CellLayout_Indent(), false);\n    editorCell.setCellId(\"refNodeList_parameter\");\n    Style style = new StyleImpl();\n    style.set(StyleAttributes.READ_ONLY, true);\n    editorCell.getStyle().putAll(style);\n    editorCell.setRole(handler.getElementRole());\n    return editorCell;\n  }","id":13082,"modified_method":"private EditorCell createRefNodeList_kih9m6_d0(EditorContext editorContext, SNode node) {\n    AbstractCellListHandler handler = new ClassLikeMethod_Editor.parameterListHandler_kih9m6_d0(node, \"parameter\", editorContext);\n    EditorCell_Collection editorCell = handler.createCells(editorContext, new CellLayout_Indent(), false);\n    editorCell.setCellId(\"refNodeList_parameter\");\n    Style style = new StyleImpl();\n    style.set(StyleAttributes.READ_ONLY, true);\n    editorCell.getStyle().putAll(style);\n    editorCell.setRole(handler.getElementRole());\n    return editorCell;\n  }","commit_id":"c4a0c5fbee273f57ccdc3ae7b0581c1c9cc8ef36","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static SNode call_getType_3751132065236798250(SNode thisNode, SNode node) {\n    try {\n      String className = SNodeOperations.getModel(thisNode).getModelName() + \".\" + ClassLikeDescriptor_Behavior.call_getGeneratedClassName_3384419124890285894(SNodeOperations.getAncestor(thisNode, \"jetbrains.mps.lang.classLike.structure.ClassLikeDescriptor\", false, false));\n      SModule classModule = thisNode.getModel().getModule();\n      Method[] methods = ClassLoaderManager.getInstance().getClass(classModule, className).getMethods();\n      for (Method m : methods) {\n        if (m.getName().equals(SPropertyOperations.getString(SNodeOperations.getAncestor(thisNode, \"jetbrains.mps.lang.classLike.structure.ParameterDescriptor\", false, false), \"name\"))) {\n          m.setAccessible(true);\n          return ((SNode) m.invoke(null, node));\n        }\n      }\n      return SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.structure.Type\", null);\n    } catch (Exception e) {\n      e.printStackTrace();\n      return SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.structure.Type\", null);\n    }\n  }","id":13083,"modified_method":"public static SNode call_getType_3751132065236798250(SNode thisNode, SNode node) {\n    try {\n      String className = SNodeOperations.getModel(thisNode).getModelName() + \".\" + ClassLikeDescriptor_Behavior.call_getGeneratedClassName_3384419124890285894(SNodeOperations.getAncestor(thisNode, \"jetbrains.mps.lang.classLike.structure.ClassLikeDescriptor\", false, false));\n      SModule classModule = thisNode.getModel().getModule();\n      Method[] methods = ClassLoaderManager.getInstance().getClass(classModule, className).getMethods();\n      for (Method m : methods) {\n        if (m.getName().equals(DependentTypeDeclaration_Behavior.call_getGeneratedMethodName_2546325654728395319(SLinkOperations.getTarget(node, \"decl\", false)))) {\n          m.setAccessible(true);\n          return ((SNode) m.invoke(null, node));\n        }\n      }\n      return SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.structure.Type\", null);\n    } catch (Exception e) {\n      e.printStackTrace();\n      return SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.structure.Type\", null);\n    }\n  }","commit_id":"c4a0c5fbee273f57ccdc3ae7b0581c1c9cc8ef36","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static SNode _quotation_createNode_9j0ugw_a0a5a1() {\n    PersistenceFacade facade = PersistenceFacade.getInstance();\n    SNode quotedNode_1 = null;\n    quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.VoidType\", null, null, false);\n    return quotedNode_1;\n  }","id":13084,"modified_method":"private static SNode _quotation_createNode_9j0ugw_a0a0e0b() {\n    PersistenceFacade facade = PersistenceFacade.getInstance();\n    SNode quotedNode_1 = null;\n    quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.VoidType\", null, null, false);\n    return quotedNode_1;\n  }","commit_id":"c4a0c5fbee273f57ccdc3ae7b0581c1c9cc8ef36","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static SNode virtual_create_8260330507834998478(SNode thisNode) {\n    SNode method = SNodeFactoryOperations.createNewNode(\"jetbrains.mps.lang.classLike.structure.ClassLikeMethod\", null);\n    SPropertyOperations.set(method, \"name\", SPropertyOperations.getString(thisNode, \"name\"));\n    SLinkOperations.setTarget(method, \"body\", SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.structure.StatementList\", null), true);\n    ListSequence.fromList(SLinkOperations.getTargets(method, \"parameter\", true)).addSequence(ListSequence.fromList(SLinkOperations.getTargets(thisNode, \"param\", true)).select(new ISelector<SNode, SNode>() {\n      public SNode select(SNode it) {\n        if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(it, \"type\", true), \"jetbrains.mps.lang.classLike.structure.DependentTypeDeclaration\")) {\n          SNode node = SConceptOperations.createNewNode(\"jetbrains.mps.lang.classLike.structure.DependentTypeInstance\", null);\n          SLinkOperations.setTarget(node, \"decl\", SNodeOperations.cast(SLinkOperations.getTarget(it, \"type\", true), \"jetbrains.mps.lang.classLike.structure.DependentTypeDeclaration\"), false);\n          return createParameterDeclaration_9j0ugw_a2a0a0a0a0d0b(SPropertyOperations.getString(it, \"name\"), SNodeOperations.cast(HUtil.copyIfNecessary(node), \"jetbrains.mps.baseLanguage.structure.Type\"));\n        } else {\n          return createParameterDeclaration_9j0ugw_a0a0a0a0a0a3a1(SPropertyOperations.getString(it, \"name\"), SNodeOperations.cast(HUtil.copyIfNecessary(SLinkOperations.getTarget(it, \"type\", true)), \"jetbrains.mps.baseLanguage.structure.Type\"));\n        }\n      }\n    }));\n    SLinkOperations.setTarget(method, \"decl\", thisNode, false);\n    SLinkOperations.setTarget(method, \"returnType\", (SLinkOperations.getTarget(thisNode, \"retType\", true) == null ? _quotation_createNode_9j0ugw_a0a5a1() : SNodeOperations.copyNode(SLinkOperations.getTarget(thisNode, \"retType\", true))), true);\n    return method;\n  }","id":13085,"modified_method":"public static SNode virtual_create_8260330507834998478(SNode thisNode) {\n    SNode method = SNodeFactoryOperations.createNewNode(\"jetbrains.mps.lang.classLike.structure.ClassLikeMethod\", null);\n    SPropertyOperations.set(method, \"name\", SPropertyOperations.getString(thisNode, \"name\"));\n    SLinkOperations.setTarget(method, \"body\", SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.structure.StatementList\", null), true);\n    ListSequence.fromList(SLinkOperations.getTargets(method, \"parameter\", true)).addSequence(ListSequence.fromList(SLinkOperations.getTargets(thisNode, \"param\", true)).select(new ISelector<SNode, SNode>() {\n      public SNode select(SNode it) {\n        if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(it, \"type\", true), \"jetbrains.mps.lang.classLike.structure.DependentTypeDeclaration\")) {\n          SNode node = SConceptOperations.createNewNode(\"jetbrains.mps.lang.classLike.structure.DependentTypeInstance\", null);\n          SLinkOperations.setTarget(node, \"decl\", SNodeOperations.cast(SLinkOperations.getTarget(it, \"type\", true), \"jetbrains.mps.lang.classLike.structure.DependentTypeDeclaration\"), false);\n          return createParameterDeclaration_9j0ugw_a2a0a0a0a0d0b(SPropertyOperations.getString(it, \"name\"), SNodeOperations.cast(HUtil.copyIfNecessary(node), \"jetbrains.mps.baseLanguage.structure.Type\"));\n        } else {\n          return createParameterDeclaration_9j0ugw_a0a0a0a0a0a3a1(SPropertyOperations.getString(it, \"name\"), SNodeOperations.cast(HUtil.copyIfNecessary(SLinkOperations.getTarget(it, \"type\", true)), \"jetbrains.mps.baseLanguage.structure.Type\"));\n        }\n      }\n    }));\n    if (SLinkOperations.getTarget(thisNode, \"retType\", true) == null) {\n      SLinkOperations.setTarget(method, \"returnType\", _quotation_createNode_9j0ugw_a0a0e0b(), true);\n    } else if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(thisNode, \"retType\", true), \"jetbrains.mps.lang.classLike.structure.DependentTypeDeclaration\")) {\n      SNode node = SConceptOperations.createNewNode(\"jetbrains.mps.lang.classLike.structure.DependentTypeInstance\", null);\n      SLinkOperations.setTarget(node, \"decl\", SNodeOperations.cast(SLinkOperations.getTarget(thisNode, \"retType\", true), \"jetbrains.mps.lang.classLike.structure.DependentTypeDeclaration\"), false);\n      SLinkOperations.setTarget(method, \"returnType\", node, true);\n    } else {\n      SLinkOperations.setTarget(method, \"returnType\", SNodeOperations.copyNode(SLinkOperations.getTarget(thisNode, \"retType\", true)), true);\n    }\n\n    SLinkOperations.setTarget(method, \"decl\", thisNode, false);\n\n    return method;\n  }","commit_id":"c4a0c5fbee273f57ccdc3ae7b0581c1c9cc8ef36","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static Iterable<SNode> sourceNodesQuery_3751132065236919840(final SourceSubstituteMacroNodesContext _context) {\n    return ListSequence.fromList(SNodeOperations.getDescendants(_context.getNode(), \"jetbrains.mps.lang.classLike.structure.DependentTypeDeclaration\", false, new String[]{})).select(new ISelector<SNode, SNode>() {\n      public SNode select(SNode it) {\n        return SNodeOperations.getAncestor(it, \"jetbrains.mps.lang.classLike.structure.ParameterDescriptor\", false, false);\n      }\n    });\n  }","id":13086,"modified_method":"public static Iterable<SNode> sourceNodesQuery_3751132065236919840(final SourceSubstituteMacroNodesContext _context) {\n    return SNodeOperations.getDescendants(_context.getNode(), \"jetbrains.mps.lang.classLike.structure.DependentTypeDeclaration\", false, new String[]{});\n  }","commit_id":"c4a0c5fbee273f57ccdc3ae7b0581c1c9cc8ef36","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static SNode sourceNodeQuery_3751132065236919771(final SourceSubstituteMacroNodeContext _context) {\n    return SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_context.getNode(), \"type\", true), \"jetbrains.mps.lang.classLike.structure.DependentTypeDeclaration\"), \"getter\", true), \"body\", true);\n  }","id":13087,"modified_method":"public static SNode sourceNodeQuery_3751132065236919771(final SourceSubstituteMacroNodeContext _context) {\n    return SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(), \"getter\", true), \"body\", true);\n  }","commit_id":"c4a0c5fbee273f57ccdc3ae7b0581c1c9cc8ef36","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static Object propertyMacro_GetPropertyValue_3751132065236919833(final PropertyMacroContext _context) {\n    return SPropertyOperations.getString(_context.getNode(), \"name\");\n  }","id":13088,"modified_method":"public static Object propertyMacro_GetPropertyValue_3751132065236919833(final PropertyMacroContext _context) {\n    return DependentTypeDeclaration_Behavior.call_getGeneratedMethodName_2546325654728395319(_context.getNode());\n  }","commit_id":"c4a0c5fbee273f57ccdc3ae7b0581c1c9cc8ef36","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static Iterable<SNode> sourceNodesQuery_3751132065236919787(final SourceSubstituteMacroNodesContext _context) {\n    List<SNode> params = SLinkOperations.getTargets(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_context.getNode(), \"type\", true), \"jetbrains.mps.lang.classLike.structure.DependentTypeDeclaration\"), \"getter\", true), \"parameter\", true);\n    return ListSequence.fromList(params).select(new ISelector<SNode, SNode>() {\n      public SNode select(SNode it) {\n        SNode res = SNodeOperations.copyNode(it);\n        SLinkOperations.setTarget(res, \"type\", _quotation_createNode_x583g4_a0b0a0a1a8(), true);\n        return res;\n      }\n    });\n  }","id":13089,"modified_method":"public static Iterable<SNode> sourceNodesQuery_3751132065236919787(final SourceSubstituteMacroNodesContext _context) {\n    List<SNode> params = SLinkOperations.getTargets(SLinkOperations.getTarget(_context.getNode(), \"getter\", true), \"parameter\", true);\n    return ListSequence.fromList(params).select(new ISelector<SNode, SNode>() {\n      public SNode select(SNode it) {\n        SNode res = SNodeOperations.copyNode(it);\n        SLinkOperations.setTarget(res, \"type\", _quotation_createNode_x583g4_a0b0a0a1a8(), true);\n        return res;\n      }\n    });\n  }","commit_id":"c4a0c5fbee273f57ccdc3ae7b0581c1c9cc8ef36","url":"https://github.com/JetBrains/MPS"},{"original_method":"private void replaceConceptLinkUsages(SNode conceptLink, SNode overridenMethod, Map<SNode, List<SNode>> completedConceptsByLinkDeclaration) {\n    if (overridenMethod == null) {\n      return;\n    }\n    SNode conceptNode = SNodeOperations.getAncestor(conceptLink, \"jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration\", false, false);\n    List<SNode> completed = MapSequence.fromMap(completedConceptsByLinkDeclaration).get(SLinkOperations.getTarget(conceptLink, \"conceptLinkDeclaration\", false));\n    if (ListSequence.fromList(completed).contains(conceptNode)) {\n      return;\n    }\n    Set<SNode> allLinks = SetSequence.fromSet(new HashSet<SNode>());\n    for (SNode link : ListSequence.fromList(SLinkOperations.getTargets(conceptNode, \"conceptLink\", true))) {\n      if (SLinkOperations.getTarget(link, \"conceptLinkDeclaration\", false) == SLinkOperations.getTarget(conceptLink, \"conceptLinkDeclaration\", false)) {\n        SetSequence.fromSet(allLinks).addElement(link);\n      }\n    }\n\n    SNode method = createMethod(SPropertyOperations.getString(overridenMethod, \"name\"), false, overridenMethod, SNodeOperations.copyNode(SLinkOperations.getTarget(overridenMethod, \"returnType\", true)));\n    SNode declaration = _quotation_createNode_azpnkk_a0i0ab(SLinkOperations.getTarget(SLinkOperations.getTarget(conceptLink, \"conceptLinkDeclaration\", false), \"targetType\", false), SLinkOperations.getTarget(SLinkOperations.getTarget(conceptLink, \"conceptLinkDeclaration\", false), \"targetType\", false));\n    SNode reference = SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.structure.VariableReference\", null);\n    SLinkOperations.setTarget(reference, \"variableDeclaration\", SLinkOperations.getTarget(declaration, \"localVariableDeclaration\", true), false);\n    ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(method, \"body\", true), \"statement\", true)).addElement(declaration);\n    SNode ldConcept = SNodeOperations.getAncestor(SLinkOperations.getTarget(conceptLink, \"conceptLinkDeclaration\", false), \"jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration\", false, false);\n    Set<SNode> superNodes = SetSequence.fromSet(new HashSet<SNode>());\n    if (SNodeOperations.isInstanceOf(conceptNode, \"jetbrains.mps.lang.structure.structure.InterfaceConceptDeclaration\")) {\n      for (SNode impl : ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(conceptNode, \"jetbrains.mps.lang.structure.structure.InterfaceConceptDeclaration\"), \"extends\", true))) {\n        if (SConceptOperations.isSubConceptOf(SLinkOperations.getTarget(impl, \"intfc\", false), NameUtil.nodeFQName(ldConcept))) {\n          SetSequence.fromSet(superNodes).addElement(SLinkOperations.getTarget(impl, \"intfc\", false));\n        }\n      }\n    } else if (SNodeOperations.isInstanceOf(conceptNode, \"jetbrains.mps.lang.structure.structure.ConceptDeclaration\")) {\n      if ((SLinkOperations.getTarget(SNodeOperations.cast(conceptNode, \"jetbrains.mps.lang.structure.structure.ConceptDeclaration\"), \"extends\", false) != null)) {\n        if (SConceptOperations.isSubConceptOf(SLinkOperations.getTarget(SNodeOperations.cast(conceptNode, \"jetbrains.mps.lang.structure.structure.ConceptDeclaration\"), \"extends\", false), NameUtil.nodeFQName(ldConcept))) {\n          SetSequence.fromSet(superNodes).addElement(SLinkOperations.getTarget(SNodeOperations.cast(conceptNode, \"jetbrains.mps.lang.structure.structure.ConceptDeclaration\"), \"extends\", false));\n        }\n      }\n      for (SNode impl : ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(conceptNode, \"jetbrains.mps.lang.structure.structure.ConceptDeclaration\"), \"implements\", true))) {\n        if (SConceptOperations.isSubConceptOf(SLinkOperations.getTarget(impl, \"intfc\", false), NameUtil.nodeFQName(ldConcept))) {\n          SetSequence.fromSet(superNodes).addElement(SLinkOperations.getTarget(impl, \"intfc\", false));\n        }\n      }\n    }\n\n    for (SNode superNode : SetSequence.fromSet(superNodes)) {\n      SNode methodCall = SConceptOperations.createNewNode(\"jetbrains.mps.lang.smodel.structure.Node_ConceptMethodCall\", null);\n      SLinkOperations.setTarget(methodCall, \"baseMethodDeclaration\", overridenMethod, false);\n      SNode superNodeExpression = SConceptOperations.createNewNode(\"jetbrains.mps.lang.behavior.structure.SuperNodeExpression\", null);\n      SLinkOperations.setTarget(superNodeExpression, \"superConcept\", superNode, false);\n      ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(method, \"body\", true), \"statement\", true)).addElement(_quotation_createNode_azpnkk_a0a4a61a62(superNodeExpression, methodCall, reference));\n\n    }\n    for (SNode link : SetSequence.fromSet(allLinks)) {\n      SNode refExpression = SConceptOperations.createNewNode(\"jetbrains.mps.lang.smodel.structure.NodeRefExpression\", null);\n      SLinkOperations.setTarget(refExpression, \"referentNode\", SNodeOperations.cast(SLinkOperations.getTarget(SNodeOperations.cast(link, \"jetbrains.mps.lang.structure.structure.ReferenceConceptLink\"), \"target\", false), \"jetbrains.mps.lang.core.structure.INamedConcept\"), false);\n      ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(method, \"body\", true), \"statement\", true)).addElement(_quotation_createNode_azpnkk_a0a2a71a62(reference, refExpression));\n    }\n\n    ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(method, \"body\", true), \"statement\", true)).addElement(_quotation_createNode_azpnkk_a0a91a62(reference));\n\n    if (MapSequence.fromMap(completedConceptsByLinkDeclaration).get(SLinkOperations.getTarget(conceptLink, \"conceptLinkDeclaration\", false)) == null) {\n      MapSequence.fromMap(completedConceptsByLinkDeclaration).put(SLinkOperations.getTarget(conceptLink, \"conceptLinkDeclaration\", false), ListSequence.fromList(new ArrayList<SNode>()));\n    }\n    ListSequence.fromList(MapSequence.fromMap(completedConceptsByLinkDeclaration).get(SLinkOperations.getTarget(conceptLink, \"conceptLinkDeclaration\", false))).addElement(conceptNode);\n    addMethodToBehavior(conceptNode, method);\n  }","id":13090,"modified_method":"private void replaceConceptLinkUsages(SNode conceptLink, SNode overridenMethod, Map<SNode, List<SNode>> completedConceptsByLinkDeclaration) {\n    if (overridenMethod == null) {\n      return;\n    }\n    SNode conceptNode = SNodeOperations.getAncestor(conceptLink, \"jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration\", false, false);\n    List<SNode> completed = MapSequence.fromMap(completedConceptsByLinkDeclaration).get(SLinkOperations.getTarget(conceptLink, \"conceptLinkDeclaration\", false));\n    if (ListSequence.fromList(completed).contains(conceptNode)) {\n      return;\n    }\n    Set<SNode> allLinks = SetSequence.fromSet(new HashSet<SNode>());\n    for (SNode link : ListSequence.fromList(SLinkOperations.getTargets(conceptNode, \"conceptLink\", true))) {\n      if (SLinkOperations.getTarget(link, \"conceptLinkDeclaration\", false) == SLinkOperations.getTarget(conceptLink, \"conceptLinkDeclaration\", false)) {\n        SetSequence.fromSet(allLinks).addElement(link);\n      }\n    }\n\n    SNode method = createMethod(SPropertyOperations.getString(overridenMethod, \"name\"), false, overridenMethod, SNodeOperations.copyNode(SLinkOperations.getTarget(overridenMethod, \"returnType\", true)));\n    SNode ldConcept = SNodeOperations.getAncestor(SLinkOperations.getTarget(conceptLink, \"conceptLinkDeclaration\", false), \"jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration\", false, false);\n    Set<SNode> superNodes = SetSequence.fromSet(new HashSet<SNode>());\n    if (SNodeOperations.isInstanceOf(conceptNode, \"jetbrains.mps.lang.structure.structure.InterfaceConceptDeclaration\")) {\n      for (SNode impl : ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(conceptNode, \"jetbrains.mps.lang.structure.structure.InterfaceConceptDeclaration\"), \"extends\", true))) {\n        if (SConceptOperations.isSubConceptOf(SLinkOperations.getTarget(impl, \"intfc\", false), NameUtil.nodeFQName(ldConcept))) {\n          SetSequence.fromSet(superNodes).addElement(SLinkOperations.getTarget(impl, \"intfc\", false));\n        }\n      }\n    } else if (SNodeOperations.isInstanceOf(conceptNode, \"jetbrains.mps.lang.structure.structure.ConceptDeclaration\")) {\n      if ((SLinkOperations.getTarget(SNodeOperations.cast(conceptNode, \"jetbrains.mps.lang.structure.structure.ConceptDeclaration\"), \"extends\", false) != null)) {\n        if (SConceptOperations.isSubConceptOf(SLinkOperations.getTarget(SNodeOperations.cast(conceptNode, \"jetbrains.mps.lang.structure.structure.ConceptDeclaration\"), \"extends\", false), NameUtil.nodeFQName(ldConcept))) {\n          SetSequence.fromSet(superNodes).addElement(SLinkOperations.getTarget(SNodeOperations.cast(conceptNode, \"jetbrains.mps.lang.structure.structure.ConceptDeclaration\"), \"extends\", false));\n        }\n      }\n      for (SNode impl : ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(conceptNode, \"jetbrains.mps.lang.structure.structure.ConceptDeclaration\"), \"implements\", true))) {\n        if (SConceptOperations.isSubConceptOf(SLinkOperations.getTarget(impl, \"intfc\", false), NameUtil.nodeFQName(ldConcept))) {\n          SetSequence.fromSet(superNodes).addElement(SLinkOperations.getTarget(impl, \"intfc\", false));\n        }\n      }\n    }\n    SNode declaration;\n    SNode reference = SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.structure.VariableReference\", null);\n\n    if (SetSequence.fromSet(superNodes).isEmpty()) {\n      declaration = _quotation_createNode_azpnkk_a0a0o0ab(SLinkOperations.getTarget(SLinkOperations.getTarget(conceptLink, \"conceptLinkDeclaration\", false), \"targetType\", false), SLinkOperations.getTarget(SLinkOperations.getTarget(conceptLink, \"conceptLinkDeclaration\", false), \"targetType\", false));\n      SLinkOperations.setTarget(reference, \"variableDeclaration\", SLinkOperations.getTarget(declaration, \"localVariableDeclaration\", true), false);\n    } else {\n\n      SNode methodCall = SConceptOperations.createNewNode(\"jetbrains.mps.lang.smodel.structure.Node_ConceptMethodCall\", null);\n      SLinkOperations.setTarget(methodCall, \"baseMethodDeclaration\", overridenMethod, false);\n      SNode firstNodeExpression = SConceptOperations.createNewNode(\"jetbrains.mps.lang.behavior.structure.SuperNodeExpression\", null);\n      SLinkOperations.setTarget(firstNodeExpression, \"superConcept\", SetSequence.fromSet(superNodes).first(), false);\n      declaration = _quotation_createNode_azpnkk_a0f0a41a62(SLinkOperations.getTarget(SLinkOperations.getTarget(conceptLink, \"conceptLinkDeclaration\", false), \"targetType\", false), firstNodeExpression, methodCall);\n      SLinkOperations.setTarget(reference, \"variableDeclaration\", SLinkOperations.getTarget(declaration, \"localVariableDeclaration\", true), false);\n\n      for (SNode superNode : SetSequence.fromSet(superNodes)) {\n        if (superNode == SetSequence.fromSet(superNodes).first()) {\n          continue;\n        }\n\n        SNode superMethodCall = SConceptOperations.createNewNode(\"jetbrains.mps.lang.smodel.structure.Node_ConceptMethodCall\", null);\n        SLinkOperations.setTarget(superMethodCall, \"baseMethodDeclaration\", overridenMethod, false);\n        SNode superNodeExpression = SConceptOperations.createNewNode(\"jetbrains.mps.lang.behavior.structure.SuperNodeExpression\", null);\n        SLinkOperations.setTarget(superNodeExpression, \"superConcept\", superNode, false);\n        ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(method, \"body\", true), \"statement\", true)).addElement(_quotation_createNode_azpnkk_a0a6a8a0o0ab(superNodeExpression, superMethodCall, reference));\n      }\n\n    }\n\n    ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(method, \"body\", true), \"statement\", true)).addElement(declaration);\n\n    for (SNode link : SetSequence.fromSet(allLinks)) {\n      SNode refExpression = SConceptOperations.createNewNode(\"jetbrains.mps.lang.smodel.structure.NodeRefExpression\", null);\n      SLinkOperations.setTarget(refExpression, \"referentNode\", SNodeOperations.cast(SLinkOperations.getTarget(SNodeOperations.cast(link, \"jetbrains.mps.lang.structure.structure.ReferenceConceptLink\"), \"target\", false), \"jetbrains.mps.lang.core.structure.INamedConcept\"), false);\n      ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(method, \"body\", true), \"statement\", true)).addElement(_quotation_createNode_azpnkk_a0a2a81a62(reference, refExpression));\n    }\n\n    ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(method, \"body\", true), \"statement\", true)).addElement(_quotation_createNode_azpnkk_a0a02a62(reference));\n\n    if (MapSequence.fromMap(completedConceptsByLinkDeclaration).get(SLinkOperations.getTarget(conceptLink, \"conceptLinkDeclaration\", false)) == null) {\n      MapSequence.fromMap(completedConceptsByLinkDeclaration).put(SLinkOperations.getTarget(conceptLink, \"conceptLinkDeclaration\", false), ListSequence.fromList(new ArrayList<SNode>()));\n    }\n    ListSequence.fromList(MapSequence.fromMap(completedConceptsByLinkDeclaration).get(SLinkOperations.getTarget(conceptLink, \"conceptLinkDeclaration\", false))).addElement(conceptNode);\n    addMethodToBehavior(conceptNode, method);\n  }","commit_id":"b1b460c7c486cfe21b215941877778a819e2f429","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static SNode _quotation_createNode_azpnkk_a0a91a62(Object parameter_1) {\n    SNode quotedNode_2 = null;\n    SNode quotedNode_3 = null;\n    quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ReturnStatement\", null, null, GlobalScope.getInstance(), false);\n    quotedNode_3 = (SNode) parameter_1;\n    if (quotedNode_3 != null) {\n      quotedNode_2.addChild(\"expression\", HUtil.copyIfNecessary(quotedNode_3));\n    }\n    return quotedNode_2;\n  }","id":13091,"modified_method":"private static SNode _quotation_createNode_azpnkk_a0a02a62(Object parameter_1) {\n    SNode quotedNode_2 = null;\n    SNode quotedNode_3 = null;\n    quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ReturnStatement\", null, null, GlobalScope.getInstance(), false);\n    quotedNode_3 = (SNode) parameter_1;\n    if (quotedNode_3 != null) {\n      quotedNode_2.addChild(\"expression\", HUtil.copyIfNecessary(quotedNode_3));\n    }\n    return quotedNode_2;\n  }","commit_id":"b1b460c7c486cfe21b215941877778a819e2f429","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static SNode _quotation_createNode_azpnkk_a0a4a61a62(Object parameter_1, Object parameter_2, Object parameter_3) {\n    SNode quotedNode_4 = null;\n    SNode quotedNode_5 = null;\n    SNode quotedNode_6 = null;\n    SNode quotedNode_7 = null;\n    SNode quotedNode_8 = null;\n    SNode quotedNode_9 = null;\n    SNode quotedNode_10 = null;\n    SNode quotedNode_11 = null;\n    quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ExpressionStatement\", null, null, GlobalScope.getInstance(), false);\n    quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, null, GlobalScope.getInstance(), false);\n    quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.collections.structure.AddAllElementsOperation\", null, null, GlobalScope.getInstance(), false);\n    quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, null, GlobalScope.getInstance(), false);\n    quotedNode_10 = (SNode) parameter_1;\n    if (quotedNode_10 != null) {\n      quotedNode_8.addChild(\"operand\", HUtil.copyIfNecessary(quotedNode_10));\n    }\n    quotedNode_11 = (SNode) parameter_2;\n    if (quotedNode_11 != null) {\n      quotedNode_8.addChild(\"operation\", HUtil.copyIfNecessary(quotedNode_11));\n    }\n    quotedNode_6.addChild(\"argument\", quotedNode_8);\n    quotedNode_5.addChild(\"operation\", quotedNode_6);\n    quotedNode_7 = (SNode) parameter_3;\n    if (quotedNode_7 != null) {\n      quotedNode_5.addChild(\"operand\", HUtil.copyIfNecessary(quotedNode_7));\n    }\n    quotedNode_4.addChild(\"expression\", quotedNode_5);\n    return quotedNode_4;\n  }","id":13092,"modified_method":"private static SNode _quotation_createNode_azpnkk_a0f0a41a62(Object parameter_1, Object parameter_2, Object parameter_3) {\n    SNode quotedNode_4 = null;\n    SNode quotedNode_5 = null;\n    SNode quotedNode_6 = null;\n    SNode quotedNode_7 = null;\n    SNode quotedNode_8 = null;\n    SNode quotedNode_9 = null;\n    SNode quotedNode_10 = null;\n    quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement\", null, null, GlobalScope.getInstance(), false);\n    quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration\", null, null, GlobalScope.getInstance(), false);\n    SNodeAccessUtil.setProperty(quotedNode_5, \"name\", \"result\");\n    quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.collections.structure.ListType\", null, null, GlobalScope.getInstance(), false);\n    quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.smodel.structure.SNodeType\", null, null, GlobalScope.getInstance(), false);\n    SNodeAccessUtil.setReferenceTarget(quotedNode_8, \"concept\", (SNode) parameter_1);\n    quotedNode_6.addChild(\"elementType\", quotedNode_8);\n    quotedNode_5.addChild(\"type\", quotedNode_6);\n    quotedNode_7 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, null, GlobalScope.getInstance(), false);\n    quotedNode_9 = (SNode) parameter_2;\n    if (quotedNode_9 != null) {\n      quotedNode_7.addChild(\"operand\", HUtil.copyIfNecessary(quotedNode_9));\n    }\n    quotedNode_10 = (SNode) parameter_3;\n    if (quotedNode_10 != null) {\n      quotedNode_7.addChild(\"operation\", HUtil.copyIfNecessary(quotedNode_10));\n    }\n    quotedNode_5.addChild(\"initializer\", quotedNode_7);\n    quotedNode_4.addChild(\"localVariableDeclaration\", quotedNode_5);\n    return quotedNode_4;\n  }","commit_id":"b1b460c7c486cfe21b215941877778a819e2f429","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static SNode _quotation_createNode_azpnkk_a0i0ab(Object parameter_1, Object parameter_2) {\n    SNode quotedNode_3 = null;\n    SNode quotedNode_4 = null;\n    SNode quotedNode_5 = null;\n    SNode quotedNode_6 = null;\n    SNode quotedNode_7 = null;\n    SNode quotedNode_8 = null;\n    SNode quotedNode_9 = null;\n    quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement\", null, null, GlobalScope.getInstance(), false);\n    quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration\", null, null, GlobalScope.getInstance(), false);\n    SNodeAccessUtil.setProperty(quotedNode_4, \"name\", \"result\");\n    quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.GenericNewExpression\", null, null, GlobalScope.getInstance(), false);\n    quotedNode_7 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.collections.structure.ListCreatorWithInit\", null, null, GlobalScope.getInstance(), false);\n    quotedNode_9 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.smodel.structure.SNodeType\", null, null, GlobalScope.getInstance(), false);\n    SNodeAccessUtil.setReferenceTarget(quotedNode_9, \"concept\", (SNode) parameter_1);\n    quotedNode_7.addChild(\"elementType\", quotedNode_9);\n    quotedNode_5.addChild(\"creator\", quotedNode_7);\n    quotedNode_4.addChild(\"initializer\", quotedNode_5);\n    quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.collections.structure.ListType\", null, null, GlobalScope.getInstance(), false);\n    quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.smodel.structure.SNodeType\", null, null, GlobalScope.getInstance(), false);\n    SNodeAccessUtil.setReferenceTarget(quotedNode_8, \"concept\", (SNode) parameter_2);\n    quotedNode_6.addChild(\"elementType\", quotedNode_8);\n    quotedNode_4.addChild(\"type\", quotedNode_6);\n    quotedNode_3.addChild(\"localVariableDeclaration\", quotedNode_4);\n    return quotedNode_3;\n  }","id":13093,"modified_method":"private static SNode _quotation_createNode_azpnkk_a0a0o0ab(Object parameter_1, Object parameter_2) {\n    SNode quotedNode_3 = null;\n    SNode quotedNode_4 = null;\n    SNode quotedNode_5 = null;\n    SNode quotedNode_6 = null;\n    SNode quotedNode_7 = null;\n    SNode quotedNode_8 = null;\n    SNode quotedNode_9 = null;\n    quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement\", null, null, GlobalScope.getInstance(), false);\n    quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration\", null, null, GlobalScope.getInstance(), false);\n    SNodeAccessUtil.setProperty(quotedNode_4, \"name\", \"result\");\n    quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.GenericNewExpression\", null, null, GlobalScope.getInstance(), false);\n    quotedNode_7 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.collections.structure.ListCreatorWithInit\", null, null, GlobalScope.getInstance(), false);\n    quotedNode_9 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.smodel.structure.SNodeType\", null, null, GlobalScope.getInstance(), false);\n    SNodeAccessUtil.setReferenceTarget(quotedNode_9, \"concept\", (SNode) parameter_1);\n    quotedNode_7.addChild(\"elementType\", quotedNode_9);\n    quotedNode_5.addChild(\"creator\", quotedNode_7);\n    quotedNode_4.addChild(\"initializer\", quotedNode_5);\n    quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.collections.structure.ListType\", null, null, GlobalScope.getInstance(), false);\n    quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.smodel.structure.SNodeType\", null, null, GlobalScope.getInstance(), false);\n    SNodeAccessUtil.setReferenceTarget(quotedNode_8, \"concept\", (SNode) parameter_2);\n    quotedNode_6.addChild(\"elementType\", quotedNode_8);\n    quotedNode_4.addChild(\"type\", quotedNode_6);\n    quotedNode_3.addChild(\"localVariableDeclaration\", quotedNode_4);\n    return quotedNode_3;\n  }","commit_id":"b1b460c7c486cfe21b215941877778a819e2f429","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static SNode _quotation_createNode_azpnkk_a0a2a71a62(Object parameter_1, Object parameter_2) {\n    SNode quotedNode_3 = null;\n    SNode quotedNode_4 = null;\n    SNode quotedNode_5 = null;\n    SNode quotedNode_6 = null;\n    SNode quotedNode_7 = null;\n    SNode quotedNode_8 = null;\n    quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ExpressionStatement\", null, null, GlobalScope.getInstance(), false);\n    quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, null, GlobalScope.getInstance(), false);\n    quotedNode_5 = (SNode) parameter_1;\n    if (quotedNode_5 != null) {\n      quotedNode_4.addChild(\"operand\", HUtil.copyIfNecessary(quotedNode_5));\n    }\n    quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.collections.structure.AddElementOperation\", null, null, GlobalScope.getInstance(), false);\n    quotedNode_8 = (SNode) parameter_2;\n    if (quotedNode_8 != null) {\n      quotedNode_6.addChild(\"argument\", HUtil.copyIfNecessary(quotedNode_8));\n    }\n    quotedNode_4.addChild(\"operation\", quotedNode_6);\n    quotedNode_3.addChild(\"expression\", quotedNode_4);\n    return quotedNode_3;\n  }","id":13094,"modified_method":"private static SNode _quotation_createNode_azpnkk_a0a2a81a62(Object parameter_1, Object parameter_2) {\n    SNode quotedNode_3 = null;\n    SNode quotedNode_4 = null;\n    SNode quotedNode_5 = null;\n    SNode quotedNode_6 = null;\n    SNode quotedNode_7 = null;\n    SNode quotedNode_8 = null;\n    quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ExpressionStatement\", null, null, GlobalScope.getInstance(), false);\n    quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, null, GlobalScope.getInstance(), false);\n    quotedNode_5 = (SNode) parameter_1;\n    if (quotedNode_5 != null) {\n      quotedNode_4.addChild(\"operand\", HUtil.copyIfNecessary(quotedNode_5));\n    }\n    quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.collections.structure.AddElementOperation\", null, null, GlobalScope.getInstance(), false);\n    quotedNode_8 = (SNode) parameter_2;\n    if (quotedNode_8 != null) {\n      quotedNode_6.addChild(\"argument\", HUtil.copyIfNecessary(quotedNode_8));\n    }\n    quotedNode_4.addChild(\"operation\", quotedNode_6);\n    quotedNode_3.addChild(\"expression\", quotedNode_4);\n    return quotedNode_3;\n  }","commit_id":"b1b460c7c486cfe21b215941877778a819e2f429","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void execute(SNode node, EditorContext editorContext) {\n    // Invert condition\n    SNode condition = SLinkOperations.getTarget(node, \"condition\", true);\n    if ((condition != null)) {\n      if (SNodeOperations.isInstanceOf(condition, \"jetbrains.mps.baseLanguage.structure.NotExpression\")) {\n        condition = SLinkOperations.getTarget(condition, \"expression\", true);\n      } else\n      {\n        SNode newCondition = null;\n        if (SNodeOperations.isInstanceOf(condition, \"jetbrains.mps.baseLanguage.structure.EqualsExpression\")) {\n          newCondition = SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.structure.NotEqualsExpression\", null);\n        } else\n        if (SNodeOperations.isInstanceOf(condition, \"jetbrains.mps.baseLanguage.structure.NotEqualsExpression\")) {\n          newCondition = SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.structure.EqualsExpression\", null);\n        } else\n        if (SNodeOperations.isInstanceOf(condition, \"jetbrains.mps.baseLanguage.structure.GreaterThanExpression\")) {\n          newCondition = SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.structure.LessThanOrEqualsExpression\", null);\n        } else\n        if (SNodeOperations.isInstanceOf(condition, \"jetbrains.mps.baseLanguage.structure.GreaterThanOrEqualsExpression\")) {\n          newCondition = SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.structure.LessThanExpression\", null);\n        } else\n        if (SNodeOperations.isInstanceOf(condition, \"jetbrains.mps.baseLanguage.structure.LessThanExpression\")) {\n          newCondition = SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.structure.GreaterThanOrEqualsExpression\", null);\n        } else\n        if (SNodeOperations.isInstanceOf(condition, \"jetbrains.mps.baseLanguage.structure.LessThanOrEqualsExpression\")) {\n          newCondition = SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.structure.GreaterThanExpression\", null);\n        }\n        if (newCondition != null) {\n          SLinkOperations.setTarget(newCondition, \"leftExpression\", SLinkOperations.getTarget(condition, \"leftExpression\", true), true);\n          SLinkOperations.setTarget(newCondition, \"rightExpression\", SLinkOperations.getTarget(condition, \"rightExpression\", true), true);\n          condition = newCondition;\n        } else\n        {\n          SNode notExpression = SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.structure.NotExpression\", null);\n          SLinkOperations.setTarget(notExpression, \"expression\", condition, true);\n          condition = notExpression;\n        }\n      }\n      SLinkOperations.setTarget(node, \"condition\", condition, true);\n    }\n    // Flip ifTrue and ifFalse\n    SNode ifTrue = SLinkOperations.getTarget(node, \"ifTrue\", true);\n    SNode ifFalse = SLinkOperations.getTarget(node, \"ifFalseStatement\", true);\n    // Set new ifFalseStatement\n    if (SLinkOperations.getCount(ifTrue, \"statement\") == 0) {\n      SLinkOperations.setTarget(node, \"ifFalseStatement\", null, true);\n    } else\n    if (SLinkOperations.getCount(ifTrue, \"statement\") == 1 && SNodeOperations.isInstanceOf(SequenceOperations.getFirst(SLinkOperations.getTargets(ifTrue, \"statement\", true)), \"jetbrains.mps.baseLanguage.structure.IfStatement\")) {\n      SLinkOperations.setTarget(node, \"ifFalseStatement\", SequenceOperations.getFirst(SLinkOperations.getTargets(ifTrue, \"statement\", true)), true);\n    } else\n    {\n      SLinkOperations.addAll(SLinkOperations.getTarget(SLinkOperations.setNewChild(node, \"ifFalseStatement\", \"jetbrains.mps.baseLanguage.structure.BlockStatement\"), \"statements\", true), \"statement\", SLinkOperations.getTargets(ifTrue, \"statement\", true));\n    }\n    // Set new ifTrue\n    if (SNodeOperations.isInstanceOf(ifFalse, \"jetbrains.mps.baseLanguage.structure.BlockStatement\")) {\n      SLinkOperations.setTarget(node, \"ifTrue\", SLinkOperations.getTarget(ifFalse, \"statements\", true), true);\n    } else\n    {\n      SLinkOperations.addChild(SLinkOperations.setNewChild(node, \"ifTrue\", \"jetbrains.mps.baseLanguage.structure.StatementList\"), \"statement\", ifFalse);\n    }\n  }","id":13095,"modified_method":"public void execute(SNode node, EditorContext editorContext) {\n    // Invert condition\n    SNode condition = SLinkOperations.getTarget(node, \"condition\", true);\n    if ((condition != null)) {\n      if (SNodeOperations.isInstanceOf(condition, \"jetbrains.mps.baseLanguage.structure.NotExpression\")) {\n        condition = SLinkOperations.getTarget(condition, \"expression\", true);\n      } else\n      {\n        SNode newCondition = null;\n        if (SNodeOperations.isInstanceOf(condition, \"jetbrains.mps.baseLanguage.structure.EqualsExpression\")) {\n          newCondition = SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.structure.NotEqualsExpression\", null);\n        } else\n        if (SNodeOperations.isInstanceOf(condition, \"jetbrains.mps.baseLanguage.structure.NotEqualsExpression\")) {\n          newCondition = SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.structure.EqualsExpression\", null);\n        } else\n        if (SNodeOperations.isInstanceOf(condition, \"jetbrains.mps.baseLanguage.structure.GreaterThanExpression\")) {\n          newCondition = SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.structure.LessThanOrEqualsExpression\", null);\n        } else\n        if (SNodeOperations.isInstanceOf(condition, \"jetbrains.mps.baseLanguage.structure.GreaterThanOrEqualsExpression\")) {\n          newCondition = SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.structure.LessThanExpression\", null);\n        } else\n        if (SNodeOperations.isInstanceOf(condition, \"jetbrains.mps.baseLanguage.structure.LessThanExpression\")) {\n          newCondition = SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.structure.GreaterThanOrEqualsExpression\", null);\n        } else\n        if (SNodeOperations.isInstanceOf(condition, \"jetbrains.mps.baseLanguage.structure.LessThanOrEqualsExpression\")) {\n          newCondition = SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.structure.GreaterThanExpression\", null);\n        }\n        if (newCondition != null) {\n          SLinkOperations.setTarget(newCondition, \"leftExpression\", SLinkOperations.getTarget(condition, \"leftExpression\", true), true);\n          SLinkOperations.setTarget(newCondition, \"rightExpression\", SLinkOperations.getTarget(condition, \"rightExpression\", true), true);\n          condition = newCondition;\n        } else\n        {\n          SNode notExpression = SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.structure.NotExpression\", null);\n          SLinkOperations.setTarget(notExpression, \"expression\", condition, true);\n          condition = notExpression;\n        }\n      }\n      SLinkOperations.setTarget(node, \"condition\", condition, true);\n    }\n    // Flip ifTrue and ifFalse\n    SNode ifTrue = SLinkOperations.getTarget(node, \"ifTrue\", true);\n    SNode ifFalse = SLinkOperations.getTarget(node, \"ifFalseStatement\", true);\n    SNode newIfTrue;\n    SNode newIfFalse;\n    // Set new ifFalse\n    if (SLinkOperations.getCount(ifTrue, \"statement\") == 0) {\n      newIfFalse = null;\n    } else\n    if (SLinkOperations.getCount(ifTrue, \"statement\") == 1 && SNodeOperations.isInstanceOf(SequenceOperations.getFirst(SLinkOperations.getTargets(ifTrue, \"statement\", true)), \"jetbrains.mps.baseLanguage.structure.IfStatement\")) {\n      newIfFalse = SequenceOperations.getFirst(SLinkOperations.getTargets(ifTrue, \"statement\", true));\n    } else\n    {\n      newIfFalse = SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.structure.BlockStatement\", null);\n      SLinkOperations.setTarget(newIfFalse, \"statements\", ifTrue, true);\n    }\n    // Set new ifTrue\n    if (SNodeOperations.isInstanceOf(ifFalse, \"jetbrains.mps.baseLanguage.structure.BlockStatement\")) {\n      newIfTrue = SLinkOperations.getTarget(ifFalse, \"statements\", true);\n    } else\n    {\n      newIfTrue = SConceptOperations.createNewNode(\"jetbrains.mps.baseLanguage.structure.StatementList\", null);\n      if (ifFalse != null) {\n        SLinkOperations.addChild(newIfTrue, \"statement\", ifFalse);\n      }\n    }\n    SLinkOperations.setTarget(node, \"ifTrue\", newIfTrue, true);\n    SLinkOperations.setTarget(node, \"ifFalseStatement\", newIfFalse, true);\n  }","commit_id":"9194b55c643afa6331e0c474060d09d99cebc40d","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Test\n  public void getCapacityBytesOnTiersTest() throws Exception {\n    Random random = new Random();\n    WorkerStorageTierAssoc tierAssoc = new WorkerStorageTierAssoc(MasterContext.getConf());\n    int nTiers = tierAssoc.size();\n    // LinkedHashMap keeps keys in the serialized json object in the insertion order, the insertion\n    // order is from smaller tier ordinal to larger ones.\n    LinkedHashMap<String, Long> capacityBytesOnTiers = Maps.newLinkedHashMap();\n    for (int ordinal = 0; ordinal < nTiers; ordinal++) {\n      capacityBytesOnTiers.put(tierAssoc.getAlias(ordinal), random.nextLong());\n    }\n    Mockito.doReturn(capacityBytesOnTiers).when(sBlockMaster).getTotalBytesOnTiers();\n\n    TestCaseFactory\n        .newMasterTestCase(getEndpoint(AlluxioMasterRestServiceHandler.GET_CAPACITY_BYTES_ON_TIERS),\n            NO_PARAMS, \"GET\", capacityBytesOnTiers, mResource).run();\n\n    Mockito.verify(sBlockMaster).getTotalBytesOnTiers();\n  }","id":13096,"modified_method":"@Test\n  public void getCapacityBytesOnTiersTest() throws Exception {\n    Random random = new Random();\n    MasterStorageTierAssoc tierAssoc = new MasterStorageTierAssoc(MasterContext.getConf());\n    int nTiers = tierAssoc.size();\n    // LinkedHashMap keeps keys in the serialized json object in the insertion order, the insertion\n    // order is from smaller tier ordinal to larger ones.\n    LinkedHashMap<String, Long> capacityBytesOnTiers = Maps.newLinkedHashMap();\n    for (int ordinal = 0; ordinal < nTiers; ordinal++) {\n      capacityBytesOnTiers.put(tierAssoc.getAlias(ordinal), random.nextLong());\n    }\n    Mockito.doReturn(capacityBytesOnTiers).when(sBlockMaster).getTotalBytesOnTiers();\n\n    TestCaseFactory\n        .newMasterTestCase(getEndpoint(AlluxioMasterRestServiceHandler.GET_CAPACITY_BYTES_ON_TIERS),\n            NO_PARAMS, \"GET\", capacityBytesOnTiers, mResource).run();\n\n    Mockito.verify(sBlockMaster).getTotalBytesOnTiers();\n  }","commit_id":"44ce812455bdefeda873222cf1bce7376c35ee40","url":"https://github.com/amplab/tachyon"},{"original_method":"@Test\n  public void getRpcAddressTest() throws Exception {\n    Random random = new Random();\n    InetSocketAddress address = new InetSocketAddress(randomString(), random.nextInt(8080) + 1);\n    Mockito.doReturn(address).when(sAlluxioMaster).getMasterAddress();\n\n    TestCaseFactory\n        .newMasterTestCase(getEndpoint(AlluxioMasterRestServiceHandler.GET_RPC_ADDRESS), NO_PARAMS,\n            \"GET\", address.toString(), mResource).run();\n\n    Mockito.verify(sAlluxioMaster).getMasterAddress();\n  }","id":13097,"modified_method":"@Test\n  public void getRpcAddressTest() throws Exception {\n    Random random = new Random();\n    InetSocketAddress address = new InetSocketAddress(IntegrationTestUtils.randomString(),\n        random.nextInt(8080) + 1);\n    Mockito.doReturn(address).when(sAlluxioMaster).getMasterAddress();\n\n    TestCaseFactory\n        .newMasterTestCase(getEndpoint(AlluxioMasterRestServiceHandler.GET_RPC_ADDRESS), NO_PARAMS,\n            \"GET\", address.toString(), mResource).run();\n\n    Mockito.verify(sAlluxioMaster).getMasterAddress();\n  }","commit_id":"44ce812455bdefeda873222cf1bce7376c35ee40","url":"https://github.com/amplab/tachyon"},{"original_method":"@Test\n  public void getMetricsTest() throws Exception {\n    // Mock master metrics system.\n    MetricRegistry metricRegistry = PowerMockito.mock(MetricRegistry.class);\n    MetricsSystem metricsSystem = PowerMockito.mock(MetricsSystem.class);\n    Mockito.doReturn(metricRegistry).when(metricsSystem).getMetricRegistry();\n    Mockito.doReturn(metricsSystem).when(sAlluxioMaster).getMasterMetricsSystem();\n\n    // Generate random metrics.\n    Random random = new Random();\n    SortedMap<String, Long> metricsMap = Maps.newTreeMap();\n    metricsMap.put(randomString(), random.nextLong());\n    metricsMap.put(randomString(), random.nextLong());\n    String filesPinnedProperty = CommonUtils.argsToString(\".\",\n        MasterContext.getMasterSource().getName(), MasterSource.FILES_PINNED);\n    Integer filesPinned = random.nextInt();\n    metricsMap.put(filesPinnedProperty, filesPinned.longValue());\n\n    // Mock counters.\n    SortedMap<String, Counter> counters = Maps.newTreeMap();\n    for (Map.Entry<String, Long> entry : metricsMap.entrySet()) {\n      Counter counter = new Counter();\n      counter.inc(entry.getValue());\n      counters.put(entry.getKey(), counter);\n    }\n    Mockito.doReturn(counters).when(metricRegistry).getCounters();\n\n    // Mock gauges.\n    Gauge filesPinnedGauge = PowerMockito.mock(Gauge.class);\n    Mockito.doReturn(filesPinned).when(filesPinnedGauge).getValue();\n    SortedMap<String, Gauge> gauges = Maps.newTreeMap();\n    gauges.put(filesPinnedProperty, filesPinnedGauge);\n    Mockito.doReturn(gauges).when(metricRegistry).getGauges();\n\n    TestCaseFactory\n        .newMasterTestCase(getEndpoint(AlluxioMasterRestServiceHandler.GET_METRICS), NO_PARAMS,\n            \"GET\", metricsMap, mResource).run();\n\n    Mockito.verify(metricRegistry).getCounters();\n    Mockito.verify(metricRegistry).getGauges();\n    Mockito.verify(filesPinnedGauge).getValue();\n  }","id":13098,"modified_method":"@Test\n  public void getMetricsTest() throws Exception {\n    // Mock master metrics system.\n    MetricRegistry metricRegistry = PowerMockito.mock(MetricRegistry.class);\n    MetricsSystem metricsSystem = PowerMockito.mock(MetricsSystem.class);\n    Mockito.doReturn(metricRegistry).when(metricsSystem).getMetricRegistry();\n    Mockito.doReturn(metricsSystem).when(sAlluxioMaster).getMasterMetricsSystem();\n\n    // Generate random metrics.\n    Random random = new Random();\n    SortedMap<String, Long> metricsMap = Maps.newTreeMap();\n    metricsMap.put(IntegrationTestUtils.randomString(), random.nextLong());\n    metricsMap.put(IntegrationTestUtils.randomString(), random.nextLong());\n    String filesPinnedProperty = CommonUtils.argsToString(\".\",\n        MasterContext.getMasterSource().getName(), MasterSource.FILES_PINNED);\n    Integer filesPinned = random.nextInt();\n    metricsMap.put(filesPinnedProperty, filesPinned.longValue());\n\n    // Mock counters.\n    SortedMap<String, Counter> counters = Maps.newTreeMap();\n    for (Map.Entry<String, Long> entry : metricsMap.entrySet()) {\n      Counter counter = new Counter();\n      counter.inc(entry.getValue());\n      counters.put(entry.getKey(), counter);\n    }\n    Mockito.doReturn(counters).when(metricRegistry).getCounters();\n\n    // Mock gauges.\n    Gauge filesPinnedGauge = PowerMockito.mock(Gauge.class);\n    Mockito.doReturn(filesPinned).when(filesPinnedGauge).getValue();\n    SortedMap<String, Gauge> gauges = Maps.newTreeMap();\n    gauges.put(filesPinnedProperty, filesPinnedGauge);\n    Mockito.doReturn(gauges).when(metricRegistry).getGauges();\n\n    TestCaseFactory\n        .newMasterTestCase(getEndpoint(AlluxioMasterRestServiceHandler.GET_METRICS), NO_PARAMS,\n            \"GET\", metricsMap, mResource).run();\n\n    Mockito.verify(metricRegistry).getCounters();\n    Mockito.verify(metricRegistry).getGauges();\n    Mockito.verify(filesPinnedGauge).getValue();\n  }","commit_id":"44ce812455bdefeda873222cf1bce7376c35ee40","url":"https://github.com/amplab/tachyon"},{"original_method":"@Test\n  public void getConfigurationTest() throws Exception {\n    SortedMap<String, String> propertyMap = Maps.newTreeMap();\n    propertyMap.put(ALLUXIO_CONF_PREFIX + randomString(), randomString());\n    propertyMap.put(ALLUXIO_CONF_PREFIX + randomString(), randomString());\n\n    Properties properties = new Properties();\n    for (Map.Entry<String, String> property : propertyMap.entrySet()) {\n      properties.put(property.getKey(), property.getValue());\n    }\n    properties.put(NOT_ALLUXIO_CONF_PREFIX + randomString(), randomString());\n\n    Configuration configuration = mockConfiguration();\n    Mockito.doReturn(properties).when(configuration).getInternalProperties();\n\n    TestCaseFactory\n        .newMasterTestCase(getEndpoint(AlluxioMasterRestServiceHandler.GET_CONFIGURATION),\n            NO_PARAMS, \"GET\", propertyMap, mResource).run();\n\n    Mockito.verify(configuration).getInternalProperties();\n  }","id":13099,"modified_method":"@Test\n  public void getConfigurationTest() throws Exception {\n    SortedMap<String, String> propertyMap = Maps.newTreeMap();\n    propertyMap.put(ALLUXIO_CONF_PREFIX + IntegrationTestUtils.randomString(),\n        IntegrationTestUtils.randomString());\n    propertyMap.put(ALLUXIO_CONF_PREFIX + IntegrationTestUtils.randomString(),\n        IntegrationTestUtils.randomString());\n\n    Properties properties = new Properties();\n    for (Map.Entry<String, String> property : propertyMap.entrySet()) {\n      properties.put(property.getKey(), property.getValue());\n    }\n    properties.put(NOT_ALLUXIO_CONF_PREFIX + IntegrationTestUtils.randomString(),\n        IntegrationTestUtils.randomString());\n\n    Configuration configuration = mockConfiguration();\n    Mockito.doReturn(properties).when(configuration).getInternalProperties();\n\n    TestCaseFactory\n        .newMasterTestCase(getEndpoint(AlluxioMasterRestServiceHandler.GET_CONFIGURATION),\n            NO_PARAMS, \"GET\", propertyMap, mResource).run();\n\n    Mockito.verify(configuration).getInternalProperties();\n  }","commit_id":"44ce812455bdefeda873222cf1bce7376c35ee40","url":"https://github.com/amplab/tachyon"},{"original_method":"private Comparator<String> getTierAliasComparator() {\n    return new Comparator<String>() {\n      private WorkerStorageTierAssoc tierAssoc = new WorkerStorageTierAssoc(mMasterConf);\n\n      @Override\n      public int compare(String tier1, String tier2) {\n        int ordinal1 = tierAssoc.getOrdinal(tier1);\n        int ordinal2 = tierAssoc.getOrdinal(tier2);\n        if (ordinal1 < ordinal2) {\n          return -1;\n        }\n        if (ordinal1 == ordinal2) {\n          return 0;\n        }\n        return 1;\n      }\n    };\n  }","id":13100,"modified_method":"private Comparator<String> getTierAliasComparator() {\n    return new Comparator<String>() {\n      private MasterStorageTierAssoc mTierAssoc = new MasterStorageTierAssoc(mMasterConf);\n\n      @Override\n      public int compare(String tier1, String tier2) {\n        int ordinal1 = mTierAssoc.getOrdinal(tier1);\n        int ordinal2 = mTierAssoc.getOrdinal(tier2);\n        if (ordinal1 < ordinal2) {\n          return -1;\n        }\n        if (ordinal1 == ordinal2) {\n          return 0;\n        }\n        return 1;\n      }\n    };\n  }","commit_id":"44ce812455bdefeda873222cf1bce7376c35ee40","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n   * @summary get the mapping from tier alias to the paths of the directories in the tier\n   * @return the response object\n   */\n  @GET\n  @Path(GET_DIRECTORY_PATHS_ON_TIERS)\n  @ReturnType(\"java.util.Map<String, String>\")\n  public Response getDirectoryPathsOnTiers() {\n    Map<String, String> tierToDirPaths = new HashMap<>(mStoreMeta.getCapacityBytesOnDirs().size());\n    for (Pair<String, String> tierToDirPath : mStoreMeta.getCapacityBytesOnDirs().keySet()) {\n      tierToDirPaths.put(tierToDirPath.getFirst(), tierToDirPath.getSecond());\n    }\n    return Response.ok(tierToDirPaths).build();\n  }","id":13101,"modified_method":"/**\n   * @summary get the mapping from tier alias to the paths of the directories in the tier\n   * @return the response object\n   */\n  @GET\n  @Path(GET_DIRECTORY_PATHS_ON_TIERS)\n  @ReturnType(\"java.util.SortedMap<String, java.util.List<String>>\")\n  public Response getDirectoryPathsOnTiers() {\n    SortedMap<String, List<String>> tierToDirPaths = new TreeMap<>(getTierAliasComparator());\n    tierToDirPaths.putAll(mStoreMeta.getDirectoryPathsOnTiers());\n    return Response.ok(tierToDirPaths).build();\n  }","commit_id":"44ce812455bdefeda873222cf1bce7376c35ee40","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n   * @summary get the worker metrics\n   * @return the response object\n   */\n  @GET\n  @Path(GET_METRICS)\n  @ReturnType(\"java.util.Map<String, Long>\")\n  public Response getMetrics() {\n    MetricRegistry metricRegistry = mWorker.getWorkerMetricsSystem().getMetricRegistry();\n\n    // Get all counters.\n    Map<String, Counter> counters = metricRegistry.getCounters();\n\n    // Only the gauge for cached blocks is retrieved here, other gauges are statistics of free/used\n    // spaces, those statistics can be gotten via other REST apis.\n    String blocksCachedProperty = CommonUtils.argsToString(\".\",\n        WorkerContext.getWorkerSource().getName(), WorkerSource.BLOCKS_CACHED);\n    Gauge blocksCached = metricRegistry.getGauges().get(blocksCachedProperty);\n\n    // Get values of the counters and gauges and put them into a metrics map.\n    Map<String, Long> metrics = new HashMap<>(counters.size() + 1);\n    for (Map.Entry<String, Counter> counter : counters.entrySet()) {\n      metrics.put(counter.getKey(), counter.getValue().getCount());\n    }\n    metrics.put(blocksCachedProperty, ((Integer) blocksCached.getValue()).longValue());\n\n    return Response.ok(metrics).build();\n  }","id":13102,"modified_method":"/**\n   * @summary get the worker metrics\n   * @return the response object\n   */\n  @GET\n  @Path(GET_METRICS)\n  @ReturnType(\"java.util.SortedMap<String, Long>\")\n  public Response getMetrics() {\n    MetricRegistry metricRegistry = mWorker.getWorkerMetricsSystem().getMetricRegistry();\n\n    // Get all counters.\n    Map<String, Counter> counters = metricRegistry.getCounters();\n\n    // Only the gauge for cached blocks is retrieved here, other gauges are statistics of free/used\n    // spaces, those statistics can be gotten via other REST apis.\n    String blocksCachedProperty = CommonUtils.argsToString(\".\",\n        WorkerContext.getWorkerSource().getName(), WorkerSource.BLOCKS_CACHED);\n    Gauge blocksCached = metricRegistry.getGauges().get(blocksCachedProperty);\n\n    // Get values of the counters and gauges and put them into a metrics map.\n    SortedMap<String, Long> metrics = new TreeMap<>();\n    for (Map.Entry<String, Counter> counter : counters.entrySet()) {\n      metrics.put(counter.getKey(), counter.getValue().getCount());\n    }\n    metrics.put(blocksCachedProperty, ((Integer) blocksCached.getValue()).longValue());\n\n    return Response.ok(metrics).build();\n  }","commit_id":"44ce812455bdefeda873222cf1bce7376c35ee40","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n   * @summary get the mapping from tier alias to the total capacity of the tier in bytes\n   * @return the response object\n   */\n  @GET\n  @Path(GET_CAPACITY_BYTES_ON_TIERS)\n  @ReturnType(\"java.util.Map<String, Long>\")\n  public Response getCapacityBytesOnTiers() {\n    return Response.ok(mStoreMeta.getCapacityBytesOnTiers()).build();\n  }","id":13103,"modified_method":"/**\n   * @summary get the mapping from tier alias to the total capacity of the tier in bytes, the keys\n   *    are in the order from tier aliases with smaller ordinals to those with larger ones.\n   * @return the response object\n   */\n  @GET\n  @Path(GET_CAPACITY_BYTES_ON_TIERS)\n  @ReturnType(\"java.util.SortedMap<String, Long>\")\n  public Response getCapacityBytesOnTiers() {\n    SortedMap<String, Long> capacityBytesOnTiers = new TreeMap<>(getTierAliasComparator());\n    for (Map.Entry<String, Long> tierBytes : mStoreMeta.getCapacityBytesOnTiers().entrySet()) {\n      capacityBytesOnTiers.put(tierBytes.getKey(), tierBytes.getValue());\n    }\n    return Response.ok(capacityBytesOnTiers).build();\n  }","commit_id":"44ce812455bdefeda873222cf1bce7376c35ee40","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n   * @summary get the mapping from tier alias to the used bytes of the tier\n   * @return the response object\n   */\n  @GET\n  @Path(GET_USED_BYTES_ON_TIERS)\n  @ReturnType(\"java.util.Map<String, Long>\")\n  public Response getUsedBytesOnTiers() {\n    return Response.ok(mStoreMeta.getUsedBytesOnTiers()).build();\n  }","id":13104,"modified_method":"/**\n   * @summary get the mapping from tier alias to the used bytes of the tier, the keys are in the\n   *    order from tier aliases with smaller ordinals to those with larger ones.\n   * @return the response object\n   */\n  @GET\n  @Path(GET_USED_BYTES_ON_TIERS)\n  @ReturnType(\"java.util.SortedMap<String, Long>\")\n  public Response getUsedBytesOnTiers() {\n    SortedMap<String, Long> usedBytesOnTiers = new TreeMap<>(getTierAliasComparator());\n    for (Map.Entry<String, Long> tierBytes : mStoreMeta.getUsedBytesOnTiers().entrySet()) {\n      usedBytesOnTiers.put(tierBytes.getKey(), tierBytes.getValue());\n    }\n    return Response.ok(usedBytesOnTiers).build();\n  }","commit_id":"44ce812455bdefeda873222cf1bce7376c35ee40","url":"https://github.com/amplab/tachyon"},{"original_method":"@BeforeClass\n  public static void beforeClass() {\n    sBlockMaster = PowerMockito.mock(BlockMaster.class);\n    AlluxioMaster alluxioMaster = PowerMockito.mock(AlluxioMaster.class);\n    Mockito.doReturn(sBlockMaster).when(alluxioMaster).getBlockMaster();\n    Whitebox.setInternalState(AlluxioMaster.class, \"sAlluxioMaster\", alluxioMaster);\n  }","id":13105,"modified_method":"@BeforeClass\n  public static void beforeClass() {\n    sAlluxioMaster = PowerMockito.mock(AlluxioMaster.class);\n    sBlockMaster = PowerMockito.mock(BlockMaster.class);\n    Mockito.doReturn(sBlockMaster).when(sAlluxioMaster).getBlockMaster();\n    Whitebox.setInternalState(AlluxioMaster.class, \"sAlluxioMaster\", sAlluxioMaster);\n  }","commit_id":"8b105addbaa24244c9e9588a445e99da446e2d8a","url":"https://github.com/amplab/tachyon"},{"original_method":"@Test\n  public void getUsedBytesTest() throws Exception {\n    Random random = new Random();\n    long usedBytes = random.nextLong();\n    Mockito.doReturn(usedBytes).when(sBlockMaster).getUsedBytes();\n\n    TestCaseFactory\n        .newMasterTestCase(getEndpoint(AlluxioMasterRestServiceHandler.GET_USED_BYTES),\n            NO_PARAMS, \"GET\", usedBytes, mResource).run();\n\n    Mockito.verify(sBlockMaster).getUsedBytes();\n  }","id":13106,"modified_method":"@Test\n  public void getUsedBytesTest() throws Exception {\n    Random random = new Random();\n    long usedBytes = random.nextLong();\n    Mockito.doReturn(usedBytes).when(sBlockMaster).getUsedBytes();\n\n    TestCaseFactory\n        .newMasterTestCase(getEndpoint(AlluxioMasterRestServiceHandler.GET_USED_BYTES),\n            NO_PARAMS, \"GET\", usedBytes, mResource).run();\n  }","commit_id":"8b105addbaa24244c9e9588a445e99da446e2d8a","url":"https://github.com/amplab/tachyon"},{"original_method":"@Test\n  public void getCapacityBytesTest() throws Exception {\n    Random random = new Random();\n    long capacityBytes = random.nextLong();\n    Mockito.doReturn(capacityBytes).when(sBlockMaster).getCapacityBytes();\n\n    TestCaseFactory\n        .newMasterTestCase(getEndpoint(AlluxioMasterRestServiceHandler.GET_CAPACITY_BYTES),\n            NO_PARAMS, \"GET\", capacityBytes, mResource).run();\n\n    Mockito.verify(sBlockMaster).getCapacityBytes();\n  }","id":13107,"modified_method":"@Test\n  public void getCapacityBytesTest() throws Exception {\n    Random random = new Random();\n    long capacityBytes = random.nextLong();\n    Mockito.doReturn(capacityBytes).when(sBlockMaster).getCapacityBytes();\n\n    TestCaseFactory\n        .newMasterTestCase(getEndpoint(AlluxioMasterRestServiceHandler.GET_CAPACITY_BYTES),\n            NO_PARAMS, \"GET\", capacityBytes, mResource).run();\n  }","commit_id":"8b105addbaa24244c9e9588a445e99da446e2d8a","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n   * @summary get the total disk capacity in bytes, a negative value means the capacity is unknown.\n   * @return the response object\n   */\n  @GET\n  @Path(GET_DISK_CAPACITY_BYTES)\n  @ReturnType(\"java.lang.Long\")\n  public Response getDiskCapacityBytes() {\n    try {\n      return Response.ok(mUfs.getSpace(mUfsRoot, UnderFileSystem.SpaceType.SPACE_TOTAL)).build();\n    } catch (IOException e) {\n      LOG.warn(e.getMessage());\n      return Response.serverError().entity(e.getMessage()).build();\n    }\n  }","id":13108,"modified_method":"/**\n   * @summary get the total ufs capacity in bytes, a negative value means the capacity is unknown.\n   * @return the response object\n   */\n  @GET\n  @Path(GET_UFS_CAPACITY_BYTES)\n  @ReturnType(\"java.lang.Long\")\n  public Response getUfsCapacityBytes() {\n    try {\n      return Response.ok(mUfs.getSpace(mUfsRoot, UnderFileSystem.SpaceType.SPACE_TOTAL)).build();\n    } catch (IOException e) {\n      LOG.warn(e.getMessage());\n      return Response.serverError().entity(e.getMessage()).build();\n    }\n  }","commit_id":"8b105addbaa24244c9e9588a445e99da446e2d8a","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n   * @summary get the free capacity\n   * @return the response object\n   */\n  @GET\n  @Path(GET_FREE_BYTES)\n  @ReturnType(\"java.lang.Long\")\n  public Response getFreeCapacityBytes() {\n    return Response.ok(mBlockMaster.getCapacityBytes() - mBlockMaster.getUsedBytes()).build();\n  }","id":13109,"modified_method":"/**\n   * @summary get the free capacity\n   * @return the response object\n   */\n  @GET\n  @Path(GET_FREE_BYTES)\n  @ReturnType(\"java.lang.Long\")\n  public Response getFreeBytes() {\n    return Response.ok(mBlockMaster.getCapacityBytes() - mBlockMaster.getUsedBytes()).build();\n  }","commit_id":"8b105addbaa24244c9e9588a445e99da446e2d8a","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n   * @summary get the configuration map\n   * @return the response object\n   */\n  @GET\n  @Path(GET_CONFIGURATION)\n  @ReturnType(\"java.util.Map<String, String>\")\n  public Response getConfiguration() {\n    Set<Map.Entry<Object, Object>> properties = mMasterConf.getInternalProperties().entrySet();\n    Map<String, String> configuration = new HashMap<>(properties.size());\n    for (Map.Entry<Object, Object> entry : properties) {\n      String key = entry.getKey().toString();\n      configuration.put(key, mMasterConf.get(key));\n    }\n    return Response.ok(configuration).build();\n  }","id":13110,"modified_method":"/**\n   * @summary get the configuration map, the keys are ordered alphabetically.\n   * @return the response object\n   */\n  @GET\n  @Path(GET_CONFIGURATION)\n  @ReturnType(\"java.util.SortedMap<String, String>\")\n  public Response getConfiguration() {\n    Set<Map.Entry<Object, Object>> properties = mMasterConf.getInternalProperties().entrySet();\n    SortedMap<String, String> configuration = new TreeMap<>();\n    for (Map.Entry<Object, Object> entry : properties) {\n      String key = entry.getKey().toString();\n      if (key.startsWith(ALLUXIO_CONF_PREFIX)) {\n        configuration.put(key, (String) entry.getValue());\n      }\n    }\n    return Response.ok(configuration).build();\n  }","commit_id":"8b105addbaa24244c9e9588a445e99da446e2d8a","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n   * @summary get the master metrics\n   * @return the response object\n   */\n  @GET\n  @Path(GET_METRICS)\n  @ReturnType(\"java.util.Map<String, Long>\")\n  public Response getMetrics() {\n    MetricRegistry metricRegistry = mMaster.getMasterMetricsSystem().getMetricRegistry();\n\n    // Get all counters.\n    Map<String, Counter> counters = metricRegistry.getCounters();\n\n    // Only the gauge for pinned files is retrieved here, other gauges are statistics of free/used\n    // spaces, those statistics can be gotten via other REST apis.\n    String filesPinnedProperty = CommonUtils.argsToString(\".\",\n        MasterContext.getMasterSource().getName(), MasterSource.FILES_PINNED);\n    Gauge filesPinned = metricRegistry.getGauges().get(filesPinnedProperty);\n\n    // Get values of the counters and gauges and put them into a metrics map.\n    Map<String, Long> metrics = new HashMap<>(counters.size() + 1);\n    for (Map.Entry<String, Counter> counter : counters.entrySet()) {\n      metrics.put(counter.getKey(), counter.getValue().getCount());\n    }\n    metrics.put(filesPinnedProperty, ((Integer) filesPinned.getValue()).longValue());\n\n    return Response.ok(metrics).build();\n  }","id":13111,"modified_method":"/**\n   * @summary get the master metrics, the keys are ordered alphabetically.\n   * @return the response object\n   */\n  @GET\n  @Path(GET_METRICS)\n  @ReturnType(\"java.util.SortedMap<String, Long>\")\n  public Response getMetrics() {\n    MetricRegistry metricRegistry = mMaster.getMasterMetricsSystem().getMetricRegistry();\n\n    // Get all counters.\n    Map<String, Counter> counters = metricRegistry.getCounters();\n\n    // Only the gauge for pinned files is retrieved here, other gauges are statistics of free/used\n    // spaces, those statistics can be gotten via other REST apis.\n    String filesPinnedProperty = CommonUtils.argsToString(\".\",\n        MasterContext.getMasterSource().getName(), MasterSource.FILES_PINNED);\n    Gauge filesPinned = metricRegistry.getGauges().get(filesPinnedProperty);\n\n    // Get values of the counters and gauges and put them into a metrics map.\n    SortedMap<String, Long> metrics = new TreeMap<>();\n    for (Map.Entry<String, Counter> counter : counters.entrySet()) {\n      metrics.put(counter.getKey(), counter.getValue().getCount());\n    }\n    metrics.put(filesPinnedProperty, ((Integer) filesPinned.getValue()).longValue());\n\n    return Response.ok(metrics).build();\n  }","commit_id":"8b105addbaa24244c9e9588a445e99da446e2d8a","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n   * @summary get the mapping from tier alias to total capacity of the tier in bytes\n   * @return the response object\n   */\n  @GET\n  @Path(GET_CAPACITY_BYTES_ON_TIERS)\n  @ReturnType(\"java.util.Map<String, Long>\")\n  public Response getCapacityBytesOnTiers() {\n    return Response.ok(mBlockMaster.getTotalBytesOnTiers()).build();\n  }","id":13112,"modified_method":"/**\n   * @summary get the mapping from tier alias to total capacity of the tier in bytes, keys are in\n   *    the order from tier alias with smaller ordinal to those with larger ones.\n   * @return the response object\n   */\n  @GET\n  @Path(GET_CAPACITY_BYTES_ON_TIERS)\n  @ReturnType(\"java.util.SortedMap<String, Long>\")\n  public Response getCapacityBytesOnTiers() {\n    SortedMap<String, Long> capacityBytesOnTiers = new TreeMap<>(getTierAliasComparator());\n    for (Map.Entry<String, Long> tierBytes : mBlockMaster.getTotalBytesOnTiers().entrySet()) {\n      capacityBytesOnTiers.put(tierBytes.getKey(), tierBytes.getValue());\n    }\n    return Response.ok(capacityBytesOnTiers).build();\n  }","commit_id":"8b105addbaa24244c9e9588a445e99da446e2d8a","url":"https://github.com/amplab/tachyon"},{"original_method":"/**\n   * @summary get the mapping from tier alias to the used bytes of the tier\n   * @return the response object\n   */\n  @GET\n  @Path(GET_USED_BYTES_ON_TIERS)\n  @ReturnType(\"java.util.Map<String, Long>\")\n  public Response getUsedBytesOnTiers() {\n    return Response.ok(mBlockMaster.getUsedBytesOnTiers()).build();\n  }","id":13113,"modified_method":"/**\n   * @summary get the mapping from tier alias to the used bytes of the tier, keys are in the order\n   *    from tier alias with smaller ordinal to those with larger ones.\n   * @return the response object\n   */\n  @GET\n  @Path(GET_USED_BYTES_ON_TIERS)\n  @ReturnType(\"java.util.SortedMap<String, Long>\")\n  public Response getUsedBytesOnTiers() {\n    SortedMap<String, Long> usedBytesOnTiers = new TreeMap<>(getTierAliasComparator());\n    for (Map.Entry<String, Long> tierBytes : mBlockMaster.getUsedBytesOnTiers().entrySet()) {\n      usedBytesOnTiers.put(tierBytes.getKey(), tierBytes.getValue());\n    }\n    return Response.ok(usedBytesOnTiers).build();\n  }","commit_id":"8b105addbaa24244c9e9588a445e99da446e2d8a","url":"https://github.com/amplab/tachyon"},{"original_method":"private void configureAssembleTask(Assemble task, final NativeBinarySpecInternal binary, final LanguageSourceSetInternal sourceSet) {\n        task.setDescription(String.format(\"Assembles the %s of %s\", sourceSet, binary));\n\n        task.setToolChain(binary.getToolChain());\n        task.setTargetPlatform(binary.getTargetPlatform());\n\n        task.source(sourceSet.getSource());\n\n        final Project project = task.getProject();\n        task.setObjectFileDir(project.file(project.getBuildDir() + \"/objs/\" + binary.getNamingScheme().getOutputDirectoryBase() + \"/\" + sourceSet.getProjectScopedName()));\n\n        Tool assemblerTool = binary.getToolByName(\"assembler\");\n        task.setAssemblerArgs(assemblerTool.getArgs());\n\n        binary.binaryInputs(task.getOutputs().getFiles().getAsFileTree().matching(new PatternSet().include(\"**/*.obj\", \"**/*.o\")));\n    }","id":13114,"modified_method":"private void configureAssembleTask(Assemble task, final NativeBinarySpecInternal binary, final LanguageSourceSetInternal sourceSet) {\n        task.setDescription(String.format(\"Assembles the %s of %s\", sourceSet, binary));\n\n        task.setToolChain(binary.getToolChain());\n        task.setTargetPlatform(binary.getTargetPlatform());\n\n        task.source(sourceSet.getSource());\n\n        final Project project = task.getProject();\n        task.setObjectFileDir(new File(binary.getNamingScheme().withOutputType(\"objs\").getOutputDirectory(project.getBuildDir()), sourceSet.getProjectScopedName()));\n\n        Tool assemblerTool = binary.getToolByName(\"assembler\");\n        task.setAssemblerArgs(assemblerTool.getArgs());\n\n        binary.binaryInputs(task.getOutputs().getFiles().getAsFileTree().matching(new PatternSet().include(\"**/*.obj\", \"**/*.o\")));\n    }","commit_id":"0de7c58def419665ead255d48c10131797281d1c","url":"https://github.com/gradle/gradle"},{"original_method":"public DefaultBinaryNamingScheme(String parentName, String roleName, List<String> dimensions) {\n        this.parentName = parentName;\n        this.roleName = roleName;\n        this.dimensions = dimensions;\n        this.dimensionPrefix = createPrefix(dimensions);\n    }","id":13115,"modified_method":"public DefaultBinaryNamingScheme(String parentName, String roleName, List<String> dimensions, String outputType) {\n        this.parentName = parentName;\n        this.roleName = roleName;\n        this.dimensions = dimensions;\n        this.outputType = outputType;\n        this.dimensionPrefix = createPrefix(dimensions);\n    }","commit_id":"0de7c58def419665ead255d48c10131797281d1c","url":"https://github.com/gradle/gradle"},{"original_method":"@Override\n    public BinaryNamingScheme withComponentName(String componentName) {\n        return new DefaultBinaryNamingScheme(componentName, roleName, dimensions);\n    }","id":13116,"modified_method":"@Override\n    public BinaryNamingScheme withComponentName(String componentName) {\n        return new DefaultBinaryNamingScheme(componentName, roleName, dimensions, null);\n    }","commit_id":"0de7c58def419665ead255d48c10131797281d1c","url":"https://github.com/gradle/gradle"},{"original_method":"@Override\n    public BinaryNamingScheme withVariantDimension(String dimension) {\n        List<String> newDimensions = new ArrayList<String>(dimensions.size() + 1);\n        newDimensions.addAll(dimensions);\n        newDimensions.add(dimension);\n        return new DefaultBinaryNamingScheme(parentName, roleName, newDimensions);\n    }","id":13117,"modified_method":"@Override\n    public BinaryNamingScheme withVariantDimension(String dimension) {\n        List<String> newDimensions = new ArrayList<String>(dimensions.size() + 1);\n        newDimensions.addAll(dimensions);\n        newDimensions.add(dimension);\n        return new DefaultBinaryNamingScheme(parentName, roleName, newDimensions, null);\n    }","commit_id":"0de7c58def419665ead255d48c10131797281d1c","url":"https://github.com/gradle/gradle"},{"original_method":"@Override\n    public BinaryNamingScheme withRole(String role) {\n        return new DefaultBinaryNamingScheme(parentName, role, dimensions);\n    }","id":13118,"modified_method":"@Override\n    public BinaryNamingScheme withRole(String role) {\n        return new DefaultBinaryNamingScheme(parentName, role, dimensions, null);\n    }","commit_id":"0de7c58def419665ead255d48c10131797281d1c","url":"https://github.com/gradle/gradle"},{"original_method":"public String getOutputDirectoryBase() {\n        StringBuilder builder = new StringBuilder(makeName(parentName, roleName));\n        if (dimensionPrefix.length() > 0) {\n            builder.append('/');\n            builder.append(dimensionPrefix);\n        }\n        return builder.toString();\n    }","id":13119,"modified_method":"public String getOutputDirectoryBase() {\n        StringBuilder builder = new StringBuilder();\n        if (outputType != null) {\n            builder.append(outputType);\n            builder.append('/');\n        }\n        builder.append(makeName(parentName, roleName));\n        if (dimensionPrefix.length() > 0) {\n            builder.append('/');\n            builder.append(dimensionPrefix);\n        }\n        return builder.toString();\n    }","commit_id":"0de7c58def419665ead255d48c10131797281d1c","url":"https://github.com/gradle/gradle"},{"original_method":"public static BinaryNamingScheme component(String componentName) {\n        return new DefaultBinaryNamingScheme(componentName, \"\", Collections.<String>emptyList());\n    }","id":13120,"modified_method":"public static BinaryNamingScheme component(String componentName) {\n        return new DefaultBinaryNamingScheme(componentName, null, Collections.<String>emptyList(), null);\n    }","commit_id":"0de7c58def419665ead255d48c10131797281d1c","url":"https://github.com/gradle/gradle"},{"original_method":"private String buildBinaryName(JvmLibrarySpec jvmLibrary, List<JavaPlatform> selectedPlatforms, JavaPlatform platform) {\n            BinaryNamingScheme namingScheme = DefaultBinaryNamingScheme.component(jvmLibrary.getName()).withRole(\"jar\");\n            if (selectedPlatforms.size() > 1) {\n                namingScheme = namingScheme.withVariantDimension(platform.getName());\n            }\n            return namingScheme.getBinaryName();\n        }","id":13121,"modified_method":"private String buildBinaryName(JvmLibrarySpec jvmLibrary, List<JavaPlatform> selectedPlatforms, JavaPlatform platform) {\n            BinaryNamingScheme namingScheme = DefaultBinaryNamingScheme.component(jvmLibrary.getName()).withRole(\"jar\");\n            namingScheme = namingScheme.withVariantDimension(platform, selectedPlatforms);\n            return namingScheme.getBinaryName();\n        }","commit_id":"0de7c58def419665ead255d48c10131797281d1c","url":"https://github.com/gradle/gradle"},{"original_method":"@Mutate\n        public void createTestTasks(final TaskContainer tasks, ModelMap<NativeTestSuiteBinarySpec> binaries) {\n            for (NativeTestSuiteBinarySpec testBinary : binaries) {\n                NativeBinarySpecInternal binary = (NativeBinarySpecInternal) testBinary;\n                final BinaryNamingScheme namingScheme = binary.getNamingScheme();\n\n                RunTestExecutable runTask = tasks.create(namingScheme.getTaskName(\"run\"), RunTestExecutable.class);\n                final Project project = runTask.getProject();\n                runTask.setDescription(String.format(\"Runs the %s\", binary));\n\n                final InstallExecutable installTask = binary.getTasks().withType(InstallExecutable.class).iterator().next();\n                runTask.getInputs().files(installTask.getOutputs().getFiles());\n                runTask.setExecutable(installTask.getRunScript().getPath());\n                runTask.setOutputDir(new File(project.getBuildDir(), \"/test-results/\" + namingScheme.getOutputDirectoryBase()));\n\n                testBinary.getTasks().add(runTask);\n            }\n        }","id":13122,"modified_method":"@Mutate\n        public void createTestTasks(final TaskContainer tasks, ModelMap<NativeTestSuiteBinarySpec> binaries) {\n            for (NativeTestSuiteBinarySpec testBinary : binaries) {\n                NativeBinarySpecInternal binary = (NativeBinarySpecInternal) testBinary;\n                final BinaryNamingScheme namingScheme = binary.getNamingScheme();\n\n                RunTestExecutable runTask = tasks.create(namingScheme.getTaskName(\"run\"), RunTestExecutable.class);\n                final Project project = runTask.getProject();\n                runTask.setDescription(String.format(\"Runs the %s\", binary));\n\n                final InstallExecutable installTask = binary.getTasks().withType(InstallExecutable.class).iterator().next();\n                runTask.getInputs().files(installTask.getOutputs().getFiles());\n                runTask.setExecutable(installTask.getRunScript().getPath());\n                runTask.setOutputDir(namingScheme.withOutputType(\"test-results\").getOutputDirectory(project.getBuildDir()));\n\n                testBinary.getTasks().add(runTask);\n            }\n        }","commit_id":"0de7c58def419665ead255d48c10131797281d1c","url":"https://github.com/gradle/gradle"},{"original_method":"private static File outputDirectoryFor(NativeBinarySpecInternal nativeBinary, File buildDir, String purpose) {\n        return new File(new File(buildDir, purpose), nativeBinary.getNamingScheme().getOutputDirectoryBase());\n    }","id":13123,"modified_method":"private static File outputDirectoryFor(NativeBinarySpecInternal nativeBinary, File buildDir, String purpose) {\n        return nativeBinary.getNamingScheme().withOutputType(purpose).getOutputDirectory(buildDir);\n    }","commit_id":"0de7c58def419665ead255d48c10131797281d1c","url":"https://github.com/gradle/gradle"},{"original_method":"private static void executeForEachBuildType(\n        NativeComponentSpec projectNativeComponent,\n        NativePlatformInternal platform,\n        BinaryNamingScheme namingScheme,\n        Set<? extends BuildType> allBuildTypes,\n        Set<? extends Flavor> allFlavors,\n        NativeDependencyResolver nativeDependencyResolver\n    ) {\n        Set<BuildType> targetBuildTypes = ((TargetedNativeComponentInternal) projectNativeComponent).chooseBuildTypes(allBuildTypes);\n        for (BuildType buildType : targetBuildTypes) {\n            BinaryNamingScheme namingSchemeWithBuildType = maybeAddDimension(namingScheme, targetBuildTypes, buildType.getName());\n            executeForEachFlavor(\n                projectNativeComponent,\n                platform,\n                buildType,\n                namingSchemeWithBuildType,\n                allFlavors,\n                nativeDependencyResolver\n            );\n        }\n    }","id":13124,"modified_method":"private static void executeForEachBuildType(\n        NativeComponentSpec projectNativeComponent,\n        NativePlatformInternal platform,\n        BinaryNamingScheme namingScheme,\n        Set<? extends BuildType> allBuildTypes,\n        Set<? extends Flavor> allFlavors,\n        NativeDependencyResolver nativeDependencyResolver\n    ) {\n        Set<BuildType> targetBuildTypes = ((TargetedNativeComponentInternal) projectNativeComponent).chooseBuildTypes(allBuildTypes);\n        for (BuildType buildType : targetBuildTypes) {\n            BinaryNamingScheme namingSchemeWithBuildType = namingScheme.withVariantDimension(buildType, targetBuildTypes);\n            executeForEachFlavor(\n                projectNativeComponent,\n                platform,\n                buildType,\n                namingSchemeWithBuildType,\n                allFlavors,\n                nativeDependencyResolver\n            );\n        }\n    }","commit_id":"0de7c58def419665ead255d48c10131797281d1c","url":"https://github.com/gradle/gradle"},{"original_method":"static void createBinariesImpl(\n        NativeComponentSpec nativeComponent,\n        PlatformResolvers platforms,\n        Set<? extends BuildType> buildTypes,\n        Set<? extends Flavor> flavors,\n        NativePlatforms nativePlatforms,\n        NativeDependencyResolver nativeDependencyResolver\n    ) {\n        if (!(nativeComponent instanceof TargetedNativeComponentInternal)) {\n            return;\n        }\n        TargetedNativeComponentInternal targetedComponent = (TargetedNativeComponentInternal) nativeComponent;\n        List<NativePlatform> resolvedPlatforms = resolvePlatforms(targetedComponent, nativePlatforms, platforms);\n\n        for (NativePlatform platform : resolvedPlatforms) {\n            BinaryNamingScheme namingScheme = DefaultBinaryNamingScheme.component(nativeComponent.getName());\n            namingScheme = maybeAddDimension(namingScheme, resolvedPlatforms, platform.getName());\n            executeForEachBuildType(\n                nativeComponent,\n                (NativePlatformInternal) platform,\n                namingScheme,\n                buildTypes,\n                flavors,\n                nativeDependencyResolver\n            );\n        }\n    }","id":13125,"modified_method":"static void createBinariesImpl(\n        NativeComponentSpec nativeComponent,\n        PlatformResolvers platforms,\n        Set<? extends BuildType> buildTypes,\n        Set<? extends Flavor> flavors,\n        NativePlatforms nativePlatforms,\n        NativeDependencyResolver nativeDependencyResolver\n    ) {\n        if (!(nativeComponent instanceof TargetedNativeComponentInternal)) {\n            return;\n        }\n        TargetedNativeComponentInternal targetedComponent = (TargetedNativeComponentInternal) nativeComponent;\n        List<NativePlatform> resolvedPlatforms = resolvePlatforms(targetedComponent, nativePlatforms, platforms);\n\n        for (NativePlatform platform : resolvedPlatforms) {\n            BinaryNamingScheme namingScheme = DefaultBinaryNamingScheme.component(nativeComponent.getName());\n            namingScheme = namingScheme.withVariantDimension(platform, resolvedPlatforms);\n            executeForEachBuildType(\n                nativeComponent,\n                (NativePlatformInternal) platform,\n                namingScheme,\n                buildTypes,\n                flavors,\n                nativeDependencyResolver\n            );\n        }\n    }","commit_id":"0de7c58def419665ead255d48c10131797281d1c","url":"https://github.com/gradle/gradle"},{"original_method":"private static void executeForEachFlavor(\n        NativeComponentSpec projectNativeComponent,\n        NativePlatform platform,\n        BuildType buildType,\n        BinaryNamingScheme namingScheme,\n        Set<? extends Flavor> allFlavors,\n        NativeDependencyResolver nativeDependencyResolver\n    ) {\n        Set<Flavor> targetFlavors = ((TargetedNativeComponentInternal) projectNativeComponent).chooseFlavors(allFlavors);\n        for (Flavor flavor : targetFlavors) {\n            BinaryNamingScheme namingSchemeWithFlavor = maybeAddDimension(namingScheme, targetFlavors, flavor.getName());\n            NativeBinaries.createNativeBinaries(\n                projectNativeComponent,\n                projectNativeComponent.getBinaries().withType(NativeBinarySpec.class),\n                nativeDependencyResolver,\n                namingSchemeWithFlavor,\n                platform,\n                buildType,\n                flavor\n            );\n        }\n    }","id":13126,"modified_method":"private static void executeForEachFlavor(\n        NativeComponentSpec projectNativeComponent,\n        NativePlatform platform,\n        BuildType buildType,\n        BinaryNamingScheme namingScheme,\n        Set<? extends Flavor> allFlavors,\n        NativeDependencyResolver nativeDependencyResolver\n    ) {\n        Set<Flavor> targetFlavors = ((TargetedNativeComponentInternal) projectNativeComponent).chooseFlavors(allFlavors);\n        for (Flavor flavor : targetFlavors) {\n            BinaryNamingScheme namingSchemeWithFlavor = namingScheme.withVariantDimension(flavor, targetFlavors);\n            NativeBinaries.createNativeBinaries(\n                projectNativeComponent,\n                projectNativeComponent.getBinaries().withType(NativeBinarySpec.class),\n                nativeDependencyResolver,\n                namingSchemeWithFlavor,\n                platform,\n                buildType,\n                flavor\n            );\n        }\n    }","commit_id":"0de7c58def419665ead255d48c10131797281d1c","url":"https://github.com/gradle/gradle"},{"original_method":"private static File installDir(File buildDir, BinaryNamingScheme namingScheme) {\n        return new File(new File(buildDir, \"install\"), namingScheme.getOutputDirectoryBase());\n    }","id":13127,"modified_method":"private static File installDir(File buildDir, BinaryNamingScheme namingScheme) {\n        return namingScheme.withOutputType(\"install\").getOutputDirectory(buildDir);\n    }","commit_id":"0de7c58def419665ead255d48c10131797281d1c","url":"https://github.com/gradle/gradle"},{"original_method":"private static File binariesDir(File buildDir, BinaryNamingScheme namingScheme) {\n        return new File(new File(buildDir, \"binaries\"), namingScheme.getOutputDirectoryBase());\n    }","id":13128,"modified_method":"private static File binariesDir(File buildDir, BinaryNamingScheme namingScheme) {\n        return namingScheme.withOutputType(\"binaries\").getOutputDirectory(buildDir);\n    }","commit_id":"0de7c58def419665ead255d48c10131797281d1c","url":"https://github.com/gradle/gradle"},{"original_method":"@Override\n    protected void configureCompileTask(AbstractNativeCompileTask task, final NativeBinarySpecInternal binary, final LanguageSourceSetInternal languageSourceSet) {\n        // Note that the sourceSet is the sourceSet this pre-compiled header will be used with - it's not an\n        // input sourceSet to the compile task.\n        final DependentSourceSetInternal sourceSet = (DependentSourceSetInternal) languageSourceSet;\n\n        task.setDescription(String.format(\"Compiles a pre-compiled header for the %s of %s\", sourceSet, binary));\n\n        // Add the source of the source set to the include paths to resolve any headers that may be in source directories\n        task.includes(new Callable<Set<File>>() {\n            public Set<File> call() throws Exception {\n                return sourceSet.getSource().getSrcDirs();\n            }\n        });\n\n        final Project project = task.getProject();\n        task.source(sourceSet.getPrefixHeaderFile());\n\n        task.setObjectFileDir(project.file(String.valueOf(project.getBuildDir()) + \"/objs/\" + binary.getNamingScheme().getOutputDirectoryBase() + \"/\" + languageSourceSet.getProjectScopedName() + \"PCH\"));\n\n        task.dependsOn(project.getTasks().withType(PrefixHeaderFileGenerateTask.class).matching(new Spec<PrefixHeaderFileGenerateTask>() {\n            @Override\n            public boolean isSatisfiedBy(PrefixHeaderFileGenerateTask prefixHeaderFileGenerateTask) {\n                return prefixHeaderFileGenerateTask.getPrefixHeaderFile().equals(sourceSet.getPrefixHeaderFile());\n            }\n        }));\n\n        // This is so that VisualCpp has the object file of the generated source file available at link time\n        binary.binaryInputs(task.getOutputs().getFiles().getAsFileTree().matching(new PatternSet().include(\"**/*.obj\", \"**/*.o\")));\n\n        PreCompiledHeader pch = binary.getPrefixFileToPCH().get(sourceSet.getPrefixHeaderFile());\n        pch.setPchObjects(task.getOutputs().getFiles().getAsFileTree().matching(new PatternSet().include(\"**/*.pch\", \"**/*.gch\")));\n        pch.builtBy(task);\n    }","id":13129,"modified_method":"@Override\n    protected void configureCompileTask(AbstractNativeCompileTask task, final NativeBinarySpecInternal binary, final LanguageSourceSetInternal languageSourceSet) {\n        // Note that the sourceSet is the sourceSet this pre-compiled header will be used with - it's not an\n        // input sourceSet to the compile task.\n        final DependentSourceSetInternal sourceSet = (DependentSourceSetInternal) languageSourceSet;\n\n        task.setDescription(String.format(\"Compiles a pre-compiled header for the %s of %s\", sourceSet, binary));\n\n        // Add the source of the source set to the include paths to resolve any headers that may be in source directories\n        task.includes(new Callable<Set<File>>() {\n            public Set<File> call() throws Exception {\n                return sourceSet.getSource().getSrcDirs();\n            }\n        });\n\n        final Project project = task.getProject();\n        task.source(sourceSet.getPrefixHeaderFile());\n\n        task.setObjectFileDir(new File(binary.getNamingScheme().withOutputType(\"objs\").getOutputDirectory(project.getBuildDir()), languageSourceSet.getProjectScopedName() + \"PCH\"));\n\n        task.dependsOn(project.getTasks().withType(PrefixHeaderFileGenerateTask.class).matching(new Spec<PrefixHeaderFileGenerateTask>() {\n            @Override\n            public boolean isSatisfiedBy(PrefixHeaderFileGenerateTask prefixHeaderFileGenerateTask) {\n                return prefixHeaderFileGenerateTask.getPrefixHeaderFile().equals(sourceSet.getPrefixHeaderFile());\n            }\n        }));\n\n        // This is so that VisualCpp has the object file of the generated source file available at link time\n        binary.binaryInputs(task.getOutputs().getFiles().getAsFileTree().matching(new PatternSet().include(\"**/*.obj\", \"**/*.o\")));\n\n        PreCompiledHeader pch = binary.getPrefixFileToPCH().get(sourceSet.getPrefixHeaderFile());\n        pch.setPchObjects(task.getOutputs().getFiles().getAsFileTree().matching(new PatternSet().include(\"**/*.pch\", \"**/*.gch\")));\n        pch.builtBy(task);\n    }","commit_id":"0de7c58def419665ead255d48c10131797281d1c","url":"https://github.com/gradle/gradle"},{"original_method":"protected void configureCompileTask(AbstractNativeCompileTask abstractTask, final NativeBinarySpecInternal binary, final LanguageSourceSetInternal sourceSet) {\n        AbstractNativeSourceCompileTask task = (AbstractNativeSourceCompileTask) abstractTask;\n\n        task.setDescription(String.format(\"Compiles the %s of %s\", sourceSet, binary));\n\n        task.source(sourceSet.getSource());\n\n        final Project project = task.getProject();\n        task.setObjectFileDir(project.file(String.valueOf(project.getBuildDir()) + \"/objs/\" + binary.getNamingScheme().getOutputDirectoryBase() + \"/\" + sourceSet.getProjectScopedName()));\n\n        // If this task uses a pre-compiled header\n        if (sourceSet instanceof DependentSourceSetInternal && ((DependentSourceSetInternal) sourceSet).getPreCompiledHeader() != null) {\n            final DependentSourceSetInternal dependentSourceSet = (DependentSourceSetInternal)sourceSet;\n            PreCompiledHeader pch = binary.getPrefixFileToPCH().get(dependentSourceSet.getPrefixHeaderFile());\n            pch.setPrefixHeaderFile(dependentSourceSet.getPrefixHeaderFile());\n            pch.setIncludeString(dependentSourceSet.getPreCompiledHeader());\n            task.setPreCompiledHeader(pch);\n        }\n\n        binary.binaryInputs(task.getOutputs().getFiles().getAsFileTree().matching(new PatternSet().include(\"**/*.obj\", \"**/*.o\")));\n    }","id":13130,"modified_method":"protected void configureCompileTask(AbstractNativeCompileTask abstractTask, final NativeBinarySpecInternal binary, final LanguageSourceSetInternal sourceSet) {\n        AbstractNativeSourceCompileTask task = (AbstractNativeSourceCompileTask) abstractTask;\n\n        task.setDescription(String.format(\"Compiles the %s of %s\", sourceSet, binary));\n\n        task.source(sourceSet.getSource());\n\n        final Project project = task.getProject();\n        task.setObjectFileDir(new File(binary.getNamingScheme().withOutputType(\"objs\").getOutputDirectory(project.getBuildDir()), sourceSet.getProjectScopedName()));\n\n        // If this task uses a pre-compiled header\n        if (sourceSet instanceof DependentSourceSetInternal && ((DependentSourceSetInternal) sourceSet).getPreCompiledHeader() != null) {\n            final DependentSourceSetInternal dependentSourceSet = (DependentSourceSetInternal)sourceSet;\n            PreCompiledHeader pch = binary.getPrefixFileToPCH().get(dependentSourceSet.getPrefixHeaderFile());\n            pch.setPrefixHeaderFile(dependentSourceSet.getPrefixHeaderFile());\n            pch.setIncludeString(dependentSourceSet.getPreCompiledHeader());\n            task.setPreCompiledHeader(pch);\n        }\n\n        binary.binaryInputs(task.getOutputs().getFiles().getAsFileTree().matching(new PatternSet().include(\"**/*.obj\", \"**/*.o\")));\n    }","commit_id":"0de7c58def419665ead255d48c10131797281d1c","url":"https://github.com/gradle/gradle"},{"original_method":"private void configureResourceCompileTask(WindowsResourceCompile task, final NativeBinarySpecInternal binary, final WindowsResourceSet sourceSet) {\n        task.setDescription(String.format(\"Compiles resources of the %s of %s\", sourceSet, binary));\n\n        task.setToolChain(binary.getToolChain());\n        task.setTargetPlatform(binary.getTargetPlatform());\n\n        task.includes(new Callable<Set<File>>() {\n            public Set<File> call() {\n                return sourceSet.getExportedHeaders().getSrcDirs();\n            }\n        });\n        task.source(sourceSet.getSource());\n\n        final Project project = task.getProject();\n        task.setOutputDir(project.file(String.valueOf(project.getBuildDir()) + \"/objs/\" + binary.getNamingScheme().getOutputDirectoryBase() + \"/\" + ((LanguageSourceSetInternal) sourceSet).getProjectScopedName()));\n\n        PreprocessingTool rcCompiler = (PreprocessingTool) binary.getToolByName(\"rcCompiler\");\n        task.setMacros(rcCompiler.getMacros());\n        task.setCompilerArgs(rcCompiler.getArgs());\n\n        FileTree resourceOutputs = task.getOutputs().getFiles().getAsFileTree().matching(new PatternSet().include(\"**/*.res\"));\n        binary.binaryInputs(resourceOutputs);\n        if (binary instanceof StaticLibraryBinarySpecInternal) {\n            ((StaticLibraryBinarySpecInternal) binary).additionalLinkFiles(resourceOutputs);\n        }\n    }","id":13131,"modified_method":"private void configureResourceCompileTask(WindowsResourceCompile task, final NativeBinarySpecInternal binary, final WindowsResourceSet sourceSet) {\n        task.setDescription(String.format(\"Compiles resources of the %s of %s\", sourceSet, binary));\n\n        task.setToolChain(binary.getToolChain());\n        task.setTargetPlatform(binary.getTargetPlatform());\n\n        task.includes(new Callable<Set<File>>() {\n            public Set<File> call() {\n                return sourceSet.getExportedHeaders().getSrcDirs();\n            }\n        });\n        task.source(sourceSet.getSource());\n\n        final Project project = task.getProject();\n        task.setOutputDir(new File(binary.getNamingScheme().withOutputType(\"objs\").getOutputDirectory(project.getBuildDir()), ((LanguageSourceSetInternal) sourceSet).getProjectScopedName()));\n\n        PreprocessingTool rcCompiler = (PreprocessingTool) binary.getToolByName(\"rcCompiler\");\n        task.setMacros(rcCompiler.getMacros());\n        task.setCompilerArgs(rcCompiler.getArgs());\n\n        FileTree resourceOutputs = task.getOutputs().getFiles().getAsFileTree().matching(new PatternSet().include(\"**/*.res\"));\n        binary.binaryInputs(resourceOutputs);\n        if (binary instanceof StaticLibraryBinarySpecInternal) {\n            ((StaticLibraryBinarySpecInternal) binary).additionalLinkFiles(resourceOutputs);\n        }\n    }","commit_id":"0de7c58def419665ead255d48c10131797281d1c","url":"https://github.com/gradle/gradle"},{"original_method":"public void testApplyOrganization() throws Exception {\n\t\tselenium.typeKeys(\"toggle_id_enterprise_admin_user_searchkeywords\",\n\t\t\tRuntimeVariables.replace(\"selenium\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Search Users']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//strong/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[2]/ul/li[1]/nobr/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//div[2]/ul/li[1]/nobr/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//input[@value='Select']\");\n\t\tselenium.waitForPopUp(\"organization\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"organization\");\n\t\tselenium.click(\"link=Liferay, Inc.\");\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":13132,"modified_method":"public void testApplyOrganization() throws Exception {\n\t\tselenium.typeKeys(\"toggle_id_enterprise_admin_user_searchkeywords\",\n\t\t\tRuntimeVariables.replace(\"selenium\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Search Users']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//strong/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[2]/ul/li[1]/nobr/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//div[2]/ul/li[1]/nobr/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//input[@value='Select']\");\n\t\tselenium.waitForPopUp(\"organization\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"organization\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Liferay, Inc.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Liferay, Inc.\");\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"e4305c26607e0c3de6402f30d364fa31c2d237d3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testPublishDraftEntry() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Draft Test\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Edit\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_saveStatus\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_saveButton\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"_33_saveButton\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Your request processed successfully.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Draft Test\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Delete\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isElementPresent(\"link=Draft Test\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":13133,"modified_method":"public void testPublishDraftEntry() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Draft Test\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Edit\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Edit\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_saveStatus\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_saveButton\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"_33_saveButton\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Your request processed successfully.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Draft Test\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Delete\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isElementPresent(\"link=Draft Test\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"e4305c26607e0c3de6402f30d364fa31c2d237d3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddDraftEntry() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//input[@value='Add Blog Entry']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='Add Blog Entry']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_title\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_33_title\", RuntimeVariables.replace(\"Draft Test\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_editor\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"FCKeditor1___Frame\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"_33_editor\\\"]\");\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"FCKeditor1___Frame\\\"]\");\n\t\tselenium.selectFrame(\"//iframe\");\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This is a test for the emergency draft system!\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_saveStatus\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tThread.sleep(15000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\"Draft saved\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\"Pacific Standard Time\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Draft Test\"));\n\t}","id":13134,"modified_method":"public void testAddDraftEntry() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//input[@value='Add Blog Entry']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='Add Blog Entry']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_title\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_33_title\", RuntimeVariables.replace(\"Draft Test\"));\n\t\tselenium.type(\"_33_title\", RuntimeVariables.replace(\"Draft Test\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_editor\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"FCKeditor1___Frame\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"_33_editor\\\"]\");\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"FCKeditor1___Frame\\\"]\");\n\t\tselenium.selectFrame(\"//iframe\");\n\t\tselenium.typeKeys(\"//body\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This is a test for the emergenc draft sstem\"));\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This is a test for the emergency draft system!\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_saveStatus\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tThread.sleep(15000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\"Draft saved\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\"Pacific Standard Time\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Draft Test\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This is a test for the emergency draft system!\"));\n\t}","commit_id":"15dffe68062e35e5af6ea44f102b098b421a4e07","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddEntryComment() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"link=0 Comments\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Post Reply\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Post Reply\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_postReplyBody0\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_33_postReplyBody0\",\n\t\t\tRuntimeVariables.replace(\"This is a test entr comment!\"));\n\t\tselenium.type(\"_33_postReplyBody0\",\n\t\t\tRuntimeVariables.replace(\"This is a test entry comment!\"));\n\t\tselenium.click(RuntimeVariables.replace(\"_33_postReplyButton0\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=This is a test entry comment!\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":13135,"modified_method":"public void testAddEntryComment() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=0 Comments\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=0 Comments\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Post Reply\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Post Reply\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_postReplyBody0\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_33_postReplyBody0\",\n\t\t\tRuntimeVariables.replace(\"This is a test entr comment\"));\n\t\tselenium.type(\"_33_postReplyBody0\",\n\t\t\tRuntimeVariables.replace(\"This is a test entry comment!\"));\n\t\tselenium.click(RuntimeVariables.replace(\"_33_postReplyButton0\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"link=This is a test entry comment!\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","commit_id":"15dffe68062e35e5af6ea44f102b098b421a4e07","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddEntry() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//input[@value='Add Blog Entry']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='Add Blog Entry']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_title\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_33_title\", RuntimeVariables.replace(\"Test Entry\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_editor\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"FCKeditor1___Frame\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"_33_editor\\\"]\");\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"FCKeditor1___Frame\\\"]\");\n\t\tselenium.selectFrame(\"//iframe\");\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"This is a test entry!\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_saveButton\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"_33_saveButton\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=0 Comments\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":13136,"modified_method":"public void testAddEntry() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//input[@value='Add Blog Entry']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Add Blog Entry']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_title\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_33_title\", RuntimeVariables.replace(\"Test Entr\"));\n\t\tselenium.type(\"_33_title\", RuntimeVariables.replace(\"Test Entry\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_editor\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"FCKeditor1___Frame\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"_33_editor\\\"]\");\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"FCKeditor1___Frame\\\"]\");\n\t\tselenium.selectFrame(\"//iframe\");\n\t\tselenium.typeKeys(\"//body\",\n\t\t\tRuntimeVariables.replace(\"This is a test entr\"));\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"This is a test entry!\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_saveButton\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"_33_saveButton\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Entry\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","commit_id":"15dffe68062e35e5af6ea44f102b098b421a4e07","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPage() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//a[@id=\\\"my-community-private-pages\\\"]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//a[@id=\\\"my-community-private-pages\\\"]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//div/a/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"new_page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"new_page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Aggregator Test Page\"));\n\t\tselenium.type(\"new_page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Aggregator Test Page\"));\n\t\tselenium.click(\"link=Save\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Aggregator Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Blogs Aggregator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":13137,"modified_method":"public void testAddPage() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//div/a/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"new_page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"new_page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Aggregator Test Page\"));\n\t\tselenium.type(\"new_page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Aggregator Test Page\"));\n\t\tselenium.click(\"link=Save\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Aggregator Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Blogs Aggregator Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"15dffe68062e35e5af6ea44f102b098b421a4e07","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPage() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//a[@id=\\\"my-community-private-pages\\\"]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//a[@id=\\\"my-community-private-pages\\\"]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//div/a/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"new_page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"new_page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.type(\"new_page\", RuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.click(\"link=Save\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":13138,"modified_method":"public void testAddPage() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//a[@id=\\\"my-community-private-pages\\\"]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//a[@id=\\\"my-community-private-pages\\\"]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//div/a/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"new_page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"new_page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.type(\"new_page\", RuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.click(\"link=Save\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"15dffe68062e35e5af6ea44f102b098b421a4e07","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortlet() throws Exception {\n\t\tselenium.click(\"link=Add Application\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id=\\\"Collaboration-BlogsAggregator\\\"]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//div[@id=\\\"Collaboration-BlogsAggregator\\\"]/p/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Configuration']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":13139,"modified_method":"public void testAddPortlet() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Add Application\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Add Application\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id=\\\"Collaboration-BlogsAggregator\\\"]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//div[@id=\\\"Collaboration-BlogsAggregator\\\"]/p/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Configuration\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"15dffe68062e35e5af6ea44f102b098b421a4e07","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortlet() throws Exception {\n\t\tselenium.click(\"link=Add Application\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id=\\\"Collaboration-Blogs\\\"]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//div[@id=\\\"Collaboration-Blogs\\\"]/p/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//input[@value='Add Blog Entry']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":13140,"modified_method":"public void testAddPortlet() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Add Application\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Add Application\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id=\\\"Collaboration-Blogs\\\"]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//div[@id=\\\"Collaboration-Blogs\\\"]/p/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//input[@value='Add Blog Entry']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"15dffe68062e35e5af6ea44f102b098b421a4e07","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddSecondEntryComment() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"link=0 Comments\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Post Reply\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Post Reply\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_postReplyBody0\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_33_postReplyBody0\",\n\t\t\tRuntimeVariables.replace(\"This is a second entr comment!\"));\n\t\tselenium.type(\"_33_postReplyBody0\",\n\t\t\tRuntimeVariables.replace(\"This is a second entry comment!\"));\n\t\tselenium.click(RuntimeVariables.replace(\"_33_postReplyButton0\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\"This is a second entry comment!\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":13141,"modified_method":"public void testAddSecondEntryComment() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=0 Comments\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=0 Comments\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Post Reply\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Post Reply\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_postReplyBody0\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_33_postReplyBody0\",\n\t\t\tRuntimeVariables.replace(\"This is a second entr comment!\"));\n\t\tselenium.type(\"_33_postReplyBody0\",\n\t\t\tRuntimeVariables.replace(\"This is a second entry comment!\"));\n\t\tselenium.click(RuntimeVariables.replace(\"_33_postReplyButton0\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"link=This is a second entry comment!\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","commit_id":"15dffe68062e35e5af6ea44f102b098b421a4e07","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddSecondEntry() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//input[@value='Add Blog Entry']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_title\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_33_title\", RuntimeVariables.replace(\"Second Test Entry\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_editor\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"FCKeditor1___Frame\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"_33_editor\\\"]\");\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"FCKeditor1___Frame\\\"]\");\n\t\tselenium.selectFrame(\"//iframe\");\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"This is a second test entry!\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_saveButton\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"_33_saveButton\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=0 Comments\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":13142,"modified_method":"public void testAddSecondEntry() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//input[@value='Add Blog Entry']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Add Blog Entry']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_title\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_33_title\",\n\t\t\tRuntimeVariables.replace(\"Second Test Entr\"));\n\t\tselenium.type(\"_33_title\", RuntimeVariables.replace(\"Second Test Entry\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_editor\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"FCKeditor1___Frame\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"_33_editor\\\"]\");\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"FCKeditor1___Frame\\\"]\");\n\t\tselenium.selectFrame(\"//iframe\");\n\t\tselenium.typeKeys(\"//body\",\n\t\t\tRuntimeVariables.replace(\"This is a second test entr\"));\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"This is a second test entry!\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_saveButton\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"_33_saveButton\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Second Test Entry\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","commit_id":"15dffe68062e35e5af6ea44f102b098b421a4e07","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public BlogsAggregatorTests() {\n\t\taddTestSuite(AddPageTest.class);\n\t\taddTestSuite(AddPortletTest.class);\n\t\taddTestSuite(DisplayStylesTest.class);\n\t\taddTestSuite(DeletePageTest.class);\n\t}","id":13143,"modified_method":"public BlogsAggregatorTests() {\n\t\taddTestSuite(SetupTest.class);\n\t\taddTestSuite(AddPageTest.class);\n\t\taddTestSuite(AddPortletTest.class);\n\t\taddTestSuite(ViewBlogsTest.class);\n\t\taddTestSuite(DisplayStylesTest.class);\n\t\taddTestSuite(TearDownTest.class);\n\t}","commit_id":"15dffe68062e35e5af6ea44f102b098b421a4e07","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public BlogsTests() {\n\t\taddTestSuite(AddPageTest.class);\n\t\taddTestSuite(AddPortletTest.class);\n\t\taddTestSuite(AddEntryTest.class);\n\t\taddTestSuite(AddEntryCommentTest.class);\n\t\taddTestSuite(AddSecondEntryTest.class);\n\t\taddTestSuite(AddSecondEntryCommentTest.class);\n\t\taddTestSuite(EditSecondCommentTest.class);\n\t\taddTestSuite(EditSecondEntryTest.class);\n\t\taddTestSuite(SearchBlogsTest.class);\n\t\taddTestSuite(DeleteSecondCommentTest.class);\n\t\taddTestSuite(DeleteSecondEntryTest.class);\n\t\taddTestSuite(AddIncorrectEntryTest.class);\n\t\taddTestSuite(AddDraftEntryTest.class);\n\t\taddTestSuite(PublishDraftEntryTest.class);\n\t\taddTestSuite(ConfigureDisplaySettingsTest.class);\n\t\taddTestSuite(DeleteEntryTest.class);\n\t\taddTestSuite(UploadLARFileTest.class);\n\t\taddTestSuite(DeletePageTest.class);\n\t}","id":13144,"modified_method":"public BlogsTests() {\n\t\taddTestSuite(AddPageTest.class);\n\t\taddTestSuite(AddPortletTest.class);\n\t\taddTestSuite(AddEntryTest.class);\n\t\taddTestSuite(AddEntryCommentTest.class);\n\t\taddTestSuite(AddSecondEntryTest.class);\n\t\taddTestSuite(AddSecondEntryCommentTest.class);\n\t\taddTestSuite(EditSecondCommentTest.class);\n\t\taddTestSuite(EditSecondEntryTest.class);\n\t\taddTestSuite(SearchBlogsTest.class);\n\t\taddTestSuite(DeleteSecondCommentTest.class);\n\t\taddTestSuite(DeleteSecondEntryTest.class);\n\t\taddTestSuite(AddNullEntryTest.class);\n\t\taddTestSuite(AddNullTitleTest.class);\n\t\taddTestSuite(AddDraftEntryTest.class);\n\t\taddTestSuite(PublishDraftEntryTest.class);\n\t\taddTestSuite(ConfigureDisplaySettingsTest.class);\n\t\taddTestSuite(DeleteEntryTest.class);\n\t\taddTestSuite(UploadLARFileTest.class);\n\t\taddTestSuite(TearDownTest.class);\n\t}","commit_id":"15dffe68062e35e5af6ea44f102b098b421a4e07","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigureDisplaySettings() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\"This is a test entry!\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Entry\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//img[@alt='Configuration']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_86_pageDisplayStyle\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.select(\"_86_pageDisplayStyle\",\n\t\t\tRuntimeVariables.replace(\"label=Title\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"You have successfully updated the setup. \")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isTextPresent(\"This is a test entry!\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":13145,"modified_method":"public void testConfigureDisplaySettings() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Configuration']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//img[@alt='Configuration']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_86_pageDelta\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.select(\"_86_pageDelta\", RuntimeVariables.replace(\"label=5\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_86_pageDisplayStyle\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.select(\"_86_pageDisplayStyle\",\n\t\t\tRuntimeVariables.replace(\"label=Title\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You have successfully updated the setup.\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"This is a test entry!\"));\n\t}","commit_id":"15dffe68062e35e5af6ea44f102b098b421a4e07","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteEntry() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Delete\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Delete\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Your request processed successfully.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertFalse(selenium.isElementPresent(\"link=Test Entry\"));\n\t}","id":13146,"modified_method":"public void testDeleteEntry() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Delete\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Test Entry\"));\n\t}","commit_id":"15dffe68062e35e5af6ea44f102b098b421a4e07","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteSecondComment() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"link=Second Test Entry\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Delete\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//td[5]/nobr/a[2]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Your request processed successfully.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":13147,"modified_method":"public void testDeleteSecondComment() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Second Test Entry\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Second Test Entry\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//td[5]/nobr/a[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//td[5]/nobr/a[2]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"This is an edited second entry comment!\"));\n\t}","commit_id":"15dffe68062e35e5af6ea44f102b098b421a4e07","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteSecondEntry() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Delete\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Delete\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Your request processed successfully.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//input[@value='Add Blog Entry']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":13148,"modified_method":"public void testDeleteSecondEntry() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Delete\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Second Test Entry\"));\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Add Blog Entry']\"));\n\t}","commit_id":"15dffe68062e35e5af6ea44f102b098b421a4e07","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDisplayStyles() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"//img[@alt='Configuration']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"_86_displayStyle\",\n\t\t\tRuntimeVariables.replace(\"label=Title\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"This is a test entry!\"));\n\t}","id":13149,"modified_method":"public void testDisplayStyles() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Configuration']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//img[@alt='Configuration']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"_86_displayStyle\",\n\t\t\tRuntimeVariables.replace(\"label=Title\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Save']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You have successfully updated the setup.\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"This is a test entry!\"));\n\t}","commit_id":"15dffe68062e35e5af6ea44f102b098b421a4e07","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditSecondComment() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//td[4]/nobr/a[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//td[4]/nobr/a[2]\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_editBody1\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_33_editBody1\",\n\t\t\tRuntimeVariables.replace(\"This is an edited second entry comment!\"));\n\t\tselenium.click(RuntimeVariables.replace(\"_33_updateReplyButton1\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"This is an edited second entry comment!\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":13150,"modified_method":"public void testEditSecondComment() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//td[4]/nobr/a[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//td[4]/nobr/a[2]\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_editBody1\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_33_editBody1\",\n\t\t\tRuntimeVariables.replace(\"This is an edited second entr comment\"));\n\t\tselenium.type(\"_33_editBody1\",\n\t\t\tRuntimeVariables.replace(\"This is an edited second entry comment!\"));\n\t\tselenium.click(RuntimeVariables.replace(\"_33_updateReplyButton1\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This is an edited second entry comment!\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","commit_id":"15dffe68062e35e5af6ea44f102b098b421a4e07","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditSecondEntry() throws Exception {\n\t\tselenium.click(\"link=Edit\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_title\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_33_title\", RuntimeVariables.replace(\"Second Test Entry\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_editor\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"FCKeditor1___Frame\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"_33_editor\\\"]\");\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"FCKeditor1___Frame\\\"]\");\n\t\tselenium.selectFrame(\"//iframe\");\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"This is an edited second test entry!\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tThread.sleep(5000);\n\t\tselenium.click(RuntimeVariables.replace(\"_33_saveButton\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"This is an edited second test entry!\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":13151,"modified_method":"public void testEditSecondEntry() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Edit\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_title\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_33_title\",\n\t\t\tRuntimeVariables.replace(\"Second Test Entr\"));\n\t\tselenium.type(\"_33_title\", RuntimeVariables.replace(\"Second Test Entry\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_editor\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"FCKeditor1___Frame\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"_33_editor\\\"]\");\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"FCKeditor1___Frame\\\"]\");\n\t\tselenium.selectFrame(\"//iframe\");\n\t\tselenium.typeKeys(\"//body\",\n\t\t\tRuntimeVariables.replace(\"This is an edited second test entr\"));\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"This is an edited second test entry!\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_saveButton\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"_33_saveButton\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This is an edited second test entry!\"));\n\t}","commit_id":"15dffe68062e35e5af6ea44f102b098b421a4e07","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testPublishDraftEntry() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Draft Test\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Edit\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Edit\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_saveStatus\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_saveButton\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"_33_saveButton\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Your request processed successfully.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Draft Test\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Delete\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isElementPresent(\"link=Draft Test\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":13152,"modified_method":"public void testPublishDraftEntry() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Edit\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_saveButton\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"_33_saveButton\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Draft Test\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Delete\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Draft Test\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","commit_id":"15dffe68062e35e5af6ea44f102b098b421a4e07","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSearchBlogs() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//input[@value='Search Entries']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_33_keywords\", RuntimeVariables.replace(\"Test Entry\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Search Entries']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Test Entry\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=\\u00ab Back\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//input[@value='Add Blog Entry']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":13153,"modified_method":"public void testSearchBlogs() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_keywords\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_33_keywords\", RuntimeVariables.replace(\"Test Entr\"));\n\t\tselenium.type(\"_33_keywords\", RuntimeVariables.replace(\"Test Entry\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Search Entries']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Entry\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=\\u00ab Back\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Add Blog Entry']\"));\n\t}","commit_id":"15dffe68062e35e5af6ea44f102b098b421a4e07","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testUploadLARFile() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Configuration']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//img[@alt='Configuration']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Export / Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_86_importFileName\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_86_importFileName\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\blogs\\\\Blogs-Selenium.portlet.lar\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Import']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Import']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Your request processed successfully.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Test Entry\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":13154,"modified_method":"public void testUploadLARFile() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Configuration']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//img[@alt='Configuration']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Export / Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_86_importFileName\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_86_importFileName\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\blogs\\\\Blogs-Selenium.portlet.lar\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Import']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Entry\"));\n\t}","commit_id":"15dffe68062e35e5af6ea44f102b098b421a4e07","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddDocument() throws Exception {\n\t\tselenium.click(\"link=This is a test subfolder\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//input[@value='Add Document']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Use the classic uploader.\");\n\t\tThread.sleep(3000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_20_file\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_20_title\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_20_description\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_20_file\",\n\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\documentlibrary\\\\test_document.txt\");\n\t\tselenium.type(\"_20_title\", \"This is a test document.\");\n\t\tselenium.type(\"_20_description\", \"This is a test document.\");\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=This is a test document.txt\\nThis is a test document.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":13155,"modified_method":"public void testAddDocument() throws Exception {\n\t\tselenium.click(\"link=Test Subfolder\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//input[@value='Add Document']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Use the classic uploader.\");\n\t\tThread.sleep(3000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_20_file\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_20_title\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_20_description\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_20_file\",\n\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\documentlibrary\\\\test_document.txt\");\n\t\tselenium.type(\"_20_title\", \"Test Document\");\n\t\tselenium.type(\"_20_description\", \"This is a test document!\");\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Test Document.txt\\nThis is a test document!\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"b9d5b5064d2eb4f2cb307bb441ee52e8b2724616","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddEntry() throws Exception {\n\t\tselenium.click(\"//input[@value='Add Entry']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_28_name\", \"Test Bookmark\");\n\t\tselenium.type(\"_28_url\", \"http://www.liferay.com\");\n\t\tselenium.typeKeys(\"_28_comments\", \"This is a test bookmark!\");\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=http://www.liferay.com\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":13156,"modified_method":"public void testAddEntry() throws Exception {\n\t\tselenium.click(\"//b\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//input[@value='Add Entry']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_28_name\", \"Test Bookmark\");\n\t\tselenium.type(\"_28_url\", \"http://www.liferay.com\");\n\t\tselenium.typeKeys(\"_28_comments\", \"This is a test bookmark!\");\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=http://www.liferay.com\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"b9d5b5064d2eb4f2cb307bb441ee52e8b2724616","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddEvent() throws Exception {\n\t\tselenium.click(\"//input[@value='Add Event']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_8_title\", \"This is a test event!\");\n\t\tselenium.type(\"_8_description\", \"This is a test event!\");\n\t\tselenium.select(\"_8_type\", \"label=Appointment\");\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"Link=This is a test event!\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":13157,"modified_method":"public void testAddEvent() throws Exception {\n\t\tselenium.click(\"//input[@value='Add Event']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_8_title\", \"Test Event\");\n\t\tselenium.type(\"_8_description\", \"This is a test event!\");\n\t\tselenium.select(\"_8_type\", \"label=Appointment\");\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"Link=Test Event\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"b9d5b5064d2eb4f2cb307bb441ee52e8b2724616","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddFolder() throws Exception {\n\t\tselenium.click(\"//input[@value='Add Folder']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_28_name\", \"Test Folder\");\n\t\tselenium.typeKeys(\"_28_description\", \"This is a test folder!\");\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//b\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":13158,"modified_method":"public void testAddFolder() throws Exception {\n\t\tselenium.click(\"//input[@value='Add Folder']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_28_name\", \"Test Folder\");\n\t\tselenium.typeKeys(\"_28_description\", \"This is a test folder!\");\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//b\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"b9d5b5064d2eb4f2cb307bb441ee52e8b2724616","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddFolder() throws Exception {\n\t\tselenium.click(\"//input[@value='Add Folder']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_20_name\", \"This is a test folder\");\n\t\tselenium.typeKeys(\"_20_description\", \"This is a test folder\");\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=This is a test folder\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":13159,"modified_method":"public void testAddFolder() throws Exception {\n\t\tselenium.click(\"//input[@value='Add Folder']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_20_name\", \"Test Folder\");\n\t\tselenium.typeKeys(\"_20_description\", \"This is a test folder!\");\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Test Folder\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"b9d5b5064d2eb4f2cb307bb441ee52e8b2724616","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortlet() throws Exception {\n\t\tselenium.click(\"link=Add Application\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[@id=\\\"Finance-Stocks\\\"]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.mouseDown(\"//div[@id=\\\"Finance-Stocks\\\"]/p/a\");\n\t\tselenium.mouseUp(\"//div[@id=\\\"Finance-Stocks\\\"]/p/a\");\n\t}","id":13160,"modified_method":"public void testAddPortlet() throws Exception {\n\t\tselenium.click(\"link=Add Application\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[@id=\\\"Finance-Stocks\\\"]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.mouseDown(\"//div[@id=\\\"Finance-Stocks\\\"]/p/a\");\n\t\tselenium.mouseUp(\"//div[@id=\\\"Finance-Stocks\\\"]/p/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@title='Preferences']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"b9d5b5064d2eb4f2cb307bb441ee52e8b2724616","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddQuestion() throws Exception {\n\t\tselenium.click(\"//input[@value='Add Question']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_25_title\", \"Test Poll Question\");\n\t\tselenium.typeKeys(\"_25_description\", \"This is a test poll description.\");\n\t\tselenium.typeKeys(\"_25_choiceDescriptiona\", \"Test Choice A\");\n\t\tselenium.typeKeys(\"_25_choiceDescriptionb\", \"Test Choice B\");\n\t\tselenium.click(\"//input[@value='Add Choice']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_25_choiceDescriptionc\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_25_choiceDescriptionc\", \"Test Choice C\");\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Test Poll Question\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":13161,"modified_method":"public void testAddQuestion() throws Exception {\n\t\tselenium.click(\"//input[@value='Add Question']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_25_title\", \"Test Poll Question\");\n\t\tselenium.typeKeys(\"_25_description\", \"This is a test poll description!\");\n\t\tselenium.typeKeys(\"_25_choiceDescriptiona\", \"Test Choice A\");\n\t\tselenium.typeKeys(\"_25_choiceDescriptionb\", \"Test Choice B\");\n\t\tselenium.click(\"//input[@value='Add Choice']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_25_choiceDescriptionc\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_25_choiceDescriptionc\", \"Test Choice C\");\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Test Poll Question\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"b9d5b5064d2eb4f2cb307bb441ee52e8b2724616","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddSubfolder() throws Exception {\n\t\tselenium.click(\"//input[@value='Add Subfolder']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_28_name\", \"Test Subfolder\");\n\t\tselenium.typeKeys(\"_28_description\", \"This is a test subfolder!\");\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//b\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":13162,"modified_method":"public void testAddSubfolder() throws Exception {\n\t\tselenium.click(\"//b\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//input[@value='Add Subfolder']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_28_name\", \"Test Subfolder\");\n\t\tselenium.typeKeys(\"_28_description\", \"This is a test subfolder!\");\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//b\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"b9d5b5064d2eb4f2cb307bb441ee52e8b2724616","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddSubfolder() throws Exception {\n\t\tselenium.click(\"link=This is a test folder\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//input[@value='Add Subfolder']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_20_name\", \"This is a test subfolder\");\n\t\tselenium.type(\"_20_description\", \"This is a test subfolder\");\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=This is a test subfolder\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":13163,"modified_method":"public void testAddSubfolder() throws Exception {\n\t\tselenium.click(\"link=Test Folder\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//input[@value='Add Subfolder']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_20_name\", \"Test Subfolder\");\n\t\tselenium.typeKeys(\"_20_description\", \"This is a test subfolder!\");\n\t\tselenium.click(\"//input[@value='Save']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Test Subfolder\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"b9d5b5064d2eb4f2cb307bb441ee52e8b2724616","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public CalendarTests() {\n\t\taddTestSuite(AddPageTest.class);\n\t\taddTestSuite(AddPortletTest.class);\n\t\taddTestSuite(AddEventTest.class);\n\t\taddTestSuite(GetEventsTest.class);\n\t}","id":13164,"modified_method":"public CalendarTests() {\n\t\taddTestSuite(AddPageTest.class);\n\t\taddTestSuite(AddPortletTest.class);\n\t\taddTestSuite(AddEventTest.class);\n\t\taddTestSuite(GetEventTest.class);\n\t}","commit_id":"b9d5b5064d2eb4f2cb307bb441ee52e8b2724616","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSearch() throws Exception {\n\t\tselenium.type(\"_20_keywords2\", \"Test Document\");\n\t\tselenium.click(\"//input[@value='Search File Entries']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=This is a test document\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Return to Full Page\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":13165,"modified_method":"public void testSearch() throws Exception {\n\t\tselenium.typeKeys(\"_20_keywords2\", \"Test Document\");\n\t\tselenium.click(\"//input[@value='Search File Entries']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Test Document\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Return to Full Page\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"b9d5b5064d2eb4f2cb307bb441ee52e8b2724616","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddChildPage() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Breadcrumb Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Breadcrumb Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Manage Pages\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Manage Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Children\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Children\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_88_name_en_US\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_88_name_en_US\",\n\t\t\tRuntimeVariables.replace(\"Child Test Page\"));\n\t\tselenium.type(\"_88_name_en_US\",\n\t\t\tRuntimeVariables.replace(\"Child Test Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Add Page']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Add Page']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isElementPresent(\"//li[2]/ul/li[3]/ul/li/a/span\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Breadcrumb Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Breadcrumb Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[2]/div/div/div/ul/li/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//div[2]/div/div/div/ul/li/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Add Application\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Add Application\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id='ContentManagement-Navigation']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//div[@id='ContentManagement-Navigation']/p/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Configuration']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":13166,"modified_method":"public void testAddChildPage() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Breadcrumb Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Breadcrumb Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Manage Pages\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Manage Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Children\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Children\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_88_name_en_US\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_88_name_en_US\",\n\t\t\tRuntimeVariables.replace(\"Child Test Page\"));\n\t\tselenium.type(\"_88_name_en_US\",\n\t\t\tRuntimeVariables.replace(\"Child Test Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Add Page']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Add Page']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isElementPresent(\"//li[2]/ul/li[3]/ul/li/a/span\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Breadcrumb Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Breadcrumb Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[2]/div/div/div/ul/li/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//div[2]/div/div/div/ul/li/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"fdd9293bec1aa785a7176cec8ad33e6205764372","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDown() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Breadcrumb Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Breadcrumb Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//div[2]/div/div/div/ul/li/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to remove this component[\\\\s\\\\S]$\"));\n\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\"//input[@value='Add Blog Entry']\"));\n\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to remove this component[\\\\s\\\\S]$\"));\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"Breadcrumb Test Page \\u00bb Child Test Page\"));\n\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to remove this component[\\\\s\\\\S]$\"));\n\t\tassertFalse(selenium.isElementPresent(\"//div/h3/a\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Breadcrumb Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Breadcrumb Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Remove']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to remove this component[\\\\s\\\\S]$\"));\n\t\tassertFalse(selenium.isElementPresent(\"//div[2]/div/div/a\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Remove']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to remove this component[\\\\s\\\\S]$\"));\n\t\tassertFalse(selenium.isElementPresent(\"//div/h3/a\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[2]/ul/li[1]/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//div[2]/ul/li[1]/a/span\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Manage Pages\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Manage Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//li[2]/ul/li[3]/ul/li/a/span\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Delete']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertFalse(selenium.isElementPresent(\"//li[2]/ul/li[3]/ul/li/a/span\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//li[2]/ul/li[3]/a/span\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Delete']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertFalse(selenium.isElementPresent(\"//div/h3/a\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[2]/ul/li[1]/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//div[2]/ul/li[1]/a/span\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\"link=Breadcrumb Test Page\"));\n\t}","id":13167,"modified_method":"public void testTearDown() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Breadcrumb Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Breadcrumb Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//div[2]/div/div/div/ul/li/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Remove']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to remove this component[\\\\s\\\\S]$\"));\n\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\"//input[@value='Add Blog Entry']\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Remove']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to remove this component[\\\\s\\\\S]$\"));\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"Breadcrumb Test Page \\u00bb Child Test Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Breadcrumb Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Breadcrumb Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Remove']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to remove this component[\\\\s\\\\S]$\"));\n\t\tassertFalse(selenium.isElementPresent(\"//div[2]/div/div/a\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Remove']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to remove this component[\\\\s\\\\S]$\"));\n\t\tassertFalse(selenium.isElementPresent(\"//div/h3/a\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[2]/ul/li[1]/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//div[2]/ul/li[1]/a/span\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Manage Pages\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Manage Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//li[2]/ul/li[3]/ul/li/a/span\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Delete']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertFalse(selenium.isElementPresent(\"//li[2]/ul/li[3]/ul/li/a/span\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//li[2]/ul/li[3]/a/span\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Delete']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertFalse(selenium.isElementPresent(\"//div/h3/a\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[2]/ul/li[1]/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//div[2]/ul/li[1]/a/span\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\"link=Breadcrumb Test Page\"));\n\t}","commit_id":"fdd9293bec1aa785a7176cec8ad33e6205764372","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddLDAPServer() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Settings\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(\"authenticationLink\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=LDAP\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(\"link=LDAP\");\n\t\tselenium.clickAt(\"//input[@value=\\\"Add\\\"]\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//span/input\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//span/input\", RuntimeVariables.replace(\"Test LDAP 1\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(\"//input[@name='_130_defaultLdap' and @value='apache']\");\n\t\tselenium.click(\"//input[@value='Reset Values']\");\n\t\tselenium.type(\"_130_settings--ldap.base.provider.url--\",\n\t\t\tRuntimeVariables.replace(\"ldap://[$VM_HOST$]:10389\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t}","id":13168,"modified_method":"public void testAddLDAPServer() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Portal Settings\",\n\t\t\tRuntimeVariables.replace(\"Portal Settings\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//a[@id='_130_authenticationLink']\", \"Authentication\"));\n\t\tselenium.clickAt(\"//a[@id='_130_authenticationLink']\",\n\t\t\tRuntimeVariables.replace(\"Authentication\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=LDAP\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=LDAP\", RuntimeVariables.replace(\"LDAP\"));\n\t\tselenium.clickAt(\"//input[@value='Add']\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_130_ldap.server.name.0']\",\n\t\t\tRuntimeVariables.replace(\"Test LDAP 1\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@name='_130_defaultLdap' and @value='apache']\",\n\t\t\tRuntimeVariables.replace(\"Apache Directory Server\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@name='_130_defaultLdap' and @value='apache']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(\"//input[@value='Reset Values']\");\n\t\tselenium.type(\"//input[@id='_130_ldap.base.provider.url.0']\",\n\t\t\tRuntimeVariables.replace(\"ldap://[$VM_HOST$]:10389\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_130_ldap.base.dn.0']\",\n\t\t\tRuntimeVariables.replace(\"dc=example,dc=com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_130_ldap.security.principal.0']\",\n\t\t\tRuntimeVariables.replace(\"uid=admin,ou=system\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_130_ldap.security.credentials.0']\",\n\t\t\tRuntimeVariables.replace(\"secret\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_130_ldap.auth.search.filter.0']\",\n\t\t\tRuntimeVariables.replace(\"(mail=@email_address@)\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_130_ldap.import.user.search.filter.0']\",\n\t\t\tRuntimeVariables.replace(\"(objectClass=person)\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_130_userMappingScreenName']\",\n\t\t\tRuntimeVariables.replace(\"cn\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_130_userMappingPassword']\",\n\t\t\tRuntimeVariables.replace(\"userPassword\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_130_userMappingEmailAddress']\",\n\t\t\tRuntimeVariables.replace(\"mail\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_130_userMappingFullName']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_130_userMappingFirstName']\",\n\t\t\tRuntimeVariables.replace(\"givenName\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_130_userMappingMiddleName']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_130_userMappingLastName']\",\n\t\t\tRuntimeVariables.replace(\"sn\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_130_userMappingJobTitle']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_130_userMappingGroup']\",\n\t\t\tRuntimeVariables.replace(\"businessCategory\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_130_userMappingUuid']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_130_ldap.import.group.search.filter.0']\",\n\t\t\tRuntimeVariables.replace(\"(objectClass=groupOfUniqueNames)\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_130_groupMappingGroupName']\",\n\t\t\tRuntimeVariables.replace(\"cn\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_130_groupMappingDescription']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_130_groupMappingUser']\",\n\t\t\tRuntimeVariables.replace(\"businessCategory\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_130_ldap.users.dn.0']\",\n\t\t\tRuntimeVariables.replace(\"dc=example,dc=com,ou=users\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_130_ldap.user.default.object.classes.0']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_130_ldap.groups.dn.0']\",\n\t\t\tRuntimeVariables.replace(\"dc=example,dc=com,ou=groups\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_130_ldap.group.default.object.classes.0']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"cd70116fc4addbd6fad8e65552aba397434ec978","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertLDAPConnection() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Settings\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(\"authenticationLink\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=LDAP\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(\"link=LDAP\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"_130_settings--ldap.auth.enabled--Checkbox\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//span[3]/a/img\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//span[3]/a/img\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(\"//input[@value='Test LDAP Connection']\");\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[1]/div[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Liferay has successfully connected to the LDAP server.\"));\n\t\tSystem.out.println(\n\t\t\t\"Liferay has successfully connected to the LDAP server.\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//button\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(\"//button\");\n\t}","id":13169,"modified_method":"public void testAssertLDAPConnection() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Portal Settings\",\n\t\t\tRuntimeVariables.replace(\"Portal Settings\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//a[@id='_130_authenticationLink']\", \"Authentication\"));\n\t\tselenium.clickAt(\"//a[@id='_130_authenticationLink']\",\n\t\t\tRuntimeVariables.replace(\"Authentication\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=LDAP\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=LDAP\", RuntimeVariables.replace(\"LDAP\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//input[@id='_130_ldap.auth.enabledCheckbox']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_130_ldap.auth.enabledCheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Test LDAP 1\"),\n\t\t\tselenium.getText(\"//fieldset[2]/div/div/table/tbody/tr/td[1]\"));\n\t\tselenium.clickAt(\"//img[@alt='Edit']\", RuntimeVariables.replace(\"Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Test LDAP Connection']\",\n\t\t\tRuntimeVariables.replace(\"Test LDAP Connection\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[1]/div[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"Liferay has successfully connected to the LDAP server.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[1]/div[2]\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Liferay has successfully connected to the LDAP server.\"),\n\t\t\tselenium.getText(\"//div[1]/div[2]\"));\n\t\tSystem.out.println(\n\t\t\t\"Liferay has successfully connected to the LDAP server.\");\n\t\tselenium.click(\"//button\");\n\t}","commit_id":"cd70116fc4addbd6fad8e65552aba397434ec978","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertLDAPUsersPresent() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Users\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//span/input\", RuntimeVariables.replace(\"jane\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Search']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"Jane\"));\n\t\tassertTrue(selenium.isTextPresent(\"Smith\"));\n\t\tassertTrue(selenium.isTextPresent(\"janesmith\"));\n\t\tselenium.type(\"//span/input\", RuntimeVariables.replace(\"luke\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Search']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"Luke\"));\n\t\tassertTrue(selenium.isTextPresent(\"Skywalker\"));\n\t\tassertTrue(selenium.isTextPresent(\"lukeskywalker\"));\n\t\tselenium.type(\"//span/input\", RuntimeVariables.replace(\"martin\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Search']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"Martin\"));\n\t\tassertTrue(selenium.isTextPresent(\"Luther\"));\n\t\tassertTrue(selenium.isTextPresent(\"martinluther\"));\n\t\tSystem.out.println(\"LDAP Users have been imported into Liferay.\\n\");\n\t}","id":13170,"modified_method":"public void testAssertLDAPUsersPresent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Users\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_toggle_id_enterprise_admin_user_searchkeywords']\",\n\t\t\tRuntimeVariables.replace(\"jane\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Jane\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Smith\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"janesmith\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tassertFalse(selenium.isTextPresent(\"No users were found.\"));\n\t\tselenium.type(\"//input[@id='_125_toggle_id_enterprise_admin_user_searchkeywords']\",\n\t\t\tRuntimeVariables.replace(\"luke\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Luke\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Skywalker\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"lukeskywalker\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tassertFalse(selenium.isTextPresent(\"No users were found.\"));\n\t\tselenium.type(\"//input[@id='_125_toggle_id_enterprise_admin_user_searchkeywords']\",\n\t\t\tRuntimeVariables.replace(\"martin\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Martin\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Luther\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"martinluther\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tassertFalse(selenium.isTextPresent(\"No users were found.\"));\n\t\tSystem.out.println(\"LDAP Users have been imported into Liferay.\");\n\t}","commit_id":"cd70116fc4addbd6fad8e65552aba397434ec978","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertLDAPUsers() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Settings\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(\"authenticationLink\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=LDAP\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(\"link=LDAP\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"_130_settings--ldap.auth.enabled--Checkbox\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//span[3]/a/img\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//span[3]/a/img\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(\"//input[@value='Test LDAP Users']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[1]/div[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\t\tassertTrue(selenium.isTextPresent(\"janesmith\"));\n\t\tassertTrue(selenium.isTextPresent(\"lukeskywalker\"));\n\t\tassertTrue(selenium.isTextPresent(\"martinluther\"));\n\t\tassertTrue(selenium.isTextPresent(\"janesmith@liferay.com\"));\n\t\tassertTrue(selenium.isTextPresent(\"lukeskywalker@liferay.com\"));\n\t\tassertTrue(selenium.isTextPresent(\"martinluther@liferay.com\"));\n\t\tSystem.out.println(\"LDAP Users have been detected.\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//button\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(\"//button\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":13171,"modified_method":"public void testAssertLDAPUsers() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Portal Settings\",\n\t\t\tRuntimeVariables.replace(\"Portal Settings\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//a[@id='_130_authenticationLink']\", \"Authentication\"));\n\t\tselenium.clickAt(\"//a[@id='_130_authenticationLink']\",\n\t\t\tRuntimeVariables.replace(\"Authentication\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=LDAP\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=LDAP\", RuntimeVariables.replace(\"LDAP\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//input[@id='_130_ldap.auth.enabledCheckbox']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_130_ldap.auth.enabledCheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Test LDAP 1\"),\n\t\t\tselenium.getText(\"//fieldset[2]/div/div/table/tbody/tr/td[1]\"));\n\t\tselenium.clickAt(\"//img[@alt='Edit']\", RuntimeVariables.replace(\"Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Test LDAP Users']\",\n\t\t\tRuntimeVariables.replace(\"Test LDAP Users\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[1]/div[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"janesmith\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\"//td[2]\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"janesmith\"),\n\t\t\tselenium.getText(\"//td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"janesmith@liferay.com\"),\n\t\t\tselenium.getText(\"//td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Jane\"),\n\t\t\tselenium.getText(\"//td[4]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Smith\"),\n\t\t\tselenium.getText(\"//td[5]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"********\"),\n\t\t\tselenium.getText(\"//td[6]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\"), selenium.getText(\"//td[7]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1\"), selenium.getText(\"//td[8]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"lukeskywalker\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"lukeskywalker@liferay.com\"),\n\t\t\tselenium.getText(\"//tr[3]/td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Luke\"),\n\t\t\tselenium.getText(\"//tr[3]/td[4]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Skywalker\"),\n\t\t\tselenium.getText(\"//tr[3]/td[5]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"********\"),\n\t\t\tselenium.getText(\"//tr[3]/td[6]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\"),\n\t\t\tselenium.getText(\"//tr[3]/td[7]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0\"),\n\t\t\tselenium.getText(\"//tr[3]/td[8]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"martinluther\"),\n\t\t\tselenium.getText(\"//tr[4]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"martinluther@liferay.com\"),\n\t\t\tselenium.getText(\"//tr[4]/td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Martin\"),\n\t\t\tselenium.getText(\"//tr[4]/td[4]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Luther\"),\n\t\t\tselenium.getText(\"//tr[4]/td[5]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"********\"),\n\t\t\tselenium.getText(\"//tr[4]/td[6]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\"),\n\t\t\tselenium.getText(\"//tr[4]/td[7]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0\"),\n\t\t\tselenium.getText(\"//tr[4]/td[8]\"));\n\t\tSystem.out.println(\"LDAP Users have been detected.\");\n\t\tselenium.click(\"//button\");\n\t}","commit_id":"cd70116fc4addbd6fad8e65552aba397434ec978","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertNoLDAPUsers() throws Exception {\n\t\tSystem.out.println(\"Now testing LDAP integration...\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Users\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//span/input\", RuntimeVariables.replace(\"jane\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Search']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"No users were found.\"));\n\t\tselenium.type(\"//span/input\", RuntimeVariables.replace(\"luke\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Search']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"No users were found.\"));\n\t\tselenium.type(\"//span/input\", RuntimeVariables.replace(\"martin\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Search']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"No users were found.\"));\n\t}","id":13172,"modified_method":"public void testAssertNoLDAPUsers() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tSystem.out.println(\"Now testing LDAP integration...\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Users\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_toggle_id_enterprise_admin_user_searchkeywords']\",\n\t\t\tRuntimeVariables.replace(\"jane\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"No users were found.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.type(\"//input[@id='_125_toggle_id_enterprise_admin_user_searchkeywords']\",\n\t\t\tRuntimeVariables.replace(\"luke\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"No users were found.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.type(\"//input[@id='_125_toggle_id_enterprise_admin_user_searchkeywords']\",\n\t\t\tRuntimeVariables.replace(\"martin\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"No users were found.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t}","commit_id":"cd70116fc4addbd6fad8e65552aba397434ec978","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEnableLDAP() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Settings\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(\"authenticationLink\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=LDAP\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(\"link=LDAP\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"_130_settings--ldap.auth.enabled--Checkbox\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(\"_130_settings--ldap.auth.enabled--Checkbox\");\n\t\tselenium.clickAt(\"//input[@value=\\\"Save\\\"]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":13173,"modified_method":"public void testEnableLDAP() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Portal Settings\",\n\t\t\tRuntimeVariables.replace(\"Portal Settings\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//a[@id='_130_authenticationLink']\", \"Authentication\"));\n\t\tselenium.clickAt(\"//a[@id='_130_authenticationLink']\",\n\t\t\tRuntimeVariables.replace(\"Authentication\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=LDAP\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=LDAP\", RuntimeVariables.replace(\"LDAP\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//input[@id='_130_ldap.auth.enabledCheckbox']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_130_ldap.auth.enabledCheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_130_ldap.auth.enabledCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Enabled\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_130_ldap.auth.enabledCheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_130_ldap.auth.enabledCheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"cd70116fc4addbd6fad8e65552aba397434ec978","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTestSuite(AssertNoLDAPUsersTest.class);\n\t\ttestSuite.addTestSuite(EnableLDAPTest.class);\n\t\ttestSuite.addTestSuite(AddLDAPServerTest.class);\n\t\ttestSuite.addTestSuite(AssertLDAPConnectionTest.class);\n\t\ttestSuite.addTestSuite(AssertLDAPUsersTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(LoginJaneLDAPTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(LoginLukeLDAPTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(LoginMartinLDAPTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(LoginAdminTest.class);\n\t\ttestSuite.addTestSuite(AssertLDAPUsersPresentTest.class);\n\n\t\ttestSuite.addTestSuite(StopSeleniumTest.class);\n\n\t\treturn testSuite;\n\t}","id":13174,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTestSuite(AssertNoLDAPUsersTest.class);\n\t\ttestSuite.addTestSuite(AssertNoLDAPGroupsTest.class);\n\t\ttestSuite.addTestSuite(EnableLDAPTest.class);\n\t\ttestSuite.addTestSuite(AddLDAPServerTest.class);\n\t\ttestSuite.addTestSuite(AssertLDAPConnectionTest.class);\n\t\ttestSuite.addTestSuite(AssertLDAPUsersTest.class);\n\t\ttestSuite.addTestSuite(AssertLDAPGroupsTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(LoginJaneLDAPTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(LoginLukeLDAPTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(LoginMartinLDAPTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(LoginAdminTest.class);\n\t\ttestSuite.addTestSuite(AssertLDAPUsersPresentTest.class);\n\t\ttestSuite.addTestSuite(AssertLDAPGroupsPresentTest.class);\n\n\t\ttestSuite.addTestSuite(StopSeleniumTest.class);\n\n\t\treturn testSuite;\n\t}","commit_id":"cd70116fc4addbd6fad8e65552aba397434ec978","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testLoginAdmin() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"link=Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_58_login\", RuntimeVariables.replace(\"test@liferay.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(\"_58_rememberMeCheckbox\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Sign In']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":13175,"modified_method":"public void testLoginAdmin() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Sign In\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sign In\", RuntimeVariables.replace(\"Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\tRuntimeVariables.replace(\"test@liferay.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isChecked(\"//input[@id='_58_rememberMeCheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_58_rememberMeCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Remember Me\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_58_rememberMeCheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You are signed in as Joe Bloggs.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-body']\"));\n\t}","commit_id":"cd70116fc4addbd6fad8e65552aba397434ec978","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testLoginJaneLDAP() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"link=Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_58_login\",\n\t\t\tRuntimeVariables.replace(\"janesmith@liferay.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(\"_58_rememberMeCheckbox\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Sign In']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='I Agree']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"reminderQueryAnswer\", RuntimeVariables.replace(\"Test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"You are signed in as Jane Smith.\"));\n\t}","id":13176,"modified_method":"public void testLoginJaneLDAP() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Sign In\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sign In\", RuntimeVariables.replace(\"Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\tRuntimeVariables.replace(\"janesmith@liferay.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isChecked(\"//input[@id='_58_rememberMeCheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_58_rememberMeCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Remember Me\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_58_rememberMeCheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='I Agree']\",\n\t\t\tRuntimeVariables.replace(\"I Agree\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='password1']\",\n\t\t\tRuntimeVariables.replace(\"password\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='password2']\",\n\t\t\tRuntimeVariables.replace(\"password\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"reminderQueryAnswer\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You are signed in as Jane Smith.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-body']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Jane Smith\"),\n\t\t\tselenium.getText(\"//a[2]\"));\n\t\tselenium.clickAt(\"//a[2]\", RuntimeVariables.replace(\"Jane Smith\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_2_userGroupsLink']\",\n\t\t\t\t\"User Groups\"));\n\t\tselenium.clickAt(\"//a[@id='_2_userGroupsLink']\",\n\t\t\tRuntimeVariables.replace(\"User Groups\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//tr[3]/td\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"usergroup\"),\n\t\t\tselenium.getText(\"//tr[3]/td\"));\n\t}","commit_id":"cd70116fc4addbd6fad8e65552aba397434ec978","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testLoginLukeLDAP() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"link=Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_58_login\",\n\t\t\tRuntimeVariables.replace(\"lukeskywalker@liferay.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(\"_58_rememberMeCheckbox\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Sign In']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='I Agree']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"reminderQueryAnswer\", RuntimeVariables.replace(\"Test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You are signed in as Luke Skywalker.\"));\n\t}","id":13177,"modified_method":"public void testLoginLukeLDAP() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Sign In\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sign In\", RuntimeVariables.replace(\"Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\tRuntimeVariables.replace(\"lukeskywalker@liferay.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isChecked(\"//input[@id='_58_rememberMeCheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_58_rememberMeCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Remember Me\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_58_rememberMeCheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='I Agree']\",\n\t\t\tRuntimeVariables.replace(\"I Agree\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='password1']\",\n\t\t\tRuntimeVariables.replace(\"password\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='password2']\",\n\t\t\tRuntimeVariables.replace(\"password\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"reminderQueryAnswer\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You are signed in as Luke Skywalker.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-body']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Luke Skywalker\"),\n\t\t\tselenium.getText(\"//a[2]\"));\n\t\tselenium.clickAt(\"//a[2]\", RuntimeVariables.replace(\"Luke Skywalker\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_2_userGroupsLink']\",\n\t\t\t\t\"User Groups\"));\n\t\tselenium.clickAt(\"//a[@id='_2_userGroupsLink']\",\n\t\t\tRuntimeVariables.replace(\"User Groups\"));\n\t\tassertFalse(selenium.isTextPresent(\"usergroup\"));\n\t}","commit_id":"cd70116fc4addbd6fad8e65552aba397434ec978","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testLoginMartinLDAP() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"link=Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_58_login\",\n\t\t\tRuntimeVariables.replace(\"martinluther@liferay.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(\"_58_rememberMeCheckbox\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Sign In']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='I Agree']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"reminderQueryAnswer\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"You are signed in as Martin Luther.\"));\n\t}","id":13178,"modified_method":"public void testLoginMartinLDAP() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Sign In\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sign In\", RuntimeVariables.replace(\"Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\tRuntimeVariables.replace(\"martinluther@liferay.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isChecked(\"//input[@id='_58_rememberMeCheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_58_rememberMeCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Remember Me\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_58_rememberMeCheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='I Agree']\",\n\t\t\tRuntimeVariables.replace(\"I Agree\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='password1']\",\n\t\t\tRuntimeVariables.replace(\"password\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='password2']\",\n\t\t\tRuntimeVariables.replace(\"password\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"reminderQueryAnswer\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You are signed in as Martin Luther.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-body']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Martin Luther\"),\n\t\t\tselenium.getText(\"//a[2]\"));\n\t\tselenium.clickAt(\"//a[2]\", RuntimeVariables.replace(\"Martin Luther\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_2_userGroupsLink']\",\n\t\t\t\t\"User Groups\"));\n\t\tselenium.clickAt(\"//a[@id='_2_userGroupsLink']\",\n\t\t\tRuntimeVariables.replace(\"User Groups\"));\n\t\tassertFalse(selenium.isTextPresent(\"usergroup\"));\n\t}","commit_id":"cd70116fc4addbd6fad8e65552aba397434ec978","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testLogout() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Sign Out\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Sign Out\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_58_login\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":13179,"modified_method":"public void testLogout() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Sign Out\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Sign Out\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_58_login']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"cd70116fc4addbd6fad8e65552aba397434ec978","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddDraftEntry() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Add Blog Entry']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_title\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_33_title\", RuntimeVariables.replace(\"Draft Test\"));\n\t\tselenium.type(\"_33_title\", RuntimeVariables.replace(\"Draft Test\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_editor\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"FCKeditor1___Frame\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"_33_editor\\\"]\");\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"FCKeditor1___Frame\\\"]\");\n\t\tselenium.selectFrame(\"//iframe\");\n\t\tselenium.typeKeys(\"//body\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This is a test for the emergenc draft sstem\"));\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This is a test for the emergency draft system!\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_saveStatus\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tThread.sleep(15000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\"Draft saved\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\"Pacific Daylight Time\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Draft Test\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This is a test for the emergency draft system!\"));\n\t}","id":13180,"modified_method":"public void testAddDraftEntry() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Add Blog Entry']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Add Blog Entry']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_33_title\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_33_title\", RuntimeVariables.replace(\"Draft Test\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_editor\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"FCKeditor1___Frame\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"_33_editor\\\"]\");\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"FCKeditor1___Frame\\\"]\");\n\t\tselenium.selectFrame(\"//iframe\");\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This is a test for the emergency draft system.\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tThread.sleep(15000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\"Draft saved\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isTextPresent(\"Draft saved\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//form/div[2]/div[1]/div[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Draft Test\"),\n\t\t\tselenium.getText(\"//form/div[2]/div[1]/div[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a test for the emergency draft system.\"),\n\t\t\tselenium.getText(\"//p\"));\n\t}","commit_id":"aa08390f30b5f1c0ca77fad384a75c93561c5511","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddEntryComment() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=0 Comments\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Add Comment\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Add Comment\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_postReplyBody0\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_33_postReplyBody0\",\n\t\t\tRuntimeVariables.replace(\"This is a test entr comment\"));\n\t\tselenium.type(\"_33_postReplyBody0\",\n\t\t\tRuntimeVariables.replace(\"This is a test entry comment!\"));\n\t\tselenium.click(RuntimeVariables.replace(\"_33_postReplyButton0\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"This is a test entry comment!\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","id":13181,"modified_method":"public void testAddEntryComment() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=0 Comments\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=0 Comments\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Add Comment\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Add Comment\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_33_postReplyBody0\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_33_postReplyBody0\",\n\t\t\tRuntimeVariables.replace(\"This is a test entry comment.\"));\n\t\tselenium.click(RuntimeVariables.replace(\"_33_postReplyButton0\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isVisible(\"_33_postReplyBody0\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This is a test entry comment.\"),\n\t\t\tselenium.getText(\"//td[2]/div[1]\"));\n\t}","commit_id":"aa08390f30b5f1c0ca77fad384a75c93561c5511","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddEntry() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Add Blog Entry']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_title\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_33_title\", RuntimeVariables.replace(\"Test Entr\"));\n\t\tselenium.type(\"_33_title\", RuntimeVariables.replace(\"Test Entry\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_editor\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"FCKeditor1___Frame\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"_33_editor\\\"]\");\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"FCKeditor1___Frame\\\"]\");\n\t\tselenium.selectFrame(\"//iframe\");\n\t\tselenium.typeKeys(\"//body\",\n\t\t\tRuntimeVariables.replace(\"This is a test entr\"));\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"This is a test entry!\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_saveButton\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"_33_saveButton\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Entry\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","id":13182,"modified_method":"public void testAddEntry() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Add Blog Entry']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Add Blog Entry']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_33_title\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_33_title\", RuntimeVariables.replace(\"Test Entry\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_editor\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"FCKeditor1___Frame\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"_33_editor\\\"]\");\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"FCKeditor1___Frame\\\"]\");\n\t\tselenium.selectFrame(\"//iframe\");\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"This is a test entry.\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.click(RuntimeVariables.replace(\"_33_saveButton\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Test Entry\"),\n\t\t\tselenium.getText(\"//form/div[2]/div[1]/div[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This is a test entry.\"),\n\t\t\tselenium.getText(\"//p\"));\n\t}","commit_id":"aa08390f30b5f1c0ca77fad384a75c93561c5511","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddEscapeCharacterEntry() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Add Blog Entry']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_title\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_33_title\",\n\t\t\tRuntimeVariables.replace(\"<!--Html Escape Character Test-->\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_editor\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"FCKeditor1___Frame\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"_33_editor\\\"]\");\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"FCKeditor1___Frame\\\"]\");\n\t\tselenium.selectFrame(\"//iframe\");\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"This is an escape character test entry.\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_saveButton\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"_33_saveButton\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"link=<!--Html Escape Character Test-->\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This is an escape character test entry.\"));\n\t}","id":13183,"modified_method":"public void testAddEscapeCharacterEntry() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Add Blog Entry']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Add Blog Entry']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_33_title\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_33_title\",\n\t\t\tRuntimeVariables.replace(\"<!--Html Escape Character Test-->\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_editor\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"FCKeditor1___Frame\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"_33_editor\\\"]\");\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"FCKeditor1___Frame\\\"]\");\n\t\tselenium.selectFrame(\"//iframe\");\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"This is an escape character test entry.\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.click(RuntimeVariables.replace(\"_33_saveButton\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"<!--Html Escape Character Test-->\"),\n\t\t\tselenium.getText(\"//div[2]/div[1]/div[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is an escape character test entry.\"),\n\t\t\tselenium.getText(\"//p\"));\n\t}","commit_id":"aa08390f30b5f1c0ca77fad384a75c93561c5511","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddNullEntry() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Add Blog Entry']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_title\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_33_title\",\n\t\t\tRuntimeVariables.replace(\"Test Null Entr\"));\n\t\tselenium.type(\"_33_title\", RuntimeVariables.replace(\"Test Null Entry\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_saveButton\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"_33_saveButton\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You have entered invalid data. Please try again.\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_cancelButton\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"_33_cancelButton\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\"link=Test Null Entry\"));\n\t}","id":13184,"modified_method":"public void testAddNullEntry() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Add Blog Entry']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Add Blog Entry']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.type(\"_33_title\", RuntimeVariables.replace(\"Test Null Entry\"));\n\t\tselenium.click(RuntimeVariables.replace(\"_33_saveButton\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You have entered invalid data. Please try again.\"));\n\t\tselenium.click(RuntimeVariables.replace(\"_33_cancelButton\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\"link=Test Null Entry\"));\n\t}","commit_id":"aa08390f30b5f1c0ca77fad384a75c93561c5511","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddNullTitle() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Add Blog Entry']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_33_title\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_editor\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"FCKeditor1___Frame\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe[@id='_33_editor']\");\n\t\tselenium.selectFrame(\"//iframe[@id='FCKeditor1___Frame']\");\n\t\tselenium.selectFrame(\"//iframe\");\n\t\tselenium.typeKeys(\"//body\",\n\t\t\tRuntimeVariables.replace(\"This is a test null entr\"));\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"This is a test null entry!\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_saveButton\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"_33_saveButton\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"Please enter a valid title.\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_cancelButton\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"_33_cancelButton\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\"link=Test Null Entry\"));\n\t}","id":13185,"modified_method":"public void testAddNullTitle() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Add Blog Entry']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Add Blog Entry']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_editor\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"FCKeditor1___Frame\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe[@id='_33_editor']\");\n\t\tselenium.selectFrame(\"//iframe[@id='FCKeditor1___Frame']\");\n\t\tselenium.selectFrame(\"//iframe\");\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"This is a test null entry.\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.click(RuntimeVariables.replace(\"_33_saveButton\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You have entered invalid data. Please try again.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Please enter a valid title.\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_cancelButton\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"_33_cancelButton\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"This is a test null entry.\"));\n\t}","commit_id":"aa08390f30b5f1c0ca77fad384a75c93561c5511","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddRating() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tString votes = selenium.getIncrementedText(\"//td[3]/div[1]\");\n\t\tRuntimeVariables.setValue(\"votes\", votes);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[5]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//img[5]\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isPartialText(\"//td[3]/div[1]\",\n\t\t\t\t\t\t\tRuntimeVariables.getValue(\"votes\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":13186,"modified_method":"public void testAddRating() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tString votes = selenium.getIncrementedText(\"//td[3]/div[1]\");\n\t\tRuntimeVariables.setValue(\"votes\", votes);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[5]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//img[5]\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isPartialText(\"//td[3]/div[1]\",\n\t\t\t\t\t\t\tRuntimeVariables.getValue(\"votes\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"aa08390f30b5f1c0ca77fad384a75c93561c5511","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddSecondEntryComment() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=0 Comments\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Add Comment\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Add Comment\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_postReplyBody0\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_33_postReplyBody0\",\n\t\t\tRuntimeVariables.replace(\"This is a second entr comment!\"));\n\t\tselenium.type(\"_33_postReplyBody0\",\n\t\t\tRuntimeVariables.replace(\"This is a second entry comment!\"));\n\t\tselenium.click(RuntimeVariables.replace(\"_33_postReplyButton0\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"This is a second entry comment!\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","id":13187,"modified_method":"public void testAddSecondEntryComment() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=0 Comments\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=0 Comments\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Add Comment\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Add Comment\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_33_postReplyBody0\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_33_postReplyBody0\",\n\t\t\tRuntimeVariables.replace(\"This is a second entry comment.\"));\n\t\tselenium.click(RuntimeVariables.replace(\"_33_postReplyButton0\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isVisible(\"_33_postReplyBody0\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This is a second entry comment.\"),\n\t\t\tselenium.getText(\"//td[2]/div[1]\"));\n\t}","commit_id":"aa08390f30b5f1c0ca77fad384a75c93561c5511","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddSecondEntry() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Add Blog Entry']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_title\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_33_title\",\n\t\t\tRuntimeVariables.replace(\"Second Test Entr\"));\n\t\tselenium.type(\"_33_title\", RuntimeVariables.replace(\"Second Test Entry\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_editor\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"FCKeditor1___Frame\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"_33_editor\\\"]\");\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"FCKeditor1___Frame\\\"]\");\n\t\tselenium.selectFrame(\"//iframe\");\n\t\tselenium.typeKeys(\"//body\",\n\t\t\tRuntimeVariables.replace(\"This is a second test entr\"));\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"This is a second test entry!\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_saveButton\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"_33_saveButton\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Second Test Entry\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","id":13188,"modified_method":"public void testAddSecondEntry() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Add Blog Entry']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Add Blog Entry']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_33_title\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_33_title\", RuntimeVariables.replace(\"Second Test Entry\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_editor\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"FCKeditor1___Frame\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"_33_editor\\\"]\");\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"FCKeditor1___Frame\\\"]\");\n\t\tselenium.selectFrame(\"//iframe\");\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"This is a second test entry.\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.click(RuntimeVariables.replace(\"_33_saveButton\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Second Test Entry\"),\n\t\t\tselenium.getText(\"//div[2]/div[1]/div[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This is a second test entry.\"),\n\t\t\tselenium.getText(\"//p\"));\n\t}","commit_id":"aa08390f30b5f1c0ca77fad384a75c93561c5511","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertImportLAR() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Entry\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Entry\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"This is a test entry comment!\"));\n\t}","id":13189,"modified_method":"public void testAssertImportLAR() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//form/div[2]/div[1]/div[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Test Entry\"),\n\t\t\tselenium.getText(\"//form/div[2]/div[1]/div[1]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Entry\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//form/div/div[1]/div[1]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Test Entry\"),\n\t\t\tselenium.getText(\"//form/div/div[1]/div[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This is a test entry comment!\"),\n\t\t\tselenium.getText(\"//td[2]/div[1]\"));\n\t}","commit_id":"aa08390f30b5f1c0ca77fad384a75c93561c5511","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertViewCount() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tString Count = selenium.getIncrementedText(\"//div[2]/span[1]\");\n\t\tRuntimeVariables.setValue(\"Count\", Count);\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Entry\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\"//div[2]/span[1]\",\n\t\t\t\tRuntimeVariables.getValue(\"Count\")));\n\t}","id":13190,"modified_method":"public void testAssertViewCount() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[2]/span[1]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tString Count = selenium.getIncrementedText(\"//div[2]/span[1]\");\n\t\tRuntimeVariables.setValue(\"Count\", Count);\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Entry\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[5]/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[2]/span[1]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isPartialText(\"//div[2]/span[1]\",\n\t\t\t\tRuntimeVariables.getValue(\"Count\")));\n\t}","commit_id":"aa08390f30b5f1c0ca77fad384a75c93561c5511","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTestSuite(ControlPanelTest.class);\n\t\ttestSuite.addTestSuite(AddEntryTest.class);\n\t\ttestSuite.addTestSuite(AddEntryCommentTest.class);\n\t\ttestSuite.addTestSuite(AssertViewCountTest.class);\n\t\ttestSuite.addTestSuite(AddRatingTest.class);\n\t\ttestSuite.addTestSuite(AddSecondEntryTest.class);\n\t\ttestSuite.addTestSuite(AddSecondEntryCommentTest.class);\n\t\ttestSuite.addTestSuite(EditSecondCommentTest.class);\n\t\ttestSuite.addTestSuite(EditSecondEntryTest.class);\n\t\ttestSuite.addTestSuite(SearchBlogsTest.class);\n\t\ttestSuite.addTestSuite(DeleteSecondCommentTest.class);\n\t\ttestSuite.addTestSuite(DeleteSecondEntryTest.class);\n\t\ttestSuite.addTestSuite(AddNullEntryTest.class);\n\t\ttestSuite.addTestSuite(AddNullTitleTest.class);\n\t\ttestSuite.addTestSuite(AddEscapeCharacterEntryTest.class);\n\t\ttestSuite.addTestSuite(DeleteEscapeCharacterEntryTest.class);\n\t\ttestSuite.addTestSuite(AddDraftEntryTest.class);\n\t\ttestSuite.addTestSuite(PublishDraftEntryTest.class);\n\t\ttestSuite.addTestSuite(ConfigureDisplaySettingsTest.class);\n\t\ttestSuite.addTestSuite(DeleteEntryTest.class);\n\t\ttestSuite.addTestSuite(ImportLARTest.class);\n\t\ttestSuite.addTestSuite(AssertImportLARTest.class);\n\t\ttestSuite.addTestSuite(TearDownTest.class);\n\t\ttestSuite.addTestSuite(EndControlPanelTest.class);\n\n\t\treturn testSuite;\n\t}","id":13191,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTestSuite(ControlPanelTest.class);\n\t\ttestSuite.addTestSuite(AddEntryTest.class);\n\t\ttestSuite.addTestSuite(AddEntryCommentTest.class);\n\t\ttestSuite.addTestSuite(AssertViewCountTest.class);\n\t\ttestSuite.addTestSuite(AddRatingTest.class);\n\t\ttestSuite.addTestSuite(AddSecondEntryTest.class);\n\t\ttestSuite.addTestSuite(AddSecondEntryCommentTest.class);\n\t\ttestSuite.addTestSuite(EditSecondEntryTest.class);\n\t\ttestSuite.addTestSuite(EditSecondCommentTest.class);\n\t\ttestSuite.addTestSuite(SearchBlogsTest.class);\n\t\ttestSuite.addTestSuite(DeleteSecondCommentTest.class);\n\t\ttestSuite.addTestSuite(DeleteSecondEntryTest.class);\n\t\ttestSuite.addTestSuite(AddNullEntryTest.class);\n\t\ttestSuite.addTestSuite(AddNullTitleTest.class);\n\t\ttestSuite.addTestSuite(AddEscapeCharacterEntryTest.class);\n\t\ttestSuite.addTestSuite(DeleteEscapeCharacterEntryTest.class);\n\t\ttestSuite.addTestSuite(ConfigureDisplaySettingsTest.class);\n\t\ttestSuite.addTestSuite(DeleteEntryTest.class);\n\t\ttestSuite.addTestSuite(AddDraftEntryTest.class);\n\t\ttestSuite.addTestSuite(PublishDraftEntryTest.class);\n\t\ttestSuite.addTestSuite(ImportLARTest.class);\n\t\ttestSuite.addTestSuite(AssertImportLARTest.class);\n\t\ttestSuite.addTestSuite(TearDownTest.class);\n\t\ttestSuite.addTestSuite(EndControlPanelTest.class);\n\n\t\treturn testSuite;\n\t}","commit_id":"aa08390f30b5f1c0ca77fad384a75c93561c5511","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigureDisplaySettings() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//img[@alt='Configuration']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_86_pageDelta\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.select(\"_86_pageDelta\", RuntimeVariables.replace(\"label=5\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_86_pageDisplayStyle\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.select(\"_86_pageDisplayStyle\",\n\t\t\tRuntimeVariables.replace(\"label=Title\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Save']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You have successfully updated the setup.\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"This is a test entry!\"));\n\t}","id":13192,"modified_method":"public void testConfigureDisplaySettings() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//img[@alt='Configuration']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_86_pageDelta\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.select(\"_86_pageDelta\", RuntimeVariables.replace(\"label=5\"));\n\t\tselenium.select(\"_86_pageDisplayStyle\",\n\t\t\tRuntimeVariables.replace(\"label=Title\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You have successfully updated the setup.\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"This is a test entry.\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//img[@alt='Configuration']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_86_pageDelta\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.select(\"_86_pageDelta\", RuntimeVariables.replace(\"label=5\"));\n\t\tselenium.select(\"_86_pageDisplayStyle\",\n\t\t\tRuntimeVariables.replace(\"label=Full Content\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You have successfully updated the setup.\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"This is a test entry.\"),\n\t\t\tselenium.getText(\"//p\"));\n\t}","commit_id":"aa08390f30b5f1c0ca77fad384a75c93561c5511","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testControlPanel() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id='_145_myPlacesContainer']/ul/li[2]/a/span[1]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@id='_145_myPlacesContainer']/ul/li[2]/a/span[1]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":13193,"modified_method":"public void testControlPanel() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tboolean NotInControlPanel = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[4]/ul/li[2]/a/span[1]\");\n\n\t\t\t\tif (!NotInControlPanel) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@id='_145_myPlacesContainer']/ul/li[2]/a/span[1]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 2:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"aa08390f30b5f1c0ca77fad384a75c93561c5511","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteEntry() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Blogs\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean EntryPresent = selenium.isElementPresent(\"link=Delete\");\n\n\t\t\t\tif (!EntryPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tassertFalse(selenium.isElementPresent(\"link=Test Entry\"));\n\n\t\t\tcase 2:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":13194,"modified_method":"public void testDeleteEntry() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Delete\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Test Entry\"));\n\t\tassertFalse(selenium.isTextPresent(\"This is a test entry.\"));\n\t}","commit_id":"aa08390f30b5f1c0ca77fad384a75c93561c5511","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteEscapeCharacterEntry() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Blogs\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean EscapeCharacterEntryPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"link=<!--Html Escape Character Test-->\");\n\n\t\t\t\tif (!EscapeCharacterEntryPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\tcase 2:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":13195,"modified_method":"public void testDeleteEscapeCharacterEntry() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Delete\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\"link=<!--Html Escape Character Test-->\"));\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"This is an escape character test entry.\"));\n\t}","commit_id":"aa08390f30b5f1c0ca77fad384a75c93561c5511","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteSecondComment() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Second Test Entry\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//td[5]/span/a[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//td[5]/span/a[2]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"This is an edited second entry comment!\"));\n\t}","id":13196,"modified_method":"public void testDeleteSecondComment() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Second Test Entry\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Second Test Entry\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//td[5]/span/a[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//td[5]/span/a[2]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\"link=This is an edited second entry comment.\"));\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"This is an edited second entry comment.\"));\n\t}","commit_id":"aa08390f30b5f1c0ca77fad384a75c93561c5511","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteSecondEntry() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Second Test Entry\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Second Test Entry\"));\n\t}","id":13197,"modified_method":"public void testDeleteSecondEntry() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Second Test Entry\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Second Test Entry\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Delete\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Second Test Entry\"));\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"This is an edited second test entry.\"));\n\t}","commit_id":"aa08390f30b5f1c0ca77fad384a75c93561c5511","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditSecondComment() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Second Test Entry\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//td[4]/span/a[2]\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_editReplyBody1\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_33_editReplyBody1\",\n\t\t\tRuntimeVariables.replace(\"This is an edited second entr comment\"));\n\t\tselenium.type(\"_33_editReplyBody1\",\n\t\t\tRuntimeVariables.replace(\"This is an edited second entry comment!\"));\n\t\tselenium.click(RuntimeVariables.replace(\"_33_editReplyButton1\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This is an edited second entry comment!\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","id":13198,"modified_method":"public void testEditSecondComment() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Second Test Entry\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Second Test Entry\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//td[4]/span/a[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//td[4]/span/a[2]\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_33_editReplyBody1\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_33_editReplyBody1\",\n\t\t\tRuntimeVariables.replace(\"This is an edited second entry comment.\"));\n\t\tselenium.click(RuntimeVariables.replace(\"_33_editReplyButton1\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isVisible(\"_33_editReplyBody1\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is an edited second entry comment.\"),\n\t\t\tselenium.getText(\"//td[2]/div[1]\"));\n\t}","commit_id":"aa08390f30b5f1c0ca77fad384a75c93561c5511","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditSecondEntry() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Second Test Entry\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_title\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_33_title\",\n\t\t\tRuntimeVariables.replace(\"Second Test Entr\"));\n\t\tselenium.type(\"_33_title\", RuntimeVariables.replace(\"Second Test Entry\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_editor\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"FCKeditor1___Frame\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"_33_editor\\\"]\");\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"FCKeditor1___Frame\\\"]\");\n\t\tselenium.selectFrame(\"//iframe\");\n\t\tselenium.typeKeys(\"//body\",\n\t\t\tRuntimeVariables.replace(\"This is an edited second test entr\"));\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"This is an edited second test entry!\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_saveButton\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"_33_saveButton\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This is an edited second test entry!\"));\n\t}","id":13199,"modified_method":"public void testEditSecondEntry() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Second Test Entry\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Second Test Entry\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Edit\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_33_title\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_33_title\", RuntimeVariables.replace(\"Second Test Entry\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_editor\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"FCKeditor1___Frame\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"_33_editor\\\"]\");\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"FCKeditor1___Frame\\\"]\");\n\t\tselenium.selectFrame(\"//iframe\");\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"This is an edited second test entry.\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.click(RuntimeVariables.replace(\"_33_saveButton\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Your request processed successfully.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is an edited second test entry.\"), selenium.getText(\"//p\"));\n\t}","commit_id":"aa08390f30b5f1c0ca77fad384a75c93561c5511","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEndControlPanel() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Back to My Community\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Back to My Community\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":13200,"modified_method":"public void testEndControlPanel() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tboolean InControlPanel = selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Back to My Community\");\n\n\t\t\t\tif (!InControlPanel) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Back to My Community\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 2:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@id='_145_myPlacesContainer']/ul/li[2]/a/span[1]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"aa08390f30b5f1c0ca77fad384a75c93561c5511","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testImportLAR() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Export / Import\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Export / Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_86_importFileName\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"_86_DELETE_PORTLET_DATA\");\n\t\tselenium.type(\"_86_importFileName\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portal\\\\controlpanel\\\\blogs\\\\Blogs-Selenium.portlet.lar\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Import']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Import']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","id":13201,"modified_method":"public void testImportLAR() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//strong/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Export / Import\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Export / Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Import\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_86_importFileName\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"_86_DELETE_PORTLET_DATA\");\n\t\tselenium.type(\"_86_importFileName\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\blogs\\\\Blogs-Selenium.portlet.lar\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Import']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Import']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Your request processed successfully.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","commit_id":"aa08390f30b5f1c0ca77fad384a75c93561c5511","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testPublishDraftEntry() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Draft Test\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_saveButton\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"_33_saveButton\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Draft Test\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Draft Test\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Delete\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Draft Test\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","id":13202,"modified_method":"public void testPublishDraftEntry() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Draft Test\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Draft Test\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Edit\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.click(RuntimeVariables.replace(\"_33_saveButton\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//form/div[2]/div[1]/div[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Draft Test\"),\n\t\t\tselenium.getText(\"//form/div[2]/div[1]/div[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a test for the emergency draft system.\"),\n\t\t\tselenium.getText(\"//p\"));\n\t}","commit_id":"aa08390f30b5f1c0ca77fad384a75c93561c5511","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSearchBlogs() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_keywords\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_33_keywords\", RuntimeVariables.replace(\"Test Entr\"));\n\t\tselenium.type(\"_33_keywords\", RuntimeVariables.replace(\"Test Entry\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Search']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Entry\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Add Blog Entry']\"));\n\t}","id":13203,"modified_method":"public void testSearchBlogs() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_33_keywords\", RuntimeVariables.replace(\"Test Entry\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Search']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Test Entry\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t}","commit_id":"aa08390f30b5f1c0ca77fad384a75c93561c5511","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDown() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Blogs\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean EntryPresent = selenium.isElementPresent(\"link=Delete\");\n\n\t\t\t\tif (!EntryPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//img[@alt='Configuration']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//img[@alt='Configuration']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"_86_pageDelta\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.select(\"_86_pageDelta\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=10\"));\n\t\t\t\tselenium.select(\"_86_pageDisplayStyle\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=Full Content\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Save']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Save']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Blogs\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":13204,"modified_method":"public void testTearDown() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Blogs\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean EntryPresent = selenium.isElementPresent(\"link=Delete\");\n\n\t\t\t\tif (!EntryPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//img[@alt='Configuration']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//img[@alt='Configuration']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"_86_pageDelta\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.select(\"_86_pageDelta\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=10\"));\n\t\t\t\tselenium.select(\"_86_pageDisplayStyle\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=Full Content\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Save']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Save']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"aa08390f30b5f1c0ca77fad384a75c93561c5511","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n    protected Map referenceData(HttpServletRequest req) throws Exception {\n        Map<String, List<AvailabilityReportLocator>> data = new HashMap<String, List<AvailabilityReportLocator>>();\n        List<AvailabilityReportLocator> reportLocator = m_reporListService.getAllReports(); \n        data.put(\"reportLocator\", reportLocator);\n        return data;\n\n    }","id":13205,"modified_method":"@Override\n    protected Map<String, Object> referenceData(HttpServletRequest req) throws Exception {\n        Map<String, Object> data = new HashMap<String, Object>();\n        PagedListHolder pagedListHolder = new PagedListHolder(m_reporListService.getAllReports());\n        pagedListHolder.setPageSize(m_pageSize);\n        int page = ServletRequestUtils.getIntParameter(req, \"p\", 0);\n        pagedListHolder.setPage(page); \n        data.put(\"pagedListHolder\", pagedListHolder);\n        return data;\n\n    }","commit_id":"3e1b519fe24a83dcc262ee2dde2d741d79925166","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    protected ModelAndView handleRequestInternal(HttpServletRequest request,\n            HttpServletResponse response) throws Exception {\n        ModelAndView modelAndView = new ModelAndView(\"availability/list\");\n        List results = m_reportListService.getAllReports(); \n        PagedListHolder pagedListHolder = new PagedListHolder(results);\n        pagedListHolder.setPageSize(m_pageSize);\n        int page = ServletRequestUtils.getIntParameter(request, \"p\", 0);\n        pagedListHolder.setPage(page); \n        modelAndView.addObject(\"pagedListHolder\", pagedListHolder);  \n\n        return modelAndView;\n        \n    }","id":13206,"modified_method":"@Override\n    protected ModelAndView handleRequestInternal(HttpServletRequest request,\n            HttpServletResponse response) throws Exception {\n        ModelAndView modelAndView = new ModelAndView(\"availability/list\"); \n        PagedListHolder pagedListHolder = new PagedListHolder(m_reportListService.getAllReports());\n        pagedListHolder.setPageSize(m_pageSize);\n        int page = ServletRequestUtils.getIntParameter(request, \"p\", 0);\n        pagedListHolder.setPage(page); \n        modelAndView.addObject(\"pagedListHolder\", pagedListHolder);  \n\n        return modelAndView;\n        \n    }","commit_id":"3e1b519fe24a83dcc262ee2dde2d741d79925166","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    protected Map referenceData(HttpServletRequest req) throws Exception {\n        Map<String, List<AvailabilityReportLocator>> data = new HashMap<String, List<AvailabilityReportLocator>>();\n        List<AvailabilityReportLocator> reportLocator = m_reporListService.getAllReports(); \n        data.put(\"reportLocator\", reportLocator);\n        return data;\n\n    }","id":13207,"modified_method":"@Override\n    protected Map<String, Object> referenceData(HttpServletRequest req) throws Exception {\n        Map<String, Object> data = new HashMap<String, Object>();\n        PagedListHolder pagedListHolder = new PagedListHolder(m_reporListService.getAllReports());\n        pagedListHolder.setPageSize(m_pageSize);\n        int page = ServletRequestUtils.getIntParameter(req, \"p\", 0);\n        pagedListHolder.setPage(page); \n        data.put(\"pagedListHolder\", pagedListHolder);\n        return data;\n\n    }","commit_id":"58d3c925adb801b2c2e6267ebe34b78bf59483cb","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    protected ModelAndView handleRequestInternal(HttpServletRequest request,\n            HttpServletResponse response) throws Exception {\n        ModelAndView modelAndView = new ModelAndView(\"availability/list\");\n        List results = m_reportListService.getAllReports(); \n        PagedListHolder pagedListHolder = new PagedListHolder(results);\n        pagedListHolder.setPageSize(m_pageSize);\n        int page = ServletRequestUtils.getIntParameter(request, \"p\", 0);\n        pagedListHolder.setPage(page); \n        modelAndView.addObject(\"pagedListHolder\", pagedListHolder);  \n\n        return modelAndView;\n        \n    }","id":13208,"modified_method":"@Override\n    protected ModelAndView handleRequestInternal(HttpServletRequest request,\n            HttpServletResponse response) throws Exception {\n        ModelAndView modelAndView = new ModelAndView(\"availability/list\"); \n        PagedListHolder pagedListHolder = new PagedListHolder(m_reportListService.getAllReports());\n        pagedListHolder.setPageSize(m_pageSize);\n        int page = ServletRequestUtils.getIntParameter(request, \"p\", 0);\n        pagedListHolder.setPage(page); \n        modelAndView.addObject(\"pagedListHolder\", pagedListHolder);  \n\n        return modelAndView;\n        \n    }","commit_id":"58d3c925adb801b2c2e6267ebe34b78bf59483cb","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    protected Map referenceData(HttpServletRequest req) throws Exception {\n        Map<String, List<AvailabilityReportLocator>> data = new HashMap<String, List<AvailabilityReportLocator>>();\n        List<AvailabilityReportLocator> reportLocator = m_reporListService.getAllReports(); \n        data.put(\"reportLocator\", reportLocator);\n        return data;\n\n    }","id":13209,"modified_method":"@Override\n    protected Map<String, Object> referenceData(HttpServletRequest req) throws Exception {\n        Map<String, Object> data = new HashMap<String, Object>();\n        PagedListHolder pagedListHolder = new PagedListHolder(m_reporListService.getAllReports());\n        pagedListHolder.setPageSize(m_pageSize);\n        int page = ServletRequestUtils.getIntParameter(req, \"p\", 0);\n        pagedListHolder.setPage(page); \n        data.put(\"pagedListHolder\", pagedListHolder);\n        return data;\n\n    }","commit_id":"7906ada377e74426a02e452fc70b1c38cc351757","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    protected ModelAndView handleRequestInternal(HttpServletRequest request,\n            HttpServletResponse response) throws Exception {\n        ModelAndView modelAndView = new ModelAndView(\"availability/list\");\n        List results = m_reportListService.getAllReports(); \n        PagedListHolder pagedListHolder = new PagedListHolder(results);\n        pagedListHolder.setPageSize(m_pageSize);\n        int page = ServletRequestUtils.getIntParameter(request, \"p\", 0);\n        pagedListHolder.setPage(page); \n        modelAndView.addObject(\"pagedListHolder\", pagedListHolder);  \n\n        return modelAndView;\n        \n    }","id":13210,"modified_method":"@Override\n    protected ModelAndView handleRequestInternal(HttpServletRequest request,\n            HttpServletResponse response) throws Exception {\n        ModelAndView modelAndView = new ModelAndView(\"availability/list\"); \n        PagedListHolder pagedListHolder = new PagedListHolder(m_reportListService.getAllReports());\n        pagedListHolder.setPageSize(m_pageSize);\n        int page = ServletRequestUtils.getIntParameter(request, \"p\", 0);\n        pagedListHolder.setPage(page); \n        modelAndView.addObject(\"pagedListHolder\", pagedListHolder);  \n\n        return modelAndView;\n        \n    }","commit_id":"7906ada377e74426a02e452fc70b1c38cc351757","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Initializes the <tt>NewStatusMessageDialog<\/tt> by adding the buttons,\n     * fields, etc.\n     */\n    private void init()\n    {\n        this.setTitle(SystrayActivator.getResources()\n                .getI18NString(\"service.gui.NEW_STATUS_MESSAGE\"));\n\n        this.getRootPane().setDefaultButton(okButton);\n\n        this.setPreferredSize(new Dimension(500, 200));\n\n        this.infoArea.setEditable(false);\n        this.infoArea.setLineWrap(true);\n        this.infoArea.setWrapStyleWord(true);\n        this.infoArea.setOpaque(false);\n\n        this.dataPanel.add(messageLabel, BorderLayout.WEST);\n\n        this.dataPanel.add(messageTextField, BorderLayout.CENTER);\n\n        this.infoTitleLabel.setHorizontalAlignment(JLabel.CENTER);\n        this.infoTitleLabel.setFont(\n            infoTitleLabel.getFont().deriveFont(Font.BOLD, 18.0f));\n\n        this.labelsPanel.add(infoTitleLabel);\n        this.labelsPanel.add(infoArea);\n        this.labelsPanel.add(dataPanel);\n\n        JPanel messagePanel = new TransparentPanel(new GridBagLayout());\n        GridBagConstraints messagePanelConstraints = new GridBagConstraints();\n        messagePanelConstraints.anchor = GridBagConstraints.NORTHWEST;\n        messagePanelConstraints.fill = GridBagConstraints.NONE;\n        messagePanelConstraints.gridx = 0;\n        messagePanelConstraints.gridy = 0;\n        messagePanelConstraints.insets = new Insets(5, 0, 5, 10);\n        messagePanelConstraints.weightx = 0;\n        messagePanelConstraints.weighty = 0;\n        messagePanel\n            .add(new ImageCanvas(Resources\n                .getImage(\"service.gui.icons.RENAME_DIALOG_ICON\").getImage()),\n                messagePanelConstraints);\n        messagePanelConstraints.anchor = GridBagConstraints.NORTH;\n        messagePanelConstraints.fill = GridBagConstraints.HORIZONTAL;\n        messagePanelConstraints.gridx = 1;\n        messagePanelConstraints.insets = new Insets(0, 0, 0, 0);\n        messagePanelConstraints.weightx = 1;\n        messagePanel.add(labelsPanel, messagePanelConstraints);\n\n        this.okButton.setName(\"ok\");\n        this.cancelButton.setName(\"cancel\");\n\n        this.okButton.setMnemonic(\n            SystrayActivator.getResources().getI18nMnemonic(\"service.gui.OK\"));\n        this.cancelButton.setMnemonic(\n            SystrayActivator.getResources().getI18nMnemonic(\"service.gui.CANCEL\"));\n\n        this.okButton.addActionListener(this);\n        this.cancelButton.addActionListener(this);\n\n        this.buttonsPanel.add(okButton);\n        this.buttonsPanel.add(cancelButton);\n\n        JPanel mainPanel = new TransparentPanel(new GridBagLayout());\n        mainPanel.setBorder(BorderFactory.createEmptyBorder(5, 10, 0, 10));\n\n        GridBagConstraints mainPanelConstraints = new GridBagConstraints();\n        mainPanelConstraints.anchor = GridBagConstraints.NORTH;\n        mainPanelConstraints.fill = GridBagConstraints.BOTH;\n        mainPanelConstraints.gridx = 0;\n        mainPanelConstraints.gridy = 0;\n        mainPanelConstraints.weightx = 1;\n        mainPanelConstraints.weighty = 1;\n        mainPanel.add(messagePanel, mainPanelConstraints);\n        mainPanelConstraints.anchor = GridBagConstraints.SOUTHEAST;\n        mainPanelConstraints.fill = GridBagConstraints.NONE;\n        mainPanelConstraints.gridy = 1;\n        mainPanelConstraints.weightx = 0;\n        mainPanelConstraints.weighty = 0;\n        mainPanel.add(buttonsPanel, mainPanelConstraints);\n\n        this.getContentPane().add(mainPanel);\n    }","id":13211,"modified_method":"/**\n     * Initializes the <tt>NewStatusMessageDialog<\/tt> by adding the buttons,\n     * fields, etc.\n     */\n    private void init()\n    {\n        this.setTitle(SystrayActivator.getResources()\n                .getI18NString(\"service.gui.NEW_STATUS_MESSAGE\"));\n\n        JButton okButton =\n            new JButton(SystrayActivator.getResources().getI18NString(\"service.gui.OK\"));\n        this.getRootPane().setDefaultButton(okButton);\n\n        this.setPreferredSize(new Dimension(500, 200));\n\n        JTextArea infoArea = new JTextArea(\n                SystrayActivator.getResources().getI18NString(\n                    \"service.gui.STATUS_MESSAGE_INFO\"));\n        infoArea.setEditable(false);\n        infoArea.setLineWrap(true);\n        infoArea.setWrapStyleWord(true);\n        infoArea.setOpaque(false);\n\n        JLabel messageLabel = new JLabel(\n                SystrayActivator.getResources().getI18NString(\n                    \"service.gui.NEW_STATUS_MESSAGE\"));\n\n        JPanel dataPanel = new TransparentPanel(new BorderLayout(5, 5));\n        dataPanel.add(messageLabel, BorderLayout.WEST);\n        dataPanel.add(messageTextField, BorderLayout.CENTER);\n\n        JLabel infoTitleLabel = new JLabel(\n                SystrayActivator.getResources().getI18NString(\n                    \"service.gui.NEW_STATUS_MESSAGE\"));\n        infoTitleLabel.setHorizontalAlignment(JLabel.CENTER);\n        infoTitleLabel.setFont(\n            infoTitleLabel.getFont().deriveFont(Font.BOLD, 18.0f));\n\n        JPanel labelsPanel = new TransparentPanel(new GridLayout(0, 1));\n        labelsPanel.add(infoTitleLabel);\n        labelsPanel.add(infoArea);\n        labelsPanel.add(dataPanel);\n\n        JPanel messagePanel = new TransparentPanel(new GridBagLayout());\n        GridBagConstraints messagePanelConstraints = new GridBagConstraints();\n        messagePanelConstraints.anchor = GridBagConstraints.NORTHWEST;\n        messagePanelConstraints.fill = GridBagConstraints.NONE;\n        messagePanelConstraints.gridx = 0;\n        messagePanelConstraints.gridy = 0;\n        messagePanelConstraints.insets = new Insets(5, 0, 5, 10);\n        messagePanelConstraints.weightx = 0;\n        messagePanelConstraints.weighty = 0;\n        messagePanel\n            .add(new ImageCanvas(Resources\n                .getImage(\"service.gui.icons.RENAME_DIALOG_ICON\").getImage()),\n                messagePanelConstraints);\n        messagePanelConstraints.anchor = GridBagConstraints.NORTH;\n        messagePanelConstraints.fill = GridBagConstraints.HORIZONTAL;\n        messagePanelConstraints.gridx = 1;\n        messagePanelConstraints.insets = new Insets(0, 0, 0, 0);\n        messagePanelConstraints.weightx = 1;\n        messagePanel.add(labelsPanel, messagePanelConstraints);\n\n        okButton.setName(\"ok\");\n        this.cancelButton.setName(\"cancel\");\n\n        okButton.setMnemonic(\n            SystrayActivator.getResources().getI18nMnemonic(\"service.gui.OK\"));\n        this.cancelButton.setMnemonic(\n            SystrayActivator.getResources().getI18nMnemonic(\"service.gui.CANCEL\"));\n\n        okButton.addActionListener(this);\n        this.cancelButton.addActionListener(this);\n\n        JPanel buttonsPanel =\n            new TransparentPanel(new FlowLayout(FlowLayout.RIGHT));\n        buttonsPanel.add(okButton);\n        buttonsPanel.add(cancelButton);\n\n        JPanel mainPanel = new TransparentPanel(new GridBagLayout());\n        mainPanel.setBorder(BorderFactory.createEmptyBorder(5, 10, 0, 10));\n\n        GridBagConstraints mainPanelConstraints = new GridBagConstraints();\n        mainPanelConstraints.anchor = GridBagConstraints.NORTH;\n        mainPanelConstraints.fill = GridBagConstraints.BOTH;\n        mainPanelConstraints.gridx = 0;\n        mainPanelConstraints.gridy = 0;\n        mainPanelConstraints.weightx = 1;\n        mainPanelConstraints.weighty = 1;\n        mainPanel.add(messagePanel, mainPanelConstraints);\n        mainPanelConstraints.anchor = GridBagConstraints.SOUTHEAST;\n        mainPanelConstraints.fill = GridBagConstraints.NONE;\n        mainPanelConstraints.gridy = 1;\n        mainPanelConstraints.weightx = 0;\n        mainPanelConstraints.weighty = 0;\n        mainPanel.add(buttonsPanel, mainPanelConstraints);\n\n        this.getContentPane().add(mainPanel);\n    }","commit_id":"27e83ca6968b528315394e55a92a29fcde76c5d3","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Returns the <tt>ResourceManagementService<\/tt>, through which we will\n     * access all resources.\n     *\n     * @return the <tt>ResourceManagementService<\/tt>, through which we will\n     * access all resources.\n     */\n    public static ResourceManagementService getResources()\n    {\n        if (resourcesService == null)\n        {\n            ServiceReference serviceReference = bundleContext\n                .getServiceReference(ResourceManagementService.class.getName());\n\n            if(serviceReference == null)\n                return null;\n\n            resourcesService = (ResourceManagementService) bundleContext\n                .getService(serviceReference);\n        }\n\n        return resourcesService;\n    }","id":13212,"modified_method":"/**\n     * Returns the <tt>ResourceManagementService<\/tt>, through which we will\n     * access all resources.\n     *\n     * @return the <tt>ResourceManagementService<\/tt>, through which we will\n     * access all resources.\n     */\n    public static ResourceManagementService getResources()\n    {\n        if (resourcesService == null)\n            resourcesService =\n                ResourceManagementServiceUtils.getService(bundleContext);\n        return resourcesService;\n    }","commit_id":"27e83ca6968b528315394e55a92a29fcde76c5d3","url":"https://github.com/jitsi/jitsi"},{"original_method":"public AboutWindowPluginComponent(Container c)\r\n    {\r\n        this.container = c;\r\n\r\n        aboutMenuItem.setMnemonic(\r\n            BrandingActivator.getResources().getI18nMnemonic(\r\n                \"plugin.branding.ABOUT_MENU_ENTRY\"));\r\n\r\n        aboutMenuItem.addActionListener(new ActionListener()\r\n        {\r\n            public void actionPerformed(ActionEvent e)\r\n            {\r\n                AboutWindowPluginComponent.actionPerformed();\r\n            }\r\n        });\r\n    }","id":13213,"modified_method":"public AboutWindowPluginComponent(Container c)\r\n    {\r\n        this.container = c;\r\n\r\n        aboutMenuItem = new JMenuItem(getName());\r\n        aboutMenuItem\r\n            .setMnemonic(\r\n                BrandingActivator\r\n                    .getResources()\r\n                        .getI18nMnemonic(\"plugin.branding.ABOUT_MENU_ENTRY\"));\r\n\r\n        aboutMenuItem.addActionListener(new ActionListener()\r\n        {\r\n            public void actionPerformed(ActionEvent e)\r\n            {\r\n                AboutWindowPluginComponent.actionPerformed();\r\n            }\r\n        });\r\n    }","commit_id":"6e67b4a3ced3b111a07cac4458bd6ae02e9cc26e","url":"https://github.com/jitsi/jitsi"},{"original_method":"private boolean bundleChanged(BundleEvent evt, WelcomeWindow welcomeWindow)\n    {\n        if ((welcomeWindow != null)\n                && welcomeWindow.isShowing()\n                && (evt.getType() == BundleEvent.STARTED))\n        {\n\n            /*\n             * The IBM JRE on GNU/Linux reports the Bundle-Name as null while\n             * the SUN JRE reports it as non-null. Just prevent the throwing of\n             * a NullPointerException because displaying the Bundle-Name isn't\n             * vital anyway.\n             */\n            Object bundleName = evt.getBundle().getHeaders().get(\"Bundle-Name\");\n\n            welcomeWindow.setBundle(\n                (bundleName == null) ? null : bundleName.toString());\n        }\n\n        ServiceReference uiServiceRef =\n            bundleContext.getServiceReference(UIService.class.getName());\n        if ((uiServiceRef != null)\n            && (Bundle.ACTIVE == uiServiceRef.getBundle().getState()))\n        {\n            // UI-Service started.\n\n            // register the about dialog menu entry\n            registerMenuEntry(uiServiceRef);\n\n            welcomeWindow.close();\n\n            /*\n             * We've just closed the WelcomeWindow so there'll be no other\n             * updates to it and we should stop listening to events which\n             * trigger them.\n             */\n            return false;\n        }\n\n        return true;\n    }","id":13214,"modified_method":"private boolean bundleChanged(BundleEvent evt, WelcomeWindow welcomeWindow)\n    {\n        if ((welcomeWindow != null)\n                && welcomeWindow.isShowing()\n                && (evt.getType() == BundleEvent.STARTED))\n        {\n\n            /*\n             * The IBM JRE on GNU/Linux reports the Bundle-Name as null while\n             * the SUN JRE reports it as non-null. Just prevent the throwing of\n             * a NullPointerException because displaying the Bundle-Name isn't\n             * vital anyway.\n             */\n            Object bundleName = evt.getBundle().getHeaders().get(\"Bundle-Name\");\n\n            welcomeWindow.setBundle(\n                (bundleName == null) ? null : bundleName.toString());\n        }\n\n        ServiceReference uiServiceRef =\n            bundleContext.getServiceReference(UIService.class.getName());\n        if ((uiServiceRef != null)\n                && (Bundle.ACTIVE == uiServiceRef.getBundle().getState()))\n        {\n            // UI-Service started.\n\n            // register the about dialog menu entry\n            registerMenuEntry(uiServiceRef);\n\n            if (welcomeWindow != null)\n                welcomeWindow.close();\n\n            /*\n             * We've just closed the WelcomeWindow so there'll be no other\n             * updates to it and we should stop listening to events which\n             * trigger them.\n             */\n            return false;\n        }\n\n        return true;\n    }","commit_id":"6e67b4a3ced3b111a07cac4458bd6ae02e9cc26e","url":"https://github.com/jitsi/jitsi"},{"original_method":"public static ResourceManagementService getResources()\n    {\n        if (resourcesService == null)\n        {\n            ServiceReference serviceReference = bundleContext\n                .getServiceReference(ResourceManagementService.class.getName());\n\n            if(serviceReference == null)\n                return null;\n            \n            resourcesService = (ResourceManagementService) bundleContext\n                .getService(serviceReference);\n        }\n\n        return resourcesService;\n    }","id":13215,"modified_method":"public static ResourceManagementService getResources()\n    {\n        if (resourcesService == null)\n            resourcesService\n                = ResourceManagementServiceUtils.getService(bundleContext);\n        return resourcesService;\n    }","commit_id":"6e67b4a3ced3b111a07cac4458bd6ae02e9cc26e","url":"https://github.com/jitsi/jitsi"},{"original_method":"public void start(BundleContext bc) throws Exception\n    {\n        bundleContext = bc;\n\n        /*\n         * WelcomeWindow is huge because it has a large image spread all over it\n         * so, given it's only necessary before the UIService gets activated, we\n         * certainly don't want to keep it around (e.g. as an instance field or\n         * as a final variable used inside a BundleListener which never gets\n         * removed).\n         */\n        final WelcomeWindow welcomeWindow = new WelcomeWindow();\n        welcomeWindow.pack();\n        welcomeWindow.setVisible(true);\n\n        bundleContext.addBundleListener(new BundleListener()\n        {\n\n            /**\n             * The indicator which determines whether the job of this listener\n             * is done and no other <tt>BundleEvent<\/tt>s should be handled.\n             * <p>\n             * After\n             * {@link BrandingActivator#bundleChanged(BundleEvent, WelcomeWindow)}\n             * reports it's done, it's not enough to remove this listener from\n             * the notifying <tt>BundleContext<\/tt> in order to not handle more\n             * <tt>BundleEvent<\/tt>s because the notifications get triggered on\n             * packs of events without consulting the currently registered\n             * <tt>BundleListener<\/tt> and, if an event in the pack concludes\n             * the job of this listener, the subsequent events from the same\n             * pack will still be handled without the indicator.\n             * <\/p>\n             */\n            private boolean done;\n\n            public void bundleChanged(BundleEvent evt)\n            {\n                if (!done\n                    && !BrandingActivator.this\n                        .bundleChanged(evt, welcomeWindow))\n                {\n\n                    /*\n                     * Don't let bundleContext retain a reference to this\n                     * listener because it'll retain a reference to\n                     * welcomeWindow. Besides, we're no longer interested in\n                     * handling events so it doesn't make sense to even retain\n                     * this listener.\n                     */\n                    bundleContext.removeBundleListener(this);\n                    done = true;\n                }\n            }\n        });\n    }","id":13216,"modified_method":"public void start(BundleContext bc) throws Exception\n    {\n        bundleContext = bc;\n\n        ConfigurationService config = getConfigurationService();\n        boolean showSplashScreen\n            = (config == null)\n                ? true /*\n                        * Having no ConfigurationService reference is not good\n                        * for the application so we are better off with the\n                        * splash screen to actually see which bundles get loaded\n                        * and maybe be able to debug the problem.\n                        */\n                : config.getBoolean(PNAME_SHOW_SPLASH_SCREEN, false);\n\n        /*\n         * WelcomeWindow is huge because it has a large image spread all over it\n         * so, given it's only necessary before the UIService gets activated, we\n         * certainly don't want to keep it around (e.g. as an instance field or\n         * as a final variable used inside a BundleListener which never gets\n         * removed).\n         */\n        final WelcomeWindow welcomeWindow;\n        if (showSplashScreen)\n        {\n            welcomeWindow = new WelcomeWindow();\n            welcomeWindow.pack();\n            welcomeWindow.setVisible(true);\n        }\n        else\n            welcomeWindow = null;\n\n        bundleContext.addBundleListener(new BundleListener()\n        {\n\n            /**\n             * The indicator which determines whether the job of this listener\n             * is done and no other <tt>BundleEvent<\/tt>s should be handled.\n             * <p>\n             * After\n             * {@link BrandingActivator#bundleChanged(BundleEvent, WelcomeWindow)}\n             * reports it's done, it's not enough to remove this listener from\n             * the notifying <tt>BundleContext<\/tt> in order to not handle more\n             * <tt>BundleEvent<\/tt>s because the notifications get triggered on\n             * packs of events without consulting the currently registered\n             * <tt>BundleListener<\/tt> and, if an event in the pack concludes\n             * the job of this listener, the subsequent events from the same\n             * pack will still be handled without the indicator.\n             * <\/p>\n             */\n            private boolean done;\n\n            public void bundleChanged(BundleEvent evt)\n            {\n                if (!done\n                        && !BrandingActivator\n                                .this.bundleChanged(evt, welcomeWindow))\n                {\n\n                    /*\n                     * Don't let bundleContext retain a reference to this\n                     * listener because it'll retain a reference to\n                     * welcomeWindow. Besides, we're no longer interested in\n                     * handling events so it doesn't make sense to even retain\n                     * this listener.\n                     */\n                    bundleContext.removeBundleListener(this);\n                    done = true;\n                }\n            }\n        });\n    }","commit_id":"6e67b4a3ced3b111a07cac4458bd6ae02e9cc26e","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Sets the name of the currently loading bundle.\n     * \n     * @param bundleName the name of the bundle to display\n     */\n    public void setBundle(String bundleName)\n    {\n        this.bundleLabel.setText(bundleName);\n\n        this.loadingPanel.revalidate();\n        this.loadingPanel.repaint();\n    }","id":13217,"modified_method":"/**\n     * Sets the name of the currently loading bundle.\n     * \n     * @param bundleName the name of the bundle to display\n     */\n    public void setBundle(String bundleName)\n    {\n        bundleLabel.setText(bundleName);\n\n        bundleLabel.revalidate();\n        bundleLabel.getParent().repaint();\n    }","commit_id":"6e67b4a3ced3b111a07cac4458bd6ae02e9cc26e","url":"https://github.com/jitsi/jitsi"},{"original_method":"private void initLoadingPanel()\n    {\n        this.bundleLabel.setFont(loadingLabel.getFont().deriveFont(Font.PLAIN));\n        this.loadingPanel.setOpaque(false);\n        this.loadingPanel.add(loadingLabel, BorderLayout.WEST);\n        this.loadingPanel.add(bundleLabel, BorderLayout.CENTER);\n\n        int loadingPanelBorder\n            = BrandingActivator.getResources()\n                .getSettingsInt(\"plugin.branding.LOADING_BUNDLE_PANEL_BORDER\");\n\n        this.loadingPanel.setBorder(\n            BorderFactory.createEmptyBorder(loadingPanelBorder,\n                                            loadingPanelBorder,\n                                            loadingPanelBorder,\n                                            loadingPanelBorder));\n\n        int loadingPanelHeight\n            = BrandingActivator.getResources()\n                .getSettingsInt(\"plugin.branding.LOADING_BUNDLE_PANEL_HEIGHT\");\n\n        this.loadingPanel.setPreferredSize(\n            new Dimension(PREFERRED_WIDTH, loadingPanelHeight));\n    }","id":13218,"modified_method":"private JPanel initLoadingPanel()\n    {\n        ResourceManagementService resources = BrandingActivator.getResources();\n        JLabel loadingLabel\n            = new JLabel(\n                    resources.getI18NString(\"plugin.branding.LOADING\") + \": \");\n        JPanel loadingPanel = new JPanel(new BorderLayout());\n\n        this.bundleLabel.setFont(loadingLabel.getFont().deriveFont(Font.PLAIN));\n\n        loadingPanel.setOpaque(false);\n        loadingPanel.add(loadingLabel, BorderLayout.WEST);\n        loadingPanel.add(bundleLabel, BorderLayout.CENTER);\n\n        int loadingPanelBorder\n            = resources\n                .getSettingsInt(\"plugin.branding.LOADING_BUNDLE_PANEL_BORDER\");\n\n        loadingPanel.setBorder(\n            BorderFactory.createEmptyBorder(loadingPanelBorder,\n                                            loadingPanelBorder,\n                                            loadingPanelBorder,\n                                            loadingPanelBorder));\n\n        int loadingPanelHeight\n            = resources\n                .getSettingsInt(\"plugin.branding.LOADING_BUNDLE_PANEL_HEIGHT\");\n\n        loadingPanel.setPreferredSize(\n            new Dimension(PREFERRED_WIDTH, loadingPanelHeight));\n\n        return loadingPanel;\n    }","commit_id":"6e67b4a3ced3b111a07cac4458bd6ae02e9cc26e","url":"https://github.com/jitsi/jitsi"},{"original_method":"public WelcomeWindow()\n    {\n        JLabel titleLabel = new JLabel(APPLICATION_NAME);\n\n        JLabel versionLabel = new JLabel(\" \"\n                + System.getProperty(\"sip-communicator.version\"));\n\n        JTextArea logoArea = new JTextArea(\n            BrandingActivator.getResources()\n                .getI18NString(\"plugin.branding.LOGO_MESSAGE\"));\n\n        StyledHTMLEditorPane rightsArea = new StyledHTMLEditorPane();\n\n        StyledHTMLEditorPane licenseArea = new StyledHTMLEditorPane();\n\n        JPanel textPanel = new JPanel();\n\n        Container mainPanel = new WindowBackground();\n\n        this.setTitle(APPLICATION_NAME);\n\n        this.setModal(false);\n        this.setUndecorated(true);\n\n        mainPanel.setLayout(new BorderLayout());\n\n        textPanel.setPreferredSize(new Dimension(470, 280));\n        textPanel.setLayout(new BoxLayout(textPanel, BoxLayout.Y_AXIS));\n        textPanel\n                .setBorder(BorderFactory.createEmptyBorder(15, 15, 0, 15));\n        textPanel.setOpaque(false);\n\n        this.initTitleLabel(titleLabel);\n\n        this.initVersionLabel(versionLabel);\n\n        this.initLogoArea(logoArea);\n\n        this.initRightsArea(rightsArea);\n\n        this.initLicenseArea(licenseArea);\n\n        this.initLoadingPanel();\n\n        textPanel.add(titleLabel);\n        textPanel.add(versionLabel);\n        textPanel.add(logoArea);\n        textPanel.add(rightsArea);\n        textPanel.add(licenseArea);\n\n        mainPanel.add(textPanel, BorderLayout.CENTER);\n        mainPanel.add(loadingPanel, BorderLayout.SOUTH);\n\n        this.getContentPane().add(mainPanel);\n\n        this.setResizable(false);\n\n        mainPanel.setPreferredSize(\n            new Dimension(PREFERRED_WIDTH, PREFERRED_HEIGHT));\n\n        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();\n        this.setLocation(screenSize.width / 2 - 527 / 2,\n            screenSize.height / 2 - 305 / 2);\n\n        this.initCloseActions();\n    }","id":13219,"modified_method":"public WelcomeWindow()\n    {\n        JLabel titleLabel = new JLabel(APPLICATION_NAME);\n\n        JLabel versionLabel = new JLabel(\" \"\n                + System.getProperty(\"sip-communicator.version\"));\n\n        JTextArea logoArea = new JTextArea(\n            BrandingActivator.getResources()\n                .getI18NString(\"plugin.branding.LOGO_MESSAGE\"));\n\n        StyledHTMLEditorPane rightsArea = new StyledHTMLEditorPane();\n\n        StyledHTMLEditorPane licenseArea = new StyledHTMLEditorPane();\n\n        JPanel textPanel = new JPanel();\n\n        Container mainPanel = new WindowBackground();\n\n        this.setTitle(APPLICATION_NAME);\n\n        this.setModal(false);\n        this.setUndecorated(true);\n\n        mainPanel.setLayout(new BorderLayout());\n\n        textPanel.setPreferredSize(new Dimension(470, 280));\n        textPanel.setLayout(new BoxLayout(textPanel, BoxLayout.Y_AXIS));\n        textPanel\n                .setBorder(BorderFactory.createEmptyBorder(15, 15, 0, 15));\n        textPanel.setOpaque(false);\n\n        this.initTitleLabel(titleLabel);\n\n        this.initVersionLabel(versionLabel);\n\n        this.initLogoArea(logoArea);\n\n        this.initRightsArea(rightsArea);\n\n        this.initLicenseArea(licenseArea);\n\n        Component loadingPanel = initLoadingPanel();\n\n        textPanel.add(titleLabel);\n        textPanel.add(versionLabel);\n        textPanel.add(logoArea);\n        textPanel.add(rightsArea);\n        textPanel.add(licenseArea);\n\n        mainPanel.add(textPanel, BorderLayout.CENTER);\n        mainPanel.add(loadingPanel, BorderLayout.SOUTH);\n\n        this.getContentPane().add(mainPanel);\n\n        this.setResizable(false);\n\n        mainPanel.setPreferredSize(\n            new Dimension(PREFERRED_WIDTH, PREFERRED_HEIGHT));\n\n        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();\n        this.setLocation(screenSize.width / 2 - 527 / 2,\n            screenSize.height / 2 - 305 / 2);\n\n        this.initCloseActions();\n    }","commit_id":"6e67b4a3ced3b111a07cac4458bd6ae02e9cc26e","url":"https://github.com/jitsi/jitsi"},{"original_method":"public static ResourceManagementService getResources()\n    {\n        if (resourcesService == null)\n        {\n            ServiceReference serviceReference = bundleContext\n                .getServiceReference(ResourceManagementService.class.getName());\n\n            if(serviceReference == null)\n                return null;\n            \n            resourcesService = \n                (ResourceManagementService)bundleContext\n                    .getService(serviceReference);\n        }\n\n        return resourcesService;\n    }","id":13220,"modified_method":"public static ResourceManagementService getResources()\n    {\n        if (resourcesService == null)\n            resourcesService\n                = ResourceManagementServiceUtils.getService(bundleContext);\n        return resourcesService;\n    }","commit_id":"b0f009b5c543f7b9913ba7275a9968ec0afa16a1","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Called when this bundle is started.\n     *\n     * @param bContext The execution context of the bundle being started.\n     */\n    public void start(BundleContext bContext) throws Exception\n    {\n        try {\n            AudioNotifierActivator.bundleContext = bContext;\n            \n            //Create the audio notifier service\n            audioNotifier = new AudioNotifierServiceImpl();\n\n            ServiceReference configReference = bundleContext\n                .getServiceReference(ConfigurationService.class.getName());\n        \n            configService = (ConfigurationService) bundleContext\n                .getService(configReference);\n    \n            String isSoundEnabled = configService.getString(\n                \"net.java.sip.communicator.impl.sound.isSoundEnabled\");\n    \n            if(isSoundEnabled != null && isSoundEnabled != \"\") {\n                audioNotifier.setMute(\n                    !new Boolean(isSoundEnabled).booleanValue());\n            }\n\n            logger.logEntry();\n            \n            logger.info(\"Audio Notifier Service...[  STARTED ]\");\n\n            bundleContext.registerService(AudioNotifierService.class.getName(),\n                    audioNotifier, null);\n\n            logger.info(\"Audio Notifier Service ...[REGISTERED]\");\n            \n        } finally {\n            logger.logExit();\n        }\n    }","id":13221,"modified_method":"/**\n     * Called when this bundle is started.\n     *\n     * @param bContext The execution context of the bundle being started.\n     */\n    public void start(BundleContext bContext) throws Exception\n    {\n        try {\n            AudioNotifierActivator.bundleContext = bContext;\n            \n            //Create the audio notifier service\n            audioNotifier = new AudioNotifierServiceImpl();\n\n            ServiceReference configReference = bundleContext\n                .getServiceReference(ConfigurationService.class.getName());\n        \n            configService = (ConfigurationService) bundleContext\n                .getService(configReference);\n\n            audioNotifier.setMute(\n                !configService\n                    .getBoolean(\n                        \"net.java.sip.communicator.impl.sound.isSoundEnabled\",\n                        true));\n\n            logger.logEntry();\n            \n            logger.info(\"Audio Notifier Service...[  STARTED ]\");\n\n            bundleContext\n                .registerService(\n                    AudioNotifierService.class.getName(),\n                    audioNotifier,\n                    null);\n\n            logger.info(\"Audio Notifier Service ...[REGISTERED]\");\n            \n        } finally {\n            logger.logExit();\n        }\n    }","commit_id":"b0f009b5c543f7b9913ba7275a9968ec0afa16a1","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Called when this bundle is stopped so the Framework can perform the\n     * bundle-specific activities necessary to stop the bundle.\n     *\n     * @param bContext The execution context of the bundle being stopped.\n     * @throws Exception If this method throws an exception, the bundle is\n     *   still marked as stopped, and the Framework will remove the bundle's\n     *   listeners, unregister all services registered by the bundle, and\n     *   release all services used by the bundle.\n     */\n    public void stop(BundleContext bContext) throws Exception\n    {\n        //TODO: Stop all currently playing sounds here\n        try {\n            configService.setProperty(\n                \"net.java.sip.communicator.impl.sound.isSoundEnabled\",\n                new Boolean(!audioNotifier.isMute()));\n\n        }\n        catch (PropertyVetoException e1) {\n            logger.error(\"The proposed property change \"\n                    + \"represents an unacceptable value\");\n        }\n        \n        logger.info(\"AudioNotifier Service ...[STOPPED]\");\n    }","id":13222,"modified_method":"/**\n     * Called when this bundle is stopped so the Framework can perform the\n     * bundle-specific activities necessary to stop the bundle.\n     *\n     * @param bContext The execution context of the bundle being stopped.\n     * @throws Exception If this method throws an exception, the bundle is\n     *   still marked as stopped, and the Framework will remove the bundle's\n     *   listeners, unregister all services registered by the bundle, and\n     *   release all services used by the bundle.\n     */\n    public void stop(BundleContext bContext) throws Exception\n    {\n        //TODO: Stop all currently playing sounds here\n        try {\n            configService.setProperty(\n                \"net.java.sip.communicator.impl.sound.isSoundEnabled\",\n                Boolean.toString(!audioNotifier.isMute()));\n\n        }\n        catch (PropertyVetoException e1) {\n            logger.error(\"The proposed property change \"\n                    + \"represents an unacceptable value\");\n        }\n        \n        logger.info(\"AudioNotifier Service ...[STOPPED]\");\n    }","commit_id":"b0f009b5c543f7b9913ba7275a9968ec0afa16a1","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Start the datasource and the underlying stream\n     */\n    public void start()\n        throws IOException\n    {\n        if (started)\n            return;\n\n        if (!connected)\n            throw new IOException(\"DataSource must be connected\");\n\n        streams[0].start();\n        started = true;\n    }","id":13223,"modified_method":"/**\n     * Start the datasource and the underlying stream\n     */\n    public void start()\n        throws IOException\n    {\n        if (started)\n            return;\n\n        if (!connected)\n            throw new IOException(\"DataSource must be connected\");\n\n        try\n        {\n            streams[0].start();\n        }\n        catch (PortAudioException paex)\n        {\n            IOException ioex = new IOException();\n            ioex.initCause(paex);\n            throw ioex;\n        }\n        started = true;\n    }","commit_id":"b0f009b5c543f7b9913ba7275a9968ec0afa16a1","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Stop the datasource and it's underlying stream\n     */\n    public void stop()\n        throws IOException\n    {\n        if (!started)\n            return;\n\n        streams[0].stop();\n        started = false;\n    }","id":13224,"modified_method":"/**\n     * Stop the datasource and it's underlying stream\n     */\n    public void stop()\n        throws IOException\n    {\n        if (!started)\n            return;\n\n        try\n        {\n            streams[0].stop();\n        }\n        catch (PortAudioException paex)\n        {\n            IOException ioex = new IOException();\n            ioex.initCause(paex);\n            throw ioex;\n        }\n        started = false;\n    }","commit_id":"b0f009b5c543f7b9913ba7275a9968ec0afa16a1","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Connect the datasource\n     */\n    public void connect()\n        throws IOException\n    {\n        if (connected)\n            return;\n\n        if (!portAudioIsInitialized)\n            try\n            {\n                PortAudio.Pa_Initialize();\n                portAudioIsInitialized = true;\n            }\n            catch (PortAudioException paex)\n            {\n                IOException ioex = new IOException();\n                ioex.initCause(paex);\n                throw ioex;\n            }\n\n        connected = true;\n    }","id":13225,"modified_method":"/**\n     * Connect the datasource\n     */\n    public void connect()\n        throws IOException\n    {\n        if (connected)\n            return;\n\n        try\n        {\n            PortAudio.initialize();\n        }\n        catch (PortAudioException paex)\n        {\n            IOException ioex = new IOException();\n            ioex.initCause(paex);\n            throw ioex;\n        }\n\n        connected = true;\n    }","commit_id":"b0f009b5c543f7b9913ba7275a9968ec0afa16a1","url":"https://github.com/jitsi/jitsi"},{"original_method":"public static native void Pa_Initialize()\n        throws PortAudioException;","id":13226,"modified_method":"private static native void Pa_Initialize()\n        throws PortAudioException;","commit_id":"b0f009b5c543f7b9913ba7275a9968ec0afa16a1","url":"https://github.com/jitsi/jitsi"},{"original_method":"public PortAudioRenderer()\n    {\n        try\n        {\n            PortAudio.Pa_Initialize();\n        }\n        catch (PortAudioException e)\n        {\n            logger.error(\"Cannot Initialize portaudio\", e);\n        }\n    }","id":13227,"modified_method":"public PortAudioRenderer()\n    {\n        try\n        {\n            PortAudio.initialize();\n        }\n        catch (PortAudioException e)\n        {\n            logger.error(\"Cannot Initialize portaudio\", e);\n        }\n    }","commit_id":"b0f009b5c543f7b9913ba7275a9968ec0afa16a1","url":"https://github.com/jitsi/jitsi"},{"original_method":"public int callback(ByteBuffer input, ByteBuffer output)\n    {\n        bufferToProcess = input;\n\n        if(started && transferHandler != null)\n        {\n            transferHandler.transferData(this);\n        }\n\n        if(!started)\n        {\n            return RESULT_COMPLETE;\n        }\n        else\n            return RESULT_CONTINUE;\n    }","id":13228,"modified_method":"public int callback(ByteBuffer input, ByteBuffer output)\n    {\n        bufferToProcess = input;\n\n        if (transferHandler != null)\n            transferHandler.transferData(this);\n\n        return RESULT_CONTINUE;\n    }","commit_id":"b0f009b5c543f7b9913ba7275a9968ec0afa16a1","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Starts the stream operation\n     */\n    void start()\n    {\n        synchronized (this)\n        {\n            this.started = true;\n            try\n            {\n                PortAudio.Pa_StartStream(getStream());\n            }\n            catch (PortAudioException paex)\n            {\n                paex.printStackTrace();\n            }\n        }\n    }","id":13229,"modified_method":"/**\n     * Starts the stream operation\n     */\n    void start()\n        throws PortAudioException\n    {\n        if (this.stream != 0)\n            throw new IllegalStateException(\"stream\");\n\n        long stream = createStream();\n\n        try\n        {\n            PortAudio.Pa_StartStream(stream);\n            this.stream = stream;\n        }\n        catch (PortAudioException startException)\n        {\n            try\n            {\n                PortAudio.Pa_CloseStream(stream);\n            }\n            catch (PortAudioException closeException)\n            {\n                /*\n                 * We couldn't start the stream so we're closing it just to free\n                 * the native resources but if that fails as well, we cannot do\n                 * anything about it. Besides, we have to rethrow the exception\n                 * which was thrown on start.\n                 */\n            }\n\n            throw startException;\n        }\n    }","commit_id":"b0f009b5c543f7b9913ba7275a9968ec0afa16a1","url":"https://github.com/jitsi/jitsi"},{"original_method":"public void finishedCallback()\n    {\n        stream = 0;\n    }","id":13230,"modified_method":"public void finishedCallback()\n    {\n    }","commit_id":"b0f009b5c543f7b9913ba7275a9968ec0afa16a1","url":"https://github.com/jitsi/jitsi"},{"original_method":"void stop()\n    {\n        synchronized (this)\n        {\n            this.started = false;\n            try\n            {\n                PortAudio.Pa_CloseStream(getStream());\n            }\n            catch (PortAudioException paex)\n            {\n                paex.printStackTrace();\n            }\n        }\n    }","id":13231,"modified_method":"void stop()\n        throws PortAudioException\n    {\n        if (stream != 0)\n        {\n            PortAudio.Pa_CloseStream(stream);\n            stream = 0;\n        }\n    }","commit_id":"b0f009b5c543f7b9913ba7275a9968ec0afa16a1","url":"https://github.com/jitsi/jitsi"},{"original_method":"private long getStream()\n        throws PortAudioException\n    {\n        if (stream == 0)\n        {\n            int deviceCount = PortAudio.Pa_GetDeviceCount();\n            int deviceIndex = 0;\n\n            for (; deviceIndex < deviceCount; deviceIndex++)\n            {\n                long deviceInfo = PortAudio.Pa_GetDeviceInfo(deviceIndex);\n\n                if ((PortAudio.PaDeviceInfo_getMaxInputChannels(deviceInfo) == 2)\n                    && (PortAudio.PaDeviceInfo_getMaxOutputChannels(deviceInfo) == 0)\n                    && PortAudio.PaDeviceInfo_getName(deviceInfo)\n                        .contains(\"Analog\"))\n                    break;\n            }\n\n            long streamParameters\n                = PortAudio.PaStreamParameters_new(\n                        deviceIndex,\n                        1,\n                        PortAudio.SAMPLE_FORMAT_INT16);\n\n            stream\n                = PortAudio.Pa_OpenStream(\n                        streamParameters,\n                        0,\n                        44100,\n                        PortAudio.FRAMES_PER_BUFFER_UNSPECIFIED,\n                        PortAudio.STREAM_FLAGS_NO_FLAG,\n                        this);\n        }\n        return stream;\n    }","id":13232,"modified_method":"private long createStream()\n        throws PortAudioException\n    {\n        int deviceCount = PortAudio.Pa_GetDeviceCount();\n        int deviceIndex = 0;\n\n        for (; deviceIndex < deviceCount; deviceIndex++)\n        {\n            long deviceInfo = PortAudio.Pa_GetDeviceInfo(deviceIndex);\n\n            if ((PortAudio.PaDeviceInfo_getMaxInputChannels(deviceInfo) == 2)\n                && (PortAudio.PaDeviceInfo_getMaxOutputChannels(deviceInfo) == 0)\n                && PortAudio.PaDeviceInfo_getName(deviceInfo)\n                    .contains(\"Analog\"))\n                break;\n        }\n\n        long streamParameters\n            = PortAudio.PaStreamParameters_new(\n                    deviceIndex,\n                    1,\n                    PortAudio.SAMPLE_FORMAT_INT16);\n\n        return\n            PortAudio.Pa_OpenStream(\n                    streamParameters,\n                    0,\n                    44100,\n                    PortAudio.FRAMES_PER_BUFFER_UNSPECIFIED,\n                    PortAudio.STREAM_FLAGS_NO_FLAG,\n                    this);\n    }","commit_id":"b0f009b5c543f7b9913ba7275a9968ec0afa16a1","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * \n     * @param transferHandler\n     */\n    public void setTransferHandler(BufferTransferHandler transferHandler)\n    {\n        synchronized (this)\n        {\n            this.transferHandler = transferHandler;\n            notifyAll();\n        }\n    }","id":13233,"modified_method":"/**\n     * \n     * @param transferHandler\n     */\n    public void setTransferHandler(BufferTransferHandler transferHandler)\n    {\n        this.transferHandler = transferHandler;\n    }","commit_id":"b0f009b5c543f7b9913ba7275a9968ec0afa16a1","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Plays this audio in loop.\n     *\n     * @param interval the loop interval\n     */\n    public void playInLoop(int interval)\n    {\n        if(!audioNotifier.isMute())\n        {\n            if(interval == 0)\n                audioClip.loop();\n            else\n            {\n                //first play the audio and then start the timer and wait\n                audioClip.play();\n                playAudioTimer.setDelay(interval);\n                playAudioTimer.setRepeats(true);\n\n                playAudioTimer.start();\n            }\n        }\n\n        this.loopInterval = interval;\n\n        this.isLooping = true;\n    }","id":13234,"modified_method":"/**\n     * Plays this audio in loop.\n     *\n     * @param interval the loop interval\n     */\n    public void playInLoop(int interval)\n    {\n        if ((audioClip != null) && !audioNotifier.isMute())\n        {\n            if (interval == 0)\n                audioClip.loop();\n            else\n            {\n                //first play the audio and then start the timer and wait\n                audioClip.play();\n                playAudioTimer.setDelay(interval);\n                playAudioTimer.setRepeats(true);\n\n                playAudioTimer.start();\n            }\n        }\n\n        this.loopInterval = interval;\n        this.isLooping = true;\n    }","commit_id":"b0f009b5c543f7b9913ba7275a9968ec0afa16a1","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Creates the audio clip and initialize the listener used from the\n     * loop timer.\n     *\n     * @param url the url pointing to the audio file\n     */\n    public SCAudioClipImpl(URL url, AudioNotifierService audioNotifier)\n        throws IOException\n    {\n        InputStream inputstream;\n\n        inputstream = url.openStream();\n        this.createAppletAudioClip(inputstream);\n\n        this.audioListener = new PlayAudioListener(audioClip);\n        this.playAudioTimer.addActionListener(audioListener);\n\n        this.audioNotifier = audioNotifier;\n    }","id":13235,"modified_method":"/**\n     * Creates the audio clip and initialize the listener used from the\n     * loop timer.\n     *\n     * @param url the url pointing to the audio file\n     */\n    public SCAudioClipImpl(URL url, AudioNotifierService audioNotifier)\n        throws IOException\n    {\n        this.audioClip = createAppletAudioClip(url.openStream());\n        this.audioNotifier = audioNotifier;\n\n        this.playAudioTimer.addActionListener(this);\n    }","commit_id":"b0f009b5c543f7b9913ba7275a9968ec0afa16a1","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Creates an AppletAudioClip.\n     *\n     * @param inputstream the audio input stream\n     * @throws IOException\n     */\n    private void createAppletAudioClip(InputStream inputstream)\n        throws IOException\n    {\n        if(acConstructor == null)\n        {\n            try\n            {\n                acConstructor = AccessController\n                    .doPrivileged(new PrivilegedExceptionAction<Constructor<AudioClip>>()\n                {\n                    @SuppressWarnings(\"unchecked\")\n                    public Constructor<AudioClip> run()\n                        throws  NoSuchMethodException,\n                                SecurityException,\n                                ClassNotFoundException\n                    {\n\n                        Class<?> class1 = null;\n                        try\n                        {\n                            class1 = Class.forName(\n                                    \"com.sun.media.sound.JavaSoundAudioClip\",\n                                    true, ClassLoader.getSystemClassLoader());\n                        }\n                        catch(ClassNotFoundException classnotfoundexception)\n                        {\n                            class1 = Class.forName(\n                                \"sun.audio.SunAudioClip\", true, null);\n                        }\n                        Class<?> aclass[] = new Class[1];\n                        aclass[0] = Class.forName(\"java.io.InputStream\");\n                        return (Constructor<AudioClip>) class1.getConstructor(aclass);\n                    }\n                });\n            }\n            catch(PrivilegedActionException privilegedactionexception)\n            {\n                throw new IOException(\"Failed to get AudioClip constructor: \"\n                    + privilegedactionexception.getException());\n            }\n        }\n\n        try\n        {\n            Object aobj[] = {\n                inputstream\n            };\n            audioClip = acConstructor.newInstance(aobj);\n        }\n        catch(Exception exception)\n        {\n            throw new IOException(\"Failed to construct the AudioClip: \"\n                + exception);\n        }\n    }","id":13236,"modified_method":"/**\n     * Creates an AppletAudioClip.\n     *\n     * @param inputstream the audio input stream\n     * @throws IOException\n     */\n    private static AudioClip createAppletAudioClip(InputStream inputstream)\n        throws IOException\n    {\n        if (acConstructor == null)\n        {\n            try\n            {\n                acConstructor\n                    = AccessController.doPrivileged(\n                            new PrivilegedExceptionAction<Constructor<AudioClip>>()\n                            {\n                                public Constructor<AudioClip> run()\n                                    throws ClassNotFoundException,\n                                           NoSuchMethodException,\n                                           SecurityException\n                                {\n                                    return createAcConstructor();\n                                }\n                            });\n            }\n            catch (PrivilegedActionException paex)\n            {\n                throw\n                    new IOException(\n                            \"Failed to get AudioClip constructor: \"\n                                + paex.getException());\n            }\n        }\n\n        try\n        {\n            return acConstructor.newInstance(inputstream);\n        }\n        catch (Exception ex)\n        {\n            throw new IOException(\"Failed to construct the AudioClip: \" + ex);\n        }\n    }","commit_id":"b0f009b5c543f7b9913ba7275a9968ec0afa16a1","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\n     * Called when this bundle is started so the Framework can perform the\n     * bundle-specific activities necessary to start this bundle.\n     *\n     * @param context The execution context of the bundle being started.\n     * @throws Exception If this method throws an exception, this bundle is\n     *   marked as stopped and the Framework will remove this bundle's\n     *   listeners, unregister all services registered by this bundle, and\n     *   release all services used by this bundle.\n     */\n    public void start(BundleContext context) throws Exception\n    {\n        MsnActivator.bundleContext = context;\n\n        Hashtable<String, String> hashtable = new Hashtable<String, String>();\n        hashtable.put(ProtocolProviderFactory.PROTOCOL, ProtocolNames.MSN);\n\n        msnProviderFactory = new ProtocolProviderFactoryMsnImpl();\n\n        //reg the msn account man.\n        msnPpFactoryServReg =  context.registerService(\n                    ProtocolProviderFactory.class.getName(),\n                    msnProviderFactory,\n                    hashtable);\n    }","id":13237,"modified_method":"/**\n     * Called when this bundle is started so the Framework can perform the\n     * bundle-specific activities necessary to start this bundle.\n     *\n     * @param context The execution context of the bundle being started.\n     * @throws Exception If this method throws an exception, this bundle is\n     *   marked as stopped and the Framework will remove this bundle's\n     *   listeners, unregister all services registered by this bundle, and\n     *   release all services used by this bundle.\n     */\n    public void start(BundleContext context) throws Exception\n    {\n        MsnActivator.bundleContext = context;\n\n        Hashtable<String, String> hashtable = new Hashtable<String, String>();\n        hashtable.put(ProtocolProviderFactory.PROTOCOL, ProtocolNames.MSN);\n\n        msnProviderFactory = new ProtocolProviderFactoryMsnImpl();\n\n        /*\n         * Fixes issue #647: MalformedURLException in java-jml. Has to execute\n         * before a login in attempted so before the factory is registered seems\n         * OK since the ProtocolProviderService instances are not created yet.\n         */\n        ReferenceURLStreamHandlerService.registerService(bundleContext);\n\n        //reg the msn account man.\n        msnPpFactoryServReg =  context.registerService(\n                    ProtocolProviderFactory.class.getName(),\n                    msnProviderFactory,\n                    hashtable);\n    }","commit_id":"111c823fd1db1ff4260478f4d805a3321a3c2f8c","url":"https://github.com/jitsi/jitsi"},{"original_method":"public static ResourceManagementService getResources()\n    {\n        if (resourcesService == null)\n        {\n            ServiceReference serviceReference = bundleContext\n                .getServiceReference(ResourceManagementService.class.getName());\n\n            if(serviceReference == null)\n                return null;\n\n            resourcesService = (ResourceManagementService) bundleContext\n                .getService(serviceReference);\n        }\n\n        return resourcesService;\n    }","id":13238,"modified_method":"/**\n     * Gets the <tt>ResourceManagementService<\/tt> instance which provides\n     * common resources such as internationalized and localized strings, images\n     * to the MSN bundle.\n     *\n     * @return the <tt>ResourceManagementService<\/tt> instance which provides\n     * common resources such as internationalized and localized strings, images\n     * to the MSN bundle\n     */\n    public static ResourceManagementService getResources()\n    {\n        if (resources == null)\n            resources\n                = ResourceManagementServiceUtils.getService(bundleContext);\n        return resources;\n    }","commit_id":"111c823fd1db1ff4260478f4d805a3321a3c2f8c","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\r\n     * Creates an account id from the specified id and account properties.\r\n     * \r\n     * @param userID\r\n     *            the user identifier corresponding to the account\r\n     * @param accountProperties\r\n     *            any other properties necessary for the account.\r\n     */\r\n    protected FacebookAccountID(String userID, Map<String, String> accountProperties)\r\n    {\r\n        super(\r\n            userID,\r\n            accountProperties,\r\n            ProtocolNames.FACEBOOK,\r\n            \"facebook.com\");\r\n    }","id":13239,"modified_method":"/**\r\n     * Creates an account id from the specified id and account properties.\r\n     * \r\n     * @param userID\r\n     *            the user identifier corresponding to the account\r\n     * @param accountProperties\r\n     *            any other properties necessary for the account.\r\n     */\r\n    public FacebookAccountID(\r\n            String userID,\r\n            Map<String, String> accountProperties)\r\n    {\r\n        super(\r\n            userID,\r\n            accountProperties,\r\n            ProtocolNames.FACEBOOK,\r\n            \"facebook.com\");\r\n    }","commit_id":"7b5ba7d6a29633f4e07209abbb15deac54367cbb","url":"https://github.com/jitsi/jitsi"},{"original_method":"/**\r\n     * Called when this bundle is started. In here we'll export the facebook\r\n     * ProtocolProviderFactory implementation so that it could be possible to\r\n     * register accounts with it in SIP Communicator.\r\n     * \r\n     * @param context The execution context of the bundle being started.\r\n     * @throws Exception If this method throws an exception, this bundle is\r\n     *             marked as stopped and the Framework will remove this bundle's\r\n     *             listeners, unregister all services registered by this bundle,\r\n     *             and release all services used by this bundle.\r\n     */\r\n    public void start(BundleContext context) throws Exception\r\n    {\r\n        FacebookActivator.bundleContext = context;\r\n\r\n        Hashtable<String, String> hashtable = new Hashtable<String, String>();\r\n        hashtable.put(ProtocolProviderFactory.PROTOCOL, \"Facebook\");\r\n\r\n        facebookProviderFactory = new ProtocolProviderFactoryFacebookImpl();\r\n\r\n        // reg the facebook provider factory.\r\n        facebookPpFactoryServReg =\r\n            context.registerService(ProtocolProviderFactory.class.getName(),\r\n                facebookProviderFactory, hashtable);\r\n\r\n        logger.info(\"Facebook protocol implementation [STARTED].\");\r\n    }","id":13240,"modified_method":"/**\r\n     * Called when this bundle is started. In here we'll export the facebook\r\n     * ProtocolProviderFactory implementation so that it could be possible to\r\n     * register accounts with it in SIP Communicator.\r\n     * \r\n     * @param context The execution context of the bundle being started.\r\n     * @throws Exception If this method throws an exception, this bundle is\r\n     *             marked as stopped and the Framework will remove this bundle's\r\n     *             listeners, unregister all services registered by this bundle,\r\n     *             and release all services used by this bundle.\r\n     */\r\n    public void start(BundleContext context) throws Exception\r\n    {\r\n        FacebookActivator.bundleContext = context;\r\n\r\n        facebookProviderFactory = new ProtocolProviderFactoryFacebookImpl();\r\n\r\n        // reg the facebook provider factory.\r\n        Dictionary<String, String> properties = new Hashtable<String, String>();\r\n        properties.put(ProtocolProviderFactory.PROTOCOL, \"Facebook\");\r\n\r\n        facebookPpFactoryServReg =\r\n            context.registerService(ProtocolProviderFactory.class.getName(),\r\n                facebookProviderFactory, properties);\r\n\r\n        logger.info(\"Facebook protocol implementation [STARTED].\");\r\n    }","commit_id":"7b5ba7d6a29633f4e07209abbb15deac54367cbb","url":"https://github.com/jitsi/jitsi"},{"original_method":"public static ResourceManagementService getResources()\r\n    {\r\n        if (resourceService == null)\r\n        {\r\n            ServiceReference serviceReference =\r\n                bundleContext\r\n                    .getServiceReference(ResourceManagementService.class\r\n                        .getName());\r\n\r\n            if (serviceReference == null)\r\n                return null;\r\n\r\n            resourceService =\r\n                (ResourceManagementService) bundleContext\r\n                    .getService(serviceReference);\r\n        }\r\n\r\n        return resourceService;\r\n    }","id":13241,"modified_method":"public static ResourceManagementService getResources()\r\n    {\r\n        if (resourceService == null)\r\n            resourceService\r\n                = ResourceManagementServiceUtils.getService(bundleContext);\r\n        return resourceService;\r\n    }","commit_id":"7b5ba7d6a29633f4e07209abbb15deac54367cbb","url":"https://github.com/jitsi/jitsi"},{"original_method":"protected void newMethodQuickfixes(JvmTypeReference containerType, String name, @Nullable JvmTypeReference returnType,\n\t\tList<JvmTypeReference> argumentTypes, XAbstractFeatureCall call, JvmDeclaredType callersType,\n\t\tfinal Issue issue, final IssueResolutionAcceptor issueResolutionAcceptor) {\n\t\tboolean isLocal = callersType == containerType.getType();\n\t\tif(containerType.getType() instanceof JvmDeclaredType) \n\t\t\tnewMethodQuickfix((JvmDeclaredType) containerType.getType(), name, returnType, argumentTypes, false, isLocal, call, issue, issueResolutionAcceptor);\n\t\tif(!isLocal) {\n\t\t\tList<JvmTypeReference> extensionMethodParameterTypes = newArrayList(argumentTypes);\n\t\t\textensionMethodParameterTypes.add(0, containerType);\n\t\t\tnewMethodQuickfix(callersType, name, returnType, extensionMethodParameterTypes, true, true, call, issue, issueResolutionAcceptor);\n\t\t}\n\t}","id":13242,"modified_method":"protected void newMethodQuickfixes(JvmTypeReference containerType, String name, @Nullable JvmTypeReference returnType,\n\t\tList<JvmTypeReference> argumentTypes, XAbstractFeatureCall call, JvmDeclaredType callersType,\n\t\tfinal Issue issue, final IssueResolutionAcceptor issueResolutionAcceptor) {\n\t\tboolean isLocal = callersType == containerType.getType();\n\t\tboolean isStatic = isStaticAccess(call);\n\t\tif(containerType.getType() instanceof JvmDeclaredType) \n\t\t\tnewMethodQuickfix((JvmDeclaredType) containerType.getType(), name, returnType, argumentTypes, isStatic, false, isLocal, call, issue, issueResolutionAcceptor);\n\t\tif(!isLocal && !isStatic) {\n\t\t\tList<JvmTypeReference> extensionMethodParameterTypes = newArrayList(argumentTypes);\n\t\t\textensionMethodParameterTypes.add(0, containerType);\n\t\t\tnewMethodQuickfix(callersType, name, returnType, extensionMethodParameterTypes, false, true, true, call, issue, issueResolutionAcceptor);\n\t\t}\n\t}","commit_id":"20467ec3acd3351717dd18050b6c251b24899575","url":"https://github.com/eclipse/xtext"},{"original_method":"public void addQuickfixes(Issue issue, IssueResolutionAcceptor issueResolutionAcceptor,\n\t\t\tIXtextDocument xtextDocument, XtextResource resource, EObject referenceOwner, EReference unresolvedReference)\n\t\t\tthrows Exception {\n\t\tif (referenceOwner instanceof XAbstractFeatureCall) {\n\t\t\tXAbstractFeatureCall call = (XAbstractFeatureCall) referenceOwner;\n\t\t\t\n\t\t\tString newMemberName = (issue.getData() != null && issue.getData().length > 0) ? issue.getData()[0] : null;\n\t\t\tif(newMemberName != null) {\n\t\t\t\tif (call instanceof XMemberFeatureCall) {\n\t\t\t\t\tif(!call.isExplicitOperationCallOrBuilderSyntax()) { \n\t\t\t\t\t\tnewFieldQuickfix(newMemberName, call, issue, issueResolutionAcceptor);\n\t\t\t\t\t\tnewGetterQuickfixes(newMemberName, call, issue, issueResolutionAcceptor);\n\t\t\t\t\t}\n\t\t\t\t\tnewMethodQuickfixes(newMemberName, call, issue, issueResolutionAcceptor);\n\t\t\t\t\t\n\t\t\t\t} else if(call instanceof XFeatureCall) {\n\t\t\t\t\tif(((XFeatureCall) call).getDeclaringType() == null) {\n\t\t\t\t\t\tif(!call.isExplicitOperationCallOrBuilderSyntax()) {\n\t\t\t\t\t\t\tnewLocalVariableQuickfix(newMemberName, call, issue, issueResolutionAcceptor);\n\t\t\t\t\t\t\tnewFieldQuickfix(newMemberName, call, issue, issueResolutionAcceptor);\n\t\t\t\t\t\t\tnewGetterQuickfixes(newMemberName, call, issue, issueResolutionAcceptor);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnewMethodQuickfixes(newMemberName, call, issue, issueResolutionAcceptor);\n\t\t\t\t\t}\n\t\t\t\t} else if (call instanceof XAssignment) {\n\t\t\t\t\tnewSetterQuickfix(issue, issueResolutionAcceptor, newMemberName, call);\n\t\t\t\t\tif(((XAssignment) call).getAssignable() == null) {\n\t\t\t\t\t\tnewLocalVariableQuickfix(newMemberName, call, issue, issueResolutionAcceptor);\n\t\t\t\t\t\tnewFieldQuickfix(newMemberName, call, issue, issueResolutionAcceptor);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} \n\t\t\tif (call instanceof XBinaryOperation || call instanceof XUnaryOperation) {\n\t\t\t\tJvmIdentifiableElement feature = call.getFeature();\n\t\t\t\tif(feature.eIsProxy()) {\n\t\t\t\t\tString operatorMethodName = getOperatorMethodName(call);\n\t\t\t\t\tif(operatorMethodName != null) \n\t\t\t\t\t\tnewMethodQuickfixes(operatorMethodName, call, issue, issueResolutionAcceptor);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(referenceOwner instanceof XConstructorCall) {\n\t\t\tnewConstructorQuickfix(issue, issueResolutionAcceptor, (XConstructorCall) referenceOwner);\n\t\t}\n\t}","id":13243,"modified_method":"public void addQuickfixes(Issue issue, IssueResolutionAcceptor issueResolutionAcceptor,\n\t\t\tIXtextDocument xtextDocument, XtextResource resource, EObject referenceOwner, EReference unresolvedReference)\n\t\t\tthrows Exception {\n\t\tif (referenceOwner instanceof XAbstractFeatureCall) {\n\t\t\tXAbstractFeatureCall call = (XAbstractFeatureCall) referenceOwner;\n\t\t\t\n\t\t\tString newMemberName = (issue.getData() != null && issue.getData().length > 0) ? issue.getData()[0] : null;\n\t\t\tif(newMemberName != null) {\n\t\t\t\tif (call instanceof XMemberFeatureCall) {\n\t\t\t\t\tif(!call.isExplicitOperationCallOrBuilderSyntax()) { \n\t\t\t\t\t\tnewFieldQuickfix(newMemberName, call, issue, issueResolutionAcceptor);\n\t\t\t\t\t\tnewGetterQuickfixes(newMemberName, call, issue, issueResolutionAcceptor);\n\t\t\t\t\t}\n\t\t\t\t\tnewMethodQuickfixes(newMemberName, call, issue, issueResolutionAcceptor);\n\t\t\t\t\t\n\t\t\t\t} else if(call instanceof XFeatureCall) {\n\t\t\t\t\tif(!call.isExplicitOperationCallOrBuilderSyntax()) {\n\t\t\t\t\t\tif(!isStaticAccess(call)) {\n\t\t\t\t\t\t\tnewLocalVariableQuickfix(newMemberName, call, issue, issueResolutionAcceptor);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnewFieldQuickfix(newMemberName, call, issue, issueResolutionAcceptor);\n\t\t\t\t\t\tnewGetterQuickfixes(newMemberName, call, issue, issueResolutionAcceptor);\n\t\t\t\t\t}\n\t\t\t\t\tnewMethodQuickfixes(newMemberName, call, issue, issueResolutionAcceptor);\n\t\t\t\t\t\n\t\t\t\t} else if (call instanceof XAssignment) {\n\t\t\t\t\tnewSetterQuickfix(issue, issueResolutionAcceptor, newMemberName, call);\n\t\t\t\t\tif(((XAssignment) call).getAssignable() == null) {\n\t\t\t\t\t\tnewLocalVariableQuickfix(newMemberName, call, issue, issueResolutionAcceptor);\n\t\t\t\t\t\tnewFieldQuickfix(newMemberName, call, issue, issueResolutionAcceptor);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} \n\t\t\tif (call instanceof XBinaryOperation || call instanceof XUnaryOperation) {\n\t\t\t\tJvmIdentifiableElement feature = call.getFeature();\n\t\t\t\tif(feature.eIsProxy()) {\n\t\t\t\t\tString operatorMethodName = getOperatorMethodName(call);\n\t\t\t\t\tif(operatorMethodName != null) \n\t\t\t\t\t\tnewMethodQuickfixes(operatorMethodName, call, issue, issueResolutionAcceptor);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(referenceOwner instanceof XConstructorCall) {\n\t\t\tnewConstructorQuickfix(issue, issueResolutionAcceptor, (XConstructorCall) referenceOwner);\n\t\t}\n\t}","commit_id":"20467ec3acd3351717dd18050b6c251b24899575","url":"https://github.com/eclipse/xtext"},{"original_method":"@Nullable\n\tprotected JvmTypeReference getReceiverType(XAbstractFeatureCall featureCall) {\n\t\tXExpression actualReceiver = featureCall.getActualReceiver();\n\t\tif(actualReceiver == null) {\n\t\t\treturn typeRefs.createTypeRef(getCallersType(featureCall));\n\t\t} else {\n\t\t\tJvmTypeReference typeRef = typeProvider.getType(actualReceiver);\n\t\t\tif(typeRef != null && typeRef.getType() instanceof JvmDeclaredType)\n\t\t\t\treturn typeResolver.resolveType(featureCall, typeRef);\n\t\t}\n\t\treturn null;\n\t}","id":13244,"modified_method":"@Nullable\n\tprotected JvmTypeReference getReceiverType(XAbstractFeatureCall featureCall) {\n\t\tXExpression actualReceiver = featureCall.getActualReceiver();\n\t\tif(actualReceiver == null) {\n\t\t\tif(featureCall instanceof XFeatureCall) {\n\t\t\t\tJvmDeclaredType declaringType = ((XFeatureCall)featureCall).getDeclaringType();\n\t\t\t\tif(declaringType != null) \n\t\t\t\t\treturn typeRefs.createTypeRef(declaringType);\n\t\t\t}\n\t\t\treturn typeRefs.createTypeRef(getCallersType(featureCall));\n\t\t} else {\n\t\t\tJvmTypeReference typeRef = typeProvider.getType(actualReceiver);\n\t\t\tif(typeRef != null && typeRef.getType() instanceof JvmDeclaredType)\n\t\t\t\treturn typeResolver.resolveType(featureCall, typeRef);\n\t\t}\n\t\treturn null;\n\t}","commit_id":"20467ec3acd3351717dd18050b6c251b24899575","url":"https://github.com/eclipse/xtext"},{"original_method":"protected void newFieldQuickfix(JvmDeclaredType containerType, String name, @Nullable JvmTypeReference fieldType,\n\t\tXAbstractFeatureCall call, final Issue issue, final IssueResolutionAcceptor issueResolutionAcceptor) {\n\t\tAbstractFieldBuilder fieldBuilder = codeBuilderFactory.createFieldBuilder(containerType);\n\t\tfieldBuilder.setFieldName(name);\n\t\tfieldBuilder.setFieldType(fieldType);\n\t\tfieldBuilder.setContext(call);\n\t\tfieldBuilder.setVisibility(JvmVisibility.PRIVATE);\n\t\tStringBuilder label = new StringBuilder(\"Create field '\").append(name).append(\"'\");\n\t\tquickfixFactory.addQuickfix(fieldBuilder, label.toString(), issue, issueResolutionAcceptor);\n\t}","id":13245,"modified_method":"protected void newFieldQuickfix(JvmDeclaredType containerType, String name, @Nullable JvmTypeReference fieldType,\n\t\t\tboolean isStatic, XAbstractFeatureCall call, final Issue issue, final IssueResolutionAcceptor issueResolutionAcceptor) {\n\t\tAbstractFieldBuilder fieldBuilder = codeBuilderFactory.createFieldBuilder(containerType);\n\t\tfieldBuilder.setFieldName(name);\n\t\tfieldBuilder.setFieldType(fieldType);\n\t\tfieldBuilder.setContext(call);\n\t\tfieldBuilder.setVisibility(JvmVisibility.PRIVATE);\n\t\tfieldBuilder.setStaticFlag(isStatic);\n\t\tStringBuilder label = new StringBuilder(\"Create \");\n\t\tif(isStatic) \n\t\t\tlabel.append(\"static \");\n\t\tlabel.append(\"field '\").append(name).append(\"'\");\n\t\tquickfixFactory.addQuickfix(fieldBuilder, label.toString(), issue, issueResolutionAcceptor);\n\t}","commit_id":"20467ec3acd3351717dd18050b6c251b24899575","url":"https://github.com/eclipse/xtext"},{"original_method":"protected void newMethodQuickfix(JvmDeclaredType containerType, String name, @Nullable JvmTypeReference returnType,\n\t\tList<JvmTypeReference> parameterTypes, boolean isExtension, boolean isLocal, XAbstractFeatureCall call, \n\t\tfinal Issue issue, final IssueResolutionAcceptor issueResolutionAcceptor) {\n\t\tAbstractMethodBuilder methodBuilder = codeBuilderFactory.createMethodBuilder(containerType);\n\t\tmethodBuilder.setMethodName(name);\n\t\tmethodBuilder.setReturnType(returnType);\n\t\tmethodBuilder.setParameterTypes(parameterTypes);\n\t\tmethodBuilder.setContext(call);\n\t\tmethodBuilder.setVisibility(JvmVisibility.PUBLIC);\n\t\tStringBuffer label = new StringBuffer(\"Create \");\n\t\tif(isExtension)\n\t\t\tlabel.append(\"extension \");\n\t\tlabel.append(\"method '\").append(name).append(\"(\");\n\t\tboolean isFirst = true;\n\t\tfor(JvmTypeReference parameterType: parameterTypes) {\n\t\t\tif(!isFirst) \n\t\t\t\tlabel.append(\", \");\n\t\t\tisFirst = false;\n\t\t\tlabel.append(parameterType.getSimpleName());\n\t\t}\n\t\tlabel.append(\")'\");\n\t\tif(!isLocal)\n\t\t\tlabel.append(\" in '\" + containerType.getSimpleName() + \"'\");\n\t\tquickfixFactory.addQuickfix(methodBuilder, label.toString(), issue, issueResolutionAcceptor);\n\t}","id":13246,"modified_method":"protected void newMethodQuickfix(JvmDeclaredType containerType, String name, @Nullable JvmTypeReference returnType,\n\t\tList<JvmTypeReference> parameterTypes, boolean isStatic, boolean isExtension, boolean isLocal, XAbstractFeatureCall call, \n\t\tfinal Issue issue, final IssueResolutionAcceptor issueResolutionAcceptor) {\n\t\tAbstractMethodBuilder methodBuilder = codeBuilderFactory.createMethodBuilder(containerType);\n\t\tmethodBuilder.setMethodName(name);\n\t\tmethodBuilder.setReturnType(returnType);\n\t\tmethodBuilder.setParameterTypes(parameterTypes);\n\t\tmethodBuilder.setContext(call);\n\t\tmethodBuilder.setVisibility(JvmVisibility.PUBLIC);\n\t\tmethodBuilder.setStaticFlag(isStatic);\n\t\tStringBuffer label = new StringBuffer(\"Create \");\n\t\tif(isStatic)\n\t\t\tlabel.append(\"static \");\n\t\tif(isExtension)\n\t\t\tlabel.append(\"extension \");\n\t\tlabel.append(\"method '\").append(name).append(\"(\");\n\t\tboolean isFirst = true;\n\t\tfor(JvmTypeReference parameterType: parameterTypes) {\n\t\t\tif(!isFirst) \n\t\t\t\tlabel.append(\", \");\n\t\t\tisFirst = false;\n\t\t\tlabel.append(parameterType.getSimpleName());\n\t\t}\n\t\tlabel.append(\")'\");\n\t\tif(!isLocal)\n\t\t\tlabel.append(\" in '\" + containerType.getSimpleName() + \"'\");\n\t\tquickfixFactory.addQuickfix(methodBuilder, label.toString(), issue, issueResolutionAcceptor);\n\t}","commit_id":"20467ec3acd3351717dd18050b6c251b24899575","url":"https://github.com/eclipse/xtext"},{"original_method":"protected void newFieldQuickfix(String name, XAbstractFeatureCall call, \n\t\t\tfinal Issue issue, final IssueResolutionAcceptor issueResolutionAcceptor) {\n\t\tJvmDeclaredType callersType = getCallersType(call);\n\t\tJvmTypeReference receiverType = getReceiverType(call);\n\t\tJvmTypeReference fieldType = getNewMemberType(call);\n\t\tif(callersType != null && receiverType != null && callersType == receiverType.getType()) \n\t\t\tnewFieldQuickfix(callersType, name, fieldType, call, issue, issueResolutionAcceptor);\n\t}","id":13247,"modified_method":"protected void newFieldQuickfix(String name, XAbstractFeatureCall call, \n\t\t\tfinal Issue issue, final IssueResolutionAcceptor issueResolutionAcceptor) {\n\t\tJvmDeclaredType callersType = getCallersType(call);\n\t\tJvmTypeReference receiverType = getReceiverType(call);\n\t\tJvmTypeReference fieldType = getNewMemberType(call);\n\t\tif(callersType != null && receiverType != null && callersType == receiverType.getType()) \n\t\t\tnewFieldQuickfix(callersType, name, fieldType, isStaticAccess(call), call, issue, issueResolutionAcceptor);\n\t}","commit_id":"20467ec3acd3351717dd18050b6c251b24899575","url":"https://github.com/eclipse/xtext"},{"original_method":"public IAppendable build(final IAppendable appendable) {\n    JvmVisibility _visibility = this.getVisibility();\n    IAppendable _appendVisibility = this.appendVisibility(appendable, _visibility, JvmVisibility.DEFAULT);\n    JvmTypeReference _fieldType = this.getFieldType();\n    IAppendable _appendType = this.appendType(_appendVisibility, _fieldType, \"Object\");\n    IAppendable _append = _appendType.append(\" \");\n    String _fieldName = this.getFieldName();\n    IAppendable _append_1 = _append.append(_fieldName);\n    IAppendable _append_2 = _append_1.append(\";\");\n    return _append_2;\n  }","id":13248,"modified_method":"public IAppendable build(final IAppendable appendable) {\n    IAppendable _xblockexpression = null;\n    {\n      JvmVisibility _visibility = this.getVisibility();\n      this.appendVisibility(appendable, _visibility, JvmVisibility.DEFAULT);\n      boolean _isStaticFlag = this.isStaticFlag();\n      if (_isStaticFlag) {\n        appendable.append(\"static \");\n      }\n      JvmTypeReference _fieldType = this.getFieldType();\n      IAppendable _appendType = this.appendType(appendable, _fieldType, \"Object\");\n      IAppendable _append = _appendType.append(\" \");\n      String _fieldName = this.getFieldName();\n      IAppendable _append_1 = _append.append(_fieldName);\n      IAppendable _append_2 = _append_1.append(\";\");\n      _xblockexpression = (_append_2);\n    }\n    return _xblockexpression;\n  }","commit_id":"20467ec3acd3351717dd18050b6c251b24899575","url":"https://github.com/eclipse/xtext"},{"original_method":"public IAppendable build(final IAppendable appendable) {\n    JvmVisibility _visibility = this.getVisibility();\n    IAppendable _appendVisibility = this.appendVisibility(appendable, _visibility, JvmVisibility.PRIVATE);\n    JvmTypeReference _returnType = this.getReturnType();\n    IAppendable _appendType = this.appendType(_appendVisibility, _returnType, \"void\");\n    IAppendable _append = _appendType.append(\" \");\n    String _methodName = this.getMethodName();\n    IAppendable _append_1 = _append.append(_methodName);\n    List<JvmTypeReference> _parameterTypes = this.getParameterTypes();\n    IAppendable _appendParameters = this.appendParameters(_append_1, _parameterTypes);\n    IAppendable _append_2 = _appendParameters.append(\" {\");\n    IAppendable _increaseIndentation = _append_2.increaseIndentation();\n    IAppendable _newLine = _increaseIndentation.newLine();\n    IAppendable _appendDefaultBody = this.appendDefaultBody(_newLine, \";\");\n    IAppendable _decreaseIndentation = _appendDefaultBody.decreaseIndentation();\n    IAppendable _newLine_1 = _decreaseIndentation.newLine();\n    IAppendable _append_3 = _newLine_1.append(\"}\");\n    return _append_3;\n  }","id":13249,"modified_method":"public IAppendable build(final IAppendable appendable) {\n    IAppendable _xblockexpression = null;\n    {\n      JvmVisibility _visibility = this.getVisibility();\n      this.appendVisibility(appendable, _visibility, JvmVisibility.DEFAULT);\n      boolean _isStaticFlag = this.isStaticFlag();\n      if (_isStaticFlag) {\n        appendable.append(\"static \");\n      }\n      JvmTypeReference _returnType = this.getReturnType();\n      IAppendable _appendType = this.appendType(appendable, _returnType, \"void\");\n      IAppendable _append = _appendType.append(\" \");\n      String _methodName = this.getMethodName();\n      IAppendable _append_1 = _append.append(_methodName);\n      List<JvmTypeReference> _parameterTypes = this.getParameterTypes();\n      IAppendable _appendParameters = this.appendParameters(_append_1, _parameterTypes);\n      IAppendable _append_2 = _appendParameters.append(\" {\");\n      IAppendable _increaseIndentation = _append_2.increaseIndentation();\n      IAppendable _newLine = _increaseIndentation.newLine();\n      IAppendable _appendDefaultBody = this.appendDefaultBody(_newLine, \";\");\n      IAppendable _decreaseIndentation = _appendDefaultBody.decreaseIndentation();\n      IAppendable _newLine_1 = _decreaseIndentation.newLine();\n      IAppendable _append_3 = _newLine_1.append(\"}\");\n      _xblockexpression = (_append_3);\n    }\n    return _xblockexpression;\n  }","commit_id":"20467ec3acd3351717dd18050b6c251b24899575","url":"https://github.com/eclipse/xtext"},{"original_method":"public boolean isValid() {\n    boolean _and = false;\n    boolean _and_1 = false;\n    boolean _isValid = super.isValid();\n    if (!_isValid) {\n      _and_1 = false;\n    } else {\n      String _methodName = this.getMethodName();\n      boolean _notEquals = ObjectExtensions.operator_notEquals(_methodName, null);\n      _and_1 = (_isValid && _notEquals);\n    }\n    if (!_and_1) {\n      _and = false;\n    } else {\n      JvmTypeReference _returnType = this.getReturnType();\n      boolean _notEquals_1 = ObjectExtensions.operator_notEquals(_returnType, null);\n      _and = (_and_1 && _notEquals_1);\n    }\n    return _and;\n  }","id":13250,"modified_method":"public boolean isValid() {\n    boolean _and = false;\n    boolean _isValid = super.isValid();\n    if (!_isValid) {\n      _and = false;\n    } else {\n      String _methodName = this.getMethodName();\n      boolean _notEquals = ObjectExtensions.operator_notEquals(_methodName, null);\n      _and = (_isValid && _notEquals);\n    }\n    return _and;\n  }","commit_id":"20467ec3acd3351717dd18050b6c251b24899575","url":"https://github.com/eclipse/xtext"},{"original_method":"public IAppendable build(final IAppendable appendable) {\n    JvmVisibility _visibility = this.getVisibility();\n    IAppendable _appendVisibility = this.appendVisibility(appendable, _visibility, JvmVisibility.PRIVATE);\n    JvmTypeReference _fieldType = this.getFieldType();\n    IAppendable _appendType = this.appendType(_appendVisibility, _fieldType, \"Object\");\n    IAppendable _append = _appendType.append(\" \");\n    String _fieldName = this.getFieldName();\n    IAppendable _append_1 = _append.append(_fieldName);\n    return _append_1;\n  }","id":13251,"modified_method":"public IAppendable build(final IAppendable appendable) {\n    IAppendable _xblockexpression = null;\n    {\n      JvmVisibility _visibility = this.getVisibility();\n      this.appendVisibility(appendable, _visibility, JvmVisibility.PRIVATE);\n      boolean _isStaticFlag = this.isStaticFlag();\n      if (_isStaticFlag) {\n        appendable.append(\"static \");\n      }\n      JvmTypeReference _fieldType = this.getFieldType();\n      IAppendable _appendType = this.appendType(appendable, _fieldType, \"Object\");\n      IAppendable _append = _appendType.append(\" \");\n      String _fieldName = this.getFieldName();\n      IAppendable _append_1 = _append.append(_fieldName);\n      _xblockexpression = (_append_1);\n    }\n    return _xblockexpression;\n  }","commit_id":"20467ec3acd3351717dd18050b6c251b24899575","url":"https://github.com/eclipse/xtext"},{"original_method":"public IAppendable build(final IAppendable appendable) {\n    IAppendable _append = appendable.append(\"def \");\n    JvmVisibility _visibility = this.getVisibility();\n    IAppendable _appendVisibility = this.appendVisibility(_append, _visibility, JvmVisibility.PUBLIC);\n    String _methodName = this.getMethodName();\n    IAppendable _append_1 = _appendVisibility.append(_methodName);\n    List<JvmTypeReference> _parameterTypes = this.getParameterTypes();\n    IAppendable _appendParameters = this.appendParameters(_append_1, _parameterTypes);\n    IAppendable _append_2 = _appendParameters.append(\" {\");\n    IAppendable _increaseIndentation = _append_2.increaseIndentation();\n    IAppendable _newLine = _increaseIndentation.newLine();\n    IAppendable _appendDefaultBody = this.appendDefaultBody(_newLine, \"\");\n    IAppendable _decreaseIndentation = _appendDefaultBody.decreaseIndentation();\n    IAppendable _newLine_1 = _decreaseIndentation.newLine();\n    IAppendable _append_3 = _newLine_1.append(\"}\");\n    return _append_3;\n  }","id":13252,"modified_method":"public IAppendable build(final IAppendable appendable) {\n    IAppendable _xblockexpression = null;\n    {\n      IAppendable _append = appendable.append(\"def \");\n      JvmVisibility _visibility = this.getVisibility();\n      this.appendVisibility(_append, _visibility, JvmVisibility.PUBLIC);\n      boolean _isStaticFlag = this.isStaticFlag();\n      if (_isStaticFlag) {\n        appendable.append(\"static \");\n      }\n      String _methodName = this.getMethodName();\n      IAppendable _append_1 = appendable.append(_methodName);\n      List<JvmTypeReference> _parameterTypes = this.getParameterTypes();\n      IAppendable _appendParameters = this.appendParameters(_append_1, _parameterTypes);\n      IAppendable _append_2 = _appendParameters.append(\" {\");\n      IAppendable _increaseIndentation = _append_2.increaseIndentation();\n      IAppendable _newLine = _increaseIndentation.newLine();\n      IAppendable _appendDefaultBody = this.appendDefaultBody(_newLine, \"\");\n      IAppendable _decreaseIndentation = _appendDefaultBody.decreaseIndentation();\n      IAppendable _newLine_1 = _decreaseIndentation.newLine();\n      IAppendable _append_3 = _newLine_1.append(\"}\");\n      _xblockexpression = (_append_3);\n    }\n    return _xblockexpression;\n  }","commit_id":"20467ec3acd3351717dd18050b6c251b24899575","url":"https://github.com/eclipse/xtext"},{"original_method":"void invokeRpcs() throws Throwable {\n        if(num_threads > 1 && num_msgs % num_threads != 0) {\n            System.err.println(\"num_msgs (\" + num_msgs + \" ) has to be divisible by num_threads (\" + num_threads + \")\");\n            return;\n        }\n\n        if(anycasting) {\n            populateAnycastList(channel.getView());\n        }\n        else {\n            if((destination=getReceiver()) == null) {\n                System.err.println(\"UnicastTest.invokeRpcs(): receiver is null, cannot send messages\");\n                return;\n            }\n        }\n\n        System.out.println(\"invoking \" + num_msgs + \" RPCs of \" + Util.printBytes(msg_size) + \" on \" +\n                (anycasting? anycast_mbrs : destination) + \", sync=\" + sync + \", oob=\" + oob + \", anycasting=\" + anycasting);\n\n        // The first call needs to be synchronous with OOB !\n        RequestOptions options=new RequestOptions(Request.GET_ALL, 0, anycasting, null);\n        if(sync) options.setFlags(Message.DONT_BUNDLE);\n        if(oob) options.setFlags(Message.OOB);\n\n        if(anycasting)\n            disp.callRemoteMethods(anycast_mbrs, new MethodCall((short)0, new Object[]{num_msgs}), options);\n        else\n            disp.callRemoteMethod(destination, new MethodCall((short)0, new Object[]{num_msgs}), options);\n        options.setMode(sync? Request.GET_ALL : Request.GET_NONE);\n\n        Invoker[] invokers=new Invoker[num_threads];\n        for(int i=0; i < invokers.length; i++) {\n            if(anycasting)\n                invokers[i]=new Invoker(anycast_mbrs, options, num_msgs / num_threads);\n            else\n                invokers[i]=new Invoker(destination, options, num_msgs / num_threads);\n        }\n        for(Invoker invoker: invokers)\n            invoker.start();\n        for(Invoker invoker: invokers)\n            invoker.join();\n\n        System.out.println(\"done invoking \" + num_msgs + \" in \" + destination);\n    }","id":13253,"modified_method":"void invokeRpcs() throws Throwable {\n        if(num_threads > 1 && num_msgs % num_threads != 0) {\n            System.err.println(\"num_msgs (\" + num_msgs + \" ) has to be divisible by num_threads (\" + num_threads + \")\");\n            return;\n        }\n\n        if(anycasting) {\n            populateAnycastList(channel.getView());\n        }\n        else {\n            if((destination=getReceiver()) == null) {\n                System.err.println(\"UnicastTest.invokeRpcs(): receiver is null, cannot send messages\");\n                return;\n            }\n        }\n\n        System.out.println(\"invoking \" + num_msgs + \" RPCs of \" + Util.printBytes(msg_size) + \" on \" +\n                (anycasting? anycast_mbrs : destination) + \", sync=\" + sync + \", oob=\" + oob + \", anycasting=\" + anycasting);\n\n        // The first call needs to be synchronous with OOB !\n        RequestOptions options=new RequestOptions(Request.GET_ALL, 0, anycasting, null);\n        if(sync) options.setFlags(Message.DONT_BUNDLE);\n        if(oob) options.setFlags(Message.OOB);\n\n        if(anycasting)\n            disp.callRemoteMethods(anycast_mbrs, new MethodCall(START, num_msgs), options);\n        else\n            disp.callRemoteMethod(destination, new MethodCall(START, num_msgs), options);\n        options.setMode(sync? Request.GET_ALL : Request.GET_NONE);\n\n        Invoker[] invokers=new Invoker[num_threads];\n        for(int i=0; i < invokers.length; i++) {\n            if(anycasting)\n                invokers[i]=new Invoker(anycast_mbrs, options, num_msgs / num_threads);\n            else\n                invokers[i]=new Invoker(destination, options, num_msgs / num_threads);\n        }\n        for(Invoker invoker: invokers)\n            invoker.start();\n        for(Invoker invoker: invokers)\n            invoker.join();\n\n        System.out.println(\"done invoking \" + num_msgs + \" in \" + destination);\n    }","commit_id":"2538b29962926fc9ad4c97bc76566c053c0feba7","url":"https://github.com/belaban/JGroups"},{"original_method":"void setAnycastCount() throws Exception {\n        int tmp=Util.readIntFromStdin(\"Anycast count: \");\n        View view=channel.getView();\n        if(tmp > view.size()) {\n            System.err.println(\"anycast count must be smaller or equal to the view size (\" + view + \")\\n\");\n            return;\n        }\n\n        anycast_count=tmp;\n        System.out.println(\"set anycast_count=\" + anycast_count);\n    }","id":13254,"modified_method":"void setAnycastCount() throws Exception {\n        int tmp=Util.readIntFromStdin(\"Anycast count: \");\n        View view=channel.getView();\n        if(tmp > view.size()) {\n            System.err.println(\"anycast count must be smaller or equal to the view size (\" + view + \")\\n\");\n            return;\n        }\n        disp.callRemoteMethods(null, new MethodCall(SET_ANYCAST_COUNT, tmp), RequestOptions.SYNC);\n    }","commit_id":"2538b29962926fc9ad4c97bc76566c053c0feba7","url":"https://github.com/belaban/JGroups"},{"original_method":"public byte[] objectToByteBuffer(Object obj) throws Exception {\n            MethodCall call=(MethodCall)obj;\n            if(call.getId() == 0) {\n                Integer arg=(Integer)call.getArgs()[0];\n                ByteBuffer buf=ByteBuffer.allocate(Global.BYTE_SIZE + Global.INT_SIZE);\n                buf.put((byte)0).putInt(arg);\n                return buf.array();\n            }\n            else if(call.getId() == 1) {\n                Long arg=(Long)call.getArgs()[0];\n                byte[] arg2=(byte[])call.getArgs()[1];\n                ByteBuffer buf=ByteBuffer.allocate(Global.BYTE_SIZE + Global.INT_SIZE + Global.LONG_SIZE + arg2.length);\n                buf.put((byte)1).putLong(arg).putInt(arg2.length).put(arg2, 0, arg2.length);\n                return buf.array();\n            }\n            else\n                throw new IllegalStateException(\"method \" + call.getMethod() + \" not known\");\n        }","id":13255,"modified_method":"public byte[] objectToByteBuffer(Object obj) throws Exception {\n            MethodCall call=(MethodCall)obj;\n            ByteBuffer buf;\n            switch(call.getId()) {\n                case RECEIVE:\n                    return intBuffer(RECEIVE, (Integer)call.getArgs()[0]);\n                case START:\n                    Long long_arg=(Long)call.getArgs()[0];\n                    byte[] arg2=(byte[])call.getArgs()[1];\n                    buf=ByteBuffer.allocate(Global.BYTE_SIZE + Global.INT_SIZE + Global.LONG_SIZE + arg2.length);\n                    buf.put((byte)START).putLong(long_arg).putInt(arg2.length).put(arg2, 0, arg2.length);\n                    return buf.array();\n                case SET_OOB:\n                case SET_SYNC:\n                case SET_ANYCASTING:\n                    return booleanBuffer(call.getId(), (Boolean)call.getArgs()[0]);\n                case SET_NUM_MSGS:\n                case SET_NUM_THREADS:\n                case SET_MSG_SIZE:\n                case SET_ANYCAST_COUNT:\n                    return intBuffer(call.getId(), (Integer)call.getArgs()[0]);\n                default:\n                    throw new IllegalStateException(\"method \" + call.getMethod() + \" not known\");\n            }\n        }","commit_id":"2538b29962926fc9ad4c97bc76566c053c0feba7","url":"https://github.com/belaban/JGroups"},{"original_method":"void setNumMessages() throws Exception {\n        num_msgs=Util.readIntFromStdin(\"Number of RPCs: \");\n        System.out.println(\"Set num_msgs=\" + num_msgs);\n        print=num_msgs / 10;\n    }","id":13256,"modified_method":"void setNumMessages() throws Exception {\n        int tmp=Util.readIntFromStdin(\"Number of RPCs: \");\n        disp.callRemoteMethods(null, new MethodCall(SET_NUM_MSGS, tmp), RequestOptions.SYNC);\n    }","commit_id":"2538b29962926fc9ad4c97bc76566c053c0feba7","url":"https://github.com/belaban/JGroups"},{"original_method":"public void eventLoop() throws Throwable {\n        int c;\n\n        while(true) {\n            System.out.print(\"[1] Send msgs [2] Print view [3] Print conns \" +\n                    \"[4] Trash conn [5] Trash all conns\" +\n                    \"\\n[6] Set sender threads (\" + num_threads + \") [7] Set num msgs (\" + num_msgs + \") \" +\n                    \"[8] Set msg size (\" + Util.printBytes(msg_size) + \")\" +\n                    \" [9] Set anycast count (\" + anycast_count + \")\" +\n                    \"\\n[o] Toggle OOB (\" + oob + \") [s] Toggle sync (\" + sync + \") [a] Toggle anycasting (\" + anycasting + \")\" +\n                    \"\\n[q] Quit\\n\");\n            System.out.flush();\n            c=System.in.read();\n            switch(c) {\n            case -1:\n                break;\n            case '1':\n                try {\n                    invokeRpcs();\n                }\n                catch(Throwable t) {\n                    System.err.println(t);\n                }\n                break;\n            case '2':\n                printView();\n                break;\n            case '3':\n                printConnections();\n                break;\n            case '4':\n                removeConnection();\n                break;\n            case '5':\n                removeAllConnections();\n                break;\n            case '6':\n                setSenderThreads();\n                break;\n            case '7':\n                setNumMessages();\n                break;\n            case '8':\n                setMessageSize();\n                break;\n            case '9':\n                setAnycastCount();\n                break;\n            case 'o':\n                oob=!oob;\n                System.out.println(\"oob=\" + oob);\n                break;\n            case 's':\n                sync=!sync;\n                System.out.println(\"sync=\" + sync);\n                break;\n            case 'a':\n                anycasting=!anycasting;\n                System.out.println(\"anycasting=\" + anycasting);\n                break;\n            case 'q':\n                channel.close();\n                return;\n            default:\n                break;\n            }\n        }\n    }","id":13257,"modified_method":"public void eventLoop() throws Throwable {\n        int c;\n\n        while(true) {\n            c=Util.keyPress(\"[1] Send msgs [2] Print view [3] Print conns \" +\n                    \"[4] Trash conn [5] Trash all conns\" +\n                    \"\\n[6] Set sender threads (\" + num_threads + \") [7] Set num msgs (\" + num_msgs + \") \" +\n                    \"[8] Set msg size (\" + Util.printBytes(msg_size) + \")\" +\n                    \" [9] Set anycast count (\" + anycast_count + \")\" +\n                    \"\\n[o] Toggle OOB (\" + oob + \") [s] Toggle sync (\" + sync + \") [a] Toggle anycasting (\" + anycasting + \")\" +\n                    \"\\n[q] Quit\\n\");\n            switch(c) {\n                case -1:\n                    break;\n                case '1':\n                    try {\n                        invokeRpcs();\n                    }\n                    catch(Throwable t) {\n                        System.err.println(t);\n                    }\n                    break;\n                case '2':\n                    printView();\n                    break;\n                case '3':\n                    printConnections();\n                    break;\n                case '4':\n                    removeConnection();\n                    break;\n                case '5':\n                    removeAllConnections();\n                    break;\n                case '6':\n                    setSenderThreads();\n                    break;\n                case '7':\n                    setNumMessages();\n                    break;\n                case '8':\n                    setMessageSize();\n                    break;\n                case '9':\n                    setAnycastCount();\n                    break;\n                case 'o':\n                    boolean new_value=!oob;\n                    disp.callRemoteMethods(null, new MethodCall(SET_OOB, new_value), RequestOptions.SYNC);\n                    break;\n                case 's':\n                    boolean new_val=!sync;\n                    disp.callRemoteMethods(null, new MethodCall(SET_SYNC, new_val), RequestOptions.SYNC);\n                    break;\n                case 'a':\n                    new_val=!anycasting;\n                    disp.callRemoteMethods(null, new MethodCall(SET_ANYCASTING, new_val), RequestOptions.SYNC);\n                    break;\n                case 'q':\n                    channel.close();\n                    return;\n                case '\\n':\n                case '\\r':\n                    break;\n                default:\n                    break;\n            }\n        }\n    }","commit_id":"2538b29962926fc9ad4c97bc76566c053c0feba7","url":"https://github.com/belaban/JGroups"},{"original_method":"public void run() {\n            byte[] buf=new byte[msg_size];\n            Object[] args=new Object[]{0, buf};\n            MethodCall call=new MethodCall((short)1, args);\n\n            //if(anycasting && sync)\n               //  options.setMode(Request.GET_FIRST);\n\n            for(int i=1; i <= number_of_msgs; i++) {\n                Object retval=null;\n                try {\n                    long start=System.currentTimeMillis();\n                    args[0]=start;\n                    if(dests != null)\n                        disp.callRemoteMethods(dests, call, options);\n                    else\n                        retval=disp.callRemoteMethod(dest, call, options);\n                    long current_time=System.currentTimeMillis();\n                    long diff=current_time - start;\n                    total_req+=diff;\n\n                    if(sync) {\n                        if(retval instanceof Long) {\n                            diff=System.currentTimeMillis() - (Long)retval;\n                            total_rsp+=diff;\n                        }\n                    }\n\n                    if(print > 0 && i % print == 0)\n                        System.out.println(\"-- invoked \" + i);\n                    if(sleep_time > 0)\n                        Util.sleep(sleep_time);\n                }\n                catch(Throwable throwable) {\n                    throwable.printStackTrace();\n                }\n            }\n\n            double time_per_req=total_req / (double)number_of_msgs;\n            System.out.println(\"\\ninvoked \" + number_of_msgs + \" requests in \" + total_req + \" ms: \" + time_per_req +\n                    \" ms / req (entire request)\");\n\n            if(sync) {\n                double time_per_rsp=total_rsp / (double)number_of_msgs;\n                System.out.println(\"received \" + number_of_msgs + \" responses in \" + total_rsp + \" ms: \" + time_per_rsp +\n                        \" ms / rsp (only response)\\n\");\n            }\n\n\n        }","id":13258,"modified_method":"public void run() {\n            byte[] buf=new byte[msg_size];\n            Object[] args=new Object[]{0, buf};\n            MethodCall call=new MethodCall(RECEIVE, args);\n\n            //if(anycasting && sync)\n               //  options.setMode(Request.GET_FIRST);\n\n            for(int i=1; i <= number_of_msgs; i++) {\n                Object retval=null;\n                try {\n                    long start=System.currentTimeMillis();\n                    args[0]=start;\n                    if(dests != null)\n                        disp.callRemoteMethods(dests, call, options);\n                    else\n                        retval=disp.callRemoteMethod(dest, call, options);\n                    long current_time=System.currentTimeMillis();\n                    long diff=current_time - start;\n                    total_req+=diff;\n\n                    if(sync) {\n                        if(retval instanceof Long) {\n                            diff=System.currentTimeMillis() - (Long)retval;\n                            total_rsp+=diff;\n                        }\n                    }\n\n                    if(print > 0 && i % print == 0)\n                        System.out.println(\"-- invoked \" + i);\n                    if(sleep_time > 0)\n                        Util.sleep(sleep_time);\n                }\n                catch(Throwable throwable) {\n                    throwable.printStackTrace();\n                }\n            }\n\n            double time_per_req=total_req / (double)number_of_msgs;\n            System.out.println(\"\\ninvoked \" + number_of_msgs + \" requests in \" + total_req + \" ms: \" + time_per_req +\n                    \" ms / req (entire request)\");\n\n            if(sync) {\n                double time_per_rsp=total_rsp / (double)number_of_msgs;\n                System.out.println(\"received \" + number_of_msgs + \" responses in \" + total_rsp + \" ms: \" + time_per_rsp +\n                        \" ms / rsp (only response)\\n\");\n            }\n\n\n        }","commit_id":"2538b29962926fc9ad4c97bc76566c053c0feba7","url":"https://github.com/belaban/JGroups"},{"original_method":"void setMessageSize() throws Exception {\n        msg_size=Util.readIntFromStdin(\"Message size: \");\n        System.out.println(\"set msg_size=\" + msg_size);\n    }","id":13259,"modified_method":"void setMessageSize() throws Exception {\n        int tmp=Util.readIntFromStdin(\"Message size: \");\n        disp.callRemoteMethods(null, new MethodCall(SET_MSG_SIZE, tmp), RequestOptions.SYNC);\n    }","commit_id":"2538b29962926fc9ad4c97bc76566c053c0feba7","url":"https://github.com/belaban/JGroups"},{"original_method":"void setSenderThreads() throws Exception {\n        int threads=Util.readIntFromStdin(\"Number of sender threads: \");\n        int old=this.num_threads;\n        this.num_threads=threads;\n        System.out.println(\"sender threads set to \" + num_threads + \" (from \" + old + \")\");\n    }","id":13260,"modified_method":"void setSenderThreads() throws Exception {\n        int threads=Util.readIntFromStdin(\"Number of sender threads: \");\n        disp.callRemoteMethods(null, new MethodCall(SET_NUM_THREADS, threads), RequestOptions.SYNC);\n    }","commit_id":"2538b29962926fc9ad4c97bc76566c053c0feba7","url":"https://github.com/belaban/JGroups"},{"original_method":"public Object objectFromByteBuffer(byte[] buffer) throws Exception {\n            ByteBuffer buf=ByteBuffer.wrap(buffer);\n\n            byte type=buf.get();\n            switch(type) {\n                case 0:\n                    int arg=buf.getInt();\n                    return new MethodCall((short)0, new Object[]{arg});\n                case 1:\n                    Long longarg=buf.getLong();\n                    int len=buf.getInt();\n                    byte[] arg2=new byte[len];\n                    buf.get(arg2, 0, arg2.length);\n                    return new MethodCall((short)1, new Object[]{longarg, arg2});\n                default:\n                    throw new IllegalStateException(\"type \" + type + \" not known\");\n            }\n        }","id":13261,"modified_method":"public Object objectFromByteBuffer(byte[] buffer) throws Exception {\n            ByteBuffer buf=ByteBuffer.wrap(buffer);\n\n            byte type=buf.get();\n            switch(type) {\n                case RECEIVE:\n                    int arg=buf.getInt();\n                    return new MethodCall(type, arg);\n                case START:\n                    Long longarg=buf.getLong();\n                    int len=buf.getInt();\n                    byte[] arg2=new byte[len];\n                    buf.get(arg2, 0, arg2.length);\n                    return new MethodCall(type, longarg, arg2);\n                case SET_OOB:\n                case SET_SYNC:\n                case SET_ANYCASTING:\n                    return new MethodCall(type, buf.get() == 1);\n                case SET_NUM_MSGS:\n                case SET_NUM_THREADS:\n                case SET_MSG_SIZE:\n                case SET_ANYCAST_COUNT:\n                    return new MethodCall(type, buf.getInt());\n                default:\n                    throw new IllegalStateException(\"type \" + type + \" not known\");\n            }\n        }","commit_id":"2538b29962926fc9ad4c97bc76566c053c0feba7","url":"https://github.com/belaban/JGroups"},{"original_method":"void setNumMessages() throws Exception {\n        num_msgs=Util.readIntFromStdin(\"Number of RPCs: \");\n        System.out.println(\"Set num_msgs=\" + num_msgs);\n        print=num_msgs / 10;\n    }","id":13262,"modified_method":"void setNumMessages() throws Exception {\n        int tmp=Util.readIntFromStdin(\"Number of RPCs: \");\n        disp.callRemoteMethods(null, new MethodCall(SET_NUM_MSGS, tmp), RequestOptions.SYNC);\n    }","commit_id":"cb2d1dc46f1c4f1a17cdec466038a22d91c1976d","url":"https://github.com/belaban/JGroups"},{"original_method":"void invokeRpcs() throws Throwable {\n        if(num_threads > 1 && num_msgs % num_threads != 0) {\n            System.err.println(\"num_msgs (\" + num_msgs + \" ) has to be divisible by num_threads (\" + num_threads + \")\");\n            return;\n        }\n\n        if(anycasting) {\n            populateAnycastList(channel.getView());\n        }\n        else {\n            if((destination=getReceiver()) == null) {\n                System.err.println(\"UnicastTest.invokeRpcs(): receiver is null, cannot send messages\");\n                return;\n            }\n        }\n\n        System.out.println(\"invoking \" + num_msgs + \" RPCs of \" + Util.printBytes(msg_size) + \" on \" +\n                (anycasting? anycast_mbrs : destination) + \", sync=\" + sync + \", oob=\" + oob + \", anycasting=\" + anycasting);\n\n        // The first call needs to be synchronous with OOB !\n        RequestOptions options=new RequestOptions(Request.GET_ALL, 0, anycasting, null);\n        if(sync) options.setFlags(Message.DONT_BUNDLE);\n        if(oob) options.setFlags(Message.OOB);\n\n        if(anycasting)\n            disp.callRemoteMethods(anycast_mbrs, new MethodCall((short)0, new Object[]{num_msgs}), options);\n        else\n            disp.callRemoteMethod(destination, new MethodCall((short)0, new Object[]{num_msgs}), options);\n        options.setMode(sync? Request.GET_ALL : Request.GET_NONE);\n\n        Invoker[] invokers=new Invoker[num_threads];\n        for(int i=0; i < invokers.length; i++) {\n            if(anycasting)\n                invokers[i]=new Invoker(anycast_mbrs, options, num_msgs / num_threads);\n            else\n                invokers[i]=new Invoker(destination, options, num_msgs / num_threads);\n        }\n        for(Invoker invoker: invokers)\n            invoker.start();\n        for(Invoker invoker: invokers)\n            invoker.join();\n\n        System.out.println(\"done invoking \" + num_msgs + \" in \" + destination);\n    }","id":13263,"modified_method":"void invokeRpcs() throws Throwable {\n        if(num_threads > 1 && num_msgs % num_threads != 0) {\n            System.err.println(\"num_msgs (\" + num_msgs + \" ) has to be divisible by num_threads (\" + num_threads + \")\");\n            return;\n        }\n\n        if(anycasting) {\n            populateAnycastList(channel.getView());\n        }\n        else {\n            if((destination=getReceiver()) == null) {\n                System.err.println(\"UnicastTest.invokeRpcs(): receiver is null, cannot send messages\");\n                return;\n            }\n        }\n\n        System.out.println(\"invoking \" + num_msgs + \" RPCs of \" + Util.printBytes(msg_size) + \" on \" +\n                (anycasting? anycast_mbrs : destination) + \", sync=\" + sync + \", oob=\" + oob + \", anycasting=\" + anycasting);\n\n        // The first call needs to be synchronous with OOB !\n        RequestOptions options=new RequestOptions(Request.GET_ALL, 0, anycasting, null);\n        if(sync) options.setFlags(Message.DONT_BUNDLE);\n        if(oob) options.setFlags(Message.OOB);\n\n        if(anycasting)\n            disp.callRemoteMethods(anycast_mbrs, new MethodCall(START, num_msgs), options);\n        else\n            disp.callRemoteMethod(destination, new MethodCall(START, num_msgs), options);\n        options.setMode(sync? Request.GET_ALL : Request.GET_NONE);\n\n        Invoker[] invokers=new Invoker[num_threads];\n        for(int i=0; i < invokers.length; i++) {\n            if(anycasting)\n                invokers[i]=new Invoker(anycast_mbrs, options, num_msgs / num_threads);\n            else\n                invokers[i]=new Invoker(destination, options, num_msgs / num_threads);\n        }\n        for(Invoker invoker: invokers)\n            invoker.start();\n        for(Invoker invoker: invokers)\n            invoker.join();\n\n        System.out.println(\"done invoking \" + num_msgs + \" in \" + destination);\n    }","commit_id":"cb2d1dc46f1c4f1a17cdec466038a22d91c1976d","url":"https://github.com/belaban/JGroups"},{"original_method":"public Object objectFromByteBuffer(byte[] buffer) throws Exception {\n            ByteBuffer buf=ByteBuffer.wrap(buffer);\n\n            byte type=buf.get();\n            switch(type) {\n                case 0:\n                    int arg=buf.getInt();\n                    return new MethodCall((short)0, new Object[]{arg});\n                case 1:\n                    Long longarg=buf.getLong();\n                    int len=buf.getInt();\n                    byte[] arg2=new byte[len];\n                    buf.get(arg2, 0, arg2.length);\n                    return new MethodCall((short)1, new Object[]{longarg, arg2});\n                default:\n                    throw new IllegalStateException(\"type \" + type + \" not known\");\n            }\n        }","id":13264,"modified_method":"public Object objectFromByteBuffer(byte[] buffer) throws Exception {\n            ByteBuffer buf=ByteBuffer.wrap(buffer);\n\n            byte type=buf.get();\n            switch(type) {\n                case RECEIVE:\n                    int arg=buf.getInt();\n                    return new MethodCall(type, arg);\n                case START:\n                    Long longarg=buf.getLong();\n                    int len=buf.getInt();\n                    byte[] arg2=new byte[len];\n                    buf.get(arg2, 0, arg2.length);\n                    return new MethodCall(type, longarg, arg2);\n                case SET_OOB:\n                case SET_SYNC:\n                case SET_ANYCASTING:\n                    return new MethodCall(type, buf.get() == 1);\n                case SET_NUM_MSGS:\n                case SET_NUM_THREADS:\n                case SET_MSG_SIZE:\n                case SET_ANYCAST_COUNT:\n                    return new MethodCall(type, buf.getInt());\n                default:\n                    throw new IllegalStateException(\"type \" + type + \" not known\");\n            }\n        }","commit_id":"cb2d1dc46f1c4f1a17cdec466038a22d91c1976d","url":"https://github.com/belaban/JGroups"},{"original_method":"public byte[] objectToByteBuffer(Object obj) throws Exception {\n            MethodCall call=(MethodCall)obj;\n            if(call.getId() == 0) {\n                Integer arg=(Integer)call.getArgs()[0];\n                ByteBuffer buf=ByteBuffer.allocate(Global.BYTE_SIZE + Global.INT_SIZE);\n                buf.put((byte)0).putInt(arg);\n                return buf.array();\n            }\n            else if(call.getId() == 1) {\n                Long arg=(Long)call.getArgs()[0];\n                byte[] arg2=(byte[])call.getArgs()[1];\n                ByteBuffer buf=ByteBuffer.allocate(Global.BYTE_SIZE + Global.INT_SIZE + Global.LONG_SIZE + arg2.length);\n                buf.put((byte)1).putLong(arg).putInt(arg2.length).put(arg2, 0, arg2.length);\n                return buf.array();\n            }\n            else\n                throw new IllegalStateException(\"method \" + call.getMethod() + \" not known\");\n        }","id":13265,"modified_method":"public byte[] objectToByteBuffer(Object obj) throws Exception {\n            MethodCall call=(MethodCall)obj;\n            ByteBuffer buf;\n            switch(call.getId()) {\n                case RECEIVE:\n                    return intBuffer(RECEIVE, (Integer)call.getArgs()[0]);\n                case START:\n                    Long long_arg=(Long)call.getArgs()[0];\n                    byte[] arg2=(byte[])call.getArgs()[1];\n                    buf=ByteBuffer.allocate(Global.BYTE_SIZE + Global.INT_SIZE + Global.LONG_SIZE + arg2.length);\n                    buf.put((byte)START).putLong(long_arg).putInt(arg2.length).put(arg2, 0, arg2.length);\n                    return buf.array();\n                case SET_OOB:\n                case SET_SYNC:\n                case SET_ANYCASTING:\n                    return booleanBuffer(call.getId(), (Boolean)call.getArgs()[0]);\n                case SET_NUM_MSGS:\n                case SET_NUM_THREADS:\n                case SET_MSG_SIZE:\n                case SET_ANYCAST_COUNT:\n                    return intBuffer(call.getId(), (Integer)call.getArgs()[0]);\n                default:\n                    throw new IllegalStateException(\"method \" + call.getMethod() + \" not known\");\n            }\n        }","commit_id":"cb2d1dc46f1c4f1a17cdec466038a22d91c1976d","url":"https://github.com/belaban/JGroups"},{"original_method":"void setMessageSize() throws Exception {\n        msg_size=Util.readIntFromStdin(\"Message size: \");\n        System.out.println(\"set msg_size=\" + msg_size);\n    }","id":13266,"modified_method":"void setMessageSize() throws Exception {\n        int tmp=Util.readIntFromStdin(\"Message size: \");\n        disp.callRemoteMethods(null, new MethodCall(SET_MSG_SIZE, tmp), RequestOptions.SYNC);\n    }","commit_id":"cb2d1dc46f1c4f1a17cdec466038a22d91c1976d","url":"https://github.com/belaban/JGroups"},{"original_method":"public void run() {\n            byte[] buf=new byte[msg_size];\n            Object[] args=new Object[]{0, buf};\n            MethodCall call=new MethodCall((short)1, args);\n\n            //if(anycasting && sync)\n               //  options.setMode(Request.GET_FIRST);\n\n            for(int i=1; i <= number_of_msgs; i++) {\n                Object retval=null;\n                try {\n                    long start=System.currentTimeMillis();\n                    args[0]=start;\n                    if(dests != null)\n                        disp.callRemoteMethods(dests, call, options);\n                    else\n                        retval=disp.callRemoteMethod(dest, call, options);\n                    long current_time=System.currentTimeMillis();\n                    long diff=current_time - start;\n                    total_req+=diff;\n\n                    if(sync) {\n                        if(retval instanceof Long) {\n                            diff=System.currentTimeMillis() - (Long)retval;\n                            total_rsp+=diff;\n                        }\n                    }\n\n                    if(print > 0 && i % print == 0)\n                        System.out.println(\"-- invoked \" + i);\n                    if(sleep_time > 0)\n                        Util.sleep(sleep_time);\n                }\n                catch(Throwable throwable) {\n                    throwable.printStackTrace();\n                }\n            }\n\n            double time_per_req=total_req / (double)number_of_msgs;\n            System.out.println(\"\\ninvoked \" + number_of_msgs + \" requests in \" + total_req + \" ms: \" + time_per_req +\n                    \" ms / req (entire request)\");\n\n            if(sync) {\n                double time_per_rsp=total_rsp / (double)number_of_msgs;\n                System.out.println(\"received \" + number_of_msgs + \" responses in \" + total_rsp + \" ms: \" + time_per_rsp +\n                        \" ms / rsp (only response)\\n\");\n            }\n\n\n        }","id":13267,"modified_method":"public void run() {\n            byte[] buf=new byte[msg_size];\n            Object[] args=new Object[]{0, buf};\n            MethodCall call=new MethodCall(RECEIVE, args);\n\n            //if(anycasting && sync)\n               //  options.setMode(Request.GET_FIRST);\n\n            for(int i=1; i <= number_of_msgs; i++) {\n                Object retval=null;\n                try {\n                    long start=System.currentTimeMillis();\n                    args[0]=start;\n                    if(dests != null)\n                        disp.callRemoteMethods(dests, call, options);\n                    else\n                        retval=disp.callRemoteMethod(dest, call, options);\n                    long current_time=System.currentTimeMillis();\n                    long diff=current_time - start;\n                    total_req+=diff;\n\n                    if(sync) {\n                        if(retval instanceof Long) {\n                            diff=System.currentTimeMillis() - (Long)retval;\n                            total_rsp+=diff;\n                        }\n                    }\n\n                    if(print > 0 && i % print == 0)\n                        System.out.println(\"-- invoked \" + i);\n                    if(sleep_time > 0)\n                        Util.sleep(sleep_time);\n                }\n                catch(Throwable throwable) {\n                    throwable.printStackTrace();\n                }\n            }\n\n            double time_per_req=total_req / (double)number_of_msgs;\n            System.out.println(\"\\ninvoked \" + number_of_msgs + \" requests in \" + total_req + \" ms: \" + time_per_req +\n                    \" ms / req (entire request)\");\n\n            if(sync) {\n                double time_per_rsp=total_rsp / (double)number_of_msgs;\n                System.out.println(\"received \" + number_of_msgs + \" responses in \" + total_rsp + \" ms: \" + time_per_rsp +\n                        \" ms / rsp (only response)\\n\");\n            }\n\n\n        }","commit_id":"cb2d1dc46f1c4f1a17cdec466038a22d91c1976d","url":"https://github.com/belaban/JGroups"},{"original_method":"void setSenderThreads() throws Exception {\n        int threads=Util.readIntFromStdin(\"Number of sender threads: \");\n        int old=this.num_threads;\n        this.num_threads=threads;\n        System.out.println(\"sender threads set to \" + num_threads + \" (from \" + old + \")\");\n    }","id":13268,"modified_method":"void setSenderThreads() throws Exception {\n        int threads=Util.readIntFromStdin(\"Number of sender threads: \");\n        disp.callRemoteMethods(null, new MethodCall(SET_NUM_THREADS, threads), RequestOptions.SYNC);\n    }","commit_id":"cb2d1dc46f1c4f1a17cdec466038a22d91c1976d","url":"https://github.com/belaban/JGroups"},{"original_method":"public void eventLoop() throws Throwable {\n        int c;\n\n        while(true) {\n            System.out.print(\"[1] Send msgs [2] Print view [3] Print conns \" +\n                    \"[4] Trash conn [5] Trash all conns\" +\n                    \"\\n[6] Set sender threads (\" + num_threads + \") [7] Set num msgs (\" + num_msgs + \") \" +\n                    \"[8] Set msg size (\" + Util.printBytes(msg_size) + \")\" +\n                    \" [9] Set anycast count (\" + anycast_count + \")\" +\n                    \"\\n[o] Toggle OOB (\" + oob + \") [s] Toggle sync (\" + sync + \") [a] Toggle anycasting (\" + anycasting + \")\" +\n                    \"\\n[q] Quit\\n\");\n            System.out.flush();\n            c=System.in.read();\n            switch(c) {\n            case -1:\n                break;\n            case '1':\n                try {\n                    invokeRpcs();\n                }\n                catch(Throwable t) {\n                    System.err.println(t);\n                }\n                break;\n            case '2':\n                printView();\n                break;\n            case '3':\n                printConnections();\n                break;\n            case '4':\n                removeConnection();\n                break;\n            case '5':\n                removeAllConnections();\n                break;\n            case '6':\n                setSenderThreads();\n                break;\n            case '7':\n                setNumMessages();\n                break;\n            case '8':\n                setMessageSize();\n                break;\n            case '9':\n                setAnycastCount();\n                break;\n            case 'o':\n                oob=!oob;\n                System.out.println(\"oob=\" + oob);\n                break;\n            case 's':\n                sync=!sync;\n                System.out.println(\"sync=\" + sync);\n                break;\n            case 'a':\n                anycasting=!anycasting;\n                System.out.println(\"anycasting=\" + anycasting);\n                break;\n            case 'q':\n                channel.close();\n                return;\n            default:\n                break;\n            }\n        }\n    }","id":13269,"modified_method":"public void eventLoop() throws Throwable {\n        int c;\n\n        while(true) {\n            c=Util.keyPress(\"[1] Send msgs [2] Print view [3] Print conns \" +\n                    \"[4] Trash conn [5] Trash all conns\" +\n                    \"\\n[6] Set sender threads (\" + num_threads + \") [7] Set num msgs (\" + num_msgs + \") \" +\n                    \"[8] Set msg size (\" + Util.printBytes(msg_size) + \")\" +\n                    \" [9] Set anycast count (\" + anycast_count + \")\" +\n                    \"\\n[o] Toggle OOB (\" + oob + \") [s] Toggle sync (\" + sync + \") [a] Toggle anycasting (\" + anycasting + \")\" +\n                    \"\\n[q] Quit\\n\");\n            switch(c) {\n                case -1:\n                    break;\n                case '1':\n                    try {\n                        invokeRpcs();\n                    }\n                    catch(Throwable t) {\n                        System.err.println(t);\n                    }\n                    break;\n                case '2':\n                    printView();\n                    break;\n                case '3':\n                    printConnections();\n                    break;\n                case '4':\n                    removeConnection();\n                    break;\n                case '5':\n                    removeAllConnections();\n                    break;\n                case '6':\n                    setSenderThreads();\n                    break;\n                case '7':\n                    setNumMessages();\n                    break;\n                case '8':\n                    setMessageSize();\n                    break;\n                case '9':\n                    setAnycastCount();\n                    break;\n                case 'o':\n                    boolean new_value=!oob;\n                    disp.callRemoteMethods(null, new MethodCall(SET_OOB, new_value), RequestOptions.SYNC);\n                    break;\n                case 's':\n                    boolean new_val=!sync;\n                    disp.callRemoteMethods(null, new MethodCall(SET_SYNC, new_val), RequestOptions.SYNC);\n                    break;\n                case 'a':\n                    new_val=!anycasting;\n                    disp.callRemoteMethods(null, new MethodCall(SET_ANYCASTING, new_val), RequestOptions.SYNC);\n                    break;\n                case 'q':\n                    channel.close();\n                    return;\n                case '\\n':\n                case '\\r':\n                    break;\n                default:\n                    break;\n            }\n        }\n    }","commit_id":"cb2d1dc46f1c4f1a17cdec466038a22d91c1976d","url":"https://github.com/belaban/JGroups"},{"original_method":"void setAnycastCount() throws Exception {\n        int tmp=Util.readIntFromStdin(\"Anycast count: \");\n        View view=channel.getView();\n        if(tmp > view.size()) {\n            System.err.println(\"anycast count must be smaller or equal to the view size (\" + view + \")\\n\");\n            return;\n        }\n\n        anycast_count=tmp;\n        System.out.println(\"set anycast_count=\" + anycast_count);\n    }","id":13270,"modified_method":"void setAnycastCount() throws Exception {\n        int tmp=Util.readIntFromStdin(\"Anycast count: \");\n        View view=channel.getView();\n        if(tmp > view.size()) {\n            System.err.println(\"anycast count must be smaller or equal to the view size (\" + view + \")\\n\");\n            return;\n        }\n        disp.callRemoteMethods(null, new MethodCall(SET_ANYCAST_COUNT, tmp), RequestOptions.SYNC);\n    }","commit_id":"cb2d1dc46f1c4f1a17cdec466038a22d91c1976d","url":"https://github.com/belaban/JGroups"},{"original_method":"@Override\r\n    public boolean apply(Game game, Ability source) {\r\n        Permanent targetCreature = game.getPermanent(source.getFirstTarget());\r\n        if (targetCreature != null) {\r\n            Player player = game.getPlayer(targetCreature.getControllerId());\r\n            if (player != null) {\r\n                cost.clearPaid();\r\n                final StringBuilder sb = new StringBuilder(\"Pay {1} otherwise \").append(targetCreature.getName()).append(\" will be returned to its owner's hand)\");\r\n                if (player.chooseUse(Outcome.Benefit, sb.toString(), game)) {\r\n                    cost.pay(source, game, targetCreature.getControllerId(), targetCreature.getControllerId(), false);\r\n                }\r\n                if (!cost.isPaid()) {\r\n                    return targetCreature.moveToZone(Zone.HAND, source.getSourceId(), game, true);\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }","id":13271,"modified_method":"@Override\r\n    public boolean apply(Game game, Ability source) {\r\n        Player controller = game.getPlayer(source.getControllerId());\r\n        if (controller != null) {        \r\n            Permanent targetCreature = game.getPermanent(getTargetPointer().getFirst(game, source));\r\n            if (targetCreature != null) {\r\n                Player player = game.getPlayer(targetCreature.getControllerId());\r\n                if (player != null) {\r\n                    cost.clearPaid();\r\n                    final StringBuilder sb = new StringBuilder(\"Pay {1}? (Otherwise \").append(targetCreature.getName()).append(\" will be returned to its owner's hand)\");\r\n                    if (player.chooseUse(Outcome.Benefit, sb.toString(), game)) {\r\n                        cost.pay(source, game, targetCreature.getControllerId(), targetCreature.getControllerId(), false);\r\n                    }\r\n                    if (!cost.isPaid()) {\r\n                        controller.moveCards(targetCreature, Zone.BATTLEFIELD, Zone.HAND, source, game);\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }","commit_id":"199ff16c0cbd3349f014f6c4788ec72f68d2fdd8","url":"https://github.com/magefree/mage"},{"original_method":"@Override\r\n    public boolean apply(Game game, Ability source) {\r\n        Permanent targetCreature = game.getPermanent(source.getFirstTarget());\r\n        if (targetCreature != null) {\r\n            Player player = game.getPlayer(targetCreature.getControllerId());\r\n            if (player != null) {\r\n                cost.clearPaid();\r\n                final StringBuilder sb = new StringBuilder(\"Pay {1} otherwise \").append(targetCreature.getName()).append(\" will be returned to its owner's hand)\");\r\n                if (player.chooseUse(Outcome.Benefit, sb.toString(), game)) {\r\n                    cost.pay(source, game, targetCreature.getControllerId(), targetCreature.getControllerId(), true);\r\n                }\r\n                if (!cost.isPaid()) {\r\n                    return targetCreature.moveToZone(Zone.HAND, source.getSourceId(), game, true);\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }","id":13272,"modified_method":"@Override\r\n    public boolean apply(Game game, Ability source) {\r\n        Player controller = game.getPlayer(source.getControllerId());\r\n        if (controller != null) {\r\n            Permanent targetCreature = game.getPermanent(getTargetPointer().getFirst(game, source));\r\n            if (targetCreature != null) {\r\n                Player player = game.getPlayer(targetCreature.getControllerId());\r\n                if (player != null) {\r\n                    cost.clearPaid();\r\n                    if (player.chooseUse(Outcome.Benefit, \"Pay {1}? (Otherwise \" + targetCreature.getLogName() +\" will be returned to its owner's hand)\", game)) {\r\n                        cost.pay(source, game, targetCreature.getControllerId(), targetCreature.getControllerId(), false);\r\n                    }\r\n                    if (!cost.isPaid()) {\r\n                        controller.moveCards(targetCreature, Zone.BATTLEFIELD, Zone.HAND, source, game);\r\n                    }\r\n                }\r\n            }            \r\n            return true;\r\n        }\r\n        return false;\r\n    }","commit_id":"199ff16c0cbd3349f014f6c4788ec72f68d2fdd8","url":"https://github.com/magefree/mage"},{"original_method":"@Override\n    public boolean replaceEvent(GameEvent event, Ability source, Game game) {\n        Player player = game.getPlayer(event.getPlayerId());\n        if ( player != null ) {\n            SacrificeTargetCost attackCost = new SacrificeTargetCost(new TargetControlledPermanent(filter));\n            if ( attackCost.canPay(source, source.getSourceId(), event.getPlayerId(), game) &&\n                 player.chooseUse(Outcome.Neutral, \"Sacrifice a land?\", game) )\n            {\n                if (attackCost.pay(source, game, source.getSourceId(), event.getPlayerId(), true) ) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }","id":13273,"modified_method":"@Override\n    public boolean replaceEvent(GameEvent event, Ability source, Game game) {\n        Player player = game.getPlayer(event.getPlayerId());\n        if ( player != null ) {\n            SacrificeTargetCost attackCost = new SacrificeTargetCost(new TargetControlledPermanent(filter));\n            if ( attackCost.canPay(source, source.getSourceId(), event.getPlayerId(), game) &&\n                 player.chooseUse(Outcome.Neutral, \"Sacrifice a land?\", game) )\n            {\n                if (attackCost.pay(source, game, source.getSourceId(), event.getPlayerId(), false) ) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }","commit_id":"199ff16c0cbd3349f014f6c4788ec72f68d2fdd8","url":"https://github.com/magefree/mage"},{"original_method":"@Override\r\n    public boolean apply(Game game, Ability source) {\r\n        Player player = game.getPlayer(source.getControllerId());\r\n        if (player != null) {\r\n            VariableCost cost = new PayVariableLifeCost();\r\n            int xValue = cost.announceXValue(source, game);\r\n            cost.getFixedCostsFromAnnouncedValue(xValue).pay(source, game, source.getSourceId(), source.getControllerId(), true);\r\n            \r\n            Cards cards = new CardsImpl(Zone.PICK);\r\n            int count = Math.min(player.getLibrary().size(), xValue);\r\n            for (int i = 0; i < count; i++) {\r\n                Card card = player.getLibrary().removeFromTop(game);\r\n                if (card != null) {\r\n                    cards.add(card);\r\n                    game.setZone(card.getId(), Zone.PICK);\r\n                }\r\n            }\r\n            player.lookAtCards(\"Plunge into Darkness\", cards, game);\r\n\r\n            TargetCard target = new TargetCard(Zone.PICK, new FilterCard(\"card to put into your hand\"));\r\n            if (player.choose(Outcome.DrawCard, cards, target, game)) {\r\n                Card card = cards.get(target.getFirstTarget(), game);\r\n                if (card != null) {\r\n                    cards.remove(card);\r\n                    card.moveToZone(Zone.HAND, source.getSourceId(), game, false);\r\n                    game.informPlayers(\"Plunge into Darkness: \" + player.getLogName() + \" puts a card into his or her hand\");\r\n                }\r\n            }\r\n            for (UUID cardId : cards) {\r\n                Card card = game.getCard(cardId);\r\n                card.moveToExile(null, \"\", source.getSourceId(), game);\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }","id":13274,"modified_method":"@Override\r\n    public boolean apply(Game game, Ability source) {\r\n        Player player = game.getPlayer(source.getControllerId());\r\n        if (player != null) {\r\n            VariableCost cost = new PayVariableLifeCost();\r\n            int xValue = cost.announceXValue(source, game);\r\n            cost.getFixedCostsFromAnnouncedValue(xValue).pay(source, game, source.getSourceId(), source.getControllerId(), false);\r\n            \r\n            Cards cards = new CardsImpl(Zone.PICK);\r\n            int count = Math.min(player.getLibrary().size(), xValue);\r\n            for (int i = 0; i < count; i++) {\r\n                Card card = player.getLibrary().removeFromTop(game);\r\n                if (card != null) {\r\n                    cards.add(card);\r\n                    game.setZone(card.getId(), Zone.PICK);\r\n                }\r\n            }\r\n            player.lookAtCards(\"Plunge into Darkness\", cards, game);\r\n\r\n            TargetCard target = new TargetCard(Zone.PICK, new FilterCard(\"card to put into your hand\"));\r\n            if (player.choose(Outcome.DrawCard, cards, target, game)) {\r\n                Card card = cards.get(target.getFirstTarget(), game);\r\n                if (card != null) {\r\n                    cards.remove(card);\r\n                    card.moveToZone(Zone.HAND, source.getSourceId(), game, false);\r\n                    game.informPlayers(\"Plunge into Darkness: \" + player.getLogName() + \" puts a card into his or her hand\");\r\n                }\r\n            }\r\n            for (UUID cardId : cards) {\r\n                Card card = game.getCard(cardId);\r\n                card.moveToExile(null, \"\", source.getSourceId(), game);\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }","commit_id":"199ff16c0cbd3349f014f6c4788ec72f68d2fdd8","url":"https://github.com/magefree/mage"},{"original_method":"@Override\r\n    public boolean apply(Game game, Ability source) {\r\n        Player player = game.getPlayer(this.getTargetPointer().getFirst(game, source));\r\n        if (player != null) {\r\n            Cost cost = new PayLifeCost(7);\r\n            if (!cost.canPay(source, source.getSourceId(), player.getId(), game)\r\n                    || !player.chooseUse(Outcome.LoseLife, \"Pay 7 life?\", game)\r\n                    || !cost.pay(source, game, source.getSourceId(), player.getId(), true)) {\r\n                for (Card card : player.getHand().getCards(game)) {\r\n                    player.discard(card, source, game);\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }","id":13275,"modified_method":"@Override\r\n    public boolean apply(Game game, Ability source) {\r\n        Player player = game.getPlayer(this.getTargetPointer().getFirst(game, source));\r\n        if (player != null) {\r\n            Cost cost = new PayLifeCost(7);\r\n            if (!cost.canPay(source, source.getSourceId(), player.getId(), game)\r\n                    || !player.chooseUse(Outcome.LoseLife, \"Pay 7 life?\", game)\r\n                    || !cost.pay(source, game, source.getSourceId(), player.getId(), false)) {\r\n                for (Card card : player.getHand().getCards(game)) {\r\n                    player.discard(card, source, game);\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }","commit_id":"199ff16c0cbd3349f014f6c4788ec72f68d2fdd8","url":"https://github.com/magefree/mage"},{"original_method":"@Override\r\n    public boolean apply(Game game, Ability source) {\r\n        Permanent targetCreature = game.getPermanent(source.getFirstTarget());\r\n        if (targetCreature != null) {\r\n            Player player = game.getPlayer(targetCreature.getControllerId());\r\n            if (player != null) {\r\n                cost.clearPaid();\r\n                final StringBuilder sb = new StringBuilder(\"Pay 2 life otherwise \").append(targetCreature.getName()).append(\" will be tapped)\");\r\n                if (player.chooseUse(Outcome.Benefit, sb.toString(), game)) {\r\n                    cost.pay(source, game, targetCreature.getControllerId(), targetCreature.getControllerId(), true);\r\n                }\r\n                if (!cost.isPaid()) {\r\n                    return targetCreature.tap(game);\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }","id":13276,"modified_method":"@Override\r\n    public boolean apply(Game game, Ability source) {\r\n        Permanent targetCreature = game.getPermanent(source.getFirstTarget());\r\n        if (targetCreature != null) {\r\n            Player player = game.getPlayer(targetCreature.getControllerId());\r\n            if (player != null) {\r\n                cost.clearPaid();\r\n                final StringBuilder sb = new StringBuilder(\"Pay 2 life? (Otherwise \").append(targetCreature.getName()).append(\" will be tapped)\");\r\n                if (player.chooseUse(Outcome.Benefit, sb.toString(), game)) {\r\n                    cost.pay(source, game, targetCreature.getControllerId(), targetCreature.getControllerId(), true);\r\n                }\r\n                if (!cost.isPaid()) {\r\n                    return targetCreature.tap(game);\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }","commit_id":"199ff16c0cbd3349f014f6c4788ec72f68d2fdd8","url":"https://github.com/magefree/mage"},{"original_method":"@Override\r\n    public boolean apply(Game game, Ability source) {\r\n        Player player = game.getPlayer(source.getControllerId());\r\n        if (player != null) {\r\n            SacrificeTargetCost cost = new SacrificeTargetCost(new TargetControlledCreaturePermanent(new FilterControlledCreaturePermanent(\"a creature\")));\r\n            if (cost.pay(source, game, source.getSourceId(), source.getControllerId(), true)) {\r\n                for (UUID targetId: getTargetPointer().getTargets(game, source)) {\r\n                    Card card = game.getCard(targetId);\r\n                    if (card != null) {\r\n                        player.putOntoBattlefieldWithInfo(card, game, Zone.GRAVEYARD, source.getSourceId(), true);\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }","id":13277,"modified_method":"@Override\r\n    public boolean apply(Game game, Ability source) {\r\n        Player controller = game.getPlayer(source.getControllerId());\r\n        if (controller != null) {\r\n            SacrificeTargetCost cost = new SacrificeTargetCost(new TargetControlledCreaturePermanent(new FilterControlledCreaturePermanent(\"a creature\")));\r\n            if (cost.pay(source, game, source.getSourceId(), source.getControllerId(), false)) {\r\n                for (UUID targetId: getTargetPointer().getTargets(game, source)) {\r\n                    Card card = game.getCard(targetId);\r\n                    if (card != null) {\r\n                        controller.putOntoBattlefieldWithInfo(card, game, Zone.GRAVEYARD, source.getSourceId(), true);\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }","commit_id":"199ff16c0cbd3349f014f6c4788ec72f68d2fdd8","url":"https://github.com/magefree/mage"},{"original_method":"@Override\n    public boolean apply(Game game, Ability source) {\n        for (Permanent creature : game.getBattlefield().getActivePermanents(new FilterNonlandPermanent(), source.getControllerId(), source.getSourceId(), game)) {\n            creature.moveToZone(Zone.HAND, source.getSourceId(), game, true);\n        }\n        return true;\n    }","id":13278,"modified_method":"@Override\n    public boolean apply(Game game, Ability source) {\n        Player controller = game.getPlayer(source.getControllerId());\n        if (controller != null) {\n            Set<Card> cardsToHand = new LinkedHashSet<>();\n            for (Permanent permanent : game.getBattlefield().getActivePermanents(new FilterNonlandPermanent(), source.getControllerId(), source.getSourceId(), game)) {\n                cardsToHand.add((Card) permanent);\n            }\n            controller.moveCards(cardsToHand, null, Zone.HAND, source, game);\n            return true;\n\n        }\n        return false;\n    }","commit_id":"00f48b005d5e9772456fc78aa4d073b1cb23108c","url":"https://github.com/magefree/mage"},{"original_method":"@Override\n    public boolean apply(Game game, Ability source) {\n        for (Permanent creature : game.getBattlefield().getActivePermanents(new FilterNonlandPermanent(), source.getControllerId(), source.getSourceId(), game)) {\n            creature.moveToZone(Zone.HAND, source.getSourceId(), game, true);\n        }\n        return true;\n    }","id":13279,"modified_method":"@Override\n    public boolean apply(Game game, Ability source) {\n        Player controller = game.getPlayer(source.getControllerId());\n        if (controller != null) {\n            Set<Card> cardsToHand = new LinkedHashSet<>();\n            for (Permanent permanent : game.getBattlefield().getActivePermanents(new FilterNonlandPermanent(), source.getControllerId(), source.getSourceId(), game)) {\n                cardsToHand.add((Card) permanent);\n            }\n            controller.moveCards(cardsToHand, null, Zone.HAND, source, game);\n            return true;\n\n        }\n        return false;\n    }","commit_id":"dc7fee86df8e69fe090f85f2ab73734167ab3599","url":"https://github.com/magefree/mage"},{"original_method":"/**\n     * Installs several bufixes and enhancements to WODynamicElements.\n     * Sets the Context class name to \"er.extensions.ERXWOContext\" if\n     * it is \"WOContext\". Patches ERXWOForm, ERXWOFileUpload, ERXWOText\n     * to be used instead of WOForm, WOFileUpload, WOText.\n     */\n    public void installPatches() {\n        if(contextClassName().equals(\"WOContext\"))\n            setContextClassName(\"er.extensions.ERXWOContext\");\n        ERXPatcher.setClassForName(ERXWOForm.class, \"WOForm\");\n        ERXPatcher.setClassForName(ERXAnyField.class, \"WOAnyField\");\n        //ERXCompilerProxy.defaultProxy().setClassForName(ERXSubmitButton.class, \"WOSubmitButton\");\n\n        // Fix for 3190479 URI encoding should always be UTF8\n        // See http://www.w3.org/International/O-URL-code.html\n        // For WO 5.1.x users, please comment this statement to compile.\n        com.webobjects.appserver._private.WOURLEncoder.WO_URL_ENCODING = \"UTF8\";\n        \n        // WO 5.1 specific patches\n        if (ERXProperties.webObjectsVersionAsDouble() < 5.2d) {\n            // ERXWOText contains a patch for WOText to not include the value \n            // attribute (#2948062). Fixed in WO 5.2\n            ERXPatcher.setClassForName(ERXWOText.class, \"WOText\");\n\n            // ERXWOFileUpload returns a better warning than throwing a ClassCastException. \n            // Fixed in WO 5.2\n            ERXPatcher.setClassForName(ERXWOFileUpload.class, \"WOFileUpload\");\n        }\n    }","id":13280,"modified_method":"/**\n     * Installs several bufixes and enhancements to WODynamicElements.\n     * Sets the Context class name to \"er.extensions.ERXWOContext\" if\n     * it is \"WOContext\". Patches ERXWOForm, ERXWOFileUpload, ERXWOText\n     * to be used instead of WOForm, WOFileUpload, WOText.\n     */\n    public void installPatches() {\n        ERXPatcher.installPatches();\n        if(contextClassName().equals(\"WOContext\"))\n            setContextClassName(\"er.extensions.ERXWOContext\");\n        ERXPatcher.setClassForName(ERXWOForm.class, \"WOForm\");\n        ERXPatcher.setClassForName(ERXAnyField.class, \"WOAnyField\");\n        //ERXPatcher.setClassForName(ERXSubmitButton.class, \"WOSubmitButton\");\n\n        // Fix for 3190479 URI encoding should always be UTF8\n        // See http://www.w3.org/International/O-URL-code.html\n        // For WO 5.1.x users, please comment this statement to compile.\n        com.webobjects.appserver._private.WOURLEncoder.WO_URL_ENCODING = \"UTF8\";\n        \n        // WO 5.1 specific patches\n        if (ERXProperties.webObjectsVersionAsDouble() < 5.2d) {\n            // ERXWOText contains a patch for WOText to not include the value \n            // attribute (#2948062). Fixed in WO 5.2\n            ERXPatcher.setClassForName(ERXWOText.class, \"WOText\");\n\n            // ERXWOFileUpload returns a better warning than throwing a ClassCastException. \n            // Fixed in WO 5.2\n            ERXPatcher.setClassForName(ERXWOFileUpload.class, \"WOFileUpload\");\n        }\n    }","commit_id":"ebda80220a212da041a02659634dbf9a30a022ad","url":"https://github.com/wocommunity/wonder"},{"original_method":"public void appendToResponse(WOResponse woresponse, WOContext wocontext) {\n                String pre = woresponse.contentString();\n                super.appendToResponse(woresponse, wocontext);\n                if(cleanupXHTML)\n                    correctResponse(woresponse, pre.length(), pre);\n            }","id":13281,"modified_method":"public void appendToResponse(WOResponse woresponse, WOContext wocontext) {\n                int offset = woresponse.contentString().length();\n                super.appendToResponse(woresponse, wocontext);\n                processResponse(this, woresponse, wocontext, offset, nameInContext(wocontext, wocontext.component()));\n            }","commit_id":"ebda80220a212da041a02659634dbf9a30a022ad","url":"https://github.com/wocommunity/wonder"},{"original_method":"public void appendToResponse(WOResponse woresponse, WOContext wocontext) {\n                String pre = woresponse.contentString();\n                super.appendToResponse(woresponse, wocontext);\n                if(cleanupXHTML)\n                    correctResponse(woresponse, pre.length(), pre);\n            }","id":13282,"modified_method":"public void appendToResponse(WOResponse woresponse, WOContext wocontext) {\n                int offset = woresponse.contentString().length();\n                super.appendToResponse(woresponse, wocontext);\n                processResponse(this, woresponse, wocontext, offset, null);\n            }","commit_id":"ebda80220a212da041a02659634dbf9a30a022ad","url":"https://github.com/wocommunity/wonder"},{"original_method":"public void appendToResponse(WOResponse woresponse, WOContext wocontext) {\n                String pre = woresponse.contentString();\n                super.appendToResponse(woresponse, wocontext);\n                if(cleanupXHTML)\n                    correctResponse(woresponse, pre.length(), pre);\n            }","id":13283,"modified_method":"public void appendToResponse(WOResponse woresponse, WOContext wocontext) {\n                int offset = woresponse.contentString().length();\n                super.appendToResponse(woresponse, wocontext);\n                processResponse(this, woresponse, wocontext, offset, nameInContext(wocontext, wocontext.component()));\n            }","commit_id":"ebda80220a212da041a02659634dbf9a30a022ad","url":"https://github.com/wocommunity/wonder"},{"original_method":"public void appendToResponse(WOResponse woresponse, WOContext wocontext) {\n                String pre = woresponse.contentString();\n                super.appendToResponse(woresponse, wocontext);\n                if(cleanupXHTML)\n                    correctResponse(woresponse, pre.length(), pre);\n            }","id":13284,"modified_method":"public void appendToResponse(WOResponse woresponse, WOContext wocontext) {\n                int offset = woresponse.contentString().length();\n                super.appendToResponse(woresponse, wocontext);\n                processResponse(this, woresponse, wocontext, offset, nameInContext(wocontext, wocontext.component()));\n            }","commit_id":"ebda80220a212da041a02659634dbf9a30a022ad","url":"https://github.com/wocommunity/wonder"},{"original_method":"public void appendToResponse(WOResponse woresponse, WOContext wocontext) {\n                String pre = woresponse.contentString();\n                super.appendToResponse(woresponse, wocontext);\n                if(cleanupXHTML)\n                    correctResponse(woresponse, pre.length(), pre);\n            }","id":13285,"modified_method":"public void appendToResponse(WOResponse woresponse, WOContext wocontext) {\n                int offset = woresponse.contentString().length();\n                super.appendToResponse(woresponse, wocontext);\n                processResponse(this, woresponse, wocontext, offset, nameInContext(wocontext, wocontext.component()));\n            }","commit_id":"ebda80220a212da041a02659634dbf9a30a022ad","url":"https://github.com/wocommunity/wonder"},{"original_method":"public void appendToResponse(WOResponse woresponse, WOContext wocontext) {\n                String pre = woresponse.contentString();\n                super.appendToResponse(woresponse, wocontext);\n                if(cleanupXHTML)\n                    correctResponse(woresponse, pre.length(), pre);\n            }","id":13286,"modified_method":"public void appendToResponse(WOResponse woresponse, WOContext wocontext) {\n                int offset = woresponse.contentString().length();\n                super.appendToResponse(woresponse, wocontext);\n                processResponse(this, woresponse, wocontext, offset, nameInContext(wocontext, wocontext.component()));\n            }","commit_id":"ebda80220a212da041a02659634dbf9a30a022ad","url":"https://github.com/wocommunity/wonder"},{"original_method":"public void appendToResponse(WOResponse woresponse, WOContext wocontext) {\n                String pre = woresponse.contentString();\n                super.appendToResponse(woresponse, wocontext);\n                if(cleanupXHTML)\n                    correctResponse(woresponse, pre.length(), pre);\n            }","id":13287,"modified_method":"public void appendToResponse(WOResponse woresponse, WOContext wocontext) {\n                int offset = woresponse.contentString().length();\n                super.appendToResponse(woresponse, wocontext);\n                processResponse(this, woresponse, wocontext, offset, null);\n            }","commit_id":"ebda80220a212da041a02659634dbf9a30a022ad","url":"https://github.com/wocommunity/wonder"},{"original_method":"public void appendToResponse(WOResponse woresponse, WOContext wocontext) {\n                String pre = woresponse.contentString();\n                super.appendToResponse(woresponse, wocontext);\n                if(cleanupXHTML)\n                    correctResponse(woresponse, pre.length(), pre);\n            }","id":13288,"modified_method":"public void appendToResponse(WOResponse woresponse, WOContext wocontext) {\n                int offset = woresponse.contentString().length();\n                super.appendToResponse(woresponse, wocontext);\n                processResponse(this, woresponse, wocontext, offset, nameInContext(wocontext, wocontext.component()));\n            }","commit_id":"ebda80220a212da041a02659634dbf9a30a022ad","url":"https://github.com/wocommunity/wonder"},{"original_method":"public void appendToResponse(WOResponse woresponse, WOContext wocontext) {\n                String pre = woresponse.contentString();\n                super.appendToResponse(woresponse, wocontext);\n                if(cleanupXHTML)\n                    correctResponse(woresponse, pre.length(), pre);\n            }","id":13289,"modified_method":"public void appendToResponse(WOResponse woresponse, WOContext wocontext) {\n                int offset = woresponse.contentString().length();\n                super.appendToResponse(woresponse, wocontext);\n                processResponse(this, woresponse, wocontext, offset, nameInContext(wocontext, wocontext.component()));\n            }","commit_id":"ebda80220a212da041a02659634dbf9a30a022ad","url":"https://github.com/wocommunity/wonder"},{"original_method":"public void appendToResponse(WOResponse woresponse, WOContext wocontext) {\n                String pre = woresponse.contentString();\n                super.appendToResponse(woresponse, wocontext);\n                if(cleanupXHTML)\n                    correctResponse(woresponse, pre.length(), pre);\n            }","id":13290,"modified_method":"public void appendToResponse(WOResponse woresponse, WOContext wocontext) {\n                int offset = woresponse.contentString().length();\n                super.appendToResponse(woresponse, wocontext);\n                processResponse(this, woresponse, wocontext, offset, nameInContext(wocontext, wocontext.component()));\n            }","commit_id":"ebda80220a212da041a02659634dbf9a30a022ad","url":"https://github.com/wocommunity/wonder"},{"original_method":"public void appendToResponse(WOResponse woresponse, WOContext wocontext) {\n                String pre = woresponse.contentString();\n                super.appendToResponse(woresponse, wocontext);\n                if(cleanupXHTML)\n                    correctResponse(woresponse, pre.length(), pre);\n            }","id":13291,"modified_method":"public void appendToResponse(WOResponse woresponse, WOContext wocontext) {\n                int offset = woresponse.contentString().length();\n                super.appendToResponse(woresponse, wocontext);\n                processResponse(this, woresponse, wocontext, offset, null);\n            }","commit_id":"ebda80220a212da041a02659634dbf9a30a022ad","url":"https://github.com/wocommunity/wonder"},{"original_method":"public void appendToResponse(WOResponse woresponse, WOContext wocontext) {\n                String pre = woresponse.contentString();\n                super.appendToResponse(woresponse, wocontext);\n                if(cleanupXHTML)\n                    correctResponse(woresponse, pre.length(), pre);\n            }","id":13292,"modified_method":"public void appendToResponse(WOResponse woresponse, WOContext wocontext) {\n                int offset = woresponse.contentString().length();\n                super.appendToResponse(woresponse, wocontext);\n                processResponse(this, woresponse, wocontext, offset, nameInContext(wocontext, wocontext.component()));\n            }","commit_id":"ebda80220a212da041a02659634dbf9a30a022ad","url":"https://github.com/wocommunity/wonder"},{"original_method":"public void appendToResponse(WOResponse woresponse, WOContext wocontext) {\n                String pre = woresponse.contentString();\n                super.appendToResponse(woresponse, wocontext);\n                if(cleanupXHTML)\n                    correctResponse(woresponse, pre.length(), pre);\n            }","id":13293,"modified_method":"public void appendToResponse(WOResponse woresponse, WOContext wocontext) {\n                int offset = woresponse.contentString().length();\n                super.appendToResponse(woresponse, wocontext);\n                processResponse(this, woresponse, wocontext, offset, nameInContext(wocontext, wocontext.component()));\n            }","commit_id":"ebda80220a212da041a02659634dbf9a30a022ad","url":"https://github.com/wocommunity/wonder"},{"original_method":"public void appendToResponse(WOResponse woresponse, WOContext wocontext) {\n                String pre = woresponse.contentString();\n                super.appendToResponse(woresponse, wocontext);\n                if(cleanupXHTML)\n                    correctResponse(woresponse, pre.length(), pre);\n            }","id":13294,"modified_method":"public void appendToResponse(WOResponse woresponse, WOContext wocontext) {\n                int offset = woresponse.contentString().length();\n                super.appendToResponse(woresponse, wocontext);\n                processResponse(this, woresponse, wocontext, offset, null);\n            }","commit_id":"ebda80220a212da041a02659634dbf9a30a022ad","url":"https://github.com/wocommunity/wonder"},{"original_method":"public void appendToResponse(WOResponse woresponse, WOContext wocontext) {\n                String pre = woresponse.contentString();\n                super.appendToResponse(woresponse, wocontext);\n                if(cleanupXHTML)\n                    correctResponse(woresponse, pre.length(), pre);\n            }","id":13295,"modified_method":"public void appendToResponse(WOResponse woresponse, WOContext wocontext) {\n                int offset = woresponse.contentString().length();\n                super.appendToResponse(woresponse, wocontext);\n                processResponse(this, woresponse, wocontext, offset, nameInContext(wocontext, wocontext.component()));\n            }","commit_id":"ebda80220a212da041a02659634dbf9a30a022ad","url":"https://github.com/wocommunity/wonder"},{"original_method":"public void appendToResponse(WOResponse woresponse, WOContext wocontext) {\n                String pre = woresponse.contentString();\n                super.appendToResponse(woresponse, wocontext);\n                if(cleanupXHTML)\n                    correctResponse(woresponse, pre.length(), pre);\n            }","id":13296,"modified_method":"public void appendToResponse(WOResponse woresponse, WOContext wocontext) {\n                int offset = woresponse.contentString().length();\n                super.appendToResponse(woresponse, wocontext);\n                processResponse(this, woresponse, wocontext, offset, nameInContext(wocontext, wocontext.component()));\n            }","commit_id":"ebda80220a212da041a02659634dbf9a30a022ad","url":"https://github.com/wocommunity/wonder"},{"original_method":"/** Corrects the response of dynamic elements to be XHTML-conform. <code>input<\/code>- and <code>img<\/code>-tags\n            * will be closed correctly, all attribute values will be quoted and attributes without a value like <code>disabled<\/code>\n            * will get a quoted value. All attribute-values with uncorrectly escaped ampersands (&amp;) will be corrected. E.g.\n            * <code>&quot;w&amp;amp;auml;hlen&quot;<\/code> will become <code>&quot;w&amp;auml;hlen&quot;<\/code>.<br/>\n            * This method would normally be called in the following way:\n            * <pre>\n            *      public void appendToResponse(WOResponse woresponse, WOContext wocontext) {\n                *          String pre = woresponse.contentString();\n                *          super.appendToResponse(woresponse, wocontext);\n                *          correctResponse(woresponse, pre.length(), pre);\n                *      }\n        *  <\/pre>\n            *\n            * @param response the response to be corrected.\n            * @param start the offset to start from.\n            * @param pre the string which should be inserted at the begin of the response.\n            */\n        public static final void correctResponse(WOResponse response, int start, String pre) {\n            String string = response.contentString();\n            int length = string.length();\n            StringBuffer buf = new StringBuffer(length);\n            buf.append(pre);\n\n            for(int i = start; i < length; i++) {\n                char ch = string.charAt(i);\n\n                switch(ch) {\n\n                    case '<' :\n                        buf.append('<');\n                        i = consumeTag(string, i + 1, buf);\n                        break;\n\n                    case '>' :\n                        break;\n\n                    default:\n                        buf.append(ch);\n                        break;\n                }\n            }\n\n            response.setContent(buf.toString());\n        }","id":13297,"modified_method":"/** Corrects the response of dynamic elements to be XHTML-conformant. <code>input<\/code>- and <code>img<\/code>-tags\n            * will be closed correctly, all attribute values will be quoted and attributes without a value like <code>disabled<\/code>\n            * will get a quoted value. All attribute-values with uncorrectly escaped ampersands (&amp;) will be corrected. E.g.\n            * <code>&quot;w&amp;amp;auml;hlen&quot;<\/code> will become <code>&quot;w&amp;auml;hlen&quot;<\/code>.<br/>\n            * This method would normally be called in the following way:\n            * <pre>\n            *      public void appendToResponse(WOResponse woresponse, WOContext wocontext) {\n                *          String pre = woresponse.contentString();\n                *          super.appendToResponse(woresponse, wocontext);\n                *          correctResponse(woresponse, pre.length(), pre);\n                *      }\n        *  <\/pre>\n            *\n            * @param response the response to be corrected.\n            * @param start the offset to start from.\n            * @param pre the string which should be inserted at the begin of the response.\n            */\n        public static final void correctResponse(WOResponse response, int start) {\n            String string = response.contentString();\n            int length = string.length();\n            StringBuffer buf = new StringBuffer(length);\n            buf.append(string.substring(0, start));\n\n            for(int i = start; i < length; i++) {\n                char ch = string.charAt(i);\n\n                switch(ch) {\n\n                    case '<' :\n                        buf.append('<');\n                        i = consumeTag(string, i + 1, buf);\n                        break;\n\n                    case '>' :\n                        break;\n\n                    default:\n                        buf.append(ch);\n                        break;\n                }\n            }\n\n            response.setContent(buf.toString());\n        }","commit_id":"ebda80220a212da041a02659634dbf9a30a022ad","url":"https://github.com/wocommunity/wonder"},{"original_method":"public void appendToResponse(WOResponse woresponse, WOContext wocontext) {\n                String pre = woresponse.contentString();\n                super.appendToResponse(woresponse, wocontext);\n                if(cleanupXHTML)\n                    correctResponse(woresponse, pre.length(), pre);\n            }","id":13298,"modified_method":"public void appendToResponse(WOResponse woresponse, WOContext wocontext) {\n                int offset = woresponse.contentString().length();\n                super.appendToResponse(woresponse, wocontext);\n                processResponse(this, woresponse, wocontext, offset, nameInContext(wocontext, wocontext.component()));\n            }","commit_id":"ebda80220a212da041a02659634dbf9a30a022ad","url":"https://github.com/wocommunity/wonder"},{"original_method":"public NSMutableDictionary mutableUserInfo() {\n        if(mutableUserInfo == null) {\n            mutableUserInfo = new NSMutableDictionary();\n        }\n        return mutableUserInfo;\n    }","id":13299,"modified_method":"public NSMutableDictionary mutableUserInfo() {\n        if(mutableUserInfo == null) {\n            if(request().userInfo() == null)\n                mutableUserInfo = new NSMutableDictionary();\n            else\n                mutableUserInfo = request().userInfo().mutableClone();                \n        }\n        return mutableUserInfo;\n    }","commit_id":"ebda80220a212da041a02659634dbf9a30a022ad","url":"https://github.com/wocommunity/wonder"},{"original_method":"@Test\n    public void testCompletedScoreCardCompilation() throws Exception {\n        String xml1 = createGuidedScoreCardXML();\n\n        KieServices ks = KieServices.Factory.get();\n        KieFileSystem kfs = ks.newKieFileSystem();\n        kfs.write( \"src/main/java/org/drools/workbench/models/guided/scorecard/backend/test2/Applicant.java\",\n                   getApplicant() );\n        kfs.write( \"src/main/java/org/drools/workbench/models/guided/scorecard/backend/test2/ApplicantAttribute.java\",\n                   getApplicantAttribute() );\n        kfs.write( \"src/main/resources/org/drools/workbench/models/guided/scorecard/test2/backend/sc1.scgd\",\n                   xml1 );\n\n        //Add complete Score Card\n        KieBuilder kieBuilder = ks.newKieBuilder( kfs ).buildAll();\n        final List<Message> messages = kieBuilder.getResults().getMessages();\n        dumpMessages( messages );\n        assertEquals( 0,\n                      messages.size() );\n    }","id":13300,"modified_method":"@Test\n    public void testCompletedScoreCardCompilation() throws Exception {\n        String xml1 = Helper.createGuidedScoreCardXML();\n\n        KieServices ks = KieServices.Factory.get();\n        KieFileSystem kfs = ks.newKieFileSystem();\n        kfs.write( \"pom.xml\",\n                   Helper.getPom() );\n        kfs.write( \"src/main/resources/META-INF/kmodule.xml\",\n                   Helper.getKModule() );\n        kfs.write( \"src/main/java/org/drools/workbench/models/guided/scorecard/backend/test2/Applicant.java\",\n                   Helper.getApplicant() );\n        kfs.write( \"src/main/java/org/drools/workbench/models/guided/scorecard/backend/test2/ApplicantAttribute.java\",\n                   Helper.getApplicantAttribute() );\n        kfs.write( \"src/main/resources/org/drools/workbench/models/guided/scorecard/test2/backend/sc1.scgd\",\n                   xml1 );\n\n        //Add complete Score Card\n        KieBuilder kieBuilder = ks.newKieBuilder( kfs ).buildAll();\n        final List<Message> messages = kieBuilder.getResults().getMessages();\n        Helper.dumpMessages( messages );\n        assertEquals( 0,\n                      messages.size() );\n    }","commit_id":"7967be1ae1938e9e553b1e80b1e261186c2cebd5","url":"https://github.com/droolsjbpm/drools"},{"original_method":"@Test\n    public void testIncrementalCompilation() throws Exception {\n        String xml1_1 = createEmptyGuidedScoreCardXML();\n        String xml1_2 = createGuidedScoreCardXML();\n\n        KieServices ks = KieServices.Factory.get();\n        KieFileSystem kfs = ks.newKieFileSystem();\n        kfs.write( \"src/main/java/org/drools/workbench/models/guided/scorecard/backend/test2/Applicant.java\",\n                   getApplicant() );\n        kfs.write( \"src/main/java/org/drools/workbench/models/guided/scorecard/backend/test2/ApplicantAttribute.java\",\n                   getApplicantAttribute() );\n        kfs.write( \"src/main/resources/org/drools/workbench/models/guided/scorecard/backend/test2/sc1.scgd\",\n                   xml1_1 );\n\n        //Add empty Score Card\n        KieBuilder kieBuilder = ks.newKieBuilder( kfs ).buildAll();\n        final List<Message> messages = kieBuilder.getResults().getMessages();\n        dumpMessages( messages );\n        assertEquals( 0,\n                      messages.size() );\n\n        //Update with complete Score Card\n        kfs.write( \"src/main/resources/sc1.scgd\",\n                   xml1_2 );\n        IncrementalResults results = ( (InternalKieBuilder) kieBuilder ).incrementalBuild();\n\n        final List<Message> addedMessages = results.getAddedMessages();\n        final List<Message> removedMessages = results.getRemovedMessages();\n        dumpMessages( addedMessages );\n        assertEquals( 0,\n                      addedMessages.size() );\n        dumpMessages( removedMessages );\n        assertEquals( 0,\n                      removedMessages.size() );\n    }","id":13301,"modified_method":"@Test\n    public void testIncrementalCompilation() throws Exception {\n        String xml1_1 = Helper.createEmptyGuidedScoreCardXML();\n        String xml1_2 = Helper.createGuidedScoreCardXML();\n\n        KieServices ks = KieServices.Factory.get();\n        KieFileSystem kfs = ks.newKieFileSystem();\n        kfs.write( \"pom.xml\",\n                   Helper.getPom() );\n        kfs.write( \"src/main/resources/META-INF/kmodule.xml\",\n                   Helper.getKModule() );\n        kfs.write( \"src/main/java/org/drools/workbench/models/guided/scorecard/backend/test2/Applicant.java\",\n                   Helper.getApplicant() );\n        kfs.write( \"src/main/java/org/drools/workbench/models/guided/scorecard/backend/test2/ApplicantAttribute.java\",\n                   Helper.getApplicantAttribute() );\n        kfs.write( \"src/main/resources/org/drools/workbench/models/guided/scorecard/backend/test2/sc1.scgd\",\n                   xml1_1 );\n\n        //Add empty Score Card\n        KieBuilder kieBuilder = ks.newKieBuilder( kfs ).buildAll();\n        final List<Message> messages = kieBuilder.getResults().getMessages();\n        Helper.dumpMessages( messages );\n        assertEquals( 0,\n                      messages.size() );\n\n        //Update with complete Score Card\n        kfs.write( \"src/main/resources/sc1.scgd\",\n                   xml1_2 );\n        IncrementalResults results = ( (InternalKieBuilder) kieBuilder ).incrementalBuild();\n\n        final List<Message> addedMessages = results.getAddedMessages();\n        final List<Message> removedMessages = results.getRemovedMessages();\n        Helper.dumpMessages( addedMessages );\n        assertEquals( 0,\n                      addedMessages.size() );\n        Helper.dumpMessages( removedMessages );\n        assertEquals( 0,\n                      removedMessages.size() );\n    }","commit_id":"7967be1ae1938e9e553b1e80b1e261186c2cebd5","url":"https://github.com/droolsjbpm/drools"},{"original_method":"@Test\n    public void testEmptyScoreCardCompilation() throws Exception {\n        String xml1 = createEmptyGuidedScoreCardXML();\n\n        KieServices ks = KieServices.Factory.get();\n        KieFileSystem kfs = ks.newKieFileSystem();\n        kfs.write( \"src/main/java/org/drools/workbench/models/guided/scorecard/backend/test2/Applicant.java\",\n                   getApplicant() );\n        kfs.write( \"src/main/java/org/drools/workbench/models/guided/scorecard/backend/test2/ApplicantAttribute.java\",\n                   getApplicantAttribute() );\n        kfs.write( \"src/main/resources/org/drools/workbench/models/guided/scorecard/backend/test2/sc1.scgd\",\n                   xml1 );\n\n        //Add complete Score Card\n        KieBuilder kieBuilder = ks.newKieBuilder( kfs ).buildAll();\n        final List<Message> messages = kieBuilder.getResults().getMessages();\n        dumpMessages( messages );\n        assertEquals( 0,\n                      messages.size() );\n    }","id":13302,"modified_method":"@Test\n    public void testEmptyScoreCardCompilation() throws Exception {\n        String xml1 = Helper.createEmptyGuidedScoreCardXML();\n\n        KieServices ks = KieServices.Factory.get();\n        KieFileSystem kfs = ks.newKieFileSystem();\n        kfs.write( \"pom.xml\",\n                   Helper.getPom() );\n        kfs.write( \"src/main/resources/META-INF/kmodule.xml\",\n                   Helper.getKModule() );\n        kfs.write( \"src/main/java/org/drools/workbench/models/guided/scorecard/backend/test2/Applicant.java\",\n                   Helper.getApplicant() );\n        kfs.write( \"src/main/java/org/drools/workbench/models/guided/scorecard/backend/test2/ApplicantAttribute.java\",\n                   Helper.getApplicantAttribute() );\n        kfs.write( \"src/main/resources/org/drools/workbench/models/guided/scorecard/backend/test2/sc1.scgd\",\n                   xml1 );\n\n        //Add complete Score Card\n        KieBuilder kieBuilder = ks.newKieBuilder( kfs ).buildAll();\n        final List<Message> messages = kieBuilder.getResults().getMessages();\n        Helper.dumpMessages( messages );\n        assertEquals( 0,\n                      messages.size() );\n    }","commit_id":"7967be1ae1938e9e553b1e80b1e261186c2cebd5","url":"https://github.com/droolsjbpm/drools"},{"original_method":"@Test\n    public void testCompletedScoreCardCompilation() throws Exception {\n        String xml1 = createGuidedScoreCardXML();\n\n        KieServices ks = KieServices.Factory.get();\n        KieFileSystem kfs = ks.newKieFileSystem().write( \"src/main/resources/sc1.scgd\",\n                                                         xml1 );\n\n        //Add complete Score Card\n        KieBuilder kieBuilder = ks.newKieBuilder( kfs ).buildAll();\n        final List<Message> messages = kieBuilder.getResults().getMessages();\n        dumpMessages( messages );\n        assertEquals( 0,\n                      messages.size() );\n    }","id":13303,"modified_method":"@Test\n    public void testCompletedScoreCardCompilation() throws Exception {\n        String xml1 = Helper.createGuidedScoreCardXML();\n\n        KieServices ks = KieServices.Factory.get();\n        KieFileSystem kfs = ks.newKieFileSystem();\n        kfs.write( \"pom.xml\",\n                   Helper.getPom() );\n        kfs.write( \"src/main/resources/META-INF/kmodule.xml\",\n                   Helper.getKModule() );\n        kfs.write( \"src/main/resources/sc1.scgd\",\n                   xml1 );\n\n        //Add complete Score Card\n        KieBuilder kieBuilder = ks.newKieBuilder( kfs ).buildAll();\n        final List<Message> messages = kieBuilder.getResults().getMessages();\n        Helper.dumpMessages( messages );\n        assertEquals( 0,\n                      messages.size() );\n    }","commit_id":"7967be1ae1938e9e553b1e80b1e261186c2cebd5","url":"https://github.com/droolsjbpm/drools"},{"original_method":"@Test\n    public void testIncrementalCompilation() throws Exception {\n        String xml1_1 = createEmptyGuidedScoreCardXML();\n        String xml1_2 = createGuidedScoreCardXML();\n\n        KieServices ks = KieServices.Factory.get();\n        KieFileSystem kfs = ks.newKieFileSystem().write( \"src/main/resources/sc1.scgd\",\n                                                         xml1_1 );\n\n        //Add empty Score Card\n        KieBuilder kieBuilder = ks.newKieBuilder( kfs ).buildAll();\n        final List<Message> messages = kieBuilder.getResults().getMessages();\n        dumpMessages( messages );\n        assertEquals( 0,\n                      messages.size() );\n\n        //Update with complete Score Card\n        kfs.write( \"src/main/resources/sc1.scgd\",\n                   xml1_2 );\n        IncrementalResults results = ( (InternalKieBuilder) kieBuilder ).incrementalBuild();\n\n        final List<Message> addedMessages = results.getAddedMessages();\n        final List<Message> removedMessages = results.getRemovedMessages();\n        dumpMessages( addedMessages );\n        assertEquals( 0,\n                      addedMessages.size() );\n        dumpMessages( removedMessages );\n        assertEquals( 0,\n                      removedMessages.size() );\n    }","id":13304,"modified_method":"@Test\n    public void testIncrementalCompilation() throws Exception {\n        String xml1_1 = Helper.createEmptyGuidedScoreCardXML();\n        String xml1_2 = Helper.createGuidedScoreCardXML();\n\n        KieServices ks = KieServices.Factory.get();\n        KieFileSystem kfs = ks.newKieFileSystem();\n        kfs.write( \"pom.xml\",\n                   Helper.getPom() );\n        kfs.write( \"src/main/resources/META-INF/kmodule.xml\",\n                   Helper.getKModule() );\n        kfs.write( \"src/main/resources/sc1.scgd\",\n                   xml1_1 );\n\n        //Add empty Score Card\n        KieBuilder kieBuilder = ks.newKieBuilder( kfs ).buildAll();\n        final List<Message> messages = kieBuilder.getResults().getMessages();\n        Helper.dumpMessages( messages );\n        assertEquals( 0,\n                      messages.size() );\n\n        //Update with complete Score Card\n        kfs.write( \"src/main/resources/sc1.scgd\",\n                   xml1_2 );\n        IncrementalResults results = ( (InternalKieBuilder) kieBuilder ).incrementalBuild();\n\n        final List<Message> addedMessages = results.getAddedMessages();\n        final List<Message> removedMessages = results.getRemovedMessages();\n        Helper.dumpMessages( addedMessages );\n        assertEquals( 0,\n                      addedMessages.size() );\n        Helper.dumpMessages( removedMessages );\n        assertEquals( 0,\n                      removedMessages.size() );\n    }","commit_id":"7967be1ae1938e9e553b1e80b1e261186c2cebd5","url":"https://github.com/droolsjbpm/drools"},{"original_method":"@Test\n    public void testEmptyScoreCardCompilation() throws Exception {\n        String xml1 = createEmptyGuidedScoreCardXML();\n\n        KieServices ks = KieServices.Factory.get();\n        KieFileSystem kfs = ks.newKieFileSystem().write( \"src/main/resources/sc1.scgd\",\n                                                         xml1 );\n\n        //Add complete Score Card\n        KieBuilder kieBuilder = ks.newKieBuilder( kfs ).buildAll();\n        final List<Message> messages = kieBuilder.getResults().getMessages();\n        dumpMessages( messages );\n        assertEquals( 0,\n                      messages.size() );\n    }","id":13305,"modified_method":"@Test\n    public void testEmptyScoreCardCompilation() throws Exception {\n        String xml1 = Helper.createEmptyGuidedScoreCardXML();\n\n        KieServices ks = KieServices.Factory.get();\n        KieFileSystem kfs = ks.newKieFileSystem();\n        kfs.write( \"pom.xml\",\n                   Helper.getPom() );\n        kfs.write( \"src/main/resources/META-INF/kmodule.xml\",\n                   Helper.getKModule() );\n        kfs.write( \"src/main/resources/sc1.scgd\",\n                   xml1 );\n\n        //Add complete Score Card\n        KieBuilder kieBuilder = ks.newKieBuilder( kfs ).buildAll();\n        final List<Message> messages = kieBuilder.getResults().getMessages();\n        Helper.dumpMessages( messages );\n        assertEquals( 0,\n                      messages.size() );\n    }","commit_id":"7967be1ae1938e9e553b1e80b1e261186c2cebd5","url":"https://github.com/droolsjbpm/drools"},{"original_method":"private void setMessage(Object message) throws MessagingException {\n        Message msg;\n        if (message instanceof Message) {\n            msg = (Message) message;\n        } else {\n            throw new MessageTypeNotSupportedException(message, MailMessageAdapter.class);\n        }\n\n        try {\n            Object content = msg.getContent();\n\n            if (content instanceof Multipart) {\n                this.messagePart = ((Multipart) content).getBodyPart(0);\n                logger.debug(\"Received Multipart message\");\n                Part part;\n                String name;\n                for (int i = 1; i < ((Multipart) content).getCount(); i++) {\n                    part = ((Multipart) content).getBodyPart(i);\n                    name = part.getFileName();\n                    if (name == null) name = String.valueOf(i - 1);\n                    addAttachment(name, part.getDataHandler());\n                }\n            } else {\n                messagePart = msg;\n            }\n\n            // Set message attrributes as properties\n            Address[] addresses = null;\n            properties.put(PROPERTY_SUBJECT, msg.getSubject());\n            addresses = msg.getFrom();\n            if (addresses != null && addresses.length > 0) {\n                properties.put(PROPERTY_FROM_ADDRESS, addresses[0].toString());\n                properties.put(PROPERTY_FROM_ADDRESSES, addresses);\n            }\n            properties.put(PROPERTY_TO_ADDRESSES, msg.getRecipients(Message.RecipientType.TO));\n            properties.put(PROPERTY_CC_ADDRESSES, msg.getRecipients(Message.RecipientType.CC));\n            properties.put(PROPERTY_BCC_ADDRESSES, msg.getRecipients(Message.RecipientType.BCC));\n\n            for (Enumeration e = msg.getAllHeaders(); e.hasMoreElements();) {\n                Header h = (Header) e.nextElement();\n                properties.put(h.getName(), h.getValue());\n            }\n\n        } catch (Exception e) {\n            throw new MessagingException(new org.mule.config.i18n.Message(Messages.FAILED_TO_CREATE_X,\n                    \"Message Adapter\"), e);\n        }\n    }","id":13306,"modified_method":"private void setMessage(Object message) throws MessagingException {\n        Message msg;\n        if (message instanceof Message) {\n            msg = (Message) message;\n        } else {\n            throw new MessageTypeNotSupportedException(message, MailMessageAdapter.class);\n        }\n\n        try {\n            Object content = msg.getContent();\n\n            if (content instanceof Multipart) {\n                this.messagePart = ((Multipart) content).getBodyPart(0);\n                logger.debug(\"Received Multipart message\");\n                Part part;\n                String name;\n                for (int i = 1; i < ((Multipart) content).getCount(); i++) {\n                    part = ((Multipart) content).getBodyPart(i);\n                    name = part.getFileName();\n                    if (name == null) name = String.valueOf(i - 1);\n                    addAttachment(name, part.getDataHandler());\n                }\n            } else {\n                messagePart = msg;\n            }\n\n            // Set message attrributes as properties\n            setProperty(MailProperties.TO_ADDRESSES_PROPERTY, MailUtils.mailAddressesToString(msg.getRecipients(Message.RecipientType.TO)));\n            setProperty(MailProperties.CC_ADDRESSES_PROPERTY, MailUtils.mailAddressesToString(msg.getRecipients(Message.RecipientType.CC)));\n            setProperty(MailProperties.BCC_ADDRESSES_PROPERTY, MailUtils.mailAddressesToString(msg.getRecipients(Message.RecipientType.BCC)));\n            setProperty(MailProperties.REPLY_TO_ADDRESSES_PROPERTY,  MailUtils.mailAddressesToString(msg.getReplyTo()));\n            setProperty(MailProperties.FROM_ADDRESS_PROPERTY,  MailUtils.mailAddressesToString(msg.getFrom()));\n            setProperty(MailProperties.SUBJECT_PROPERTY, msg.getSubject());\n            setProperty(MailProperties.CONTENT_TYPE_PROPERTY, msg.getContentType());\n            setProperty(MailProperties.SENT_DATE_PROPERTY, msg.getSentDate());\n\n            for (Enumeration e = msg.getAllHeaders(); e.hasMoreElements();) {\n                Header h = (Header) e.nextElement();\n                properties.put(h.getName(), h.getValue());\n            }\n\n        } catch (Exception e) {\n            throw new MessagingException(new org.mule.config.i18n.Message(Messages.FAILED_TO_CREATE_X,\n                    \"Message Adapter\"), e);\n        }\n    }","commit_id":"4223b7d4fa118ee652babe0c19946df8c0b2ecf9","url":"https://github.com/mulesoft/mule"},{"original_method":"public UMOTransformer getRoundTripTransformer() throws Exception\n    {\n        StringToEmailMessage trans = new StringToEmailMessage();\n        UMOEndpoint endpoint = new MuleEndpoint(\"smtp://a:a@a.com\", false);\n        final Mock mockDispatcher = new Mock(UMOMessageDispatcher.class);\n        mockDispatcher.expectAndReturn(\"getDelegateSession\", Session.getDefaultInstance(new Properties()));\n        mockDispatcher.expectAndReturn(\"getDelegateSession\", Session.getDefaultInstance(new Properties()));\n\n        endpoint.setConnector(new SmtpConnector() {\n            public UMOMessageDispatcher getDispatcher() throws UMOException\n            {\n                return (UMOMessageDispatcher) mockDispatcher.proxy();\n            }\n        });\n        trans.setEndpoint(endpoint);\n\n        return trans;\n    }","id":13307,"modified_method":"public UMOTransformer getRoundTripTransformer() throws Exception\n    {\n        StringToEmailMessage trans = new StringToEmailMessage();\n        UMOEndpoint endpoint = new MuleEndpoint(\"smtp://a:a@a.com\", false);\n\n        //We need to init the connect without actully connecting for this test case\n        try {\n            endpoint.getConnector().initialise();\n        } catch (AlreadyInitialisedException e) {\n            //ignore\n        }\n        final Mock mockDispatcher = new Mock(UMOMessageDispatcher.class);\n        mockDispatcher.expectAndReturn(\"getDelegateSession\", Session.getDefaultInstance(new Properties()));\n        mockDispatcher.expectAndReturn(\"getDelegateSession\", Session.getDefaultInstance(new Properties()));\n\n        endpoint.setConnector(new SmtpConnector() {\n            public UMOMessageDispatcher getDispatcher() throws UMOException\n            {\n                return (UMOMessageDispatcher) mockDispatcher.proxy();\n            }\n        });\n        trans.setEndpoint(endpoint);\n\n        return trans;\n    }","commit_id":"4223b7d4fa118ee652babe0c19946df8c0b2ecf9","url":"https://github.com/mulesoft/mule"},{"original_method":"public static Session createMailSession(URLName url)\n    {\n        if (url == null) {\n            throw new IllegalArgumentException(\"Url argument cannot be null when creating a session\");\n        }\n        Properties props = System.getProperties();\n        props.put(\"mail.smtp.host\", url.getHost());\n        props.put(\"mail.smtp.port\", String.valueOf(url.getPort()));\n        Session session;\n        if (url.getPassword() != null) {\n            props.put(\"mail.smtp.auth\", \"true\");\n            Authenticator auth = new SMTPAuthenticator(url.getUsername(), url.getPassword());\n            session = Session.getInstance(props, auth);\n        } else {\n            session = Session.getDefaultInstance(props, null);\n        }\n        return session;\n    }","id":13308,"modified_method":"/**\n     * Creates a new Mail session based on a Url.  this method will also add an Smtp Authenticator\n     * if a password is set on the URL\n     * @param url\n     * @return\n     */\n    public static Session createMailSession(URLName url, MailConnector connector)\n    {\n        if (url == null) {\n            throw new IllegalArgumentException(new org.mule.config.i18n.Message(Messages.X_IS_NULL, \"URL\").toString());\n        }\n        String protocol = connector.getProtocol().toLowerCase();\n        boolean secure = false;\n        if(protocol.equals(\"smtps\")) {\n            protocol = \"smtp\";\n            secure=true;\n        } else if(protocol.equals(\"pop3s\")) {\n            protocol = \"pop3\";\n            secure = true;\n        } else if(protocol.equals(\"imaps\")) {\n            protocol = \"imap\";\n            secure = true;\n        }\n\n        Properties props = System.getProperties();\n        props.put(\"mail.\" + protocol +\".host\", url.getHost());\n        int port = url.getPort();\n        if(port==-1) {\n            port = connector.getPort();\n        }\n        props.put(\"mail.\" + protocol + \".port\", String.valueOf(port));\n\n        if(secure) {\n            System.setProperty(\"mail.\" + protocol + \".socketFactory.port\", String.valueOf(port));\n\n        }\n        Session session;\n        if (url.getPassword() != null) {\n            props.put(\"mail.\" + protocol + \".auth\", \"true\");\n            Authenticator auth = connector.getAuthenticator();\n            if(auth==null) {\n                auth = new DefaultAuthenticator(url.getUsername(), url.getPassword());\n                logger.debug(\"No Authenticator set on Connector: \" + connector.getName() + \". Using default.\");\n            }\n            session = Session.getInstance(props, auth);\n        } else {\n            session = Session.getDefaultInstance(props, null);\n        }\n        return session;\n    }","commit_id":"4223b7d4fa118ee652babe0c19946df8c0b2ecf9","url":"https://github.com/mulesoft/mule"},{"original_method":"protected void initialise(UMOEndpointURI endpoint) throws MessagingException\n    {\n        if (!initialised.get()) {\n            String inbox = null;\n            if (connector.getProtocol().equals(\"imap\") && endpoint.getParams().get(\"folder\") != null) {\n                inbox = (String) endpoint.getParams().get(\"folder\");\n            } else {\n                inbox = Pop3Connector.MAILBOX;\n            }\n\n            URLName url = new URLName(endpoint.getScheme(),\n                                      endpoint.getHost(),\n                                      endpoint.getPort(),\n                                      inbox,\n                                      endpoint.getUsername(),\n                                      endpoint.getPassword());\n\n            session = MailUtils.createMailSession(url);\n            session.setDebug(logger.isDebugEnabled());\n\n            Store store = session.getStore(url);\n            store.connect();\n            folder = store.getFolder(inbox);\n            if (!folder.isOpen()) {\n                try {\n                    // Depending on Server implementation it's not always\n                    // necessary\n                    // to open the folder to check it\n                    // Opening folders can be exprensive!\n                    // folder.open(Folder.READ_ONLY);\n                    folder.open(Folder.READ_WRITE);\n                } catch (MessagingException e) {\n                    logger.warn(\"Failed to open folder: \" + folder.getFullName(), e);\n                }\n            }\n        }\n    }","id":13309,"modified_method":"protected void initialise(UMOEndpointURI endpoint) throws MessagingException\n    {\n        if (!initialised.get()) {\n            String inbox = null;\n            if (connector.getProtocol().equals(\"imap\") && endpoint.getParams().get(\"folder\") != null) {\n                inbox = (String) endpoint.getParams().get(\"folder\");\n            } else {\n                inbox = Pop3Connector.MAILBOX;\n            }\n\n            URLName url = new URLName(endpoint.getScheme(),\n                                      endpoint.getHost(),\n                                      endpoint.getPort(),\n                                      inbox,\n                                      endpoint.getUsername(),\n                                      endpoint.getPassword());\n\n            session = MailUtils.createMailSession(url, connector);\n            session.setDebug(logger.isDebugEnabled());\n\n            Store store = session.getStore(url);\n            store.connect();\n            folder = store.getFolder(inbox);\n            if (!folder.isOpen()) {\n                try {\n                    // Depending on Server implementation it's not always\n                    // necessary\n                    // to open the folder to check it\n                    // Opening folders can be exprensive!\n                    // folder.open(Folder.READ_ONLY);\n                    folder.open(Folder.READ_WRITE);\n                } catch (MessagingException e) {\n                    logger.warn(\"Failed to open folder: \" + folder.getFullName(), e);\n                }\n            }\n        }\n    }","commit_id":"4223b7d4fa118ee652babe0c19946df8c0b2ecf9","url":"https://github.com/mulesoft/mule"},{"original_method":"public void doConnect() throws Exception\n    {\n        String inbox = null;\n        if (connector.getProtocol().equals(\"imap\")) {\n            inbox = endpoint.getEndpointURI().getPath();\n            if(inbox.length()==0) {\n                inbox = Pop3Connector.MAILBOX;\n            } else {\n            \tinbox = inbox.substring(1);\t\n            }\n        } else {\n            inbox = Pop3Connector.MAILBOX;\n        }\n\n        URLName url = new URLName(endpoint.getEndpointURI().getScheme(),\n                                  endpoint.getEndpointURI().getHost(),\n                                  endpoint.getEndpointURI().getPort(),\n                                  inbox,\n                                  endpoint.getEndpointURI().getUsername(),\n                                  endpoint.getEndpointURI().getPassword());\n\n        session = MailUtils.createMailSession(url);\n        session.setDebug(logger.isDebugEnabled());\n\n        Store store = session.getStore(url);\n        store.connect();\n        folder = store.getFolder(inbox);\n    }","id":13310,"modified_method":"public void doConnect() throws Exception\n    {\n        String inbox = null;\n        if (connector.getProtocol().equalsIgnoreCase(\"imap\")) {\n            inbox = endpoint.getEndpointURI().getPath();\n            if(inbox.length()==0) {\n                inbox = Pop3Connector.MAILBOX;\n            } else {\n            \tinbox = inbox.substring(1);\t\n            }\n        } else {\n            inbox = Pop3Connector.MAILBOX;\n        }\n\n        URLName url = new URLName(endpoint.getEndpointURI().getScheme(),\n                                  endpoint.getEndpointURI().getHost(),\n                                  endpoint.getEndpointURI().getPort(),\n                                  inbox,\n                                  endpoint.getEndpointURI().getUsername(),\n                                  endpoint.getEndpointURI().getPassword());\n\n        session = MailUtils.createMailSession(url, (MailConnector)connector);\n        session.setDebug(logger.isDebugEnabled());\n\n        Store store = session.getStore(url);\n        store.connect();\n        folder = store.getFolder(inbox);\n    }","commit_id":"4223b7d4fa118ee652babe0c19946df8c0b2ecf9","url":"https://github.com/mulesoft/mule"},{"original_method":"public static String propertiesToString(Map props, boolean newline)\n    {\n        StringBuffer buf = new StringBuffer();\n        buf.append(\"Properties{\");\n        if (newline) {\n            buf.append(\"\\n\");\n        }\n        Map.Entry entry;\n        for (Iterator iterator = props.entrySet().iterator(); iterator.hasNext();) {\n            entry = (Map.Entry) iterator.next();\n            if (!newline) {\n                buf.append(\", \");\n            }\n            buf.append(entry.getKey()).append(\"=\").append((\n                    entry.getKey().toString().equalsIgnoreCase(\"password\") ? \"*****\" : entry.getValue()));\n            if (newline) {\n                buf.append(\"\\n\");\n            }\n        }\n        buf.append(\"}\");\n        return buf.toString();\n    }","id":13311,"modified_method":"public static String propertiesToString(Map props, boolean newline)\n    {\n        StringBuffer buf = new StringBuffer();\n        buf.append(\"Properties{\");\n        if(props==null || props.entrySet().size()==0) {\n            buf.append(\"none}\");\n            return buf.toString();\n        }\n        if (newline) {\n            buf.append(\"\\n\");\n        }\n        Map.Entry entry;\n        for (Iterator iterator = props.entrySet().iterator(); iterator.hasNext();) {\n            entry = (Map.Entry) iterator.next();\n            if (!newline) {\n                buf.append(\", \");\n            }\n            buf.append(entry.getKey()).append(\"=\").append((\n                    entry.getKey().toString().equalsIgnoreCase(\"password\") ? \"*****\" : entry.getValue()));\n            if (newline) {\n                buf.append(\"\\n\");\n            }\n        }\n        buf.append(\"}\");\n        return buf.toString();\n    }","commit_id":"4223b7d4fa118ee652babe0c19946df8c0b2ecf9","url":"https://github.com/mulesoft/mule"},{"original_method":"public SmtpConnector() throws Exception\n    {\n        super.doInitialise();\n    }","id":13312,"modified_method":"public SmtpConnector() throws InitialisationException\n    {\n        initFromServiceDescriptor();\n    }","commit_id":"4223b7d4fa118ee652babe0c19946df8c0b2ecf9","url":"https://github.com/mulesoft/mule"},{"original_method":"protected void sendMailMessage(Message message) throws MessagingException\n    {\n        // sent date\n        message.setSentDate(Calendar.getInstance().getTime());\n        Transport.send(message);\n        if (logger.isInfoEnabled()) {\n            StringBuffer msg = new StringBuffer();\n            msg.append(\"Email message sent with subject'\").append(message.getSubject()).append(\"' sent- \");\n            String to = getRecipients(message, Message.RecipientType.TO);\n            String cc = getRecipients(message, Message.RecipientType.CC);\n            String bcc = getRecipients(message, Message.RecipientType.BCC);\n\n            msg.append(\"FROM: \").append(message.getFrom()[0]).append(\" \");\n            if (to != null)\n                msg.append(\"TO: \").append(to).append(\" \");\n            if (cc != null)\n                msg.append(\"CC: \").append(cc).append(\" \");\n            if (bcc != null)\n                msg.append(\"BCC: \").append(bcc).append(\" \");\n\n            logger.info(msg.toString());\n        }\n\n    }","id":13313,"modified_method":"protected void sendMailMessage(Message message) throws MessagingException\n    {\n        // sent date\n        message.setSentDate(Calendar.getInstance().getTime());\n        Transport.send(message);\n        if (logger.isDebugEnabled()) {\n            StringBuffer msg = new StringBuffer();\n            msg.append(\"Email message sent with subject'\").append(message.getSubject()).append(\"' sent- \");\n            msg.append(\"From: \").append(MailUtils.mailAddressesToString(message.getFrom())).append(\" \");\n            msg.append(\"To: \").append(MailUtils.mailAddressesToString(message.getRecipients(Message.RecipientType.TO))).append(\" \");\n            msg.append(\"Cc: \").append(MailUtils.mailAddressesToString(message.getRecipients(Message.RecipientType.CC))).append(\" \");\n            msg.append(\"Bcc: \").append(MailUtils.mailAddressesToString(message.getRecipients(Message.RecipientType.BCC))).append(\" \");\n            msg.append(\"ReplyTo: \").append(MailUtils.mailAddressesToString(message.getReplyTo()));\n\n            logger.debug(msg.toString());\n        }\n\n    }","commit_id":"4223b7d4fa118ee652babe0c19946df8c0b2ecf9","url":"https://github.com/mulesoft/mule"},{"original_method":"public void doDispatch(UMOEvent event)\n    {\n        UMOEndpoint endpoint = event.getEndpoint();\n\n        String endpointAddress = endpoint.getEndpointURI().getAddress();\n        Map props = event.getProperties();\n        String to = PropertiesHelper.getStringProperty(props, SmtpConnector.TO_ADDRESSES_PROPERTY, endpointAddress);\n        String cc = PropertiesHelper.getStringProperty(props,\n                                                       SmtpConnector.CC_ADDRESSES_PROPERTY,\n                                                       connector.getCcAddresses());\n        String bcc = PropertiesHelper.getStringProperty(props,\n                                                        SmtpConnector.BCC_ADDRESSES_PROPERTY,\n                                                        connector.getBccAddresses());\n        String from = PropertiesHelper.getStringProperty(props,\n                                                         SmtpConnector.FROM_ADDRESS_PROPERTY,\n                                                         connector.getFromAddress());\n        String subject = PropertiesHelper.getStringProperty(props,\n                                                            SmtpConnector.SUBJECT_PROPERTY,\n                                                            connector.getSubject());\n\n        Message msg = null;\n\n        try {\n            Object data = event.getTransformedMessage();\n\n            if (!(data instanceof Message)) {\n                msg = connector.createMessage(from,\n                                              to,\n                                              cc,\n                                              bcc,\n                                              subject,\n                                              data == null ? null : data.toString(),\n                                              session);\n            } else {\n                // Check the message for any unset data and use defaults\n                msg = (Message) data;\n\n                if (msg.getRecipients(Message.RecipientType.TO) == null) {\n                    // to\n                    InternetAddress[] toAddrs = null;\n                    toAddrs = InternetAddress.parse(to, false);\n                    msg.setRecipients(Message.RecipientType.TO, toAddrs);\n                    if (logger.isDebugEnabled()) {\n                        logger.debug(\"Sending message to: \" + to);\n                    }\n                }\n\n                // From\n                if (msg.getFrom() == null) {\n                    msg.setFrom(new InternetAddress(from));\n                }\n\n                // cc\n                InternetAddress[] ccAddrs = null;\n                if ((cc != null) && !cc.equals(\"\")) {\n                    ccAddrs = InternetAddress.parse(cc, false);\n                    msg.setRecipients(Message.RecipientType.CC, ccAddrs);\n                }\n\n                // bcc\n                InternetAddress[] bccAddrs = null;\n                if ((bcc != null) && !bcc.equals(\"\")) {\n                    bccAddrs = InternetAddress.parse(bcc, false);\n                    msg.setRecipients(Message.RecipientType.BCC, bccAddrs);\n                }\n\n                // Subjct\n                if (msg.getSubject() == null || \"\".equals(msg.getSubject())) {\n                    msg.setSubject(subject);\n                }\n            }\n\n            sendMailMessage(msg);\n            if (logger.isDebugEnabled()) {\n                logger.debug(\"Sent message to: \" + msg.getRecipients(Message.RecipientType.TO)[0].toString() + \", cc: \"\n                        + cc + \", bcc: \" + bcc + \", from: \" + from);\n            }\n        } catch (Exception e) {\n            connector.handleException(e);\n        }\n    }","id":13314,"modified_method":"public void doDispatch(UMOEvent event)\n    {\n\n\n        Message msg = null;\n\n        try {\n            Object data = event.getTransformedMessage();\n\n            if (!(data instanceof Message)) {\n               throw new DispatchException(new org.mule.config.i18n.Message(Messages.TRANSFORM_X_UNEXPECTED_TYPE_X, data.getClass().getName(), Message.class.getName()),\n                       event.getMessage(), event.getEndpoint());\n            } else {\n                // Check the message for any unset data and use defaults\n                msg = (Message) data;\n            }\n\n            sendMailMessage(msg);\n        } catch (Exception e) {\n            connector.handleException(e);\n        }\n    }","commit_id":"4223b7d4fa118ee652babe0c19946df8c0b2ecf9","url":"https://github.com/mulesoft/mule"},{"original_method":"/**\n     * @param connector\n     */\n    public SmtpMessageDispatcher(SmtpConnector connector)\n    {\n        super(connector);\n        this.connector = connector;\n\n        URLName url = new URLName(connector.getProtocol(),\n                                  connector.getHostname(),\n                                  connector.getPort(),\n                                  null,\n                                  connector.getUsername(),\n                                  connector.getPassword());\n        session = MailUtils.createMailSession(url);\n        session.setDebug(logger.isDebugEnabled());\n    }","id":13315,"modified_method":"/**\n     * @param connector\n     */\n    public SmtpMessageDispatcher(SmtpConnector connector)\n    {\n        super(connector);\n        this.connector = connector;\n\n        URLName url = new URLName(connector.getProtocol(),\n                                  connector.getHostname(),\n                                  connector.getPort(),\n                                  null,\n                                  connector.getUsername(),\n                                  connector.getPassword());\n\n        session = MailUtils.createMailSession(url, connector);\n        session.setDebug(logger.isDebugEnabled());\n    }","commit_id":"4223b7d4fa118ee652babe0c19946df8c0b2ecf9","url":"https://github.com/mulesoft/mule"},{"original_method":"public Object transform(Object src, UMOEventContext context) throws TransformerException\n    {\n        String contentType = (String) context.getProperty(\"contentType\");\n        if (contentType == null)\n            contentType = \"text/plain\";\n\n        try {\n            Message msg = new MimeMessage((Session) endpoint.getConnector().getDispatcher(\"ANY\").getDelegateSession());\n\n            msg.setRecipients(Message.RecipientType.TO, inetToAddresses);\n\n            // sent date\n            msg.setSentDate(Calendar.getInstance().getTime());\n\n            if (inetFromAddress != null) {\n                msg.setFrom(inetFromAddress);\n            }\n\n            msg.setSubject(getSubject());\n\n            setContent(src, msg, contentType, context);\n\n            return msg;\n        } catch (Exception e) {\n            throw new TransformerException(this, e);\n        }\n    }","id":13316,"modified_method":"public Object transform(Object src, UMOEventContext context) throws TransformerException\n    {\n        String contentType = context.getStringProperty(MailProperties.CONTENT_TYPE_PROPERTY, SmtpConnector.DEFAULT_CONTENT_TYPE);\n\n        String endpointAddress = endpoint.getEndpointURI().getAddress();\n        SmtpConnector connector = (SmtpConnector)endpoint.getConnector();\n        String to = context.getStringProperty(MailProperties.TO_ADDRESSES_PROPERTY, endpointAddress);\n        String cc = context.getStringProperty(MailProperties.CC_ADDRESSES_PROPERTY, connector.getCcAddresses());\n        String bcc = context.getStringProperty(MailProperties.BCC_ADDRESSES_PROPERTY, connector.getBccAddresses());\n        String from = context.getStringProperty(MailProperties.FROM_ADDRESS_PROPERTY, connector.getFromAddress());\n        String replyTo = context.getStringProperty(MailProperties.REPLY_TO_ADDRESSES_PROPERTY, connector.getReplyToAddresses());\n        String subject = context.getStringProperty(MailProperties.SUBJECT_PROPERTY, connector.getSubject());\n\n        Properties headers = new Properties();\n        if(connector.getCustomHeaders()!=null) headers.putAll(connector.getCustomHeaders());\n        Properties otherHeaders = (Properties)context.getProperty(MailProperties.CUSTOM_HEADERS_MAP_PROPERTY);\n        if(otherHeaders!=null) headers.putAll(otherHeaders);\n\n        if(logger.isDebugEnabled()) {\n            StringBuffer buf = new StringBuffer();\n            buf.append(\"Constucting email using:\\n\");\n            buf.append(\"To: \").append(to);\n            buf.append(\"From: \").append(from);\n            buf.append(\"CC: \").append(cc);\n            buf.append(\"BCC: \").append(bcc);\n            buf.append(\"Subject: \").append(subject);\n            buf.append(\"ReplyTo: \").append(replyTo);\n            buf.append(\"Content type: \").append(contentType);\n            buf.append(\"Payload type: \").append(src.getClass().getName());\n            buf.append(\"Custom Headers: \").append(PropertiesHelper.propertiesToString(headers, false));\n            logger.debug(buf.toString());\n        }\n\n        try {\n            Message msg = new MimeMessage((Session) endpoint.getConnector().getDispatcher(endpointAddress).getDelegateSession());\n\n            msg.setRecipients(Message.RecipientType.TO, MailUtils.StringToInternetAddresses(to));\n\n            // sent date\n            msg.setSentDate(Calendar.getInstance().getTime());\n\n            if (from != null && !Utility.EMPTY_STRING.equals(from)) {\n                msg.setFrom(MailUtils.StringToInternetAddresses(from)[0]);\n            }\n\n            if (cc != null && !Utility.EMPTY_STRING.equals(cc)) {\n                msg.setRecipients(Message.RecipientType.CC, MailUtils.StringToInternetAddresses(cc));\n            }\n\n            if (bcc != null && !Utility.EMPTY_STRING.equals(bcc)) {\n                msg.setRecipients(Message.RecipientType.BCC, MailUtils.StringToInternetAddresses(bcc));\n            }\n\n            if (replyTo != null && !Utility.EMPTY_STRING.equals(replyTo)) {\n                msg.setReplyTo(MailUtils.StringToInternetAddresses(replyTo));\n            }\n\n            msg.setSubject(subject);\n\n            Map.Entry entry;\n            for (Iterator iterator = headers.entrySet().iterator(); iterator.hasNext();) {\n                entry = (Map.Entry)iterator.next();\n                msg.setHeader(entry.getKey().toString(), entry.getValue().toString());\n            }\n\n            setContent(src, msg, contentType, context);\n\n            return msg;\n        } catch (Exception e) {\n            throw new TransformerException(this, e);\n        }\n    }","commit_id":"4223b7d4fa118ee652babe0c19946df8c0b2ecf9","url":"https://github.com/mulesoft/mule"},{"original_method":"@Override\n        public void messageReceived(final RecoveryFileChunkRequest request, TransportChannel channel) throws Exception {\n            RecoveryStatus onGoingRecovery = onGoingRecoveries.get(request.recoveryId());\n            if (onGoingRecovery == null) {\n                // shard is getting closed on us\n                throw new IndexShardClosedException(request.shardId());\n            }\n            if (onGoingRecovery.isCanceled()) {\n                onGoingRecovery.sentCanceledToSource = true;\n                throw new IndexShardClosedException(request.shardId());\n            }\n\n            Store store = onGoingRecovery.indexShard.store();\n            store.incRef();\n            try {\n                IndexOutput indexOutput;\n                if (request.position() == 0) {\n                    // first request\n                    onGoingRecovery.checksums.remove(request.name());\n                    indexOutput = onGoingRecovery.removeOpenIndexOutputs(request.name());\n                    IOUtils.closeWhileHandlingException(indexOutput);\n                    // we create an output with no checksum, this is because the pure binary data of the file is not\n                    // the checksum (because of seek). We will create the checksum file once copying is done\n\n                    // also, we check if the file already exists, if it does, we create a file name based\n                    // on the current recovery \"id\" and later we make the switch, the reason for that is that\n                    // we only want to overwrite the index files once we copied all over, and not create a\n                    // case where the index is half moved\n\n                    String fileName = request.name();\n                    if (store.directory().fileExists(fileName)) {\n                        fileName = \"recovery.\" + onGoingRecovery.recoveryState().getTimer().startTime() + \".\" + fileName;\n                    }\n                    indexOutput = onGoingRecovery.openAndPutIndexOutput(request.name(), fileName, store);\n                } else {\n                    indexOutput = onGoingRecovery.getOpenIndexOutput(request.name());\n                }\n                if (indexOutput == null) {\n                    // shard is getting closed on us\n                    throw new IndexShardClosedException(request.shardId());\n                }\n                boolean success = false;\n                synchronized (indexOutput) {\n                    try {\n                        if (recoverySettings.rateLimiter() != null) {\n                            recoverySettings.rateLimiter().pause(request.content().length());\n                        }\n                        BytesReference content = request.content();\n                        if (!content.hasArray()) {\n                            content = content.toBytesArray();\n                        }\n                        indexOutput.writeBytes(content.array(), content.arrayOffset(), content.length());\n                        onGoingRecovery.recoveryState.getIndex().addRecoveredByteCount(content.length());\n                        RecoveryState.File file = onGoingRecovery.recoveryState.getIndex().file(request.name());\n                        if (file != null) {\n                            file.updateRecovered(request.length());\n                        }\n                        if (indexOutput.getFilePointer() == request.length()) {\n                            // we are done\n                            indexOutput.close();\n                            // write the checksum\n                            if (request.checksum() != null) {\n                                onGoingRecovery.checksums.put(request.name(), request.checksum());\n                            }\n                            store.directory().sync(Collections.singleton(request.name()));\n                            IndexOutput remove = onGoingRecovery.removeOpenIndexOutputs(request.name());\n                            onGoingRecovery.recoveryState.getIndex().addRecoveredFileCount(1);\n                            assert remove == null || remove == indexOutput; // remove maybe null if we got canceled\n                        }\n                        success = true;\n                    } finally {\n                        if (!success || onGoingRecovery.isCanceled()) {\n                            IndexOutput remove = onGoingRecovery.removeOpenIndexOutputs(request.name());\n                            assert remove == null || remove == indexOutput;\n                            IOUtils.closeWhileHandlingException(indexOutput);\n                        }\n                    }\n                }\n                if (onGoingRecovery.isCanceled()) {\n                    onGoingRecovery.sentCanceledToSource = true;\n                    throw new IndexShardClosedException(request.shardId());\n                }\n                channel.sendResponse(TransportResponse.Empty.INSTANCE);\n            } finally {\n                store.decRef();\n            }\n        }","id":13317,"modified_method":"@Override\n        public void messageReceived(final RecoveryFileChunkRequest request, TransportChannel channel) throws Exception {\n            RecoveryStatus onGoingRecovery = onGoingRecoveries.get(request.recoveryId());\n            validateRecoveryStatus(onGoingRecovery, request.shardId());\n\n            Store store = onGoingRecovery.indexShard.store();\n            store.incRef();\n            try {\n                IndexOutput indexOutput;\n                if (request.position() == 0) {\n                    // first request\n                    onGoingRecovery.checksums.remove(request.name());\n                    indexOutput = onGoingRecovery.removeOpenIndexOutputs(request.name());\n                    IOUtils.closeWhileHandlingException(indexOutput);\n                    // we create an output with no checksum, this is because the pure binary data of the file is not\n                    // the checksum (because of seek). We will create the checksum file once copying is done\n\n                    // also, we check if the file already exists, if it does, we create a file name based\n                    // on the current recovery \"id\" and later we make the switch, the reason for that is that\n                    // we only want to overwrite the index files once we copied all over, and not create a\n                    // case where the index is half moved\n\n                    String fileName = request.name();\n                    if (store.directory().fileExists(fileName)) {\n                        fileName = \"recovery.\" + onGoingRecovery.recoveryState().getTimer().startTime() + \".\" + fileName;\n                    }\n                    indexOutput = onGoingRecovery.openAndPutIndexOutput(request.name(), fileName, store);\n                } else {\n                    indexOutput = onGoingRecovery.getOpenIndexOutput(request.name());\n                }\n                if (indexOutput == null) {\n                    // shard is getting closed on us\n                    throw new IndexShardClosedException(request.shardId());\n                }\n                boolean success = false;\n                synchronized (indexOutput) {\n                    try {\n                        if (recoverySettings.rateLimiter() != null) {\n                            recoverySettings.rateLimiter().pause(request.content().length());\n                        }\n                        BytesReference content = request.content();\n                        if (!content.hasArray()) {\n                            content = content.toBytesArray();\n                        }\n                        indexOutput.writeBytes(content.array(), content.arrayOffset(), content.length());\n                        onGoingRecovery.recoveryState.getIndex().addRecoveredByteCount(content.length());\n                        RecoveryState.File file = onGoingRecovery.recoveryState.getIndex().file(request.name());\n                        if (file != null) {\n                            file.updateRecovered(request.length());\n                        }\n                        if (indexOutput.getFilePointer() == request.length()) {\n                            // we are done\n                            indexOutput.close();\n                            // write the checksum\n                            if (request.checksum() != null) {\n                                onGoingRecovery.checksums.put(request.name(), request.checksum());\n                            }\n                            store.directory().sync(Collections.singleton(request.name()));\n                            IndexOutput remove = onGoingRecovery.removeOpenIndexOutputs(request.name());\n                            onGoingRecovery.recoveryState.getIndex().addRecoveredFileCount(1);\n                            assert remove == null || remove == indexOutput; // remove maybe null if we got canceled\n                        }\n                        success = true;\n                    } finally {\n                        if (!success || onGoingRecovery.isCanceled()) {\n                            IndexOutput remove = onGoingRecovery.removeOpenIndexOutputs(request.name());\n                            assert remove == null || remove == indexOutput;\n                            IOUtils.closeWhileHandlingException(indexOutput);\n                        }\n                    }\n                }\n                if (onGoingRecovery.isCanceled()) {\n                    onGoingRecovery.sentCanceledToSource = true;\n                    throw new IndexShardClosedException(request.shardId());\n                }\n                channel.sendResponse(TransportResponse.Empty.INSTANCE);\n            } finally {\n                store.decRef();\n            }\n        }","commit_id":"5668b1cfc579e5e05f2bb50d78bcdebd75da1ecb","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n        public void messageReceived(RecoveryFilesInfoRequest request, TransportChannel channel) throws Exception {\n            RecoveryStatus onGoingRecovery = onGoingRecoveries.get(request.recoveryId());\n            if (onGoingRecovery == null) {\n                // shard is getting closed on us\n                throw new IndexShardClosedException(request.shardId());\n            }\n            if (onGoingRecovery.isCanceled()) {\n                onGoingRecovery.sentCanceledToSource = true;\n                throw new IndexShardClosedException(request.shardId());\n            }\n\n            onGoingRecovery.recoveryState().getIndex().addFileDetails(request.phase1FileNames, request.phase1FileSizes);\n            onGoingRecovery.recoveryState().getIndex().addReusedFileDetails(request.phase1ExistingFileNames, request.phase1ExistingFileSizes);\n            onGoingRecovery.recoveryState().getIndex().totalByteCount(request.phase1TotalSize);\n            onGoingRecovery.recoveryState().getIndex().reusedByteCount(request.phase1ExistingTotalSize);\n            onGoingRecovery.recoveryState().getIndex().totalFileCount(request.phase1FileNames.size());\n            onGoingRecovery.stage(RecoveryState.Stage.INDEX);\n            channel.sendResponse(TransportResponse.Empty.INSTANCE);\n        }","id":13318,"modified_method":"@Override\n        public void messageReceived(RecoveryFilesInfoRequest request, TransportChannel channel) throws Exception {\n            RecoveryStatus onGoingRecovery = onGoingRecoveries.get(request.recoveryId());\n            validateRecoveryStatus(onGoingRecovery, request.shardId());\n\n            onGoingRecovery.recoveryState().getIndex().addFileDetails(request.phase1FileNames, request.phase1FileSizes);\n            onGoingRecovery.recoveryState().getIndex().addReusedFileDetails(request.phase1ExistingFileNames, request.phase1ExistingFileSizes);\n            onGoingRecovery.recoveryState().getIndex().totalByteCount(request.phase1TotalSize);\n            onGoingRecovery.recoveryState().getIndex().reusedByteCount(request.phase1ExistingTotalSize);\n            onGoingRecovery.recoveryState().getIndex().totalFileCount(request.phase1FileNames.size());\n            onGoingRecovery.stage(RecoveryState.Stage.INDEX);\n            channel.sendResponse(TransportResponse.Empty.INSTANCE);\n        }","commit_id":"5668b1cfc579e5e05f2bb50d78bcdebd75da1ecb","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n        public void messageReceived(RecoveryCleanFilesRequest request, TransportChannel channel) throws Exception {\n            RecoveryStatus onGoingRecovery = onGoingRecoveries.get(request.recoveryId());\n            if (onGoingRecovery == null) {\n                // shard is getting closed on us\n                throw new IndexShardClosedException(request.shardId());\n            }\n            if (onGoingRecovery.isCanceled()) {\n                onGoingRecovery.sentCanceledToSource = true;\n                throw new IndexShardClosedException(request.shardId());\n            }\n\n            final Store store = onGoingRecovery.indexShard.store();\n            store.incRef();\n            try {\n                // first, we go and move files that were created with the recovery id suffix to\n                // the actual names, its ok if we have a corrupted index here, since we have replicas\n                // to recover from in case of a full cluster shutdown just when this code executes...\n                String prefix = \"recovery.\" + onGoingRecovery.recoveryState().getTimer().startTime() + \".\";\n                Set<String> filesToRename = Sets.newHashSet();\n                for (String existingFile : store.directory().listAll()) {\n                    if (existingFile.startsWith(prefix)) {\n                        filesToRename.add(existingFile.substring(prefix.length(), existingFile.length()));\n                    }\n                }\n                Exception failureToRename = null;\n                if (!filesToRename.isEmpty()) {\n                    // first, go and delete the existing ones\n                    final Directory directory = store.directory();\n                    for (String file : filesToRename) {\n                        try {\n                            directory.deleteFile(file);\n                        } catch (Throwable ex) {\n                            logger.debug(\"failed to delete file [{}]\", ex, file);\n                        }\n                    }\n                    for (String fileToRename : filesToRename) {\n                        // now, rename the files... and fail it it won't work\n                        store.renameFile(prefix + fileToRename, fileToRename);\n                    }\n                }\n                // now write checksums\n                store.writeChecksums(onGoingRecovery.checksums);\n\n                for (String existingFile : store.directory().listAll()) {\n                    // don't delete snapshot file, or the checksums file (note, this is extra protection since the Store won't delete checksum)\n                    if (!request.snapshotFiles().contains(existingFile) && !Store.isChecksum(existingFile)) {\n                        try {\n                            store.directory().deleteFile(existingFile);\n                        } catch (Exception e) {\n                            // ignore, we don't really care, will get deleted later on\n                        }\n                    }\n                }\n                channel.sendResponse(TransportResponse.Empty.INSTANCE);\n            } finally {\n                store.decRef();\n            }\n        }","id":13319,"modified_method":"@Override\n        public void messageReceived(RecoveryCleanFilesRequest request, TransportChannel channel) throws Exception {\n            RecoveryStatus onGoingRecovery = onGoingRecoveries.get(request.recoveryId());\n            validateRecoveryStatus(onGoingRecovery, request.shardId());\n\n            final Store store = onGoingRecovery.indexShard.store();\n            store.incRef();\n            try {\n                // first, we go and move files that were created with the recovery id suffix to\n                // the actual names, its ok if we have a corrupted index here, since we have replicas\n                // to recover from in case of a full cluster shutdown just when this code executes...\n                String prefix = \"recovery.\" + onGoingRecovery.recoveryState().getTimer().startTime() + \".\";\n                Set<String> filesToRename = Sets.newHashSet();\n                for (String existingFile : store.directory().listAll()) {\n                    if (existingFile.startsWith(prefix)) {\n                        filesToRename.add(existingFile.substring(prefix.length(), existingFile.length()));\n                    }\n                }\n                Exception failureToRename = null;\n                if (!filesToRename.isEmpty()) {\n                    // first, go and delete the existing ones\n                    final Directory directory = store.directory();\n                    for (String file : filesToRename) {\n                        try {\n                            directory.deleteFile(file);\n                        } catch (Throwable ex) {\n                            logger.debug(\"failed to delete file [{}]\", ex, file);\n                        }\n                    }\n                    for (String fileToRename : filesToRename) {\n                        // now, rename the files... and fail it it won't work\n                        store.renameFile(prefix + fileToRename, fileToRename);\n                    }\n                }\n                // now write checksums\n                store.writeChecksums(onGoingRecovery.checksums);\n\n                for (String existingFile : store.directory().listAll()) {\n                    // don't delete snapshot file, or the checksums file (note, this is extra protection since the Store won't delete checksum)\n                    if (!request.snapshotFiles().contains(existingFile) && !Store.isChecksum(existingFile)) {\n                        try {\n                            store.directory().deleteFile(existingFile);\n                        } catch (Exception e) {\n                            // ignore, we don't really care, will get deleted later on\n                        }\n                    }\n                }\n                channel.sendResponse(TransportResponse.Empty.INSTANCE);\n            } finally {\n                store.decRef();\n            }\n        }","commit_id":"5668b1cfc579e5e05f2bb50d78bcdebd75da1ecb","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n        public void messageReceived(RecoveryTranslogOperationsRequest request, TransportChannel channel) throws Exception {\n            RecoveryStatus onGoingRecovery = onGoingRecoveries.get(request.recoveryId());\n            if (onGoingRecovery == null) {\n                // shard is getting closed on us\n                throw new IndexShardClosedException(request.shardId());\n            }\n            if (onGoingRecovery.isCanceled()) {\n                onGoingRecovery.sentCanceledToSource = true;\n                throw new IndexShardClosedException(request.shardId());\n            }\n\n            InternalIndexShard shard = (InternalIndexShard) indicesService.indexServiceSafe(request.shardId().index().name()).shardSafe(request.shardId().id());\n            for (Translog.Operation operation : request.operations()) {\n                if (onGoingRecovery.isCanceled()) {\n                    onGoingRecovery.sentCanceledToSource = true;\n                    throw new IndexShardClosedException(request.shardId());\n                }\n                shard.performRecoveryOperation(operation);\n                onGoingRecovery.recoveryState.getTranslog().incrementTranslogOperations();\n            }\n            channel.sendResponse(TransportResponse.Empty.INSTANCE);\n        }","id":13320,"modified_method":"@Override\n        public void messageReceived(RecoveryTranslogOperationsRequest request, TransportChannel channel) throws Exception {\n            RecoveryStatus onGoingRecovery = onGoingRecoveries.get(request.recoveryId());\n            validateRecoveryStatus(onGoingRecovery, request.shardId());\n\n            InternalIndexShard shard = (InternalIndexShard) indicesService.indexServiceSafe(request.shardId().index().name()).shardSafe(request.shardId().id());\n            for (Translog.Operation operation : request.operations()) {\n                validateRecoveryStatus(onGoingRecovery, request.shardId());\n                shard.performRecoveryOperation(operation);\n                onGoingRecovery.recoveryState.getTranslog().incrementTranslogOperations();\n            }\n            channel.sendResponse(TransportResponse.Empty.INSTANCE);\n        }","commit_id":"5668b1cfc579e5e05f2bb50d78bcdebd75da1ecb","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n        public void messageReceived(RecoveryFinalizeRecoveryRequest request, TransportChannel channel) throws Exception {\n            RecoveryStatus onGoingRecovery = onGoingRecoveries.get(request.recoveryId());\n            if (onGoingRecovery == null) {\n                // shard is getting closed on us\n                throw new IndexShardClosedException(request.shardId());\n            }\n            if (onGoingRecovery.isCanceled()) {\n                onGoingRecovery.sentCanceledToSource = true;\n                throw new IndexShardClosedException(request.shardId());\n            }\n\n            onGoingRecovery.stage(RecoveryState.Stage.FINALIZE);\n            onGoingRecovery.indexShard.performRecoveryFinalization(false, onGoingRecovery);\n            onGoingRecovery.recoveryState().getTimer().time(System.currentTimeMillis() - onGoingRecovery.recoveryState().getTimer().startTime());\n            onGoingRecovery.stage(RecoveryState.Stage.DONE);\n            channel.sendResponse(TransportResponse.Empty.INSTANCE);\n        }","id":13321,"modified_method":"@Override\n        public void messageReceived(RecoveryFinalizeRecoveryRequest request, TransportChannel channel) throws Exception {\n            RecoveryStatus onGoingRecovery = onGoingRecoveries.get(request.recoveryId());\n            validateRecoveryStatus(onGoingRecovery, request.shardId());\n\n            onGoingRecovery.stage(RecoveryState.Stage.FINALIZE);\n            onGoingRecovery.indexShard.performRecoveryFinalization(false, onGoingRecovery);\n            onGoingRecovery.recoveryState().getTimer().time(System.currentTimeMillis() - onGoingRecovery.recoveryState().getTimer().startTime());\n            onGoingRecovery.stage(RecoveryState.Stage.DONE);\n            channel.sendResponse(TransportResponse.Empty.INSTANCE);\n        }","commit_id":"5668b1cfc579e5e05f2bb50d78bcdebd75da1ecb","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override\n        public void messageReceived(RecoveryPrepareForTranslogOperationsRequest request, TransportChannel channel) throws Exception {\n            RecoveryStatus onGoingRecovery = onGoingRecoveries.get(request.recoveryId());\n            if (onGoingRecovery == null) {\n                // shard is getting closed on us\n                throw new IndexShardClosedException(request.shardId());\n            }\n            if (onGoingRecovery.isCanceled()) {\n                onGoingRecovery.sentCanceledToSource = true;\n                throw new IndexShardClosedException(request.shardId());\n            }\n\n            onGoingRecovery.indexShard.performRecoveryPrepareForTranslog();\n            onGoingRecovery.stage(RecoveryState.Stage.TRANSLOG);\n            onGoingRecovery.recoveryState.getStart().checkIndexTime(onGoingRecovery.indexShard.checkIndexTook());\n            channel.sendResponse(TransportResponse.Empty.INSTANCE);\n        }","id":13322,"modified_method":"@Override\n        public void messageReceived(RecoveryPrepareForTranslogOperationsRequest request, TransportChannel channel) throws Exception {\n            RecoveryStatus onGoingRecovery = onGoingRecoveries.get(request.recoveryId());\n            validateRecoveryStatus(onGoingRecovery, request.shardId());\n\n            onGoingRecovery.indexShard.performRecoveryPrepareForTranslog();\n            onGoingRecovery.stage(RecoveryState.Stage.TRANSLOG);\n            onGoingRecovery.recoveryState.getStart().checkIndexTime(onGoingRecovery.indexShard.checkIndexTook());\n            channel.sendResponse(TransportResponse.Empty.INSTANCE);\n        }","commit_id":"5668b1cfc579e5e05f2bb50d78bcdebd75da1ecb","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public Set<IServiceRegistration> registrations() {\n\t\treturn super.registrations();\n\t}","id":13323,"modified_method":"public Set<IServiceRegistration> registrations() {\n\t\tSet<IServiceRegistration> registrations = super.registrations();\n\t\tif (UseXtendSwitch.useXtend) {\n\t\t\tregistrations.addAll(scope(org.eclipse.xtext.testlanguages.IContentAssistTestLanguage.SCOPE).with(\n\t\t\t\t\tIContentAssistInvocationHandler.class, ContentAssistTestLanguageXtendContentAssistInvoker.class,\n\t\t\t\t\tServiceRegistry.PRIORITY_MAX).registrations());\n\t\t}\n\t\treturn registrations;\n\t}","commit_id":"e1c7b9faff82ceccc8772ba34a2d5a628aa8cda4","url":"https://github.com/eclipse/xtext"},{"original_method":"public Set<IServiceRegistration> registrations() {\n\t\treturn scope(org.eclipse.xtext.testlanguages.IContentAssistTestLanguage.SCOPE)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IProposalProvider.class, org.eclipse.xtext.testlanguages.ContentAssistTestLanguageGenProposalProvider.class)\n\t\t\t.with(org.eclipse.jface.text.contentassist.IContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.impl.IContentAssistInvocationHandler.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistMethodInvoker.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.ITemplateContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultTemplateContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IContentAssistCalculator.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistCalculator.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ISemanticModelTransformer.class, org.eclipse.xtext.ui.common.editor.outline.impl.DefaultSemanticModelTransformer.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ILazyTreeProvider.class, org.eclipse.xtext.ui.common.editor.outline.impl.LazyTransformingTreeProvider.class)\n\t\t\t.registrations();\n\t}","id":13324,"modified_method":"public Set<IServiceRegistration> registrations() {\n\t\treturn scope(org.eclipse.xtext.testlanguages.IContentAssistTestLanguage.SCOPE)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IProposalProvider.class, org.eclipse.xtext.testlanguages.GenContentAssistTestLanguageProposalProvider.class)\n\t\t\t.with(org.eclipse.jface.text.contentassist.IContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.impl.IContentAssistInvocationHandler.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistMethodInvoker.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.ITemplateContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultTemplateContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IContentAssistCalculator.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistCalculator.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ISemanticModelTransformer.class, org.eclipse.xtext.ui.common.editor.outline.impl.DefaultSemanticModelTransformer.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ILazyTreeProvider.class, org.eclipse.xtext.ui.common.editor.outline.impl.LazyTransformingTreeProvider.class)\n\t\t\t.registrations();\n\t}","commit_id":"e1c7b9faff82ceccc8772ba34a2d5a628aa8cda4","url":"https://github.com/eclipse/xtext"},{"original_method":"public Set<IServiceRegistration> registrations() {\n\t\treturn scope(org.eclipse.xtext.example.IDomainmodel.SCOPE)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IProposalProvider.class, org.eclipse.xtext.example.DomainmodelGenProposalProvider.class)\n\t\t\t.with(org.eclipse.jface.text.contentassist.IContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.impl.IContentAssistInvocationHandler.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistMethodInvoker.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.ITemplateContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultTemplateContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IContentAssistCalculator.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistCalculator.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ISemanticModelTransformer.class, org.eclipse.xtext.ui.common.editor.outline.impl.DefaultSemanticModelTransformer.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ILazyTreeProvider.class, org.eclipse.xtext.ui.common.editor.outline.impl.LazyTransformingTreeProvider.class)\n\t\t\t.registrations();\n\t}","id":13325,"modified_method":"public Set<IServiceRegistration> registrations() {\n\t\treturn scope(org.eclipse.xtext.example.IDomainmodel.SCOPE)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IProposalProvider.class, org.eclipse.xtext.example.GenDomainmodelProposalProvider.class)\n\t\t\t.with(org.eclipse.jface.text.contentassist.IContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.impl.IContentAssistInvocationHandler.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistMethodInvoker.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.ITemplateContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultTemplateContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IContentAssistCalculator.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistCalculator.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ISemanticModelTransformer.class, org.eclipse.xtext.ui.common.editor.outline.impl.DefaultSemanticModelTransformer.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ILazyTreeProvider.class, org.eclipse.xtext.ui.common.editor.outline.impl.LazyTransformingTreeProvider.class)\n\t\t\t.registrations();\n\t}","commit_id":"e1c7b9faff82ceccc8772ba34a2d5a628aa8cda4","url":"https://github.com/eclipse/xtext"},{"original_method":"public Set<IServiceRegistration> registrations() {\n\t\treturn scope(org.eclipse.xtext.example.IFowlerDsl.SCOPE)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IProposalProvider.class, org.eclipse.xtext.example.FowlerDslGenProposalProvider.class)\n\t\t\t.with(org.eclipse.jface.text.contentassist.IContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.impl.IContentAssistInvocationHandler.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistMethodInvoker.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.ITemplateContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultTemplateContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IContentAssistCalculator.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistCalculator.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ISemanticModelTransformer.class, org.eclipse.xtext.ui.common.editor.outline.impl.DefaultSemanticModelTransformer.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ILazyTreeProvider.class, org.eclipse.xtext.ui.common.editor.outline.impl.LazyTransformingTreeProvider.class)\n\t\t\t.registrations();\n\t}","id":13326,"modified_method":"public Set<IServiceRegistration> registrations() {\n\t\treturn scope(org.eclipse.xtext.example.IFowlerDsl.SCOPE)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IProposalProvider.class, org.eclipse.xtext.example.GenFowlerDslProposalProvider.class)\n\t\t\t.with(org.eclipse.jface.text.contentassist.IContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.impl.IContentAssistInvocationHandler.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistMethodInvoker.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.ITemplateContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultTemplateContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IContentAssistCalculator.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistCalculator.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ISemanticModelTransformer.class, org.eclipse.xtext.ui.common.editor.outline.impl.DefaultSemanticModelTransformer.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ILazyTreeProvider.class, org.eclipse.xtext.ui.common.editor.outline.impl.LazyTransformingTreeProvider.class)\n\t\t\t.registrations();\n\t}","commit_id":"e1c7b9faff82ceccc8772ba34a2d5a628aa8cda4","url":"https://github.com/eclipse/xtext"},{"original_method":"public Set<IServiceRegistration> registrations() {\n\t\treturn scope(org.eclipse.xtext.testlanguages.IReferenceGrammarTestLanguage.SCOPE)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IProposalProvider.class, org.eclipse.xtext.testlanguages.ReferenceGrammarTestLanguageGenProposalProvider.class)\n\t\t\t.with(org.eclipse.jface.text.contentassist.IContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.impl.IContentAssistInvocationHandler.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistMethodInvoker.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.ITemplateContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultTemplateContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IContentAssistCalculator.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistCalculator.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ISemanticModelTransformer.class, org.eclipse.xtext.ui.common.editor.outline.impl.DefaultSemanticModelTransformer.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ILazyTreeProvider.class, org.eclipse.xtext.ui.common.editor.outline.impl.LazyTransformingTreeProvider.class)\n\t\t\t.registrations();\n\t}","id":13327,"modified_method":"public Set<IServiceRegistration> registrations() {\n\t\treturn scope(org.eclipse.xtext.testlanguages.IReferenceGrammarTestLanguage.SCOPE)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IProposalProvider.class, org.eclipse.xtext.testlanguages.GenReferenceGrammarTestLanguageProposalProvider.class)\n\t\t\t.with(org.eclipse.jface.text.contentassist.IContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.impl.IContentAssistInvocationHandler.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistMethodInvoker.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.ITemplateContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultTemplateContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IContentAssistCalculator.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistCalculator.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ISemanticModelTransformer.class, org.eclipse.xtext.ui.common.editor.outline.impl.DefaultSemanticModelTransformer.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ILazyTreeProvider.class, org.eclipse.xtext.ui.common.editor.outline.impl.LazyTransformingTreeProvider.class)\n\t\t\t.registrations();\n\t}","commit_id":"e1c7b9faff82ceccc8772ba34a2d5a628aa8cda4","url":"https://github.com/eclipse/xtext"},{"original_method":"public Set<IServiceRegistration> registrations() {\n\t\treturn scope(org.eclipse.xtext.reference.IReferenceGrammar.SCOPE)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IProposalProvider.class, org.eclipse.xtext.reference.ReferenceGrammarGenProposalProvider.class)\n\t\t\t.with(org.eclipse.jface.text.contentassist.IContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.impl.IContentAssistInvocationHandler.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistMethodInvoker.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.ITemplateContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultTemplateContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IContentAssistCalculator.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistCalculator.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ISemanticModelTransformer.class, org.eclipse.xtext.ui.common.editor.outline.impl.DefaultSemanticModelTransformer.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ILazyTreeProvider.class, org.eclipse.xtext.ui.common.editor.outline.impl.LazyTransformingTreeProvider.class)\n\t\t\t.registrations();\n\t}","id":13328,"modified_method":"public Set<IServiceRegistration> registrations() {\n\t\treturn scope(org.eclipse.xtext.reference.IReferenceGrammar.SCOPE)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IProposalProvider.class, org.eclipse.xtext.reference.GenReferenceGrammarProposalProvider.class)\n\t\t\t.with(org.eclipse.jface.text.contentassist.IContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.impl.IContentAssistInvocationHandler.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistMethodInvoker.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.ITemplateContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultTemplateContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IContentAssistCalculator.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistCalculator.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ISemanticModelTransformer.class, org.eclipse.xtext.ui.common.editor.outline.impl.DefaultSemanticModelTransformer.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ILazyTreeProvider.class, org.eclipse.xtext.ui.common.editor.outline.impl.LazyTransformingTreeProvider.class)\n\t\t\t.registrations();\n\t}","commit_id":"e1c7b9faff82ceccc8772ba34a2d5a628aa8cda4","url":"https://github.com/eclipse/xtext"},{"original_method":"public Set<IServiceRegistration> registrations() {\n\t\treturn scope(org.eclipse.xtext.testlanguages.ITreeTestLanguage.SCOPE)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IProposalProvider.class, org.eclipse.xtext.testlanguages.TreeTestLanguageGenProposalProvider.class)\n\t\t\t.with(org.eclipse.jface.text.contentassist.IContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.impl.IContentAssistInvocationHandler.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistMethodInvoker.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.ITemplateContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultTemplateContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IContentAssistCalculator.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistCalculator.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ISemanticModelTransformer.class, org.eclipse.xtext.ui.common.editor.outline.impl.DefaultSemanticModelTransformer.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ILazyTreeProvider.class, org.eclipse.xtext.ui.common.editor.outline.impl.LazyTransformingTreeProvider.class)\n\t\t\t.registrations();\n\t}","id":13329,"modified_method":"public Set<IServiceRegistration> registrations() {\n\t\treturn scope(org.eclipse.xtext.testlanguages.ITreeTestLanguage.SCOPE)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IProposalProvider.class, org.eclipse.xtext.testlanguages.GenTreeTestLanguageProposalProvider.class)\n\t\t\t.with(org.eclipse.jface.text.contentassist.IContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.impl.IContentAssistInvocationHandler.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistMethodInvoker.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.ITemplateContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultTemplateContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IContentAssistCalculator.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistCalculator.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ISemanticModelTransformer.class, org.eclipse.xtext.ui.common.editor.outline.impl.DefaultSemanticModelTransformer.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ILazyTreeProvider.class, org.eclipse.xtext.ui.common.editor.outline.impl.LazyTransformingTreeProvider.class)\n\t\t\t.registrations();\n\t}","commit_id":"e1c7b9faff82ceccc8772ba34a2d5a628aa8cda4","url":"https://github.com/eclipse/xtext"},{"original_method":"public Set<IServiceRegistration> registrations() {\n\t\treturn scope(org.eclipse.xtext.IXtextGrammarTestLanguage.SCOPE)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IProposalProvider.class, org.eclipse.xtext.XtextGrammarTestLanguageGenProposalProvider.class)\n\t\t\t.with(org.eclipse.jface.text.contentassist.IContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.impl.IContentAssistInvocationHandler.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistMethodInvoker.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.ITemplateContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultTemplateContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IContentAssistCalculator.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistCalculator.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ISemanticModelTransformer.class, org.eclipse.xtext.ui.common.editor.outline.impl.DefaultSemanticModelTransformer.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ILazyTreeProvider.class, org.eclipse.xtext.ui.common.editor.outline.impl.LazyTransformingTreeProvider.class)\n\t\t\t.registrations();\n\t}","id":13330,"modified_method":"public Set<IServiceRegistration> registrations() {\n\t\treturn scope(org.eclipse.xtext.IXtextGrammarTestLanguage.SCOPE)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IProposalProvider.class, org.eclipse.xtext.GenXtextGrammarTestLanguageProposalProvider.class)\n\t\t\t.with(org.eclipse.jface.text.contentassist.IContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.impl.IContentAssistInvocationHandler.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistMethodInvoker.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.ITemplateContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultTemplateContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IContentAssistCalculator.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistCalculator.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ISemanticModelTransformer.class, org.eclipse.xtext.ui.common.editor.outline.impl.DefaultSemanticModelTransformer.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ILazyTreeProvider.class, org.eclipse.xtext.ui.common.editor.outline.impl.LazyTransformingTreeProvider.class)\n\t\t\t.registrations();\n\t}","commit_id":"e1c7b9faff82ceccc8772ba34a2d5a628aa8cda4","url":"https://github.com/eclipse/xtext"},{"original_method":"private static GenModel assembleGeneratorModel(Grammar grammarModel, String runtimeProjectPath,\n\t\t\tString uiProjectPath, String... modelFileExtensions) {\n\t\tString languageName = GrammarUtil.getName(grammarModel);\n\t\tString namespace = GrammarUtil.getNamespace(grammarModel);\n\n\t\tGenModel genModel = XtextgenFactory.eINSTANCE.createGenModel();\n\t\tgenModel.setGrammar(grammarModel);\n\t\tgenModel.getModelFileExtensions().addAll(Arrays.asList(modelFileExtensions));\n\t\tgenModel.setFileHeader(\"Generated with Xtext\");\n\t\tgenModel.setLanguageInterfaceFQName(namespace + \".I\" + languageName);\n\n\t\tgenModel.getOutlets().add(outlet(\"RUNTIME\", runtimeProjectPath, false));\n\t\tgenModel.getOutlets().add(outlet(\"SRC\", runtimeProjectPath+\"/src\", false));\n\t\tgenModel.getOutlets().add(outlet(\"SRC_GEN\", runtimeProjectPath+\"/src-gen\", true));\n\n\t\tif (uiProjectPath != null) {\n\t\t\tString uiPluginID = uiProjectPath.substring(uiProjectPath.lastIndexOf('/') + 1);\n\t\t\tgenModel.setNonUIPluginBundleID(namespace);\n\t\t\tgenModel.setUiPluginBundleID(uiPluginID);\n\n\t\t\tgenModel.getOutlets().add(outlet(\"UI\", uiProjectPath, false));\n\t\t\tgenModel.getOutlets().add(outlet(\"UI_SRC\", uiProjectPath+\"/src\", false));\n\t\t\tgenModel.getOutlets().add(outlet(\"UI_SRC_GEN\", uiProjectPath + \"/src-gen\", true));\n//\t\t\tgenModel.getOutlets().add(outlet(\"UI_TEMPLATES\", uiProjectPath + \"/templates\", true));\n\t\t}\n\t\t\n\t\tGenService metamodelAccessService = XtextgenFactory.eINSTANCE.createGenService();\n\t\tmetamodelAccessService.setServiceInterfaceFQName(\"org.eclipse.xtext.IMetamodelAccess\");\n\t\tmetamodelAccessService.setGenClassFQName(namespace + \".services.\" + languageName + \"MetamodelAccess\");\n\t\tmetamodelAccessService.setTemplatePath(\"org::eclipse::xtext::ecore::Ecore::root\");\n\t\tmetamodelAccessService.setExtensionPointID(\"org.eclipse.xtext.ui.metamodelAccess\");\n\t\tgenModel.getServices().add(metamodelAccessService);\n\n\t\t// Moritz: I've refactored the determination of the GrammarAccessFQName to GrammarAccessUtil,\n\t\t// since there are other services (e.g. Serialization, eventually Parsing) that have hard\n\t\t// dependencies on the GrammarAccess specific to their language. By hard dependency I mean that\n\t\t// they are not satisfied with some implementation of the interface, but need exactly the \n\t\t// implementation for their language. \n\t\tGenService grammarAccessService = XtextgenFactory.eINSTANCE.createGenService();\n\t\tgrammarAccessService.setServiceInterfaceFQName(\"org.eclipse.xtext.IGrammarAccess\");\n\t\tgrammarAccessService.setGenClassFQName(GrammarAccessUtil.getGrammarAccessFQName(grammarModel));\n\t\tgrammarAccessService.setTemplatePath(\"org::eclipse::xtext::grammaraccess::GrammarAccess::root\");\n\t\t//grammarAccessService.setExtensionPointID(\"org.eclipse.xtext.ui.grammarAccess\");\n\t\tgenModel.getServices().add(grammarAccessService);\n\t\t\n\t\tGenService packratParser = XtextgenFactory.eINSTANCE.createGenService();\n\t\tpackratParser.setServiceInterfaceFQName(\"org.eclipse.xtext.parser.packrat.IPackratParser\");\n\t\tpackratParser.setGenClassFQName(namespace + \".parser.packrat.\" + languageName + \"PackratParser\");\n\t\tpackratParser.setTemplatePath(\"org::eclipse::xtext::parser::packrat::PackratParserGen::root\");\n\t\tgenModel.getServices().add(packratParser);\n\t\t\n\t\tif (!GrammarUtil.isAbstract(grammarModel)) {\n\n\t\t\tGenService elementFactoryService = XtextgenFactory.eINSTANCE.createGenService();\n\t\t\telementFactoryService.setServiceInterfaceFQName(\"org.eclipse.xtext.parser.IAstFactory\");\n\t\t\telementFactoryService.setGenClassFQName(\"org.eclipse.xtext.parser.antlr.AntlrEcoreElementFactory\");\n\t\t\t// no template, as service is generic. Nevertheless, we need the\n\t\t\t// individual registration to avoid conflicts\n\t\t\telementFactoryService.setExtensionPointID(\"org.eclipse.xtext.ui.aSTFactory\");\n\t\t\tgenModel.getServices().add(elementFactoryService);\n\n\t\t\tGenService parserService = XtextgenFactory.eINSTANCE.createGenService();\n\t\t\tparserService.setServiceInterfaceFQName(\"org.eclipse.xtext.parser.IParser\");\n\t\t\tparserService.setGenClassFQName(namespace + \".parser.antlr.\" + languageName + \"Parser\");\n\t\t\tparserService.setTemplatePath(\"org::eclipse::xtext::parser::Parser::root\");\n\t\t\tparserService.setExtensionPointID(\"org.eclipse.xtext.ui.parser\");\n\t\t\tgenModel.getServices().add(parserService);\n\n\t\t\tGenService tokenFileProviderService = XtextgenFactory.eINSTANCE.createGenService();\n\t\t\ttokenFileProviderService.setServiceInterfaceFQName(\"org.eclipse.xtext.parser.antlr.IAntlrTokenFileProvider\");\n\t\t\ttokenFileProviderService.setGenClassFQName(namespace + \".parser.antlr.\" + languageName + \"AntlrTokenFileProvider\");\n\t\t\ttokenFileProviderService.setTemplatePath(\"org::eclipse::xtext::parser::AntlrTokenFileProvider::root\");\n\t\t\t// tokenFileProviderService.setExtensionPointID(\n\t\t\t// \"org.eclipse.xtext.ui.parser\");\n\t\t\tgenModel.getServices().add(tokenFileProviderService);\n\n\t\t\tGenService resourceFactoryService = XtextgenFactory.eINSTANCE.createGenService();\n\t\t\tresourceFactoryService.setServiceInterfaceFQName(\"org.eclipse.xtext.resource.IResourceFactory\");\n\t\t\tresourceFactoryService.setGenClassFQName(namespace + \".services.\" + languageName + \"ResourceFactory\");\n\t\t\tresourceFactoryService.setTemplatePath(\"org::eclipse::xtext::resourcefactory::ResourceFactory::root\");\n\t\t\tresourceFactoryService.setExtensionPointID(\"org.eclipse.xtext.ui.resourceFactory\");\n\t\t\tgenModel.getServices().add(resourceFactoryService);\n\n\t\t\tGenService parsetreeReconstructorService = XtextgenFactory.eINSTANCE.createGenService();\n\t\t\tparsetreeReconstructorService\n\t\t\t\t\t.setServiceInterfaceFQName(\"org.eclipse.xtext.parsetree.reconstr.IParseTreeConstructor\");\n\t\t\tparsetreeReconstructorService.setGenClassFQName(namespace + \".parsetree.reconstr.\" + languageName\n\t\t\t\t\t+ \"ParseTreeConstructor\");\n\t\t\tparsetreeReconstructorService\n\t\t\t\t\t.setTemplatePath(\"org::eclipse::xtext::parsetree::reconstr::ParseTreeConstructor::root\");\n\t\t\tparsetreeReconstructorService.setExtensionPointID(\"org.eclipse.xtext.ui.parseTreeConstructor\");\n\t\t\tgenModel.getServices().add(parsetreeReconstructorService);\n\n\t\t\tGenService serializationStrategy = XtextgenFactory.eINSTANCE.createGenService();\n\t\t\tserializationStrategy.setServiceInterfaceFQName(\"org.eclipse.xtext.parsetree.reconstr.ITokenSerializer\");\n\t\t\tserializationStrategy.setGenClassFQName(\"org.eclipse.xtext.parsetree.reconstr.impl.WhitespacePreservingTokenSerializer\");\n\t\t\tgenModel.getServices().add(serializationStrategy);\n\n\t\t\tGenService crossRefSerializer = XtextgenFactory.eINSTANCE.createGenService();\n\t\t\tcrossRefSerializer.setServiceInterfaceFQName(\"org.eclipse.xtext.parsetree.reconstr.ICrossReferenceSerializer\");\n\t\t\tcrossRefSerializer.setGenClassFQName(\"org.eclipse.xtext.parsetree.reconstr.impl.SimpleCrossReferenceSerializer\");\n\t\t\tgenModel.getServices().add(crossRefSerializer);\n\n\t\t\tGenService transientValueService = XtextgenFactory.eINSTANCE.createGenService();\n\t\t\ttransientValueService.setServiceInterfaceFQName(\"org.eclipse.xtext.parsetree.reconstr.ITransientValueService\");\n\t\t\ttransientValueService.setGenClassFQName(\"org.eclipse.xtext.parsetree.reconstr.impl.SimpleTransientValueService\");\n\t\t\tgenModel.getServices().add(transientValueService);\n\n\t\t\tGenService tokenScannerService = XtextgenFactory.eINSTANCE.createGenService();\n\t\t\ttokenScannerService.setServiceInterfaceFQName(\"org.eclipse.xtext.parser.antlr.Lexer\");\n\t\t\ttokenScannerService.setGenClassFQName(namespace + \".parser.antlr.internal.Internal\" + languageName + \"Lexer\");\n\t\t\tgenModel.getServices().add(tokenScannerService);\n\t\t\t\n\t\t\tGenService proposalProvider = XtextgenFactory.eINSTANCE.createGenService();\n\t\t\tproposalProvider.setServiceInterfaceFQName(\"org.eclipse.xtext.ui.common.editor.contentassist.IProposalProvider\");\n\t\t\tproposalProvider.setGenClassFQName(namespace +\".\"+ languageName+\"GenProposalProvider\");\n\t\t\tproposalProvider.setUiService(true);\n\t\t\tgenModel.getServices().add(proposalProvider);\n\t\t\t\n\t\t\tGenService contentAssistProcessor = XtextgenFactory.eINSTANCE.createGenService();\n\t\t\tcontentAssistProcessor.setServiceInterfaceFQName(\"org.eclipse.jface.text.contentassist.IContentAssistProcessor\");\n\t\t\tcontentAssistProcessor.setGenClassFQName(\"org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistProcessor\");\n\t\t\tcontentAssistProcessor.setUiService(true);\n\t\t\tgenModel.getServices().add(contentAssistProcessor);\n\t\t\t\n\t\t\tGenService contentAssistInvocationHandler = XtextgenFactory.eINSTANCE.createGenService();\n\t\t\tcontentAssistInvocationHandler.setServiceInterfaceFQName(\"org.eclipse.xtext.ui.common.editor.contentassist.impl.IContentAssistInvocationHandler\");\n\t\t\tcontentAssistInvocationHandler.setGenClassFQName(\"org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistMethodInvoker\");\n\t\t\tcontentAssistInvocationHandler.setUiService(true);\n\t\t\tgenModel.getServices().add(contentAssistInvocationHandler);\n\n\t\t\tGenService templateContentAssistProcessor = XtextgenFactory.eINSTANCE.createGenService();\n\t\t\ttemplateContentAssistProcessor.setServiceInterfaceFQName(\"org.eclipse.xtext.ui.common.editor.contentassist.ITemplateContentAssistProcessor\");\n\t\t\ttemplateContentAssistProcessor.setGenClassFQName(\"org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultTemplateContentAssistProcessor\");\n\t\t\ttemplateContentAssistProcessor.setUiService(true);\n\t\t\tgenModel.getServices().add(templateContentAssistProcessor);\n\n\t\t\tGenService contentAssistCalculator = XtextgenFactory.eINSTANCE.createGenService();\n\t\t\tcontentAssistCalculator.setServiceInterfaceFQName(\"org.eclipse.xtext.ui.common.editor.contentassist.IContentAssistCalculator\");\n\t\t\tcontentAssistCalculator.setGenClassFQName(\"org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistCalculator\");\n\t\t\tcontentAssistCalculator.setUiService(true);\n\t\t\tgenModel.getServices().add(contentAssistCalculator);\n\t\t\t\n\t\t\t// Outline: Semantic Model to Outline Model Transformer\n\t\t\tGenService semanticModelTransformer = XtextgenFactory.eINSTANCE.createGenService();\n\t\t\tsemanticModelTransformer.setServiceInterfaceFQName(\"org.eclipse.xtext.ui.common.editor.outline.ISemanticModelTransformer\");\n\t\t\tsemanticModelTransformer.setGenClassFQName(\"org.eclipse.xtext.ui.common.editor.outline.impl.DefaultSemanticModelTransformer\");\n\t\t\tsemanticModelTransformer.setUiService(true);\n\t\t\tgenModel.getServices().add(semanticModelTransformer);\n\n\t\t\t// Outline: Lazy Tree Provider\n\t\t\tGenService lazyTreeProvider = XtextgenFactory.eINSTANCE.createGenService();\n\t\t\tlazyTreeProvider.setServiceInterfaceFQName(\"org.eclipse.xtext.ui.common.editor.outline.ILazyTreeProvider\");\n\t\t\tlazyTreeProvider.setGenClassFQName(\"org.eclipse.xtext.ui.common.editor.outline.impl.LazyTransformingTreeProvider\");\n\t\t\tlazyTreeProvider.setUiService(true);\n\t\t\tgenModel.getServices().add(lazyTreeProvider);\n\n\t\t}\n\n\t\treturn genModel;\n\t}","id":13331,"modified_method":"private static GenModel assembleGeneratorModel(Grammar grammarModel, String runtimeProjectPath,\n\t\t\tString uiProjectPath, String... modelFileExtensions) {\n\t\tString languageName = GrammarUtil.getName(grammarModel);\n\t\tString namespace = GrammarUtil.getNamespace(grammarModel);\n\n\t\tGenModel genModel = XtextgenFactory.eINSTANCE.createGenModel();\n\t\tgenModel.setGrammar(grammarModel);\n\t\tgenModel.getModelFileExtensions().addAll(Arrays.asList(modelFileExtensions));\n\t\tgenModel.setFileHeader(\"Generated with Xtext\");\n\t\tgenModel.setLanguageInterfaceFQName(namespace + \".I\" + languageName);\n\n\t\tgenModel.getOutlets().add(outlet(\"RUNTIME\", runtimeProjectPath, false));\n\t\tgenModel.getOutlets().add(outlet(\"SRC\", runtimeProjectPath+\"/src\", false));\n\t\tgenModel.getOutlets().add(outlet(\"SRC_GEN\", runtimeProjectPath+\"/src-gen\", true));\n\n\t\tif (uiProjectPath != null) {\n\t\t\tString uiPluginID = uiProjectPath.substring(uiProjectPath.lastIndexOf('/') + 1);\n\t\t\tgenModel.setNonUIPluginBundleID(namespace);\n\t\t\tgenModel.setUiPluginBundleID(uiPluginID);\n\n\t\t\tgenModel.getOutlets().add(outlet(\"UI\", uiProjectPath, false));\n\t\t\tgenModel.getOutlets().add(outlet(\"UI_SRC\", uiProjectPath+\"/src\", false));\n\t\t\tgenModel.getOutlets().add(outlet(\"UI_SRC_GEN\", uiProjectPath + \"/src-gen\", true));\n//\t\t\tgenModel.getOutlets().add(outlet(\"UI_TEMPLATES\", uiProjectPath + \"/templates\", true));\n\t\t}\n\t\t\n\t\tGenService metamodelAccessService = XtextgenFactory.eINSTANCE.createGenService();\n\t\tmetamodelAccessService.setServiceInterfaceFQName(\"org.eclipse.xtext.IMetamodelAccess\");\n\t\tmetamodelAccessService.setGenClassFQName(namespace + \".services.\" + languageName + \"MetamodelAccess\");\n\t\tmetamodelAccessService.setTemplatePath(\"org::eclipse::xtext::ecore::Ecore::root\");\n\t\tmetamodelAccessService.setExtensionPointID(\"org.eclipse.xtext.ui.metamodelAccess\");\n\t\tgenModel.getServices().add(metamodelAccessService);\n\n\t\t// Moritz: I've refactored the determination of the GrammarAccessFQName to GrammarAccessUtil,\n\t\t// since there are other services (e.g. Serialization, eventually Parsing) that have hard\n\t\t// dependencies on the GrammarAccess specific to their language. By hard dependency I mean that\n\t\t// they are not satisfied with some implementation of the interface, but need exactly the \n\t\t// implementation for their language. \n\t\tGenService grammarAccessService = XtextgenFactory.eINSTANCE.createGenService();\n\t\tgrammarAccessService.setServiceInterfaceFQName(\"org.eclipse.xtext.IGrammarAccess\");\n\t\tgrammarAccessService.setGenClassFQName(GrammarAccessUtil.getGrammarAccessFQName(grammarModel));\n\t\tgrammarAccessService.setTemplatePath(\"org::eclipse::xtext::grammaraccess::GrammarAccess::root\");\n\t\t//grammarAccessService.setExtensionPointID(\"org.eclipse.xtext.ui.grammarAccess\");\n\t\tgenModel.getServices().add(grammarAccessService);\n\t\t\n\t\tGenService packratParser = XtextgenFactory.eINSTANCE.createGenService();\n\t\tpackratParser.setServiceInterfaceFQName(\"org.eclipse.xtext.parser.packrat.IPackratParser\");\n\t\tpackratParser.setGenClassFQName(namespace + \".parser.packrat.\" + languageName + \"PackratParser\");\n\t\tpackratParser.setTemplatePath(\"org::eclipse::xtext::parser::packrat::PackratParserGen::root\");\n\t\tgenModel.getServices().add(packratParser);\n\t\t\n\t\tif (!GrammarUtil.isAbstract(grammarModel)) {\n\n\t\t\tGenService elementFactoryService = XtextgenFactory.eINSTANCE.createGenService();\n\t\t\telementFactoryService.setServiceInterfaceFQName(\"org.eclipse.xtext.parser.IAstFactory\");\n\t\t\telementFactoryService.setGenClassFQName(\"org.eclipse.xtext.parser.antlr.AntlrEcoreElementFactory\");\n\t\t\t// no template, as service is generic. Nevertheless, we need the\n\t\t\t// individual registration to avoid conflicts\n\t\t\telementFactoryService.setExtensionPointID(\"org.eclipse.xtext.ui.aSTFactory\");\n\t\t\tgenModel.getServices().add(elementFactoryService);\n\n\t\t\tGenService parserService = XtextgenFactory.eINSTANCE.createGenService();\n\t\t\tparserService.setServiceInterfaceFQName(\"org.eclipse.xtext.parser.IParser\");\n\t\t\tparserService.setGenClassFQName(namespace + \".parser.antlr.\" + languageName + \"Parser\");\n\t\t\tparserService.setTemplatePath(\"org::eclipse::xtext::parser::Parser::root\");\n\t\t\tparserService.setExtensionPointID(\"org.eclipse.xtext.ui.parser\");\n\t\t\tgenModel.getServices().add(parserService);\n\n\t\t\tGenService tokenFileProviderService = XtextgenFactory.eINSTANCE.createGenService();\n\t\t\ttokenFileProviderService.setServiceInterfaceFQName(\"org.eclipse.xtext.parser.antlr.IAntlrTokenFileProvider\");\n\t\t\ttokenFileProviderService.setGenClassFQName(namespace + \".parser.antlr.\" + languageName + \"AntlrTokenFileProvider\");\n\t\t\ttokenFileProviderService.setTemplatePath(\"org::eclipse::xtext::parser::AntlrTokenFileProvider::root\");\n\t\t\t// tokenFileProviderService.setExtensionPointID(\n\t\t\t// \"org.eclipse.xtext.ui.parser\");\n\t\t\tgenModel.getServices().add(tokenFileProviderService);\n\n\t\t\tGenService resourceFactoryService = XtextgenFactory.eINSTANCE.createGenService();\n\t\t\tresourceFactoryService.setServiceInterfaceFQName(\"org.eclipse.xtext.resource.IResourceFactory\");\n\t\t\tresourceFactoryService.setGenClassFQName(namespace + \".services.\" + languageName + \"ResourceFactory\");\n\t\t\tresourceFactoryService.setTemplatePath(\"org::eclipse::xtext::resourcefactory::ResourceFactory::root\");\n\t\t\tresourceFactoryService.setExtensionPointID(\"org.eclipse.xtext.ui.resourceFactory\");\n\t\t\tgenModel.getServices().add(resourceFactoryService);\n\n\t\t\tGenService parsetreeReconstructorService = XtextgenFactory.eINSTANCE.createGenService();\n\t\t\tparsetreeReconstructorService\n\t\t\t\t\t.setServiceInterfaceFQName(\"org.eclipse.xtext.parsetree.reconstr.IParseTreeConstructor\");\n\t\t\tparsetreeReconstructorService.setGenClassFQName(namespace + \".parsetree.reconstr.\" + languageName\n\t\t\t\t\t+ \"ParseTreeConstructor\");\n\t\t\tparsetreeReconstructorService\n\t\t\t\t\t.setTemplatePath(\"org::eclipse::xtext::parsetree::reconstr::ParseTreeConstructor::root\");\n\t\t\tparsetreeReconstructorService.setExtensionPointID(\"org.eclipse.xtext.ui.parseTreeConstructor\");\n\t\t\tgenModel.getServices().add(parsetreeReconstructorService);\n\n\t\t\tGenService serializationStrategy = XtextgenFactory.eINSTANCE.createGenService();\n\t\t\tserializationStrategy.setServiceInterfaceFQName(\"org.eclipse.xtext.parsetree.reconstr.ITokenSerializer\");\n\t\t\tserializationStrategy.setGenClassFQName(\"org.eclipse.xtext.parsetree.reconstr.impl.WhitespacePreservingTokenSerializer\");\n\t\t\tgenModel.getServices().add(serializationStrategy);\n\n\t\t\tGenService crossRefSerializer = XtextgenFactory.eINSTANCE.createGenService();\n\t\t\tcrossRefSerializer.setServiceInterfaceFQName(\"org.eclipse.xtext.parsetree.reconstr.ICrossReferenceSerializer\");\n\t\t\tcrossRefSerializer.setGenClassFQName(\"org.eclipse.xtext.parsetree.reconstr.impl.SimpleCrossReferenceSerializer\");\n\t\t\tgenModel.getServices().add(crossRefSerializer);\n\n\t\t\tGenService transientValueService = XtextgenFactory.eINSTANCE.createGenService();\n\t\t\ttransientValueService.setServiceInterfaceFQName(\"org.eclipse.xtext.parsetree.reconstr.ITransientValueService\");\n\t\t\ttransientValueService.setGenClassFQName(\"org.eclipse.xtext.parsetree.reconstr.impl.SimpleTransientValueService\");\n\t\t\tgenModel.getServices().add(transientValueService);\n\n\t\t\tGenService tokenScannerService = XtextgenFactory.eINSTANCE.createGenService();\n\t\t\ttokenScannerService.setServiceInterfaceFQName(\"org.eclipse.xtext.parser.antlr.Lexer\");\n\t\t\ttokenScannerService.setGenClassFQName(namespace + \".parser.antlr.internal.Internal\" + languageName + \"Lexer\");\n\t\t\tgenModel.getServices().add(tokenScannerService);\n\t\t\t\n\t\t\tGenService proposalProvider = XtextgenFactory.eINSTANCE.createGenService();\n\t\t\tproposalProvider.setServiceInterfaceFQName(\"org.eclipse.xtext.ui.common.editor.contentassist.IProposalProvider\");\n\t\t\tproposalProvider.setGenClassFQName(namespace +\".Gen\"+ languageName+\"ProposalProvider\");\n\t\t\tproposalProvider.setUiService(true);\n\t\t\tgenModel.getServices().add(proposalProvider);\n\t\t\t\n\t\t\tGenService contentAssistProcessor = XtextgenFactory.eINSTANCE.createGenService();\n\t\t\tcontentAssistProcessor.setServiceInterfaceFQName(\"org.eclipse.jface.text.contentassist.IContentAssistProcessor\");\n\t\t\tcontentAssistProcessor.setGenClassFQName(\"org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistProcessor\");\n\t\t\tcontentAssistProcessor.setUiService(true);\n\t\t\tgenModel.getServices().add(contentAssistProcessor);\n\t\t\t\n\t\t\tGenService contentAssistInvocationHandler = XtextgenFactory.eINSTANCE.createGenService();\n\t\t\tcontentAssistInvocationHandler.setServiceInterfaceFQName(\"org.eclipse.xtext.ui.common.editor.contentassist.impl.IContentAssistInvocationHandler\");\n\t\t\tcontentAssistInvocationHandler.setGenClassFQName(\"org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistMethodInvoker\");\n\t\t\tcontentAssistInvocationHandler.setUiService(true);\n\t\t\tgenModel.getServices().add(contentAssistInvocationHandler);\n\n\t\t\tGenService templateContentAssistProcessor = XtextgenFactory.eINSTANCE.createGenService();\n\t\t\ttemplateContentAssistProcessor.setServiceInterfaceFQName(\"org.eclipse.xtext.ui.common.editor.contentassist.ITemplateContentAssistProcessor\");\n\t\t\ttemplateContentAssistProcessor.setGenClassFQName(\"org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultTemplateContentAssistProcessor\");\n\t\t\ttemplateContentAssistProcessor.setUiService(true);\n\t\t\tgenModel.getServices().add(templateContentAssistProcessor);\n\n\t\t\tGenService contentAssistCalculator = XtextgenFactory.eINSTANCE.createGenService();\n\t\t\tcontentAssistCalculator.setServiceInterfaceFQName(\"org.eclipse.xtext.ui.common.editor.contentassist.IContentAssistCalculator\");\n\t\t\tcontentAssistCalculator.setGenClassFQName(\"org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistCalculator\");\n\t\t\tcontentAssistCalculator.setUiService(true);\n\t\t\tgenModel.getServices().add(contentAssistCalculator);\n\t\t\t\n\t\t\t// Outline: Semantic Model to Outline Model Transformer\n\t\t\tGenService semanticModelTransformer = XtextgenFactory.eINSTANCE.createGenService();\n\t\t\tsemanticModelTransformer.setServiceInterfaceFQName(\"org.eclipse.xtext.ui.common.editor.outline.ISemanticModelTransformer\");\n\t\t\tsemanticModelTransformer.setGenClassFQName(\"org.eclipse.xtext.ui.common.editor.outline.impl.DefaultSemanticModelTransformer\");\n\t\t\tsemanticModelTransformer.setUiService(true);\n\t\t\tgenModel.getServices().add(semanticModelTransformer);\n\n\t\t\t// Outline: Lazy Tree Provider\n\t\t\tGenService lazyTreeProvider = XtextgenFactory.eINSTANCE.createGenService();\n\t\t\tlazyTreeProvider.setServiceInterfaceFQName(\"org.eclipse.xtext.ui.common.editor.outline.ILazyTreeProvider\");\n\t\t\tlazyTreeProvider.setGenClassFQName(\"org.eclipse.xtext.ui.common.editor.outline.impl.LazyTransformingTreeProvider\");\n\t\t\tlazyTreeProvider.setUiService(true);\n\t\t\tgenModel.getServices().add(lazyTreeProvider);\n\n\t\t}\n\n\t\treturn genModel;\n\t}","commit_id":"e1c7b9faff82ceccc8772ba34a2d5a628aa8cda4","url":"https://github.com/eclipse/xtext"},{"original_method":"public Set<IServiceRegistration> registrations() {\n\t\treturn super.registrations();\n\t}","id":13332,"modified_method":"public Set<IServiceRegistration> registrations() {\n\t\tSet<IServiceRegistration> registrations = super.registrations();\n\t\tif (UseXtendSwitch.useXtend) {\n\t\t\tregistrations.addAll(scope(org.eclipse.xtext.testlanguages.IReferenceGrammarTestLanguage.SCOPE).with(\n\t\t\t\t\tIContentAssistInvocationHandler.class, ReferenceGrammarTestLanguageXtendContentAssistInvoker.class,\n\t\t\t\t\tServiceRegistry.PRIORITY_MAX).registrations());\n\t\t}\n\t\treturn registrations;\n\t}","commit_id":"e1c7b9faff82ceccc8772ba34a2d5a628aa8cda4","url":"https://github.com/eclipse/xtext"},{"original_method":"public Set<IServiceRegistration> registrations() {\n\t\treturn super.registrations();\n\t}","id":13333,"modified_method":"public Set<IServiceRegistration> registrations() {\n\t\tSet<IServiceRegistration> registrations = super.registrations();\n\t\tif (UseXtendSwitch.useXtend) {\n\t\t\tregistrations.addAll(scope(org.eclipse.xtext.testlanguages.ITreeTestLanguage.SCOPE).with(\n\t\t\t\t\tIContentAssistInvocationHandler.class, TreeTestLanguageXtendContentAssistInvoker.class,\n\t\t\t\t\tServiceRegistry.PRIORITY_MAX).registrations());\n\t\t}\n\t\treturn registrations;\n\t}","commit_id":"e1c7b9faff82ceccc8772ba34a2d5a628aa8cda4","url":"https://github.com/eclipse/xtext"},{"original_method":"public Set<IServiceRegistration> registrations() {\n\t\treturn super.registrations();\n\t}","id":13334,"modified_method":"public Set<IServiceRegistration> registrations() {\n\t\tSet<IServiceRegistration> registrations = super.registrations();\n\t\tif (UseXtendSwitch.useXtend) {\n\t\t\tregistrations.addAll(scope(org.eclipse.xtext.testlanguages.IContentAssistTestLanguage.SCOPE).with(\n\t\t\t\t\tIContentAssistInvocationHandler.class, ContentAssistTestLanguageXtendContentAssistInvoker.class,\n\t\t\t\t\tServiceRegistry.PRIORITY_MAX).registrations());\n\t\t}\n\t\treturn registrations;\n\t}","commit_id":"71183e7107b898c5236bc684448494ac00a82c68","url":"https://github.com/eclipse/xtext"},{"original_method":"public Set<IServiceRegistration> registrations() {\n\t\treturn scope(org.eclipse.xtext.testlanguages.IContentAssistTestLanguage.SCOPE)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IProposalProvider.class, org.eclipse.xtext.testlanguages.ContentAssistTestLanguageGenProposalProvider.class)\n\t\t\t.with(org.eclipse.jface.text.contentassist.IContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.impl.IContentAssistInvocationHandler.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistMethodInvoker.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.ITemplateContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultTemplateContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IContentAssistCalculator.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistCalculator.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ISemanticModelTransformer.class, org.eclipse.xtext.ui.common.editor.outline.impl.DefaultSemanticModelTransformer.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ILazyTreeProvider.class, org.eclipse.xtext.ui.common.editor.outline.impl.LazyTransformingTreeProvider.class)\n\t\t\t.registrations();\n\t}","id":13335,"modified_method":"public Set<IServiceRegistration> registrations() {\n\t\treturn scope(org.eclipse.xtext.testlanguages.IContentAssistTestLanguage.SCOPE)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IProposalProvider.class, org.eclipse.xtext.testlanguages.GenContentAssistTestLanguageProposalProvider.class)\n\t\t\t.with(org.eclipse.jface.text.contentassist.IContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.impl.IContentAssistInvocationHandler.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistMethodInvoker.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.ITemplateContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultTemplateContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IContentAssistCalculator.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistCalculator.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ISemanticModelTransformer.class, org.eclipse.xtext.ui.common.editor.outline.impl.DefaultSemanticModelTransformer.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ILazyTreeProvider.class, org.eclipse.xtext.ui.common.editor.outline.impl.LazyTransformingTreeProvider.class)\n\t\t\t.registrations();\n\t}","commit_id":"71183e7107b898c5236bc684448494ac00a82c68","url":"https://github.com/eclipse/xtext"},{"original_method":"public Set<IServiceRegistration> registrations() {\n\t\treturn scope(org.eclipse.xtext.example.IDomainmodel.SCOPE)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IProposalProvider.class, org.eclipse.xtext.example.DomainmodelGenProposalProvider.class)\n\t\t\t.with(org.eclipse.jface.text.contentassist.IContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.impl.IContentAssistInvocationHandler.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistMethodInvoker.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.ITemplateContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultTemplateContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IContentAssistCalculator.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistCalculator.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ISemanticModelTransformer.class, org.eclipse.xtext.ui.common.editor.outline.impl.DefaultSemanticModelTransformer.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ILazyTreeProvider.class, org.eclipse.xtext.ui.common.editor.outline.impl.LazyTransformingTreeProvider.class)\n\t\t\t.registrations();\n\t}","id":13336,"modified_method":"public Set<IServiceRegistration> registrations() {\n\t\treturn scope(org.eclipse.xtext.example.IDomainmodel.SCOPE)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IProposalProvider.class, org.eclipse.xtext.example.GenDomainmodelProposalProvider.class)\n\t\t\t.with(org.eclipse.jface.text.contentassist.IContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.impl.IContentAssistInvocationHandler.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistMethodInvoker.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.ITemplateContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultTemplateContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IContentAssistCalculator.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistCalculator.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ISemanticModelTransformer.class, org.eclipse.xtext.ui.common.editor.outline.impl.DefaultSemanticModelTransformer.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ILazyTreeProvider.class, org.eclipse.xtext.ui.common.editor.outline.impl.LazyTransformingTreeProvider.class)\n\t\t\t.registrations();\n\t}","commit_id":"71183e7107b898c5236bc684448494ac00a82c68","url":"https://github.com/eclipse/xtext"},{"original_method":"public Set<IServiceRegistration> registrations() {\n\t\treturn scope(org.eclipse.xtext.example.IFowlerDsl.SCOPE)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IProposalProvider.class, org.eclipse.xtext.example.FowlerDslGenProposalProvider.class)\n\t\t\t.with(org.eclipse.jface.text.contentassist.IContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.impl.IContentAssistInvocationHandler.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistMethodInvoker.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.ITemplateContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultTemplateContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IContentAssistCalculator.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistCalculator.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ISemanticModelTransformer.class, org.eclipse.xtext.ui.common.editor.outline.impl.DefaultSemanticModelTransformer.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ILazyTreeProvider.class, org.eclipse.xtext.ui.common.editor.outline.impl.LazyTransformingTreeProvider.class)\n\t\t\t.registrations();\n\t}","id":13337,"modified_method":"public Set<IServiceRegistration> registrations() {\n\t\treturn scope(org.eclipse.xtext.example.IFowlerDsl.SCOPE)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IProposalProvider.class, org.eclipse.xtext.example.GenFowlerDslProposalProvider.class)\n\t\t\t.with(org.eclipse.jface.text.contentassist.IContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.impl.IContentAssistInvocationHandler.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistMethodInvoker.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.ITemplateContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultTemplateContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IContentAssistCalculator.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistCalculator.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ISemanticModelTransformer.class, org.eclipse.xtext.ui.common.editor.outline.impl.DefaultSemanticModelTransformer.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ILazyTreeProvider.class, org.eclipse.xtext.ui.common.editor.outline.impl.LazyTransformingTreeProvider.class)\n\t\t\t.registrations();\n\t}","commit_id":"71183e7107b898c5236bc684448494ac00a82c68","url":"https://github.com/eclipse/xtext"},{"original_method":"public Set<IServiceRegistration> registrations() {\n\t\treturn scope(org.eclipse.xtext.testlanguages.IReferenceGrammarTestLanguage.SCOPE)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IProposalProvider.class, org.eclipse.xtext.testlanguages.ReferenceGrammarTestLanguageGenProposalProvider.class)\n\t\t\t.with(org.eclipse.jface.text.contentassist.IContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.impl.IContentAssistInvocationHandler.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistMethodInvoker.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.ITemplateContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultTemplateContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IContentAssistCalculator.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistCalculator.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ISemanticModelTransformer.class, org.eclipse.xtext.ui.common.editor.outline.impl.DefaultSemanticModelTransformer.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ILazyTreeProvider.class, org.eclipse.xtext.ui.common.editor.outline.impl.LazyTransformingTreeProvider.class)\n\t\t\t.registrations();\n\t}","id":13338,"modified_method":"public Set<IServiceRegistration> registrations() {\n\t\treturn scope(org.eclipse.xtext.testlanguages.IReferenceGrammarTestLanguage.SCOPE)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IProposalProvider.class, org.eclipse.xtext.testlanguages.GenReferenceGrammarTestLanguageProposalProvider.class)\n\t\t\t.with(org.eclipse.jface.text.contentassist.IContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.impl.IContentAssistInvocationHandler.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistMethodInvoker.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.ITemplateContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultTemplateContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IContentAssistCalculator.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistCalculator.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ISemanticModelTransformer.class, org.eclipse.xtext.ui.common.editor.outline.impl.DefaultSemanticModelTransformer.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ILazyTreeProvider.class, org.eclipse.xtext.ui.common.editor.outline.impl.LazyTransformingTreeProvider.class)\n\t\t\t.registrations();\n\t}","commit_id":"71183e7107b898c5236bc684448494ac00a82c68","url":"https://github.com/eclipse/xtext"},{"original_method":"public Set<IServiceRegistration> registrations() {\n\t\treturn scope(org.eclipse.xtext.reference.IReferenceGrammar.SCOPE)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IProposalProvider.class, org.eclipse.xtext.reference.ReferenceGrammarGenProposalProvider.class)\n\t\t\t.with(org.eclipse.jface.text.contentassist.IContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.impl.IContentAssistInvocationHandler.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistMethodInvoker.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.ITemplateContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultTemplateContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IContentAssistCalculator.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistCalculator.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ISemanticModelTransformer.class, org.eclipse.xtext.ui.common.editor.outline.impl.DefaultSemanticModelTransformer.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ILazyTreeProvider.class, org.eclipse.xtext.ui.common.editor.outline.impl.LazyTransformingTreeProvider.class)\n\t\t\t.registrations();\n\t}","id":13339,"modified_method":"public Set<IServiceRegistration> registrations() {\n\t\treturn scope(org.eclipse.xtext.reference.IReferenceGrammar.SCOPE)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IProposalProvider.class, org.eclipse.xtext.reference.GenReferenceGrammarProposalProvider.class)\n\t\t\t.with(org.eclipse.jface.text.contentassist.IContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.impl.IContentAssistInvocationHandler.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistMethodInvoker.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.ITemplateContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultTemplateContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IContentAssistCalculator.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistCalculator.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ISemanticModelTransformer.class, org.eclipse.xtext.ui.common.editor.outline.impl.DefaultSemanticModelTransformer.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ILazyTreeProvider.class, org.eclipse.xtext.ui.common.editor.outline.impl.LazyTransformingTreeProvider.class)\n\t\t\t.registrations();\n\t}","commit_id":"71183e7107b898c5236bc684448494ac00a82c68","url":"https://github.com/eclipse/xtext"},{"original_method":"public Set<IServiceRegistration> registrations() {\n\t\treturn scope(org.eclipse.xtext.testlanguages.ITreeTestLanguage.SCOPE)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IProposalProvider.class, org.eclipse.xtext.testlanguages.TreeTestLanguageGenProposalProvider.class)\n\t\t\t.with(org.eclipse.jface.text.contentassist.IContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.impl.IContentAssistInvocationHandler.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistMethodInvoker.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.ITemplateContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultTemplateContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IContentAssistCalculator.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistCalculator.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ISemanticModelTransformer.class, org.eclipse.xtext.ui.common.editor.outline.impl.DefaultSemanticModelTransformer.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ILazyTreeProvider.class, org.eclipse.xtext.ui.common.editor.outline.impl.LazyTransformingTreeProvider.class)\n\t\t\t.registrations();\n\t}","id":13340,"modified_method":"public Set<IServiceRegistration> registrations() {\n\t\treturn scope(org.eclipse.xtext.testlanguages.ITreeTestLanguage.SCOPE)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IProposalProvider.class, org.eclipse.xtext.testlanguages.GenTreeTestLanguageProposalProvider.class)\n\t\t\t.with(org.eclipse.jface.text.contentassist.IContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.impl.IContentAssistInvocationHandler.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistMethodInvoker.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.ITemplateContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultTemplateContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IContentAssistCalculator.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistCalculator.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ISemanticModelTransformer.class, org.eclipse.xtext.ui.common.editor.outline.impl.DefaultSemanticModelTransformer.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ILazyTreeProvider.class, org.eclipse.xtext.ui.common.editor.outline.impl.LazyTransformingTreeProvider.class)\n\t\t\t.registrations();\n\t}","commit_id":"71183e7107b898c5236bc684448494ac00a82c68","url":"https://github.com/eclipse/xtext"},{"original_method":"public Set<IServiceRegistration> registrations() {\n\t\treturn scope(org.eclipse.xtext.IXtextGrammarTestLanguage.SCOPE)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IProposalProvider.class, org.eclipse.xtext.XtextGrammarTestLanguageGenProposalProvider.class)\n\t\t\t.with(org.eclipse.jface.text.contentassist.IContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.impl.IContentAssistInvocationHandler.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistMethodInvoker.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.ITemplateContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultTemplateContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IContentAssistCalculator.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistCalculator.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ISemanticModelTransformer.class, org.eclipse.xtext.ui.common.editor.outline.impl.DefaultSemanticModelTransformer.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ILazyTreeProvider.class, org.eclipse.xtext.ui.common.editor.outline.impl.LazyTransformingTreeProvider.class)\n\t\t\t.registrations();\n\t}","id":13341,"modified_method":"public Set<IServiceRegistration> registrations() {\n\t\treturn scope(org.eclipse.xtext.IXtextGrammarTestLanguage.SCOPE)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IProposalProvider.class, org.eclipse.xtext.GenXtextGrammarTestLanguageProposalProvider.class)\n\t\t\t.with(org.eclipse.jface.text.contentassist.IContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.impl.IContentAssistInvocationHandler.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistMethodInvoker.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.ITemplateContentAssistProcessor.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultTemplateContentAssistProcessor.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.contentassist.IContentAssistCalculator.class, org.eclipse.xtext.ui.common.editor.contentassist.impl.DefaultContentAssistCalculator.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ISemanticModelTransformer.class, org.eclipse.xtext.ui.common.editor.outline.impl.DefaultSemanticModelTransformer.class)\n\t\t\t.with(org.eclipse.xtext.ui.common.editor.outline.ILazyTreeProvider.class, org.eclipse.xtext.ui.common.editor.outline.impl.LazyTransformingTreeProvider.class)\n\t\t\t.registrations();\n\t}","commit_id":"71183e7107b898c5236bc684448494ac00a82c68","url":"https://github.com/eclipse/xtext"},{"original_method":"public Set<IServiceRegistration> registrations() {\n\t\treturn super.registrations();\n\t}","id":13342,"modified_method":"public Set<IServiceRegistration> registrations() {\n\t\tSet<IServiceRegistration> registrations = super.registrations();\n\t\tif (UseXtendSwitch.useXtend) {\n\t\t\tregistrations.addAll(scope(org.eclipse.xtext.testlanguages.IReferenceGrammarTestLanguage.SCOPE).with(\n\t\t\t\t\tIContentAssistInvocationHandler.class, ReferenceGrammarTestLanguageXtendContentAssistInvoker.class,\n\t\t\t\t\tServiceRegistry.PRIORITY_MAX).registrations());\n\t\t}\n\t\treturn registrations;\n\t}","commit_id":"71183e7107b898c5236bc684448494ac00a82c68","url":"https://github.com/eclipse/xtext"},{"original_method":"public Set<IServiceRegistration> registrations() {\n\t\treturn super.registrations();\n\t}","id":13343,"modified_method":"public Set<IServiceRegistration> registrations() {\n\t\tSet<IServiceRegistration> registrations = super.registrations();\n\t\tif (UseXtendSwitch.useXtend) {\n\t\t\tregistrations.addAll(scope(org.eclipse.xtext.testlanguages.ITreeTestLanguage.SCOPE).with(\n\t\t\t\t\tIContentAssistInvocationHandler.class, TreeTestLanguageXtendContentAssistInvoker.class,\n\t\t\t\t\tServiceRegistry.PRIORITY_MAX).registrations());\n\t\t}\n\t\treturn registrations;\n\t}","commit_id":"71183e7107b898c5236bc684448494ac00a82c68","url":"https://github.com/eclipse/xtext"},{"original_method":"public String getXML()\n\t{\n        StringBuffer retval = new StringBuffer(100);\n\n\t\tretval.append(super.getXML());\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"hostname\",    hostname));\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"nbr_packets\", nbrPackets));\n\n\t\t// TODO: The following line may be removed 3 versions after 2.5.0\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"nbrpaquets\",  nbrPackets));\n\n\t\treturn retval.toString();\n\t}","id":13344,"modified_method":"public String getXML()\n\t{\n        StringBuffer retval = new StringBuffer(100);\n\n\t\tretval.append(super.getXML());\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"hostname\",    hostname));\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"nbr_packets\", nbrPackets));\r\n\r\n\t\t// TODO: The following line may be removed 3 versions after 2.5.0\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"nbrpaquets\",  nbrPackets));\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"timeout\",   timeout));\r\n\t\t\r\n\t\tretval.append(\"      \").append(XMLHandler.addTagValue(\"pingtype\",   pingtype));\n\n\t\treturn retval.toString();\n\t}","commit_id":"cc65b9e8d286d99cbb10ea5ad5c73886960c6b02","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void loadXML(Node entrynode, List<DatabaseMeta> databases, List<SlaveServer> slaveServers, Repository rep)\n\t\tthrows KettleXMLException\n\t{\n\t\ttry\n\t\t{\n\t\t\tString nbrPaquets;\n\n\t\t\tsuper.loadXML(entrynode, databases, slaveServers);\n\t\t\thostname   = XMLHandler.getTagValue(entrynode, \"hostname\");\n\t\t\tnbrPackets = XMLHandler.getTagValue(entrynode, \"nbr_packets\");\n\n\t\t\t// TODO: The following lines may be removed 3 versions after 2.5.0\n\t\t\tnbrPaquets = XMLHandler.getTagValue(entrynode, \"nbrpaquets\");\n\t\t\tif ( nbrPackets == null && nbrPaquets != null )\n\t\t\t{\n\t\t\t\t// if only nbrpaquets exists this means that the file was\n\t\t\t\t// save by a version 2.5.0 ping job entry\n\t\t\t\tnbrPackets = nbrPaquets;\n\t\t\t}\n\t\t}\n\t\tcatch(KettleXMLException xe)\n\t\t{\n\t\t\tthrow new KettleXMLException(\"Unable to load job entry of type 'ping' from XML node\", xe);\n\t\t}\n\t}","id":13345,"modified_method":"public void loadXML(Node entrynode, List<DatabaseMeta> databases, List<SlaveServer> slaveServers, Repository rep)\n\t\tthrows KettleXMLException\n\t{\n\t\ttry\n\t\t{\n\t\t\tString nbrPaquets;\n\t\t\tsuper.loadXML(entrynode, databases, slaveServers);\n\t\t\thostname   = XMLHandler.getTagValue(entrynode, \"hostname\");\r\n\t\t\tnbrPackets = XMLHandler.getTagValue(entrynode, \"nbr_packets\");\r\n\r\n\t\t\t// TODO: The following lines may be removed 3 versions after 2.5.0\r\n\t\t\tnbrPaquets = XMLHandler.getTagValue(entrynode, \"nbrpaquets\");\r\n\t\t\tif ( nbrPackets == null && nbrPaquets != null )\r\n\t\t\t{\r\n\t\t\t\t// if only nbrpaquets exists this means that the file was\r\n\t\t\t\t// save by a version 2.5.0 ping job entry\r\n\t\t\t\tnbrPackets = nbrPaquets;\r\n\t\t\t}\r\n\t\t\ttimeout     = XMLHandler.getTagValue(entrynode, \"timeout\");\r\n\t\t\tpingtype     = XMLHandler.getTagValue(entrynode, \"pingtype\");\r\n\t\t\tif(Const.isEmpty(pingtype))\r\n\t\t\t{\r\n\t\t\t\tpingtype=classicPing;\r\n\t\t\t\tipingtype=iclassicPing;\r\n\t\t\t}else\r\n\t\t\t{\r\n\t\t\t\tif(pingtype.equals(systemPing))\r\n\t\t\t\t\tipingtype=isystemPing;\r\n\t\t\t\telse if(pingtype.equals(bothPings))\r\n\t\t\t\t\tipingtype=ibothPings;\r\n\t\t\t\telse\r\n\t\t\t\t\tipingtype=iclassicPing;\r\n\t\t\t\t\r\n\t\t\t}\n\t\t}\n\t\tcatch(KettleXMLException xe)\n\t\t{\n\t\t\tthrow new KettleXMLException(\"Unable to load job entry of type 'ping' from XML node\", xe);\n\t\t}\n\t}","commit_id":"cc65b9e8d286d99cbb10ea5ad5c73886960c6b02","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void loadRep(Repository rep, long id_jobentry, List<DatabaseMeta> databases, List<SlaveServer> slaveServers)\n\t\tthrows KettleException\n\t{\n\t\ttry\n\t\t{\n\t\t\tString nbrPaquets;\n\n\t\t\tsuper.loadRep(rep, id_jobentry, databases, slaveServers);\n\t\t\thostname   = rep.getJobEntryAttributeString(id_jobentry, \"hostname\");\n\t\t\tnbrPackets = rep.getJobEntryAttributeString(id_jobentry, \"nbr_packets\");\n\n\t\t\t// TODO: The following lines may be removed 3 versions after 2.5.0\n\t\t\tnbrPaquets = rep.getJobEntryAttributeString(id_jobentry, \"nbrpaquets\");\n\t\t\tif ( nbrPackets == null && nbrPaquets != null )\n\t\t\t{\n\t\t\t\t// if only nbrpaquets exists this means that the file was\n\t\t\t\t// save by a version 2.5.0 ping job entry\n\t\t\t\tnbrPackets = nbrPaquets;\n\t\t\t}\n\t\t}\n\t\tcatch(KettleException dbe)\n\t\t{\n\t\t\tthrow new KettleException(\"Unable to load job entry of type 'ping' exists from the repository for id_jobentry=\"+id_jobentry, dbe);\n\t\t}\n\t}","id":13346,"modified_method":"public void loadRep(Repository rep, long id_jobentry, List<DatabaseMeta> databases, List<SlaveServer> slaveServers)\n\t\tthrows KettleException\n\t{\n\t\ttry\n\t\t{\r\n\t\t\tString nbrPaquets;\n\t\t\tsuper.loadRep(rep, id_jobentry, databases, slaveServers);\n\t\t\thostname   = rep.getJobEntryAttributeString(id_jobentry, \"hostname\");\n\t\t\tnbrPackets = rep.getJobEntryAttributeString(id_jobentry, \"nbr_packets\");\r\n\r\n\t\t\t// TODO: The following lines may be removed 3 versions after 2.5.0\r\n\t\t\tnbrPaquets = rep.getJobEntryAttributeString(id_jobentry, \"nbrpaquets\");\r\n\t\t\tif ( nbrPackets == null && nbrPaquets != null )\r\n\t\t\t{\r\n\t\t\t\t// if only nbrpaquets exists this means that the file was\r\n\t\t\t\t// save by a version 2.5.0 ping job entry\r\n\t\t\t\tnbrPackets = nbrPaquets;\r\n\t\t\t}\r\n\t\t\ttimeout = rep.getJobEntryAttributeString(id_jobentry, \"timeout\");\r\n\t\t\t\r\n\t\t\tpingtype  = rep.getJobEntryAttributeString(id_jobentry, \"pingtype\");\r\n\t\t\tif(Const.isEmpty(pingtype))\r\n\t\t\t{\r\n\t\t\t\tpingtype=classicPing;\r\n\t\t\t\tipingtype=iclassicPing;\r\n\t\t\t}else{\r\n\t\t\t\tif(pingtype.equals(systemPing))\r\n\t\t\t\t\tipingtype=isystemPing;\r\n\t\t\t\telse if(pingtype.equals(bothPings))\r\n\t\t\t\t\tipingtype=ibothPings;\r\n\t\t\t\telse\r\n\t\t\t\t\tipingtype=iclassicPing;\r\n\t\t\t}\n\t\t}\n\t\tcatch(KettleException dbe)\n\t\t{\n\t\t\tthrow new KettleException(\"Unable to load job entry of type 'ping' exists from the repository for id_jobentry=\"+id_jobentry, dbe);\n\t\t}\n\t}","commit_id":"cc65b9e8d286d99cbb10ea5ad5c73886960c6b02","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public JobEntryPing(String n)\n\t{\n\t\tsuper(n, \"\");\n\t\thostname=null;\n\t\tnbrPackets=\"2\";\n\t\tsetID(-1L);\n\t\tsetJobEntryType(JobEntryType.PING);\n\t}","id":13347,"modified_method":"public JobEntryPing(String n)\n\t{\n\t\tsuper(n, \"\");\n\t\tpingtype=classicPing;\r\n\t\thostname=null;\r\n\t\tnbrPackets=\"2\";\n\t\ttimeout=defaultTimeOut;\n\t\tsetID(-1L);\n\t\tsetJobEntryType(JobEntryType.PING);\n\t}","commit_id":"cc65b9e8d286d99cbb10ea5ad5c73886960c6b02","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public Result execute(Result previousResult, int nr, Repository rep, Job parentJob)\n    {\n        LogWriter log = LogWriter.getInstance();\n        Result result = previousResult;\n\n        result.setNrErrors(1);\n        result.setResult(false);\n\n        String hostname = getRealHostname();\n\n        if (!Const.isEmpty(hostname))\n        {\n            String ip = hostname;\n\n            try\n            {\n                String lignePing = \"\";\n\n                int NbrPaquetsSend = Const.toInt(getRealNbrPackets(), -1);\n\n                if (NbrPaquetsSend < 1 || NbrPaquetsSend > 1000)\n                {\n                    // Value must be between 1 and 1000\n                    NbrPaquetsSend = 2;\n                }\n\n                if ( log.isDetailed() )\n                {\n                    log.logDetailed(toString(), Messages.getString(\"JobPing.NbrPackets.Label\") + NbrPaquetsSend);\n                    log.logDetailed(toString(), Messages.getString(\"JobPing.PingingHost1.Label\") + ip + Messages.getString(\"JobPing.PingingHost2.Label\"));\n                }\n\n                Process processPing = Runtime.getRuntime().exec(\"ping \" + ip + \" -n \" + NbrPaquetsSend);\n\n                // Get ping response\r\n                if(log.isDetailed())\t\n                \tlog.logDetailed(toString(), Messages.getString(\"JobPing.Gettingresponse1.Label\") + ip\n                        + Messages.getString(\"JobPing.Gettingresponse2.Label\"));\n\n                BufferedReader br = new BufferedReader(new InputStreamReader(processPing.getInputStream()));\n\n                // Read response lines\n                while ((lignePing = br.readLine()) != null)\n                {\r\n                \tif(log.isDetailed())\t\n                \t\tlog.logDetailed(toString(), lignePing);\n                    // We succeed only when 0% lost of data\n                }\n                if (processPing.exitValue()==0)\n                {\r\n                \tif(log.isDetailed())\t\n                \t\tlog.logDetailed(toString(), Messages.getString(\"JobPing.OK1.Label\") + ip + Messages.getString(\"JobPing.OK2.Label\"));\n                    result.setNrErrors(0);\n                    result.setResult(true);\n                }\n            }\n            catch (IOException ex)\n            {\n                log.logError(toString(), Messages.getString(\"JobPing.Error.Label\") + ex.getMessage());\n            }\n        }\n        else\n        {\n            // No host was specified\n            log.logError(toString(), Messages.getString(\"JobPing.SpecifyHost.Label\"));\n        }\n\n        return result;\n    }","id":13348,"modified_method":"public Result execute(Result previousResult, int nr, Repository rep, Job parentJob)\n    {\n        LogWriter log = LogWriter.getInstance();\n        Result result = previousResult;\r\n        \r\n        result.setNrErrors(1);\r\n        result.setResult(false);\r\n\r\n        String hostname = getRealHostname();\r\n    \tint timeoutInt = Const.toInt(getRealTimeOut(), 300);\r\n    \tint packets = Const.toInt(getRealNbrPackets(), 2);\r\n        boolean status =false;\r\n        \r\n        if (Const.isEmpty(hostname))\r\n        {\r\n            // No Host was specified\r\n            log.logError(toString(), Messages.getString(\"JobPing.SpecifyHost.Label\"));\r\n            return result;\r\n        }\r\n\r\n        try\r\n        {\r\n        \tif(ipingtype==isystemPing || ipingtype==ibothPings)\r\n        \t{\r\n        \t\t// Perform a system (Java) ping ...\r\n\t        \tstatus=SystemPing(hostname, timeoutInt,log);\r\n\t        \tif(status)\r\n\t        \t{\r\n\t                if(log.isDetailed())\r\n\t                \tlog.logDetailed(Messages.getString(\"JobPing.SystemPing\"), Messages.getString(\"JobPing.OK.Label\",hostname));\r\n\t        \t}else\r\n\t        \t\tlog.logError(Messages.getString(\"JobPing.SystemPing\"),Messages.getString(\"JobPing.NOK.Label\",hostname));\r\n        \t}\r\n        \tif((ipingtype==iclassicPing) || (ipingtype==ibothPings && !status))\r\n        \t{\r\n        \t\t// Perform a classic ping ..\r\n        \t\tstatus=ClassicPing(hostname, packets,log);\r\n        \t\tif(status)\r\n        \t\t{\r\n                    if(log.isDetailed())\r\n                    \tlog.logDetailed(Messages.getString(\"JobPing.ClassicPing\"), Messages.getString(\"JobPing.OK.Label\",hostname));\r\n        \t\t}else\r\n        \t\t\tlog.logError(Messages.getString(\"JobPing.ClassicPing\"),Messages.getString(\"JobPing.NOK.Label\",hostname));\r\n        \t}\t\r\n        }\r\n\r\n        catch (Exception ex)\r\n        {\r\n            log.logError(toString(), Messages.getString(\"JobPing.Error.Label\") + ex.getMessage());\r\n        }\r\n    \tif (status)\r\n        {\r\n        \tif(log.isDetailed())\r\n        \t\tlog.logDetailed(toString(), Messages.getString(\"JobPing.OK.Label\",hostname));\r\n            result.setNrErrors(0);\r\n            result.setResult(true);\r\n        }else\r\n        \tlog.logError(toString(), Messages.getString(\"JobPing.NOK.Label\",hostname));\r\n        return result;\n    }","commit_id":"cc65b9e8d286d99cbb10ea5ad5c73886960c6b02","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void saveRep(Repository rep, long id_job)\n\t\tthrows KettleException\n\t{\n\t\ttry\n\t\t{\n\t\t\tsuper.saveRep(rep, id_job);\n\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"hostname\",    hostname);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"nbr_packets\", nbrPackets);\n\t\t\t// TODO: The following line may be removed 3 versions after 2.5.0\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"nbrpaquets\",  nbrPackets);\n\t\t}\n\t\tcatch(KettleDatabaseException dbe)\n\t\t{\n\t\t\tthrow new KettleException(\"Unable to save job entry of type 'ping' to the repository for id_job=\"+id_job, dbe);\n\t\t}\n\t}","id":13349,"modified_method":"public void saveRep(Repository rep, long id_job)\n\t\tthrows KettleException\n\t{\n\t\ttry\n\t\t{\n\t\t\tsuper.saveRep(rep, id_job);\n\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"hostname\",    hostname);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"nbr_packets\", nbrPackets);\r\n\t\t\t// TODO: The following line may be removed 3 versions after 2.5.0\r\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"nbrpaquets\",  nbrPackets);\r\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"timeout\",      timeout);\r\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"pingtype\",      pingtype);\n\t\t}\n\t\tcatch(KettleDatabaseException dbe)\n\t\t{\n\t\t\tthrow new KettleException(\"Unable to save job entry of type 'ping' to the repository for id_job=\"+id_job, dbe);\n\t\t}\n\t}","commit_id":"cc65b9e8d286d99cbb10ea5ad5c73886960c6b02","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private void ok()\n    {\n        jobEntry.setName(wName.getText());\n        jobEntry.setHostname(wHostname.getText());\n\t\tjobEntry.setNbrPackets(wNbrPackets.getText());\n\t\n        dispose();\n    }","id":13350,"modified_method":"private void ok()\n    {\n        jobEntry.setName(wName.getText());\n        jobEntry.setHostname(wHostname.getText());\n\t\tjobEntry.setNbrPackets(wNbrPackets.getText());\r\n\t\tjobEntry.setTimeOut(wTimeOut.getText());\r\n\t\tjobEntry.ipingtype=wPingType.getSelectionIndex();\r\n\t\tif(wPingType.getSelectionIndex()==jobEntry.isystemPing)\r\n\t\t\tjobEntry.pingtype=jobEntry.systemPing;\r\n\t\telse if(wPingType.getSelectionIndex()==jobEntry.ibothPings)\r\n\t\t\tjobEntry.pingtype=jobEntry.bothPings;\r\n\t\telse\r\n\t\t\tjobEntry.pingtype=jobEntry.classicPing;\r\n\t\n\t\n        dispose();\n    }","commit_id":"cc65b9e8d286d99cbb10ea5ad5c73886960c6b02","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public JobEntryInterface open()\n    {\n        Shell parent = getParent();\n        Display display = parent.getDisplay();\n\n        shell = new Shell(parent, props.getJobsDialogStyle());\n        props.setLook(shell);\n        JobDialog.setShellImage(shell, jobEntry);\n\n        ModifyListener lsMod = new ModifyListener()\n        {\n            public void modifyText(ModifyEvent e)\n            {\n                jobEntry.setChanged();\n            }\n        };\n        changed = jobEntry.hasChanged();\n\n        FormLayout formLayout = new FormLayout();\n        formLayout.marginWidth = Const.FORM_MARGIN;\n        formLayout.marginHeight = Const.FORM_MARGIN;\n\n        shell.setLayout(formLayout);\n        shell.setText(Messages.getString(\"JobPing.Title\"));\n\n        int middle = props.getMiddlePct();\n        int margin = Const.MARGIN;\n\n        // Filename line\n        wlName = new Label(shell, SWT.RIGHT);\n        wlName.setText(Messages.getString(\"JobPing.Name.Label\"));\n        props.setLook(wlName);\n        fdlName = new FormData();\n        fdlName.left = new FormAttachment(0, 0);\n        fdlName.right = new FormAttachment(middle, -margin);\n        fdlName.top = new FormAttachment(0, margin);\n        wlName.setLayoutData(fdlName);\n        wName = new Text(shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n        props.setLook(wName);\n        wName.addModifyListener(lsMod);\n        fdName = new FormData();\n        fdName.left = new FormAttachment(middle, 0);\n        fdName.top = new FormAttachment(0, margin);\n        fdName.right = new FormAttachment(100, 0);\n        wName.setLayoutData(fdName);\n\n        // hostname line\n        wlHostname = new Label(shell, SWT.RIGHT);\n        wlHostname.setText(Messages.getString(\"JobPing.Hostname.Label\"));\n        props.setLook(wlHostname);\n        fdlHostname = new FormData();\n        fdlHostname.left = new FormAttachment(0, 0);\n        fdlHostname.top = new FormAttachment(wName, margin);\n        fdlHostname.right = new FormAttachment(middle, 0);\n        wlHostname.setLayoutData(fdlHostname);\n\n        wHostname = new TextVar(jobMeta, shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n        props.setLook(wHostname);\n        wHostname.addModifyListener(lsMod);\n        fdHostname = new FormData();\n        fdHostname.left = new FormAttachment(middle, 0);\n        fdHostname.top = new FormAttachment(wName, margin);\n        fdHostname.right = new FormAttachment(100, 0);\n        wHostname.setLayoutData(fdHostname);\n\n        // Whenever something changes, set the tooltip to the expanded version:\n        wHostname.addModifyListener(new ModifyListener()\n        {\n            public void modifyText(ModifyEvent e)\n            {\n                wHostname.setToolTipText(jobMeta.environmentSubstitute(wHostname.getText()));\n            }\n        });\n\n\t\t// Nbr response to get\n\t\twlNbrPackets = new Label(shell, SWT.RIGHT);\n\t\twlNbrPackets.setText(Messages.getString(\"JobPing.NbrPaquets.Label\"));\n\t\tprops.setLook(wlNbrPackets);\n\t\tfdlNbrPackets = new FormData();\n\t\tfdlNbrPackets.left = new FormAttachment(0, 0);\n\t\tfdlNbrPackets.right = new FormAttachment(middle, 0);\n\t\tfdlNbrPackets.top = new FormAttachment(wHostname, margin);\n\t\twlNbrPackets.setLayoutData(fdlNbrPackets);\n\n\t\twNbrPackets = new TextVar(jobMeta, shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n\t\tprops.setLook(wNbrPackets);\n\t\twNbrPackets.addModifyListener(lsMod);\n\t\tfdNbrPackets = new FormData();\n\t\tfdNbrPackets.left = new FormAttachment(middle, 0);\n\t\tfdNbrPackets.top = new FormAttachment(wHostname, margin);\n\t\tfdNbrPackets.right = new FormAttachment(100, 0);\n\t\twNbrPackets.setLayoutData(fdNbrPackets);\n\n        wOK = new Button(shell, SWT.PUSH);\n        wOK.setText(Messages.getString(\"System.Button.OK\"));\n        FormData fd = new FormData();\n        fd.right = new FormAttachment(50, -10);\n        fd.bottom = new FormAttachment(100, 0);\n        fd.width = 100;\n        wOK.setLayoutData(fd);\n\n        wCancel = new Button(shell, SWT.PUSH);\n        wCancel.setText(Messages.getString(\"System.Button.Cancel\"));\n        fd = new FormData();\n        fd.left = new FormAttachment(50, 10);\n        fd.bottom = new FormAttachment(100, 0);\n        fd.width = 100;\n        wCancel.setLayoutData(fd);\n\n        // Add listeners\n        lsCancel = new Listener()\n        {\n            public void handleEvent(Event e)\n            {\n                cancel();\n            }\n        };\n        lsOK = new Listener()\n        {\n            public void handleEvent(Event e)\n            {\n                ok();\n            }\n        };\n\n        wCancel.addListener(SWT.Selection, lsCancel);\n        wOK.addListener(SWT.Selection, lsOK);\n\n        lsDef = new SelectionAdapter()\n        {\n            public void widgetDefaultSelected(SelectionEvent e)\n            {\n                ok();\n            }\n        };\n\n        wName.addSelectionListener(lsDef);\n        wHostname.addSelectionListener(lsDef);\n\n        // Detect X or ALT-F4 or something that kills this window...\n        shell.addShellListener(new ShellAdapter()\n        {\n            public void shellClosed(ShellEvent e)\n            {\n                cancel();\n            }\n        });\n\n        getData();\n\n        BaseStepDialog.setSize(shell);\n\n        shell.open();\n        props.setDialogSize(shell, \"JobPingDialogSize\");\n        while (!shell.isDisposed())\n        {\n            if (!display.readAndDispatch())\n                display.sleep();\n        }\n        return jobEntry;\n    }","id":13351,"modified_method":"public JobEntryInterface open()\n    {\n        Shell parent = getParent();\n        Display display = parent.getDisplay();\n\n        shell = new Shell(parent, props.getJobsDialogStyle());\n        props.setLook(shell);\n        JobDialog.setShellImage(shell, jobEntry);\n\n        ModifyListener lsMod = new ModifyListener()\n        {\n            public void modifyText(ModifyEvent e)\n            {\n                jobEntry.setChanged();\n            }\n        };\n        changed = jobEntry.hasChanged();\n\n        FormLayout formLayout = new FormLayout();\n        formLayout.marginWidth = Const.FORM_MARGIN;\n        formLayout.marginHeight = Const.FORM_MARGIN;\n\n        shell.setLayout(formLayout);\n        shell.setText(Messages.getString(\"JobPing.Title\"));\n\n        int middle = props.getMiddlePct();\n        int margin = Const.MARGIN;\n\n        // Filename line\n        wlName = new Label(shell, SWT.RIGHT);\n        wlName.setText(Messages.getString(\"JobPing.Name.Label\"));\n        props.setLook(wlName);\n        fdlName = new FormData();\n        fdlName.left = new FormAttachment(0, 0);\n        fdlName.right = new FormAttachment(middle, -margin);\n        fdlName.top = new FormAttachment(0, margin);\n        wlName.setLayoutData(fdlName);\n        wName = new Text(shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n        props.setLook(wName);\n        wName.addModifyListener(lsMod);\n        fdName = new FormData();\n        fdName.left = new FormAttachment(middle, 0);\n        fdName.top = new FormAttachment(0, margin);\n        fdName.right = new FormAttachment(100, 0);\n        wName.setLayoutData(fdName);\n\n        // hostname line\n        wlHostname = new Label(shell, SWT.RIGHT);\n        wlHostname.setText(Messages.getString(\"JobPing.Hostname.Label\"));\n        props.setLook(wlHostname);\n        fdlHostname = new FormData();\n        fdlHostname.left = new FormAttachment(0, 0);\n        fdlHostname.top = new FormAttachment(wName, margin);\n        fdlHostname.right = new FormAttachment(middle, 0);\n        wlHostname.setLayoutData(fdlHostname);\n\n        wHostname = new TextVar(jobMeta, shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n        props.setLook(wHostname);\n        wHostname.addModifyListener(lsMod);\n        fdHostname = new FormData();\n        fdHostname.left = new FormAttachment(middle, 0);\n        fdHostname.top = new FormAttachment(wName, margin);\n        fdHostname.right = new FormAttachment(100, 0);\n        wHostname.setLayoutData(fdHostname);\n\n        // Whenever something changes, set the tooltip to the expanded version:\n        wHostname.addModifyListener(new ModifyListener()\n        {\n            public void modifyText(ModifyEvent e)\n            {\n                wHostname.setToolTipText(jobMeta.environmentSubstitute(wHostname.getText()));\n            }\n        });\r\n        \r\n    \twlPingType = new Label(shell, SWT.RIGHT);\r\n     \twlPingType.setText(Messages.getString(\"JobPing.PingType.Label\"));\r\n     \tprops.setLook(wlPingType);\r\n     \tfdlPingType = new FormData();\r\n     \tfdlPingType.left = new FormAttachment(0, 0);\r\n     \tfdlPingType.right = new FormAttachment(middle, 0);\r\n     \tfdlPingType.top = new FormAttachment(wHostname, margin);\r\n     \twlPingType.setLayoutData(fdlPingType);\r\n     \twPingType = new CCombo(shell, SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);\r\n     \twPingType.add(Messages.getString(\"JobPing.ClassicPing.Label\"));\r\n     \twPingType.add(Messages.getString(\"JobPing.SystemPing.Label\"));\r\n     \twPingType.add(Messages.getString(\"JobPing.BothPings.Label\"));\r\n     \twPingType.select(1); // +1: starts at -1\r\n     \tprops.setLook(wPingType);\r\n     \tfdPingType = new FormData();\r\n     \tfdPingType.left = new FormAttachment(middle, 0);\r\n     \tfdPingType.top = new FormAttachment(wHostname, margin);\r\n     \tfdPingType.right = new FormAttachment(100, 0);\r\n     \twPingType.setLayoutData(fdPingType);\r\n     \twPingType.addSelectionListener(new SelectionAdapter() \r\n\t\t{\r\n\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t{\r\n\t\t\t\tsetPingType();\r\n\t\t\t\tjobEntry.setChanged();\r\n\t\t\t}\r\n\t\t}\r\n\t);\n\n\t\t// Timeout\n\t\twlTimeOut = new Label(shell, SWT.RIGHT);\n\t\twlTimeOut.setText(Messages.getString(\"JobPing.TimeOut.Label\"));\n\t\tprops.setLook(wlTimeOut);\n\t\tfdlTimeOut = new FormData();\n\t\tfdlTimeOut.left = new FormAttachment(0, 0);\n\t\tfdlTimeOut.right = new FormAttachment(middle, 0);\n\t\tfdlTimeOut.top = new FormAttachment(wPingType, margin);\n\t\twlTimeOut.setLayoutData(fdlTimeOut);\n\n\t\twTimeOut = new TextVar(jobMeta, shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n\t\twlTimeOut.setToolTipText(Messages.getString(\"JobPing.TimeOut.Tooltip\"));\n\t\tprops.setLook(wTimeOut);\n\t\twTimeOut.addModifyListener(lsMod);\n\t\tfdTimeOut = new FormData();\n\t\tfdTimeOut.left = new FormAttachment(middle, 0);\n\t\tfdTimeOut.top = new FormAttachment(wPingType, margin);\n\t\tfdTimeOut.right = new FormAttachment(100, 0);\n\t\twTimeOut.setLayoutData(fdTimeOut);\r\n\t\t\r\n\r\n\t\t// Nbr packets to send\r\n\t\twlNbrPackets = new Label(shell, SWT.RIGHT);\r\n\t\twlNbrPackets.setText(Messages.getString(\"JobPing.NrPackets.Label\"));\r\n\t\tprops.setLook(wlNbrPackets);\r\n\t\tfdlNbrPackets = new FormData();\r\n\t\tfdlNbrPackets.left = new FormAttachment(0, 0);\r\n\t\tfdlNbrPackets.right = new FormAttachment(middle, 0);\r\n\t\tfdlNbrPackets.top = new FormAttachment(wTimeOut, margin);\r\n\t\twlNbrPackets.setLayoutData(fdlNbrPackets);\r\n\r\n\t\twNbrPackets = new TextVar(jobMeta,shell, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n\t\tprops.setLook(wNbrPackets);\r\n\t\twNbrPackets.addModifyListener(lsMod);\r\n\t\tfdNbrPackets = new FormData();\r\n\t\tfdNbrPackets.left = new FormAttachment(middle, 0);\r\n\t\tfdNbrPackets.top = new FormAttachment(wTimeOut, margin);\r\n\t\tfdNbrPackets.right = new FormAttachment(100, 0);\r\n\t\twNbrPackets.setLayoutData(fdNbrPackets);\r\n\n\n        wOK = new Button(shell, SWT.PUSH);\n        wOK.setText(Messages.getString(\"System.Button.OK\"));\n        FormData fd = new FormData();\n        fd.right = new FormAttachment(50, -10);\n        fd.bottom = new FormAttachment(100, 0);\n        fd.width = 100;\n        wOK.setLayoutData(fd);\n\n        wCancel = new Button(shell, SWT.PUSH);\n        wCancel.setText(Messages.getString(\"System.Button.Cancel\"));\n        fd = new FormData();\n        fd.left = new FormAttachment(50, 10);\n        fd.bottom = new FormAttachment(100, 0);\n        fd.width = 100;\n        wCancel.setLayoutData(fd);\n\n        // Add listeners\n        lsCancel = new Listener()\n        {\n            public void handleEvent(Event e)\n            {\n                cancel();\n            }\n        };\n        lsOK = new Listener()\n        {\n            public void handleEvent(Event e)\n            {\n                ok();\n            }\n        };\n\n        wCancel.addListener(SWT.Selection, lsCancel);\n        wOK.addListener(SWT.Selection, lsOK);\n\n        lsDef = new SelectionAdapter()\n        {\n            public void widgetDefaultSelected(SelectionEvent e)\n            {\n                ok();\n            }\n        };\n\n        wName.addSelectionListener(lsDef);\n        wHostname.addSelectionListener(lsDef);\n\n        // Detect X or ALT-F4 or something that kills this window...\n        shell.addShellListener(new ShellAdapter()\n        {\n            public void shellClosed(ShellEvent e)\n            {\n                cancel();\n            }\n        });\n\n        getData();\n        setPingType();\n        BaseStepDialog.setSize(shell);\n\n        shell.open();\n        props.setDialogSize(shell, \"JobPingDialogSize\");\n        while (!shell.isDisposed())\n        {\n            if (!display.readAndDispatch())\n                display.sleep();\n        }\n        return jobEntry;\n    }","commit_id":"cc65b9e8d286d99cbb10ea5ad5c73886960c6b02","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"/**\n     * Copy information from the meta-data input to the dialog fields.\n     */\n    public void getData()\n    {\n        if (jobEntry.getName() != null)\n            wName.setText(jobEntry.getName());\n        wName.selectAll();\n        if (jobEntry.getHostname() != null)\n            wHostname.setText(jobEntry.getHostname());\n\t\tif (jobEntry.getNbrPackets() != null)\n\t\t\twNbrPackets.setText(jobEntry.getNbrPackets());\n    }","id":13352,"modified_method":"/**\n     * Copy information from the meta-data input to the dialog fields.\n     */\n    public void getData()\n    {\n        if (jobEntry.getName() != null)\n            wName.setText(jobEntry.getName());\n        wName.selectAll();\n        if (jobEntry.getHostname() != null)\n            wHostname.setText(jobEntry.getHostname());\n        if (jobEntry.getNbrPackets() != null)\r\n\t\t\twNbrPackets.setText(jobEntry.getNbrPackets());\r\n\t\telse\r\n\t\t\twNbrPackets.setText(\"2\");\r\n\t\t\r\n\t\tif (jobEntry.getTimeOut() != null)\r\n\t\t\twTimeOut.setText(jobEntry.getTimeOut());\r\n\t\telse\r\n\t\t\twTimeOut.setText(\"3000\");\r\n\r\n\t\twPingType.select(jobEntry.ipingtype);\n    }","commit_id":"cc65b9e8d286d99cbb10ea5ad5c73886960c6b02","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public Result execute(Result previousResult, int nr, Repository rep, Job parentJob) throws KettleException \n\t{\n\t\t    \n\t\n\t\tLogWriter log = LogWriter.getInstance();\n\t\t\n\t\tList<RowMetaAndData> rows = previousResult.getRows();\n\t    RowMetaAndData resultRow = null;\n\t\t\n\t\tResult result = previousResult;\n\t\t//List rows = previousResult.getRows();\n\t\t//Row resultRow = null;\n\t\t\n\t\tNbrFail=0;\r\n\t\n\t\t// Get source and destination files, also wildcard\r\n\t\tString vsourcefilefolder[] = source_filefolder;\n\t\tString vdestinationfilefolder[] = destination_filefolder;\n\t\tString vwildcard[] = wildcard;\n\t\t\n\t\tresult.setResult( true );\n\t\t\n\t\t\t\n\t\tif (arg_from_previous)\n\t\t{\n\t\t\tlog.logDetailed(toString(), Messages.getString(\"JobCopyFiles.Log.ArgFromPrevious.Found1\") + \" \" +\n\t\t\t\t\t+(rows!=null?rows.size():0)+ \" \" + Messages.getString(\"JobCopyFiles.Log.ArgFromPrevious.Found2\"));\n\t\t\t\n\t\t}\n\n\t\tif (arg_from_previous && rows!=null) // Copy the input row to the (command line) arguments\r\n\t\t{\r\n\t\t\tfor (int iteration=0;iteration<rows.size();iteration++) \r\n\t\t\t{\r\n\t\t\t\tresultRow = rows.get(iteration);\r\n\t\t\t\tvsourcefilefolder = new String[resultRow.size()];\n\t\t\t\tvdestinationfilefolder = new String[resultRow.size()];\r\n\t\t\t\tvwildcard = new String[resultRow.size()];\r\n\t\t\t\t// Get source and destination file names, also wildcard\r\n\t\t\t\tvsourcefilefolder[iteration] = resultRow.getString(0,null);\n\t\t\t\tvdestinationfilefolder[iteration] = resultRow.getString(1,null);\r\n\t\t\t\tvwildcard[iteration] = resultRow.getString(2,null);\r\n\n\t\t\t\t\n\t\t\t\tif(!Const.isEmpty(vsourcefilefolder[iteration]) &&  !Const.isEmpty(vdestinationfilefolder[iteration]))\n\t\t\t\t\n\t\t\t\t{\n\t\t\t\t\r\n\t\t\t\t\tlog.logBasic(toString(), Messages.getString(\"JobCopyFiles.Log.ProcessingRow\") + \" [\"  \n\t\t\t\t\t\t\t+ vsourcefilefolder[iteration] + \"]..[\" + vdestinationfilefolder[iteration] + \"]..[\" + vwildcard[iteration]+\"]\");\r\n\r\n\t\t\t\t\tif(! ProcessFileFolder(vsourcefilefolder[iteration],vdestinationfilefolder[iteration],vwildcard[iteration],parentJob,result))\r\n\t\t\t\t\t{\n\t\t\t\t\t\t// The copy process fail\r\n\t\t\t\t\t\tNbrFail=NbrFail++;\r\n\t\t\t\t\t}\r\n\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t \n\t\t\t\t\tlog.logDetailed(toString(), Messages.getString(\"JobCopyFiles.Log.IgnoringRow\") + \" [\" +\n\t\t\t\t\t\t\tvsourcefilefolder[iteration] + \"]..[\" + vdestinationfilefolder[iteration] + \" ]..[\" +  vwildcard[iteration]+\"]\");\n\t\t\t\t\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (vsourcefilefolder!=null && vdestinationfilefolder!=null)\n\t\t{\r\n\t\t\tfor (int i=0;i<vsourcefilefolder.length;i++)\r\n\t\t\t{\n\t\t\t\tif(!Const.isEmpty(vsourcefilefolder[i]) && !Const.isEmpty(vdestinationfilefolder[i]))\n\t\t\t\t{\r\n\r\n\t\t\t\t\t// ok we can process this file/folder\r\n\t\t\t\t\t\n\t\t\t\t\tlog.logBasic(toString(), Messages.getString(\"JobCopyFiles.Log.ProcessingRow\") + \" [\"  \n\t\t\t\t\t\t\t+ vsourcefilefolder[i] + \"]..[\" + vdestinationfilefolder[i] + \"]..[\" +  vwildcard[i]+\"]\");\n\t\t\t\t\t\n\t\t\t\t\tif(!ProcessFileFolder(vsourcefilefolder[i],vdestinationfilefolder[i],vwildcard[i],parentJob,result))\r\n\t\t\t\t\t{\n\t\t\t\t\t\t// The copy process fail\r\n\t\t\t\t\t\tNbrFail=NbrFail++;\r\n\t\t\t\t\t}\r\n\t\t\r\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t\t\t\t\n\t\t\t\t\tlog.logDetailed(toString(), Messages.getString(\"JobCopyFiles.Log.IgnoringRow\") + \" [\" +\n\t\t\t\t\t\t\tvsourcefilefolder[i] + \"]..[\" + vdestinationfilefolder[i] + \" ]..[\" +  vwildcard[i]+\"]\");\n\t\t\t\t\n\t\t\t\t}\r\n\t\t\t}\n\t\t}\t\t\n\t\t\n\t\t// Check if all files was process with success\n\t\tif (NbrFail>0)\n\t\t{\n\t\t\tresult.setResult( false );\n\t\t\tresult.setNrErrors(NbrFail);\t\n\t\t}\r\n\n\t\t\n\t\treturn result;\n\t}","id":13353,"modified_method":"public Result execute(Result previousResult, int nr, Repository rep, Job parentJob) throws KettleException \n\t{\n\t\t    \n\t\n\t\tLogWriter log = LogWriter.getInstance();\n\t\t\n\t\tList<RowMetaAndData> rows = previousResult.getRows();\n\t    RowMetaAndData resultRow = null;\n\t\t\n\t\tResult result = previousResult;\n\t\t\n\t\tNbrFail=0;\r\n\t\n\t\t// Get source and destination files, also wildcard\r\n\t\tString vsourcefilefolder[] = source_filefolder;\n\t\tString vdestinationfilefolder[] = destination_filefolder;\n\t\tString vwildcard[] = wildcard;\n\t\t\n\t\tresult.setResult( true );\n\t\t\n\t\t\t\n\t\tif (arg_from_previous)\n\t\t{\n\t\t\tlog.logDetailed(toString(), Messages.getString(\"JobCopyFiles.Log.ArgFromPrevious.Found\",\"\"+(rows!=null?rows.size():0)));\n\t\t\t\n\t\t}\n\n\t\tif (arg_from_previous && rows!=null) // Copy the input row to the (command line) arguments\r\n\t\t{\n\r\n\t\t\tfor (int iteration=0;iteration<rows.size();iteration++) \r\n\t\t\t{\r\n\t\t\t\tresultRow = rows.get(iteration);\r\n\t\t\t\tvsourcefilefolder = new String[resultRow.size()];\n\t\t\t\tvdestinationfilefolder = new String[resultRow.size()];\r\n\t\t\t\tvwildcard = new String[resultRow.size()];\r\n\t\t\t\t// Get source and destination file names, also wildcard\r\n\t\t\t\tvsourcefilefolder[iteration] = resultRow.getString(0,null);\n\t\t\t\tvdestinationfilefolder[iteration] = resultRow.getString(1,null);\r\n\t\t\t\tvwildcard[iteration] = resultRow.getString(2,null);\r\n\n\t\t\t\t\n\t\t\t\tif(!Const.isEmpty(vsourcefilefolder[iteration]) &&  !Const.isEmpty(vdestinationfilefolder[iteration]))\n\t\t\t\t\n\t\t\t\t{\n\t\t\t\t\r\n\t\t\t\t\tlog.logBasic(toString(), Messages.getString(\"JobCopyFiles.Log.ProcessingRow\", vsourcefilefolder[iteration],vdestinationfilefolder[iteration],vwildcard[iteration]));\r\n\r\n\t\t\t\t\tif(! ProcessFileFolder(vsourcefilefolder[iteration],vdestinationfilefolder[iteration],vwildcard[iteration],parentJob,result))\r\n\t\t\t\t\t{\n\t\t\t\t\t\t// The copy process fail\r\n\t\t\t\t\t\tNbrFail=NbrFail++;\r\n\t\t\t\t\t}\r\n\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t \n\t\t\t\t\tlog.logDetailed(toString(), Messages.getString(\"JobCopyFiles.Log.IgnoringRow\",vsourcefilefolder[iteration],vdestinationfilefolder[iteration], vwildcard[iteration]));\n\t\t\t\t\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (vsourcefilefolder!=null && vdestinationfilefolder!=null)\n\t\t{\n\r\n\t\t\tfor (int i=0;i<vsourcefilefolder.length;i++)\r\n\t\t\t{\n\t\t\t\tif(!Const.isEmpty(vsourcefilefolder[i]) && !Const.isEmpty(vdestinationfilefolder[i]))\n\t\t\t\t{\r\n\r\n\t\t\t\t\t// ok we can process this file/folder\r\n\t\t\t\t\t\n\t\t\t\t\tlog.logBasic(toString(), Messages.getString(\"JobCopyFiles.Log.ProcessingRow\",vsourcefilefolder[i], vdestinationfilefolder[i],vwildcard[i]));\n\t\t\t\t\t\n\t\t\t\t\tif(!ProcessFileFolder(vsourcefilefolder[i],vdestinationfilefolder[i],vwildcard[i],parentJob,result))\r\n\t\t\t\t\t{\n\t\t\t\t\t\t// The copy process fail\r\n\t\t\t\t\t\tNbrFail=NbrFail++;\r\n\t\t\t\t\t}\r\n\t\t\r\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t\t\t\t\n\t\t\t\t\tlog.logDetailed(toString(), Messages.getString(\"JobCopyFiles.Log.IgnoringRow\",vsourcefilefolder[i],vdestinationfilefolder[i],vwildcard[i]));\n\t\t\t\t\n\t\t\t\t}\r\n\t\t\t}\n\t\t}\t\t\n\t\t\n\t\t// Check if all files was successfully process\n\t\n\t\tif (NbrFail>0)\n\t\t{\n\t\t\tresult.setResult( false );\n\t\t\tresult.setNrErrors(NbrFail);\t\n\t\t}\r\n\n\t\t\n\t\treturn result;\n\t}","commit_id":"644d280d5abbb28b3c67253189918972306fed59","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public boolean includeFile(FileSelectInfo info) \n\t\t{\n\t\t\tboolean resultat=false;\n\t\t\tString fil_name=null;\n\t\t\t\n\t\t\ttry\n\t\t\t{\n\n\t\t\t\tif (info.getFile().getType() == FileType.FILE) \n\t\t\t\t{\n\t\t\t\t\tif (info.getFile().getName().getBaseName().equals(filename) && (info.getFile().getParent().toString().equals(foldername))) \n\t\t\t\t\t{\n\t\t\t\t\t\t// check if the file exists\n\t\t\t\t\t\tfil_name=destfolder + Const.FILE_SEPARATOR + filename;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (KettleVFS.getFileObject(fil_name).exists())\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlog.logBasic(\"      \" + Messages.getString(\"JobCopyFiles.Log.FileExistsInfos\"), Messages.getString(\"JobCopyFiles.Log.FileExists1\") +\n\t\t\t\t\t\t\t\t\t \" [\" + fil_name + Messages.getString(\"JobCopyFiles.Log.FileExists2\"));\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\tif (overwrite_files) \n\t\t\t\t\t\t\t{\n\n\t\t\t\t\t\t\t\tlog.logBasic(\"      \" + Messages.getString(\"JobCopyFiles.Log.FileOverwriteInfos\"),Messages.getString(\"JobCopyFiles.Log.FileOverwrite1\") +\n\t\t\t\t\t\t\t\t\t \t\t\" [\" +info.getFile().toString() + \"] \"  + Messages.getString(\"JobCopyFiles.Log.FileOverwrite2\") + \" [\" + fil_name + \"]\");\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tresultat=true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\n\t\t\t\t\t\t\tlog.logBasic(\"      \" + Messages.getString(\"JobCopyFiles.Log.FileCopiedInfos\"),Messages.getString(\"JobCopyFiles.Log.FileCopied1\") +\n\t\t\t\t\t\t\t\t\t\" [\" +info.getFile().toString() + \"] \" + Messages.getString(\"JobCopyFiles.Log.FileCopied2\")  + \" [\" +fil_name + \"]\");\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tresultat=true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (resultat && remove_source_files)\n\t\t\t\t\t{\n\t\t\t\t\t\t// add this folder/file to remove files\n\t\t\t\t\t\t// This list will be fetched and all entries files\n\t\t\t\t\t\t// will be removed\n\t\t\t\t\t\tlist_files_remove.add(info.getFile().toString());\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (resultat && add_result_filesname)\n\t\t\t\t\t{\n\t\t\t\t\t\t// add this folder/file to result files name\n\t\t\t\t\t\tlist_add_result.add(KettleVFS.getFileObject(fil_name).toString());\n\t\t\t\t\t}\n\t\t\t\t}\t\t\n\t\t\t\t\t\n\t\t\t}\n\t\t\tcatch (Exception e) \n\t\t\t{\n\t\t\t\t\n\t\t\t\tlog.logError(Messages.getString(\"JobCopyFiles.Error.Exception.CopyProcessError\") , Messages.getString(\"JobCopyFiles.Error.Exception.CopyProcess1\") \n\t\t\t\t\t\t+ \" [\"+info.getFile().toString()+ \"] \" + Messages.getString(\"JobCopyFiles.Error.Exception.CopyProcess1\") + \" [\"  \n\t\t\t\t\t\t+ fil_name + \"] \" + Messages.getString(\"JobCopyFiles.Error.Exception.CopyProcess3\") + e.getMessage());\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\tresultat= false;\n\t\t\t}\n\t\t\t\n\t\t\t\t\t\n\t\t\treturn resultat;\n\t\t\t\n\t\t}","id":13354,"modified_method":"public boolean includeFile(FileSelectInfo info) \n\t\t{\n\t\t\tboolean resultat=false;\n\t\t\tString fil_name=null;\n\t\t\t\n\t\t\ttry\n\t\t\t{\n\n\t\t\t\tif (info.getFile().getType() == FileType.FILE) \n\t\t\t\t{\n\t\t\t\t\tif (info.getFile().getName().getBaseName().equals(filename) && (info.getFile().getParent().toString().equals(foldername))) \n\t\t\t\t\t{\n\t\t\t\t\t\t// check if the file exists\n\t\t\t\t\t\tfil_name=destfolder + Const.FILE_SEPARATOR + filename;\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (KettleVFS.getFileObject(fil_name).exists())\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlog.logBasic(\"      \" + Messages.getString(\"JobCopyFiles.Log.FileExistsInfos\"), Messages.getString(\"JobCopyFiles.Log.FileExists\",fil_name));\n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\tif (overwrite_files) \n\t\t\t\t\t\t\t{\n\n\t\t\t\t\t\t\t\tlog.logBasic(\"      \" + Messages.getString(\"JobCopyFiles.Log.FileOverwriteInfos\"),Messages.getString(\"JobCopyFiles.Log.FileOverwrite\", info.getFile().toString(),fil_name ));\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tresultat=true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\n\t\t\t\t\t\t\tlog.logBasic(\"      \" + Messages.getString(\"JobCopyFiles.Log.FileCopiedInfos\"),Messages.getString(\"JobCopyFiles.Log.FileCopied\",info.getFile().toString(),fil_name));\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tresultat=true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (resultat && remove_source_files)\n\t\t\t\t\t{\n\t\t\t\t\t\t// add this folder/file to remove files\n\t\t\t\t\t\t// This list will be fetched and all entries files\n\t\t\t\t\t\t// will be removed\n\t\t\t\t\t\tlist_files_remove.add(info.getFile().toString());\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (resultat && add_result_filesname)\n\t\t\t\t\t{\n\t\t\t\t\t\t// add this folder/file to result files name\n\t\t\t\t\t\tlist_add_result.add(KettleVFS.getFileObject(fil_name).toString());\n\t\t\t\t\t}\n\t\t\t\t}\t\t\n\t\t\t\t\t\n\t\t\t}\n\t\t\tcatch (Exception e) \n\t\t\t{\n\t\t\t\t\n\t\t\t\tlog.logError(Messages.getString(\"JobCopyFiles.Error.Exception.CopyProcessError\") , Messages.getString(\"JobCopyFiles.Error.Exception.CopyProcess\",info.getFile().toString(),\n\t\t\t\t\t\tfil_name, e.getMessage()));\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\tresultat= false;\n\t\t\t}\n\t\t\t\n\t\t\t\t\t\n\t\t\treturn resultat;\n\t\t\t\n\t\t}","commit_id":"644d280d5abbb28b3c67253189918972306fed59","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private boolean ProcessFileFolder(String sourcefilefoldername,String destinationfilefoldername,String wildcard,Job parentJob,Result result)\n\t{\n\n\t\t\n\t\tLogWriter log = LogWriter.getInstance();\n\t\tboolean entrystatus = false ;\n\t\tFileObject sourcefilefolder = null;\n\t\tFileObject destinationfilefolder = null;\n\t\t\n\t\t// Clear list files to remove after copy process\n\t\t// This list is also added to result files name\n\t\tlist_files_remove.clear();\n\t\tlist_add_result.clear();\n\t\t\n\t\t\n\t\t// Get real source, destination file and wilcard\n\t\tString realSourceFilefoldername = environmentSubstitute(sourcefilefoldername);\n\t\tString realDestinationFilefoldername = environmentSubstitute(destinationfilefoldername);\n\t\tString realWildcard=environmentSubstitute(wildcard);\n\n\t\ttry\n\t\t{\n\t\t\t\n\t\t     // Here gc() is explicitly called if e.g. createfile is used in the same\n\t\t     // job for the same file. The problem is that after creating the file the\n\t\t     // file object is not properly garbaged collected and thus the file cannot\n\t\t     // be deleted anymore. This is a known problem in the JVM.\n\n\t\t     System.gc();\n\t\t      \n\t\t\tsourcefilefolder = KettleVFS.getFileObject(realSourceFilefoldername);\n\t\t\tdestinationfilefolder = KettleVFS.getFileObject(realDestinationFilefoldername);\n\t\t\t\n\t\t\tif (sourcefilefolder.exists())\n\t\t\t{\n\t\t\t\n\t\t\t\t// Basic Tests\n\t\t\t\tif (sourcefilefolder.getType().equals(FileType.FOLDER) && destinationfilefolder.getType().equals(FileType.FILE))\n\t\t\t\t{\n\t\t\t\t\t// Source is a folder, destination is a file\n\t\t\t\t\t// WARNING !!! CAN NOT COPY FOLDER TO FILE !!!\n\t\t\t\t\t\n\t\t\t\t\tlog.logError(Messages.getString(\"JobCopyFiles.Log.Forbidden\"), Messages.getString(\"JobCopyFiles.Log.CanNotCopyFolderToFile1\") + \" [\" \n\t\t\t\t\t\t\t+realSourceFilefoldername + \"] \" +  Messages.getString(\"JobCopyFiles.Log.CanNotCopyFolderToFile2\") + \" [\" \n\t\t\t\t\t\t\t+ realDestinationFilefoldername + \"]\");\t\n\t\t\t\t\t\n\t\t\t\t\tNbrFail++;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t\n\t\t\t\t\tif (destinationfilefolder.exists() && destinationfilefolder.getType().equals(FileType.FOLDER) && sourcefilefolder.getType().equals(FileType.FILE) )\n\t\t\t\t\t{\t\t\t\t\n\t\t\t\t\t\t// Source is a file, destination is a folder\n\t\t\t\t\t\t// Copy the file to the destination folder\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\tdestinationfilefolder.copyFrom(sourcefilefolder.getParent(),new TextOneFileSelector(sourcefilefolder.getParent().toString(),sourcefilefolder.getName().getBaseName(),destinationfilefolder.toString() ) );\n\t\t\t\t\t\t\n\t\t\t\t\t\tlog.logDetailed(Messages.getString(\"JobCopyFiles.Log.FileCopiedInfos\"), \n\t\t\t\t\t\t\t\tMessages.getString(\"JobCopyFiles.Log.FileCopied1\") + \" [\" \n\t\t\t\t\t\t\t\t + sourcefilefolder.getName() + \"] \" +\n\t\t\t\t\t\t\t\t Messages.getString(\"JobCopyFiles.Log.FileCopied2\") + \" [\"\n\t\t\t\t\t\t\t\t + destinationfilefolder.getName() + \"]\");\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// Both source and destination are folders\n\t\t\t\t\t\tlog.logBasic(\"\",\"  \");\n\t\t\t\t\t\t\n\t\t\t\t\t\tlog.logBasic(\"---> \" + Messages.getString(\"JobCopyFiles.Log.FetchFolder\"), \n\t\t\t\t\t\t\t\t\"[\" + sourcefilefolder.toString() + \"]\");\n\t\t\t\t\t\t\n\t\t\t\t\t\tdestinationfilefolder.copyFrom(sourcefilefolder,new TextFileSelector(sourcefilefolder.toString(),destinationfilefolder.toString(),realWildcard) );\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Remove Files if needed\n\t\t\t\t\tif (remove_source_files && !list_files_remove.isEmpty())\n\t\t\t\t\t{\n\n\t\t\t\t\t\t for (Iterator<String> iter = list_files_remove.iterator(); iter.hasNext();)\n\t\t\t\t        {\n\t\t\t\t            String fileremoventry = (String) iter.next();\n\t\t\t\t            // Remove ONLY Files\n\t\t\t\t            if (KettleVFS.getFileObject(fileremoventry).getType() == FileType.FILE)\n\t\t\t\t            {\n\t\t\t\t\t            boolean deletefile=KettleVFS.getFileObject(fileremoventry).delete();\n\t\t\t\t\t            log.logBasic(\"\",\" ------ \");\n\t\t\t\t\t            if (!deletefile)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t            \t\n\t\t\t\t\t\t\t\t\tlog.logError(\"      \" + Messages.getString(\"JobCopyFiles.Log.Error\"), \n\t\t\t\t\t\t\t\t\t\t\tMessages.getString(\"JobCopyFiles.Error.Exception.CanRemoveFileFolder\") + \n\t\t\t\t\t\t\t\t\t\t\t\" [\" + fileremoventry + \"]\");\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t            else\n\t\t\t\t\t            {\n\t\t\t\t\t            \t\n\t\t\t\t\t            \tlog.logBasic(\"      \" + Messages.getString(\"JobCopyFiles.Log.FileFolderRemovedInfos\"), \n\t\t\t\t\t            \t\t\tMessages.getString(\"JobCopyFiles.Log.FileFolderRemoved1\") + \" [\" +   fileremoventry + \"] \" \n\t\t\t\t\t            \t\t\t+ Messages.getString(\"JobCopyFiles.Log.FileFolderRemoved2\"));\n\t\t\t\t\t            }\n\t\t\t\t            }\n\t\t\t\t        }\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t// Add files to result files name\n\t\t\t\t\tif (add_result_filesname && !list_add_result.isEmpty())\n\t\t\t\t\t{\n\n\t\t\t\t\t\t for (Iterator<String> iter = list_add_result.iterator(); iter.hasNext();)\n\t\t\t\t        {\n\t\t\t\t            String fileaddentry = (String) iter.next();\n\t\t\t\t            // Add ONLY Files\n\t\t\t\t            if (KettleVFS.getFileObject(fileaddentry).getType() == FileType.FILE)\n\t\t\t\t            {\n\t\t\t\n\t\t\t                    \n\t\t\t                \tResultFile resultFile = new ResultFile(ResultFile.FILE_TYPE_GENERAL, KettleVFS.getFileObject(fileaddentry), parentJob.getName(), toString());\n\t\t\t                    result.getResultFiles().put(resultFile.getFile().toString(), resultFile);\n\t\t\t                    \n\t\t\t\t\t            log.logBasic(\"\",\" ------ \");\n\t\t\t\t\t            log.logBasic(\"      \" + Messages.getString(\"JobCopyFiles.Log.ResultFilesName\"),\n\t\t\t\t\t            \t\tMessages.getString(\"JobCopyFiles.Log.FileFolderAddedToResultFilesName1\") + \" [\" +   fileaddentry + \"] \" \n\t\t\t\t\t            \t\t+ Messages.getString(\"JobCopyFiles.Log.FileFolderAddedToResultFilesName2\"));\n\t\t\t\t            }\n\t\t\t\t        }\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tentrystatus = true ;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t\n\t\t\t\tlog.logError(toString(), Messages.getString(\"JobCopyFiles.Error.SourceFileNotExists1\") + \" [\"\n\t\t\t\t\t\t+realSourceFilefoldername+\"] \" + Messages.getString(\"JobCopyFiles.Error.SourceFileNotExists2\"));\t\t\t\t\t\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\n\t\t}\n\t\n\t\tcatch (IOException e) \r\n\t\t{\n\n\t\t\tlog.logError(\"Error\", Messages.getString(\"JobCopyFiles.Error.Exception.CopyProcess1\") \n\t\t\t\t\t+ \" [\"+realSourceFilefoldername+ \"] \" + Messages.getString(\"JobCopyFiles.Error.Exception.CopyProcess1\") + \" [\"  \n\t\t\t\t\t+ destinationfilefolder + \"] \" + Messages.getString(\"JobCopyFiles.Error.Exception.CopyProcess3\") + e.getMessage());\t\t\t\t\t\n\t\t}\n\t\tfinally \r\n\t\t{\n\t\t\tif ( sourcefilefolder != null )\n\t\t\t{\n\t\t\t\ttry  \r\n\t\t\t\t{\n\t\t\t\t\tsourcefilefolder.close();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\tcatch ( IOException ex ) {};\n\t\t\t}\n\t\t\tif ( destinationfilefolder != null )\n\t\t\t{\n\t\t\t\ttry  \n\t\t\t\t{\n\t\t\t\t\tdestinationfilefolder.close();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\tcatch ( IOException ex ) {};\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t}\n\n\t\treturn entrystatus;\n\t}","id":13355,"modified_method":"private boolean ProcessFileFolder(String sourcefilefoldername,String destinationfilefoldername,String wildcard,Job parentJob,Result result)\n\t{\n\n\t\t\n\t\tLogWriter log = LogWriter.getInstance();\n\t\tboolean entrystatus = false ;\n\t\tFileObject sourcefilefolder = null;\n\t\tFileObject destinationfilefolder = null;\n\t\t\n\t\t// Clear list files to remove after copy process\n\t\t// This list is also added to result files name\n\t\tlist_files_remove.clear();\n\t\tlist_add_result.clear();\n\t\t\n\t\t\n\t\t// Get real source, destination file and wilcard\n\t\tString realSourceFilefoldername = environmentSubstitute(sourcefilefoldername);\n\t\tString realDestinationFilefoldername = environmentSubstitute(destinationfilefoldername);\n\t\tString realWildcard=environmentSubstitute(wildcard);\n\n\t\ttry\n\t\t{\n\t\t\t\n\t\t     // Here gc() is explicitly called if e.g. createfile is used in the same\n\t\t     // job for the same file. The problem is that after creating the file the\n\t\t     // file object is not properly garbaged collected and thus the file cannot\n\t\t     // be deleted anymore. This is a known problem in the JVM.\n\n\t\t     System.gc();\n\t\t      \n\t\t\tsourcefilefolder = KettleVFS.getFileObject(realSourceFilefoldername);\n\t\t\tdestinationfilefolder = KettleVFS.getFileObject(realDestinationFilefoldername);\n\t\t\t\n\t\t\tif (sourcefilefolder.exists())\n\t\t\t{\n\t\t\t\n\t\t\t\t// Basic Tests\n\t\t\t\tif (sourcefilefolder.getType().equals(FileType.FOLDER) && destinationfilefolder.getType().equals(FileType.FILE))\n\t\t\t\t{\n\t\t\t\t\t// Source is a folder, destination is a file\n\t\t\t\t\t// WARNING !!! CAN NOT COPY FOLDER TO FILE !!!\n\t\t\t\t\t\n\t\t\t\t\tlog.logError(Messages.getString(\"JobCopyFiles.Log.Forbidden\"), Messages.getString(\"JobCopyFiles.Log.CanNotCopyFolderToFile\",realSourceFilefoldername, realDestinationFilefoldername));\t\n\t\t\t\t\t\n\t\t\t\t\tNbrFail++;\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t\n\t\t\t\t\tif (destinationfilefolder.exists() && destinationfilefolder.getType().equals(FileType.FOLDER) && sourcefilefolder.getType().equals(FileType.FILE) )\n\t\t\t\t\t{\t\t\t\t\n\t\t\t\t\t\t// Source is a file, destination is a folder\n\t\t\t\t\t\t// Copy the file to the destination folder\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\tdestinationfilefolder.copyFrom(sourcefilefolder.getParent(),new TextOneFileSelector(sourcefilefolder.getParent().toString(),sourcefilefolder.getName().getBaseName(),destinationfilefolder.toString() ) );\n\t\t\t\t\t\t\n\t\t\t\t\t\tlog.logDetailed(Messages.getString(\"JobCopyFiles.Log.FileCopiedInfos\"), Messages.getString(\"JobCopyFiles.Log.FileCopied\"), sourcefilefolder.getName(),destinationfilefolder.getName());\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t// Both source and destination are folders\n\t\t\t\t\t\tlog.logBasic(\"\",\"  \");\n\t\t\t\t\t\t\n\t\t\t\t\t\tlog.logBasic(\"---> \", Messages.getString(\"JobCopyFiles.Log.FetchFolder\", sourcefilefolder.toString()));\n\t\t\t\t\t\t\n\t\t\t\t\t\tdestinationfilefolder.copyFrom(sourcefilefolder,new TextFileSelector(sourcefilefolder.toString(),destinationfilefolder.toString(),realWildcard) );\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Remove Files if needed\n\t\t\t\t\tif (remove_source_files && !list_files_remove.isEmpty())\n\t\t\t\t\t{\n\n\t\t\t\t\t\t for (Iterator<String> iter = list_files_remove.iterator(); iter.hasNext();)\n\t\t\t\t        {\n\t\t\t\t            String fileremoventry = (String) iter.next();\n\t\t\t\t            // Remove ONLY Files\n\t\t\t\t            if (KettleVFS.getFileObject(fileremoventry).getType() == FileType.FILE)\n\t\t\t\t            {\n\t\t\t\t\t            boolean deletefile=KettleVFS.getFileObject(fileremoventry).delete();\n\t\t\t\t\t            log.logBasic(\"\",\" ------ \");\n\t\t\t\t\t            if (!deletefile)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t            \t\n\t\t\t\t\t\t\t\t\tlog.logError(\"      \" + Messages.getString(\"JobCopyFiles.Log.Error\"), Messages.getString(\"JobCopyFiles.Error.Exception.CanRemoveFileFolder\",fileremoventry));\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t            else\n\t\t\t\t\t            {\n\t\t\t\t\t            \t\n\t\t\t\t\t            \tlog.logBasic(\"      \" + Messages.getString(\"JobCopyFiles.Log.FileFolderRemovedInfos\"),Messages.getString(\"JobCopyFiles.Log.FileFolderRemoved\", fileremoventry));\n\t\t\t\t\t            }\n\t\t\t\t            }\n\t\t\t\t        }\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t// Add files to result files name\n\t\t\t\t\tif (add_result_filesname && !list_add_result.isEmpty())\n\t\t\t\t\t{\n\n\t\t\t\t\t\t for (Iterator<String> iter = list_add_result.iterator(); iter.hasNext();)\n\t\t\t\t        {\n\t\t\t\t            String fileaddentry = (String) iter.next();\n\t\t\t\t            // Add ONLY Files\n\t\t\t\t            if (KettleVFS.getFileObject(fileaddentry).getType() == FileType.FILE)\n\t\t\t\t            {\n\t\t\t\n\t\t\t                    \n\t\t\t                \tResultFile resultFile = new ResultFile(ResultFile.FILE_TYPE_GENERAL, KettleVFS.getFileObject(fileaddentry), parentJob.getName(), toString());\n\t\t\t                    result.getResultFiles().put(resultFile.getFile().toString(), resultFile);\n\t\t\t                    \n\t\t\t\t\t            log.logBasic(\"\",\" ------ \");\n\t\t\t\t\t            log.logBasic(\"      \" + Messages.getString(\"JobCopyFiles.Log.ResultFilesName\"),\tMessages.getString(\"JobCopyFiles.Log.FileAddedToResultFilesName\", fileaddentry));\n\t\t\t\t            }\n\t\t\t\t        }\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tentrystatus = true ;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t\n\t\t\t\tlog.logError(toString(), Messages.getString(\"JobCopyFiles.Error.SourceFileNotExists\",realSourceFilefoldername));\t\t\t\t\t\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\n\t\t}\n\t\n\t\tcatch (IOException e) \r\n\t\t{\n\n\t\t\tlog.logError(\"Error\", Messages.getString(\"JobCopyFiles.Error.Exception.CopyProcess\", realSourceFilefoldername, realDestinationFilefoldername,e.getMessage()));\t\t\t\t\t\n\t\t}\n\t\tfinally \r\n\t\t{\n\t\t\tif ( sourcefilefolder != null )\n\t\t\t{\n\t\t\t\ttry  \r\n\t\t\t\t{\n\t\t\t\t\tsourcefilefolder.close();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\tcatch ( IOException ex ) {};\n\t\t\t}\n\t\t\tif ( destinationfilefolder != null )\n\t\t\t{\n\t\t\t\ttry  \n\t\t\t\t{\n\t\t\t\t\tdestinationfilefolder.close();\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\tcatch ( IOException ex ) {};\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t}\n\n\t\treturn entrystatus;\n\t}","commit_id":"644d280d5abbb28b3c67253189918972306fed59","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public boolean includeFile(FileSelectInfo info) \r\n\t\t{\n\t\t\tboolean returncode=false;\n\t\t\tFileObject file_name=null;\n\t\t\ttry\n\t\t\t{\n\t\t\t\t\n\t\t\t\tif (!info.getFile().toString().equals(source_folder))\n\t\t\t\t{\n\t\t\t\t\t// Pass over the Base folder itself\n\t\t\t\t\t\n\t\t\t\t\tString short_filename_from_basefolder=info.getFile().getName().toString().substring(source_folder.length(),info.getFile().getName().toString().length());\n\t\t\t\t\tString short_filename= info.getFile().getName().getBaseName();\n\t\t\t\t\t// Built destination filename\n\t\t\t\t\tfile_name=KettleVFS.getFileObject(destination_folder + Const.FILE_SEPARATOR + short_filename_from_basefolder);//source_folder + Const.FILE_SEPARATOR + info.getFile().getName().getBaseName()); \n\t\t\t\t\t\n\t\t\t\t\tif (!info.getFile().getParent().equals(info.getBaseFolder()))\n\t\t\t\t\t {\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Not in the Base Folder..Only if include sub folders  \n\t\t\t\t\t\t if (include_subfolders)\n\t\t\t\t\t\t {\n\t\t\t\t\t\t\t// Folders..only if include subfolders\n\t\t\t\t\t\t\t if (info.getFile().getType() == FileType.FOLDER)\n\t\t\t\t\t\t\t {\n\t\t\t\t\t\t\t\t if (include_subfolders && copy_empty_folders && Const.isEmpty(file_wildcard))\n\t\t\t\t\t\t\t\t {\n\t\t\t\t\t\t\t\t\t if (!file_name.exists())\n\t\t\t\t\t\t\t\t\t {\n\t\t\t\t\t\t\t\t\t\tlog.logBasic(\"\",\" ------ \");\n\n\t\t\t\t\t\t\t\t\t\tlog.logBasic(\"      \" + Messages.getString(\"JobCopyFiles.Log.FolderCopiedInfos\"),  Messages.getString(\"JobCopyFiles.Log.FolderCopied1\") + \n\t\t\t\t\t\t\t\t\t\t\t\t\" [\" +info.getFile().toString() + \"]\" + \" \" + Messages.getString(\"JobCopyFiles.Log.FolderCopied2\") + \" [\" +file_name.toString() + \"]\");\n\t\t\t\t\t\t\t\t\t\treturncode= true;\n\t\t\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t\t\t else\n\t\t\t\t\t\t\t\t\t {\n\t\t\t\t\t\t\t\t\t\t log.logBasic(\"\",\" ------ \");\n\t\t\t\t\t\t\t\t\t\t log.logBasic(\"      \" + Messages.getString(\"JobCopyFiles.Log.FolderExistsInfos\"), Messages.getString(\"JobCopyFiles.Log.FolderExists1\") + \n\t\t\t\t\t\t\t\t\t\t \t\t\" [\" + file_name.getName() + \"] \" + Messages.getString(\"JobCopyFiles.Log.FolderExists2\"));\n\t\t\t\t\t\t\t\t\t\t if (overwrite_files)\n\t\t\t\t\t\t\t\t\t\t {\n\t\t\t\t\t\t\t\t\t\t\t log.logBasic(\"      \" + Messages.getString(\"JobCopyFiles.Log.FolderOverwriteInfos\"),Messages.getString(\"JobCopyFiles.Log.FolderOverwrite1\") +\n\t\t\t\t\t\t\t\t\t\t\t\t\t \" [\" +info.getFile().toString() + \"] \" + Messages.getString(\"JobCopyFiles.Log.FolderOverwrite2\")  + \" ]\" + file_name.toString());\n\t\t\t\t\t\t\t\t\t\t\t returncode= true; \n\t\t\t\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t\t\t } \n\t\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t else\n\t\t\t\t\t\t\t {\n\t\t\t\t\t\t\t\tif (GetFileWildcard(short_filename,file_wildcard))\n\t\t\t\t\t\t\t\t{\t\n\t\t\t\t\t\t\t\t\t// Check if the file exists\n\t\t\t\t\t\t\t\t\t if (!file_name.exists())\n\t\t\t\t\t\t\t\t\t {\n\t\t\t\t\t\t\t\t\t\tlog.logBasic(\"\",\" ------ \");\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tlog.logBasic(\"      \" + Messages.getString(\"JobCopyFiles.Log.FileCopiedInfos\"),Messages.getString(\"JobCopyFiles.Log.FileCopied1\") +\n\t\t\t\t\t\t\t\t\t\t\t\t\" [\" +info.getFile().toString() + \"] \" + Messages.getString(\"JobCopyFiles.Log.FileCopied2\")  + \" [\" +file_name.toString() + \"]\");\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\treturncode= true;\n\t\t\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t\t\t else\n\t\t\t\t\t\t\t\t\t {\n\t\t\t\t\t\t\t\t\t\t log.logBasic(\"\",\" ------ \");\n\t\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\t log.logBasic(\"      \" + Messages.getString(\"JobCopyFiles.Log.FileExistsInfos\"), Messages.getString(\"JobCopyFiles.Log.FileExists1\") +\n\t\t\t\t\t\t\t\t\t\t\t\t \" [\" + file_name.getName() + Messages.getString(\"JobCopyFiles.Log.FileExists2\"));\n\t\t\t\t\t\t\t\t\t\t if (overwrite_files)\n\t\t\t\t\t\t\t\t\t\t {\n\t\t\t\t\t\t\t\t\t\t\t log.logBasic(\"       \" + Messages.getString(\"JobCopyFiles.Log.FileExistsInfos\"),Messages.getString(\"JobCopyFiles.Log.FileExists1\") +\n\t\t\t\t\t\t\t\t\t\t\t \t\t\" [\" +info.getFile().toString() + \"] \"  + Messages.getString(\"JobCopyFiles.Log.FileExists2\") + \" [\" + file_name.toString() + \"]\");\n\t\t\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\t\t returncode= true; \n\t\t\t\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t }\n\t\t\t\t\t\t }\n\t\t\t\t\t }\n\t\t\t\t\t else\n\t\t\t\t\t {\n\t\t\t\t\t\t// In the Base Folder...\n\t\t\t\t\t\t// Folders..only if include subfolders\n\t\t\t\t\t\t if (info.getFile().getType() == FileType.FOLDER)\n\t\t\t\t\t\t {\n\t\t\t\t\t\t\t if (include_subfolders && copy_empty_folders  && Const.isEmpty(file_wildcard))\n\t\t\t\t\t\t\t {\n\t\t\t\t\t\t\t\t if (!file_name.exists())\n\t\t\t\t\t\t\t\t {\n\t\t\t\t\t\t\t\t\t log.logBasic(\"\",\" ------ \");\n\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\tlog.logBasic(\"      \" + Messages.getString(\"JobCopyFiles.Log.FolderCopiedInfos\"),Messages.getString(\"JobCopyFiles.Log.FolderCopied1\") +\n\t\t\t\t\t\t\t\t\t\t\t\t\" [\" +info.getFile().toString() + \"] \" + Messages.getString(\"JobCopyFiles.Log.FolderCopied2\")  + \" [\" +file_name.toString() + \"]\");\n\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t returncode= true; \n\t\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t\t else\n\t\t\t\t\t\t\t\t {\n\t\t\t\t\t\t\t\t\t log.logBasic(\"\",\" ------ \");\n\t\t\t\t\t\t\t\t\t log.logBasic(\"      \" + Messages.getString(\"JobCopyFiles.Log.FolderExistsInfos\"), Messages.getString(\"JobCopyFiles.Log.FolderExists1\") +\n\t\t\t\t\t\t\t\t\t\t\t \" [\" + file_name.getName() + \"] \" + Messages.getString(\"JobCopyFiles.Log.FolderExists2\"));\n\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t if (overwrite_files)\n\t\t\t\t\t\t\t\t\t {\n\t\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\t log.logBasic(\"      \" + Messages.getString(\"JobCopyFiles.Log.FolderOverwriteInfos\"),Messages.getString(\"JobCopyFiles.Log.FolderOverwrite1\") +\n\t\t\t\t\t\t\t\t\t\t\t \t\t\" [\" +info.getFile().toString() + \"] \"  + Messages.getString(\"JobCopyFiles.Log.FolderOverwrite2\") + \" [\" + file_name.toString() + \"]\");\n\t\t\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\t returncode= true; \n\t\t\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t }\n\t\t\t\t\t\t }\n\t\t\t\t\t\t else\n\t\t\t\t\t\t {\n\t\t\t\t\t\t\t // file...Check if exists\n\t\t\t\t\t\t\t if (GetFileWildcard(short_filename,file_wildcard))\n\t\t\t\t\t\t\t {\t\n\t\t\t\t\t\t\t\t if (!file_name.exists())\n\t\t\t\t\t\t\t\t {\n\t\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t log.logBasic(\"\",\" ------ \");\n\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t log.logBasic(\"      \" + Messages.getString(\"JobCopyFiles.Log.FileCopiedInfos\"),Messages.getString(\"JobCopyFiles.Log.FileCopied1\") +\n\t\t\t\t\t\t\t\t\t\t\t\t\" [\" +info.getFile().toString() + \"] \" + Messages.getString(\"JobCopyFiles.Log.FileCopied2\")  + \" [\" +file_name.toString() + \"]\");\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t returncode= true;\n\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t\t else\n\t\t\t\t\t\t\t\t {\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t log.logBasic(\"\",\" ------ \");\n\t\t\n\t\t\t\t\t\t\t\t\t log.logBasic(\"      \" + Messages.getString(\"JobCopyFiles.Log.FileExistsInfos\"), Messages.getString(\"JobCopyFiles.Log.FileExists1\") +\n\t\t\t\t\t\t\t\t\t\t\t \" [\" + file_name.getName() + Messages.getString(\"JobCopyFiles.Log.FileExists2\"));\n\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t if (overwrite_files)\n\t\t\t\t\t\t\t\t\t {\n\t\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\t log.logBasic(\"      \" + Messages.getString(\"JobCopyFiles.Log.FileExistsInfos\"),Messages.getString(\"JobCopyFiles.Log.FileExists1\") +\n\t\t\t\t\t\t\t\t\t\t\t \t\t\" [\" +info.getFile().toString() + \"] \"  + Messages.getString(\"JobCopyFiles.Log.FileExists2\") + \" [\" + file_name.toString() + \"]\");\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t returncode= true; \n\t\t\t\t\t\t\t\t\t } \n\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t }\n\t\t\t\t\t\t }\n\t\t\t\t\t\t \n\t\t\t\t\t\t \n\t\t\t\t\t\t\n\t\t\t\t\t }\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\tcatch (Exception e) \r\n\t\t\t{\n\t\t\t\t\n\n\t\t\t\tlog.logError(Messages.getString(\"JobCopyFiles.Error.Exception.CopyProcessError\") , Messages.getString(\"JobCopyFiles.Error.Exception.CopyProcess1\") \n\t\t\t\t\t+ \" [\"+info.getFile().toString()+ \"] \" + Messages.getString(\"JobCopyFiles.Error.Exception.CopyProcess1\") + \" [\"  \n\t\t\t\t\t+ file_name.toString() + \"] \" + Messages.getString(\"JobCopyFiles.Error.Exception.CopyProcess3\") + e.getMessage());\n\t\t\t\t\n\t\t\t\t returncode= false;\n\t\t\t}\n\t\t\tfinally \n\t\t\t{\n\t\t\t\tif ( file_name != null )\n\t\t\t\t{\n\t\t\t\t\ttry  \n\t\t\t\t\t{\n\t\t\t\t\t\tfile_name.close();\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\tcatch ( IOException ex ) {};\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t}\n\t\t\tif (returncode && remove_source_files)\n\t\t\t{\n\t\t\t\t// add this folder/file to remove files\n\t\t\t\t// This list will be fetched and all entries files\n\t\t\t\t// will be removed\n\t\t\t\tlist_files_remove.add(info.getFile().toString());\n\t\t\t}\n\t\t\t\n\t\t\tif (returncode && add_result_filesname)\n\t\t\t{\n\t\t\t\t// add this folder/file to result files name\n\t\t\t\tlist_add_result.add(file_name.toString());\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\treturn returncode;\n\t\t}","id":13356,"modified_method":"public boolean includeFile(FileSelectInfo info) \r\n\t\t{\n\t\t\tboolean returncode=false;\n\t\t\tFileObject file_name=null;\n\t\t\ttry\n\t\t\t{\n\t\t\t\t\n\t\t\t\tif (!info.getFile().toString().equals(source_folder))\n\t\t\t\t{\n\t\t\t\t\t// Pass over the Base folder itself\n\t\t\t\t\t\n\t\t\t\t\tString short_filename_from_basefolder=info.getFile().getName().toString().substring(source_folder.length(),info.getFile().getName().toString().length());\n\t\t\t\t\tString short_filename= info.getFile().getName().getBaseName();\n\t\t\t\t\t// Built destination filename\n\t\t\t\t\tfile_name=KettleVFS.getFileObject(destination_folder + Const.FILE_SEPARATOR + short_filename_from_basefolder);//source_folder + Const.FILE_SEPARATOR + info.getFile().getName().getBaseName()); \n\t\t\t\t\t\n\t\t\t\t\tif (!info.getFile().getParent().equals(info.getBaseFolder()))\n\t\t\t\t\t {\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Not in the Base Folder..Only if include sub folders  \n\t\t\t\t\t\t if (include_subfolders)\n\t\t\t\t\t\t {\n\t\t\t\t\t\t\t// Folders..only if include subfolders\n\t\t\t\t\t\t\t if (info.getFile().getType() == FileType.FOLDER)\n\t\t\t\t\t\t\t {\n\t\t\t\t\t\t\t\t if (include_subfolders && copy_empty_folders && Const.isEmpty(file_wildcard))\n\t\t\t\t\t\t\t\t {\n\t\t\t\t\t\t\t\t\t if (!file_name.exists())\n\t\t\t\t\t\t\t\t\t {\n\t\t\t\t\t\t\t\t\t\tlog.logBasic(\"\",\" ------ \");\n\n\t\t\t\t\t\t\t\t\t\tlog.logBasic(\"      \" + Messages.getString(\"JobCopyFiles.Log.FolderCopiedInfos\"),  Messages.getString(\"JobCopyFiles.Log.FolderCopied\",info.getFile().toString(),file_name.toString()));\n\t\t\t\t\t\t\t\t\t\treturncode= true;\n\t\t\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t\t\t else\n\t\t\t\t\t\t\t\t\t {\n\t\t\t\t\t\t\t\t\t\t log.logBasic(\"\",\" ------ \");\n\t\t\t\t\t\t\t\t\t\t log.logBasic(\"      \" + Messages.getString(\"JobCopyFiles.Log.FolderExistsInfos\"), Messages.getString(\"JobCopyFiles.Log.FolderExists\",file_name.toString()));\n\t\t\t\t\t\t\t\t\t\t if (overwrite_files)\n\t\t\t\t\t\t\t\t\t\t {\n\t\t\t\t\t\t\t\t\t\t\t log.logBasic(\"      \" + Messages.getString(\"JobCopyFiles.Log.FolderOverwriteInfos\"),Messages.getString(\"JobCopyFiles.Log.FolderOverwrite\",info.getFile().toString(), file_name.toString()));\n\t\t\t\t\t\t\t\t\t\t\t returncode= true; \n\t\t\t\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t\t\t } \n\t\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t else\n\t\t\t\t\t\t\t {\n\t\t\t\t\t\t\t\tif (GetFileWildcard(short_filename,file_wildcard))\n\t\t\t\t\t\t\t\t{\t\n\t\t\t\t\t\t\t\t\t// Check if the file exists\n\t\t\t\t\t\t\t\t\t if (!file_name.exists())\n\t\t\t\t\t\t\t\t\t {\n\t\t\t\t\t\t\t\t\t\tlog.logBasic(\"\",\" ------ \");\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tlog.logBasic(\"      \" + Messages.getString(\"JobCopyFiles.Log.FileCopiedInfos\"),Messages.getString(\"JobCopyFiles.Log.FileCopied\",info.getFile().toString(),file_name.toString())) ;\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\treturncode= true;\n\t\t\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t\t\t else\n\t\t\t\t\t\t\t\t\t {\n\t\t\t\t\t\t\t\t\t\t log.logBasic(\"\",\" ------ \");\n\t\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\t log.logBasic(\"      \" + Messages.getString(\"JobCopyFiles.Log.FileExistsInfos\"), Messages.getString(\"JobCopyFiles.Log.FileExists\",file_name.toString()));\n\t\t\t\t\t\t\t\t\t\t if (overwrite_files)\n\t\t\t\t\t\t\t\t\t\t {\n\t\t\t\t\t\t\t\t\t\t\t log.logBasic(\"       \" + Messages.getString(\"JobCopyFiles.Log.FileOverwriteInfos\"),Messages.getString(\"JobCopyFiles.Log.FileOverwrite\",info.getFile().toString(),file_name.toString()));\n\t\t\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\t\t returncode= true; \n\t\t\t\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t }\n\t\t\t\t\t\t }\n\t\t\t\t\t }\n\t\t\t\t\t else\n\t\t\t\t\t {\n\t\t\t\t\t\t// In the Base Folder...\n\t\t\t\t\t\t// Folders..only if include subfolders\n\t\t\t\t\t\t if (info.getFile().getType() == FileType.FOLDER)\n\t\t\t\t\t\t {\n\t\t\t\t\t\t\t if (include_subfolders && copy_empty_folders  && Const.isEmpty(file_wildcard))\n\t\t\t\t\t\t\t {\n\t\t\t\t\t\t\t\t if (!file_name.exists())\n\t\t\t\t\t\t\t\t {\n\t\t\t\t\t\t\t\t\t log.logBasic(\"\",\" ------ \");\n\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\tlog.logBasic(\"      \" + Messages.getString(\"JobCopyFiles.Log.FolderCopiedInfos\"),Messages.getString(\"JobCopyFiles.Log.FolderCopied\",info.getFile().toString(),file_name.toString()));\n\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t returncode= true; \n\t\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t\t else\n\t\t\t\t\t\t\t\t {\n\t\t\t\t\t\t\t\t\t log.logBasic(\"\",\" ------ \");\n\t\t\t\t\t\t\t\t\t log.logBasic(\"      \" + Messages.getString(\"JobCopyFiles.Log.FolderExistsInfos\"), Messages.getString(\"JobCopyFiles.Log.FolderExists\",file_name.toString()));\n\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t if (overwrite_files)\n\t\t\t\t\t\t\t\t\t {\n\t\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\t log.logBasic(\"      \" + Messages.getString(\"JobCopyFiles.Log.FolderOverwriteInfos\"),Messages.getString(\"JobCopyFiles.Log.FolderOverwrite\",info.getFile().toString(),file_name.toString()));\n\t\t\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\t returncode= true; \n\t\t\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t }\n\t\t\t\t\t\t }\n\t\t\t\t\t\t else\n\t\t\t\t\t\t {\n\t\t\t\t\t\t\t // file...Check if exists\n\t\t\t\t\t\t\t if (GetFileWildcard(short_filename,file_wildcard))\n\t\t\t\t\t\t\t {\t\n\t\t\t\t\t\t\t\t if (!file_name.exists())\n\t\t\t\t\t\t\t\t {\n\t\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t log.logBasic(\"\",\" ------ \");\n\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t log.logBasic(\"      \" + Messages.getString(\"JobCopyFiles.Log.FileCopiedInfos\"),Messages.getString(\"JobCopyFiles.Log.FileCopied\",info.getFile().toString(),file_name.toString()));\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t returncode= true;\n\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t\t else\n\t\t\t\t\t\t\t\t {\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t log.logBasic(\"\",\" ------ \");\n\t\t\n\t\t\t\t\t\t\t\t\t log.logBasic(\"      \" + Messages.getString(\"JobCopyFiles.Log.FileExistsInfos\"), Messages.getString(\"JobCopyFiles.Log.FileExists\",file_name.toString()));\n\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t if (overwrite_files)\n\t\t\t\t\t\t\t\t\t {\n\t\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\t log.logBasic(\"      \" + Messages.getString(\"JobCopyFiles.Log.FileOverwriteInfos\"),Messages.getString(\"JobCopyFiles.Log.FileOverwrite\",info.getFile().toString(),file_name.toString()));\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t returncode= true; \n\t\t\t\t\t\t\t\t\t } \n\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t }\n\t\t\t\t\t\t\t }\n\t\t\t\t\t\t }\n\t\t\t\t\t\t \n\t\t\t\t\t\t \n\t\t\t\t\t\t\n\t\t\t\t\t }\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\tcatch (Exception e) \r\n\t\t\t{\n\t\t\t\t\n\n\t\t\t\tlog.logError(Messages.getString(\"JobCopyFiles.Error.Exception.CopyProcessError\") , Messages.getString(\"JobCopyFiles.Error.Exception.CopyProcess\",info.getFile().toString(), \n\t\t\t\t\tfile_name.toString(),e.getMessage()));\n\t\t\t\t\n\t\t\t\t returncode= false;\n\t\t\t}\n\t\t\tfinally \n\t\t\t{\n\t\t\t\tif ( file_name != null )\n\t\t\t\t{\n\t\t\t\t\ttry  \n\t\t\t\t\t{\n\t\t\t\t\t\tfile_name.close();\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\tcatch ( IOException ex ) {};\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t}\n\t\t\tif (returncode && remove_source_files)\n\t\t\t{\n\t\t\t\t// add this folder/file to remove files\n\t\t\t\t// This list will be fetched and all entries files\n\t\t\t\t// will be removed\n\t\t\t\tlist_files_remove.add(info.getFile().toString());\n\t\t\t}\n\t\t\t\n\t\t\tif (returncode && add_result_filesname)\n\t\t\t{\n\t\t\t\t// add this folder/file to result files name\n\t\t\t\tlist_add_result.add(file_name.toString());\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\treturn returncode;\n\t\t}","commit_id":"644d280d5abbb28b3c67253189918972306fed59","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"private void registerActions(final RunListPopup popup) {\n    popup.registerAction(\"alternateExecutor\", KeyStroke.getKeyStroke(\"shift pressed SHIFT\"), new AbstractAction() {\n      public void actionPerformed(ActionEvent e) {\n        myCurrentExecutor = getAlternateExecutor();\n        updatePresentation(popup);\n      }\n    });\n\n    popup.registerAction(\"restoreDefaultExecutor\", KeyStroke.getKeyStroke(\"released SHIFT\"), new AbstractAction() {\n      public void actionPerformed(ActionEvent e) {\n        myCurrentExecutor = getDefaultExecutor();\n        updatePresentation(popup);\n      }\n    });\n\n\n    popup.registerAction(\"invokeAction\", KeyStroke.getKeyStroke(\"shift ENTER\"), new AbstractAction() {\n      public void actionPerformed(ActionEvent e) {\n        try {\n          popup.handleSelect(true);\n        }\n        finally {\n          myCurrentExecutor = null;\n        }\n      }\n    });\n\n    popup.registerAction(\"editConfiguration\", KeyStroke.getKeyStroke(\"F4\"), new AbstractAction() {\n      public void actionPerformed(ActionEvent e) {\n        myEditConfiguration = true;\n        try {\n          popup.handleSelect(true);\n        }\n        finally {\n          myEditConfiguration = false;\n        }\n      }\n    });\n\n\n    popup.registerAction(\"deleteConfiguration\", KeyStroke.getKeyStroke(\"DELETE\"), new AbstractAction() {\n      public void actionPerformed(ActionEvent e) {\n        popup.removeSelected();\n      }\n    });\n\n    popup.registerAction(\"0Action\", KeyStroke.getKeyStroke(\"0\"), createNumberAction(0, popup, getDefaultExecutor()));\n    popup.registerAction(\"0Action_\", KeyStroke.getKeyStroke(\"shift pressed 0\"), createNumberAction(0, popup, getAlternateExecutor()));\n    popup.registerAction(\"1Action\", KeyStroke.getKeyStroke(\"1\"), createNumberAction(1, popup, getDefaultExecutor()));\n    popup.registerAction(\"1Action_\", KeyStroke.getKeyStroke(\"shift pressed 1\"), createNumberAction(1, popup, getAlternateExecutor()));\n    popup.registerAction(\"2Action\", KeyStroke.getKeyStroke(\"2\"), createNumberAction(2, popup, getDefaultExecutor()));\n    popup.registerAction(\"2Action_\", KeyStroke.getKeyStroke(\"shift pressed 2\"), createNumberAction(2, popup, getAlternateExecutor()));\n    popup.registerAction(\"3Action\", KeyStroke.getKeyStroke(\"3\"), createNumberAction(3, popup, getDefaultExecutor()));\n    popup.registerAction(\"3Action_\", KeyStroke.getKeyStroke(\"shift pressed 3\"), createNumberAction(3, popup, getAlternateExecutor()));\n  }","id":13357,"modified_method":"private void registerActions(final RunListPopup popup) {\n    popup.registerAction(\"alternateExecutor\", KeyStroke.getKeyStroke(\"shift pressed SHIFT\"), new AbstractAction() {\n      public void actionPerformed(ActionEvent e) {\n        myCurrentExecutor = getAlternateExecutor();\n        updatePresentation(popup);\n      }\n    });\n\n    popup.registerAction(\"restoreDefaultExecutor\", KeyStroke.getKeyStroke(\"released SHIFT\"), new AbstractAction() {\n      public void actionPerformed(ActionEvent e) {\n        myCurrentExecutor = getDefaultExecutor();\n        updatePresentation(popup);\n      }\n    });\n\n\n    popup.registerAction(\"invokeAction\", KeyStroke.getKeyStroke(\"shift ENTER\"), new AbstractAction() {\n      public void actionPerformed(ActionEvent e) {\n        try {\n          popup.handleSelect(true);\n        }\n        finally {\n          myCurrentExecutor = null;\n        }\n      }\n    });\n\n    popup.registerAction(\"editConfiguration\", KeyStroke.getKeyStroke(\"F4\"), new AbstractAction() {\n      public void actionPerformed(ActionEvent e) {\n        myEditConfiguration = true;\n        try {\n          popup.handleSelect(true);\n        }\n        finally {\n          myEditConfiguration = false;\n        }\n      }\n    });\n\n\n    popup.registerAction(\"deleteConfiguration\", KeyStroke.getKeyStroke(\"DELETE\"), new AbstractAction() {\n      public void actionPerformed(ActionEvent e) {\n        popup.removeSelected();\n      }\n    });\n\n    final Action action0 = createNumberAction(0, popup, getDefaultExecutor());\n    final Action action0_ = createNumberAction(0, popup, getAlternateExecutor());\n    popup.registerAction(\"0Action\", KeyStroke.getKeyStroke(\"0\"), action0);\n    popup.registerAction(\"0Action_\", KeyStroke.getKeyStroke(\"shift pressed 0\"), action0_);\n    popup.registerAction(\"0Action1\", KeyStroke.getKeyStroke(\"NUMPAD0\"), action0);\n    popup.registerAction(\"0Action_1\", KeyStroke.getKeyStroke(\"shift pressed NUMPAD0\"), action0_);\n\n    final Action action1 = createNumberAction(1, popup, getDefaultExecutor());\n    final Action action1_ = createNumberAction(1, popup, getAlternateExecutor());\n    popup.registerAction(\"1Action\", KeyStroke.getKeyStroke(\"1\"), action1);\n    popup.registerAction(\"1Action_\", KeyStroke.getKeyStroke(\"shift pressed 1\"), action1_);\n    popup.registerAction(\"1Action1\", KeyStroke.getKeyStroke(\"NUMPAD1\"), action1);\n    popup.registerAction(\"1Action_1\", KeyStroke.getKeyStroke(\"shift pressed NUMPAD1\"), action1_);\n\n    final Action action2 = createNumberAction(2, popup, getDefaultExecutor());\n    final Action action2_ = createNumberAction(2, popup, getAlternateExecutor());\n    popup.registerAction(\"2Action\", KeyStroke.getKeyStroke(\"2\"), action2);\n    popup.registerAction(\"2Action_\", KeyStroke.getKeyStroke(\"shift pressed 2\"), action2_);\n    popup.registerAction(\"2Action1\", KeyStroke.getKeyStroke(\"NUMPAD2\"), action2);\n    popup.registerAction(\"2Action_1\", KeyStroke.getKeyStroke(\"shift pressed NUMPAD2\"), action2_);\n\n    final Action action3 = createNumberAction(3, popup, getDefaultExecutor());\n    final Action action3_ = createNumberAction(3, popup, getAlternateExecutor());\n    popup.registerAction(\"3Action\", KeyStroke.getKeyStroke(\"3\"), action3);\n    popup.registerAction(\"3Action_\", KeyStroke.getKeyStroke(\"shift pressed 3\"), action3_);\n    popup.registerAction(\"3Action1\", KeyStroke.getKeyStroke(\"NUMPAD3\"), action3);\n    popup.registerAction(\"3Action_1\", KeyStroke.getKeyStroke(\"shift pressed NUMPAD3\"), action3_);\n  }","commit_id":"319005fc097cb5b96e1a569edf54b24cacde3dbe","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n     * JUnit special method called to setup the test. This instance will start\n     * the VoltDB server using the VoltServerConfig instance provided.\n     */\n    @Override\n    public void setUp() throws Exception {\n        rport = SecureRandom.getInstance(\"SHA1PRNG\").nextInt(2000) + 22000;\n        System.out.println(\"Random Admin port is: \" + rport);\n        ncprocess = new NCProcess(rport);\n        try {\n\n            // build up a project builder for the workload\n            VoltProjectBuilder project = getBuilderForTest();\n            boolean success;\n            LocalCluster config = new LocalCluster(\"decimal-default.jar\", 2, 1, 0, BackendTarget.NATIVE_EE_JNI);\n            config.portGenerator.enablePortProvider();\n            config.portGenerator.pprovider.setAdmin(rport);\n\n            success = config.compile(project);\n            config.setHasLocalServer(false);\n            assertTrue(success);\n            config.setExpectedToCrash(true);\n\n            config.startUp();\n            pf = config.m_pipes.get(0);\n            Process p = config.m_cluster.get(0);\n            Thread.currentThread().sleep(10000);\n            p.destroy();\n        } catch (IOException ex) {\n            fail(ex.getMessage());\n        } finally {\n        }\n    }","id":13358,"modified_method":"/**\n     * JUnit special method called to setup the test. This instance will start\n     * the VoltDB server using the VoltServerConfig instance provided.\n     */\n    @Override\n    public void setUp() throws Exception {\n        rport = SecureRandom.getInstance(\"SHA1PRNG\").nextInt(2000) + 22000;\n        System.out.println(\"Random Admin port is: \" + rport);\n        ncprocess = new NCProcess(rport);\n        try {\n            //Build the catalog\n            VoltProjectBuilder builder = new VoltProjectBuilder();\n            builder.addLiteralSchema(\"\");\n            String catalogJar = \"dummy.jar\";\n\n            LocalCluster config = new LocalCluster(catalogJar, 2, 1, 0, BackendTarget.NATIVE_EE_JNI);\n\n            config.portGenerator.enablePortProvider();\n            config.portGenerator.pprovider.setAdmin(rport);\n            config.setHasLocalServer(false);\n            //We expect it to crash\n            config.setExpectedToCrash(true);\n\n            boolean success = config.compile(builder);\n            assertTrue(success);\n\n            config.startUp();\n            pf = config.m_pipes.get(0);\n            Thread.currentThread().sleep(10000);\n        } catch (IOException ex) {\n            fail(ex.getMessage());\n        } finally {\n        }\n    }","commit_id":"457f4d349f582a4b6f594ac3f4099e6df11f2a9b","url":"https://github.com/VoltDB/voltdb"},{"original_method":"/**\n     * JUnit special method called to setup the test. This instance will start\n     * the VoltDB server using the VoltServerConfig instance provided.\n     */\n    @Override\n    public void setUp() throws Exception {\n        rport = SecureRandom.getInstance(\"SHA1PRNG\").nextInt(2000) + 22000;\n        System.out.println(\"Random Client port is: \" + rport);\n        ncprocess = new NCProcess(rport);\n        try {\n\n            // build up a project builder for the workload\n            VoltProjectBuilder project = getBuilderForTest();\n            boolean success;\n            LocalCluster config = new LocalCluster(\"decimal-default.jar\", 2, 1, 0, BackendTarget.NATIVE_EE_JNI);\n            config.portGenerator.enablePortProvider();\n            config.portGenerator.pprovider.setNextClient(rport);\n\n            success = config.compile(project);\n            config.setHasLocalServer(false);\n            assertTrue(success);\n            config.setExpectedToCrash(true);\n\n            config.startUp();\n            pf = config.m_pipes.get(0);\n            Process p = config.m_cluster.get(0);\n            Thread.currentThread().sleep(10000);\n            p.destroy();\n        } catch (IOException ex) {\n            fail(ex.getMessage());\n        } finally {\n        }\n    }","id":13359,"modified_method":"/**\n     * JUnit special method called to setup the test. This instance will start\n     * the VoltDB server using the VoltServerConfig instance provided.\n     */\n    @Override\n    public void setUp() throws Exception {\n        rport = SecureRandom.getInstance(\"SHA1PRNG\").nextInt(2000) + 22000;\n        System.out.println(\"Random Client port is: \" + rport);\n        ncprocess = new NCProcess(rport);\n        try {\n            //Build the catalog\n            VoltProjectBuilder builder = new VoltProjectBuilder();\n            builder.addLiteralSchema(\"\");\n            String catalogJar = \"dummy.jar\";\n\n            LocalCluster config = new LocalCluster(catalogJar, 2, 1, 0, BackendTarget.NATIVE_EE_JNI);\n\n            config.portGenerator.enablePortProvider();\n            config.portGenerator.pprovider.setNextClient(rport);\n            config.setHasLocalServer(false);\n            //We expect it to crash\n            config.setExpectedToCrash(true);\n\n            boolean success = config.compile(builder);\n            assertTrue(success);\n\n            config.startUp();\n            pf = config.m_pipes.get(0);\n            Thread.currentThread().sleep(10000);\n        } catch (IOException ex) {\n            fail(ex.getMessage());\n        } finally {\n        }\n    }","commit_id":"457f4d349f582a4b6f594ac3f4099e6df11f2a9b","url":"https://github.com/VoltDB/voltdb"},{"original_method":"/**\n     * JUnit special method called to setup the test. This instance will start\n     * the VoltDB server using the VoltServerConfig instance provided.\n     */\n    @Override\n    public void setUp() throws Exception {\n        rport = SecureRandom.getInstance(\"SHA1PRNG\").nextInt(2000) + 22000;\n        System.out.println(\"Random HTTP port is: \" + rport);\n        ncprocess = new NCProcess(rport);\n        try {\n\n            // build up a project builder for the workload\n            VoltProjectBuilder project = getBuilderForTest();\n            boolean success;\n            LocalCluster config = new LocalCluster(\"decimal-default.jar\", 2, 1, 0, BackendTarget.NATIVE_EE_JNI);\n            project.setHTTPDPort(rport);\n\n            success = config.compile(project);\n            config.setHasLocalServer(false);\n            assertTrue(success);\n            config.setExpectedToCrash(true);\n\n            config.startUp();\n            pf = config.m_pipes.get(0);\n            Process p = config.m_cluster.get(0);\n            Thread.currentThread().sleep(10000);\n            p.destroy();\n        } catch (IOException ex) {\n            fail(ex.getMessage());\n        } finally {\n        }\n    }","id":13360,"modified_method":"/**\n     * JUnit special method called to setup the test. This instance will start\n     * the VoltDB server using the VoltServerConfig instance provided.\n     */\n    @Override\n    public void setUp() throws Exception {\n        rport = SecureRandom.getInstance(\"SHA1PRNG\").nextInt(2000) + 22000;\n        System.out.println(\"Random HTTP port is: \" + rport);\n        ncprocess = new NCProcess(rport);\n        try {\n            //Build the catalog\n            VoltProjectBuilder builder = new VoltProjectBuilder();\n            builder.addLiteralSchema(\"\");\n            String catalogJar = \"dummy.jar\";\n            builder.setHTTPDPort(rport);\n\n            LocalCluster config = new LocalCluster(catalogJar, 2, 1, 0, BackendTarget.NATIVE_EE_JNI);\n\n            config.portGenerator.enablePortProvider();\n            config.portGenerator.pprovider.setAdmin(rport);\n            config.setHasLocalServer(false);\n            //We expect it to crash\n            config.setExpectedToCrash(true);\n\n            boolean success = config.compile(builder);\n            assertTrue(success);\n\n            config.startUp();\n            pf = config.m_pipes.get(0);\n            Thread.currentThread().sleep(10000);\n        } catch (IOException ex) {\n            fail(ex.getMessage());\n        } finally {\n        }\n    }","commit_id":"457f4d349f582a4b6f594ac3f4099e6df11f2a9b","url":"https://github.com/VoltDB/voltdb"},{"original_method":"/**\n     * JUnit special method called to setup the test. This instance will start\n     * the VoltDB server using the VoltServerConfig instance provided.\n     */\n    @Override\n    public void setUp() throws Exception {\n        rport = SecureRandom.getInstance(\"SHA1PRNG\").nextInt(2000) + 22000;\n        System.out.println(\"Random ZooKeeper port is: \" + rport);\n        ncprocess = new NCProcess(rport, true);\n        try {\n\n            // build up a project builder for the workload\n            VoltProjectBuilder project = getBuilderForTest();\n            boolean success;\n            LocalCluster config = new LocalCluster(\"decimal-default.jar\", 2, 1, 0, BackendTarget.NATIVE_EE_JNI);\n            config.portGenerator.enablePortProvider();\n            config.portGenerator.pprovider.setZkPort(rport);\n\n            success = config.compile(project);\n            config.setHasLocalServer(false);\n            assertTrue(success);\n            config.setExpectedToCrash(true);\n\n            config.startUp();\n            pf = config.m_pipes.get(0);\n            Process p = config.m_cluster.get(0);\n            Thread.currentThread().sleep(10000);\n            p.destroy();\n        } catch (IOException ex) {\n            fail(ex.getMessage());\n        } finally {\n        }\n    }","id":13361,"modified_method":"/**\n     * JUnit special method called to setup the test. This instance will start\n     * the VoltDB server using the VoltServerConfig instance provided.\n     */\n    @Override\n    public void setUp() throws Exception {\n        rport = SecureRandom.getInstance(\"SHA1PRNG\").nextInt(2000) + 22000;\n        System.out.println(\"Random ZooKeeper port is: \" + rport);\n        ncprocess = new NCProcess(rport, true);\n        try {\n            //Build the catalog\n            VoltProjectBuilder builder = new VoltProjectBuilder();\n            builder.addLiteralSchema(\"\");\n            String catalogJar = \"dummy.jar\";\n\n            LocalCluster config = new LocalCluster(catalogJar, 2, 1, 0, BackendTarget.NATIVE_EE_JNI);\n\n            config.portGenerator.enablePortProvider();\n            config.portGenerator.pprovider.setZkPort(rport);\n            config.setHasLocalServer(false);\n            //We expect it to crash\n            config.setExpectedToCrash(true);\n\n            boolean success = config.compile(builder);\n            assertTrue(success);\n\n            config.startUp();\n            pf = config.m_pipes.get(0);\n            Thread.currentThread().sleep(10000);\n        } catch (IOException ex) {\n            fail(ex.getMessage());\n        } finally {\n        }\n    }","commit_id":"457f4d349f582a4b6f594ac3f4099e6df11f2a9b","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public boolean visit(final NormalAnnotation node) {\n    this.appendToBuffer(\"@\");\n    Name _typeName = node.getTypeName();\n    _typeName.accept(this);\n    this.appendToBuffer(\"(\");\n    for (Iterator<MemberValuePair> it = node.values().iterator(); it.hasNext();) {\n      {\n        MemberValuePair p = it.next();\n        p.accept(this);\n        boolean _hasNext = it.hasNext();\n        if (_hasNext) {\n          this.appendToBuffer(\",\");\n        }\n      }\n    }\n    this.appendToBuffer(\")\");\n    return false;\n  }","id":13362,"modified_method":"public boolean visit(final NormalAnnotation node) {\n    this.appendToBuffer(\"@\");\n    Name _typeName = node.getTypeName();\n    _typeName.accept(this);\n    this.appendToBuffer(\"(\");\n    List _values = node.values();\n    this.appendAllSeparatedByComma(_values);\n    this.appendToBuffer(\")\");\n    return false;\n  }","commit_id":"f7f022d412a4f0c20d042e707b0926c4f1c7c862","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n  public boolean visit(final SuperMethodInvocation node) {\n    Name _qualifier = node.getQualifier();\n    boolean _notEquals = (!Objects.equal(_qualifier, null));\n    if (_notEquals) {\n      Name _qualifier_1 = node.getQualifier();\n      _qualifier_1.accept(this);\n      this.fBuffer.append(\".\");\n    }\n    this.fBuffer.append(\"super.\");\n    List _typeArguments = node.typeArguments();\n    boolean _isEmpty = _typeArguments.isEmpty();\n    boolean _not = (!_isEmpty);\n    if (_not) {\n      this.fBuffer.append(\"<\");\n      for (Iterator<Type> it = node.typeArguments().iterator(); it.hasNext();) {\n        {\n          Type t = it.next();\n          t.accept(this);\n          boolean _hasNext = it.hasNext();\n          if (_hasNext) {\n            this.fBuffer.append(\",\");\n          }\n        }\n      }\n      this.fBuffer.append(\">\");\n    }\n    SimpleName _name = node.getName();\n    _name.accept(this);\n    this.fBuffer.append(\"(\");\n    for (Iterator<Expression> it = node.arguments().iterator(); it.hasNext();) {\n      {\n        Expression e = it.next();\n        e.accept(this);\n        boolean _hasNext = it.hasNext();\n        if (_hasNext) {\n          this.fBuffer.append(\",\");\n        }\n      }\n    }\n    this.fBuffer.append(\")\");\n    return false;\n  }","id":13363,"modified_method":"@Override\n  public boolean visit(final SuperMethodInvocation node) {\n    Name _qualifier = node.getQualifier();\n    boolean _notEquals = (!Objects.equal(_qualifier, null));\n    if (_notEquals) {\n      Name _qualifier_1 = node.getQualifier();\n      _qualifier_1.accept(this);\n      this.fBuffer.append(\".\");\n    }\n    this.fBuffer.append(\"super.\");\n    List _typeArguments = node.typeArguments();\n    boolean _isEmpty = _typeArguments.isEmpty();\n    boolean _not = (!_isEmpty);\n    if (_not) {\n      List _typeArguments_1 = node.typeArguments();\n      this.appendTypeParameters(_typeArguments_1);\n    }\n    SimpleName _name = node.getName();\n    _name.accept(this);\n    this.fBuffer.append(\"(\");\n    List _arguments = node.arguments();\n    this.appendAllSeparatedByComma(_arguments);\n    this.fBuffer.append(\")\");\n    return false;\n  }","commit_id":"f7f022d412a4f0c20d042e707b0926c4f1c7c862","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n  public boolean visit(final SuperConstructorInvocation node) {\n    Expression _expression = node.getExpression();\n    boolean _notEquals = (!Objects.equal(_expression, null));\n    if (_notEquals) {\n      Expression _expression_1 = node.getExpression();\n      _expression_1.accept(this);\n      this.fBuffer.append(\".\");\n    }\n    List _typeArguments = node.typeArguments();\n    boolean _isEmpty = _typeArguments.isEmpty();\n    boolean _not = (!_isEmpty);\n    if (_not) {\n      this.fBuffer.append(\"<\");\n      for (Iterator<Type> it = node.typeArguments().iterator(); it.hasNext();) {\n        {\n          Type t = it.next();\n          t.accept(this);\n          boolean _hasNext = it.hasNext();\n          if (_hasNext) {\n            this.fBuffer.append(\",\");\n          }\n        }\n      }\n      this.fBuffer.append(\">\");\n    }\n    this.fBuffer.append(\"super(\");\n    for (Iterator<Expression> it = node.arguments().iterator(); it.hasNext();) {\n      {\n        Expression e = it.next();\n        e.accept(this);\n        boolean _hasNext = it.hasNext();\n        if (_hasNext) {\n          this.fBuffer.append(\",\");\n        }\n      }\n    }\n    this.fBuffer.append(\");\");\n    return false;\n  }","id":13364,"modified_method":"@Override\n  public boolean visit(final SuperConstructorInvocation node) {\n    Expression _expression = node.getExpression();\n    boolean _notEquals = (!Objects.equal(_expression, null));\n    if (_notEquals) {\n      Expression _expression_1 = node.getExpression();\n      _expression_1.accept(this);\n      this.fBuffer.append(\".\");\n    }\n    List _typeArguments = node.typeArguments();\n    boolean _isEmpty = _typeArguments.isEmpty();\n    boolean _not = (!_isEmpty);\n    if (_not) {\n      List _typeArguments_1 = node.typeArguments();\n      this.appendTypeParameters(_typeArguments_1);\n    }\n    this.fBuffer.append(\"super(\");\n    List _arguments = node.arguments();\n    this.appendAllSeparatedByComma(_arguments);\n    this.fBuffer.append(\")\");\n    return false;\n  }","commit_id":"f7f022d412a4f0c20d042e707b0926c4f1c7c862","url":"https://github.com/eclipse/xtext"},{"original_method":"public boolean visit(final VariableDeclarationStatement it) {\n    List _modifiers = it.modifiers();\n    Iterable<Annotation> _filter = Iterables.<Annotation>filter(_modifiers, Annotation.class);\n    boolean _isEmpty = IterableExtensions.isEmpty(_filter);\n    final boolean hasAnnotations = (!_isEmpty);\n    if (hasAnnotations) {\n      this.appendToBuffer(\"/*FIXME can not add Annotation to Variable declaration. Java code: \");\n    }\n    List _modifiers_1 = it.modifiers();\n    final Function1<ASTNode, StringBuffer> _function = new Function1<ASTNode, StringBuffer>() {\n      public StringBuffer apply(final ASTNode it) {\n        StringBuffer _xblockexpression = null;\n        {\n          if (hasAnnotations) {\n            JavaASTFlattener.this.appendToBuffer(\"*/\");\n          }\n          _xblockexpression = JavaASTFlattener.this.appendLineWrapToBuffer();\n        }\n        return _xblockexpression;\n      }\n    };\n    this.appendModifieres(it, _modifiers_1, _function);\n    List _modifiers_2 = it.modifiers();\n    this.handleVariableDeclaration(_modifiers_2);\n    Type _type = it.getType();\n    _type.accept(this);\n    this.appendToBuffer(\" \");\n    List _fragments = it.fragments();\n    this.appendAllSeparatedByComma(_fragments);\n    this.appendLineWrapToBuffer();\n    return false;\n  }","id":13365,"modified_method":"public boolean visit(final VariableDeclarationStatement it) {\n    List _modifiers = it.modifiers();\n    Iterable<Annotation> _filter = Iterables.<Annotation>filter(_modifiers, Annotation.class);\n    boolean _isEmpty = IterableExtensions.isEmpty(_filter);\n    final boolean hasAnnotations = (!_isEmpty);\n    if (hasAnnotations) {\n      this.appendToBuffer(\"/*FIXME can not add Annotation to Variable declaration. Java code: \");\n    }\n    List _modifiers_1 = it.modifiers();\n    final Function1<ASTNode, StringBuffer> _function = new Function1<ASTNode, StringBuffer>() {\n      public StringBuffer apply(final ASTNode it) {\n        StringBuffer _xblockexpression = null;\n        {\n          if (hasAnnotations) {\n            JavaASTFlattener.this.appendToBuffer(\"*/\");\n          }\n          _xblockexpression = JavaASTFlattener.this.appendLineWrapToBuffer();\n        }\n        return _xblockexpression;\n      }\n    };\n    this.appendModifieres(it, _modifiers_1, _function);\n    List _modifiers_2 = it.modifiers();\n    String _handleVariableDeclaration = this._aSTFlattenerUtils.handleVariableDeclaration(_modifiers_2);\n    this.appendToBuffer(_handleVariableDeclaration);\n    this.appendSpaceToBuffer();\n    Type _type = it.getType();\n    _type.accept(this);\n    this.appendToBuffer(\" \");\n    List _fragments = it.fragments();\n    this.appendAllSeparatedByComma(_fragments);\n    this.appendLineWrapToBuffer();\n    return false;\n  }","commit_id":"f7f022d412a4f0c20d042e707b0926c4f1c7c862","url":"https://github.com/eclipse/xtext"},{"original_method":"public boolean visit(final VariableDeclarationExpression it) {\n    List _modifiers = it.modifiers();\n    this.appendModifieres(it, _modifiers);\n    List _modifiers_1 = it.modifiers();\n    this.handleVariableDeclaration(_modifiers_1);\n    Type _type = it.getType();\n    _type.accept(this);\n    this.appendToBuffer(\" \");\n    List _fragments = it.fragments();\n    this.appendAllSeparatedByComma(_fragments);\n    return false;\n  }","id":13366,"modified_method":"public boolean visit(final VariableDeclarationExpression it) {\n    List _modifiers = it.modifiers();\n    this.appendModifieres(it, _modifiers);\n    List _modifiers_1 = it.modifiers();\n    String _handleVariableDeclaration = this._aSTFlattenerUtils.handleVariableDeclaration(_modifiers_1);\n    this.appendToBuffer(_handleVariableDeclaration);\n    this.appendSpaceToBuffer();\n    Type _type = it.getType();\n    _type.accept(this);\n    this.appendToBuffer(\" \");\n    List _fragments = it.fragments();\n    this.appendAllSeparatedByComma(_fragments);\n    return false;\n  }","commit_id":"f7f022d412a4f0c20d042e707b0926c4f1c7c862","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n  public boolean visit(final ConstructorInvocation node) {\n    List _typeArguments = node.typeArguments();\n    boolean _isEmpty = _typeArguments.isEmpty();\n    boolean _not = (!_isEmpty);\n    if (_not) {\n      this.fBuffer.append(\"<\");\n      List _typeArguments_1 = node.typeArguments();\n      this.appendTypeParameters(_typeArguments_1);\n      this.fBuffer.append(\">\");\n    }\n    this.fBuffer.append(\"this(\");\n    List _arguments = node.arguments();\n    this.appendAllSeparatedByComma(_arguments);\n    this.fBuffer.append(\")\");\n    return false;\n  }","id":13367,"modified_method":"@Override\n  public boolean visit(final ConstructorInvocation node) {\n    List _typeArguments = node.typeArguments();\n    boolean _isEmpty = _typeArguments.isEmpty();\n    boolean _not = (!_isEmpty);\n    if (_not) {\n      List _typeArguments_1 = node.typeArguments();\n      this.appendTypeParameters(_typeArguments_1);\n    }\n    this.fBuffer.append(\"this(\");\n    List _arguments = node.arguments();\n    this.appendAllSeparatedByComma(_arguments);\n    this.fBuffer.append(\")\");\n    return false;\n  }","commit_id":"f7f022d412a4f0c20d042e707b0926c4f1c7c862","url":"https://github.com/eclipse/xtext"},{"original_method":"public boolean visit(final MethodDeclaration it) {\n    Javadoc _javadoc = it.getJavadoc();\n    boolean _notEquals = (!Objects.equal(_javadoc, null));\n    if (_notEquals) {\n      Javadoc _javadoc_1 = it.getJavadoc();\n      _javadoc_1.accept(this);\n    }\n    final Function1<ASTNode, StringBuffer> _function = new Function1<ASTNode, StringBuffer>() {\n      public StringBuffer apply(final ASTNode node) {\n        StringBuffer _xifexpression = null;\n        if ((node instanceof MethodDeclaration)) {\n          StringBuffer _xifexpression_1 = null;\n          boolean _isOverrideMethode = JavaASTFlattener.this.isOverrideMethode(((MethodDeclaration)node));\n          if (_isOverrideMethode) {\n            _xifexpression_1 = JavaASTFlattener.this.appendToBuffer(\"override \");\n          } else {\n            _xifexpression_1 = JavaASTFlattener.this.appendToBuffer(\"def \");\n          }\n          _xifexpression = _xifexpression_1;\n        }\n        return _xifexpression;\n      }\n    };\n    final Function1<ASTNode, StringBuffer> afterAnnotationProcessingCallback = _function;\n    List _modifiers = it.modifiers();\n    this.appendModifieres(it, _modifiers, afterAnnotationProcessingCallback);\n    List _modifiers_1 = it.modifiers();\n    Iterable<Modifier> _filter = Iterables.<Modifier>filter(_modifiers_1, Modifier.class);\n    boolean _isPackageVisibility = this.isPackageVisibility(_filter);\n    if (_isPackageVisibility) {\n      ASTNode _parent = it.getParent();\n      if ((_parent instanceof TypeDeclaration)) {\n        ASTNode _parent_1 = it.getParent();\n        boolean _isInterface = ((TypeDeclaration) _parent_1).isInterface();\n        boolean _not = (!_isInterface);\n        if (_not) {\n          this.appendToBuffer(\"package \");\n        }\n      }\n    }\n    List _typeParameters = it.typeParameters();\n    boolean _isEmpty = _typeParameters.isEmpty();\n    boolean _not_1 = (!_isEmpty);\n    if (_not_1) {\n      List _typeParameters_1 = it.typeParameters();\n      this.appendTypeParameters(_typeParameters_1);\n    }\n    boolean _isConstructor = it.isConstructor();\n    boolean _not_2 = (!_isConstructor);\n    if (_not_2) {\n      Type _returnType2 = it.getReturnType2();\n      boolean _notEquals_1 = (!Objects.equal(_returnType2, null));\n      if (_notEquals_1) {\n        Type _returnType2_1 = it.getReturnType2();\n        _returnType2_1.accept(this);\n      } else {\n        this.appendToBuffer(\"void\");\n      }\n      this.appendToBuffer(\" \");\n    }\n    SimpleName _name = it.getName();\n    _name.accept(this);\n    this.appendToBuffer(\"(\");\n    List _parameters = it.parameters();\n    this.appendAllSeparatedByComma(_parameters);\n    this.appendToBuffer(\")\");\n    int _extraDimensions = it.getExtraDimensions();\n    this.appendExtraDimensions(_extraDimensions);\n    List _thrownExceptions = it.thrownExceptions();\n    boolean _isEmpty_1 = _thrownExceptions.isEmpty();\n    boolean _not_3 = (!_isEmpty_1);\n    if (_not_3) {\n      this.appendToBuffer(\" throws \");\n      List _thrownExceptions_1 = it.thrownExceptions();\n      this.appendAllSeparatedByComma(_thrownExceptions_1);\n      this.appendToBuffer(\" \");\n    }\n    Block _body = it.getBody();\n    boolean _equals = Objects.equal(_body, null);\n    if (_equals) {\n      this.appendToBuffer(\";\");\n    } else {\n      Block _body_1 = it.getBody();\n      _body_1.accept(this);\n    }\n    return false;\n  }","id":13368,"modified_method":"public boolean visit(final MethodDeclaration it) {\n    Javadoc _javadoc = it.getJavadoc();\n    boolean _notEquals = (!Objects.equal(_javadoc, null));\n    if (_notEquals) {\n      Javadoc _javadoc_1 = it.getJavadoc();\n      _javadoc_1.accept(this);\n    }\n    final Function1<ASTNode, StringBuffer> _function = new Function1<ASTNode, StringBuffer>() {\n      public StringBuffer apply(final ASTNode node) {\n        StringBuffer _xifexpression = null;\n        if ((node instanceof MethodDeclaration)) {\n          StringBuffer _xifexpression_1 = null;\n          boolean _isOverrideMethode = JavaASTFlattener.this._aSTFlattenerUtils.isOverrideMethode(((MethodDeclaration)node));\n          if (_isOverrideMethode) {\n            _xifexpression_1 = JavaASTFlattener.this.appendToBuffer(\"override \");\n          } else {\n            _xifexpression_1 = JavaASTFlattener.this.appendToBuffer(\"def \");\n          }\n          _xifexpression = _xifexpression_1;\n        }\n        return _xifexpression;\n      }\n    };\n    final Function1<ASTNode, StringBuffer> afterAnnotationProcessingCallback = _function;\n    List _modifiers = it.modifiers();\n    this.appendModifieres(it, _modifiers, afterAnnotationProcessingCallback);\n    List _modifiers_1 = it.modifiers();\n    Iterable<Modifier> _filter = Iterables.<Modifier>filter(_modifiers_1, Modifier.class);\n    boolean _isPackageVisibility = this.isPackageVisibility(_filter);\n    if (_isPackageVisibility) {\n      ASTNode _parent = it.getParent();\n      if ((_parent instanceof TypeDeclaration)) {\n        ASTNode _parent_1 = it.getParent();\n        boolean _isInterface = ((TypeDeclaration) _parent_1).isInterface();\n        boolean _not = (!_isInterface);\n        if (_not) {\n          this.appendToBuffer(\"package \");\n        }\n      }\n    }\n    List _typeParameters = it.typeParameters();\n    boolean _isEmpty = _typeParameters.isEmpty();\n    boolean _not_1 = (!_isEmpty);\n    if (_not_1) {\n      List _typeParameters_1 = it.typeParameters();\n      this.appendTypeParameters(_typeParameters_1);\n    }\n    boolean _isConstructor = it.isConstructor();\n    boolean _not_2 = (!_isConstructor);\n    if (_not_2) {\n      Type _returnType2 = it.getReturnType2();\n      boolean _notEquals_1 = (!Objects.equal(_returnType2, null));\n      if (_notEquals_1) {\n        Type _returnType2_1 = it.getReturnType2();\n        _returnType2_1.accept(this);\n      } else {\n        this.appendToBuffer(\"void\");\n      }\n      this.appendToBuffer(\" \");\n    }\n    SimpleName _name = it.getName();\n    _name.accept(this);\n    this.appendToBuffer(\"(\");\n    List _parameters = it.parameters();\n    this.appendAllSeparatedByComma(_parameters);\n    this.appendToBuffer(\")\");\n    int _extraDimensions = it.getExtraDimensions();\n    this.appendExtraDimensions(_extraDimensions);\n    List _thrownExceptions = it.thrownExceptions();\n    boolean _isEmpty_1 = _thrownExceptions.isEmpty();\n    boolean _not_3 = (!_isEmpty_1);\n    if (_not_3) {\n      this.appendToBuffer(\" throws \");\n      List _thrownExceptions_1 = it.thrownExceptions();\n      this.appendAllSeparatedByComma(_thrownExceptions_1);\n      this.appendToBuffer(\" \");\n    }\n    Block _body = it.getBody();\n    boolean _equals = Objects.equal(_body, null);\n    if (_equals) {\n      this.appendToBuffer(\";\");\n    } else {\n      Block _body_1 = it.getBody();\n      _body_1.accept(this);\n    }\n    return false;\n  }","commit_id":"f7f022d412a4f0c20d042e707b0926c4f1c7c862","url":"https://github.com/eclipse/xtext"},{"original_method":"public boolean visit(final InfixExpression node) {\n    Expression _leftOperand = node.getLeftOperand();\n    _leftOperand.accept(this);\n    this.appendToBuffer(\" \");\n    InfixExpression.Operator _operator = node.getOperator();\n    String _string = _operator.toString();\n    this.appendToBuffer(_string);\n    this.appendToBuffer(\" \");\n    Expression _rightOperand = node.getRightOperand();\n    _rightOperand.accept(this);\n    final List extendedOperands = node.extendedOperands();\n    int _size = extendedOperands.size();\n    boolean _notEquals = (_size != 0);\n    if (_notEquals) {\n      this.appendToBuffer(\" \");\n      for (Iterator<Expression> it = extendedOperands.iterator(); it.hasNext();) {\n        {\n          InfixExpression.Operator _operator_1 = node.getOperator();\n          String _string_1 = _operator_1.toString();\n          StringBuffer _appendToBuffer = this.appendToBuffer(_string_1);\n          _appendToBuffer.append(\" \");\n          Expression e = it.next();\n          e.accept(this);\n        }\n      }\n    }\n    return false;\n  }","id":13369,"modified_method":"public boolean visit(final InfixExpression node) {\n    Expression _leftOperand = node.getLeftOperand();\n    _leftOperand.accept(this);\n    this.appendToBuffer(\" \");\n    InfixExpression.Operator _operator = node.getOperator();\n    String _string = _operator.toString();\n    this.appendToBuffer(_string);\n    this.appendToBuffer(\" \");\n    Expression _rightOperand = node.getRightOperand();\n    _rightOperand.accept(this);\n    final List extendedOperands = node.extendedOperands();\n    int _size = extendedOperands.size();\n    boolean _notEquals = (_size != 0);\n    if (_notEquals) {\n      this.appendToBuffer(\" \");\n      final Procedure1<Expression> _function = new Procedure1<Expression>() {\n        public void apply(final Expression e) {\n          InfixExpression.Operator _operator = node.getOperator();\n          String _string = _operator.toString();\n          StringBuffer _appendToBuffer = JavaASTFlattener.this.appendToBuffer(_string);\n          _appendToBuffer.append(\" \");\n          e.accept(JavaASTFlattener.this);\n        }\n      };\n      IterableExtensions.<Expression>forEach(extendedOperands, _function);\n    }\n    return false;\n  }","commit_id":"f7f022d412a4f0c20d042e707b0926c4f1c7c862","url":"https://github.com/eclipse/xtext"},{"original_method":"public boolean visit(final SimpleName it) {\n    String _identifier = it.getIdentifier();\n    String convertedName = this.converterService.toString(_identifier, \"ID\");\n    boolean _equals = \"it\".equals(convertedName);\n    if (_equals) {\n      this.appendToBuffer(\"^\");\n    }\n    this.appendToBuffer(convertedName);\n    return false;\n  }","id":13370,"modified_method":"public boolean visit(final SimpleName it) {\n    String _identifier = it.getIdentifier();\n    String convertedName = this.converterService.toString(_identifier, \"ID\");\n    this.appendToBuffer(convertedName);\n    return false;\n  }","commit_id":"f7f022d412a4f0c20d042e707b0926c4f1c7c862","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n  public boolean visit(final ArrayCreation node) {\n    this.fBuffer.append(\"new \");\n    ArrayType at = node.getType();\n    int dims = at.getDimensions();\n    Type elementType = at.getElementType();\n    elementType.accept(this);\n    for (Iterator<Expression> it = node.dimensions().iterator(); it.hasNext();) {\n      {\n        this.fBuffer.append(\"[\");\n        Expression e = it.next();\n        e.accept(this);\n        this.fBuffer.append(\"]\");\n        dims--;\n      }\n    }\n    for (int i = 0; (i < dims); i++) {\n      this.fBuffer.append(\"[]\");\n    }\n    ArrayInitializer _initializer = node.getInitializer();\n    boolean _notEquals = (!Objects.equal(_initializer, null));\n    if (_notEquals) {\n      ArrayInitializer _initializer_1 = node.getInitializer();\n      _initializer_1.accept(this);\n    }\n    return false;\n  }","id":13371,"modified_method":"@Override\n  public boolean visit(final ArrayCreation node) {\n    this.fBuffer.append(\"new \");\n    ArrayType at = node.getType();\n    int dims = at.getDimensions();\n    Type elementType = at.getElementType();\n    elementType.accept(this);\n    List _dimensions = node.dimensions();\n    for (final Expression e : ((Iterable<Expression>) _dimensions)) {\n      {\n        this.fBuffer.append(\"[\");\n        e.accept(this);\n        this.fBuffer.append(\"]\");\n        dims--;\n      }\n    }\n    for (int i = 0; (i < dims); i++) {\n      this.fBuffer.append(\"[]\");\n    }\n    ArrayInitializer _initializer = node.getInitializer();\n    boolean _notEquals = (!Objects.equal(_initializer, null));\n    if (_notEquals) {\n      ArrayInitializer _initializer_1 = node.getInitializer();\n      _initializer_1.accept(this);\n    }\n    return false;\n  }","commit_id":"f7f022d412a4f0c20d042e707b0926c4f1c7c862","url":"https://github.com/eclipse/xtext"},{"original_method":"public boolean visit(final ClassInstanceCreation node) {\n    Expression _expression = node.getExpression();\n    boolean _notEquals = (!Objects.equal(_expression, null));\n    if (_notEquals) {\n      Expression _expression_1 = node.getExpression();\n      _expression_1.accept(this);\n      this.appendToBuffer(\".\");\n    }\n    this.appendToBuffer(\"new \");\n    List _typeArguments = node.typeArguments();\n    boolean _isEmpty = _typeArguments.isEmpty();\n    boolean _not = (!_isEmpty);\n    if (_not) {\n      this.appendToBuffer(\"<\");\n      for (Iterator<Type> it = node.typeArguments().iterator(); it.hasNext();) {\n        {\n          Type t = it.next();\n          t.accept(this);\n          boolean _hasNext = it.hasNext();\n          if (_hasNext) {\n            this.appendToBuffer(\",\");\n          }\n        }\n      }\n      this.appendToBuffer(\">\");\n    }\n    Type _type = node.getType();\n    _type.accept(this);\n    this.appendToBuffer(\"(\");\n    for (Iterator<Expression> it = node.arguments().iterator(); it.hasNext();) {\n      {\n        Expression e = it.next();\n        e.accept(this);\n        boolean _hasNext = it.hasNext();\n        if (_hasNext) {\n          this.appendToBuffer(\",\");\n        }\n      }\n    }\n    this.appendToBuffer(\")\");\n    AnonymousClassDeclaration _anonymousClassDeclaration = node.getAnonymousClassDeclaration();\n    boolean _notEquals_1 = (!Objects.equal(_anonymousClassDeclaration, null));\n    if (_notEquals_1) {\n      AnonymousClassDeclaration _anonymousClassDeclaration_1 = node.getAnonymousClassDeclaration();\n      _anonymousClassDeclaration_1.accept(this);\n    }\n    return false;\n  }","id":13372,"modified_method":"public boolean visit(final ClassInstanceCreation node) {\n    Expression _expression = node.getExpression();\n    boolean _notEquals = (!Objects.equal(_expression, null));\n    if (_notEquals) {\n      Expression _expression_1 = node.getExpression();\n      _expression_1.accept(this);\n      this.appendToBuffer(\".\");\n    }\n    this.appendToBuffer(\"new \");\n    List _typeArguments = node.typeArguments();\n    boolean _isEmpty = _typeArguments.isEmpty();\n    boolean _not = (!_isEmpty);\n    if (_not) {\n      List _typeArguments_1 = node.typeArguments();\n      this.appendTypeParameters(_typeArguments_1);\n    }\n    Type _type = node.getType();\n    _type.accept(this);\n    this.appendToBuffer(\"(\");\n    for (Iterator<Expression> it = node.arguments().iterator(); it.hasNext();) {\n      {\n        Expression e = it.next();\n        e.accept(this);\n        boolean _hasNext = it.hasNext();\n        if (_hasNext) {\n          this.appendToBuffer(\",\");\n        }\n      }\n    }\n    this.appendToBuffer(\")\");\n    AnonymousClassDeclaration _anonymousClassDeclaration = node.getAnonymousClassDeclaration();\n    boolean _notEquals_1 = (!Objects.equal(_anonymousClassDeclaration, null));\n    if (_notEquals_1) {\n      AnonymousClassDeclaration _anonymousClassDeclaration_1 = node.getAnonymousClassDeclaration();\n      _anonymousClassDeclaration_1.accept(this);\n    }\n    return false;\n  }","commit_id":"f7f022d412a4f0c20d042e707b0926c4f1c7c862","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n  public void put(final XtextDocument.ReadAccess documentAccess, final IEncodingProvider encodingProvider) throws IOException {\n    try {\n      try {\n        XtextDocument _document = documentAccess.getDocument();\n        String _resourceId = _document.getResourceId();\n        final URI uri = this.resourceBaseProvider.getFileURI(_resourceId);\n        XtextResource _resource = documentAccess.getResource();\n        ResourceSet _resourceSet = _resource.getResourceSet();\n        URIConverter _uRIConverter = _resourceSet.getURIConverter();\n        final OutputStream outputStream = _uRIConverter.createOutputStream(uri);\n        String _encoding = encodingProvider.getEncoding(uri);\n        final OutputStreamWriter writer = new OutputStreamWriter(outputStream, _encoding);\n        String _text = documentAccess.getText();\n        writer.write(_text);\n        writer.close();\n      } catch (final Throwable _t) {\n        if (_t instanceof WrappedException) {\n          final WrappedException exception = (WrappedException)_t;\n          throw exception.getCause();\n        } else {\n          throw Exceptions.sneakyThrow(_t);\n        }\n      }\n    } catch (Throwable _e) {\n      throw Exceptions.sneakyThrow(_e);\n    }\n  }","id":13373,"modified_method":"@Override\n  public void put(final XtextDocument.ReadAccess documentAccess) throws IOException {\n    try {\n      try {\n        XtextDocument _document = documentAccess.getDocument();\n        String _resourceId = _document.getResourceId();\n        final URI uri = this.resourceBaseProvider.getFileURI(_resourceId);\n        XtextResource _resource = documentAccess.getResource();\n        ResourceSet _resourceSet = _resource.getResourceSet();\n        URIConverter _uRIConverter = _resourceSet.getURIConverter();\n        final OutputStream outputStream = _uRIConverter.createOutputStream(uri);\n        String _encoding = this.encodingProvider.getEncoding(uri);\n        final OutputStreamWriter writer = new OutputStreamWriter(outputStream, _encoding);\n        String _text = documentAccess.getText();\n        writer.write(_text);\n        writer.close();\n      } catch (final Throwable _t) {\n        if (_t instanceof WrappedException) {\n          final WrappedException exception = (WrappedException)_t;\n          throw exception.getCause();\n        } else {\n          throw Exceptions.sneakyThrow(_t);\n        }\n      }\n    } catch (Throwable _e) {\n      throw Exceptions.sneakyThrow(_e);\n    }\n  }","commit_id":"25f2bd40c7f33e830b74c0655ba56b9c39d16a0e","url":"https://github.com/eclipse/xtext"},{"original_method":"public ResourceContent revert(final String resourceId, final String newStateId, final IServerResourceHandler resourceHandler, final ISessionStore sessionStore) throws InvalidRequestException {\n    ResourceContent _xblockexpression = null;\n    {\n      final XtextResourceSet resourceSet = this.resourceSetProvider.get();\n      ResourceContent _xtrycatchfinallyexpression = null;\n      try {\n        ResourceContent _xblockexpression_1 = null;\n        {\n          final XtextDocument document = resourceHandler.get(resourceId, resourceSet);\n          final IUnitOfWork<ResourceContent, XtextDocument.ModifyAccess> _function = new IUnitOfWork<ResourceContent, XtextDocument.ModifyAccess>() {\n            @Override\n            public ResourceContent exec(final XtextDocument.ModifyAccess access) throws Exception {\n              Pair<Class<XtextDocument>, String> _mappedTo = Pair.<Class<XtextDocument>, String>of(XtextDocument.class, resourceId);\n              sessionStore.put(_mappedTo, document);\n              access.setStateId(newStateId);\n              access.setDirty(false);\n              String _text = access.getText();\n              final ResourceContent result = new ResourceContent(_text);\n              result.setStateId(newStateId);\n              return result;\n            }\n          };\n          _xblockexpression_1 = document.<ResourceContent>modify(_function);\n        }\n        _xtrycatchfinallyexpression = _xblockexpression_1;\n      } catch (final Throwable _t) {\n        if (_t instanceof IOException) {\n          final IOException ioe = (IOException)_t;\n          throw new InvalidRequestException(404, \"The requested resource was not found.\");\n        } else {\n          throw Exceptions.sneakyThrow(_t);\n        }\n      }\n      _xblockexpression = _xtrycatchfinallyexpression;\n    }\n    return _xblockexpression;\n  }","id":13374,"modified_method":"public ResourceContent revert(final String resourceId, final String newStateId, final IServerResourceHandler resourceHandler, final ISessionStore sessionStore) throws InvalidRequestException {\n    ResourceContent _xtrycatchfinallyexpression = null;\n    try {\n      ResourceContent _xblockexpression = null;\n      {\n        final XtextDocument document = resourceHandler.get(resourceId);\n        final IUnitOfWork<ResourceContent, XtextDocument.ModifyAccess> _function = new IUnitOfWork<ResourceContent, XtextDocument.ModifyAccess>() {\n          @Override\n          public ResourceContent exec(final XtextDocument.ModifyAccess access) throws Exception {\n            Pair<Class<XtextDocument>, String> _mappedTo = Pair.<Class<XtextDocument>, String>of(XtextDocument.class, resourceId);\n            sessionStore.put(_mappedTo, document);\n            access.setStateId(newStateId);\n            access.setDirty(false);\n            String _text = access.getText();\n            final ResourceContent result = new ResourceContent(_text);\n            result.setStateId(newStateId);\n            return result;\n          }\n        };\n        _xblockexpression = document.<ResourceContent>modify(_function);\n      }\n      _xtrycatchfinallyexpression = _xblockexpression;\n    } catch (final Throwable _t) {\n      if (_t instanceof IOException) {\n        final IOException ioe = (IOException)_t;\n        throw new InvalidRequestException(404, \"The requested resource was not found.\");\n      } else {\n        throw Exceptions.sneakyThrow(_t);\n      }\n    }\n    return _xtrycatchfinallyexpression;\n  }","commit_id":"25f2bd40c7f33e830b74c0655ba56b9c39d16a0e","url":"https://github.com/eclipse/xtext"},{"original_method":"public JsonObject save(final XtextDocument document, final IServerResourceHandler resourceHandler, final String requiredStateId) throws InvalidRequestException {\n    final IUnitOfWork<JsonObject, XtextDocument.ModifyAccess> _function = new IUnitOfWork<JsonObject, XtextDocument.ModifyAccess>() {\n      @Override\n      public JsonObject exec(final XtextDocument.ModifyAccess access) throws Exception {\n        access.checkStateId(requiredStateId);\n        try {\n          resourceHandler.put(access, ResourcePersistenceService.this.encodingProvider);\n          access.setDirty(false);\n        } catch (final Throwable _t) {\n          if (_t instanceof IOException) {\n            final IOException ioe = (IOException)_t;\n            String _message = ioe.getMessage();\n            throw new InvalidRequestException(404, _message);\n          } else {\n            throw Exceptions.sneakyThrow(_t);\n          }\n        }\n        return new JsonObject();\n      }\n    };\n    return document.<JsonObject>modify(_function);\n  }","id":13375,"modified_method":"public JsonObject save(final XtextDocument document, final IServerResourceHandler resourceHandler, final String requiredStateId) throws InvalidRequestException {\n    final IUnitOfWork<JsonObject, XtextDocument.ModifyAccess> _function = new IUnitOfWork<JsonObject, XtextDocument.ModifyAccess>() {\n      @Override\n      public JsonObject exec(final XtextDocument.ModifyAccess access) throws Exception {\n        access.checkStateId(requiredStateId);\n        try {\n          resourceHandler.put(access);\n          access.setDirty(false);\n        } catch (final Throwable _t) {\n          if (_t instanceof IOException) {\n            final IOException ioe = (IOException)_t;\n            String _message = ioe.getMessage();\n            throw new InvalidRequestException(404, _message);\n          } else {\n            throw Exceptions.sneakyThrow(_t);\n          }\n        }\n        return new JsonObject();\n      }\n    };\n    return document.<JsonObject>modify(_function);\n  }","commit_id":"25f2bd40c7f33e830b74c0655ba56b9c39d16a0e","url":"https://github.com/eclipse/xtext"},{"original_method":"public ResourceContent load(final String resourceId, final IServerResourceHandler resourceHandler, final ISessionStore sessionStore) throws InvalidRequestException {\n    ResourceContent _xblockexpression = null;\n    {\n      XtextDocument _xsynchronizedexpression = null;\n      synchronized (this.creationLock) {\n        Pair<Class<XtextDocument>, String> _mappedTo = Pair.<Class<XtextDocument>, String>of(XtextDocument.class, resourceId);\n        final Function0<XtextDocument> _function = new Function0<XtextDocument>() {\n          @Override\n          public XtextDocument apply() {\n            try {\n              XtextDocument _xblockexpression = null;\n              {\n                final XtextResourceSet resourceSet = ResourcePersistenceService.this.resourceSetProvider.get();\n                XtextDocument _xtrycatchfinallyexpression = null;\n                try {\n                  _xtrycatchfinallyexpression = resourceHandler.get(resourceId, resourceSet);\n                } catch (final Throwable _t) {\n                  if (_t instanceof IOException) {\n                    final IOException ioe = (IOException)_t;\n                    throw new InvalidRequestException(404, \"The requested resource was not found.\");\n                  } else {\n                    throw Exceptions.sneakyThrow(_t);\n                  }\n                }\n                _xblockexpression = _xtrycatchfinallyexpression;\n              }\n              return _xblockexpression;\n            } catch (Throwable _e) {\n              throw Exceptions.sneakyThrow(_e);\n            }\n          }\n        };\n        _xsynchronizedexpression = ISessionStore.Extensions.<XtextDocument>get(sessionStore, _mappedTo, _function);\n      }\n      final XtextDocument document = _xsynchronizedexpression;\n      final IUnitOfWork<ResourceContent, XtextDocument.ReadAccess> _function = new IUnitOfWork<ResourceContent, XtextDocument.ReadAccess>() {\n        @Override\n        public ResourceContent exec(final XtextDocument.ReadAccess access) throws Exception {\n          String _text = access.getText();\n          final ResourceContent result = new ResourceContent(_text);\n          boolean _isDirty = access.isDirty();\n          result.setDirty(_isDirty);\n          String _stateId = access.getStateId();\n          result.setStateId(_stateId);\n          return result;\n        }\n      };\n      _xblockexpression = document.<ResourceContent>readOnly(_function);\n    }\n    return _xblockexpression;\n  }","id":13376,"modified_method":"public ResourceContent load(final String resourceId, final IServerResourceHandler resourceHandler, final ISessionStore sessionStore) throws InvalidRequestException {\n    ResourceContent _xblockexpression = null;\n    {\n      Pair<Class<XtextDocument>, String> _mappedTo = Pair.<Class<XtextDocument>, String>of(XtextDocument.class, resourceId);\n      final Function0<XtextDocument> _function = new Function0<XtextDocument>() {\n        @Override\n        public XtextDocument apply() {\n          try {\n            XtextDocument _xtrycatchfinallyexpression = null;\n            try {\n              _xtrycatchfinallyexpression = resourceHandler.get(resourceId);\n            } catch (final Throwable _t) {\n              if (_t instanceof IOException) {\n                final IOException ioe = (IOException)_t;\n                throw new InvalidRequestException(404, \"The requested resource was not found.\");\n              } else {\n                throw Exceptions.sneakyThrow(_t);\n              }\n            }\n            return _xtrycatchfinallyexpression;\n          } catch (Throwable _e) {\n            throw Exceptions.sneakyThrow(_e);\n          }\n        }\n      };\n      final XtextDocument document = ISessionStore.Extensions.<XtextDocument>get(sessionStore, _mappedTo, _function);\n      final IUnitOfWork<ResourceContent, XtextDocument.ReadAccess> _function_1 = new IUnitOfWork<ResourceContent, XtextDocument.ReadAccess>() {\n        @Override\n        public ResourceContent exec(final XtextDocument.ReadAccess access) throws Exception {\n          String _text = access.getText();\n          final ResourceContent result = new ResourceContent(_text);\n          boolean _isDirty = access.isDirty();\n          result.setDirty(_isDirty);\n          String _stateId = access.getStateId();\n          result.setStateId(_stateId);\n          return result;\n        }\n      };\n      _xblockexpression = document.<ResourceContent>readOnly(_function_1);\n    }\n    return _xblockexpression;\n  }","commit_id":"25f2bd40c7f33e830b74c0655ba56b9c39d16a0e","url":"https://github.com/eclipse/xtext"},{"original_method":"protected XtextServiceDispatcher.ServiceDescriptor getValidationService(final Map<String, String> parameters, final Injector injector, final ISessionStore sessionStore) throws InvalidRequestException {\n    XtextServiceDispatcher.ServiceDescriptor _xblockexpression = null;\n    {\n      final ValidationService service = injector.<ValidationService>getInstance(ValidationService.class);\n      final XtextDocument document = this.getDocument(parameters, injector, sessionStore);\n      final String requiredStateId = parameters.get(\"requiredState\");\n      XtextServiceDispatcher.ServiceDescriptor _serviceDescriptor = new XtextServiceDispatcher.ServiceDescriptor();\n      final Procedure1<XtextServiceDispatcher.ServiceDescriptor> _function = new Procedure1<XtextServiceDispatcher.ServiceDescriptor>() {\n        @Override\n        public void apply(final XtextServiceDispatcher.ServiceDescriptor it) {\n          final Function0<JsonObject> _function = new Function0<JsonObject>() {\n            @Override\n            public JsonObject apply() {\n              try {\n                ValidationResult _validate = service.validate(document, requiredStateId);\n                return XtextServiceDispatcher.this.forRequestId(_validate, parameters);\n              } catch (Throwable _e) {\n                throw Exceptions.sneakyThrow(_e);\n              }\n            }\n          };\n          it.service = _function;\n          boolean _containsKey = parameters.containsKey(\"fullText\");\n          it.hasTextInput = _containsKey;\n        }\n      };\n      _xblockexpression = ObjectExtensions.<XtextServiceDispatcher.ServiceDescriptor>operator_doubleArrow(_serviceDescriptor, _function);\n    }\n    return _xblockexpression;\n  }","id":13377,"modified_method":"protected XtextServiceDispatcher.ServiceDescriptor getValidationService(final Map<String, String> parameters, final ISessionStore sessionStore) throws InvalidRequestException {\n    XtextServiceDispatcher.ServiceDescriptor _xblockexpression = null;\n    {\n      final XtextDocument document = this.getDocument(parameters, sessionStore);\n      final String requiredStateId = parameters.get(\"requiredState\");\n      XtextServiceDispatcher.ServiceDescriptor _serviceDescriptor = new XtextServiceDispatcher.ServiceDescriptor();\n      final Procedure1<XtextServiceDispatcher.ServiceDescriptor> _function = new Procedure1<XtextServiceDispatcher.ServiceDescriptor>() {\n        @Override\n        public void apply(final XtextServiceDispatcher.ServiceDescriptor it) {\n          final Function0<JsonObject> _function = new Function0<JsonObject>() {\n            @Override\n            public JsonObject apply() {\n              try {\n                ValidationResult _validate = XtextServiceDispatcher.this.validationService.validate(document, requiredStateId);\n                return XtextServiceDispatcher.this.forRequestId(_validate, parameters);\n              } catch (Throwable _e) {\n                throw Exceptions.sneakyThrow(_e);\n              }\n            }\n          };\n          it.service = _function;\n          boolean _containsKey = parameters.containsKey(\"fullText\");\n          it.hasTextInput = _containsKey;\n        }\n      };\n      _xblockexpression = ObjectExtensions.<XtextServiceDispatcher.ServiceDescriptor>operator_doubleArrow(_serviceDescriptor, _function);\n    }\n    return _xblockexpression;\n  }","commit_id":"25f2bd40c7f33e830b74c0655ba56b9c39d16a0e","url":"https://github.com/eclipse/xtext"},{"original_method":"protected XtextDocument getResourceDocument(final String resourceId, final Injector injector, final ISessionStore sessionStore, final Provider<XtextDocument> alternativeDocumentProvider) {\n    injector.<XtextDocument.CreationLock>getInstance(XtextDocument.CreationLock.class);\n    synchronized (injector.<XtextDocument.CreationLock>getInstance(XtextDocument.CreationLock.class)) {\n      Pair<Class<XtextDocument>, String> _mappedTo = Pair.<Class<XtextDocument>, String>of(XtextDocument.class, resourceId);\n      final Function0<XtextDocument> _function = new Function0<XtextDocument>() {\n        @Override\n        public XtextDocument apply() {\n          try {\n            final XtextResourceSet resourceSet = injector.<XtextResourceSet>getInstance(XtextResourceSet.class);\n            return XtextServiceDispatcher.this.resourceHandler.get(resourceId, resourceSet);\n          } catch (final Throwable _t) {\n            if (_t instanceof IOException) {\n              final IOException ioe = (IOException)_t;\n              return alternativeDocumentProvider.get();\n            } else {\n              throw Exceptions.sneakyThrow(_t);\n            }\n          }\n        }\n      };\n      return ISessionStore.Extensions.<XtextDocument>get(sessionStore, _mappedTo, _function);\n    }\n  }","id":13378,"modified_method":"protected XtextDocument getResourceDocument(final String resourceId, final ISessionStore sessionStore, final Provider<XtextDocument> alternativeDocumentProvider) {\n    Pair<Class<XtextDocument>, String> _mappedTo = Pair.<Class<XtextDocument>, String>of(XtextDocument.class, resourceId);\n    final Function0<XtextDocument> _function = new Function0<XtextDocument>() {\n      @Override\n      public XtextDocument apply() {\n        try {\n          return XtextServiceDispatcher.this.resourceHandler.get(resourceId);\n        } catch (final Throwable _t) {\n          if (_t instanceof IOException) {\n            final IOException ioe = (IOException)_t;\n            return alternativeDocumentProvider.get();\n          } else {\n            throw Exceptions.sneakyThrow(_t);\n          }\n        }\n      }\n    };\n    return ISessionStore.Extensions.<XtextDocument>get(sessionStore, _mappedTo, _function);\n  }","commit_id":"25f2bd40c7f33e830b74c0655ba56b9c39d16a0e","url":"https://github.com/eclipse/xtext"},{"original_method":"protected XtextDocument getFullTextDocument(final String fullText, final String resourceId, final Injector injector, final ISessionStore sessionStore) {\n    try {\n      final XtextResourceSet resourceSet = injector.<XtextResourceSet>getInstance(XtextResourceSet.class);\n      String _elvis = null;\n      if (resourceId != null) {\n        _elvis = resourceId;\n      } else {\n        FileExtensionProvider _instance = injector.<FileExtensionProvider>getInstance(FileExtensionProvider.class);\n        String _primaryFileExtension = _instance.getPrimaryFileExtension();\n        String _plus = (\"fullText.\" + _primaryFileExtension);\n        _elvis = _plus;\n      }\n      final URI uri = URI.createURI(_elvis);\n      IResourceFactory _instance_1 = injector.<IResourceFactory>getInstance(IResourceFactory.class);\n      Resource _createResource = _instance_1.createResource(uri);\n      final XtextResource resource = ((XtextResource) _createResource);\n      EList<Resource> _resources = resourceSet.getResources();\n      _resources.add(resource);\n      StringInputStream _stringInputStream = new StringInputStream(fullText);\n      resource.load(_stringInputStream, null);\n      final XtextDocument document = new XtextDocument(resource, resourceId);\n      if ((resourceId != null)) {\n        Pair<Class<XtextDocument>, String> _mappedTo = Pair.<Class<XtextDocument>, String>of(XtextDocument.class, resourceId);\n        sessionStore.put(_mappedTo, document);\n      }\n      return document;\n    } catch (Throwable _e) {\n      throw Exceptions.sneakyThrow(_e);\n    }\n  }","id":13379,"modified_method":"protected XtextDocument getFullTextDocument(final String fullText, final String resourceId, final ISessionStore sessionStore) {\n    try {\n      final XtextResourceSet resourceSet = this.resourceSetProvider.get();\n      String _elvis = null;\n      if (resourceId != null) {\n        _elvis = resourceId;\n      } else {\n        String _primaryFileExtension = this.fileExtensionProvider.getPrimaryFileExtension();\n        String _plus = (\"fullText.\" + _primaryFileExtension);\n        _elvis = _plus;\n      }\n      final URI uri = URI.createURI(_elvis);\n      Resource _createResource = this.resourceFactory.createResource(uri);\n      final XtextResource resource = ((XtextResource) _createResource);\n      EList<Resource> _resources = resourceSet.getResources();\n      _resources.add(resource);\n      StringInputStream _stringInputStream = new StringInputStream(fullText);\n      resource.load(_stringInputStream, null);\n      final XtextDocument document = new XtextDocument(resource, resourceId);\n      if ((resourceId != null)) {\n        Pair<Class<XtextDocument>, String> _mappedTo = Pair.<Class<XtextDocument>, String>of(XtextDocument.class, resourceId);\n        sessionStore.put(_mappedTo, document);\n      }\n      return document;\n    } catch (Throwable _e) {\n      throw Exceptions.sneakyThrow(_e);\n    }\n  }","commit_id":"25f2bd40c7f33e830b74c0655ba56b9c39d16a0e","url":"https://github.com/eclipse/xtext"},{"original_method":"protected XtextServiceDispatcher.ServiceDescriptor getUpdateDocumentService(final Map<String, String> parameters, final Injector injector, final ISessionStore sessionStore) throws InvalidRequestException {\n    final UpdateDocumentService service = injector.<UpdateDocumentService>getInstance(UpdateDocumentService.class);\n    final String resourceId = parameters.get(\"resource\");\n    if ((resourceId == null)) {\n      throw new InvalidRequestException(400, \"The parameter \\'resource\\' is required.\");\n    }\n    final String fullText = parameters.get(\"fullText\");\n    final Provider<XtextDocument> _function = new Provider<XtextDocument>() {\n      @Override\n      public XtextDocument get() {\n        try {\n          XtextDocument _xifexpression = null;\n          if ((fullText != null)) {\n            _xifexpression = XtextServiceDispatcher.this.getFullTextDocument(fullText, resourceId, injector, sessionStore);\n          } else {\n            throw new InvalidRequestException(404, \"The requested resource was not found.\");\n          }\n          return _xifexpression;\n        } catch (Throwable _e) {\n          throw Exceptions.sneakyThrow(_e);\n        }\n      }\n    };\n    final XtextDocument document = this.getResourceDocument(resourceId, injector, sessionStore, _function);\n    final String requiredStateId = parameters.get(\"requiredState\");\n    final String newStateId = parameters.get(\"newState\");\n    XtextServiceDispatcher.ServiceDescriptor _serviceDescriptor = new XtextServiceDispatcher.ServiceDescriptor();\n    final Procedure1<XtextServiceDispatcher.ServiceDescriptor> _function_1 = new Procedure1<XtextServiceDispatcher.ServiceDescriptor>() {\n      @Override\n      public void apply(final XtextServiceDispatcher.ServiceDescriptor it) {\n        it.hasSideEffects = true;\n        it.hasTextInput = true;\n      }\n    };\n    final XtextServiceDispatcher.ServiceDescriptor result = ObjectExtensions.<XtextServiceDispatcher.ServiceDescriptor>operator_doubleArrow(_serviceDescriptor, _function_1);\n    if ((fullText == null)) {\n      final String deltaText = parameters.get(\"deltaText\");\n      if ((deltaText == null)) {\n        throw new InvalidRequestException(400, \"At least one of the parameters \\'deltaText\\' and \\'fullText\\' must be specified.\");\n      }\n      Optional<Integer> _absent = Optional.<Integer>absent();\n      final Integer deltaOffset = this.getInt(parameters, \"deltaOffset\", _absent);\n      if (((deltaOffset).intValue() < 0)) {\n        throw new InvalidRequestException(400, \"The parameter \\'deltaOffset\\' must not be negative.\");\n      }\n      Optional<Integer> _absent_1 = Optional.<Integer>absent();\n      final Integer deltaReplaceLength = this.getInt(parameters, \"deltaReplaceLength\", _absent_1);\n      if (((deltaReplaceLength).intValue() < 0)) {\n        throw new InvalidRequestException(400, \"The parameter \\'deltaReplaceLength\\' must not be negative.\");\n      }\n      final Function0<JsonObject> _function_2 = new Function0<JsonObject>() {\n        @Override\n        public JsonObject apply() {\n          try {\n            UpdateDocumentResult _updateDeltaText = service.updateDeltaText(document, deltaText, (deltaOffset).intValue(), (deltaReplaceLength).intValue(), requiredStateId, newStateId);\n            return XtextServiceDispatcher.this.forRequestId(_updateDeltaText, parameters);\n          } catch (Throwable _e) {\n            throw Exceptions.sneakyThrow(_e);\n          }\n        }\n      };\n      result.service = _function_2;\n    } else {\n      final Function0<JsonObject> _function_3 = new Function0<JsonObject>() {\n        @Override\n        public JsonObject apply() {\n          try {\n            return service.updateFullText(document, fullText, requiredStateId, newStateId);\n          } catch (Throwable _e) {\n            throw Exceptions.sneakyThrow(_e);\n          }\n        }\n      };\n      result.service = _function_3;\n    }\n    return result;\n  }","id":13380,"modified_method":"protected XtextServiceDispatcher.ServiceDescriptor getUpdateDocumentService(final Map<String, String> parameters, final ISessionStore sessionStore) throws InvalidRequestException {\n    final String resourceId = parameters.get(\"resource\");\n    if ((resourceId == null)) {\n      throw new InvalidRequestException(400, \"The parameter \\'resource\\' is required.\");\n    }\n    final String fullText = parameters.get(\"fullText\");\n    final Provider<XtextDocument> _function = new Provider<XtextDocument>() {\n      @Override\n      public XtextDocument get() {\n        try {\n          XtextDocument _xifexpression = null;\n          if ((fullText != null)) {\n            _xifexpression = XtextServiceDispatcher.this.getFullTextDocument(fullText, resourceId, sessionStore);\n          } else {\n            throw new InvalidRequestException(404, \"The requested resource was not found.\");\n          }\n          return _xifexpression;\n        } catch (Throwable _e) {\n          throw Exceptions.sneakyThrow(_e);\n        }\n      }\n    };\n    final XtextDocument document = this.getResourceDocument(resourceId, sessionStore, _function);\n    final String requiredStateId = parameters.get(\"requiredState\");\n    final String newStateId = parameters.get(\"newState\");\n    XtextServiceDispatcher.ServiceDescriptor _serviceDescriptor = new XtextServiceDispatcher.ServiceDescriptor();\n    final Procedure1<XtextServiceDispatcher.ServiceDescriptor> _function_1 = new Procedure1<XtextServiceDispatcher.ServiceDescriptor>() {\n      @Override\n      public void apply(final XtextServiceDispatcher.ServiceDescriptor it) {\n        it.hasSideEffects = true;\n        it.hasTextInput = true;\n      }\n    };\n    final XtextServiceDispatcher.ServiceDescriptor result = ObjectExtensions.<XtextServiceDispatcher.ServiceDescriptor>operator_doubleArrow(_serviceDescriptor, _function_1);\n    if ((fullText == null)) {\n      final String deltaText = parameters.get(\"deltaText\");\n      if ((deltaText == null)) {\n        throw new InvalidRequestException(400, \"At least one of the parameters \\'deltaText\\' and \\'fullText\\' must be specified.\");\n      }\n      Optional<Integer> _absent = Optional.<Integer>absent();\n      final Integer deltaOffset = this.getInt(parameters, \"deltaOffset\", _absent);\n      if (((deltaOffset).intValue() < 0)) {\n        throw new InvalidRequestException(400, \"The parameter \\'deltaOffset\\' must not be negative.\");\n      }\n      Optional<Integer> _absent_1 = Optional.<Integer>absent();\n      final Integer deltaReplaceLength = this.getInt(parameters, \"deltaReplaceLength\", _absent_1);\n      if (((deltaReplaceLength).intValue() < 0)) {\n        throw new InvalidRequestException(400, \"The parameter \\'deltaReplaceLength\\' must not be negative.\");\n      }\n      final Function0<JsonObject> _function_2 = new Function0<JsonObject>() {\n        @Override\n        public JsonObject apply() {\n          try {\n            UpdateDocumentResult _updateDeltaText = XtextServiceDispatcher.this.updateDocumentService.updateDeltaText(document, deltaText, (deltaOffset).intValue(), (deltaReplaceLength).intValue(), requiredStateId, newStateId);\n            return XtextServiceDispatcher.this.forRequestId(_updateDeltaText, parameters);\n          } catch (Throwable _e) {\n            throw Exceptions.sneakyThrow(_e);\n          }\n        }\n      };\n      result.service = _function_2;\n    } else {\n      final Function0<JsonObject> _function_3 = new Function0<JsonObject>() {\n        @Override\n        public JsonObject apply() {\n          try {\n            return XtextServiceDispatcher.this.updateDocumentService.updateFullText(document, fullText, requiredStateId, newStateId);\n          } catch (Throwable _e) {\n            throw Exceptions.sneakyThrow(_e);\n          }\n        }\n      };\n      result.service = _function_3;\n    }\n    return result;\n  }","commit_id":"25f2bd40c7f33e830b74c0655ba56b9c39d16a0e","url":"https://github.com/eclipse/xtext"},{"original_method":"protected XtextServiceDispatcher.ServiceDescriptor getSaveResourceService(final Map<String, String> parameters, final Injector injector, final ISessionStore sessionStore) throws InvalidRequestException {\n    XtextServiceDispatcher.ServiceDescriptor _xblockexpression = null;\n    {\n      final ResourcePersistenceService service = injector.<ResourcePersistenceService>getInstance(ResourcePersistenceService.class);\n      final XtextDocument document = this.getDocument(parameters, injector, sessionStore);\n      final String requiredStateId = parameters.get(\"requiredState\");\n      XtextServiceDispatcher.ServiceDescriptor _serviceDescriptor = new XtextServiceDispatcher.ServiceDescriptor();\n      final Procedure1<XtextServiceDispatcher.ServiceDescriptor> _function = new Procedure1<XtextServiceDispatcher.ServiceDescriptor>() {\n        @Override\n        public void apply(final XtextServiceDispatcher.ServiceDescriptor it) {\n          final Function0<JsonObject> _function = new Function0<JsonObject>() {\n            @Override\n            public JsonObject apply() {\n              try {\n                JsonObject _save = service.save(document, XtextServiceDispatcher.this.resourceHandler, requiredStateId);\n                return XtextServiceDispatcher.this.forRequestId(_save, parameters);\n              } catch (Throwable _e) {\n                throw Exceptions.sneakyThrow(_e);\n              }\n            }\n          };\n          it.service = _function;\n          it.hasSideEffects = true;\n          boolean _containsKey = parameters.containsKey(\"fullText\");\n          it.hasTextInput = _containsKey;\n        }\n      };\n      _xblockexpression = ObjectExtensions.<XtextServiceDispatcher.ServiceDescriptor>operator_doubleArrow(_serviceDescriptor, _function);\n    }\n    return _xblockexpression;\n  }","id":13381,"modified_method":"protected XtextServiceDispatcher.ServiceDescriptor getSaveResourceService(final Map<String, String> parameters, final ISessionStore sessionStore) throws InvalidRequestException {\n    XtextServiceDispatcher.ServiceDescriptor _xblockexpression = null;\n    {\n      final XtextDocument document = this.getDocument(parameters, sessionStore);\n      final String requiredStateId = parameters.get(\"requiredState\");\n      XtextServiceDispatcher.ServiceDescriptor _serviceDescriptor = new XtextServiceDispatcher.ServiceDescriptor();\n      final Procedure1<XtextServiceDispatcher.ServiceDescriptor> _function = new Procedure1<XtextServiceDispatcher.ServiceDescriptor>() {\n        @Override\n        public void apply(final XtextServiceDispatcher.ServiceDescriptor it) {\n          final Function0<JsonObject> _function = new Function0<JsonObject>() {\n            @Override\n            public JsonObject apply() {\n              try {\n                JsonObject _save = XtextServiceDispatcher.this.resourcePersistenceService.save(document, XtextServiceDispatcher.this.resourceHandler, requiredStateId);\n                return XtextServiceDispatcher.this.forRequestId(_save, parameters);\n              } catch (Throwable _e) {\n                throw Exceptions.sneakyThrow(_e);\n              }\n            }\n          };\n          it.service = _function;\n          it.hasSideEffects = true;\n          boolean _containsKey = parameters.containsKey(\"fullText\");\n          it.hasTextInput = _containsKey;\n        }\n      };\n      _xblockexpression = ObjectExtensions.<XtextServiceDispatcher.ServiceDescriptor>operator_doubleArrow(_serviceDescriptor, _function);\n    }\n    return _xblockexpression;\n  }","commit_id":"25f2bd40c7f33e830b74c0655ba56b9c39d16a0e","url":"https://github.com/eclipse/xtext"},{"original_method":"public XtextServiceDispatcher.ServiceDescriptor getService(final String path, final Map<String, String> parameters, final ISessionStore sessionStore) throws InvalidRequestException {\n    XtextServiceDispatcher.ServiceDescriptor _xblockexpression = null;\n    {\n      final String requestType = this.getRequestType(path, parameters);\n      final Injector injector = this.getInjector(parameters);\n      XtextServiceDispatcher.ServiceDescriptor _switchResult = null;\n      boolean _matched = false;\n      if (!_matched) {\n        if (Objects.equal(requestType, \"load\")) {\n          _matched=true;\n          _switchResult = this.getLoadResourceService(false, parameters, injector, sessionStore);\n        }\n      }\n      if (!_matched) {\n        if (Objects.equal(requestType, \"revert\")) {\n          _matched=true;\n          _switchResult = this.getLoadResourceService(true, parameters, injector, sessionStore);\n        }\n      }\n      if (!_matched) {\n        if (Objects.equal(requestType, \"save\")) {\n          _matched=true;\n          _switchResult = this.getSaveResourceService(parameters, injector, sessionStore);\n        }\n      }\n      if (!_matched) {\n        if (Objects.equal(requestType, \"update\")) {\n          _matched=true;\n          _switchResult = this.getUpdateDocumentService(parameters, injector, sessionStore);\n        }\n      }\n      if (!_matched) {\n        if (Objects.equal(requestType, \"validation\")) {\n          _matched=true;\n          _switchResult = this.getValidationService(parameters, injector, sessionStore);\n        }\n      }\n      if (!_matched) {\n        if (Objects.equal(requestType, \"content-assist\")) {\n          _matched=true;\n          _switchResult = this.getContentAssistService(parameters, injector, sessionStore);\n        }\n      }\n      if (!_matched) {\n        throw new InvalidRequestException(400, ((\"The request type \\'\" + requestType) + \"\\' is not supported.\"));\n      }\n      final Procedure1<XtextServiceDispatcher.ServiceDescriptor> _function = new Procedure1<XtextServiceDispatcher.ServiceDescriptor>() {\n        @Override\n        public void apply(final XtextServiceDispatcher.ServiceDescriptor it) {\n          it.type = requestType;\n        }\n      };\n      _xblockexpression = ObjectExtensions.<XtextServiceDispatcher.ServiceDescriptor>operator_doubleArrow(_switchResult, _function);\n    }\n    return _xblockexpression;\n  }","id":13382,"modified_method":"public XtextServiceDispatcher.ServiceDescriptor getService(final String path, final Map<String, String> parameters, final ISessionStore sessionStore) throws InvalidRequestException {\n    XtextServiceDispatcher.ServiceDescriptor _xblockexpression = null;\n    {\n      final String requestType = this.getRequestType(path, parameters);\n      XtextServiceDispatcher.ServiceDescriptor _switchResult = null;\n      boolean _matched = false;\n      if (!_matched) {\n        if (Objects.equal(requestType, \"load\")) {\n          _matched=true;\n          _switchResult = this.getLoadResourceService(false, parameters, sessionStore);\n        }\n      }\n      if (!_matched) {\n        if (Objects.equal(requestType, \"revert\")) {\n          _matched=true;\n          _switchResult = this.getLoadResourceService(true, parameters, sessionStore);\n        }\n      }\n      if (!_matched) {\n        if (Objects.equal(requestType, \"save\")) {\n          _matched=true;\n          _switchResult = this.getSaveResourceService(parameters, sessionStore);\n        }\n      }\n      if (!_matched) {\n        if (Objects.equal(requestType, \"update\")) {\n          _matched=true;\n          _switchResult = this.getUpdateDocumentService(parameters, sessionStore);\n        }\n      }\n      if (!_matched) {\n        if (Objects.equal(requestType, \"validation\")) {\n          _matched=true;\n          _switchResult = this.getValidationService(parameters, sessionStore);\n        }\n      }\n      if (!_matched) {\n        if (Objects.equal(requestType, \"content-assist\")) {\n          _matched=true;\n          _switchResult = this.getContentAssistService(parameters, sessionStore);\n        }\n      }\n      if (!_matched) {\n        throw new InvalidRequestException(400, ((\"The request type \\'\" + requestType) + \"\\' is not supported.\"));\n      }\n      final Procedure1<XtextServiceDispatcher.ServiceDescriptor> _function = new Procedure1<XtextServiceDispatcher.ServiceDescriptor>() {\n        @Override\n        public void apply(final XtextServiceDispatcher.ServiceDescriptor it) {\n          it.type = requestType;\n        }\n      };\n      _xblockexpression = ObjectExtensions.<XtextServiceDispatcher.ServiceDescriptor>operator_doubleArrow(_switchResult, _function);\n    }\n    return _xblockexpression;\n  }","commit_id":"25f2bd40c7f33e830b74c0655ba56b9c39d16a0e","url":"https://github.com/eclipse/xtext"},{"original_method":"protected XtextDocument getDocument(final Map<String, String> parameters, final Injector injector, final ISessionStore sessionStore) throws InvalidRequestException {\n    boolean _containsKey = parameters.containsKey(\"fullText\");\n    if (_containsKey) {\n      String _get = parameters.get(\"fullText\");\n      String _get_1 = parameters.get(\"resource\");\n      return this.getFullTextDocument(_get, _get_1, injector, sessionStore);\n    } else {\n      boolean _containsKey_1 = parameters.containsKey(\"resource\");\n      if (_containsKey_1) {\n        String _get_2 = parameters.get(\"resource\");\n        final Provider<XtextDocument> _function = new Provider<XtextDocument>() {\n          @Override\n          public XtextDocument get() {\n            try {\n              throw new InvalidRequestException(404, \"The requested resource was not found.\");\n            } catch (Throwable _e) {\n              throw Exceptions.sneakyThrow(_e);\n            }\n          }\n        };\n        return this.getResourceDocument(_get_2, injector, sessionStore, _function);\n      } else {\n        throw new InvalidRequestException(400, \"At least one of the parameters \\'resource\\' and \\'fullText\\' must be specified.\");\n      }\n    }\n  }","id":13383,"modified_method":"protected XtextDocument getDocument(final Map<String, String> parameters, final ISessionStore sessionStore) throws InvalidRequestException {\n    boolean _containsKey = parameters.containsKey(\"fullText\");\n    if (_containsKey) {\n      String _get = parameters.get(\"fullText\");\n      String _get_1 = parameters.get(\"resource\");\n      return this.getFullTextDocument(_get, _get_1, sessionStore);\n    } else {\n      boolean _containsKey_1 = parameters.containsKey(\"resource\");\n      if (_containsKey_1) {\n        String _get_2 = parameters.get(\"resource\");\n        final Provider<XtextDocument> _function = new Provider<XtextDocument>() {\n          @Override\n          public XtextDocument get() {\n            try {\n              throw new InvalidRequestException(404, \"The requested resource was not found.\");\n            } catch (Throwable _e) {\n              throw Exceptions.sneakyThrow(_e);\n            }\n          }\n        };\n        return this.getResourceDocument(_get_2, sessionStore, _function);\n      } else {\n        throw new InvalidRequestException(400, \"At least one of the parameters \\'resource\\' and \\'fullText\\' must be specified.\");\n      }\n    }\n  }","commit_id":"25f2bd40c7f33e830b74c0655ba56b9c39d16a0e","url":"https://github.com/eclipse/xtext"},{"original_method":"protected XtextServiceDispatcher.ServiceDescriptor getContentAssistService(final Map<String, String> parameters, final Injector injector, final ISessionStore sessionStore) throws InvalidRequestException {\n    XtextServiceDispatcher.ServiceDescriptor _xblockexpression = null;\n    {\n      final ContentAssistService service = injector.<ContentAssistService>getInstance(ContentAssistService.class);\n      Optional<Integer> _of = Optional.<Integer>of(Integer.valueOf(0));\n      final Integer offset = this.getInt(parameters, \"caretOffset\", _of);\n      final XtextDocument document = this.getDocument(parameters, injector, sessionStore);\n      Optional<Integer> _of_1 = Optional.<Integer>of(Integer.valueOf(0));\n      final Integer selectionStart = this.getInt(parameters, \"selectionStart\", _of_1);\n      Optional<Integer> _of_2 = Optional.<Integer>of(Integer.valueOf(0));\n      final Integer selectionEnd = this.getInt(parameters, \"selectionEnd\", _of_2);\n      int _max = Math.max(((selectionEnd).intValue() - (selectionStart).intValue()), 0);\n      final TextRegion selection = new TextRegion((selectionStart).intValue(), _max);\n      final String requiredStateId = parameters.get(\"requiredState\");\n      XtextServiceDispatcher.ServiceDescriptor _serviceDescriptor = new XtextServiceDispatcher.ServiceDescriptor();\n      final Procedure1<XtextServiceDispatcher.ServiceDescriptor> _function = new Procedure1<XtextServiceDispatcher.ServiceDescriptor>() {\n        @Override\n        public void apply(final XtextServiceDispatcher.ServiceDescriptor it) {\n          final Function0<JsonObject> _function = new Function0<JsonObject>() {\n            @Override\n            public JsonObject apply() {\n              try {\n                ContentAssistResult _createProposals = service.createProposals(document, selection, (offset).intValue(), requiredStateId);\n                return XtextServiceDispatcher.this.forRequestId(_createProposals, parameters);\n              } catch (Throwable _e) {\n                throw Exceptions.sneakyThrow(_e);\n              }\n            }\n          };\n          it.service = _function;\n          boolean _containsKey = parameters.containsKey(\"fullText\");\n          it.hasTextInput = _containsKey;\n        }\n      };\n      _xblockexpression = ObjectExtensions.<XtextServiceDispatcher.ServiceDescriptor>operator_doubleArrow(_serviceDescriptor, _function);\n    }\n    return _xblockexpression;\n  }","id":13384,"modified_method":"protected XtextServiceDispatcher.ServiceDescriptor getContentAssistService(final Map<String, String> parameters, final ISessionStore sessionStore) throws InvalidRequestException {\n    XtextServiceDispatcher.ServiceDescriptor _xblockexpression = null;\n    {\n      Optional<Integer> _of = Optional.<Integer>of(Integer.valueOf(0));\n      final Integer offset = this.getInt(parameters, \"caretOffset\", _of);\n      final XtextDocument document = this.getDocument(parameters, sessionStore);\n      Optional<Integer> _of_1 = Optional.<Integer>of(Integer.valueOf(0));\n      final Integer selectionStart = this.getInt(parameters, \"selectionStart\", _of_1);\n      Optional<Integer> _of_2 = Optional.<Integer>of(Integer.valueOf(0));\n      final Integer selectionEnd = this.getInt(parameters, \"selectionEnd\", _of_2);\n      int _max = Math.max(((selectionEnd).intValue() - (selectionStart).intValue()), 0);\n      final TextRegion selection = new TextRegion((selectionStart).intValue(), _max);\n      final String requiredStateId = parameters.get(\"requiredState\");\n      XtextServiceDispatcher.ServiceDescriptor _serviceDescriptor = new XtextServiceDispatcher.ServiceDescriptor();\n      final Procedure1<XtextServiceDispatcher.ServiceDescriptor> _function = new Procedure1<XtextServiceDispatcher.ServiceDescriptor>() {\n        @Override\n        public void apply(final XtextServiceDispatcher.ServiceDescriptor it) {\n          final Function0<JsonObject> _function = new Function0<JsonObject>() {\n            @Override\n            public JsonObject apply() {\n              try {\n                ContentAssistResult _createProposals = XtextServiceDispatcher.this.contentAssistService.createProposals(document, selection, (offset).intValue(), requiredStateId);\n                return XtextServiceDispatcher.this.forRequestId(_createProposals, parameters);\n              } catch (Throwable _e) {\n                throw Exceptions.sneakyThrow(_e);\n              }\n            }\n          };\n          it.service = _function;\n          boolean _containsKey = parameters.containsKey(\"fullText\");\n          it.hasTextInput = _containsKey;\n        }\n      };\n      _xblockexpression = ObjectExtensions.<XtextServiceDispatcher.ServiceDescriptor>operator_doubleArrow(_serviceDescriptor, _function);\n    }\n    return _xblockexpression;\n  }","commit_id":"25f2bd40c7f33e830b74c0655ba56b9c39d16a0e","url":"https://github.com/eclipse/xtext"},{"original_method":"protected XtextServiceDispatcher.ServiceDescriptor getLoadResourceService(final boolean revert, final Map<String, String> parameters, final Injector injector, final ISessionStore sessionStore) throws InvalidRequestException {\n    XtextServiceDispatcher.ServiceDescriptor _xblockexpression = null;\n    {\n      final ResourcePersistenceService service = injector.<ResourcePersistenceService>getInstance(ResourcePersistenceService.class);\n      final String resourceId = parameters.get(\"resource\");\n      if ((resourceId == null)) {\n        throw new InvalidRequestException(400, \"The parameter \\'resource\\' is required.\");\n      }\n      XtextServiceDispatcher.ServiceDescriptor _serviceDescriptor = new XtextServiceDispatcher.ServiceDescriptor();\n      final Procedure1<XtextServiceDispatcher.ServiceDescriptor> _function = new Procedure1<XtextServiceDispatcher.ServiceDescriptor>() {\n        @Override\n        public void apply(final XtextServiceDispatcher.ServiceDescriptor it) {\n          final Function0<JsonObject> _function = new Function0<JsonObject>() {\n            @Override\n            public JsonObject apply() {\n              try {\n                JsonObject _xifexpression = null;\n                if (revert) {\n                  String _get = parameters.get(\"newState\");\n                  ResourceContent _revert = service.revert(resourceId, _get, XtextServiceDispatcher.this.resourceHandler, sessionStore);\n                  _xifexpression = XtextServiceDispatcher.this.forRequestId(_revert, parameters);\n                } else {\n                  ResourceContent _load = service.load(resourceId, XtextServiceDispatcher.this.resourceHandler, sessionStore);\n                  _xifexpression = XtextServiceDispatcher.this.forRequestId(_load, parameters);\n                }\n                return _xifexpression;\n              } catch (Throwable _e) {\n                throw Exceptions.sneakyThrow(_e);\n              }\n            }\n          };\n          it.service = _function;\n          it.hasSideEffects = revert;\n        }\n      };\n      _xblockexpression = ObjectExtensions.<XtextServiceDispatcher.ServiceDescriptor>operator_doubleArrow(_serviceDescriptor, _function);\n    }\n    return _xblockexpression;\n  }","id":13385,"modified_method":"protected XtextServiceDispatcher.ServiceDescriptor getLoadResourceService(final boolean revert, final Map<String, String> parameters, final ISessionStore sessionStore) throws InvalidRequestException {\n    XtextServiceDispatcher.ServiceDescriptor _xblockexpression = null;\n    {\n      final String resourceId = parameters.get(\"resource\");\n      if ((resourceId == null)) {\n        throw new InvalidRequestException(400, \"The parameter \\'resource\\' is required.\");\n      }\n      XtextServiceDispatcher.ServiceDescriptor _serviceDescriptor = new XtextServiceDispatcher.ServiceDescriptor();\n      final Procedure1<XtextServiceDispatcher.ServiceDescriptor> _function = new Procedure1<XtextServiceDispatcher.ServiceDescriptor>() {\n        @Override\n        public void apply(final XtextServiceDispatcher.ServiceDescriptor it) {\n          final Function0<JsonObject> _function = new Function0<JsonObject>() {\n            @Override\n            public JsonObject apply() {\n              try {\n                JsonObject _xifexpression = null;\n                if (revert) {\n                  String _get = parameters.get(\"newState\");\n                  ResourceContent _revert = XtextServiceDispatcher.this.resourcePersistenceService.revert(resourceId, _get, \n                    XtextServiceDispatcher.this.resourceHandler, sessionStore);\n                  _xifexpression = XtextServiceDispatcher.this.forRequestId(_revert, parameters);\n                } else {\n                  ResourceContent _load = XtextServiceDispatcher.this.resourcePersistenceService.load(resourceId, XtextServiceDispatcher.this.resourceHandler, sessionStore);\n                  _xifexpression = XtextServiceDispatcher.this.forRequestId(_load, parameters);\n                }\n                return _xifexpression;\n              } catch (Throwable _e) {\n                throw Exceptions.sneakyThrow(_e);\n              }\n            }\n          };\n          it.service = _function;\n          it.hasSideEffects = revert;\n        }\n      };\n      _xblockexpression = ObjectExtensions.<XtextServiceDispatcher.ServiceDescriptor>operator_doubleArrow(_serviceDescriptor, _function);\n    }\n    return _xblockexpression;\n  }","commit_id":"25f2bd40c7f33e830b74c0655ba56b9c39d16a0e","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n  protected void doPost(final HttpServletRequest req, final HttpServletResponse resp) throws ServletException, IOException {\n    try {\n      HttpSession _session = req.getSession();\n      final HttpServletSessionStore sessionStore = new HttpServletSessionStore(_session);\n      String _elvis = null;\n      String _pathInfo = req.getPathInfo();\n      if (_pathInfo != null) {\n        _elvis = _pathInfo;\n      } else {\n        _elvis = \"\";\n      }\n      Map<String, String> _parameterMap = this.getParameterMap(req);\n      final XtextServiceDispatcher.ServiceDescriptor service = this.serviceDispatcher.getService(_elvis, _parameterMap, sessionStore);\n      boolean _or = false;\n      boolean _and = false;\n      boolean _isHasSideEffects = service.isHasSideEffects();\n      boolean _not = (!_isHasSideEffects);\n      if (!_not) {\n        _and = false;\n      } else {\n        boolean _isHasTextInput = service.isHasTextInput();\n        boolean _not_1 = (!_isHasTextInput);\n        _and = _not_1;\n      }\n      if (_and) {\n        _or = true;\n      } else {\n        String _type = service.getType();\n        boolean _equals = Objects.equal(_type, \"update\");\n        _or = _equals;\n      }\n      if (_or) {\n        super.doPost(req, resp);\n      } else {\n        this.doService(service, resp);\n      }\n    } catch (Throwable _e) {\n      throw Exceptions.sneakyThrow(_e);\n    }\n  }","id":13386,"modified_method":"@Override\n  protected void doPost(final HttpServletRequest req, final HttpServletResponse resp) throws ServletException, IOException {\n    final XtextServiceDispatcher.ServiceDescriptor service = this.getService(req);\n    boolean _or = false;\n    boolean _and = false;\n    boolean _isHasSideEffects = service.isHasSideEffects();\n    boolean _not = (!_isHasSideEffects);\n    if (!_not) {\n      _and = false;\n    } else {\n      boolean _isHasTextInput = service.isHasTextInput();\n      boolean _not_1 = (!_isHasTextInput);\n      _and = _not_1;\n    }\n    if (_and) {\n      _or = true;\n    } else {\n      String _type = service.getType();\n      boolean _equals = Objects.equal(_type, \"update\");\n      _or = _equals;\n    }\n    if (_or) {\n      super.doPost(req, resp);\n    } else {\n      this.doService(service, resp);\n    }\n  }","commit_id":"25f2bd40c7f33e830b74c0655ba56b9c39d16a0e","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n  protected void doPut(final HttpServletRequest req, final HttpServletResponse resp) throws ServletException, IOException {\n    try {\n      HttpSession _session = req.getSession();\n      final HttpServletSessionStore sessionStore = new HttpServletSessionStore(_session);\n      String _elvis = null;\n      String _pathInfo = req.getPathInfo();\n      if (_pathInfo != null) {\n        _elvis = _pathInfo;\n      } else {\n        _elvis = \"\";\n      }\n      Map<String, String> _parameterMap = this.getParameterMap(req);\n      final XtextServiceDispatcher.ServiceDescriptor service = this.serviceDispatcher.getService(_elvis, _parameterMap, sessionStore);\n      String _type = service.getType();\n      boolean _notEquals = (!Objects.equal(_type, \"update\"));\n      if (_notEquals) {\n        super.doPut(req, resp);\n      } else {\n        this.doService(service, resp);\n      }\n    } catch (Throwable _e) {\n      throw Exceptions.sneakyThrow(_e);\n    }\n  }","id":13387,"modified_method":"@Override\n  protected void doPut(final HttpServletRequest req, final HttpServletResponse resp) throws ServletException, IOException {\n    final XtextServiceDispatcher.ServiceDescriptor service = this.getService(req);\n    String _type = service.getType();\n    boolean _notEquals = (!Objects.equal(_type, \"update\"));\n    if (_notEquals) {\n      super.doPut(req, resp);\n    } else {\n      this.doService(service, resp);\n    }\n  }","commit_id":"25f2bd40c7f33e830b74c0655ba56b9c39d16a0e","url":"https://github.com/eclipse/xtext"},{"original_method":"protected Map<String, String> getParameterMap(final HttpServletRequest req) {\n    Map _parameterMap = req.getParameterMap();\n    final Map<String, String[]> paramMultiMap = ((Map<String, String[]>) _parameterMap);\n    int _size = paramMultiMap.size();\n    final HashMap<String, String> result = Maps.<String, String>newHashMapWithExpectedSize(_size);\n    Set<Map.Entry<String, String[]>> _entrySet = paramMultiMap.entrySet();\n    final Function1<Map.Entry<String, String[]>, Boolean> _function = new Function1<Map.Entry<String, String[]>, Boolean>() {\n      @Override\n      public Boolean apply(final Map.Entry<String, String[]> it) {\n        String[] _value = it.getValue();\n        int _length = _value.length;\n        return Boolean.valueOf((_length > 0));\n      }\n    };\n    Iterable<Map.Entry<String, String[]>> _filter = IterableExtensions.<Map.Entry<String, String[]>>filter(_entrySet, _function);\n    final Consumer<Map.Entry<String, String[]>> _function_1 = new Consumer<Map.Entry<String, String[]>>() {\n      @Override\n      public void accept(final Map.Entry<String, String[]> it) {\n        String _key = it.getKey();\n        String[] _value = it.getValue();\n        String _get = _value[0];\n        result.put(_key, _get);\n      }\n    };\n    _filter.forEach(_function_1);\n    return Collections.<String, String>unmodifiableMap(result);\n  }","id":13388,"modified_method":"protected Map<String, String> getParameterMap(final HttpServletRequest req) {\n    Map<String, String[]> _parameterMap = req.getParameterMap();\n    final Map<String, String[]> paramMultiMap = ((Map<String, String[]>) _parameterMap);\n    int _size = paramMultiMap.size();\n    final HashMap<String, String> result = Maps.<String, String>newHashMapWithExpectedSize(_size);\n    Set<Map.Entry<String, String[]>> _entrySet = paramMultiMap.entrySet();\n    final Function1<Map.Entry<String, String[]>, Boolean> _function = new Function1<Map.Entry<String, String[]>, Boolean>() {\n      @Override\n      public Boolean apply(final Map.Entry<String, String[]> it) {\n        String[] _value = it.getValue();\n        int _length = _value.length;\n        return Boolean.valueOf((_length > 0));\n      }\n    };\n    Iterable<Map.Entry<String, String[]>> _filter = IterableExtensions.<Map.Entry<String, String[]>>filter(_entrySet, _function);\n    final Consumer<Map.Entry<String, String[]>> _function_1 = new Consumer<Map.Entry<String, String[]>>() {\n      @Override\n      public void accept(final Map.Entry<String, String[]> it) {\n        String _key = it.getKey();\n        String[] _value = it.getValue();\n        String _get = _value[0];\n        result.put(_key, _get);\n      }\n    };\n    _filter.forEach(_function_1);\n    return Collections.<String, String>unmodifiableMap(result);\n  }","commit_id":"25f2bd40c7f33e830b74c0655ba56b9c39d16a0e","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n  protected void doGet(final HttpServletRequest req, final HttpServletResponse resp) throws ServletException, IOException {\n    try {\n      HttpSession _session = req.getSession();\n      final HttpServletSessionStore sessionStore = new HttpServletSessionStore(_session);\n      String _elvis = null;\n      String _pathInfo = req.getPathInfo();\n      if (_pathInfo != null) {\n        _elvis = _pathInfo;\n      } else {\n        _elvis = \"\";\n      }\n      Map<String, String> _parameterMap = this.getParameterMap(req);\n      final XtextServiceDispatcher.ServiceDescriptor service = this.serviceDispatcher.getService(_elvis, _parameterMap, sessionStore);\n      boolean _or = false;\n      boolean _isHasSideEffects = service.isHasSideEffects();\n      if (_isHasSideEffects) {\n        _or = true;\n      } else {\n        boolean _isHasTextInput = service.isHasTextInput();\n        _or = _isHasTextInput;\n      }\n      if (_or) {\n        super.doGet(req, resp);\n      } else {\n        this.doService(service, resp);\n      }\n    } catch (Throwable _e) {\n      throw Exceptions.sneakyThrow(_e);\n    }\n  }","id":13389,"modified_method":"@Override\n  protected void doGet(final HttpServletRequest req, final HttpServletResponse resp) throws ServletException, IOException {\n    final XtextServiceDispatcher.ServiceDescriptor service = this.getService(req);\n    boolean _or = false;\n    boolean _isHasSideEffects = service.isHasSideEffects();\n    if (_isHasSideEffects) {\n      _or = true;\n    } else {\n      boolean _isHasTextInput = service.isHasTextInput();\n      _or = _isHasTextInput;\n    }\n    if (_or) {\n      super.doGet(req, resp);\n    } else {\n      this.doService(service, resp);\n    }\n  }","commit_id":"25f2bd40c7f33e830b74c0655ba56b9c39d16a0e","url":"https://github.com/eclipse/xtext"},{"original_method":"private void paint(Graphics2D g, int width) {\n    if (!myApplied) {\n      g.setColor(myColor);\n      g.fill(new Polygon(new int[]{0, 0, width, width}, new int[]{myStart1, myEnd1, myEnd2, myStart2}, 4));\n      g.setColor(DiffUtil.getFramingColor(myColor));\n      UIUtil.drawLine(g, 0, myStart1, width, myStart2);\n      UIUtil.drawLine(g, 0, myEnd1, width, myEnd2);\n    }\n    else {\n      g.setColor(myColor);\n      UIUtil.drawLine(g, 0, myStart1 + 1, width, myStart2 + 1);\n      UIUtil.drawLine(g, 0, myStart1 + 2, width, myStart2 + 2);\n      UIUtil.drawLine(g, 0, myEnd1 + 1, width, myEnd2 + 1);\n      UIUtil.drawLine(g, 0, myEnd1, width, myEnd2);\n    }\n  }","id":13390,"modified_method":"private void paint(Graphics2D g, int width) {\n    GraphicsUtil.setupAntialiasing(g);\n\n\n    if (!myApplied) {\n      Shape upperCurve = makeCurve(width, myStart1, myStart2, true);\n      Shape lowerCurve = makeCurve(width, myEnd1, myEnd2, false);\n\n      Path2D path = new Path2D.Double();\n      path.append(upperCurve, true);\n      path.append(lowerCurve, true);\n      g.setColor(myColor);\n      g.fill(path);\n\n      g.setColor(DiffUtil.getFramingColor(myColor));\n      g.draw(upperCurve);\n      g.draw(lowerCurve);\n    }\n    else {\n      g.setColor(myColor);\n      g.draw(makeCurve(width, myStart1 + 1, myStart2 + 1, true));\n      g.draw(makeCurve(width, myStart1 + 2, myStart2 + 2, true));\n      g.draw(makeCurve(width, myEnd1 + 1, myEnd2 + 1, false));\n      g.draw(makeCurve(width, myEnd1 + 2, myEnd2 + 2, false));\n    }\n  }","commit_id":"080338f9c9572a7041e5d9d49f6e4392ec703117","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public Set<Resource> populateResources(Set<Resource> resources, Request request, Predicate predicate) throws SystemException {\n\n    for (Resource resource : resources) {\n      // obtain the required identifying properties on the host component resource\n      final String componentName = (String)resource.getPropertyValue(PropertyHelper.getPropertyId(\"HostRoles\", \"component_name\"));\n      final String hostName = (String) resource.getPropertyValue(PropertyHelper.getPropertyId(\"HostRoles\", \"host_name\"));\n      final String clusterName = (String) resource.getPropertyValue(PropertyHelper.getPropertyId(\"HostRoles\", \"cluster_name\"));\n\n      if (!logSearchServerRunning(clusterName)) {\n        continue;\n      }\n\n      // query the stack definitions to find the correct component name (stack name mapped to LogSearch-defined name)\n      final String mappedComponentNameForLogSearch =\n        getMappedComponentNameForSearch(clusterName, componentName, ambariManagementController);\n\n      if (mappedComponentNameForLogSearch != null) {\n        // send query to obtain logging metadata\n        Set<String> logFileNames =\n          logSearchDataRetrievalService.getLogFileNames(mappedComponentNameForLogSearch, hostName, clusterName);\n\n        if ((logFileNames != null) && (!logFileNames.isEmpty())) {\n          HostComponentLoggingInfo loggingInfo = new HostComponentLoggingInfo();\n          loggingInfo.setComponentName(mappedComponentNameForLogSearch);\n          List<LogFileDefinitionInfo> listOfFileDefinitions =\n            new LinkedList<LogFileDefinitionInfo>();\n\n          for (String fileName : logFileNames) {\n            // generate the URIs that can be used by clients to obtain search results/tail log results/etc\n            final String searchEngineURI = ambariManagementController.getAmbariServerURI(getFullPathToSearchEngine(clusterName));\n            final String logFileTailURI = logSearchDataRetrievalService.getLogFileTailURI(searchEngineURI, mappedComponentNameForLogSearch, hostName, clusterName);\n            if (logFileTailURI != null) {\n              // all log files are assumed to be service types for now\n              listOfFileDefinitions.add(new LogFileDefinitionInfo(fileName, LogFileType.SERVICE, searchEngineURI, logFileTailURI));\n            }\n          }\n\n          loggingInfo.setListOfLogFileDefinitions(listOfFileDefinitions);\n\n          LOG.debug(\"Adding logging info for component name = \" + componentName + \" on host name = \" + hostName);\n          // add the logging metadata for this host component\n          resource.setProperty(\"logging\", loggingInfo);\n        } else {\n          Utils.logErrorMessageWithCounter(LOG, errorLogCounterForLogSearchConnectionExceptions,\n            \"Error occurred while making request to LogSearch service, unable to populate logging properties on this resource\");\n        }\n      }\n\n    }\n\n    return resources;\n  }","id":13391,"modified_method":"@Override\n  public Set<Resource> populateResources(Set<Resource> resources, Request request, Predicate predicate) throws SystemException {\n\n    for (Resource resource : resources) {\n      // obtain the required identifying properties on the host component resource\n      final String componentName = (String)resource.getPropertyValue(PropertyHelper.getPropertyId(\"HostRoles\", \"component_name\"));\n      final String hostName = (String) resource.getPropertyValue(PropertyHelper.getPropertyId(\"HostRoles\", \"host_name\"));\n      final String clusterName = (String) resource.getPropertyValue(PropertyHelper.getPropertyId(\"HostRoles\", \"cluster_name\"));\n\n      // Test to see if the authenticated user is authorized to view this data... if not, skip it.\n      if(!AuthorizationHelper.isAuthorized(ResourceType.CLUSTER, getClusterResourceID(clusterName), REQUIRED_AUTHORIZATIONS)) {\n        if(LOG.isDebugEnabled()) {\n          LOG.debug(String.format(\"The authenticated user (%s) is not authorized to access LogSearch data for the cluster named %s\",\n              AuthorizationHelper.getAuthenticatedName(),\n              clusterName));\n        }\n        continue;\n      }\n\n      if (!logSearchServerRunning(clusterName)) {\n        continue;\n      }\n\n      // query the stack definitions to find the correct component name (stack name mapped to LogSearch-defined name)\n      final String mappedComponentNameForLogSearch =\n        getMappedComponentNameForSearch(clusterName, componentName, ambariManagementController);\n\n      if (mappedComponentNameForLogSearch != null) {\n        // send query to obtain logging metadata\n        Set<String> logFileNames =\n          logSearchDataRetrievalService.getLogFileNames(mappedComponentNameForLogSearch, hostName, clusterName);\n\n        if ((logFileNames != null) && (!logFileNames.isEmpty())) {\n          HostComponentLoggingInfo loggingInfo = new HostComponentLoggingInfo();\n          loggingInfo.setComponentName(mappedComponentNameForLogSearch);\n          List<LogFileDefinitionInfo> listOfFileDefinitions =\n            new LinkedList<LogFileDefinitionInfo>();\n\n          for (String fileName : logFileNames) {\n            // generate the URIs that can be used by clients to obtain search results/tail log results/etc\n            final String searchEngineURI = ambariManagementController.getAmbariServerURI(getFullPathToSearchEngine(clusterName));\n            final String logFileTailURI = logSearchDataRetrievalService.getLogFileTailURI(searchEngineURI, mappedComponentNameForLogSearch, hostName, clusterName);\n            if (logFileTailURI != null) {\n              // all log files are assumed to be service types for now\n              listOfFileDefinitions.add(new LogFileDefinitionInfo(fileName, LogFileType.SERVICE, searchEngineURI, logFileTailURI));\n            }\n          }\n\n          loggingInfo.setListOfLogFileDefinitions(listOfFileDefinitions);\n\n          LOG.debug(\"Adding logging info for component name = \" + componentName + \" on host name = \" + hostName);\n          // add the logging metadata for this host component\n          resource.setProperty(\"logging\", loggingInfo);\n        } else {\n          Utils.logErrorMessageWithCounter(LOG, errorLogCounterForLogSearchConnectionExceptions,\n            \"Error occurred while making request to LogSearch service, unable to populate logging properties on this resource\");\n        }\n      }\n\n    }\n\n    return resources;\n  }","commit_id":"dc0722265bb7f6438807bafa8c9edbb96ab50559","url":"https://github.com/apache/ambari"},{"original_method":"/**\n   * Verifies the following:\n   *\n   *   1. That this PropertyProvider implementation uses\n   *      the expected interfaces to make queries to the LogSearch\n   *      service.\n   *   2. That the PropertyProvider queries the current HostComponent\n   *      resource in order to obtain the correct information to send to\n   *      LogSearch.\n   *   3. That the output of the LogSearch query is properly set on the\n   *      HostComponent resource in the expected structure.\n   *\n   * @throws Exception\n   */\n  @Test\n  public void testBasicCall() throws Exception {\n    final String expectedLogFilePath =\n      \"/var/log/hdfs/hdfs_namenode.log\";\n\n    final String expectedSearchEnginePath = \"/api/v1/clusters/clusterone/logging/searchEngine\";\n\n    final String expectedAmbariURL = \"http://c6401.ambari.apache.org:8080\";\n\n    final String expectedStackName = \"HDP\";\n    final String expectedStackVersion = \"2.4\";\n    final String expectedComponentName = \"NAMENODE\";\n    final String expectedServiceName = \"HDFS\";\n    final String expectedLogSearchComponentName = \"hdfs_namenode\";\n\n    EasyMockSupport mockSupport = new EasyMockSupport();\n\n    Resource resourceMock =\n      mockSupport.createMock(Resource.class);\n    expect(resourceMock.getPropertyValue(PropertyHelper.getPropertyId(\"HostRoles\", \"component_name\"))).andReturn(expectedComponentName).atLeastOnce();\n    expect(resourceMock.getPropertyValue(PropertyHelper.getPropertyId(\"HostRoles\", \"host_name\"))).andReturn(\"c6401.ambari.apache.org\").atLeastOnce();\n    expect(resourceMock.getPropertyValue(PropertyHelper.getPropertyId(\"HostRoles\", \"cluster_name\"))).andReturn(\"clusterone\").atLeastOnce();\n\n    Capture<HostComponentLoggingInfo> captureLogInfo = Capture.newInstance();\n    // expect set method to be called\n    resourceMock.setProperty(eq(\"logging\"), capture(captureLogInfo));\n\n    LogLevelQueryResponse levelQueryResponse =\n      new LogLevelQueryResponse();\n\n    levelQueryResponse.setTotalCount(\"3\");\n    // setup test data for log levels\n    List<NameValuePair> testListOfLogLevels =\n      new LinkedList<NameValuePair>();\n    testListOfLogLevels.add(new NameValuePair(\"ERROR\", \"150\"));\n    testListOfLogLevels.add(new NameValuePair(\"WARN\", \"500\"));\n    testListOfLogLevels.add(new NameValuePair(\"INFO\", \"2200\"));\n\n    levelQueryResponse.setNameValueList(testListOfLogLevels);\n\n    Request requestMock =\n      mockSupport.createMock(Request.class);\n\n    Predicate predicateMock =\n      mockSupport.createMock(Predicate.class);\n\n    AmbariManagementController controllerMock =\n      mockSupport.createMock(AmbariManagementController.class);\n\n    AmbariMetaInfo metaInfoMock =\n      mockSupport.createMock(AmbariMetaInfo.class);\n\n    Clusters clustersMock =\n      mockSupport.createMock(Clusters.class);\n\n    Cluster clusterMock =\n      mockSupport.createMock(Cluster.class);\n\n    StackId stackIdMock =\n      mockSupport.createMock(StackId.class);\n\n    ComponentInfo componentInfoMock =\n      mockSupport.createMock(ComponentInfo.class);\n\n    LogDefinition logDefinitionMock =\n      mockSupport.createMock(LogDefinition.class);\n\n    LogSearchDataRetrievalService dataRetrievalServiceMock =\n      mockSupport.createMock(LogSearchDataRetrievalService.class);\n\n    LoggingRequestHelperFactory loggingRequestHelperFactoryMock =\n        mockSupport.createMock(LoggingRequestHelperFactory.class);\n    \n    LoggingRequestHelper loggingRequestHelperMock =\n        mockSupport.createMock(LoggingRequestHelper.class);\n    \n    expect(dataRetrievalServiceMock.getLogFileNames(expectedLogSearchComponentName, \"c6401.ambari.apache.org\", \"clusterone\")).andReturn(Collections.singleton(expectedLogFilePath)).atLeastOnce();\n    expect(dataRetrievalServiceMock.getLogFileTailURI(expectedAmbariURL + expectedSearchEnginePath, expectedLogSearchComponentName, \"c6401.ambari.apache.org\", \"clusterone\")).andReturn(\"\").atLeastOnce();\n\n\n    expect(controllerMock.getAmbariServerURI(expectedSearchEnginePath)).\n      andReturn(expectedAmbariURL + expectedSearchEnginePath).atLeastOnce();\n    expect(controllerMock.getAmbariMetaInfo()).andReturn(metaInfoMock).atLeastOnce();\n    expect(controllerMock.getClusters()).andReturn(clustersMock).atLeastOnce();\n    expect(clustersMock.getCluster(\"clusterone\")).andReturn(clusterMock).atLeastOnce();\n    expect(stackIdMock.getStackName()).andReturn(expectedStackName).atLeastOnce();\n    expect(stackIdMock.getStackVersion()).andReturn(expectedStackVersion).atLeastOnce();\n    expect(clusterMock.getCurrentStackVersion()).andReturn(stackIdMock).atLeastOnce();\n    expect(loggingRequestHelperFactoryMock.getHelper(anyObject(AmbariManagementController.class), anyObject(String.class)))\n        .andReturn(loggingRequestHelperMock).atLeastOnce();\n\n    expect(metaInfoMock.getComponentToService(expectedStackName, expectedStackVersion, expectedComponentName)).andReturn(expectedServiceName).atLeastOnce();\n    expect(metaInfoMock.getComponent(expectedStackName, expectedStackVersion, expectedServiceName, expectedComponentName)).andReturn(componentInfoMock).atLeastOnce();\n\n    expect(componentInfoMock.getLogs()).andReturn(Collections.singletonList(logDefinitionMock)).atLeastOnce();\n    expect(logDefinitionMock.getLogId()).andReturn(expectedLogSearchComponentName).atLeastOnce();\n\n    mockSupport.replayAll();\n\n    LoggingSearchPropertyProvider propertyProvider =\n      new LoggingSearchPropertyProvider();\n\n    propertyProvider.setAmbariManagementController(controllerMock);\n    propertyProvider.setLogSearchDataRetrievalService(dataRetrievalServiceMock);\n    propertyProvider.setLoggingRequestHelperFactory(loggingRequestHelperFactoryMock);\n\n    Set<Resource> returnedResources =\n      propertyProvider.populateResources(Collections.singleton(resourceMock), requestMock, predicateMock);\n\n    // verify that the property provider attached\n    // the expected logging structure to the associated resource\n\n    assertEquals(\"Returned resource set was of an incorrect size\",\n      1, returnedResources.size());\n\n    HostComponentLoggingInfo returnedLogInfo =\n      captureLogInfo.getValue();\n\n    assertNotNull(\"Returned log info should not be null\",\n      returnedLogInfo);\n\n    assertEquals(\"Returned component was not the correct name\",\n      \"hdfs_namenode\", returnedLogInfo.getComponentName());\n\n    assertEquals(\"Returned list of log file names for this component was incorrect\",\n      1, returnedLogInfo.getListOfLogFileDefinitions().size());\n\n    LogFileDefinitionInfo definitionInfo =\n      returnedLogInfo.getListOfLogFileDefinitions().get(0);\n\n    assertEquals(\"Incorrect log file type was found\",\n      LogFileType.SERVICE, definitionInfo.getLogFileType());\n    assertEquals(\"Incorrect log file path found\",\n      expectedLogFilePath, definitionInfo.getLogFileName());\n    assertEquals(\"Incorrect URL path to searchEngine\",\n      expectedAmbariURL + expectedSearchEnginePath, definitionInfo.getSearchEngineURL());\n\n    // verify that the log level count information\n    // was not added to the HostComponent resource\n    assertNull(returnedLogInfo.getListOfLogLevels());\n\n    mockSupport.verifyAll();\n  }","id":13392,"modified_method":"@Test\n  public void testBasicCallAsClusterUser() throws Exception {\n    testBasicCall(TestAuthenticationFactory.createClusterUser(), false);\n  }","commit_id":"dc0722265bb7f6438807bafa8c9edbb96ab50559","url":"https://github.com/apache/ambari"},{"original_method":"/**\n   * Verifies that this property provider implementation will\n   * properly handle the case of LogSearch not being deployed in\n   * the cluster or available.\n   *\n   * @throws Exception\n   */\n  @Test\n  public void testCheckWhenLogSearchNotAvailable() throws Exception {\n\n    final String expectedStackName = \"HDP\";\n    final String expectedStackVersion = \"2.4\";\n    final String expectedComponentName = \"NAMENODE\";\n    final String expectedServiceName = \"HDFS\";\n    final String expectedLogSearchComponentName = \"hdfs_namenode\";\n\n    EasyMockSupport mockSupport = new EasyMockSupport();\n\n    Resource resourceMock =\n      mockSupport.createMock(Resource.class);\n    expect(resourceMock.getPropertyValue(PropertyHelper.getPropertyId(\"HostRoles\", \"component_name\"))).andReturn(expectedComponentName).atLeastOnce();\n    expect(resourceMock.getPropertyValue(PropertyHelper.getPropertyId(\"HostRoles\", \"host_name\"))).andReturn(\"c6401.ambari.apache.org\").atLeastOnce();\n    expect(resourceMock.getPropertyValue(PropertyHelper.getPropertyId(\"HostRoles\", \"cluster_name\"))).andReturn(\"clusterone\").atLeastOnce();\n\n    Request requestMock =\n      mockSupport.createMock(Request.class);\n\n    Predicate predicateMock =\n      mockSupport.createMock(Predicate.class);\n\n    AmbariManagementController controllerMock =\n      mockSupport.createMock(AmbariManagementController.class);\n\n    AmbariMetaInfo metaInfoMock =\n      mockSupport.createMock(AmbariMetaInfo.class);\n\n    Clusters clustersMock =\n      mockSupport.createMock(Clusters.class);\n\n    Cluster clusterMock =\n      mockSupport.createMock(Cluster.class);\n\n    StackId stackIdMock =\n      mockSupport.createMock(StackId.class);\n\n    ComponentInfo componentInfoMock =\n      mockSupport.createMock(ComponentInfo.class);\n\n    LogDefinition logDefinitionMock =\n      mockSupport.createMock(LogDefinition.class);\n\n    LogSearchDataRetrievalService dataRetrievalServiceMock =\n      mockSupport.createMock(LogSearchDataRetrievalService.class);\n\n    LoggingRequestHelperFactory loggingRequestHelperFactoryMock =\n        mockSupport.createMock(LoggingRequestHelperFactory.class);\n\n    LoggingRequestHelper loggingRequestHelperMock =\n        mockSupport.createMock(LoggingRequestHelper.class);\n\n    expect(controllerMock.getAmbariMetaInfo()).andReturn(metaInfoMock).atLeastOnce();\n    expect(controllerMock.getClusters()).andReturn(clustersMock).atLeastOnce();\n    expect(clustersMock.getCluster(\"clusterone\")).andReturn(clusterMock).atLeastOnce();\n    expect(stackIdMock.getStackName()).andReturn(expectedStackName).atLeastOnce();\n    expect(stackIdMock.getStackVersion()).andReturn(expectedStackVersion).atLeastOnce();\n    expect(clusterMock.getCurrentStackVersion()).andReturn(stackIdMock).atLeastOnce();\n    expect(loggingRequestHelperFactoryMock.getHelper(anyObject(AmbariManagementController.class), anyObject(String.class)))\n        .andReturn(loggingRequestHelperMock).atLeastOnce();\n\n    expect(metaInfoMock.getComponentToService(expectedStackName, expectedStackVersion, expectedComponentName)).andReturn(expectedServiceName).atLeastOnce();\n    expect(metaInfoMock.getComponent(expectedStackName, expectedStackVersion, expectedServiceName, expectedComponentName)).andReturn(componentInfoMock).atLeastOnce();\n\n\n\n    // simulate the case when LogSearch is not deployed, or is not available for some reason\n    expect(dataRetrievalServiceMock.getLogFileNames(expectedLogSearchComponentName, \"c6401.ambari.apache.org\", \"clusterone\")).andReturn(null).atLeastOnce();\n\n    expect(componentInfoMock.getLogs()).andReturn(Collections.singletonList(logDefinitionMock)).atLeastOnce();\n    expect(logDefinitionMock.getLogId()).andReturn(expectedLogSearchComponentName).atLeastOnce();\n\n    mockSupport.replayAll();\n\n    LoggingSearchPropertyProvider propertyProvider =\n      new LoggingSearchPropertyProvider();\n\n    propertyProvider.setAmbariManagementController(controllerMock);\n    propertyProvider.setLogSearchDataRetrievalService(dataRetrievalServiceMock);\n    propertyProvider.setLoggingRequestHelperFactory(loggingRequestHelperFactoryMock);\n\n\n    // execute the populate resources method, verify that no exceptions occur, due to\n    // the LogSearch helper not being available\n    Set<Resource> returnedResources =\n      propertyProvider.populateResources(Collections.singleton(resourceMock), requestMock, predicateMock);\n\n    // verify that the set of resources has not changed in size\n    assertEquals(\"Returned resource set was of an incorrect size\",\n      1, returnedResources.size());\n\n    // verify that the single resource passed in was returned\n    assertSame(\"Returned resource was not the expected instance.\",\n      resourceMock, returnedResources.iterator().next());\n\n    mockSupport.verifyAll();\n  }","id":13393,"modified_method":"@Test\n  public void testCheckWhenLogSearchNotAvailableAsClusterUser() throws Exception {\n    testCheckWhenLogSearchNotAvailable(TestAuthenticationFactory.createClusterUser(), false);\n  }","commit_id":"dc0722265bb7f6438807bafa8c9edbb96ab50559","url":"https://github.com/apache/ambari"},{"original_method":"/**\n   * Verifies the following:\n   *\n   *   1. That this PropertyProvider implementation uses\n   *      the expected interfaces to make queries to the LogSearch\n   *      service.\n   *   2. That the PropertyProvider queries the current HostComponent\n   *      resource in order to obtain the correct information to send to\n   *      LogSearch.\n   *   3. That the output of the LogSearch query is properly set on the\n   *      HostComponent resource in the expected structure.\n   *   4. That the proper error-handling is in place in the event that a null\n   *      tail log URI is returned by the retrieval service.\n   *\n   *\n   * @throws Exception\n   */\n  @Test\n  public void testBasicCallWithNullTailLogURIReturned() throws Exception {\n    final String expectedLogFilePath =\n      \"/var/log/hdfs/hdfs_namenode.log\";\n\n    final String expectedSearchEnginePath = \"/api/v1/clusters/clusterone/logging/searchEngine\";\n\n    final String expectedAmbariURL = \"http://c6401.ambari.apache.org:8080\";\n\n    final String expectedStackName = \"HDP\";\n    final String expectedStackVersion = \"2.4\";\n    final String expectedComponentName = \"NAMENODE\";\n    final String expectedServiceName = \"HDFS\";\n    final String expectedLogSearchComponentName = \"hdfs_namenode\";\n\n    EasyMockSupport mockSupport = new EasyMockSupport();\n\n    Resource resourceMock =\n      mockSupport.createMock(Resource.class);\n    expect(resourceMock.getPropertyValue(PropertyHelper.getPropertyId(\"HostRoles\", \"component_name\"))).andReturn(expectedComponentName).atLeastOnce();\n    expect(resourceMock.getPropertyValue(PropertyHelper.getPropertyId(\"HostRoles\", \"host_name\"))).andReturn(\"c6401.ambari.apache.org\").atLeastOnce();\n    expect(resourceMock.getPropertyValue(PropertyHelper.getPropertyId(\"HostRoles\", \"cluster_name\"))).andReturn(\"clusterone\").atLeastOnce();\n\n    Capture<HostComponentLoggingInfo> captureLogInfo = Capture.newInstance();\n    // expect set method to be called\n    resourceMock.setProperty(eq(\"logging\"), capture(captureLogInfo));\n\n    LogLevelQueryResponse levelQueryResponse =\n      new LogLevelQueryResponse();\n\n    levelQueryResponse.setTotalCount(\"3\");\n    // setup test data for log levels\n    List<NameValuePair> testListOfLogLevels =\n      new LinkedList<NameValuePair>();\n    testListOfLogLevels.add(new NameValuePair(\"ERROR\", \"150\"));\n    testListOfLogLevels.add(new NameValuePair(\"WARN\", \"500\"));\n    testListOfLogLevels.add(new NameValuePair(\"INFO\", \"2200\"));\n\n    levelQueryResponse.setNameValueList(testListOfLogLevels);\n\n    Request requestMock =\n      mockSupport.createMock(Request.class);\n\n    Predicate predicateMock =\n      mockSupport.createMock(Predicate.class);\n\n    AmbariManagementController controllerMock =\n      mockSupport.createMock(AmbariManagementController.class);\n\n    AmbariMetaInfo metaInfoMock =\n      mockSupport.createMock(AmbariMetaInfo.class);\n\n    Clusters clustersMock =\n      mockSupport.createMock(Clusters.class);\n\n    Cluster clusterMock =\n      mockSupport.createMock(Cluster.class);\n\n    StackId stackIdMock =\n      mockSupport.createMock(StackId.class);\n\n    ComponentInfo componentInfoMock =\n      mockSupport.createMock(ComponentInfo.class);\n\n    LogDefinition logDefinitionMock =\n      mockSupport.createMock(LogDefinition.class);\n\n    LogSearchDataRetrievalService dataRetrievalServiceMock =\n      mockSupport.createMock(LogSearchDataRetrievalService.class);\n\n    LoggingRequestHelperFactory loggingRequestHelperFactoryMock =\n      mockSupport.createMock(LoggingRequestHelperFactory.class);\n\n    LoggingRequestHelper loggingRequestHelperMock =\n      mockSupport.createMock(LoggingRequestHelper.class);\n\n    expect(dataRetrievalServiceMock.getLogFileNames(expectedLogSearchComponentName, \"c6401.ambari.apache.org\", \"clusterone\")).andReturn(Collections.singleton(expectedLogFilePath)).atLeastOnce();\n    // return null, to simulate the case when the LogSearch service goes down, and the helper object\n    // is not available to continue servicing the request.\n    expect(dataRetrievalServiceMock.getLogFileTailURI(expectedAmbariURL + expectedSearchEnginePath, expectedLogSearchComponentName, \"c6401.ambari.apache.org\", \"clusterone\")).andReturn(null).atLeastOnce();\n\n\n    expect(controllerMock.getAmbariServerURI(expectedSearchEnginePath)).\n      andReturn(expectedAmbariURL + expectedSearchEnginePath).atLeastOnce();\n    expect(controllerMock.getAmbariMetaInfo()).andReturn(metaInfoMock).atLeastOnce();\n    expect(controllerMock.getClusters()).andReturn(clustersMock).atLeastOnce();\n    expect(clustersMock.getCluster(\"clusterone\")).andReturn(clusterMock).atLeastOnce();\n    expect(stackIdMock.getStackName()).andReturn(expectedStackName).atLeastOnce();\n    expect(stackIdMock.getStackVersion()).andReturn(expectedStackVersion).atLeastOnce();\n    expect(clusterMock.getCurrentStackVersion()).andReturn(stackIdMock).atLeastOnce();\n    expect(loggingRequestHelperFactoryMock.getHelper(anyObject(AmbariManagementController.class), anyObject(String.class)))\n      .andReturn(loggingRequestHelperMock).atLeastOnce();\n\n    expect(metaInfoMock.getComponentToService(expectedStackName, expectedStackVersion, expectedComponentName)).andReturn(expectedServiceName).atLeastOnce();\n    expect(metaInfoMock.getComponent(expectedStackName, expectedStackVersion, expectedServiceName, expectedComponentName)).andReturn(componentInfoMock).atLeastOnce();\n\n    expect(componentInfoMock.getLogs()).andReturn(Collections.singletonList(logDefinitionMock)).atLeastOnce();\n    expect(logDefinitionMock.getLogId()).andReturn(expectedLogSearchComponentName).atLeastOnce();\n\n    mockSupport.replayAll();\n\n    LoggingSearchPropertyProvider propertyProvider =\n      new LoggingSearchPropertyProvider();\n\n    propertyProvider.setAmbariManagementController(controllerMock);\n    propertyProvider.setLogSearchDataRetrievalService(dataRetrievalServiceMock);\n    propertyProvider.setLoggingRequestHelperFactory(loggingRequestHelperFactoryMock);\n\n    Set<Resource> returnedResources =\n      propertyProvider.populateResources(Collections.singleton(resourceMock), requestMock, predicateMock);\n\n    // verify that the property provider attached\n    // the expected logging structure to the associated resource\n\n    assertEquals(\"Returned resource set was of an incorrect size\",\n      1, returnedResources.size());\n\n    HostComponentLoggingInfo returnedLogInfo =\n      captureLogInfo.getValue();\n\n    assertNotNull(\"Returned log info should not be null\",\n      returnedLogInfo);\n\n    assertEquals(\"Returned component was not the correct name\",\n      \"hdfs_namenode\", returnedLogInfo.getComponentName());\n\n    assertEquals(\"Returned list of log file names for this component was incorrect\",\n      0, returnedLogInfo.getListOfLogFileDefinitions().size());\n\n    // verify that the log level count information\n    // was not added to the HostComponent resource\n    assertNull(returnedLogInfo.getListOfLogLevels());\n\n    mockSupport.verifyAll();\n  }","id":13394,"modified_method":"@Test\n  public void testBasicCallWithNullTailLogURIReturnedAsClusterUser() throws Exception {\n    testBasicCallWithNullTailLogURIReturned(TestAuthenticationFactory.createClusterUser(), false);\n  }","commit_id":"dc0722265bb7f6438807bafa8c9edbb96ab50559","url":"https://github.com/apache/ambari"},{"original_method":"@GET\n  @Path(\"searchEngine\")\n  @Produces(\"text/plain\")\n  public Response getSearchEngine(String body, @Context HttpHeaders headers, @Context UriInfo uri) {\n    return handleDirectRequest(uri, MediaType.TEXT_PLAIN_TYPE);\n  }","id":13395,"modified_method":"@GET\n  @Path(\"searchEngine\")\n  @Produces(\"text/plain\")\n  public Response getSearchEngine(String body, @Context HttpHeaders headers, @Context UriInfo uri) throws AuthorizationException {\n    if(AuthorizationHelper.isAuthorized(ResourceType.CLUSTER, getClusterResourceId(), REQUIRED_AUTHORIZATIONS)) {\n      return handleDirectRequest(uri, MediaType.TEXT_PLAIN_TYPE);\n    }\n    else {\n      Response.ResponseBuilder responseBuilder = Response.status(new ResultStatus(ResultStatus.STATUS.FORBIDDEN).getStatusCode());\n      responseBuilder.entity(\"The authenticated user is not authorized to perform this operation.\");\n      return responseBuilder.build();\n    }\n  }","commit_id":"dc0722265bb7f6438807bafa8c9edbb96ab50559","url":"https://github.com/apache/ambari"},{"original_method":"@Test\n  public void testGetSearchEngineWhenLogSearchNotRunning() throws Exception {\n    final String expectedClusterName = \"clusterone\";\n    final String expectedErrorMessage =\n      \"LogSearch is not currently available.  If LogSearch is deployed in this cluster, please verify that the LogSearch services are running.\";\n\n    EasyMockSupport mockSupport =\n      new EasyMockSupport();\n\n    LoggingService.ControllerFactory controllerFactoryMock =\n      mockSupport.createMock(LoggingService.ControllerFactory.class);\n\n    AmbariManagementController controllerMock =\n      mockSupport.createMock(AmbariManagementController.class);\n\n    LoggingRequestHelperFactory helperFactoryMock =\n      mockSupport.createMock(LoggingRequestHelperFactory.class);\n\n    UriInfo uriInfoMock =\n      mockSupport.createMock(UriInfo.class);\n\n    expect(uriInfoMock.getQueryParameters()).andReturn(new MultivaluedMapImpl()).atLeastOnce();\n    expect(controllerFactoryMock.getController()).andReturn(controllerMock).atLeastOnce();\n\n    // return null from this factory, to simulate the case where LogSearch is\n    // not running, or is not deployed in the current cluster\n    expect(helperFactoryMock.getHelper(controllerMock, expectedClusterName)).andReturn(null).atLeastOnce();\n\n    mockSupport.replayAll();\n\n    LoggingService loggingService =\n      new LoggingService(expectedClusterName, controllerFactoryMock, helperFactoryMock);\n\n    Response resource = loggingService.getSearchEngine(\"\", null, uriInfoMock);\n\n    assertNotNull(\"The response returned by the LoggingService should not have been null\",\n                  resource);\n\n    assertEquals(\"An OK status should have been returned\",\n                 HttpURLConnection.HTTP_NOT_FOUND, resource.getStatus());\n    assertNotNull(\"A non-null Entity should have been returned\",\n               resource.getEntity());\n    assertEquals(\"Expected error message was not included in the response\",\n                 expectedErrorMessage, resource.getEntity());\n\n    mockSupport.verifyAll();\n  }","id":13396,"modified_method":"@Test\n  public void testGetSearchEngineWhenLogSearchNotRunningAsClusterUser() throws Exception {\n    testGetSearchEngineWhenLogSearchNotRunning(TestAuthenticationFactory.createClusterUser(), false);\n  }","commit_id":"dc0722265bb7f6438807bafa8c9edbb96ab50559","url":"https://github.com/apache/ambari"},{"original_method":"private static PermissionEntity createServiceAdministratorPermission() {\n    PermissionEntity permissionEntity = new PermissionEntity();\n    permissionEntity.setId(5);\n    permissionEntity.setResourceType(createResourceTypeEntity(ResourceType.CLUSTER));\n    permissionEntity.setAuthorizations(createAuthorizations(EnumSet.of(\n        RoleAuthorization.CLUSTER_VIEW_ALERTS,\n        RoleAuthorization.CLUSTER_VIEW_CONFIGS,\n        RoleAuthorization.CLUSTER_VIEW_METRICS,\n        RoleAuthorization.CLUSTER_VIEW_STACK_DETAILS,\n        RoleAuthorization.CLUSTER_VIEW_STATUS_INFO,\n        RoleAuthorization.CLUSTER_MANAGE_CONFIG_GROUPS,\n        RoleAuthorization.HOST_VIEW_CONFIGS,\n        RoleAuthorization.HOST_VIEW_METRICS,\n        RoleAuthorization.HOST_VIEW_STATUS_INFO,\n        RoleAuthorization.SERVICE_COMPARE_CONFIGS,\n        RoleAuthorization.SERVICE_DECOMMISSION_RECOMMISSION,\n        RoleAuthorization.SERVICE_ENABLE_HA,\n        RoleAuthorization.SERVICE_MANAGE_CONFIG_GROUPS,\n        RoleAuthorization.SERVICE_MODIFY_CONFIGS,\n        RoleAuthorization.SERVICE_MOVE,\n        RoleAuthorization.SERVICE_RUN_CUSTOM_COMMAND,\n        RoleAuthorization.SERVICE_RUN_SERVICE_CHECK,\n        RoleAuthorization.SERVICE_START_STOP,\n        RoleAuthorization.SERVICE_TOGGLE_ALERTS,\n        RoleAuthorization.SERVICE_TOGGLE_MAINTENANCE,\n        RoleAuthorization.SERVICE_VIEW_ALERTS,\n        RoleAuthorization.SERVICE_VIEW_CONFIGS,\n        RoleAuthorization.SERVICE_VIEW_METRICS,\n        RoleAuthorization.SERVICE_VIEW_STATUS_INFO,\n        RoleAuthorization.CLUSTER_MANAGE_USER_PERSISTED_DATA)));\n    return permissionEntity;\n  }","id":13397,"modified_method":"private static PermissionEntity createServiceAdministratorPermission() {\n    PermissionEntity permissionEntity = new PermissionEntity();\n    permissionEntity.setId(5);\n    permissionEntity.setResourceType(createResourceTypeEntity(ResourceType.CLUSTER));\n    permissionEntity.setAuthorizations(createAuthorizations(EnumSet.of(\n        RoleAuthorization.CLUSTER_VIEW_ALERTS,\n        RoleAuthorization.CLUSTER_VIEW_CONFIGS,\n        RoleAuthorization.CLUSTER_VIEW_METRICS,\n        RoleAuthorization.CLUSTER_VIEW_STACK_DETAILS,\n        RoleAuthorization.CLUSTER_VIEW_STATUS_INFO,\n        RoleAuthorization.CLUSTER_MANAGE_CONFIG_GROUPS,\n        RoleAuthorization.HOST_VIEW_CONFIGS,\n        RoleAuthorization.HOST_VIEW_METRICS,\n        RoleAuthorization.HOST_VIEW_STATUS_INFO,\n        RoleAuthorization.SERVICE_COMPARE_CONFIGS,\n        RoleAuthorization.SERVICE_DECOMMISSION_RECOMMISSION,\n        RoleAuthorization.SERVICE_ENABLE_HA,\n        RoleAuthorization.SERVICE_MANAGE_CONFIG_GROUPS,\n        RoleAuthorization.SERVICE_MODIFY_CONFIGS,\n        RoleAuthorization.SERVICE_MOVE,\n        RoleAuthorization.SERVICE_RUN_CUSTOM_COMMAND,\n        RoleAuthorization.SERVICE_RUN_SERVICE_CHECK,\n        RoleAuthorization.SERVICE_START_STOP,\n        RoleAuthorization.SERVICE_TOGGLE_ALERTS,\n        RoleAuthorization.SERVICE_TOGGLE_MAINTENANCE,\n        RoleAuthorization.SERVICE_VIEW_ALERTS,\n        RoleAuthorization.SERVICE_VIEW_CONFIGS,\n        RoleAuthorization.SERVICE_VIEW_METRICS,\n        RoleAuthorization.SERVICE_VIEW_STATUS_INFO,\n        RoleAuthorization.SERVICE_VIEW_OPERATIONAL_LOGS,\n        RoleAuthorization.CLUSTER_MANAGE_USER_PERSISTED_DATA)));\n    return permissionEntity;\n  }","commit_id":"dc0722265bb7f6438807bafa8c9edbb96ab50559","url":"https://github.com/apache/ambari"},{"original_method":"private static PermissionEntity createClusterAdministratorPermission() {\n    PermissionEntity permissionEntity = new PermissionEntity();\n    permissionEntity.setId(PermissionEntity.CLUSTER_ADMINISTRATOR_PERMISSION);\n    permissionEntity.setResourceType(createResourceTypeEntity(ResourceType.CLUSTER));\n    permissionEntity.setAuthorizations(createAuthorizations(EnumSet.of(\n        RoleAuthorization.CLUSTER_MANAGE_CREDENTIALS,\n        RoleAuthorization.CLUSTER_MODIFY_CONFIGS,\n        RoleAuthorization.CLUSTER_MANAGE_CONFIG_GROUPS,\n        RoleAuthorization.CLUSTER_TOGGLE_ALERTS,\n        RoleAuthorization.CLUSTER_MANAGE_ALERTS,\n        RoleAuthorization.CLUSTER_TOGGLE_KERBEROS,\n        RoleAuthorization.CLUSTER_UPGRADE_DOWNGRADE_STACK,\n        RoleAuthorization.CLUSTER_VIEW_ALERTS,\n        RoleAuthorization.CLUSTER_VIEW_CONFIGS,\n        RoleAuthorization.CLUSTER_VIEW_METRICS,\n        RoleAuthorization.CLUSTER_VIEW_STACK_DETAILS,\n        RoleAuthorization.CLUSTER_VIEW_STATUS_INFO,\n        RoleAuthorization.HOST_ADD_DELETE_COMPONENTS,\n        RoleAuthorization.HOST_ADD_DELETE_HOSTS,\n        RoleAuthorization.HOST_TOGGLE_MAINTENANCE,\n        RoleAuthorization.HOST_VIEW_CONFIGS,\n        RoleAuthorization.HOST_VIEW_METRICS,\n        RoleAuthorization.HOST_VIEW_STATUS_INFO,\n        RoleAuthorization.SERVICE_ADD_DELETE_SERVICES,\n        RoleAuthorization.SERVICE_COMPARE_CONFIGS,\n        RoleAuthorization.SERVICE_DECOMMISSION_RECOMMISSION,\n        RoleAuthorization.SERVICE_ENABLE_HA,\n        RoleAuthorization.SERVICE_MANAGE_CONFIG_GROUPS,\n        RoleAuthorization.SERVICE_MODIFY_CONFIGS,\n        RoleAuthorization.SERVICE_MOVE,\n        RoleAuthorization.SERVICE_RUN_CUSTOM_COMMAND,\n        RoleAuthorization.SERVICE_RUN_SERVICE_CHECK,\n        RoleAuthorization.SERVICE_START_STOP,\n        RoleAuthorization.SERVICE_TOGGLE_ALERTS,\n        RoleAuthorization.SERVICE_TOGGLE_MAINTENANCE,\n        RoleAuthorization.SERVICE_VIEW_ALERTS,\n        RoleAuthorization.SERVICE_VIEW_CONFIGS,\n        RoleAuthorization.SERVICE_VIEW_METRICS,\n        RoleAuthorization.SERVICE_VIEW_STATUS_INFO,\n        RoleAuthorization.CLUSTER_MANAGE_USER_PERSISTED_DATA)));\n    return permissionEntity;\n  }","id":13398,"modified_method":"private static PermissionEntity createClusterAdministratorPermission() {\n    PermissionEntity permissionEntity = new PermissionEntity();\n    permissionEntity.setId(PermissionEntity.CLUSTER_ADMINISTRATOR_PERMISSION);\n    permissionEntity.setResourceType(createResourceTypeEntity(ResourceType.CLUSTER));\n    permissionEntity.setAuthorizations(createAuthorizations(EnumSet.of(\n        RoleAuthorization.CLUSTER_MANAGE_CREDENTIALS,\n        RoleAuthorization.CLUSTER_MODIFY_CONFIGS,\n        RoleAuthorization.CLUSTER_MANAGE_CONFIG_GROUPS,\n        RoleAuthorization.CLUSTER_TOGGLE_ALERTS,\n        RoleAuthorization.CLUSTER_MANAGE_ALERTS,\n        RoleAuthorization.CLUSTER_TOGGLE_KERBEROS,\n        RoleAuthorization.CLUSTER_UPGRADE_DOWNGRADE_STACK,\n        RoleAuthorization.CLUSTER_VIEW_ALERTS,\n        RoleAuthorization.CLUSTER_VIEW_CONFIGS,\n        RoleAuthorization.CLUSTER_VIEW_METRICS,\n        RoleAuthorization.CLUSTER_VIEW_STACK_DETAILS,\n        RoleAuthorization.CLUSTER_VIEW_STATUS_INFO,\n        RoleAuthorization.HOST_ADD_DELETE_COMPONENTS,\n        RoleAuthorization.HOST_ADD_DELETE_HOSTS,\n        RoleAuthorization.HOST_TOGGLE_MAINTENANCE,\n        RoleAuthorization.HOST_VIEW_CONFIGS,\n        RoleAuthorization.HOST_VIEW_METRICS,\n        RoleAuthorization.HOST_VIEW_STATUS_INFO,\n        RoleAuthorization.SERVICE_ADD_DELETE_SERVICES,\n        RoleAuthorization.SERVICE_COMPARE_CONFIGS,\n        RoleAuthorization.SERVICE_DECOMMISSION_RECOMMISSION,\n        RoleAuthorization.SERVICE_ENABLE_HA,\n        RoleAuthorization.SERVICE_MANAGE_CONFIG_GROUPS,\n        RoleAuthorization.SERVICE_MODIFY_CONFIGS,\n        RoleAuthorization.SERVICE_MOVE,\n        RoleAuthorization.SERVICE_RUN_CUSTOM_COMMAND,\n        RoleAuthorization.SERVICE_RUN_SERVICE_CHECK,\n        RoleAuthorization.SERVICE_START_STOP,\n        RoleAuthorization.SERVICE_TOGGLE_ALERTS,\n        RoleAuthorization.SERVICE_TOGGLE_MAINTENANCE,\n        RoleAuthorization.SERVICE_VIEW_ALERTS,\n        RoleAuthorization.SERVICE_VIEW_CONFIGS,\n        RoleAuthorization.SERVICE_VIEW_METRICS,\n        RoleAuthorization.SERVICE_VIEW_STATUS_INFO,\n        RoleAuthorization.SERVICE_VIEW_OPERATIONAL_LOGS,\n        RoleAuthorization.CLUSTER_MANAGE_USER_PERSISTED_DATA)));\n    return permissionEntity;\n  }","commit_id":"dc0722265bb7f6438807bafa8c9edbb96ab50559","url":"https://github.com/apache/ambari"},{"original_method":"private static PermissionEntity createClusterOperatorPermission() {\n    PermissionEntity permissionEntity = new PermissionEntity();\n    permissionEntity.setId(5);\n    permissionEntity.setResourceType(createResourceTypeEntity(ResourceType.CLUSTER));\n    permissionEntity.setAuthorizations(createAuthorizations(EnumSet.of(\n        RoleAuthorization.HOST_VIEW_CONFIGS,\n        RoleAuthorization.HOST_ADD_DELETE_COMPONENTS,\n        RoleAuthorization.HOST_VIEW_METRICS,\n        RoleAuthorization.SERVICE_DECOMMISSION_RECOMMISSION,\n        RoleAuthorization.CLUSTER_VIEW_CONFIGS,\n        RoleAuthorization.SERVICE_MANAGE_ALERTS,\n        RoleAuthorization.SERVICE_ENABLE_HA,\n        RoleAuthorization.SERVICE_VIEW_METRICS,\n        RoleAuthorization.SERVICE_RUN_CUSTOM_COMMAND,\n        RoleAuthorization.HOST_VIEW_STATUS_INFO,\n        RoleAuthorization.CLUSTER_VIEW_METRICS,\n        RoleAuthorization.SERVICE_VIEW_STATUS_INFO,\n        RoleAuthorization.CLUSTER_VIEW_STACK_DETAILS,\n        RoleAuthorization.SERVICE_COMPARE_CONFIGS,\n        RoleAuthorization.SERVICE_VIEW_ALERTS,\n        RoleAuthorization.CLUSTER_MANAGE_CONFIG_GROUPS,\n        RoleAuthorization.SERVICE_TOGGLE_ALERTS,\n        RoleAuthorization.SERVICE_MOVE,\n        RoleAuthorization.SERVICE_RUN_SERVICE_CHECK,\n        RoleAuthorization.SERVICE_MODIFY_CONFIGS,\n        RoleAuthorization.CLUSTER_VIEW_STATUS_INFO,\n        RoleAuthorization.SERVICE_VIEW_CONFIGS,\n        RoleAuthorization.HOST_ADD_DELETE_HOSTS,\n        RoleAuthorization.SERVICE_START_STOP,\n        RoleAuthorization.CLUSTER_VIEW_ALERTS,\n        RoleAuthorization.HOST_TOGGLE_MAINTENANCE,\n        RoleAuthorization.SERVICE_TOGGLE_MAINTENANCE,\n        RoleAuthorization.SERVICE_MANAGE_CONFIG_GROUPS,\n        RoleAuthorization.CLUSTER_MANAGE_USER_PERSISTED_DATA,\n        RoleAuthorization.CLUSTER_MANAGE_CREDENTIALS)));\n    return permissionEntity;\n  }","id":13399,"modified_method":"private static PermissionEntity createClusterOperatorPermission() {\n    PermissionEntity permissionEntity = new PermissionEntity();\n    permissionEntity.setId(5);\n    permissionEntity.setResourceType(createResourceTypeEntity(ResourceType.CLUSTER));\n    permissionEntity.setAuthorizations(createAuthorizations(EnumSet.of(\n        RoleAuthorization.HOST_VIEW_CONFIGS,\n        RoleAuthorization.HOST_ADD_DELETE_COMPONENTS,\n        RoleAuthorization.HOST_VIEW_METRICS,\n        RoleAuthorization.SERVICE_DECOMMISSION_RECOMMISSION,\n        RoleAuthorization.CLUSTER_VIEW_CONFIGS,\n        RoleAuthorization.SERVICE_MANAGE_ALERTS,\n        RoleAuthorization.SERVICE_ENABLE_HA,\n        RoleAuthorization.SERVICE_VIEW_METRICS,\n        RoleAuthorization.SERVICE_RUN_CUSTOM_COMMAND,\n        RoleAuthorization.HOST_VIEW_STATUS_INFO,\n        RoleAuthorization.CLUSTER_VIEW_METRICS,\n        RoleAuthorization.SERVICE_VIEW_STATUS_INFO,\n        RoleAuthorization.CLUSTER_VIEW_STACK_DETAILS,\n        RoleAuthorization.SERVICE_COMPARE_CONFIGS,\n        RoleAuthorization.SERVICE_VIEW_ALERTS,\n        RoleAuthorization.CLUSTER_MANAGE_CONFIG_GROUPS,\n        RoleAuthorization.SERVICE_TOGGLE_ALERTS,\n        RoleAuthorization.SERVICE_MOVE,\n        RoleAuthorization.SERVICE_RUN_SERVICE_CHECK,\n        RoleAuthorization.SERVICE_MODIFY_CONFIGS,\n        RoleAuthorization.CLUSTER_VIEW_STATUS_INFO,\n        RoleAuthorization.SERVICE_VIEW_CONFIGS,\n        RoleAuthorization.HOST_ADD_DELETE_HOSTS,\n        RoleAuthorization.SERVICE_START_STOP,\n        RoleAuthorization.CLUSTER_VIEW_ALERTS,\n        RoleAuthorization.HOST_TOGGLE_MAINTENANCE,\n        RoleAuthorization.SERVICE_TOGGLE_MAINTENANCE,\n        RoleAuthorization.SERVICE_MANAGE_CONFIG_GROUPS,\n        RoleAuthorization.CLUSTER_MANAGE_USER_PERSISTED_DATA,\n        RoleAuthorization.SERVICE_VIEW_OPERATIONAL_LOGS,\n        RoleAuthorization.CLUSTER_MANAGE_CREDENTIALS)));\n    return permissionEntity;\n  }","commit_id":"dc0722265bb7f6438807bafa8c9edbb96ab50559","url":"https://github.com/apache/ambari"},{"original_method":"private void reindexRule(RuleDto rule, SqlSession session) {\n    Integer subCharacteristicId = rule.getSubCharacteristicId();\n    CharacteristicDto subCharacteristic = subCharacteristicId != null ? characteristicDao.selectById(subCharacteristicId, session) : null;\n    CharacteristicDto characteristic = subCharacteristic != null ? characteristicDao.selectById(subCharacteristic.getParentId(), session) : null;\n    ruleRegistry.save(rule, characteristic, subCharacteristic, ruleDao.selectParametersByRuleId(rule.getId(), session), ruleDao.selectTagsByRuleIds(rule.getId(), session));\n  }","id":13400,"modified_method":"private void reindexRule(RuleDto rule, SqlSession session) {\n    ruleRegistry.reindex(rule, session);\n  }","commit_id":"7d0ab8027d1580abad035a84eb0065f0212e4ec7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void update_custom_rule() throws Exception {\n    RuleDto rule = new RuleDto().setId(11).setRepositoryKey(\"squid\").setRuleKey(\"XPath_1387869254\").setConfigKey(\"Xpath\");\n    when(ruleDao.selectParametersByRuleId(eq(11), eq(session))).thenReturn(newArrayList(new RuleParamDto().setId(21).setName(\"max\").setDefaultValue(\"20\")));\n    ArrayList<RuleRuleTagDto> ruleTags = newArrayList(new RuleRuleTagDto().setId(30L).setTag(\"style\").setType(RuleTagType.SYSTEM));\n    when(ruleDao.selectTagsByRuleIds(eq(11), eq(session))).thenReturn(ruleTags);\n\n    Map<String, String> paramsByKey = ImmutableMap.of(\"max\", \"21\");\n    operations.updateCustomRule(rule, \"Updated Rule\", Severity.MAJOR, \"Updated Description\", paramsByKey, authorizedUserSession);\n\n    ArgumentCaptor<RuleDto> ruleArgument = ArgumentCaptor.forClass(RuleDto.class);\n    verify(ruleDao).update(ruleArgument.capture(), eq(session));\n    assertThat(ruleArgument.getValue().getName()).isEqualTo(\"Updated Rule\");\n    assertThat(ruleArgument.getValue().getDescription()).isEqualTo(\"Updated Description\");\n    assertThat(ruleArgument.getValue().getSeverityString()).isEqualTo(Severity.MAJOR);\n\n    ArgumentCaptor<RuleParamDto> ruleParamArgument = ArgumentCaptor.forClass(RuleParamDto.class);\n    verify(ruleDao).update(ruleParamArgument.capture(), eq(session));\n    assertThat(ruleParamArgument.getValue().getDefaultValue()).isEqualTo(\"21\");\n\n    verify(session).commit();\n    verify(ruleRegistry).save(eq(ruleArgument.getValue()), any(CharacteristicDto.class), any(CharacteristicDto.class),\n      eq(newArrayList(ruleParamArgument.getValue())), eq(ruleTags));\n  }","id":13401,"modified_method":"@Test\n  public void update_custom_rule() throws Exception {\n    RuleDto rule = new RuleDto().setId(11).setRepositoryKey(\"squid\").setRuleKey(\"XPath_1387869254\").setConfigKey(\"Xpath\");\n    when(ruleDao.selectParametersByRuleId(eq(11), eq(session))).thenReturn(newArrayList(new RuleParamDto().setId(21).setName(\"max\").setDefaultValue(\"20\")));\n    ArrayList<RuleRuleTagDto> ruleTags = newArrayList(new RuleRuleTagDto().setId(30L).setTag(\"style\").setType(RuleTagType.SYSTEM));\n    when(ruleDao.selectTagsByRuleIds(eq(11), eq(session))).thenReturn(ruleTags);\n\n    Map<String, String> paramsByKey = ImmutableMap.of(\"max\", \"21\");\n    operations.updateCustomRule(rule, \"Updated Rule\", Severity.MAJOR, \"Updated Description\", paramsByKey, authorizedUserSession);\n\n    ArgumentCaptor<RuleDto> ruleArgument = ArgumentCaptor.forClass(RuleDto.class);\n    verify(ruleDao).update(ruleArgument.capture(), eq(session));\n    assertThat(ruleArgument.getValue().getName()).isEqualTo(\"Updated Rule\");\n    assertThat(ruleArgument.getValue().getDescription()).isEqualTo(\"Updated Description\");\n    assertThat(ruleArgument.getValue().getSeverityString()).isEqualTo(Severity.MAJOR);\n\n    ArgumentCaptor<RuleParamDto> ruleParamArgument = ArgumentCaptor.forClass(RuleParamDto.class);\n    verify(ruleDao).update(ruleParamArgument.capture(), eq(session));\n    assertThat(ruleParamArgument.getValue().getDefaultValue()).isEqualTo(\"21\");\n\n    verify(session).commit();\n    verify(ruleRegistry).reindex(eq(ruleArgument.getValue()), eq(session));\n  }","commit_id":"7d0ab8027d1580abad035a84eb0065f0212e4ec7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void fail_to_update_rule_on_invalid_coefficient() throws Exception {\n    RuleDto dto = new RuleDto().setId(1).setRepositoryKey(\"squid\").setRuleKey(\"UselessImportCheck\")\n      .setSubCharacteristicId(2).setRemediationFunction(\"LINEAR\").setRemediationCoefficient(\"1h\");\n    RuleKey ruleKey = RuleKey.of(\"squid\", \"UselessImportCheck\");\n\n    when(ruleDao.selectByKey(ruleKey, session)).thenReturn(dto);\n\n    CharacteristicDto subCharacteristic = new CharacteristicDto().setId(2).setKey(\"COMPILER\").setName(\"Compiler\").setParentId(1);\n    when(characteristicDao.selectByKey(\"COMPILER\", session)).thenReturn(subCharacteristic);\n\n    try {\n      operations.updateRule(\n        new RuleChange().setRuleKey(ruleKey).setDebtCharacteristicKey(\"COMPILER\")\n          .setDebtRemediationFunction(\"LINEAR\").setDebtRemediationCoefficient(\"foo\"),\n        authorizedUserSession\n      );\n    } catch (Exception e) {\n      assertThat(e).isInstanceOf(BadRequestException.class).hasMessage(\"Invalid coefficient: foo\");\n    }\n\n    verify(ruleDao, never()).update(any(RuleDto.class), eq(session));\n    verify(session, never()).commit();\n    verify(ruleRegistry, never()).save(any(RuleDto.class), any(CharacteristicDto.class), any(CharacteristicDto.class), anyListOf(RuleParamDto.class), anyListOf(RuleRuleTagDto.class));\n  }","id":13402,"modified_method":"@Test\n  public void fail_to_update_rule_on_invalid_coefficient() throws Exception {\n    RuleDto dto = new RuleDto().setId(1).setRepositoryKey(\"squid\").setRuleKey(\"UselessImportCheck\")\n      .setSubCharacteristicId(2).setRemediationFunction(\"LINEAR\").setRemediationCoefficient(\"1h\");\n    RuleKey ruleKey = RuleKey.of(\"squid\", \"UselessImportCheck\");\n\n    when(ruleDao.selectByKey(ruleKey, session)).thenReturn(dto);\n\n    CharacteristicDto subCharacteristic = new CharacteristicDto().setId(2).setKey(\"COMPILER\").setName(\"Compiler\").setParentId(1);\n    when(characteristicDao.selectByKey(\"COMPILER\", session)).thenReturn(subCharacteristic);\n\n    try {\n      operations.updateRule(\n        new RuleChange().setRuleKey(ruleKey).setDebtCharacteristicKey(\"COMPILER\")\n          .setDebtRemediationFunction(\"LINEAR\").setDebtRemediationCoefficient(\"foo\"),\n        authorizedUserSession\n      );\n    } catch (Exception e) {\n      assertThat(e).isInstanceOf(BadRequestException.class).hasMessage(\"Invalid coefficient: foo\");\n    }\n\n    verify(ruleDao, never()).update(any(RuleDto.class), eq(session));\n    verify(session, never()).commit();\n    verify(ruleRegistry, never()).reindex(any(RuleDto.class), eq(session));\n  }","commit_id":"7d0ab8027d1580abad035a84eb0065f0212e4ec7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void delete_rule_note() throws Exception {\n    Date createdAt = DateUtils.parseDate(\"2013-12-20\");\n    RuleDto rule = new RuleDto().setId(10).setNoteData(\"My note\").setNoteUserLogin(\"nicolas\").setNoteCreatedAt(createdAt).setNoteUpdatedAt(createdAt);\n\n    List<RuleParamDto> ruleParams = newArrayList(new RuleParamDto().setId(20).setName(\"max\").setDefaultValue(\"10\"));\n    when(ruleDao.selectParametersByRuleId(eq(10), eq(session))).thenReturn(ruleParams);\n    List<RuleRuleTagDto> ruleTags = newArrayList(new RuleRuleTagDto().setId(30L).setTag(\"style\").setType(RuleTagType.SYSTEM));\n    when(ruleDao.selectTagsByRuleIds(eq(10), eq(session))).thenReturn(ruleTags);\n\n    long now = System.currentTimeMillis();\n    doReturn(now).when(system).now();\n\n    operations.deleteRuleNote(rule, authorizedUserSession);\n\n    ArgumentCaptor<RuleDto> argumentCaptor = ArgumentCaptor.forClass(RuleDto.class);\n    verify(ruleDao).update(argumentCaptor.capture());\n    assertThat(argumentCaptor.getValue().getNoteData()).isNull();\n    assertThat(argumentCaptor.getValue().getNoteUserLogin()).isNull();\n    assertThat(argumentCaptor.getValue().getNoteCreatedAt()).isNull();\n    assertThat(argumentCaptor.getValue().getNoteUpdatedAt()).isNull();\n\n    verify(session).commit();\n    verify(ruleRegistry).save(eq(rule), any(CharacteristicDto.class), any(CharacteristicDto.class), eq(ruleParams), eq(ruleTags));\n  }","id":13403,"modified_method":"@Test\n  public void delete_rule_note() throws Exception {\n    Date createdAt = DateUtils.parseDate(\"2013-12-20\");\n    RuleDto rule = new RuleDto().setId(10).setNoteData(\"My note\").setNoteUserLogin(\"nicolas\").setNoteCreatedAt(createdAt).setNoteUpdatedAt(createdAt);\n\n    List<RuleParamDto> ruleParams = newArrayList(new RuleParamDto().setId(20).setName(\"max\").setDefaultValue(\"10\"));\n    when(ruleDao.selectParametersByRuleId(eq(10), eq(session))).thenReturn(ruleParams);\n    List<RuleRuleTagDto> ruleTags = newArrayList(new RuleRuleTagDto().setId(30L).setTag(\"style\").setType(RuleTagType.SYSTEM));\n    when(ruleDao.selectTagsByRuleIds(eq(10), eq(session))).thenReturn(ruleTags);\n\n    long now = System.currentTimeMillis();\n    doReturn(now).when(system).now();\n\n    operations.deleteRuleNote(rule, authorizedUserSession);\n\n    ArgumentCaptor<RuleDto> argumentCaptor = ArgumentCaptor.forClass(RuleDto.class);\n    verify(ruleDao).update(argumentCaptor.capture());\n    assertThat(argumentCaptor.getValue().getNoteData()).isNull();\n    assertThat(argumentCaptor.getValue().getNoteUserLogin()).isNull();\n    assertThat(argumentCaptor.getValue().getNoteCreatedAt()).isNull();\n    assertThat(argumentCaptor.getValue().getNoteUpdatedAt()).isNull();\n\n    verify(session).commit();\n    verify(ruleRegistry).reindex(eq(rule), eq(session));\n  }","commit_id":"7d0ab8027d1580abad035a84eb0065f0212e4ec7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void update_rule_note_when_no_existing_note() throws Exception {\n    RuleDto rule = new RuleDto().setId(10).setNoteCreatedAt(null).setNoteData(null);\n\n    List<RuleParamDto> ruleParams = newArrayList(new RuleParamDto().setId(20).setName(\"max\").setDefaultValue(\"10\"));\n    when(ruleDao.selectParametersByRuleId(eq(10), eq(session))).thenReturn(ruleParams);\n    List<RuleRuleTagDto> ruleTags = newArrayList(new RuleRuleTagDto().setId(30L).setTag(\"style\").setType(RuleTagType.SYSTEM));\n    when(ruleDao.selectTagsByRuleIds(eq(10), eq(session))).thenReturn(ruleTags);\n\n    operations.updateRuleNote(rule, \"My note\", authorizedUserSession);\n\n    ArgumentCaptor<RuleDto> argumentCaptor = ArgumentCaptor.forClass(RuleDto.class);\n    verify(ruleDao).update(argumentCaptor.capture());\n    assertThat(argumentCaptor.getValue().getNoteData()).isEqualTo(\"My note\");\n    assertThat(argumentCaptor.getValue().getNoteUserLogin()).isEqualTo(\"nicolas\");\n    assertThat(argumentCaptor.getValue().getNoteCreatedAt()).isEqualTo(now);\n    assertThat(argumentCaptor.getValue().getNoteUpdatedAt()).isEqualTo(now);\n\n    verify(session).commit();\n    verify(ruleRegistry).save(eq(rule), any(CharacteristicDto.class), any(CharacteristicDto.class), eq(ruleParams), eq(ruleTags));\n  }","id":13404,"modified_method":"@Test\n  public void update_rule_note_when_no_existing_note() throws Exception {\n    RuleDto rule = new RuleDto().setId(10).setNoteCreatedAt(null).setNoteData(null);\n\n    List<RuleParamDto> ruleParams = newArrayList(new RuleParamDto().setId(20).setName(\"max\").setDefaultValue(\"10\"));\n    when(ruleDao.selectParametersByRuleId(eq(10), eq(session))).thenReturn(ruleParams);\n    List<RuleRuleTagDto> ruleTags = newArrayList(new RuleRuleTagDto().setId(30L).setTag(\"style\").setType(RuleTagType.SYSTEM));\n    when(ruleDao.selectTagsByRuleIds(eq(10), eq(session))).thenReturn(ruleTags);\n\n    operations.updateRuleNote(rule, \"My note\", authorizedUserSession);\n\n    ArgumentCaptor<RuleDto> argumentCaptor = ArgumentCaptor.forClass(RuleDto.class);\n    verify(ruleDao).update(argumentCaptor.capture());\n    assertThat(argumentCaptor.getValue().getNoteData()).isEqualTo(\"My note\");\n    assertThat(argumentCaptor.getValue().getNoteUserLogin()).isEqualTo(\"nicolas\");\n    assertThat(argumentCaptor.getValue().getNoteCreatedAt()).isEqualTo(now);\n    assertThat(argumentCaptor.getValue().getNoteUpdatedAt()).isEqualTo(now);\n\n    verify(session).commit();\n    verify(ruleRegistry).reindex(eq(rule), eq(session));\n  }","commit_id":"7d0ab8027d1580abad035a84eb0065f0212e4ec7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void not_update_rule_if_same_sub_characteristic_and_function() throws Exception {\n    RuleDto dto = new RuleDto().setId(1).setRepositoryKey(\"squid\").setRuleKey(\"UselessImportCheck\")\n      .setSubCharacteristicId(2).setRemediationFunction(\"CONSTANT_ISSUE\").setRemediationOffset(\"10min\");\n    RuleKey ruleKey = RuleKey.of(\"squid\", \"UselessImportCheck\");\n\n    when(ruleDao.selectByKey(ruleKey, session)).thenReturn(dto);\n\n    CharacteristicDto subCharacteristic = new CharacteristicDto().setId(2).setKey(\"COMPILER\").setName(\"Compiler\").setParentId(1);\n    when(characteristicDao.selectByKey(\"COMPILER\", session)).thenReturn(subCharacteristic);\n\n    operations.updateRule(\n      new RuleChange().setRuleKey(ruleKey).setDebtCharacteristicKey(\"COMPILER\")\n        .setDebtRemediationFunction(\"CONSTANT_ISSUE\").setDebtRemediationOffset(\"10min\"),\n      authorizedUserSession\n    );\n\n    verify(ruleDao, never()).update(any(RuleDto.class), eq(session));\n    verify(session, never()).commit();\n    verify(ruleRegistry, never()).save(any(RuleDto.class), any(CharacteristicDto.class), any(CharacteristicDto.class), anyListOf(RuleParamDto.class), anyListOf(RuleRuleTagDto.class));\n  }","id":13405,"modified_method":"@Test\n  public void not_update_rule_if_same_sub_characteristic_and_function() throws Exception {\n    RuleDto dto = new RuleDto().setId(1).setRepositoryKey(\"squid\").setRuleKey(\"UselessImportCheck\")\n      .setSubCharacteristicId(2).setRemediationFunction(\"CONSTANT_ISSUE\").setRemediationOffset(\"10min\");\n    RuleKey ruleKey = RuleKey.of(\"squid\", \"UselessImportCheck\");\n\n    when(ruleDao.selectByKey(ruleKey, session)).thenReturn(dto);\n\n    CharacteristicDto subCharacteristic = new CharacteristicDto().setId(2).setKey(\"COMPILER\").setName(\"Compiler\").setParentId(1);\n    when(characteristicDao.selectByKey(\"COMPILER\", session)).thenReturn(subCharacteristic);\n\n    operations.updateRule(\n      new RuleChange().setRuleKey(ruleKey).setDebtCharacteristicKey(\"COMPILER\")\n        .setDebtRemediationFunction(\"CONSTANT_ISSUE\").setDebtRemediationOffset(\"10min\"),\n      authorizedUserSession\n    );\n\n    verify(ruleDao, never()).update(any(RuleDto.class), eq(session));\n    verify(session, never()).commit();\n    verify(ruleRegistry, never()).reindex(any(RuleDto.class), eq(session));\n  }","commit_id":"7d0ab8027d1580abad035a84eb0065f0212e4ec7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void fail_to_update_rule_on_unknown_sub_characteristic() throws Exception {\n    RuleDto dto = new RuleDto().setId(1).setRepositoryKey(\"squid\").setRuleKey(\"UselessImportCheck\")\n      .setSubCharacteristicId(2).setRemediationFunction(\"CONSTANT_ISSUE\").setRemediationOffset(\"10min\");\n    RuleKey ruleKey = RuleKey.of(\"squid\", \"UselessImportCheck\");\n\n    when(ruleDao.selectByKey(ruleKey, session)).thenReturn(dto);\n\n    when(characteristicDao.selectByKey(\"COMPILER\", session)).thenReturn(null);\n\n    try {\n      operations.updateRule(\n        new RuleChange().setRuleKey(ruleKey).setDebtCharacteristicKey(\"COMPILER\")\n          .setDebtRemediationFunction(\"LINEAR_OFFSET\").setDebtRemediationCoefficient(\"2h\").setDebtRemediationOffset(\"20min\"),\n        authorizedUserSession\n      );\n    } catch (Exception e) {\n      assertThat(e).isInstanceOf(NotFoundException.class);\n    }\n\n    verify(ruleDao, never()).update(any(RuleDto.class), eq(session));\n    verify(session, never()).commit();\n    verify(ruleRegistry, never()).save(any(RuleDto.class), any(CharacteristicDto.class), any(CharacteristicDto.class), anyListOf(RuleParamDto.class), anyListOf(RuleRuleTagDto.class));\n  }","id":13406,"modified_method":"@Test\n  public void fail_to_update_rule_on_unknown_sub_characteristic() throws Exception {\n    RuleDto dto = new RuleDto().setId(1).setRepositoryKey(\"squid\").setRuleKey(\"UselessImportCheck\")\n      .setSubCharacteristicId(2).setRemediationFunction(\"CONSTANT_ISSUE\").setRemediationOffset(\"10min\");\n    RuleKey ruleKey = RuleKey.of(\"squid\", \"UselessImportCheck\");\n\n    when(ruleDao.selectByKey(ruleKey, session)).thenReturn(dto);\n\n    when(characteristicDao.selectByKey(\"COMPILER\", session)).thenReturn(null);\n\n    try {\n      operations.updateRule(\n        new RuleChange().setRuleKey(ruleKey).setDebtCharacteristicKey(\"COMPILER\")\n          .setDebtRemediationFunction(\"LINEAR_OFFSET\").setDebtRemediationCoefficient(\"2h\").setDebtRemediationOffset(\"20min\"),\n        authorizedUserSession\n      );\n    } catch (Exception e) {\n      assertThat(e).isInstanceOf(NotFoundException.class);\n    }\n\n    verify(ruleDao, never()).update(any(RuleDto.class), eq(session));\n    verify(session, never()).commit();\n    verify(ruleRegistry, never()).reindex(any(RuleDto.class), eq(session));\n  }","commit_id":"7d0ab8027d1580abad035a84eb0065f0212e4ec7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void not_disable_characteristic_when_update_rule_if_already_disabled() throws Exception {\n    RuleDto dto = new RuleDto().setId(1).setRepositoryKey(\"squid\").setRuleKey(\"UselessImportCheck\").setSubCharacteristicId(-1);\n    RuleKey ruleKey = RuleKey.of(\"squid\", \"UselessImportCheck\");\n\n    when(ruleDao.selectByKey(ruleKey, session)).thenReturn(dto);\n\n    operations.updateRule(\n      new RuleChange().setRuleKey(ruleKey).setDebtCharacteristicKey(null),\n      authorizedUserSession\n    );\n\n    verify(ruleDao, never()).update(any(RuleDto.class), eq(session));\n    verify(session, never()).commit();\n    verify(ruleRegistry, never()).save(any(RuleDto.class), any(CharacteristicDto.class), any(CharacteristicDto.class), anyListOf(RuleParamDto.class), anyListOf(RuleRuleTagDto.class));\n  }","id":13407,"modified_method":"@Test\n  public void not_disable_characteristic_when_update_rule_if_already_disabled() throws Exception {\n    RuleDto dto = new RuleDto().setId(1).setRepositoryKey(\"squid\").setRuleKey(\"UselessImportCheck\").setSubCharacteristicId(-1);\n    RuleKey ruleKey = RuleKey.of(\"squid\", \"UselessImportCheck\");\n\n    when(ruleDao.selectByKey(ruleKey, session)).thenReturn(dto);\n\n    operations.updateRule(\n      new RuleChange().setRuleKey(ruleKey).setDebtCharacteristicKey(null),\n      authorizedUserSession\n    );\n\n    verify(ruleDao, never()).update(any(RuleDto.class), eq(session));\n    verify(session, never()).commit();\n    verify(ruleRegistry, never()).reindex(any(RuleDto.class), eq(session));\n  }","commit_id":"7d0ab8027d1580abad035a84eb0065f0212e4ec7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void delete_custom_rule() throws Exception {\n    final int ruleId = 11;\n    RuleDto rule = new RuleDto().setId(ruleId).setRepositoryKey(\"squid\").setRuleKey(\"XPath_1387869254\").setConfigKey(\"Xpath\").setUpdatedAt(DateUtils.parseDate(\"2013-12-23\"));\n    RuleParamDto param = new RuleParamDto().setId(21).setName(\"max\").setDefaultValue(\"20\");\n    when(ruleDao.selectParametersByRuleId(eq(ruleId), eq(session))).thenReturn(newArrayList(param));\n    ArrayList<RuleRuleTagDto> ruleTags = newArrayList(new RuleRuleTagDto().setId(30L).setTag(\"style\").setType(RuleTagType.SYSTEM));\n    when(ruleDao.selectTagsByRuleIds(eq(ruleId), eq(session))).thenReturn(ruleTags);\n\n    final int activeRuleId = 5;\n    ActiveRuleDto activeRule = new ActiveRuleDto().setId(activeRuleId).setProfileId(1).setRuleId(ruleId).setSeverity(Severity.MINOR);\n    when(activeRuleDao.selectByRuleId(ruleId)).thenReturn(newArrayList(activeRule));\n\n    operations.deleteCustomRule(rule, authorizedUserSession);\n\n    verify(ruleDao).update(ruleCaptor.capture(), eq(session));\n    assertThat(ruleCaptor.getValue().getStatus()).isEqualTo(Rule.STATUS_REMOVED);\n    assertThat(ruleCaptor.getValue().getUpdatedAt()).isEqualTo(now);\n\n    verify(ruleRegistry).save(eq(ruleCaptor.getValue()), any(CharacteristicDto.class), any(CharacteristicDto.class), eq(newArrayList(param)), eq(ruleTags));\n    verify(activeRuleDao).deleteParameters(eq(activeRuleId), eq(session));\n    verify(activeRuleDao).deleteFromRule(eq(ruleId), eq(session));\n    verify(session, times(2)).commit();\n    verify(esActiveRule).deleteActiveRules(newArrayList(activeRuleId));\n  }","id":13408,"modified_method":"@Test\n  public void delete_custom_rule() throws Exception {\n    final int ruleId = 11;\n    RuleDto rule = new RuleDto().setId(ruleId).setRepositoryKey(\"squid\").setRuleKey(\"XPath_1387869254\").setConfigKey(\"Xpath\").setUpdatedAt(DateUtils.parseDate(\"2013-12-23\"));\n    RuleParamDto param = new RuleParamDto().setId(21).setName(\"max\").setDefaultValue(\"20\");\n    when(ruleDao.selectParametersByRuleId(eq(ruleId), eq(session))).thenReturn(newArrayList(param));\n    ArrayList<RuleRuleTagDto> ruleTags = newArrayList(new RuleRuleTagDto().setId(30L).setTag(\"style\").setType(RuleTagType.SYSTEM));\n    when(ruleDao.selectTagsByRuleIds(eq(ruleId), eq(session))).thenReturn(ruleTags);\n\n    final int activeRuleId = 5;\n    ActiveRuleDto activeRule = new ActiveRuleDto().setId(activeRuleId).setProfileId(1).setRuleId(ruleId).setSeverity(Severity.MINOR);\n    when(activeRuleDao.selectByRuleId(ruleId)).thenReturn(newArrayList(activeRule));\n\n    operations.deleteCustomRule(rule, authorizedUserSession);\n\n    verify(ruleDao).update(ruleCaptor.capture(), eq(session));\n    assertThat(ruleCaptor.getValue().getStatus()).isEqualTo(Rule.STATUS_REMOVED);\n    assertThat(ruleCaptor.getValue().getUpdatedAt()).isEqualTo(now);\n\n    verify(ruleRegistry).reindex(eq(ruleCaptor.getValue()), eq(session));\n    verify(activeRuleDao).deleteParameters(eq(activeRuleId), eq(session));\n    verify(activeRuleDao).deleteFromRule(eq(ruleId), eq(session));\n    verify(session, times(2)).commit();\n    verify(esActiveRule).deleteActiveRules(newArrayList(activeRuleId));\n  }","commit_id":"7d0ab8027d1580abad035a84eb0065f0212e4ec7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void create_custom_rule() throws Exception {\n    RuleDto templateRule = new RuleDto().setId(10).setRepositoryKey(\"squid\").setRuleKey(\"AvoidCycle\").setConfigKey(\"Xpath\");\n    when(ruleDao.selectParametersByRuleId(eq(10), eq(session))).thenReturn(newArrayList(new RuleParamDto().setId(20).setName(\"max\").setDefaultValue(\"10\")));\n    when(ruleDao.selectTagsByRuleIds(eq(10), eq(session))).thenReturn(newArrayList(new RuleRuleTagDto().setId(30L).setTag(\"style\").setType(RuleTagType.SYSTEM)));\n\n    Map<String, String> paramsByKey = ImmutableMap.of(\"max\", \"20\");\n    RuleDto result = operations.createCustomRule(templateRule, \"My New Rule\", Severity.BLOCKER, \"Rule Description\", paramsByKey, authorizedUserSession);\n    assertThat(result).isNotNull();\n\n    ArgumentCaptor<RuleDto> ruleArgument = ArgumentCaptor.forClass(RuleDto.class);\n    verify(ruleDao).insert(ruleArgument.capture(), eq(session));\n    assertThat(ruleArgument.getValue().getParentId()).isEqualTo(10);\n    assertThat(ruleArgument.getValue().getName()).isEqualTo(\"My New Rule\");\n    assertThat(ruleArgument.getValue().getDescription()).isEqualTo(\"Rule Description\");\n    assertThat(ruleArgument.getValue().getSeverityString()).isEqualTo(Severity.BLOCKER);\n    assertThat(ruleArgument.getValue().getConfigKey()).isEqualTo(\"Xpath\");\n    assertThat(ruleArgument.getValue().getRepositoryKey()).isEqualTo(\"squid\");\n    assertThat(ruleArgument.getValue().getRuleKey()).startsWith(\"AvoidCycle\");\n    assertThat(ruleArgument.getValue().getStatus()).isEqualTo(\"READY\");\n    assertThat(ruleArgument.getValue().getCardinality()).isEqualTo(Cardinality.SINGLE);\n\n    ArgumentCaptor<RuleParamDto> ruleParamArgument = ArgumentCaptor.forClass(RuleParamDto.class);\n    verify(ruleDao).insert(ruleParamArgument.capture(), eq(session));\n    assertThat(ruleParamArgument.getValue().getName()).isEqualTo(\"max\");\n    assertThat(ruleParamArgument.getValue().getDefaultValue()).isEqualTo(\"20\");\n\n    ArgumentCaptor<RuleRuleTagDto> ruleTagArgument = ArgumentCaptor.forClass(RuleRuleTagDto.class);\n    verify(ruleDao).insert(ruleTagArgument.capture(), eq(session));\n    assertThat(ruleTagArgument.getValue().getTag()).isEqualTo(\"style\");\n    assertThat(ruleTagArgument.getValue().getType()).isEqualTo(RuleTagType.SYSTEM);\n\n    verify(session).commit();\n    verify(ruleRegistry).save(eq(ruleArgument.getValue()), isNull(CharacteristicDto.class), isNull(CharacteristicDto.class),\n      anyListOf(RuleParamDto.class), anyListOf(RuleRuleTagDto.class));\n  }","id":13409,"modified_method":"@Test\n  public void create_custom_rule() throws Exception {\n    RuleDto templateRule = new RuleDto().setId(10).setRepositoryKey(\"squid\").setRuleKey(\"AvoidCycle\").setConfigKey(\"Xpath\");\n    when(ruleDao.selectParametersByRuleId(eq(10), eq(session))).thenReturn(newArrayList(new RuleParamDto().setId(20).setName(\"max\").setDefaultValue(\"10\")));\n    when(ruleDao.selectTagsByRuleIds(eq(10), eq(session))).thenReturn(newArrayList(new RuleRuleTagDto().setId(30L).setTag(\"style\").setType(RuleTagType.SYSTEM)));\n\n    Map<String, String> paramsByKey = ImmutableMap.of(\"max\", \"20\");\n    RuleDto result = operations.createCustomRule(templateRule, \"My New Rule\", Severity.BLOCKER, \"Rule Description\", paramsByKey, authorizedUserSession);\n    assertThat(result).isNotNull();\n\n    ArgumentCaptor<RuleDto> ruleArgument = ArgumentCaptor.forClass(RuleDto.class);\n    verify(ruleDao).insert(ruleArgument.capture(), eq(session));\n    assertThat(ruleArgument.getValue().getParentId()).isEqualTo(10);\n    assertThat(ruleArgument.getValue().getName()).isEqualTo(\"My New Rule\");\n    assertThat(ruleArgument.getValue().getDescription()).isEqualTo(\"Rule Description\");\n    assertThat(ruleArgument.getValue().getSeverityString()).isEqualTo(Severity.BLOCKER);\n    assertThat(ruleArgument.getValue().getConfigKey()).isEqualTo(\"Xpath\");\n    assertThat(ruleArgument.getValue().getRepositoryKey()).isEqualTo(\"squid\");\n    assertThat(ruleArgument.getValue().getRuleKey()).startsWith(\"AvoidCycle\");\n    assertThat(ruleArgument.getValue().getStatus()).isEqualTo(\"READY\");\n    assertThat(ruleArgument.getValue().getCardinality()).isEqualTo(Cardinality.SINGLE);\n\n    ArgumentCaptor<RuleParamDto> ruleParamArgument = ArgumentCaptor.forClass(RuleParamDto.class);\n    verify(ruleDao).insert(ruleParamArgument.capture(), eq(session));\n    assertThat(ruleParamArgument.getValue().getName()).isEqualTo(\"max\");\n    assertThat(ruleParamArgument.getValue().getDefaultValue()).isEqualTo(\"20\");\n\n    ArgumentCaptor<RuleRuleTagDto> ruleTagArgument = ArgumentCaptor.forClass(RuleRuleTagDto.class);\n    verify(ruleDao).insert(ruleTagArgument.capture(), eq(session));\n    assertThat(ruleTagArgument.getValue().getTag()).isEqualTo(\"style\");\n    assertThat(ruleTagArgument.getValue().getType()).isEqualTo(RuleTagType.SYSTEM);\n\n    verify(session).commit();\n    verify(ruleRegistry).reindex(eq(ruleArgument.getValue()), eq(session));\n  }","commit_id":"7d0ab8027d1580abad035a84eb0065f0212e4ec7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void update_rule_note_when_already_note() throws Exception {\n    Date createdAt = DateUtils.parseDate(\"2013-12-20\");\n    RuleDto rule = new RuleDto().setId(10).setNoteCreatedAt(createdAt).setNoteData(\"My previous note\").setNoteUserLogin(\"nicolas\");\n\n    List<RuleParamDto> ruleParams = newArrayList(new RuleParamDto().setId(20).setName(\"max\").setDefaultValue(\"10\"));\n    when(ruleDao.selectParametersByRuleId(eq(10), eq(session))).thenReturn(ruleParams);\n    List<RuleRuleTagDto> ruleTags = newArrayList(new RuleRuleTagDto().setId(30L).setTag(\"style\").setType(RuleTagType.SYSTEM));\n    when(ruleDao.selectTagsByRuleIds(eq(10), eq(session))).thenReturn(ruleTags);\n\n    operations.updateRuleNote(rule, \"My new note\", MockUserSession.create().setLogin(\"guy\").setName(\"Guy\").setGlobalPermissions(GlobalPermissions.QUALITY_PROFILE_ADMIN));\n\n    ArgumentCaptor<RuleDto> argumentCaptor = ArgumentCaptor.forClass(RuleDto.class);\n    verify(ruleDao).update(argumentCaptor.capture());\n    assertThat(argumentCaptor.getValue().getNoteData()).isEqualTo(\"My new note\");\n    assertThat(argumentCaptor.getValue().getNoteUserLogin()).isEqualTo(\"nicolas\");\n    assertThat(argumentCaptor.getValue().getNoteCreatedAt()).isEqualTo(createdAt);\n    assertThat(argumentCaptor.getValue().getNoteUpdatedAt()).isEqualTo(now);\n\n    verify(session).commit();\n    verify(ruleRegistry).save(eq(rule), any(CharacteristicDto.class), any(CharacteristicDto.class), eq(ruleParams), eq(ruleTags));\n  }","id":13410,"modified_method":"@Test\n  public void update_rule_note_when_already_note() throws Exception {\n    Date createdAt = DateUtils.parseDate(\"2013-12-20\");\n    RuleDto rule = new RuleDto().setId(10).setNoteCreatedAt(createdAt).setNoteData(\"My previous note\").setNoteUserLogin(\"nicolas\");\n\n    List<RuleParamDto> ruleParams = newArrayList(new RuleParamDto().setId(20).setName(\"max\").setDefaultValue(\"10\"));\n    when(ruleDao.selectParametersByRuleId(eq(10), eq(session))).thenReturn(ruleParams);\n    List<RuleRuleTagDto> ruleTags = newArrayList(new RuleRuleTagDto().setId(30L).setTag(\"style\").setType(RuleTagType.SYSTEM));\n    when(ruleDao.selectTagsByRuleIds(eq(10), eq(session))).thenReturn(ruleTags);\n\n    operations.updateRuleNote(rule, \"My new note\", MockUserSession.create().setLogin(\"guy\").setName(\"Guy\").setGlobalPermissions(GlobalPermissions.QUALITY_PROFILE_ADMIN));\n\n    ArgumentCaptor<RuleDto> argumentCaptor = ArgumentCaptor.forClass(RuleDto.class);\n    verify(ruleDao).update(argumentCaptor.capture());\n    assertThat(argumentCaptor.getValue().getNoteData()).isEqualTo(\"My new note\");\n    assertThat(argumentCaptor.getValue().getNoteUserLogin()).isEqualTo(\"nicolas\");\n    assertThat(argumentCaptor.getValue().getNoteCreatedAt()).isEqualTo(createdAt);\n    assertThat(argumentCaptor.getValue().getNoteUpdatedAt()).isEqualTo(now);\n\n    verify(session).commit();\n    verify(ruleRegistry).reindex(eq(rule), eq(session));\n  }","commit_id":"7d0ab8027d1580abad035a84eb0065f0212e4ec7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void disable_characteristic_and_remove_remediation_function_when_update_rule_with_no_sub_characteristic() throws Exception {\n    RuleDto dto = new RuleDto().setId(1).setRepositoryKey(\"squid\").setRuleKey(\"UselessImportCheck\")\n      .setSubCharacteristicId(6).setRemediationFunction(\"CONSTANT_ISSUE\").setRemediationOffset(\"10min\");\n    RuleKey ruleKey = RuleKey.of(\"squid\", \"UselessImportCheck\");\n\n    when(ruleDao.selectByKey(ruleKey, session)).thenReturn(dto);\n\n    operations.updateRule(\n      new RuleChange().setRuleKey(ruleKey).setDebtCharacteristicKey(null),\n      authorizedUserSession\n    );\n\n    verify(ruleDao).update(ruleCaptor.capture(), eq(session));\n    RuleDto result = ruleCaptor.getValue();\n\n    assertThat(result.getId()).isEqualTo(1);\n    assertThat(result.getSubCharacteristicId()).isEqualTo(-1);\n    assertThat(result.getRemediationFunction()).isNull();\n    assertThat(result.getRemediationCoefficient()).isNull();\n    assertThat(result.getRemediationOffset()).isNull();\n    assertThat(result.getUpdatedAt()).isEqualTo(now);\n\n    verify(session).commit();\n    verify(ruleRegistry).save(eq(result), isNull(CharacteristicDto.class), isNull(CharacteristicDto.class), anyListOf(RuleParamDto.class), anyListOf(RuleRuleTagDto.class));\n  }","id":13411,"modified_method":"@Test\n  public void disable_characteristic_and_remove_remediation_function_when_update_rule_with_no_sub_characteristic() throws Exception {\n    RuleDto dto = new RuleDto().setId(1).setRepositoryKey(\"squid\").setRuleKey(\"UselessImportCheck\")\n      .setSubCharacteristicId(6).setRemediationFunction(\"CONSTANT_ISSUE\").setRemediationOffset(\"10min\");\n    RuleKey ruleKey = RuleKey.of(\"squid\", \"UselessImportCheck\");\n\n    when(ruleDao.selectByKey(ruleKey, session)).thenReturn(dto);\n\n    operations.updateRule(\n      new RuleChange().setRuleKey(ruleKey).setDebtCharacteristicKey(null),\n      authorizedUserSession\n    );\n\n    verify(ruleDao).update(ruleCaptor.capture(), eq(session));\n    RuleDto result = ruleCaptor.getValue();\n\n    assertThat(result.getId()).isEqualTo(1);\n    assertThat(result.getSubCharacteristicId()).isEqualTo(-1);\n    assertThat(result.getRemediationFunction()).isNull();\n    assertThat(result.getRemediationCoefficient()).isNull();\n    assertThat(result.getRemediationOffset()).isNull();\n    assertThat(result.getUpdatedAt()).isEqualTo(now);\n\n    verify(session).commit();\n    verify(ruleRegistry).reindex(eq(result), eq(session));\n  }","commit_id":"7d0ab8027d1580abad035a84eb0065f0212e4ec7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void update_rule() throws Exception {\n    RuleDto dto = new RuleDto().setId(1).setRepositoryKey(\"squid\").setRuleKey(\"UselessImportCheck\")\n      .setSubCharacteristicId(6).setRemediationFunction(\"CONSTANT_ISSUE\").setRemediationOffset(\"10min\");\n    RuleKey ruleKey = RuleKey.of(\"squid\", \"UselessImportCheck\");\n\n    when(ruleDao.selectByKey(ruleKey, session)).thenReturn(dto);\n\n    CharacteristicDto subCharacteristic = new CharacteristicDto().setId(2).setKey(\"COMPILER\").setName(\"Compiler\").setParentId(1);\n    when(characteristicDao.selectByKey(\"COMPILER\", session)).thenReturn(subCharacteristic);\n\n    // Call when reindexing rule in E/S\n    when(characteristicDao.selectById(2, session)).thenReturn(subCharacteristic);\n    CharacteristicDto characteristic = new CharacteristicDto().setId(1).setKey(\"PORTABILITY\").setName(\"Portability\").setOrder(2);\n    when(characteristicDao.selectById(1, session)).thenReturn(characteristic);\n\n    operations.updateRule(\n      new RuleChange().setRuleKey(ruleKey).setDebtCharacteristicKey(\"COMPILER\")\n        .setDebtRemediationFunction(\"LINEAR_OFFSET\").setDebtRemediationCoefficient(\"2h\").setDebtRemediationOffset(\"20min\"),\n      authorizedUserSession\n    );\n\n    verify(ruleDao).update(ruleCaptor.capture(), eq(session));\n    RuleDto result = ruleCaptor.getValue();\n\n    assertThat(result.getId()).isEqualTo(1);\n    assertThat(result.getSubCharacteristicId()).isEqualTo(2);\n    assertThat(result.getRemediationFunction()).isEqualTo(\"LINEAR_OFFSET\");\n    assertThat(result.getRemediationCoefficient()).isEqualTo(\"2h\");\n    assertThat(result.getRemediationOffset()).isEqualTo(\"20min\");\n    assertThat(result.getUpdatedAt()).isEqualTo(now);\n\n    verify(session).commit();\n    verify(ruleRegistry).save(eq(result), eq(characteristic), eq(subCharacteristic), anyListOf(RuleParamDto.class), anyListOf(RuleRuleTagDto.class));\n  }","id":13412,"modified_method":"@Test\n  public void update_rule() throws Exception {\n    RuleDto dto = new RuleDto().setId(1).setRepositoryKey(\"squid\").setRuleKey(\"UselessImportCheck\")\n      .setSubCharacteristicId(6).setRemediationFunction(\"CONSTANT_ISSUE\").setRemediationOffset(\"10min\");\n    RuleKey ruleKey = RuleKey.of(\"squid\", \"UselessImportCheck\");\n\n    when(ruleDao.selectByKey(ruleKey, session)).thenReturn(dto);\n\n    CharacteristicDto subCharacteristic = new CharacteristicDto().setId(2).setKey(\"COMPILER\").setName(\"Compiler\").setParentId(1);\n    when(characteristicDao.selectByKey(\"COMPILER\", session)).thenReturn(subCharacteristic);\n\n    // Call when reindexing rule in E/S\n    when(characteristicDao.selectById(2, session)).thenReturn(subCharacteristic);\n    CharacteristicDto characteristic = new CharacteristicDto().setId(1).setKey(\"PORTABILITY\").setName(\"Portability\").setOrder(2);\n    when(characteristicDao.selectById(1, session)).thenReturn(characteristic);\n\n    operations.updateRule(\n      new RuleChange().setRuleKey(ruleKey).setDebtCharacteristicKey(\"COMPILER\")\n        .setDebtRemediationFunction(\"LINEAR_OFFSET\").setDebtRemediationCoefficient(\"2h\").setDebtRemediationOffset(\"20min\"),\n      authorizedUserSession\n    );\n\n    verify(ruleDao).update(ruleCaptor.capture(), eq(session));\n    RuleDto result = ruleCaptor.getValue();\n\n    assertThat(result.getId()).isEqualTo(1);\n    assertThat(result.getSubCharacteristicId()).isEqualTo(2);\n    assertThat(result.getRemediationFunction()).isEqualTo(\"LINEAR_OFFSET\");\n    assertThat(result.getRemediationCoefficient()).isEqualTo(\"2h\");\n    assertThat(result.getRemediationOffset()).isEqualTo(\"20min\");\n    assertThat(result.getUpdatedAt()).isEqualTo(now);\n\n    verify(session).commit();\n    verify(ruleRegistry).reindex(eq(result), eq(session));\n  }","commit_id":"7d0ab8027d1580abad035a84eb0065f0212e4ec7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void fail_to_update_rule_on_unknown_rule() throws Exception {\n    RuleKey ruleKey = RuleKey.of(\"squid\", \"UselessImportCheck\");\n\n    when(ruleDao.selectByKey(ruleKey, session)).thenReturn(null);\n\n    try {\n      operations.updateRule(\n        new RuleChange().setRuleKey(ruleKey).setDebtCharacteristicKey(\"COMPILER\")\n          .setDebtRemediationFunction(\"LINEAR_OFFSET\").setDebtRemediationCoefficient(\"2h\").setDebtRemediationOffset(\"20min\"),\n        authorizedUserSession\n      );\n    } catch (Exception e) {\n      assertThat(e).isInstanceOf(NotFoundException.class);\n    }\n\n    verify(ruleDao, never()).update(any(RuleDto.class), eq(session));\n    verify(session, never()).commit();\n    verify(ruleRegistry, never()).save(any(RuleDto.class), any(CharacteristicDto.class), any(CharacteristicDto.class), anyListOf(RuleParamDto.class), anyListOf(RuleRuleTagDto.class));\n  }","id":13413,"modified_method":"@Test\n  public void fail_to_update_rule_on_unknown_rule() throws Exception {\n    RuleKey ruleKey = RuleKey.of(\"squid\", \"UselessImportCheck\");\n\n    when(ruleDao.selectByKey(ruleKey, session)).thenReturn(null);\n\n    try {\n      operations.updateRule(\n        new RuleChange().setRuleKey(ruleKey).setDebtCharacteristicKey(\"COMPILER\")\n          .setDebtRemediationFunction(\"LINEAR_OFFSET\").setDebtRemediationCoefficient(\"2h\").setDebtRemediationOffset(\"20min\"),\n        authorizedUserSession\n      );\n    } catch (Exception e) {\n      assertThat(e).isInstanceOf(NotFoundException.class);\n    }\n\n    verify(ruleDao, never()).update(any(RuleDto.class), eq(session));\n    verify(session, never()).commit();\n    verify(ruleRegistry, never()).reindex(any(RuleDto.class), eq(session));\n  }","commit_id":"7d0ab8027d1580abad035a84eb0065f0212e4ec7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public String[] reindex(Collection<RuleDto> rules, SqlSession session) {\n    Multimap<Integer, RuleParamDto> paramsByRuleId = ArrayListMultimap.create();\n    Multimap<Integer, RuleRuleTagDto> tagsByRuleId = ArrayListMultimap.create();\n    Map<Integer, CharacteristicDto> characteristicsById = newHashMap();\n\n    List<Integer> ruleIds = newArrayList();\n    Collection<Integer> subCharacteristicIds = newHashSet();\n    for (RuleDto ruleDto : rules) {\n      ruleIds.add(ruleDto.getId());\n      if (ruleDto.getDefaultSubCharacteristicId() != null) {\n        subCharacteristicIds.add(ruleDto.getDefaultSubCharacteristicId());\n      }\n      if (ruleDto.getSubCharacteristicId() != null) {\n        subCharacteristicIds.add(ruleDto.getSubCharacteristicId());\n      }\n    }\n\n    List<CharacteristicDto> allCharacteristicDtos = characteristicDao.selectCharacteristicsByIds(subCharacteristicIds, session);\n    Collection<Integer> characteristicIds = newHashSet();\n    for (CharacteristicDto subCharacteristicDto : allCharacteristicDtos) {\n      characteristicIds.add(subCharacteristicDto.getParentId());\n    }\n    allCharacteristicDtos.addAll(characteristicDao.selectCharacteristicsByIds(characteristicIds, session));\n\n    for (RuleParamDto paramDto : ruleDao.selectParametersByRuleIds(ruleIds, session)) {\n      paramsByRuleId.put(paramDto.getRuleId(), paramDto);\n    }\n    for (RuleRuleTagDto tagDto : ruleDao.selectTagsByRuleIds(ruleIds, session)) {\n      tagsByRuleId.put(tagDto.getRuleId(), tagDto);\n    }\n    for (CharacteristicDto characteristicDto : allCharacteristicDtos) {\n      characteristicsById.put(characteristicDto.getId(), characteristicDto);\n    }\n    return bulkIndexRules(rules, characteristicsById, paramsByRuleId, tagsByRuleId);\n  }","id":13414,"modified_method":"/**\n   * Reindex a given list of rules\n   */\n  public String[] reindex(Collection<RuleDto> rules, SqlSession session) {\n    Multimap<Integer, RuleParamDto> paramsByRuleId = ArrayListMultimap.create();\n    Multimap<Integer, RuleRuleTagDto> tagsByRuleId = ArrayListMultimap.create();\n    Map<Integer, CharacteristicDto> characteristicsById = newHashMap();\n\n    List<Integer> ruleIds = newArrayList();\n    Collection<Integer> subCharacteristicIds = newHashSet();\n    for (RuleDto ruleDto : rules) {\n      ruleIds.add(ruleDto.getId());\n      if (ruleDto.getDefaultSubCharacteristicId() != null) {\n        subCharacteristicIds.add(ruleDto.getDefaultSubCharacteristicId());\n      }\n      if (ruleDto.getSubCharacteristicId() != null) {\n        subCharacteristicIds.add(ruleDto.getSubCharacteristicId());\n      }\n    }\n\n    List<CharacteristicDto> allCharacteristicDtos = characteristicDao.selectCharacteristicsByIds(subCharacteristicIds, session);\n    Collection<Integer> characteristicIds = newHashSet();\n    for (CharacteristicDto subCharacteristicDto : allCharacteristicDtos) {\n      characteristicIds.add(subCharacteristicDto.getParentId());\n    }\n    allCharacteristicDtos.addAll(characteristicDao.selectCharacteristicsByIds(characteristicIds, session));\n\n    for (RuleParamDto paramDto : ruleDao.selectParametersByRuleIds(ruleIds, session)) {\n      paramsByRuleId.put(paramDto.getRuleId(), paramDto);\n    }\n    for (RuleRuleTagDto tagDto : ruleDao.selectTagsByRuleIds(ruleIds, session)) {\n      tagsByRuleId.put(tagDto.getRuleId(), tagDto);\n    }\n    for (CharacteristicDto characteristicDto : allCharacteristicDtos) {\n      characteristicsById.put(characteristicDto.getId(), characteristicDto);\n    }\n    return bulkIndexRules(rules, characteristicsById, paramsByRuleId, tagsByRuleId);\n  }","commit_id":"7d0ab8027d1580abad035a84eb0065f0212e4ec7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void index_overridden_characteristic_if_both_default_and_overridden_characteristics_exists() {\n    when(ruleDao.selectEnablesAndNonManual(session)).thenReturn(newArrayList(\n      new RuleDto().setId(10).setRepositoryKey(\"repo\").setRuleKey(\"key1\").setSeverity(Severity.MINOR)\n        // default and overridden debt values are set\n        .setDefaultSubCharacteristicId(11).setDefaultRemediationFunction(\"LINEAR\").setDefaultRemediationCoefficient(\"2h\")\n        .setSubCharacteristicId(13).setRemediationFunction(\"LINEAR_OFFSET\").setRemediationCoefficient(\"1h\").setRemediationOffset(\"15min\")\n    ));\n\n    when(characteristicDao.selectCharacteristicsByIds(newHashSet(11, 13), session)).thenReturn(newArrayList(\n      new CharacteristicDto().setId(11).setKey(\"MODULARITY\").setName(\"Modularity\").setParentId(10),\n      new CharacteristicDto().setId(13).setKey(\"COMPILER\").setName(\"Compiler\").setParentId(12)\n    ));\n    when(characteristicDao.selectCharacteristicsByIds(newHashSet(10, 12), session)).thenReturn(newArrayList(\n      new CharacteristicDto().setId(10).setKey(\"REUSABILITY\").setName(\"Reusability\"),\n      new CharacteristicDto().setId(12).setKey(\"PORTABILITY\").setName(\"Portability\")\n    ));\n\n    registry.reindex();\n\n    Map<String, Object> ruleDocument = esSetup.client().prepareGet(\"rules\", \"rule\", Integer.toString(10)).execute().actionGet().getSourceAsMap();\n    assertThat(ruleDocument.get(RuleDocument.FIELD_CHARACTERISTIC_ID)).isEqualTo(12);\n    assertThat(ruleDocument.get(RuleDocument.FIELD_CHARACTERISTIC_KEY)).isEqualTo(\"PORTABILITY\");\n    assertThat(ruleDocument.get(RuleDocument.FIELD_CHARACTERISTIC_NAME)).isEqualTo(\"Portability\");\n    assertThat(ruleDocument.get(RuleDocument.FIELD_SUB_CHARACTERISTIC_ID)).isEqualTo(13);\n    assertThat(ruleDocument.get(RuleDocument.FIELD_SUB_CHARACTERISTIC_KEY)).isEqualTo(\"COMPILER\");\n    assertThat(ruleDocument.get(RuleDocument.FIELD_SUB_CHARACTERISTIC_NAME)).isEqualTo(\"Compiler\");\n\n    assertThat(ruleDocument.get(RuleDocument.FIELD_REMEDIATION_FUNCTION)).isEqualTo(\"LINEAR_OFFSET\");\n    assertThat(ruleDocument.get(RuleDocument.FIELD_REMEDIATION_COEFFICIENT)).isEqualTo(\"1h\");\n    assertThat(ruleDocument.get(RuleDocument.FIELD_REMEDIATION_OFFSET)).isEqualTo(\"15min\");\n  }","id":13415,"modified_method":"@Test\n  public void index_overridden_characteristic_if_both_default_and_overridden_characteristics_exists_when_indexing_rules() {\n    when(ruleDao.selectEnablesAndNonManual(session)).thenReturn(newArrayList(\n      new RuleDto().setId(10).setRepositoryKey(\"repo\").setRuleKey(\"key1\").setSeverity(Severity.MINOR)\n        // default and overridden debt values are set\n        .setDefaultSubCharacteristicId(11).setDefaultRemediationFunction(\"LINEAR\").setDefaultRemediationCoefficient(\"2h\")\n        .setSubCharacteristicId(13).setRemediationFunction(\"LINEAR_OFFSET\").setRemediationCoefficient(\"1h\").setRemediationOffset(\"15min\")\n    ));\n\n    // Characteristics\n    when(characteristicDao.selectCharacteristicsByIds(newHashSet(10, 12), session)).thenReturn(newArrayList(\n      new CharacteristicDto().setId(10).setKey(\"REUSABILITY\").setName(\"Reusability\"),\n      new CharacteristicDto().setId(12).setKey(\"PORTABILITY\").setName(\"Portability\")\n    ));\n\n    // Sub-characteristics\n    when(characteristicDao.selectCharacteristicsByIds(newHashSet(11, 13), session)).thenReturn(newArrayList(\n      new CharacteristicDto().setId(11).setKey(\"MODULARITY\").setName(\"Modularity\").setParentId(10),\n      new CharacteristicDto().setId(13).setKey(\"COMPILER\").setName(\"Compiler\").setParentId(12)\n    ));\n\n    registry.reindex();\n\n    Map<String, Object> ruleDocument = esSetup.client().prepareGet(\"rules\", \"rule\", Integer.toString(10)).execute().actionGet().getSourceAsMap();\n    assertThat(ruleDocument.get(RuleDocument.FIELD_CHARACTERISTIC_ID)).isEqualTo(12);\n    assertThat(ruleDocument.get(RuleDocument.FIELD_CHARACTERISTIC_KEY)).isEqualTo(\"PORTABILITY\");\n    assertThat(ruleDocument.get(RuleDocument.FIELD_CHARACTERISTIC_NAME)).isEqualTo(\"Portability\");\n    assertThat(ruleDocument.get(RuleDocument.FIELD_SUB_CHARACTERISTIC_ID)).isEqualTo(13);\n    assertThat(ruleDocument.get(RuleDocument.FIELD_SUB_CHARACTERISTIC_KEY)).isEqualTo(\"COMPILER\");\n    assertThat(ruleDocument.get(RuleDocument.FIELD_SUB_CHARACTERISTIC_NAME)).isEqualTo(\"Compiler\");\n\n    assertThat(ruleDocument.get(RuleDocument.FIELD_REMEDIATION_FUNCTION)).isEqualTo(\"LINEAR_OFFSET\");\n    assertThat(ruleDocument.get(RuleDocument.FIELD_REMEDIATION_COEFFICIENT)).isEqualTo(\"1h\");\n    assertThat(ruleDocument.get(RuleDocument.FIELD_REMEDIATION_OFFSET)).isEqualTo(\"15min\");\n  }","commit_id":"7d0ab8027d1580abad035a84eb0065f0212e4ec7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void index_rules() {\n    when(ruleDao.selectEnablesAndNonManual(session)).thenReturn(newArrayList(\n      new RuleDto().setId(3).setRepositoryKey(\"repo\").setRuleKey(\"key\").setSeverity(Severity.MINOR).setNoteData(\"noteData\").setNoteUserLogin(\"userLogin\")\n        .setDefaultSubCharacteristicId(11).setDefaultRemediationFunction(\"LINEAR_OFFSET\").setDefaultRemediationCoefficient(\"1h\").setDefaultRemediationOffset(\"15min\")\n    ));\n\n    when(ruleDao.selectParametersByRuleIds(newArrayList(3), session)).thenReturn(newArrayList(\n      new RuleParamDto().setRuleId(3).setName(\"name\")\n    ));\n\n    when(ruleDao.selectTagsByRuleIds(newArrayList(3), session)).thenReturn(newArrayList(\n      new RuleRuleTagDto().setRuleId(3).setTag(\"tag1\").setType(RuleTagType.SYSTEM),\n      new RuleRuleTagDto().setRuleId(3).setTag(\"tag2\").setType(RuleTagType.SYSTEM),\n      new RuleRuleTagDto().setRuleId(3).setTag(\"tag\").setType(RuleTagType.ADMIN)));\n\n    when(characteristicDao.selectCharacteristicsByIds(newHashSet(11), session)).thenReturn(newArrayList(\n      new CharacteristicDto().setId(11).setKey(\"MODULARITY\").setName(\"Modularity\").setParentId(10)));\n    when(characteristicDao.selectCharacteristicsByIds(newHashSet(10), session)).thenReturn(newArrayList(\n      new CharacteristicDto().setId(10).setKey(\"REUSABILITY\").setName(\"Reusability\")));\n\n    registry.reindex();\n\n    Map<String, Object> ruleDocument = esSetup.client().prepareGet(\"rules\", \"rule\", Integer.toString(3)).execute().actionGet().getSourceAsMap();\n    assertThat(ruleDocument.get(RuleDocument.FIELD_ID)).isEqualTo(3);\n    assertThat(ruleDocument.get(RuleDocument.FIELD_REPOSITORY_KEY)).isEqualTo(\"repo\");\n    assertThat(ruleDocument.get(RuleDocument.FIELD_KEY)).isEqualTo(\"key\");\n    assertThat(ruleDocument.get(RuleDocument.FIELD_SEVERITY)).isEqualTo(\"MINOR\");\n    assertThat(ruleDocument.get(RuleDocument.FIELD_NOTE)).isNotNull();\n\n    assertThat((List<String>) ruleDocument.get(RuleDocument.FIELD_PARAMS)).hasSize(1);\n    assertThat((List<String>) ruleDocument.get(RuleDocument.FIELD_SYSTEM_TAGS)).hasSize(2);\n    assertThat((List<String>) ruleDocument.get(RuleDocument.FIELD_ADMIN_TAGS)).hasSize(1);\n\n    assertThat(ruleDocument.get(RuleDocument.FIELD_CHARACTERISTIC_ID)).isEqualTo(10);\n    assertThat(ruleDocument.get(RuleDocument.FIELD_CHARACTERISTIC_KEY)).isEqualTo(\"REUSABILITY\");\n    assertThat(ruleDocument.get(RuleDocument.FIELD_CHARACTERISTIC_NAME)).isEqualTo(\"Reusability\");\n    assertThat(ruleDocument.get(RuleDocument.FIELD_SUB_CHARACTERISTIC_ID)).isEqualTo(11);\n    assertThat(ruleDocument.get(RuleDocument.FIELD_SUB_CHARACTERISTIC_KEY)).isEqualTo(\"MODULARITY\");\n    assertThat(ruleDocument.get(RuleDocument.FIELD_SUB_CHARACTERISTIC_NAME)).isEqualTo(\"Modularity\");\n    assertThat(ruleDocument.get(RuleDocument.FIELD_REMEDIATION_FUNCTION)).isEqualTo(\"LINEAR_OFFSET\");\n    assertThat(ruleDocument.get(RuleDocument.FIELD_REMEDIATION_COEFFICIENT)).isEqualTo(\"1h\");\n    assertThat(ruleDocument.get(RuleDocument.FIELD_REMEDIATION_OFFSET)).isEqualTo(\"15min\");\n  }","id":13416,"modified_method":"@Test\n  public void index_new_rules() {\n    when(ruleDao.selectEnablesAndNonManual(session)).thenReturn(newArrayList(\n      new RuleDto().setId(3).setRepositoryKey(\"repo\").setRuleKey(\"key\").setSeverity(Severity.MINOR).setNoteData(\"noteData\").setNoteUserLogin(\"userLogin\")\n        .setDefaultSubCharacteristicId(11).setDefaultRemediationFunction(\"LINEAR_OFFSET\").setDefaultRemediationCoefficient(\"1h\").setDefaultRemediationOffset(\"15min\")\n    ));\n\n    when(ruleDao.selectParametersByRuleIds(newArrayList(3), session)).thenReturn(newArrayList(\n      new RuleParamDto().setRuleId(3).setName(\"name\")\n    ));\n\n    when(ruleDao.selectTagsByRuleIds(newArrayList(3), session)).thenReturn(newArrayList(\n      new RuleRuleTagDto().setRuleId(3).setTag(\"tag1\").setType(RuleTagType.SYSTEM),\n      new RuleRuleTagDto().setRuleId(3).setTag(\"tag2\").setType(RuleTagType.SYSTEM),\n      new RuleRuleTagDto().setRuleId(3).setTag(\"tag\").setType(RuleTagType.ADMIN)));\n\n    when(characteristicDao.selectCharacteristicsByIds(newHashSet(11), session)).thenReturn(newArrayList(\n      new CharacteristicDto().setId(11).setKey(\"MODULARITY\").setName(\"Modularity\").setParentId(10)));\n    when(characteristicDao.selectCharacteristicsByIds(newHashSet(10), session)).thenReturn(newArrayList(\n      new CharacteristicDto().setId(10).setKey(\"REUSABILITY\").setName(\"Reusability\")));\n\n    registry.reindex();\n\n    Map<String, Object> ruleDocument = esSetup.client().prepareGet(\"rules\", \"rule\", Integer.toString(3)).execute().actionGet().getSourceAsMap();\n    assertThat(ruleDocument.get(RuleDocument.FIELD_ID)).isEqualTo(3);\n    assertThat(ruleDocument.get(RuleDocument.FIELD_REPOSITORY_KEY)).isEqualTo(\"repo\");\n    assertThat(ruleDocument.get(RuleDocument.FIELD_KEY)).isEqualTo(\"key\");\n    assertThat(ruleDocument.get(RuleDocument.FIELD_SEVERITY)).isEqualTo(\"MINOR\");\n    assertThat(ruleDocument.get(RuleDocument.FIELD_NOTE)).isNotNull();\n\n    assertThat((List<String>) ruleDocument.get(RuleDocument.FIELD_PARAMS)).hasSize(1);\n    assertThat((List<String>) ruleDocument.get(RuleDocument.FIELD_SYSTEM_TAGS)).hasSize(2);\n    assertThat((List<String>) ruleDocument.get(RuleDocument.FIELD_ADMIN_TAGS)).hasSize(1);\n\n    assertThat(ruleDocument.get(RuleDocument.FIELD_CHARACTERISTIC_ID)).isEqualTo(10);\n    assertThat(ruleDocument.get(RuleDocument.FIELD_CHARACTERISTIC_KEY)).isEqualTo(\"REUSABILITY\");\n    assertThat(ruleDocument.get(RuleDocument.FIELD_CHARACTERISTIC_NAME)).isEqualTo(\"Reusability\");\n    assertThat(ruleDocument.get(RuleDocument.FIELD_SUB_CHARACTERISTIC_ID)).isEqualTo(11);\n    assertThat(ruleDocument.get(RuleDocument.FIELD_SUB_CHARACTERISTIC_KEY)).isEqualTo(\"MODULARITY\");\n    assertThat(ruleDocument.get(RuleDocument.FIELD_SUB_CHARACTERISTIC_NAME)).isEqualTo(\"Modularity\");\n    assertThat(ruleDocument.get(RuleDocument.FIELD_REMEDIATION_FUNCTION)).isEqualTo(\"LINEAR_OFFSET\");\n    assertThat(ruleDocument.get(RuleDocument.FIELD_REMEDIATION_COEFFICIENT)).isEqualTo(\"1h\");\n    assertThat(ruleDocument.get(RuleDocument.FIELD_REMEDIATION_OFFSET)).isEqualTo(\"15min\");\n  }","commit_id":"7d0ab8027d1580abad035a84eb0065f0212e4ec7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void index_overridden_function_if_both_default_and_overridden_functions_exists() {\n    when(ruleDao.selectEnablesAndNonManual(session)).thenReturn(newArrayList(\n      new RuleDto().setId(10).setRepositoryKey(\"repo\").setRuleKey(\"key1\").setSeverity(Severity.MINOR)\n        // default and overridden debt values are set\n        .setDefaultSubCharacteristicId(11).setDefaultRemediationFunction(\"CONSTANT_ISSUE\").setDefaultRemediationOffset(\"15min\")\n        .setSubCharacteristicId(11).setRemediationFunction(\"LINEAR\").setRemediationCoefficient(\"1h\")\n    ));\n\n    when(characteristicDao.selectCharacteristicsByIds(newHashSet(11), session)).thenReturn(newArrayList(\n      new CharacteristicDto().setId(11).setKey(\"MODULARITY\").setName(\"Modularity\").setParentId(10)\n    ));\n    when(characteristicDao.selectCharacteristicsByIds(newHashSet(10), session)).thenReturn(newArrayList(\n      new CharacteristicDto().setId(10).setKey(\"REUSABILITY\").setName(\"Reusability\")\n    ));\n\n    registry.reindex();\n\n    Map<String, Object> ruleDocument = esSetup.client().prepareGet(\"rules\", \"rule\", Integer.toString(10)).execute().actionGet().getSourceAsMap();\n    assertThat(ruleDocument.get(RuleDocument.FIELD_CHARACTERISTIC_ID)).isEqualTo(10);\n    assertThat(ruleDocument.get(RuleDocument.FIELD_CHARACTERISTIC_KEY)).isEqualTo(\"REUSABILITY\");\n    assertThat(ruleDocument.get(RuleDocument.FIELD_CHARACTERISTIC_NAME)).isEqualTo(\"Reusability\");\n    assertThat(ruleDocument.get(RuleDocument.FIELD_SUB_CHARACTERISTIC_ID)).isEqualTo(11);\n    assertThat(ruleDocument.get(RuleDocument.FIELD_SUB_CHARACTERISTIC_KEY)).isEqualTo(\"MODULARITY\");\n    assertThat(ruleDocument.get(RuleDocument.FIELD_SUB_CHARACTERISTIC_NAME)).isEqualTo(\"Modularity\");\n\n    assertThat(ruleDocument.get(RuleDocument.FIELD_REMEDIATION_FUNCTION)).isEqualTo(\"LINEAR\");\n    assertThat(ruleDocument.get(RuleDocument.FIELD_REMEDIATION_COEFFICIENT)).isEqualTo(\"1h\");\n    assertThat(ruleDocument.get(RuleDocument.FIELD_REMEDIATION_OFFSET)).isNull();\n  }","id":13417,"modified_method":"@Test\n  public void index_overridden_function_if_both_default_and_overridden_functions_exists_when_indexing_rules() {\n    when(ruleDao.selectEnablesAndNonManual(session)).thenReturn(newArrayList(\n      new RuleDto().setId(10).setRepositoryKey(\"repo\").setRuleKey(\"key1\").setSeverity(Severity.MINOR)\n        // default and overridden debt values are set\n        .setDefaultSubCharacteristicId(11).setDefaultRemediationFunction(\"CONSTANT_ISSUE\").setDefaultRemediationOffset(\"15min\")\n        .setSubCharacteristicId(11).setRemediationFunction(\"LINEAR\").setRemediationCoefficient(\"1h\")\n    ));\n\n    when(characteristicDao.selectCharacteristicsByIds(newHashSet(11), session)).thenReturn(newArrayList(\n      new CharacteristicDto().setId(11).setKey(\"MODULARITY\").setName(\"Modularity\").setParentId(10)\n    ));\n    when(characteristicDao.selectCharacteristicsByIds(newHashSet(10), session)).thenReturn(newArrayList(\n      new CharacteristicDto().setId(10).setKey(\"REUSABILITY\").setName(\"Reusability\")\n    ));\n\n    registry.reindex();\n\n    Map<String, Object> ruleDocument = esSetup.client().prepareGet(\"rules\", \"rule\", Integer.toString(10)).execute().actionGet().getSourceAsMap();\n    assertThat(ruleDocument.get(RuleDocument.FIELD_CHARACTERISTIC_ID)).isEqualTo(10);\n    assertThat(ruleDocument.get(RuleDocument.FIELD_CHARACTERISTIC_KEY)).isEqualTo(\"REUSABILITY\");\n    assertThat(ruleDocument.get(RuleDocument.FIELD_CHARACTERISTIC_NAME)).isEqualTo(\"Reusability\");\n    assertThat(ruleDocument.get(RuleDocument.FIELD_SUB_CHARACTERISTIC_ID)).isEqualTo(11);\n    assertThat(ruleDocument.get(RuleDocument.FIELD_SUB_CHARACTERISTIC_KEY)).isEqualTo(\"MODULARITY\");\n    assertThat(ruleDocument.get(RuleDocument.FIELD_SUB_CHARACTERISTIC_NAME)).isEqualTo(\"Modularity\");\n\n    assertThat(ruleDocument.get(RuleDocument.FIELD_REMEDIATION_FUNCTION)).isEqualTo(\"LINEAR\");\n    assertThat(ruleDocument.get(RuleDocument.FIELD_REMEDIATION_COEFFICIENT)).isEqualTo(\"1h\");\n    assertThat(ruleDocument.get(RuleDocument.FIELD_REMEDIATION_OFFSET)).isNull();\n  }","commit_id":"7d0ab8027d1580abad035a84eb0065f0212e4ec7","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"/**\n     * Builds the menu extension using the passed plugin.\n     * \n     * @param plugin the plugin to use for the creation of this menu extension.\n     */\n    public ImageMenuExtension(final ImagePlugin plugin)\n    {\n        super(\"menu\");\n        this.plugin = plugin;\n\n        MenuItem insertImage =\n            new MenuItem(Strings.INSTANCE.imageInsertImage(), new com.google.gwt.user.client.Command()\n            {\n                public void execute()\n                {\n                    plugin.onImage();\n                }\n            });\n\n        createImageMenus = new ArrayList<UIObject>();\n        createImageMenus.add(insertImage);\n\n        MenuItem editImage = new MenuItem(Strings.INSTANCE.imageEditImage(), new com.google.gwt.user.client.Command()\n        {\n            public void execute()\n            {\n                plugin.onImage();\n            }\n        });\n\n        MenuItem removeImage =\n            new MenuItem(Strings.INSTANCE.imageRemoveImage(), new com.google.gwt.user.client.Command()\n            {\n                public void execute()\n                {\n                    plugin.onImageRemove();\n                }\n            });\n\n        editImageMenus = new ArrayList<UIObject>();\n        editImageMenus.add(editImage);\n        editImageMenus.add(removeImage);\n\n        submenu = new MenuBar(true);\n        submenu.setAnimationEnabled(false);\n        submenu.addAll(createImageMenus);\n\n        menu = new MenuItem(Strings.INSTANCE.image(), submenu);\n        menu.setIcon(Images.INSTANCE.image());\n        menu.addMenuListener(this);\n\n        addFeature(ImagePluginFactory.getInstance().getPluginName(), menu);\n    }","id":13418,"modified_method":"/**\n     * Builds the menu extension using the passed plugin.\n     * \n     * @param plugin the plugin to use for the creation of this menu extension.\n     */\n    public ImageMenuExtension(final ImagePlugin plugin)\n    {\n        super(\"menu\");\n\n        this.plugin = plugin;\n\n        insert = createMenuItem(Strings.INSTANCE.imageInsertImage(), null, new com.google.gwt.user.client.Command()\n        {\n            public void execute()\n            {\n                plugin.onImage();\n            }\n        });\n        edit = createMenuItem(Strings.INSTANCE.imageEditImage(), null, new com.google.gwt.user.client.Command()\n        {\n            public void execute()\n            {\n                plugin.onImage();\n            }\n        });\n        remove = createMenuItem(Strings.INSTANCE.imageRemoveImage(), null, new com.google.gwt.user.client.Command()\n        {\n            public void execute()\n            {\n                plugin.onImageRemove();\n            }\n        });\n        MenuItem imageMenu = createMenuItem(Strings.INSTANCE.image(), Images.INSTANCE.image());\n\n        addFeature(ImagePluginFactory.getInstance().getPluginName(), imageMenu);\n        addFeature(\"imageInsert\", insert);\n        addFeature(\"imageEdit\", edit);\n        addFeature(\"imageRemove\", remove);\n    }","commit_id":"c3d3d107bab2bca1b83b1fb5a08a46b1a0c8bab3","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see AbstractPlugin#init(XRichTextArea, Config)\n     */\n    public void init(RichTextArea textArea, Config config)\n    {\n        super.init(textArea, config);\n\n        // register the custom command\n        textArea.getCommandManager().registerCommand(Command.INSERT_IMAGE, new InsertImageExecutable(textArea));\n\n        // add the toolbar extension\n        if (getTextArea().getCommandManager().isSupported(Command.INSERT_IMAGE)) {\n            imageButton = new PushButton(new Image(Images.INSTANCE.image()));\n            saveRegistration(imageButton.addClickHandler(this));\n            imageButton.setTitle(Strings.INSTANCE.imageTooltip());\n            toolBarExtension.addFeature(\"image\", imageButton);\n            getUIExtensionList().add(toolBarExtension);\n\n            // add the menu extension\n            menuExtension = new ImageMenuExtension(this);\n            getUIExtensionList().add(menuExtension);\n\n            imageWizard = new ImageWizard(getConfig(), wikiService);\n            imageWizard.addWizardListener(this);\n        }\n\n        // Create an image metadata extractor for this text area\n        metaDataExtractor = new ImageMetaDataExtractor();\n        // do the initial extracting on the loaded document\n        metaDataExtractor.onInnerHTMLChange((Element) getTextArea().getDocument().getDocumentElement());\n        getTextArea().getDocument().addInnerHTMLListener(metaDataExtractor);\n\n        // Create an image behavior adjuster for this text area\n        behaviorAdjuster = new ImageBehaviorAdjuster();\n        behaviorAdjuster.setTextArea(getTextArea());\n        saveRegistration(getTextArea().addKeyDownHandler(behaviorAdjuster));\n        saveRegistration(getTextArea().addKeyUpHandler(behaviorAdjuster));\n        saveRegistration(getTextArea().addKeyPressHandler(behaviorAdjuster));\n    }","id":13419,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see AbstractPlugin#init(XRichTextArea, Config)\n     */\n    public void init(RichTextArea textArea, Config config)\n    {\n        super.init(textArea, config);\n\n        // register the custom command\n        textArea.getCommandManager().registerCommand(Command.INSERT_IMAGE, new InsertImageExecutable(textArea));\n\n        // add the toolbar extension\n        if (getTextArea().getCommandManager().isSupported(Command.INSERT_IMAGE)) {\n            imageButton = new PushButton(new Image(Images.INSTANCE.image()));\n            saveRegistration(imageButton.addClickHandler(this));\n            imageButton.setTitle(Strings.INSTANCE.imageTooltip());\n            toolBarExtension.addFeature(\"image\", imageButton);\n            getUIExtensionList().add(toolBarExtension);\n\n            // add the menu extension\n            menuExtension = new ImageMenuExtension(this);\n            getUIExtensionList().add(menuExtension);\n            // Hack: We can access the menus where each menu item was placed only after the main menu bar is\n            // initialized, which happens after all the plugins are loaded.\n            Scheduler.get().scheduleDeferred(new ScheduledCommand()\n            {\n                public void execute()\n                {\n                    menuExtension.registerAttachHandlers();\n                }\n            });\n\n            imageWizard = new ImageWizard(getConfig(), wikiService);\n            imageWizard.addWizardListener(this);\n        }\n\n        // Create an image metadata extractor for this text area\n        metaDataExtractor = new ImageMetaDataExtractor();\n        // do the initial extracting on the loaded document\n        metaDataExtractor.onInnerHTMLChange((Element) getTextArea().getDocument().getDocumentElement());\n        getTextArea().getDocument().addInnerHTMLListener(metaDataExtractor);\n\n        // Create an image behavior adjuster for this text area\n        behaviorAdjuster = new ImageBehaviorAdjuster();\n        behaviorAdjuster.setTextArea(getTextArea());\n        saveRegistration(getTextArea().addKeyDownHandler(behaviorAdjuster));\n        saveRegistration(getTextArea().addKeyUpHandler(behaviorAdjuster));\n        saveRegistration(getTextArea().addKeyPressHandler(behaviorAdjuster));\n    }","commit_id":"c3d3d107bab2bca1b83b1fb5a08a46b1a0c8bab3","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see AbstractPlugin#destroy()\n     */\n    public void destroy()\n    {\n        if (imageButton != null) {\n            imageButton.removeFromParent();\n            imageButton = null;\n        }\n\n        toolBarExtension.clearFeatures();\n\n        if (menuExtension != null) {\n            menuExtension.destroy();\n        }\n\n        // If a metadata extractor was created and setup, remove it\n        if (metaDataExtractor != null) {\n            getTextArea().getDocument().removeInnerHTMLListener(metaDataExtractor);\n            metaDataExtractor = null;\n        }\n        behaviorAdjuster = null;\n\n        super.destroy();\n    }","id":13420,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see AbstractPlugin#destroy()\n     */\n    public void destroy()\n    {\n        if (imageButton != null) {\n            imageButton.removeFromParent();\n            imageButton = null;\n        }\n\n        toolBarExtension.clearFeatures();\n\n        if (menuExtension != null) {\n            menuExtension.clearFeatures();\n        }\n\n        // If a metadata extractor was created and setup, remove it\n        if (metaDataExtractor != null) {\n            getTextArea().getDocument().removeInnerHTMLListener(metaDataExtractor);\n            metaDataExtractor = null;\n        }\n        behaviorAdjuster = null;\n\n        super.destroy();\n    }","commit_id":"c3d3d107bab2bca1b83b1fb5a08a46b1a0c8bab3","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Creates a new import menu extension.\n     * \n     * @param importPlugin import plugin instance.\n     */\n    public ImportMenuExtension(final ImportPlugin importPlugin)\n    {\n        super(\"menu\");\n\n        // Office File Import.\n        MenuItem importOfficeFileMenuItem =\n            new MenuItem(Strings.INSTANCE.importOfficeFileMenuItemCaption(), new Command()\n            {\n                public void execute()\n                {\n                    importPlugin.onImportOfficeFile();\n                }\n            });\n        importOfficeFileMenuItem.setIcon(Images.INSTANCE.importOfficeFileMenuEntryIcon());\n\n        importMenu = new MenuBar(true);\n        importMenu.setAnimationEnabled(false);\n        importMenu.addItem(importOfficeFileMenuItem);\n\n        importMenuEntry = new MenuItem(Strings.INSTANCE.importMenuEntryCaption(), importMenu);\n        importMenuEntry.setIcon(Images.INSTANCE.importMenuEntryIcon());\n\n        addFeature(ImportPluginFactory.getInstance().getPluginName(), importMenuEntry);\n    }","id":13421,"modified_method":"/**\n     * Creates a new import menu extension.\n     * \n     * @param importPlugin import plugin instance.\n     */\n    public ImportMenuExtension(final ImportPlugin importPlugin)\n    {\n        super(\"menu\");\n\n        MenuItem importOfficeFile =\n            createMenuItem(Strings.INSTANCE.importOfficeFileMenuItemCaption(),\n                Images.INSTANCE.importOfficeFileMenuEntryIcon(), new Command()\n                {\n                    public void execute()\n                    {\n                        importPlugin.onImportOfficeFile();\n                    }\n                });\n        MenuItem importMenu =\n            createMenuItem(Strings.INSTANCE.importMenuEntryCaption(), Images.INSTANCE.importMenuEntryIcon());\n\n        addFeature(ImportPluginFactory.getInstance().getPluginName(), importMenu);\n        addFeature(\"importOffice\", importOfficeFile);\n    }","commit_id":"c3d3d107bab2bca1b83b1fb5a08a46b1a0c8bab3","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     */\n    public void destroy()\n    {\n        for (PushButton button : wizardSteps.keySet()) {\n            button.removeFromParent();\n        }\n        wizardSteps.clear();\n\n        toolBarExtension.clearFeatures();\n        importMenuExtension.destroy();\n\n        super.destroy();\n    }","id":13422,"modified_method":"/**\n     * {@inheritDoc}\n     */\n    public void destroy()\n    {\n        for (PushButton button : wizardSteps.keySet()) {\n            button.removeFromParent();\n        }\n        wizardSteps.clear();\n\n        toolBarExtension.clearFeatures();\n        importMenuExtension.clearFeatures();\n\n        super.destroy();\n    }","commit_id":"c3d3d107bab2bca1b83b1fb5a08a46b1a0c8bab3","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Builds the menu extension using the passed plugin.\n     * \n     * @param plugin the plugin to use for the creation of this menu extension.\n     */\n    public LinkMenuExtension(final LinkPlugin plugin)\n    {\n        super(\"menu\");\n        this.plugin = plugin;\n\n        MenuItem webPageLink = new MenuItem(Strings.INSTANCE.linkToWebPage(), new com.google.gwt.user.client.Command()\n        {\n            public void execute()\n            {\n                plugin.onLinkInsert(LinkType.EXTERNAL);\n            }\n        });\n\n        MenuItem emailLink = new MenuItem(Strings.INSTANCE.linkToEmail(), new com.google.gwt.user.client.Command()\n        {\n            public void execute()\n            {\n                plugin.onLinkInsert(LinkType.EMAIL);\n            }\n        });\n\n        MenuItem wikiPageLink =\n            new MenuItem(Strings.INSTANCE.linkToWikiPage(), new com.google.gwt.user.client.Command()\n            {\n                public void execute()\n                {\n                    plugin.onLinkInsert(LinkType.WIKIPAGE);\n                }\n            });\n\n        MenuItem attachmentLink =\n            new MenuItem(Strings.INSTANCE.linkToAttachment(), new com.google.gwt.user.client.Command()\n            {\n                public void execute()\n                {\n                    plugin.onLinkInsert(LinkType.ATTACHMENT);\n                }\n            });\n\n        createLinkMenus = new ArrayList<UIObject>();\n        createLinkMenus.add(wikiPageLink);\n        createLinkMenus.add(attachmentLink);\n        createLinkMenus.add(new MenuItemSeparator());\n        createLinkMenus.add(webPageLink);\n        createLinkMenus.add(emailLink);\n\n        MenuItem editLink = new MenuItem(Strings.INSTANCE.linkEdit(), new com.google.gwt.user.client.Command()\n        {\n            public void execute()\n            {\n                plugin.onLinkEdit();\n            }\n        });\n\n        MenuItem removeLink = new MenuItem(Strings.INSTANCE.unlink(), new com.google.gwt.user.client.Command()\n        {\n            public void execute()\n            {\n                plugin.onUnlink();\n            }\n        });\n        removeLink.setIcon(Images.INSTANCE.unlink());\n\n        editLinkMenus = new ArrayList<UIObject>();\n        editLinkMenus.add(editLink);\n        editLinkMenus.add(removeLink);\n\n        submenu = new MenuBar(true);\n        submenu.setAnimationEnabled(false);\n        submenu.addAll(createLinkMenus);\n\n        menu = new MenuItem(Strings.INSTANCE.link(), submenu);\n        menu.setIcon(Images.INSTANCE.link());\n        menu.addMenuListener(this);\n\n        addFeature(LinkPluginFactory.getInstance().getPluginName(), menu);\n    }","id":13423,"modified_method":"/**\n     * Builds the menu extension using the passed plugin.\n     * \n     * @param plugin the plugin to use for the creation of this menu extension.\n     */\n    public LinkMenuExtension(final LinkPlugin plugin)\n    {\n        super(\"menu\");\n\n        this.plugin = plugin;\n\n        MenuItem webPageLink =\n            createMenuItem(Strings.INSTANCE.linkToWebPage(), null, new com.google.gwt.user.client.Command()\n            {\n                public void execute()\n                {\n                    plugin.onLinkInsert(LinkType.EXTERNAL);\n                }\n            });\n        MenuItem emailLink =\n            createMenuItem(Strings.INSTANCE.linkToEmail(), null, new com.google.gwt.user.client.Command()\n            {\n                public void execute()\n                {\n                    plugin.onLinkInsert(LinkType.EMAIL);\n                }\n            });\n        MenuItem wikiPageLink =\n            createMenuItem(Strings.INSTANCE.linkToWikiPage(), null, new com.google.gwt.user.client.Command()\n            {\n                public void execute()\n                {\n                    plugin.onLinkInsert(LinkType.WIKIPAGE);\n                }\n            });\n        MenuItem attachmentLink =\n            createMenuItem(Strings.INSTANCE.linkToAttachment(), null, new com.google.gwt.user.client.Command()\n            {\n                public void execute()\n                {\n                    plugin.onLinkInsert(LinkType.ATTACHMENT);\n                }\n            });\n        MenuItem editLink = createMenuItem(Strings.INSTANCE.linkEdit(), null, new com.google.gwt.user.client.Command()\n        {\n            public void execute()\n            {\n                plugin.onLinkEdit();\n            }\n        });\n        MenuItem removeLink =\n            createMenuItem(Strings.INSTANCE.unlink(), Images.INSTANCE.unlink(),\n                new com.google.gwt.user.client.Command()\n                {\n                    public void execute()\n                    {\n                        plugin.onUnlink();\n                    }\n                });\n        MenuItem linkMenu = createMenuItem(Strings.INSTANCE.link(), Images.INSTANCE.link());\n\n        insertItems = Arrays.asList(wikiPageLink, attachmentLink, webPageLink, emailLink);\n        editItems = Arrays.asList(editLink, removeLink);\n\n        addFeature(LinkPluginFactory.getInstance().getPluginName(), linkMenu);\n        addFeature(\"linkWikiPage\", wikiPageLink);\n        addFeature(\"linkAttachment\", attachmentLink);\n        addFeature(\"linkWebPage\", webPageLink);\n        addFeature(\"linkEmail\", emailLink);\n        addFeature(\"linkEdit\", editLink);\n        addFeature(\"linkRemove\", removeLink);\n    }","commit_id":"c3d3d107bab2bca1b83b1fb5a08a46b1a0c8bab3","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see AbstractPlugin#init(RichTextArea, Config)\n     */\n    public void init(RichTextArea textArea, Config config)\n    {\n        super.init(textArea, config);\n\n        // Register custom executables.\n        Executable createLinkExec =\n            getTextArea().getCommandManager().registerCommand(Command.CREATE_LINK, new CreateLinkExecutable(textArea));\n        Executable unlinkExec =\n            getTextArea().getCommandManager().registerCommand(Command.UNLINK, new UnlinkExecutable(textArea));\n        if (createLinkExec != null || unlinkExec != null) {\n            originalExecutables = new HashMap<Command, Executable>();\n        }\n        if (createLinkExec != null) {\n            originalExecutables.put(Command.CREATE_LINK, createLinkExec);\n        }\n        if (unlinkExec != null) {\n            originalExecutables.put(Command.UNLINK, unlinkExec);\n        }\n\n        menuExtension = new LinkMenuExtension(this);\n        getUIExtensionList().add(menuExtension);\n\n        // Initialize the meta data extractor to handle link meta data.\n        metaDataExtractor = new LinkMetaDataExtractor();\n        // Do the initial extracting on the loaded document.\n        metaDataExtractor.onInnerHTMLChange((Element) getTextArea().getDocument().getDocumentElement());\n        getTextArea().getDocument().addInnerHTMLListener(metaDataExtractor);\n\n        // Create an empty link handler and add it to the command manager\n        linkFilter = new EmptyLinkFilter(getTextArea());\n        getTextArea().getCommandManager().addCommandListener(linkFilter);\n\n        // Initialize the link configuration factory.\n        linkConfigFactory = new LinkConfigFactory(textArea);\n    }","id":13424,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see AbstractPlugin#init(RichTextArea, Config)\n     */\n    public void init(RichTextArea textArea, Config config)\n    {\n        super.init(textArea, config);\n\n        // Register custom executables.\n        Executable createLinkExec =\n            getTextArea().getCommandManager().registerCommand(Command.CREATE_LINK, new CreateLinkExecutable(textArea));\n        Executable unlinkExec =\n            getTextArea().getCommandManager().registerCommand(Command.UNLINK, new UnlinkExecutable(textArea));\n        if (createLinkExec != null || unlinkExec != null) {\n            originalExecutables = new HashMap<Command, Executable>();\n        }\n        if (createLinkExec != null) {\n            originalExecutables.put(Command.CREATE_LINK, createLinkExec);\n        }\n        if (unlinkExec != null) {\n            originalExecutables.put(Command.UNLINK, unlinkExec);\n        }\n\n        menuExtension = new LinkMenuExtension(this);\n        getUIExtensionList().add(menuExtension);\n        // Hack: We can access the menus where each menu item was placed only after the main menu bar is initialized,\n        // which happens after all the plugins are loaded.\n        Scheduler.get().scheduleDeferred(new ScheduledCommand()\n        {\n            public void execute()\n            {\n                menuExtension.registerAttachHandlers();\n            }\n        });\n\n        // Initialize the meta data extractor to handle link meta data.\n        metaDataExtractor = new LinkMetaDataExtractor();\n        // Do the initial extracting on the loaded document.\n        metaDataExtractor.onInnerHTMLChange((Element) getTextArea().getDocument().getDocumentElement());\n        getTextArea().getDocument().addInnerHTMLListener(metaDataExtractor);\n\n        // Create an empty link handler and add it to the command manager\n        linkFilter = new EmptyLinkFilter(getTextArea());\n        getTextArea().getCommandManager().addCommandListener(linkFilter);\n\n        // Initialize the link configuration factory.\n        linkConfigFactory = new LinkConfigFactory(textArea);\n    }","commit_id":"c3d3d107bab2bca1b83b1fb5a08a46b1a0c8bab3","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see AbstractPlugin#destroy()\n     */\n    public void destroy()\n    {\n        // Restore previous executables.\n        if (originalExecutables != null) {\n            for (Map.Entry<Command, Executable> entry : originalExecutables.entrySet()) {\n                getTextArea().getCommandManager().registerCommand(entry.getKey(), entry.getValue());\n            }\n        }\n\n        if (metaDataExtractor != null) {\n            getTextArea().getDocument().removeInnerHTMLListener(metaDataExtractor);\n            metaDataExtractor = null;\n        }\n\n        // Remove the empty link filter from the text area.\n        getTextArea().getCommandManager().removeCommandListener(linkFilter);\n\n        // Destroy menu extension.\n        menuExtension.destroy();\n        super.destroy();\n    }","id":13425,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see AbstractPlugin#destroy()\n     */\n    public void destroy()\n    {\n        // Restore previous executables.\n        if (originalExecutables != null) {\n            for (Map.Entry<Command, Executable> entry : originalExecutables.entrySet()) {\n                getTextArea().getCommandManager().registerCommand(entry.getKey(), entry.getValue());\n            }\n        }\n\n        if (metaDataExtractor != null) {\n            getTextArea().getDocument().removeInnerHTMLListener(metaDataExtractor);\n            metaDataExtractor = null;\n        }\n\n        // Remove the empty link filter from the text area.\n        getTextArea().getCommandManager().removeCommandListener(linkFilter);\n\n        // Destroy menu extension.\n        menuExtension.clearFeatures();\n        super.destroy();\n    }","commit_id":"c3d3d107bab2bca1b83b1fb5a08a46b1a0c8bab3","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * @return the wizard step to be used for selecting an attachment\n     */\n    private WizardStep createAttachmentSelectorWizardStep()\n    {\n        boolean selectionLimitedToCurrentPage = \"currentpage\".equals(config.getParameter(\"linkfiles\"));\n        AttachmentSelectorAggregatorWizardStep<LinkConfig> attachmentSelector =\n            new AttachmentSelectorAggregatorWizardStep<LinkConfig>(selectionLimitedToCurrentPage, wikiService);\n        attachmentSelector.setStepTitle(Strings.INSTANCE.imageSelectImageTitle());\n        attachmentSelector.setCurrentPageSelector(new CurrentPageAttachmentSelectorWizardStep(wikiService));\n        if (!selectionLimitedToCurrentPage) {\n            attachmentSelector.setAllPagesSelector(new AttachmentExplorerWizardStep(wikiService));\n        }\n        return attachmentSelector;\n    }","id":13426,"modified_method":"/**\n     * @return the wizard step to be used for selecting an attachment\n     */\n    private WizardStep createAttachmentSelectorWizardStep()\n    {\n        boolean selectionLimitedToCurrentPage = \"currentpage\".equals(config.getParameter(\"linkfiles\"));\n        AttachmentSelectorAggregatorWizardStep<LinkConfig> attachmentSelector =\n            new AttachmentSelectorAggregatorWizardStep<LinkConfig>(selectionLimitedToCurrentPage, wikiService);\n        attachmentSelector.setStepTitle(Strings.INSTANCE.linkSelectAttachmentTitle());\n        attachmentSelector.setCurrentPageSelector(new CurrentPageAttachmentSelectorWizardStep(wikiService));\n        if (!selectionLimitedToCurrentPage) {\n            attachmentSelector.setAllPagesSelector(new AttachmentExplorerWizardStep(wikiService));\n        }\n        return attachmentSelector;\n    }","commit_id":"c3d3d107bab2bca1b83b1fb5a08a46b1a0c8bab3","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Creates a new menu extension for the given macro plug-in.\n     * \n     * @param plugin a macro plug-in instance\n     */\n    public MacroMenuExtension(final MacroPlugin plugin)\n    {\n        this.plugin = plugin;\n\n        MenuItem refresh =\n            createMenuItem(Strings.INSTANCE.macroRefresh(), Strings.INSTANCE.macroRefreshShortcutKeyLabel(),\n                Images.INSTANCE.macroRefresh(), new RichTextAreaCommand(plugin.getTextArea(), MacroPlugin.REFRESH,\n                    null, false), 'R');\n        collapse =\n            createMenuItem(Strings.INSTANCE.macroCollapseAll(), Strings.INSTANCE.macroCollapseAllShortcutKeyLabel(),\n                null, new RichTextAreaCommand(plugin.getTextArea(), MacroPlugin.COLLAPSE), 'C');\n        expand =\n            createMenuItem(Strings.INSTANCE.macroExpandAll(), Strings.INSTANCE.macroExpandAllShortcutKeyLabel(), null,\n                new RichTextAreaCommand(plugin.getTextArea(), MacroPlugin.EXPAND), 'E');\n        edit = new MenuItem(Strings.INSTANCE.macroEdit(), new com.google.gwt.user.client.Command()\n        {\n            public void execute()\n            {\n                plugin.edit();\n            }\n        });\n        edit.setIcon(Images.INSTANCE.macroEdit());\n        edit.setShortcutKeyLabel(Strings.INSTANCE.macroEditShortcutKeyLabel());\n        insert =\n            createMenuItem(Strings.INSTANCE.macroInsert(), Strings.INSTANCE.macroInsertShortcutKeyLabel(),\n                Images.INSTANCE.macroInsert(), new com.google.gwt.user.client.Command()\n                {\n                    public void execute()\n                    {\n                        if (plugin.getSelector().getMacroCount() <= 0) {\n                            plugin.insert();\n                        }\n                    }\n                }, 'M');\n\n        insertSubMenuEntries = new ArrayList<UIObject>();\n        insertSubMenuEntries.add(insert);\n        insertSubMenuEntries.add(new MenuItemSeparator());\n        insertSubMenuEntries.add(refresh);\n        insertSubMenuEntries.add(new MenuItemSeparator());\n        insertSubMenuEntries.add(collapse);\n        insertSubMenuEntries.add(expand);\n\n        editSubMenuEntries = new ArrayList<UIObject>();\n        editSubMenuEntries.add(edit);\n        editSubMenuEntries.add(new MenuItemSeparator());\n        editSubMenuEntries.add(collapse);\n        editSubMenuEntries.add(expand);\n\n        macroSubMenu = new MenuBar(true);\n        macroSubMenu.setAnimationEnabled(false);\n        macroSubMenu.addAll(insertSubMenuEntries);\n\n        macroMenuItem = new MenuItem(Strings.INSTANCE.macro(), macroSubMenu);\n        macroMenuItem.setIcon(Images.INSTANCE.macro());\n        macroMenuItem.addMenuListener(this);\n\n        menuExtension.addFeature(MacroPluginFactory.getInstance().getPluginName(), macroMenuItem);\n    }","id":13427,"modified_method":"/**\n     * Creates a new menu extension for the given macro plug-in.\n     * \n     * @param plugin a macro plug-in instance\n     */\n    public MacroMenuExtension(final MacroPlugin plugin)\n    {\n        super(\"menu\");\n\n        setShortcutKeyManager(plugin.getShortcutKeyManager());\n        this.plugin = plugin;\n\n        MenuItem refresh =\n            createMenuItem(Strings.INSTANCE.macroRefresh(), Strings.INSTANCE.macroRefreshShortcutKeyLabel(),\n                Images.INSTANCE.macroRefresh(), new RichTextAreaCommand(plugin.getTextArea(), MacroPlugin.REFRESH,\n                    null, false), 'R');\n        collapse =\n            createMenuItem(Strings.INSTANCE.macroCollapseAll(), Strings.INSTANCE.macroCollapseAllShortcutKeyLabel(),\n                null, new RichTextAreaCommand(plugin.getTextArea(), MacroPlugin.COLLAPSE), 'C');\n        expand =\n            createMenuItem(Strings.INSTANCE.macroExpandAll(), Strings.INSTANCE.macroExpandAllShortcutKeyLabel(), null,\n                new RichTextAreaCommand(plugin.getTextArea(), MacroPlugin.EXPAND), 'E');\n        edit =\n            createMenuItem(Strings.INSTANCE.macroEdit(), Strings.INSTANCE.macroEditShortcutKeyLabel(),\n                Images.INSTANCE.macroEdit(), new com.google.gwt.user.client.Command()\n                {\n                    public void execute()\n                    {\n                        plugin.edit();\n                    }\n                }, (char) 0);\n        insert =\n            createMenuItem(Strings.INSTANCE.macroInsert(), Strings.INSTANCE.macroInsertShortcutKeyLabel(),\n                Images.INSTANCE.macroInsert(), new com.google.gwt.user.client.Command()\n                {\n                    public void execute()\n                    {\n                        if (plugin.getSelector().getMacroCount() <= 0) {\n                            plugin.insert();\n                        }\n                    }\n                }, 'M');\n        MenuItem macroMenu = createMenuItem(Strings.INSTANCE.macro(), Images.INSTANCE.macro());\n\n        addFeature(MacroPluginFactory.getInstance().getPluginName(), macroMenu);\n        addFeature(\"macroRefresh\", refresh);\n        addFeature(\"macroCollapse\", collapse);\n        addFeature(\"macroExpand\", expand);\n        addFeature(\"macroEdit\", edit);\n        addFeature(\"macroInsert\", insert);\n    }","commit_id":"c3d3d107bab2bca1b83b1fb5a08a46b1a0c8bab3","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see AbstractPlugin#destroy()\n     */\n    public void destroy()\n    {\n        menuExtension.destroy();\n        toolBarExtension.destroy();\n        shortcutKeyManager.clear();\n\n        getTextArea().getCommandManager().unregisterCommand(REFRESH);\n        getTextArea().getCommandManager().unregisterCommand(COLLAPSE);\n        getTextArea().getCommandManager().unregisterCommand(EXPAND);\n        getTextArea().getCommandManager().unregisterCommand(INSERT);\n\n        selector.destroy();\n        selector = null;\n\n        displayer.destroy();\n        displayer = null;\n\n        wizard.destroy();\n        wizard = null;\n\n        super.destroy();\n    }","id":13428,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see AbstractPlugin#destroy()\n     */\n    public void destroy()\n    {\n        menuExtension.clearFeatures();\n        toolBarExtension.destroy();\n        shortcutKeyManager.clear();\n\n        getTextArea().getCommandManager().unregisterCommand(REFRESH);\n        getTextArea().getCommandManager().unregisterCommand(COLLAPSE);\n        getTextArea().getCommandManager().unregisterCommand(EXPAND);\n        getTextArea().getCommandManager().unregisterCommand(INSERT);\n\n        selector.destroy();\n        selector = null;\n\n        displayer.destroy();\n        displayer = null;\n\n        wizard.destroy();\n        wizard = null;\n\n        super.destroy();\n    }","commit_id":"c3d3d107bab2bca1b83b1fb5a08a46b1a0c8bab3","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see AbstractPlugin#init(RichTextArea, Config)\n     */\n    public void init(RichTextArea textArea, Config config)\n    {\n        super.init(textArea, config);\n\n        displayer = new MacroDisplayer(getTextArea());\n        selector = new MacroSelector(displayer);\n        wizard = new MacroWizard(displayer, config, macroService);\n\n        String templateURL = config.getParameter(\"inputURL\");\n        if (!StringUtils.isEmpty(templateURL)) {\n            getTextArea().getCommandManager().registerCommand(REFRESH, new RefreshExecutable(textArea, templateURL));\n        }\n        getTextArea().getCommandManager().registerCommand(COLLAPSE, new CollapseExecutable(selector, true));\n        getTextArea().getCommandManager().registerCommand(EXPAND, new CollapseExecutable(selector, false));\n        getTextArea().getCommandManager().registerCommand(INSERT, new InsertExecutable(selector));\n\n        saveRegistrations(shortcutKeyManager.addHandlers(getTextArea()));\n        saveRegistrations(macroControler.addHadlers());\n\n        menuExtension = new MacroMenuExtension(this);\n        getUIExtensionList().add(menuExtension.getExtension());\n\n        toolBarExtension = new MacroToolBarExtension(this);\n        if (toolBarExtension.getExtension().getFeatures().length > 0) {\n            getUIExtensionList().add(toolBarExtension.getExtension());\n        }\n    }","id":13429,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see AbstractPlugin#init(RichTextArea, Config)\n     */\n    public void init(RichTextArea textArea, Config config)\n    {\n        super.init(textArea, config);\n\n        displayer = new MacroDisplayer(getTextArea());\n        selector = new MacroSelector(displayer);\n        wizard = new MacroWizard(displayer, config, macroService);\n\n        String templateURL = config.getParameter(\"inputURL\");\n        if (!StringUtils.isEmpty(templateURL)) {\n            getTextArea().getCommandManager().registerCommand(REFRESH, new RefreshExecutable(textArea, templateURL));\n        }\n        getTextArea().getCommandManager().registerCommand(COLLAPSE, new CollapseExecutable(selector, true));\n        getTextArea().getCommandManager().registerCommand(EXPAND, new CollapseExecutable(selector, false));\n        getTextArea().getCommandManager().registerCommand(INSERT, new InsertExecutable(selector));\n\n        saveRegistrations(shortcutKeyManager.addHandlers(getTextArea()));\n        saveRegistrations(macroControler.addHadlers());\n\n        menuExtension = new MacroMenuExtension(this);\n        getUIExtensionList().add(menuExtension);\n        // Hack: We can access the menus where each menu item was placed only after the main menu bar is initialized,\n        // which happens after all the plugins are loaded.\n        Scheduler.get().scheduleDeferred(new ScheduledCommand()\n        {\n            public void execute()\n            {\n                menuExtension.registerAttachHandlers();\n            }\n        });\n\n        toolBarExtension = new MacroToolBarExtension(this);\n        if (toolBarExtension.getExtension().getFeatures().length > 0) {\n            getUIExtensionList().add(toolBarExtension.getExtension());\n        }\n    }","commit_id":"c3d3d107bab2bca1b83b1fb5a08a46b1a0c8bab3","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * @return the menu bar of this editor.\n     */\n    public MenuBar getMenu()\n    {\n        if (menu == null) {\n            menu = new MenuBar();\n            ((FlowPanel) textArea.getParent()).insert(menu, 0);\n        }\n        return menu;\n    }","id":13430,"modified_method":"/**\n     * @return the menu bar of this editor.\n     */\n    public MenuBar getMenu()\n    {\n        if (menu == null) {\n            menu = new MenuBar();\n            menu.setFocusOnHoverEnabled(false);\n            ((FlowPanel) textArea.getParent()).insert(menu, 0);\n        }\n        return menu;\n    }","commit_id":"c3d3d107bab2bca1b83b1fb5a08a46b1a0c8bab3","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Creates a new editor.\n     * \n     * @param richTextEditor the rich text editor to manage\n     * @param config the configuration source\n     * @param pfm the plugin factory manager used to instantiate plugins\n     * @param syntaxValidator the object used to assert if a feature must be enabled or disabled in some context\n     */\n    public RichTextEditorController(RichTextEditor richTextEditor, Config config, PluginFactoryManager pfm,\n        SyntaxValidator syntaxValidator)\n    {\n        this.config = config;\n\n        this.richTextEditor = richTextEditor;\n        registrations.add(richTextEditor.getTextArea().addLoadHandler(this));\n        registrations.add(richTextEditor.getTextArea().addMouseUpHandler(this));\n        registrations.add(richTextEditor.getTextArea().addKeyUpHandler(this));\n        richTextEditor.getTextArea().getCommandManager().addCommandListener(this);\n\n        // Put the rich text editor in loading state until we finish loading it. See #onLoad(LoadEvent event)\n        richTextEditor.setLoading(true);\n\n        toolBarController = new ToolBarController(richTextEditor.getToolbar());\n\n        this.syntaxValidator = syntaxValidator;\n\n        pluginManager = new DefaultPluginManager(richTextEditor.getTextArea(), config);\n        pluginManager.setPluginFactoryManager(pfm);\n    }","id":13431,"modified_method":"/**\n     * Creates a new editor.\n     * \n     * @param richTextEditor the rich text editor to manage\n     * @param config the configuration source\n     * @param pfm the plugin factory manager used to instantiate plugins\n     * @param syntaxValidator the object used to assert if a feature must be enabled or disabled in some context\n     */\n    public RichTextEditorController(RichTextEditor richTextEditor, Config config, PluginFactoryManager pfm,\n        SyntaxValidator syntaxValidator)\n    {\n        this.config = config;\n\n        this.richTextEditor = richTextEditor;\n        registrations.add(richTextEditor.getTextArea().addLoadHandler(this));\n        registrations.add(richTextEditor.getTextArea().addMouseUpHandler(this));\n        registrations.add(richTextEditor.getTextArea().addKeyUpHandler(this));\n        richTextEditor.getTextArea().getCommandManager().addCommandListener(this);\n\n        // Put the rich text editor in loading state until we finish loading it. See #onLoad(LoadEvent event)\n        richTextEditor.setLoading(true);\n\n        menuBarController = new MenuBarController(richTextEditor.getMenu());\n        toolBarController = new ToolBarController(richTextEditor.getToolbar());\n\n        this.syntaxValidator = syntaxValidator;\n\n        pluginManager = new DefaultPluginManager(richTextEditor.getTextArea(), config);\n        pluginManager.setPluginFactoryManager(pfm);\n    }","commit_id":"c3d3d107bab2bca1b83b1fb5a08a46b1a0c8bab3","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Destroys this editor, unregistering all the listeners and releasing the used memory.\n     */\n    public void destroy()\n    {\n        toolBarController.destroy();\n        // Unload all the plug-ins.\n        pluginManager.unloadAll();\n        // Remove all listeners and handlers.\n        registrations.removeHandlers();\n        richTextEditor.getTextArea().getCommandManager().removeCommandListener(this);\n        // Detach the user interface.\n        richTextEditor.removeFromParent();\n    }","id":13432,"modified_method":"/**\n     * Destroys this editor, unregistering all the listeners and releasing the used memory.\n     */\n    public void destroy()\n    {\n        menuBarController.destroy();\n        toolBarController.destroy();\n        // Unload all the plug-ins.\n        pluginManager.unloadAll();\n        // Remove all listeners and handlers.\n        registrations.removeHandlers();\n        richTextEditor.getTextArea().getCommandManager().removeCommandListener(this);\n        // Detach the user interface.\n        richTextEditor.removeFromParent();\n    }","commit_id":"c3d3d107bab2bca1b83b1fb5a08a46b1a0c8bab3","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Initialize the rich text editor if it wasn't already initialized.\n     */\n    protected void maybeInitialize()\n    {\n        if (!initialized && richTextEditor.isAttached()) {\n            initialized = true;\n\n            loadPlugins();\n            extendRootUI();\n            fillMenu();\n            toolBarController.fill(config, pluginManager);\n\n            richTextEditor.setLoading(false);\n            ActionEvent.fire(getRichTextEditor().getTextArea(), \"loaded\");\n        }\n    }","id":13433,"modified_method":"/**\n     * Initialize the rich text editor if it wasn't already initialized.\n     */\n    protected void maybeInitialize()\n    {\n        if (!initialized && richTextEditor.isAttached()) {\n            initialized = true;\n\n            loadPlugins();\n            extendRootUI();\n            menuBarController.fill(config, pluginManager);\n            toolBarController.fill(config, pluginManager);\n\n            richTextEditor.setLoading(false);\n            ActionEvent.fire(getRichTextEditor().getTextArea(), \"loaded\");\n        }\n    }","commit_id":"c3d3d107bab2bca1b83b1fb5a08a46b1a0c8bab3","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see AbstractPlugin#destroy()\n     */\n    public void destroy()\n    {\n        if (hr != null) {\n            hr.removeFromParent();\n            hr = null;\n        }\n\n        toolBarFocusWidgets.clearFeatures();\n\n        super.destroy();\n    }","id":13434,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see AbstractPlugin#destroy()\n     */\n    public void destroy()\n    {\n        if (hr != null) {\n            hr.removeFromParent();\n            hr = null;\n        }\n\n        toolBarFocusWidgets.clearFeatures();\n        menuExtension.destroy();\n\n        super.destroy();\n    }","commit_id":"c3d3d107bab2bca1b83b1fb5a08a46b1a0c8bab3","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see AbstractPlugin#init(RichTextArea, Config)\n     */\n    public void init(RichTextArea textArea, Config config)\n    {\n        super.init(textArea, config);\n\n        // Register custom executables.\n        getTextArea().getCommandManager().registerCommand(Command.INSERT_HORIZONTAL_RULE,\n            new InsertHRExecutable(textArea));\n\n        // User interface extension that provides ways of separating tool bar entries.\n        toolBarExtension.addUIExtension(new ToolBarSeparator());\n        // User interface extension for separator widgets that can be focused.\n        toolBarExtension.addUIExtension(toolBarFocusWidgets);\n\n        if (getTextArea().getCommandManager().isSupported(Command.INSERT_HORIZONTAL_RULE)) {\n            hr = new PushButton(new Image(Images.INSTANCE.hr()));\n            saveRegistration(hr.addClickHandler(this));\n            hr.setTitle(Strings.INSTANCE.hr());\n            toolBarFocusWidgets.addFeature(\"hr\", hr);\n        }\n\n        if (toolBarExtension.getFeatures().length > 0) {\n            getUIExtensionList().add(toolBarExtension);\n        }\n    }","id":13435,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see AbstractPlugin#init(RichTextArea, Config)\n     */\n    public void init(RichTextArea textArea, Config config)\n    {\n        super.init(textArea, config);\n\n        // Register custom executables.\n        getTextArea().getCommandManager().registerCommand(Command.INSERT_HORIZONTAL_RULE,\n            new InsertHRExecutable(textArea));\n\n        // User interface extension that provides ways of separating tool bar entries.\n        toolBarExtension.addUIExtension(new ToolBarSeparator());\n        // User interface extension for separator widgets that can be focused.\n        toolBarExtension.addUIExtension(toolBarFocusWidgets);\n\n        if (getTextArea().getCommandManager().isSupported(Command.INSERT_HORIZONTAL_RULE)) {\n            hr = new PushButton(new Image(Images.INSTANCE.hr()));\n            saveRegistration(hr.addClickHandler(this));\n            hr.setTitle(Strings.INSTANCE.hr());\n            toolBarFocusWidgets.addFeature(\"hr\", hr);\n        }\n\n        getUIExtensionList().add(menuExtension);\n        getUIExtensionList().add(toolBarExtension);\n\n        // Hack: We can access the menus where each menu item separator was placed only after the main menu bar is\n        // initialized, which happens after all the plugins are loaded.\n        Scheduler.get().scheduleDeferred(new ScheduledCommand()\n        {\n            public void execute()\n            {\n                menuExtension.registerAttachHandlers();\n            }\n        });\n    }","commit_id":"c3d3d107bab2bca1b83b1fb5a08a46b1a0c8bab3","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Builds the menu extension using the passed plugin.\n     * \n     * @param plugin the plugin to use for the creation of this menu extension.\n     */\n    public TableMenuExtension(final TablePlugin plugin)\n    {\n        super(\"menu\");\n        this.plugin = plugin;\n\n        MenuItem insertTable =\n            new MenuItem(Strings.INSTANCE.insertTable(), new RichTextAreaCommand(plugin.getTextArea(), new Command(\n                InsertTable.NAME), null, false));\n\n        createTableMenus.add(insertTable);\n\n        createEditMenuItems();\n\n        submenu = new MenuBar(true);\n        submenu.setAnimationEnabled(false);\n        submenu.addAll(createTableMenus);\n\n        menu = new MenuItem(Strings.INSTANCE.table(), submenu);\n        menu.setIcon(Images.INSTANCE.insertTable());\n        menu.addMenuListener(this);\n\n        addFeature(TablePluginFactory.getInstance().getPluginName(), menu);\n    }","id":13436,"modified_method":"/**\n     * Builds the menu extension using the passed plugin.\n     * \n     * @param plugin the plugin to use for the creation of this menu extension.\n     */\n    public TableMenuExtension(final TablePlugin plugin)\n    {\n        super(\"menu\");\n\n        this.plugin = plugin;\n\n        insertTable =\n            createMenuItem(Strings.INSTANCE.insertTable(), null, new RichTextAreaCommand(plugin.getTextArea(),\n                new Command(InsertTable.NAME), null, false));\n        MenuItem deleteCol =\n            createMenuItem(Strings.INSTANCE.deleteCol(), Images.INSTANCE.deleteCol(),\n                new RichTextAreaCommand(plugin.getTextArea(), new Command(DeleteCol.NAME)));\n        MenuItem deleteRow =\n            createMenuItem(Strings.INSTANCE.deleteRow(), Images.INSTANCE.deleteRow(),\n                new RichTextAreaCommand(plugin.getTextArea(), new Command(DeleteRow.NAME)));\n        MenuItem deleteTable =\n            createMenuItem(Strings.INSTANCE.deleteTable(), Images.INSTANCE.deleteTable(), new RichTextAreaCommand(\n                plugin.getTextArea(), new Command(DeleteTable.NAME)));\n        MenuItem insertColAfter =\n            createMenuItem(Strings.INSTANCE.insertColAfter(), Images.INSTANCE.insertColAfter(),\n                new RichTextAreaCommand(plugin.getTextArea(), new Command(InsertColAfter.NAME)));\n        MenuItem insertColBefore =\n            createMenuItem(Strings.INSTANCE.insertColBefore(), Images.INSTANCE.insertColBefore(),\n                new RichTextAreaCommand(plugin.getTextArea(), new Command(InsertColBefore.NAME)));\n        MenuItem insertRowAfter =\n            createMenuItem(Strings.INSTANCE.insertRowAfter(), Images.INSTANCE.insertRowAfter(),\n                new RichTextAreaCommand(plugin.getTextArea(), new Command(InsertRowAfter.NAME)));\n        MenuItem insertRowBefore =\n            createMenuItem(Strings.INSTANCE.insertRowBefore(), Images.INSTANCE.insertRowBefore(),\n                new RichTextAreaCommand(plugin.getTextArea(), new Command(InsertRowBefore.NAME)));\n        MenuItem tableMenu = createMenuItem(Strings.INSTANCE.table(), Images.INSTANCE.insertTable());\n\n        editItems =\n            Arrays.asList(deleteCol, deleteRow, deleteTable, insertColAfter, insertColBefore, insertRowAfter,\n                insertRowBefore);\n\n        addFeature(TablePluginFactory.getInstance().getPluginName(), tableMenu);\n        addFeature(InsertTable.NAME, insertTable);\n        addFeature(DeleteCol.NAME, deleteCol);\n        addFeature(DeleteRow.NAME, deleteRow);\n        addFeature(DeleteTable.NAME, deleteTable);\n        addFeature(InsertColAfter.NAME, insertColAfter);\n        addFeature(InsertColBefore.NAME, insertColBefore);\n        addFeature(InsertRowAfter.NAME, insertRowAfter);\n        addFeature(InsertRowBefore.NAME, insertRowBefore);\n    }","commit_id":"c3d3d107bab2bca1b83b1fb5a08a46b1a0c8bab3","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see AbstractPlugin#destroy()\n     */\n    public void destroy()\n    {\n        for (TableFeature feature : features) {\n            feature.destroy();\n        }\n        features.clear();\n        getTextArea().getCommandManager().removeCommandListener(this);\n        super.destroy();\n    }","id":13437,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see AbstractPlugin#destroy()\n     */\n    public void destroy()\n    {\n        for (TableFeature feature : features) {\n            feature.destroy();\n        }\n        features.clear();\n        menuExtension.clearFeatures();\n        getTextArea().getCommandManager().removeCommandListener(this);\n        super.destroy();\n    }","commit_id":"c3d3d107bab2bca1b83b1fb5a08a46b1a0c8bab3","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * {@inheritDoc}\n     * \n     * @see AbstractPlugin#init(XRichTextArea, Config)\n     */\n    public void init(RichTextArea rta, Config config)\n    {\n        super.init(rta, config);\n\n        addFeature(rta, new InsertTable(this));\n        addFeature(rta, new InsertRowBefore(this));\n        addFeature(rta, new InsertRowAfter(this));\n        addFeature(rta, new DeleteRow(this));\n        addFeature(rta, new InsertColBefore(this));\n        addFeature(rta, new InsertColAfter(this));\n        addFeature(rta, new DeleteCol(this));\n        addFeature(rta, new DeleteTable(this));\n\n        menuExtension = new TableMenuExtension(this);\n        getUIExtensionList().add(menuExtension);\n\n        // Listen to the \"enable\" command and disable the browser built-in table editing feature.\n        rta.getCommandManager().addCommandListener(this);\n        // At this point the rich text area may be already enabled so let's make sure the built-in table editing feature\n        // is disabled.\n        disableInlineTableEditing();\n    }","id":13438,"modified_method":"/**\n     * {@inheritDoc}\n     * \n     * @see AbstractPlugin#init(XRichTextArea, Config)\n     */\n    public void init(RichTextArea rta, Config config)\n    {\n        super.init(rta, config);\n\n        addFeature(rta, new InsertTable(this));\n        addFeature(rta, new InsertRowBefore(this));\n        addFeature(rta, new InsertRowAfter(this));\n        addFeature(rta, new DeleteRow(this));\n        addFeature(rta, new InsertColBefore(this));\n        addFeature(rta, new InsertColAfter(this));\n        addFeature(rta, new DeleteCol(this));\n        addFeature(rta, new DeleteTable(this));\n\n        menuExtension = new TableMenuExtension(this);\n        getUIExtensionList().add(menuExtension);\n        // Hack: We can access the menus where each menu item was placed only after the main menu bar is initialized,\n        // which happens after all the plugins are loaded.\n        Scheduler.get().scheduleDeferred(new ScheduledCommand()\n        {\n            public void execute()\n            {\n                menuExtension.registerAttachHandlers();\n            }\n        });\n\n        // Listen to the \"enable\" command and disable the browser built-in table editing feature.\n        rta.getCommandManager().addCommandListener(this);\n        // At this point the rich text area may be already enabled so let's make sure the built-in table editing feature\n        // is disabled.\n        disableInlineTableEditing();\n    }","commit_id":"c3d3d107bab2bca1b83b1fb5a08a46b1a0c8bab3","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Override\n\tpublic TiledMap loadSync (AssetManager manager, String fileName, FileHandle fileHandle, AtlasTiledMapLoaderParameters parameter) {\n\t\tif (parameter != null) {\n\t\t\tsetTextureFilters(parameter.textureMinFilter, parameter.textureMagFilter);\n\t\t}\n\n\t\treturn map;\n\t}","id":13439,"modified_method":"@Override\n\tpublic TiledMap loadSync (AssetManager manager, String fileName, FileHandle file, AtlasTiledMapLoaderParameters parameter) {\n\t\tif (parameter != null) {\n\t\t\tsetTextureFilters(parameter.textureMinFilter, parameter.textureMagFilter);\n\t\t}\n\n\t\treturn map;\n\t}","commit_id":"af5cf0f9760a81c05015e6415d7bd39481f6d918","url":"https://github.com/libgdx/libgdx"},{"original_method":"protected void loadObject (MapLayer layer, Element element) {\n\t\tif (element.getName().equals(\"object\")) {\n\t\t\tMapObject object = null;\n\n\t\t\tint x = element.getIntAttribute(\"x\", 0);\n\t\t\tint y = (yUp ? mapHeightInPixels - element.getIntAttribute(\"y\", 0) : element.getIntAttribute(\"y\", 0));\n\n\t\t\tint width = element.getIntAttribute(\"width\", 0);\n\t\t\tint height = element.getIntAttribute(\"height\", 0);\n\n\t\t\tif (element.getChildCount() > 0) {\n\t\t\t\tElement child = null;\n\t\t\t\tif ((child = element.getChildByName(\"polygon\")) != null) {\n\t\t\t\t\tString[] points = child.getAttribute(\"points\").split(\" \");\n\t\t\t\t\tfloat[] vertices = new float[points.length * 2];\n\t\t\t\t\tfor (int i = 0; i < points.length; i++) {\n\t\t\t\t\t\tString[] point = points[i].split(\",\");\n\t\t\t\t\t\tvertices[i * 2] = Integer.parseInt(point[0]);\n\t\t\t\t\t\tvertices[i * 2 + 1] = Integer.parseInt(point[1]);\n\t\t\t\t\t\tif (yUp) {\n\t\t\t\t\t\t\tvertices[i * 2 + 1] *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tPolygon polygon = new Polygon(vertices);\n\t\t\t\t\tpolygon.setPosition(x, y);\n\t\t\t\t\tobject = new PolygonMapObject(polygon);\n\t\t\t\t} else if ((child = element.getChildByName(\"polyline\")) != null) {\n\t\t\t\t\tString[] points = child.getAttribute(\"points\").split(\" \");\n\t\t\t\t\tfloat[] vertices = new float[points.length * 2];\n\t\t\t\t\tfor (int i = 0; i < points.length; i++) {\n\t\t\t\t\t\tString[] point = points[i].split(\",\");\n\t\t\t\t\t\tvertices[i * 2] = Integer.parseInt(point[0]);\n\t\t\t\t\t\tvertices[i * 2 + 1] = Integer.parseInt(point[1]);\n\t\t\t\t\t\tif (yUp) {\n\t\t\t\t\t\t\tvertices[i * 2 + 1] *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tPolyline polyline = new Polyline(vertices);\n\t\t\t\t\tpolyline.setPosition(x, y);\n\t\t\t\t\tobject = new PolylineMapObject(polyline);\n\t\t\t\t} else if ((child = element.getChildByName(\"ellipse\")) != null) {\n\t\t\t\t\tobject = new EllipseMapObject(x, yUp ? y - height : y, width, height);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (object == null) {\n\t\t\t\tobject = new RectangleMapObject(x, yUp ? y - height : y, width, height);\n\t\t\t}\n\t\t\tobject.setName(element.getAttribute(\"name\", null));\n\t\t\tString type = element.getAttribute(\"type\", null);\n\t\t\tif (type != null) {\n\t\t\t\tobject.getProperties().put(\"type\", type);\n\t\t\t}\n\t\t\tint gid = element.getIntAttribute(\"gid\", -1);\n\t\t\tif (gid != -1) {\n\t\t\t\tobject.getProperties().put(\"gid\", gid);\n\t\t\t}\n\t\t\tobject.getProperties().put(\"x\", x);\n\t\t\tobject.getProperties().put(\"y\", yUp ? y - height : y);\n\t\t\tobject.setVisible(element.getIntAttribute(\"visible\", 1) == 1);\n\t\t\tElement properties = element.getChildByName(\"properties\");\n\t\t\tif (properties != null) {\n\t\t\t\tloadProperties(object.getProperties(), properties);\n\t\t\t}\n\t\t\tlayer.getObjects().add(object);\n\t\t}\n\t}","id":13440,"modified_method":"protected void loadObject (MapLayer layer, Element element) {\n\t\tif (element.getName().equals(\"object\")) {\n\t\t\tMapObject object = null;\n\n\t\t\tfloat scaleX = convertObjectToTileSpace ? 1.0f / mapTileWidth : 1.0f;\n\t\t\tfloat scaleY = convertObjectToTileSpace ? 1.0f / mapTileHeight : 1.0f;\n\n\t\t\tfloat x = element.getIntAttribute(\"x\", 0) * scaleX;\n\t\t\tfloat y = (yUp ? mapHeightInPixels - element.getIntAttribute(\"y\", 0) : element.getIntAttribute(\"y\", 0)) * scaleY;\n\n\t\t\tfloat width = element.getIntAttribute(\"width\", 0) * scaleX;\n\t\t\tfloat height = element.getIntAttribute(\"height\", 0) * scaleY;\n\n\t\t\tif (element.getChildCount() > 0) {\n\t\t\t\tElement child = null;\n\t\t\t\tif ((child = element.getChildByName(\"polygon\")) != null) {\n\t\t\t\t\tString[] points = child.getAttribute(\"points\").split(\" \");\n\t\t\t\t\tfloat[] vertices = new float[points.length * 2];\n\t\t\t\t\tfor (int i = 0; i < points.length; i++) {\n\t\t\t\t\t\tString[] point = points[i].split(\",\");\n\t\t\t\t\t\tvertices[i * 2] = Integer.parseInt(point[0]) * scaleX;\n\t\t\t\t\t\tvertices[i * 2 + 1] = Integer.parseInt(point[1]) * scaleY;\n\t\t\t\t\t\tif (yUp) {\n\t\t\t\t\t\t\tvertices[i * 2 + 1] *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tPolygon polygon = new Polygon(vertices);\n\t\t\t\t\tpolygon.setPosition(x, y);\n\t\t\t\t\tobject = new PolygonMapObject(polygon);\n\t\t\t\t} else if ((child = element.getChildByName(\"polyline\")) != null) {\n\t\t\t\t\tString[] points = child.getAttribute(\"points\").split(\" \");\n\t\t\t\t\tfloat[] vertices = new float[points.length * 2];\n\t\t\t\t\tfor (int i = 0; i < points.length; i++) {\n\t\t\t\t\t\tString[] point = points[i].split(\",\");\n\t\t\t\t\t\tvertices[i * 2] = Integer.parseInt(point[0]) * scaleX;\n\t\t\t\t\t\tvertices[i * 2 + 1] = Integer.parseInt(point[1]) * scaleY;\n\t\t\t\t\t\tif (yUp) {\n\t\t\t\t\t\t\tvertices[i * 2 + 1] *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tPolyline polyline = new Polyline(vertices);\n\t\t\t\t\tpolyline.setPosition(x, y);\n\t\t\t\t\tobject = new PolylineMapObject(polyline);\n\t\t\t\t} else if ((child = element.getChildByName(\"ellipse\")) != null) {\n\t\t\t\t\tobject = new EllipseMapObject(x, yUp ? y - height : y, width, height);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (object == null) {\n\t\t\t\tobject = new RectangleMapObject(x, yUp ? y - height : y, width, height);\n\t\t\t}\n\t\t\tobject.setName(element.getAttribute(\"name\", null));\n\t\t\tString type = element.getAttribute(\"type\", null);\n\t\t\tif (type != null) {\n\t\t\t\tobject.getProperties().put(\"type\", type);\n\t\t\t}\n\t\t\tint gid = element.getIntAttribute(\"gid\", -1);\n\t\t\tif (gid != -1) {\n\t\t\t\tobject.getProperties().put(\"gid\", gid);\n\t\t\t}\n\t\t\tobject.getProperties().put(\"x\", x * scaleX);\n\t\t\tobject.getProperties().put(\"y\", (yUp ? y - height : y) * scaleY);\n\t\t\tobject.setVisible(element.getIntAttribute(\"visible\", 1) == 1);\n\t\t\tElement properties = element.getChildByName(\"properties\");\n\t\t\tif (properties != null) {\n\t\t\t\tloadProperties(object.getProperties(), properties);\n\t\t\t}\n\t\t\tlayer.getObjects().add(object);\n\t\t}\n\t}","commit_id":"af5cf0f9760a81c05015e6415d7bd39481f6d918","url":"https://github.com/libgdx/libgdx"},{"original_method":"public TiledMap load (String fileName, AtlasTiledMapLoaderParameters parameter) {\n\t\ttry {\n\t\t\tif (parameter != null) {\n\t\t\t\tyUp = parameter.yUp;\n\t\t\t} else {\n\t\t\t\tyUp = true;\n\t\t\t}\n\n\t\t\tFileHandle tmxFile = resolve(fileName);\n\t\t\troot = xml.parse(tmxFile);\n\t\t\tObjectMap<String, TextureAtlas> atlases = new ObjectMap<String, TextureAtlas>();\n\t\t\tFileHandle atlasFile = loadAtlas(root, tmxFile);\n\t\t\tif (atlasFile == null) {\n\t\t\t\tthrow new GdxRuntimeException(\"Couldn't load atlas\");\n\t\t\t}\n\n\t\t\tTextureAtlas atlas = new TextureAtlas(atlasFile);\n\t\t\tatlases.put(atlasFile.path(), atlas);\n\n\t\t\tAtlasResolver.DirectAtlasResolver atlasResolver = new AtlasResolver.DirectAtlasResolver(atlases);\n\t\t\tTiledMap map = loadMap(root, tmxFile, atlasResolver, parameter);\n\t\t\tmap.setOwnedResources(atlases.values().toArray());\n\t\t\tsetTextureFilters(parameter.textureMinFilter, parameter.textureMagFilter);\n\n\t\t\treturn map;\n\t\t} catch (IOException e) {\n\t\t\tthrow new GdxRuntimeException(\"Couldn't load tilemap '\" + fileName + \"'\", e);\n\t\t}\n\t}","id":13441,"modified_method":"public TiledMap load (String fileName, AtlasTiledMapLoaderParameters parameter) {\n\t\ttry {\n\t\t\tif (parameter != null) {\n\t\t\t\tyUp = parameter.yUp;\n\t\t\t\tconvertObjectToTileSpace = parameter.convertObjectToTileSpace;\n\t\t\t} else {\n\t\t\t\tyUp = true;\n\t\t\t\tconvertObjectToTileSpace = false;\n\t\t\t}\n\n\t\t\tFileHandle tmxFile = resolve(fileName);\n\t\t\troot = xml.parse(tmxFile);\n\t\t\tObjectMap<String, TextureAtlas> atlases = new ObjectMap<String, TextureAtlas>();\n\t\t\tFileHandle atlasFile = loadAtlas(root, tmxFile);\n\t\t\tif (atlasFile == null) {\n\t\t\t\tthrow new GdxRuntimeException(\"Couldn't load atlas\");\n\t\t\t}\n\n\t\t\tTextureAtlas atlas = new TextureAtlas(atlasFile);\n\t\t\tatlases.put(atlasFile.path(), atlas);\n\n\t\t\tAtlasResolver.DirectAtlasResolver atlasResolver = new AtlasResolver.DirectAtlasResolver(atlases);\n\t\t\tTiledMap map = loadMap(root, tmxFile, atlasResolver, parameter);\n\t\t\tmap.setOwnedResources(atlases.values().toArray());\n\t\t\tsetTextureFilters(parameter.textureMinFilter, parameter.textureMagFilter);\n\n\t\t\treturn map;\n\t\t} catch (IOException e) {\n\t\t\tthrow new GdxRuntimeException(\"Couldn't load tilemap '\" + fileName + \"'\", e);\n\t\t}\n\t}","commit_id":"af5cf0f9760a81c05015e6415d7bd39481f6d918","url":"https://github.com/libgdx/libgdx"},{"original_method":"@Override\n\tpublic void loadAsync (AssetManager manager, String fileName, FileHandle tmxFile, AtlasTiledMapLoaderParameters parameter) {\n\t\tmap = null;\n\n\t\tif (parameter != null) {\n\t\t\tyUp = parameter.yUp;\n\t\t} else {\n\t\t\tyUp = true;\n\t\t}\n\n\t\ttry {\n\t\t\tmap = loadMap(root, tmxFile, new AtlasResolver.AssetManagerAtlasResolver(manager), parameter);\n\t\t} catch (Exception e) {\n\t\t\tthrow new GdxRuntimeException(\"Couldn't load tilemap '\" + fileName + \"'\", e);\n\t\t}\n\t}","id":13442,"modified_method":"@Override\n\tpublic void loadAsync (AssetManager manager, String fileName, FileHandle tmxFile, AtlasTiledMapLoaderParameters parameter) {\n\t\tmap = null;\n\n\t\tif (parameter != null) {\n\t\t\tyUp = parameter.yUp;\n\t\t\tconvertObjectToTileSpace = parameter.convertObjectToTileSpace;\n\t\t} else {\n\t\t\tyUp = true;\n\t\t\tconvertObjectToTileSpace = false;\n\t\t}\n\n\t\ttry {\n\t\t\tmap = loadMap(root, tmxFile, new AtlasResolver.AssetManagerAtlasResolver(manager), parameter);\n\t\t} catch (Exception e) {\n\t\t\tthrow new GdxRuntimeException(\"Couldn't load tilemap '\" + fileName + \"'\", e);\n\t\t}\n\t}","commit_id":"af5cf0f9760a81c05015e6415d7bd39481f6d918","url":"https://github.com/libgdx/libgdx"},{"original_method":"protected TiledMap loadMap (Element root, FileHandle tmxFile, AtlasResolver resolver, AtlasTiledMapLoaderParameters parameter) {\n\t\tTiledMap map = new TiledMap();\n\n\t\tString mapOrientation = root.getAttribute(\"orientation\", null);\n\t\tint mapWidth = root.getIntAttribute(\"width\", 0);\n\t\tint mapHeight = root.getIntAttribute(\"height\", 0);\n\t\tint tileWidth = root.getIntAttribute(\"tilewidth\", 0);\n\t\tint tileHeight = root.getIntAttribute(\"tileheight\", 0);\n\t\tString mapBackgroundColor = root.getAttribute(\"backgroundcolor\", null);\n\n\t\tMapProperties mapProperties = map.getProperties();\n\t\tif (mapOrientation != null) {\n\t\t\tmapProperties.put(\"orientation\", mapOrientation);\n\t\t}\n\t\tmapProperties.put(\"width\", mapWidth);\n\t\tmapProperties.put(\"height\", mapHeight);\n\t\tmapProperties.put(\"tilewidth\", tileWidth);\n\t\tmapProperties.put(\"tileheight\", tileHeight);\n\t\tif (mapBackgroundColor != null) {\n\t\t\tmapProperties.put(\"backgroundcolor\", mapBackgroundColor);\n\t\t}\n\t\tmapWidthInPixels = mapWidth * tileWidth;\n\t\tmapHeightInPixels = mapHeight * tileHeight;\n\n\t\tfor (int i = 0, j = root.getChildCount(); i < j; i++) {\n\t\t\tElement element = root.getChild(i);\n\t\t\tString elementName = element.getName();\n\t\t\tif (elementName.equals(\"properties\")) {\n\t\t\t\tloadProperties(map.getProperties(), element);\n\t\t\t} else if (elementName.equals(\"tileset\")) {\n\t\t\t\tloadTileset(map, element, tmxFile, resolver, parameter);\n\t\t\t} else if (elementName.equals(\"layer\")) {\n\t\t\t\tloadTileLayer(map, element);\n\t\t\t} else if (elementName.equals(\"objectgroup\")) {\n\t\t\t\tloadObjectGroup(map, element);\n\t\t\t}\n\t\t}\n\t\treturn map;\n\t}","id":13443,"modified_method":"protected TiledMap loadMap (Element root, FileHandle tmxFile, AtlasResolver resolver, AtlasTiledMapLoaderParameters parameter) {\n\t\tTiledMap map = new TiledMap();\n\n\t\tString mapOrientation = root.getAttribute(\"orientation\", null);\n\t\tint mapWidth = root.getIntAttribute(\"width\", 0);\n\t\tint mapHeight = root.getIntAttribute(\"height\", 0);\n\t\tint tileWidth = root.getIntAttribute(\"tilewidth\", 0);\n\t\tint tileHeight = root.getIntAttribute(\"tileheight\", 0);\n\t\tString mapBackgroundColor = root.getAttribute(\"backgroundcolor\", null);\n\n\t\tMapProperties mapProperties = map.getProperties();\n\t\tif (mapOrientation != null) {\n\t\t\tmapProperties.put(\"orientation\", mapOrientation);\n\t\t}\n\t\tmapProperties.put(\"width\", mapWidth);\n\t\tmapProperties.put(\"height\", mapHeight);\n\t\tmapProperties.put(\"tilewidth\", tileWidth);\n\t\tmapProperties.put(\"tileheight\", tileHeight);\n\t\tif (mapBackgroundColor != null) {\n\t\t\tmapProperties.put(\"backgroundcolor\", mapBackgroundColor);\n\t\t}\n\n\t\tmapTileWidth = tileWidth;\n\t\tmapTileHeight = tileHeight;\n\t\tmapWidthInPixels = mapWidth * tileWidth;\n\t\tmapHeightInPixels = mapHeight * tileHeight;\n\n\t\tfor (int i = 0, j = root.getChildCount(); i < j; i++) {\n\t\t\tElement element = root.getChild(i);\n\t\t\tString elementName = element.getName();\n\t\t\tif (elementName.equals(\"properties\")) {\n\t\t\t\tloadProperties(map.getProperties(), element);\n\t\t\t} else if (elementName.equals(\"tileset\")) {\n\t\t\t\tloadTileset(map, element, tmxFile, resolver, parameter);\n\t\t\t} else if (elementName.equals(\"layer\")) {\n\t\t\t\tloadTileLayer(map, element);\n\t\t\t} else if (elementName.equals(\"objectgroup\")) {\n\t\t\t\tloadObjectGroup(map, element);\n\t\t\t}\n\t\t}\n\t\treturn map;\n\t}","commit_id":"af5cf0f9760a81c05015e6415d7bd39481f6d918","url":"https://github.com/libgdx/libgdx"},{"original_method":"protected void loadObject (MapLayer layer, Element element) {\n\t\tif (element.getName().equals(\"object\")) {\n\t\t\tMapObject object = null;\n\n\t\t\tint x = element.getIntAttribute(\"x\", 0);\n\t\t\tint y = (yUp ? mapHeightInPixels - element.getIntAttribute(\"y\", 0) : element.getIntAttribute(\"y\", 0));\n\n\t\t\tint width = element.getIntAttribute(\"width\", 0);\n\t\t\tint height = element.getIntAttribute(\"height\", 0);\n\n\t\t\tif (element.getChildCount() > 0) {\n\t\t\t\tElement child = null;\n\t\t\t\tif ((child = element.getChildByName(\"polygon\")) != null) {\n\t\t\t\t\tString[] points = child.getAttribute(\"points\").split(\" \");\n\t\t\t\t\tfloat[] vertices = new float[points.length * 2];\n\t\t\t\t\tfor (int i = 0; i < points.length; i++) {\n\t\t\t\t\t\tString[] point = points[i].split(\",\");\n\t\t\t\t\t\tvertices[i * 2] = Integer.parseInt(point[0]);\n\t\t\t\t\t\tvertices[i * 2 + 1] = Integer.parseInt(point[1]);\n\t\t\t\t\t\tif (yUp) {\n\t\t\t\t\t\t\tvertices[i * 2 + 1] *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tPolygon polygon = new Polygon(vertices);\n\t\t\t\t\tpolygon.setPosition(x, y);\n\t\t\t\t\tobject = new PolygonMapObject(polygon);\n\t\t\t\t} else if ((child = element.getChildByName(\"polyline\")) != null) {\n\t\t\t\t\tString[] points = child.getAttribute(\"points\").split(\" \");\n\t\t\t\t\tfloat[] vertices = new float[points.length * 2];\n\t\t\t\t\tfor (int i = 0; i < points.length; i++) {\n\t\t\t\t\t\tString[] point = points[i].split(\",\");\n\t\t\t\t\t\tvertices[i * 2] = Integer.parseInt(point[0]);\n\t\t\t\t\t\tvertices[i * 2 + 1] = Integer.parseInt(point[1]);\n\t\t\t\t\t\tif (yUp) {\n\t\t\t\t\t\t\tvertices[i * 2 + 1] *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tPolyline polyline = new Polyline(vertices);\n\t\t\t\t\tpolyline.setPosition(x, y);\n\t\t\t\t\tobject = new PolylineMapObject(polyline);\n\t\t\t\t} else if ((child = element.getChildByName(\"ellipse\")) != null) {\n\t\t\t\t\tobject = new EllipseMapObject(x, yUp ? y - height : y, width, height);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (object == null) {\n\t\t\t\tobject = new RectangleMapObject(x, yUp ? y - height : y, width, height);\n\t\t\t}\n\t\t\tobject.setName(element.getAttribute(\"name\", null));\n\t\t\tString type = element.getAttribute(\"type\", null);\n\t\t\tif (type != null) {\n\t\t\t\tobject.getProperties().put(\"type\", type);\n\t\t\t}\n\t\t\tint gid = element.getIntAttribute(\"gid\", -1);\n\t\t\tif (gid != -1) {\n\t\t\t\tobject.getProperties().put(\"gid\", gid);\n\t\t\t}\n\t\t\tobject.getProperties().put(\"x\", x);\n\t\t\tobject.getProperties().put(\"y\", yUp ? y - height : y);\n\t\t\tobject.setVisible(element.getIntAttribute(\"visible\", 1) == 1);\n\t\t\tElement properties = element.getChildByName(\"properties\");\n\t\t\tif (properties != null) {\n\t\t\t\tloadProperties(object.getProperties(), properties);\n\t\t\t}\n\t\t\tlayer.getObjects().add(object);\n\t\t}\n\t}","id":13444,"modified_method":"protected void loadObject (MapLayer layer, Element element) {\n\t\tif (element.getName().equals(\"object\")) {\n\t\t\tMapObject object = null;\n\n\t\t\tfloat scaleX = convertObjectToTileSpace ? 1.0f / mapTileWidth : 1.0f;\n\t\t\tfloat scaleY = convertObjectToTileSpace ? 1.0f / mapTileHeight : 1.0f;\n\n\t\t\tfloat x = element.getIntAttribute(\"x\", 0) * scaleX;\n\t\t\tfloat y = (yUp ? mapHeightInPixels - element.getIntAttribute(\"y\", 0) : element.getIntAttribute(\"y\", 0)) * scaleY;\n\n\t\t\tfloat width = element.getIntAttribute(\"width\", 0) * scaleX;\n\t\t\tfloat height = element.getIntAttribute(\"height\", 0) * scaleY;\n\n\t\t\tif (element.getChildCount() > 0) {\n\t\t\t\tElement child = null;\n\t\t\t\tif ((child = element.getChildByName(\"polygon\")) != null) {\n\t\t\t\t\tString[] points = child.getAttribute(\"points\").split(\" \");\n\t\t\t\t\tfloat[] vertices = new float[points.length * 2];\n\t\t\t\t\tfor (int i = 0; i < points.length; i++) {\n\t\t\t\t\t\tString[] point = points[i].split(\",\");\n\t\t\t\t\t\tvertices[i * 2] = Integer.parseInt(point[0]) * scaleX;\n\t\t\t\t\t\tvertices[i * 2 + 1] = Integer.parseInt(point[1]) * scaleY;\n\t\t\t\t\t\tif (yUp) {\n\t\t\t\t\t\t\tvertices[i * 2 + 1] *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tPolygon polygon = new Polygon(vertices);\n\t\t\t\t\tpolygon.setPosition(x, y);\n\t\t\t\t\tobject = new PolygonMapObject(polygon);\n\t\t\t\t} else if ((child = element.getChildByName(\"polyline\")) != null) {\n\t\t\t\t\tString[] points = child.getAttribute(\"points\").split(\" \");\n\t\t\t\t\tfloat[] vertices = new float[points.length * 2];\n\t\t\t\t\tfor (int i = 0; i < points.length; i++) {\n\t\t\t\t\t\tString[] point = points[i].split(\",\");\n\t\t\t\t\t\tvertices[i * 2] = Integer.parseInt(point[0]) * scaleX;\n\t\t\t\t\t\tvertices[i * 2 + 1] = Integer.parseInt(point[1]) * scaleY;\n\t\t\t\t\t\tif (yUp) {\n\t\t\t\t\t\t\tvertices[i * 2 + 1] *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tPolyline polyline = new Polyline(vertices);\n\t\t\t\t\tpolyline.setPosition(x, y);\n\t\t\t\t\tobject = new PolylineMapObject(polyline);\n\t\t\t\t} else if ((child = element.getChildByName(\"ellipse\")) != null) {\n\t\t\t\t\tobject = new EllipseMapObject(x, yUp ? y - height : y, width, height);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (object == null) {\n\t\t\t\tobject = new RectangleMapObject(x, yUp ? y - height : y, width, height);\n\t\t\t}\n\t\t\tobject.setName(element.getAttribute(\"name\", null));\n\t\t\tString type = element.getAttribute(\"type\", null);\n\t\t\tif (type != null) {\n\t\t\t\tobject.getProperties().put(\"type\", type);\n\t\t\t}\n\t\t\tint gid = element.getIntAttribute(\"gid\", -1);\n\t\t\tif (gid != -1) {\n\t\t\t\tobject.getProperties().put(\"gid\", gid);\n\t\t\t}\n\t\t\tobject.getProperties().put(\"x\", x * scaleX);\n\t\t\tobject.getProperties().put(\"y\", (yUp ? y - height : y) * scaleY);\n\t\t\tobject.setVisible(element.getIntAttribute(\"visible\", 1) == 1);\n\t\t\tElement properties = element.getChildByName(\"properties\");\n\t\t\tif (properties != null) {\n\t\t\t\tloadProperties(object.getProperties(), properties);\n\t\t\t}\n\t\t\tlayer.getObjects().add(object);\n\t\t}\n\t}","commit_id":"af5cf0f9760a81c05015e6415d7bd39481f6d918","url":"https://github.com/libgdx/libgdx"},{"original_method":"public TiledMap load (String fileName, AtlasTiledMapLoaderParameters parameter) {\n\t\ttry {\n\t\t\tif (parameter != null) {\n\t\t\t\tyUp = parameter.yUp;\n\t\t\t} else {\n\t\t\t\tyUp = true;\n\t\t\t}\n\n\t\t\tFileHandle tmxFile = resolve(fileName);\n\t\t\troot = xml.parse(tmxFile);\n\t\t\tObjectMap<String, TextureAtlas> atlases = new ObjectMap<String, TextureAtlas>();\n\t\t\tFileHandle atlasFile = loadAtlas(root, tmxFile);\n\t\t\tif (atlasFile == null) {\n\t\t\t\tthrow new GdxRuntimeException(\"Couldn't load atlas\");\n\t\t\t}\n\n\t\t\tTextureAtlas atlas = new TextureAtlas(atlasFile);\n\t\t\tatlases.put(atlasFile.path(), atlas);\n\n\t\t\tAtlasResolver.DirectAtlasResolver atlasResolver = new AtlasResolver.DirectAtlasResolver(atlases);\n\t\t\tTiledMap map = loadMap(root, tmxFile, atlasResolver, parameter);\n\t\t\tmap.setOwnedResources(atlases.values().toArray());\n\t\t\tsetTextureFilters(parameter.textureMinFilter, parameter.textureMagFilter);\n\n\t\t\treturn map;\n\t\t} catch (IOException e) {\n\t\t\tthrow new GdxRuntimeException(\"Couldn't load tilemap '\" + fileName + \"'\", e);\n\t\t}\n\t}","id":13445,"modified_method":"public TiledMap load (String fileName, AtlasTiledMapLoaderParameters parameter) {\n\t\ttry {\n\t\t\tif (parameter != null) {\n\t\t\t\tyUp = parameter.yUp;\n\t\t\t\tconvertObjectToTileSpace = parameter.convertObjectToTileSpace;\n\t\t\t} else {\n\t\t\t\tyUp = true;\n\t\t\t\tconvertObjectToTileSpace = false;\n\t\t\t}\n\n\t\t\tFileHandle tmxFile = resolve(fileName);\n\t\t\troot = xml.parse(tmxFile);\n\t\t\tObjectMap<String, TextureAtlas> atlases = new ObjectMap<String, TextureAtlas>();\n\t\t\tFileHandle atlasFile = loadAtlas(root, tmxFile);\n\t\t\tif (atlasFile == null) {\n\t\t\t\tthrow new GdxRuntimeException(\"Couldn't load atlas\");\n\t\t\t}\n\n\t\t\tTextureAtlas atlas = new TextureAtlas(atlasFile);\n\t\t\tatlases.put(atlasFile.path(), atlas);\n\n\t\t\tAtlasResolver.DirectAtlasResolver atlasResolver = new AtlasResolver.DirectAtlasResolver(atlases);\n\t\t\tTiledMap map = loadMap(root, tmxFile, atlasResolver, parameter);\n\t\t\tmap.setOwnedResources(atlases.values().toArray());\n\t\t\tsetTextureFilters(parameter.textureMinFilter, parameter.textureMagFilter);\n\n\t\t\treturn map;\n\t\t} catch (IOException e) {\n\t\t\tthrow new GdxRuntimeException(\"Couldn't load tilemap '\" + fileName + \"'\", e);\n\t\t}\n\t}","commit_id":"af5cf0f9760a81c05015e6415d7bd39481f6d918","url":"https://github.com/libgdx/libgdx"},{"original_method":"@Override\n\tpublic void loadAsync (AssetManager manager, String fileName, FileHandle tmxFile, AtlasTiledMapLoaderParameters parameter) {\n\t\tmap = null;\n\n\t\tif (parameter != null) {\n\t\t\tyUp = parameter.yUp;\n\t\t} else {\n\t\t\tyUp = true;\n\t\t}\n\n\t\ttry {\n\t\t\tmap = loadMap(root, tmxFile, new AtlasResolver.AssetManagerAtlasResolver(manager), parameter);\n\t\t} catch (Exception e) {\n\t\t\tthrow new GdxRuntimeException(\"Couldn't load tilemap '\" + fileName + \"'\", e);\n\t\t}\n\t}","id":13446,"modified_method":"@Override\n\tpublic void loadAsync (AssetManager manager, String fileName, FileHandle tmxFile, AtlasTiledMapLoaderParameters parameter) {\n\t\tmap = null;\n\n\t\tif (parameter != null) {\n\t\t\tyUp = parameter.yUp;\n\t\t\tconvertObjectToTileSpace = parameter.convertObjectToTileSpace;\n\t\t} else {\n\t\t\tyUp = true;\n\t\t\tconvertObjectToTileSpace = false;\n\t\t}\n\n\t\ttry {\n\t\t\tmap = loadMap(root, tmxFile, new AtlasResolver.AssetManagerAtlasResolver(manager), parameter);\n\t\t} catch (Exception e) {\n\t\t\tthrow new GdxRuntimeException(\"Couldn't load tilemap '\" + fileName + \"'\", e);\n\t\t}\n\t}","commit_id":"af5cf0f9760a81c05015e6415d7bd39481f6d918","url":"https://github.com/libgdx/libgdx"},{"original_method":"protected TiledMap loadMap (Element root, FileHandle tmxFile, AtlasResolver resolver, AtlasTiledMapLoaderParameters parameter) {\n\t\tTiledMap map = new TiledMap();\n\n\t\tString mapOrientation = root.getAttribute(\"orientation\", null);\n\t\tint mapWidth = root.getIntAttribute(\"width\", 0);\n\t\tint mapHeight = root.getIntAttribute(\"height\", 0);\n\t\tint tileWidth = root.getIntAttribute(\"tilewidth\", 0);\n\t\tint tileHeight = root.getIntAttribute(\"tileheight\", 0);\n\t\tString mapBackgroundColor = root.getAttribute(\"backgroundcolor\", null);\n\n\t\tMapProperties mapProperties = map.getProperties();\n\t\tif (mapOrientation != null) {\n\t\t\tmapProperties.put(\"orientation\", mapOrientation);\n\t\t}\n\t\tmapProperties.put(\"width\", mapWidth);\n\t\tmapProperties.put(\"height\", mapHeight);\n\t\tmapProperties.put(\"tilewidth\", tileWidth);\n\t\tmapProperties.put(\"tileheight\", tileHeight);\n\t\tif (mapBackgroundColor != null) {\n\t\t\tmapProperties.put(\"backgroundcolor\", mapBackgroundColor);\n\t\t}\n\t\tmapWidthInPixels = mapWidth * tileWidth;\n\t\tmapHeightInPixels = mapHeight * tileHeight;\n\n\t\tfor (int i = 0, j = root.getChildCount(); i < j; i++) {\n\t\t\tElement element = root.getChild(i);\n\t\t\tString elementName = element.getName();\n\t\t\tif (elementName.equals(\"properties\")) {\n\t\t\t\tloadProperties(map.getProperties(), element);\n\t\t\t} else if (elementName.equals(\"tileset\")) {\n\t\t\t\tloadTileset(map, element, tmxFile, resolver, parameter);\n\t\t\t} else if (elementName.equals(\"layer\")) {\n\t\t\t\tloadTileLayer(map, element);\n\t\t\t} else if (elementName.equals(\"objectgroup\")) {\n\t\t\t\tloadObjectGroup(map, element);\n\t\t\t}\n\t\t}\n\t\treturn map;\n\t}","id":13447,"modified_method":"protected TiledMap loadMap (Element root, FileHandle tmxFile, AtlasResolver resolver, AtlasTiledMapLoaderParameters parameter) {\n\t\tTiledMap map = new TiledMap();\n\n\t\tString mapOrientation = root.getAttribute(\"orientation\", null);\n\t\tint mapWidth = root.getIntAttribute(\"width\", 0);\n\t\tint mapHeight = root.getIntAttribute(\"height\", 0);\n\t\tint tileWidth = root.getIntAttribute(\"tilewidth\", 0);\n\t\tint tileHeight = root.getIntAttribute(\"tileheight\", 0);\n\t\tString mapBackgroundColor = root.getAttribute(\"backgroundcolor\", null);\n\n\t\tMapProperties mapProperties = map.getProperties();\n\t\tif (mapOrientation != null) {\n\t\t\tmapProperties.put(\"orientation\", mapOrientation);\n\t\t}\n\t\tmapProperties.put(\"width\", mapWidth);\n\t\tmapProperties.put(\"height\", mapHeight);\n\t\tmapProperties.put(\"tilewidth\", tileWidth);\n\t\tmapProperties.put(\"tileheight\", tileHeight);\n\t\tif (mapBackgroundColor != null) {\n\t\t\tmapProperties.put(\"backgroundcolor\", mapBackgroundColor);\n\t\t}\n\n\t\tmapTileWidth = tileWidth;\n\t\tmapTileHeight = tileHeight;\n\t\tmapWidthInPixels = mapWidth * tileWidth;\n\t\tmapHeightInPixels = mapHeight * tileHeight;\n\n\t\tfor (int i = 0, j = root.getChildCount(); i < j; i++) {\n\t\t\tElement element = root.getChild(i);\n\t\t\tString elementName = element.getName();\n\t\t\tif (elementName.equals(\"properties\")) {\n\t\t\t\tloadProperties(map.getProperties(), element);\n\t\t\t} else if (elementName.equals(\"tileset\")) {\n\t\t\t\tloadTileset(map, element, tmxFile, resolver, parameter);\n\t\t\t} else if (elementName.equals(\"layer\")) {\n\t\t\t\tloadTileLayer(map, element);\n\t\t\t} else if (elementName.equals(\"objectgroup\")) {\n\t\t\t\tloadObjectGroup(map, element);\n\t\t\t}\n\t\t}\n\t\treturn map;\n\t}","commit_id":"af5cf0f9760a81c05015e6415d7bd39481f6d918","url":"https://github.com/libgdx/libgdx"},{"original_method":"protected void loadObject (MapLayer layer, Element element) {\n\t\tif (element.getName().equals(\"object\")) {\n\t\t\tMapObject object = null;\n\n\t\t\tint x = element.getIntAttribute(\"x\", 0);\n\t\t\tint y = (yUp ? mapHeightInPixels - element.getIntAttribute(\"y\", 0) : element.getIntAttribute(\"y\", 0));\n\n\t\t\tint width = element.getIntAttribute(\"width\", 0);\n\t\t\tint height = element.getIntAttribute(\"height\", 0);\n\n\t\t\tif (element.getChildCount() > 0) {\n\t\t\t\tElement child = null;\n\t\t\t\tif ((child = element.getChildByName(\"polygon\")) != null) {\n\t\t\t\t\tString[] points = child.getAttribute(\"points\").split(\" \");\n\t\t\t\t\tfloat[] vertices = new float[points.length * 2];\n\t\t\t\t\tfor (int i = 0; i < points.length; i++) {\n\t\t\t\t\t\tString[] point = points[i].split(\",\");\n\t\t\t\t\t\tvertices[i * 2] = Integer.parseInt(point[0]);\n\t\t\t\t\t\tvertices[i * 2 + 1] = Integer.parseInt(point[1]);\n\t\t\t\t\t\tif (yUp) {\n\t\t\t\t\t\t\tvertices[i * 2 + 1] *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tPolygon polygon = new Polygon(vertices);\n\t\t\t\t\tpolygon.setPosition(x, y);\n\t\t\t\t\tobject = new PolygonMapObject(polygon);\n\t\t\t\t} else if ((child = element.getChildByName(\"polyline\")) != null) {\n\t\t\t\t\tString[] points = child.getAttribute(\"points\").split(\" \");\n\t\t\t\t\tfloat[] vertices = new float[points.length * 2];\n\t\t\t\t\tfor (int i = 0; i < points.length; i++) {\n\t\t\t\t\t\tString[] point = points[i].split(\",\");\n\t\t\t\t\t\tvertices[i * 2] = Integer.parseInt(point[0]);\n\t\t\t\t\t\tvertices[i * 2 + 1] = Integer.parseInt(point[1]);\n\t\t\t\t\t\tif (yUp) {\n\t\t\t\t\t\t\tvertices[i * 2 + 1] *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tPolyline polyline = new Polyline(vertices);\n\t\t\t\t\tpolyline.setPosition(x, y);\n\t\t\t\t\tobject = new PolylineMapObject(polyline);\n\t\t\t\t} else if ((child = element.getChildByName(\"ellipse\")) != null) {\n\t\t\t\t\tobject = new EllipseMapObject(x, yUp ? y - height : y, width, height);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (object == null) {\n\t\t\t\tobject = new RectangleMapObject(x, yUp ? y - height : y, width, height);\n\t\t\t}\n\t\t\tobject.setName(element.getAttribute(\"name\", null));\n\t\t\tString type = element.getAttribute(\"type\", null);\n\t\t\tif (type != null) {\n\t\t\t\tobject.getProperties().put(\"type\", type);\n\t\t\t}\n\t\t\tint gid = element.getIntAttribute(\"gid\", -1);\n\t\t\tif (gid != -1) {\n\t\t\t\tobject.getProperties().put(\"gid\", gid);\n\t\t\t}\n\t\t\tobject.getProperties().put(\"x\", x);\n\t\t\tobject.getProperties().put(\"y\", yUp ? y - height : y);\n\t\t\tobject.setVisible(element.getIntAttribute(\"visible\", 1) == 1);\n\t\t\tElement properties = element.getChildByName(\"properties\");\n\t\t\tif (properties != null) {\n\t\t\t\tloadProperties(object.getProperties(), properties);\n\t\t\t}\n\t\t\tlayer.getObjects().add(object);\n\t\t}\n\t}","id":13448,"modified_method":"protected void loadObject (MapLayer layer, Element element) {\n\t\tif (element.getName().equals(\"object\")) {\n\t\t\tMapObject object = null;\n\n\t\t\tfloat scaleX = convertObjectToTileSpace ? 1.0f / mapTileWidth : 1.0f;\n\t\t\tfloat scaleY = convertObjectToTileSpace ? 1.0f / mapTileHeight : 1.0f;\n\n\t\t\tfloat x = element.getIntAttribute(\"x\", 0) * scaleX;\n\t\t\tfloat y = (yUp ? mapHeightInPixels - element.getIntAttribute(\"y\", 0) : element.getIntAttribute(\"y\", 0)) * scaleY;\n\n\t\t\tfloat width = element.getIntAttribute(\"width\", 0) * scaleX;\n\t\t\tfloat height = element.getIntAttribute(\"height\", 0) * scaleY;\n\n\t\t\tif (element.getChildCount() > 0) {\n\t\t\t\tElement child = null;\n\t\t\t\tif ((child = element.getChildByName(\"polygon\")) != null) {\n\t\t\t\t\tString[] points = child.getAttribute(\"points\").split(\" \");\n\t\t\t\t\tfloat[] vertices = new float[points.length * 2];\n\t\t\t\t\tfor (int i = 0; i < points.length; i++) {\n\t\t\t\t\t\tString[] point = points[i].split(\",\");\n\t\t\t\t\t\tvertices[i * 2] = Integer.parseInt(point[0]) * scaleX;\n\t\t\t\t\t\tvertices[i * 2 + 1] = Integer.parseInt(point[1]) * scaleY;\n\t\t\t\t\t\tif (yUp) {\n\t\t\t\t\t\t\tvertices[i * 2 + 1] *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tPolygon polygon = new Polygon(vertices);\n\t\t\t\t\tpolygon.setPosition(x, y);\n\t\t\t\t\tobject = new PolygonMapObject(polygon);\n\t\t\t\t} else if ((child = element.getChildByName(\"polyline\")) != null) {\n\t\t\t\t\tString[] points = child.getAttribute(\"points\").split(\" \");\n\t\t\t\t\tfloat[] vertices = new float[points.length * 2];\n\t\t\t\t\tfor (int i = 0; i < points.length; i++) {\n\t\t\t\t\t\tString[] point = points[i].split(\",\");\n\t\t\t\t\t\tvertices[i * 2] = Integer.parseInt(point[0]) * scaleX;\n\t\t\t\t\t\tvertices[i * 2 + 1] = Integer.parseInt(point[1]) * scaleY;\n\t\t\t\t\t\tif (yUp) {\n\t\t\t\t\t\t\tvertices[i * 2 + 1] *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tPolyline polyline = new Polyline(vertices);\n\t\t\t\t\tpolyline.setPosition(x, y);\n\t\t\t\t\tobject = new PolylineMapObject(polyline);\n\t\t\t\t} else if ((child = element.getChildByName(\"ellipse\")) != null) {\n\t\t\t\t\tobject = new EllipseMapObject(x, yUp ? y - height : y, width, height);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (object == null) {\n\t\t\t\tobject = new RectangleMapObject(x, yUp ? y - height : y, width, height);\n\t\t\t}\n\t\t\tobject.setName(element.getAttribute(\"name\", null));\n\t\t\tString type = element.getAttribute(\"type\", null);\n\t\t\tif (type != null) {\n\t\t\t\tobject.getProperties().put(\"type\", type);\n\t\t\t}\n\t\t\tint gid = element.getIntAttribute(\"gid\", -1);\n\t\t\tif (gid != -1) {\n\t\t\t\tobject.getProperties().put(\"gid\", gid);\n\t\t\t}\n\t\t\tobject.getProperties().put(\"x\", x * scaleX);\n\t\t\tobject.getProperties().put(\"y\", (yUp ? y - height : y) * scaleY);\n\t\t\tobject.setVisible(element.getIntAttribute(\"visible\", 1) == 1);\n\t\t\tElement properties = element.getChildByName(\"properties\");\n\t\t\tif (properties != null) {\n\t\t\t\tloadProperties(object.getProperties(), properties);\n\t\t\t}\n\t\t\tlayer.getObjects().add(object);\n\t\t}\n\t}","commit_id":"af5cf0f9760a81c05015e6415d7bd39481f6d918","url":"https://github.com/libgdx/libgdx"},{"original_method":"/** Loads the {@link TiledMap} from the given file. The file is resolved via the {@link FileHandleResolver} set in the\n\t * constructor of this class. By default it will resolve to an internal file.\n\t * @param fileName the filename\n\t * @param parameters specifies whether to use y-up, generate mip maps etc.\n\t * @return the TiledMap */\n\tpublic TiledMap load (String fileName, TmxMapLoader.Parameters parameters) {\n\t\ttry {\n\t\t\tthis.yUp = parameters.yUp;\n\t\t\tFileHandle tmxFile = resolve(fileName);\n\t\t\troot = xml.parse(tmxFile);\n\t\t\tObjectMap<String, Texture> textures = new ObjectMap<String, Texture>();\n\t\t\tfor (FileHandle textureFile : loadTilesets(root, tmxFile)) {\n\t\t\t\tTexture texture = new Texture(textureFile, parameters.generateMipMaps);\n\t\t\t\ttexture.setFilter(parameters.textureMinFilter, parameters.textureMagFilter);\n\t\t\t\ttextures.put(textureFile.path(), texture);\n\t\t\t}\n\t\t\tDirectImageResolver imageResolver = new DirectImageResolver(textures);\n\t\t\tTiledMap map = loadTilemap(root, tmxFile, imageResolver);\n\t\t\tmap.setOwnedResources(textures.values().toArray());\n\t\t\treturn map;\n\t\t} catch (IOException e) {\n\t\t\tthrow new GdxRuntimeException(\"Couldn't load tilemap '\" + fileName + \"'\", e);\n\t\t}\n\t}","id":13449,"modified_method":"/** Loads the {@link TiledMap} from the given file. The file is resolved via the {@link FileHandleResolver} set in the\n\t * constructor of this class. By default it will resolve to an internal file.\n\t * @param fileName the filename\n\t * @param parameters specifies whether to use y-up, generate mip maps etc.\n\t * @return the TiledMap */\n\tpublic TiledMap load (String fileName, TmxMapLoader.Parameters parameters) {\n\t\ttry {\n\t\t\tthis.yUp = parameters.yUp;\n\t\t\tthis.convertObjectToTileSpace = parameters.convertObjectToTileSpace;\n\t\t\tFileHandle tmxFile = resolve(fileName);\n\t\t\troot = xml.parse(tmxFile);\n\t\t\tObjectMap<String, Texture> textures = new ObjectMap<String, Texture>();\n\t\t\tfor (FileHandle textureFile : loadTilesets(root, tmxFile)) {\n\t\t\t\tTexture texture = new Texture(textureFile, parameters.generateMipMaps);\n\t\t\t\ttexture.setFilter(parameters.textureMinFilter, parameters.textureMagFilter);\n\t\t\t\ttextures.put(textureFile.path(), texture);\n\t\t\t}\n\t\t\tDirectImageResolver imageResolver = new DirectImageResolver(textures);\n\t\t\tTiledMap map = loadTilemap(root, tmxFile, imageResolver);\n\t\t\tmap.setOwnedResources(textures.values().toArray());\n\t\t\treturn map;\n\t\t} catch (IOException e) {\n\t\t\tthrow new GdxRuntimeException(\"Couldn't load tilemap '\" + fileName + \"'\", e);\n\t\t}\n\t}","commit_id":"af5cf0f9760a81c05015e6415d7bd39481f6d918","url":"https://github.com/libgdx/libgdx"},{"original_method":"/** Loads the map data, given the XML root element and an {@link ImageResolver} used to return the tileset Textures\n\t * @param root the XML root element\n\t * @param tmxFile the Filehandle of the tmx file\n\t * @param imageResolver the {@link ImageResolver}\n\t * @return the {@link TiledMap} */\n\tprotected TiledMap loadTilemap (Element root, FileHandle tmxFile, ImageResolver imageResolver) {\n\t\tTiledMap map = new TiledMap();\n\n\t\tString mapOrientation = root.getAttribute(\"orientation\", null);\n\t\tint mapWidth = root.getIntAttribute(\"width\", 0);\n\t\tint mapHeight = root.getIntAttribute(\"height\", 0);\n\t\tint tileWidth = root.getIntAttribute(\"tilewidth\", 0);\n\t\tint tileHeight = root.getIntAttribute(\"tileheight\", 0);\n\t\tString mapBackgroundColor = root.getAttribute(\"backgroundcolor\", null);\n\n\t\tMapProperties mapProperties = map.getProperties();\n\t\tif (mapOrientation != null) {\n\t\t\tmapProperties.put(\"orientation\", mapOrientation);\n\t\t}\n\t\tmapProperties.put(\"width\", mapWidth);\n\t\tmapProperties.put(\"height\", mapHeight);\n\t\tmapProperties.put(\"tilewidth\", tileWidth);\n\t\tmapProperties.put(\"tileheight\", tileHeight);\n\t\tif (mapBackgroundColor != null) {\n\t\t\tmapProperties.put(\"backgroundcolor\", mapBackgroundColor);\n\t\t}\n\t\tmapWidthInPixels = mapWidth * tileWidth;\n\t\tmapHeightInPixels = mapHeight * tileHeight;\n\n\t\tElement properties = root.getChildByName(\"properties\");\n\t\tif (properties != null) {\n\t\t\tloadProperties(map.getProperties(), properties);\n\t\t}\n\t\tArray<Element> tilesets = root.getChildrenByName(\"tileset\");\n\t\tfor (Element element : tilesets) {\n\t\t\tloadTileSet(map, element, tmxFile, imageResolver);\n\t\t\troot.removeChild(element);\n\t\t}\n\t\tfor (int i = 0, j = root.getChildCount(); i < j; i++) {\n\t\t\tElement element = root.getChild(i);\n\t\t\tString name = element.getName();\n\t\t\tif (name.equals(\"layer\")) {\n\t\t\t\tloadTileLayer(map, element);\n\t\t\t} else if (name.equals(\"objectgroup\")) {\n\t\t\t\tloadObjectGroup(map, element);\n\t\t\t}\n\t\t}\n\t\treturn map;\n\t}","id":13450,"modified_method":"/** Loads the map data, given the XML root element and an {@link ImageResolver} used to return the tileset Textures\n\t * @param root the XML root element\n\t * @param tmxFile the Filehandle of the tmx file\n\t * @param imageResolver the {@link ImageResolver}\n\t * @return the {@link TiledMap} */\n\tprotected TiledMap loadTilemap (Element root, FileHandle tmxFile, ImageResolver imageResolver) {\n\t\tTiledMap map = new TiledMap();\n\n\t\tString mapOrientation = root.getAttribute(\"orientation\", null);\n\t\tint mapWidth = root.getIntAttribute(\"width\", 0);\n\t\tint mapHeight = root.getIntAttribute(\"height\", 0);\n\t\tint tileWidth = root.getIntAttribute(\"tilewidth\", 0);\n\t\tint tileHeight = root.getIntAttribute(\"tileheight\", 0);\n\t\tString mapBackgroundColor = root.getAttribute(\"backgroundcolor\", null);\n\n\t\tMapProperties mapProperties = map.getProperties();\n\t\tif (mapOrientation != null) {\n\t\t\tmapProperties.put(\"orientation\", mapOrientation);\n\t\t}\n\t\tmapProperties.put(\"width\", mapWidth);\n\t\tmapProperties.put(\"height\", mapHeight);\n\t\tmapProperties.put(\"tilewidth\", tileWidth);\n\t\tmapProperties.put(\"tileheight\", tileHeight);\n\t\tif (mapBackgroundColor != null) {\n\t\t\tmapProperties.put(\"backgroundcolor\", mapBackgroundColor);\n\t\t}\n\t\tmapTileWidth = tileWidth;\n\t\tmapTileHeight = tileHeight;\n\t\tmapWidthInPixels = mapWidth * tileWidth;\n\t\tmapHeightInPixels = mapHeight * tileHeight;\n\n\t\tElement properties = root.getChildByName(\"properties\");\n\t\tif (properties != null) {\n\t\t\tloadProperties(map.getProperties(), properties);\n\t\t}\n\t\tArray<Element> tilesets = root.getChildrenByName(\"tileset\");\n\t\tfor (Element element : tilesets) {\n\t\t\tloadTileSet(map, element, tmxFile, imageResolver);\n\t\t\troot.removeChild(element);\n\t\t}\n\t\tfor (int i = 0, j = root.getChildCount(); i < j; i++) {\n\t\t\tElement element = root.getChild(i);\n\t\t\tString name = element.getName();\n\t\t\tif (name.equals(\"layer\")) {\n\t\t\t\tloadTileLayer(map, element);\n\t\t\t} else if (name.equals(\"objectgroup\")) {\n\t\t\t\tloadObjectGroup(map, element);\n\t\t\t}\n\t\t}\n\t\treturn map;\n\t}","commit_id":"af5cf0f9760a81c05015e6415d7bd39481f6d918","url":"https://github.com/libgdx/libgdx"},{"original_method":"@Override\n\tpublic void loadAsync (AssetManager manager, String fileName, FileHandle tmxFile, TmxMapLoader.Parameters parameter) {\n\t\tmap = null;\n\n\t\tif (parameter != null) {\n\t\t\tyUp = parameter.yUp;\n\t\t} else {\n\t\t\tyUp = true;\n\t\t}\n\t\ttry {\n\t\t\tmap = loadTilemap(root, tmxFile, new AssetManagerImageResolver(manager));\n\t\t} catch (Exception e) {\n\t\t\tthrow new GdxRuntimeException(\"Couldn't load tilemap '\" + fileName + \"'\", e);\n\t\t}\n\t}","id":13451,"modified_method":"@Override\n\tpublic void loadAsync (AssetManager manager, String fileName, FileHandle tmxFile, TmxMapLoader.Parameters parameter) {\n\t\tmap = null;\n\n\t\tif (parameter != null) {\n\t\t\tyUp = parameter.yUp;\n\t\t\tconvertObjectToTileSpace = parameter.convertObjectToTileSpace;\n\t\t} else {\n\t\t\tyUp = true;\n\t\t\tconvertObjectToTileSpace = false;\n\t\t}\n\t\ttry {\n\t\t\tmap = loadTilemap(root, tmxFile, new AssetManagerImageResolver(manager));\n\t\t} catch (Exception e) {\n\t\t\tthrow new GdxRuntimeException(\"Couldn't load tilemap '\" + fileName + \"'\", e);\n\t\t}\n\t}","commit_id":"af5cf0f9760a81c05015e6415d7bd39481f6d918","url":"https://github.com/libgdx/libgdx"},{"original_method":"@Override\n\tpublic void loadAsync (AssetManager manager, String fileName, FileHandle tmxFile, TmxMapLoader.Parameters parameter) {\n\t\tmap = null;\n\n\t\tif (parameter != null) {\n\t\t\tyUp = parameter.yUp;\n\t\t} else {\n\t\t\tyUp = true;\n\t\t}\n\t\ttry {\n\t\t\tmap = loadTilemap(root, tmxFile, new AssetManagerImageResolver(manager));\n\t\t} catch (Exception e) {\n\t\t\tthrow new GdxRuntimeException(\"Couldn't load tilemap '\" + fileName + \"'\", e);\n\t\t}\n\t}","id":13452,"modified_method":"@Override\n\tpublic void loadAsync (AssetManager manager, String fileName, FileHandle tmxFile, TmxMapLoader.Parameters parameter) {\n\t\tmap = null;\n\n\t\tif (parameter != null) {\n\t\t\tyUp = parameter.yUp;\n\t\t\tconvertObjectToTileSpace = parameter.convertObjectToTileSpace;\n\t\t} else {\n\t\t\tyUp = true;\n\t\t\tconvertObjectToTileSpace = false;\n\t\t}\n\t\ttry {\n\t\t\tmap = loadTilemap(root, tmxFile, new AssetManagerImageResolver(manager));\n\t\t} catch (Exception e) {\n\t\t\tthrow new GdxRuntimeException(\"Couldn't load tilemap '\" + fileName + \"'\", e);\n\t\t}\n\t}","commit_id":"af5cf0f9760a81c05015e6415d7bd39481f6d918","url":"https://github.com/libgdx/libgdx"},{"original_method":"@Override\n\tpublic TiledMap loadSync (AssetManager manager, String fileName, FileHandle fileHandle, TmxMapLoader.Parameters parameter) {\n\t\treturn map;\n\t}","id":13453,"modified_method":"@Override\n\tpublic TiledMap loadSync (AssetManager manager, String fileName, FileHandle file, TmxMapLoader.Parameters parameter) {\n\t\treturn map;\n\t}","commit_id":"af5cf0f9760a81c05015e6415d7bd39481f6d918","url":"https://github.com/libgdx/libgdx"},{"original_method":"/** Loads the {@link TiledMap} from the given file. The file is resolved via the {@link FileHandleResolver} set in the\n\t * constructor of this class. By default it will resolve to an internal file.\n\t * @param fileName the filename\n\t * @param parameters specifies whether to use y-up, generate mip maps etc.\n\t * @return the TiledMap */\n\tpublic TiledMap load (String fileName, TmxMapLoader.Parameters parameters) {\n\t\ttry {\n\t\t\tthis.yUp = parameters.yUp;\n\t\t\tFileHandle tmxFile = resolve(fileName);\n\t\t\troot = xml.parse(tmxFile);\n\t\t\tObjectMap<String, Texture> textures = new ObjectMap<String, Texture>();\n\t\t\tfor (FileHandle textureFile : loadTilesets(root, tmxFile)) {\n\t\t\t\tTexture texture = new Texture(textureFile, parameters.generateMipMaps);\n\t\t\t\ttexture.setFilter(parameters.textureMinFilter, parameters.textureMagFilter);\n\t\t\t\ttextures.put(textureFile.path(), texture);\n\t\t\t}\n\t\t\tDirectImageResolver imageResolver = new DirectImageResolver(textures);\n\t\t\tTiledMap map = loadTilemap(root, tmxFile, imageResolver);\n\t\t\tmap.setOwnedResources(textures.values().toArray());\n\t\t\treturn map;\n\t\t} catch (IOException e) {\n\t\t\tthrow new GdxRuntimeException(\"Couldn't load tilemap '\" + fileName + \"'\", e);\n\t\t}\n\t}","id":13454,"modified_method":"/** Loads the {@link TiledMap} from the given file. The file is resolved via the {@link FileHandleResolver} set in the\n\t * constructor of this class. By default it will resolve to an internal file.\n\t * @param fileName the filename\n\t * @param parameters specifies whether to use y-up, generate mip maps etc.\n\t * @return the TiledMap */\n\tpublic TiledMap load (String fileName, TmxMapLoader.Parameters parameters) {\n\t\ttry {\n\t\t\tthis.yUp = parameters.yUp;\n\t\t\tthis.convertObjectToTileSpace = parameters.convertObjectToTileSpace;\n\t\t\tFileHandle tmxFile = resolve(fileName);\n\t\t\troot = xml.parse(tmxFile);\n\t\t\tObjectMap<String, Texture> textures = new ObjectMap<String, Texture>();\n\t\t\tfor (FileHandle textureFile : loadTilesets(root, tmxFile)) {\n\t\t\t\tTexture texture = new Texture(textureFile, parameters.generateMipMaps);\n\t\t\t\ttexture.setFilter(parameters.textureMinFilter, parameters.textureMagFilter);\n\t\t\t\ttextures.put(textureFile.path(), texture);\n\t\t\t}\n\t\t\tDirectImageResolver imageResolver = new DirectImageResolver(textures);\n\t\t\tTiledMap map = loadTilemap(root, tmxFile, imageResolver);\n\t\t\tmap.setOwnedResources(textures.values().toArray());\n\t\t\treturn map;\n\t\t} catch (IOException e) {\n\t\t\tthrow new GdxRuntimeException(\"Couldn't load tilemap '\" + fileName + \"'\", e);\n\t\t}\n\t}","commit_id":"af5cf0f9760a81c05015e6415d7bd39481f6d918","url":"https://github.com/libgdx/libgdx"},{"original_method":"protected void loadObject (MapLayer layer, Element element) {\n\t\tif (element.getName().equals(\"object\")) {\n\t\t\tMapObject object = null;\n\n\t\t\tint x = element.getIntAttribute(\"x\", 0);\n\t\t\tint y = (yUp ? mapHeightInPixels - element.getIntAttribute(\"y\", 0) : element.getIntAttribute(\"y\", 0));\n\n\t\t\tint width = element.getIntAttribute(\"width\", 0);\n\t\t\tint height = element.getIntAttribute(\"height\", 0);\n\n\t\t\tif (element.getChildCount() > 0) {\n\t\t\t\tElement child = null;\n\t\t\t\tif ((child = element.getChildByName(\"polygon\")) != null) {\n\t\t\t\t\tString[] points = child.getAttribute(\"points\").split(\" \");\n\t\t\t\t\tfloat[] vertices = new float[points.length * 2];\n\t\t\t\t\tfor (int i = 0; i < points.length; i++) {\n\t\t\t\t\t\tString[] point = points[i].split(\",\");\n\t\t\t\t\t\tvertices[i * 2] = Integer.parseInt(point[0]);\n\t\t\t\t\t\tvertices[i * 2 + 1] = Integer.parseInt(point[1]);\n\t\t\t\t\t\tif (yUp) {\n\t\t\t\t\t\t\tvertices[i * 2 + 1] *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tPolygon polygon = new Polygon(vertices);\n\t\t\t\t\tpolygon.setPosition(x, y);\n\t\t\t\t\tobject = new PolygonMapObject(polygon);\n\t\t\t\t} else if ((child = element.getChildByName(\"polyline\")) != null) {\n\t\t\t\t\tString[] points = child.getAttribute(\"points\").split(\" \");\n\t\t\t\t\tfloat[] vertices = new float[points.length * 2];\n\t\t\t\t\tfor (int i = 0; i < points.length; i++) {\n\t\t\t\t\t\tString[] point = points[i].split(\",\");\n\t\t\t\t\t\tvertices[i * 2] = Integer.parseInt(point[0]);\n\t\t\t\t\t\tvertices[i * 2 + 1] = Integer.parseInt(point[1]);\n\t\t\t\t\t\tif (yUp) {\n\t\t\t\t\t\t\tvertices[i * 2 + 1] *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tPolyline polyline = new Polyline(vertices);\n\t\t\t\t\tpolyline.setPosition(x, y);\n\t\t\t\t\tobject = new PolylineMapObject(polyline);\n\t\t\t\t} else if ((child = element.getChildByName(\"ellipse\")) != null) {\n\t\t\t\t\tobject = new EllipseMapObject(x, yUp ? y - height : y, width, height);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (object == null) {\n\t\t\t\tobject = new RectangleMapObject(x, yUp ? y - height : y, width, height);\n\t\t\t}\n\t\t\tobject.setName(element.getAttribute(\"name\", null));\n\t\t\tString type = element.getAttribute(\"type\", null);\n\t\t\tif (type != null) {\n\t\t\t\tobject.getProperties().put(\"type\", type);\n\t\t\t}\n\t\t\tint gid = element.getIntAttribute(\"gid\", -1);\n\t\t\tif (gid != -1) {\n\t\t\t\tobject.getProperties().put(\"gid\", gid);\n\t\t\t}\n\t\t\tobject.getProperties().put(\"x\", x);\n\t\t\tobject.getProperties().put(\"y\", yUp ? y - height : y);\n\t\t\tobject.setVisible(element.getIntAttribute(\"visible\", 1) == 1);\n\t\t\tElement properties = element.getChildByName(\"properties\");\n\t\t\tif (properties != null) {\n\t\t\t\tloadProperties(object.getProperties(), properties);\n\t\t\t}\n\t\t\tlayer.getObjects().add(object);\n\t\t}\n\t}","id":13455,"modified_method":"protected void loadObject (MapLayer layer, Element element) {\n\t\tif (element.getName().equals(\"object\")) {\n\t\t\tMapObject object = null;\n\n\t\t\tfloat scaleX = convertObjectToTileSpace ? 1.0f / mapTileWidth : 1.0f;\n\t\t\tfloat scaleY = convertObjectToTileSpace ? 1.0f / mapTileHeight : 1.0f;\n\n\t\t\tfloat x = element.getIntAttribute(\"x\", 0) * scaleX;\n\t\t\tfloat y = (yUp ? mapHeightInPixels - element.getIntAttribute(\"y\", 0) : element.getIntAttribute(\"y\", 0)) * scaleY;\n\n\t\t\tfloat width = element.getIntAttribute(\"width\", 0) * scaleX;\n\t\t\tfloat height = element.getIntAttribute(\"height\", 0) * scaleY;\n\n\t\t\tif (element.getChildCount() > 0) {\n\t\t\t\tElement child = null;\n\t\t\t\tif ((child = element.getChildByName(\"polygon\")) != null) {\n\t\t\t\t\tString[] points = child.getAttribute(\"points\").split(\" \");\n\t\t\t\t\tfloat[] vertices = new float[points.length * 2];\n\t\t\t\t\tfor (int i = 0; i < points.length; i++) {\n\t\t\t\t\t\tString[] point = points[i].split(\",\");\n\t\t\t\t\t\tvertices[i * 2] = Integer.parseInt(point[0]) * scaleX;\n\t\t\t\t\t\tvertices[i * 2 + 1] = Integer.parseInt(point[1]) * scaleY;\n\t\t\t\t\t\tif (yUp) {\n\t\t\t\t\t\t\tvertices[i * 2 + 1] *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tPolygon polygon = new Polygon(vertices);\n\t\t\t\t\tpolygon.setPosition(x, y);\n\t\t\t\t\tobject = new PolygonMapObject(polygon);\n\t\t\t\t} else if ((child = element.getChildByName(\"polyline\")) != null) {\n\t\t\t\t\tString[] points = child.getAttribute(\"points\").split(\" \");\n\t\t\t\t\tfloat[] vertices = new float[points.length * 2];\n\t\t\t\t\tfor (int i = 0; i < points.length; i++) {\n\t\t\t\t\t\tString[] point = points[i].split(\",\");\n\t\t\t\t\t\tvertices[i * 2] = Integer.parseInt(point[0]) * scaleX;\n\t\t\t\t\t\tvertices[i * 2 + 1] = Integer.parseInt(point[1]) * scaleY;\n\t\t\t\t\t\tif (yUp) {\n\t\t\t\t\t\t\tvertices[i * 2 + 1] *= -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tPolyline polyline = new Polyline(vertices);\n\t\t\t\t\tpolyline.setPosition(x, y);\n\t\t\t\t\tobject = new PolylineMapObject(polyline);\n\t\t\t\t} else if ((child = element.getChildByName(\"ellipse\")) != null) {\n\t\t\t\t\tobject = new EllipseMapObject(x, yUp ? y - height : y, width, height);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (object == null) {\n\t\t\t\tobject = new RectangleMapObject(x, yUp ? y - height : y, width, height);\n\t\t\t}\n\t\t\tobject.setName(element.getAttribute(\"name\", null));\n\t\t\tString type = element.getAttribute(\"type\", null);\n\t\t\tif (type != null) {\n\t\t\t\tobject.getProperties().put(\"type\", type);\n\t\t\t}\n\t\t\tint gid = element.getIntAttribute(\"gid\", -1);\n\t\t\tif (gid != -1) {\n\t\t\t\tobject.getProperties().put(\"gid\", gid);\n\t\t\t}\n\t\t\tobject.getProperties().put(\"x\", x * scaleX);\n\t\t\tobject.getProperties().put(\"y\", (yUp ? y - height : y) * scaleY);\n\t\t\tobject.setVisible(element.getIntAttribute(\"visible\", 1) == 1);\n\t\t\tElement properties = element.getChildByName(\"properties\");\n\t\t\tif (properties != null) {\n\t\t\t\tloadProperties(object.getProperties(), properties);\n\t\t\t}\n\t\t\tlayer.getObjects().add(object);\n\t\t}\n\t}","commit_id":"af5cf0f9760a81c05015e6415d7bd39481f6d918","url":"https://github.com/libgdx/libgdx"},{"original_method":"/** Loads the map data, given the XML root element and an {@link ImageResolver} used to return the tileset Textures\n\t * @param root the XML root element\n\t * @param tmxFile the Filehandle of the tmx file\n\t * @param imageResolver the {@link ImageResolver}\n\t * @return the {@link TiledMap} */\n\tprotected TiledMap loadTilemap (Element root, FileHandle tmxFile, ImageResolver imageResolver) {\n\t\tTiledMap map = new TiledMap();\n\n\t\tString mapOrientation = root.getAttribute(\"orientation\", null);\n\t\tint mapWidth = root.getIntAttribute(\"width\", 0);\n\t\tint mapHeight = root.getIntAttribute(\"height\", 0);\n\t\tint tileWidth = root.getIntAttribute(\"tilewidth\", 0);\n\t\tint tileHeight = root.getIntAttribute(\"tileheight\", 0);\n\t\tString mapBackgroundColor = root.getAttribute(\"backgroundcolor\", null);\n\n\t\tMapProperties mapProperties = map.getProperties();\n\t\tif (mapOrientation != null) {\n\t\t\tmapProperties.put(\"orientation\", mapOrientation);\n\t\t}\n\t\tmapProperties.put(\"width\", mapWidth);\n\t\tmapProperties.put(\"height\", mapHeight);\n\t\tmapProperties.put(\"tilewidth\", tileWidth);\n\t\tmapProperties.put(\"tileheight\", tileHeight);\n\t\tif (mapBackgroundColor != null) {\n\t\t\tmapProperties.put(\"backgroundcolor\", mapBackgroundColor);\n\t\t}\n\t\tmapWidthInPixels = mapWidth * tileWidth;\n\t\tmapHeightInPixels = mapHeight * tileHeight;\n\n\t\tElement properties = root.getChildByName(\"properties\");\n\t\tif (properties != null) {\n\t\t\tloadProperties(map.getProperties(), properties);\n\t\t}\n\t\tArray<Element> tilesets = root.getChildrenByName(\"tileset\");\n\t\tfor (Element element : tilesets) {\n\t\t\tloadTileSet(map, element, tmxFile, imageResolver);\n\t\t\troot.removeChild(element);\n\t\t}\n\t\tfor (int i = 0, j = root.getChildCount(); i < j; i++) {\n\t\t\tElement element = root.getChild(i);\n\t\t\tString name = element.getName();\n\t\t\tif (name.equals(\"layer\")) {\n\t\t\t\tloadTileLayer(map, element);\n\t\t\t} else if (name.equals(\"objectgroup\")) {\n\t\t\t\tloadObjectGroup(map, element);\n\t\t\t}\n\t\t}\n\t\treturn map;\n\t}","id":13456,"modified_method":"/** Loads the map data, given the XML root element and an {@link ImageResolver} used to return the tileset Textures\n\t * @param root the XML root element\n\t * @param tmxFile the Filehandle of the tmx file\n\t * @param imageResolver the {@link ImageResolver}\n\t * @return the {@link TiledMap} */\n\tprotected TiledMap loadTilemap (Element root, FileHandle tmxFile, ImageResolver imageResolver) {\n\t\tTiledMap map = new TiledMap();\n\n\t\tString mapOrientation = root.getAttribute(\"orientation\", null);\n\t\tint mapWidth = root.getIntAttribute(\"width\", 0);\n\t\tint mapHeight = root.getIntAttribute(\"height\", 0);\n\t\tint tileWidth = root.getIntAttribute(\"tilewidth\", 0);\n\t\tint tileHeight = root.getIntAttribute(\"tileheight\", 0);\n\t\tString mapBackgroundColor = root.getAttribute(\"backgroundcolor\", null);\n\n\t\tMapProperties mapProperties = map.getProperties();\n\t\tif (mapOrientation != null) {\n\t\t\tmapProperties.put(\"orientation\", mapOrientation);\n\t\t}\n\t\tmapProperties.put(\"width\", mapWidth);\n\t\tmapProperties.put(\"height\", mapHeight);\n\t\tmapProperties.put(\"tilewidth\", tileWidth);\n\t\tmapProperties.put(\"tileheight\", tileHeight);\n\t\tif (mapBackgroundColor != null) {\n\t\t\tmapProperties.put(\"backgroundcolor\", mapBackgroundColor);\n\t\t}\n\t\tmapTileWidth = tileWidth;\n\t\tmapTileHeight = tileHeight;\n\t\tmapWidthInPixels = mapWidth * tileWidth;\n\t\tmapHeightInPixels = mapHeight * tileHeight;\n\n\t\tElement properties = root.getChildByName(\"properties\");\n\t\tif (properties != null) {\n\t\t\tloadProperties(map.getProperties(), properties);\n\t\t}\n\t\tArray<Element> tilesets = root.getChildrenByName(\"tileset\");\n\t\tfor (Element element : tilesets) {\n\t\t\tloadTileSet(map, element, tmxFile, imageResolver);\n\t\t\troot.removeChild(element);\n\t\t}\n\t\tfor (int i = 0, j = root.getChildCount(); i < j; i++) {\n\t\t\tElement element = root.getChild(i);\n\t\t\tString name = element.getName();\n\t\t\tif (name.equals(\"layer\")) {\n\t\t\t\tloadTileLayer(map, element);\n\t\t\t} else if (name.equals(\"objectgroup\")) {\n\t\t\t\tloadObjectGroup(map, element);\n\t\t\t}\n\t\t}\n\t\treturn map;\n\t}","commit_id":"af5cf0f9760a81c05015e6415d7bd39481f6d918","url":"https://github.com/libgdx/libgdx"},{"original_method":"private String analyzeTrend(String field, String hash) throws IOException {\n        int limit  = Config.analyzeLimit;\n        int show  = Config.analyzeShow;\n        ClientRequest req = new ClientRequest(hash);\n\n        LOGGER.debug(\"\\tclient: {}\", req);\n\n        Query queryEnd = new SortedQuery(req.getSearch(), req.getFrom(), req.getTo(), 0, limit, Config.timestamp, \"desc\");\n        List<String> indicesEnd = Kelastic.getIndices(req.getFrom(), req.getTo());\n        ObjectNode resultEnd = new KelasticMulti(queryEnd, indicesEnd).getResponse();\n        if (resultEnd.get(\"hits\").get(\"hits\").size() < limit) {\n            limit = resultEnd.get(\"hits\").get(\"hits\").size() / 2;\n            queryEnd = new SortedQuery(req.getSearch(), req.getFrom(), req.getTo(), 0, limit, Config.timestamp, \"desc\");\n            resultEnd = new KelasticMulti(queryEnd, indicesEnd).getResponse();\n        }\n        Map<String, Integer> countEnd = KelasticResponse.countFields(resultEnd, field);\n\n        Query queryBegin = new SortedQuery(req.getSearch(), req.getFrom(), req.getTo(), 0, limit, Config.timestamp, \"asc\");\n        List<String> indicesBegin = Kelastic.getIndices(req.getFrom(), req.getTo());\n        Collections.reverse(indicesBegin);\n        ObjectNode resultBegin = new KelasticMulti(queryBegin, indicesBegin).getResponse();\n        Map<String, Integer> countBegin = KelasticResponse.countFields(resultBegin, field);\n\n        ObjectNode time = ((ObjectNode) resultEnd.get(\"kibana\")).putObject(\"time\");\n        time.put(\"from\", formatDate(new Date(req.getFrom())));\n        time.put(\"to\", formatDate(new Date(req.getTo())));\n\n        List<ObjectNode> trends = new ArrayList<ObjectNode>();\n        int count = resultEnd.get(\"hits\").get(\"hits\").size();\n        for (Map.Entry<String, Integer> entry : countEnd.entrySet()) {\n            String key = entry.getKey();\n            int value = entry.getValue();\n            int first = countBegin.containsKey(key) ? countBegin.get(key) : 0;\n            ObjectNode n = resultEnd.objectNode();\n            n.put(\"id\", key);\n            n.put(\"count\", value);\n            n.put(\"first\", first);\n            n.put(\"trend\", (((float) value) / count - ((float) first) / count) * 100.0f);\n            trends.add(n);\n        }\n        Collections.sort(trends, new Comparator<ObjectNode>() {\n            @Override\n            public int compare(ObjectNode o1, ObjectNode o2) {\n                Double t1 = Math.abs(o1.get(\"trend\").asDouble());\n                Double t2 = Math.abs(o2.get(\"trend\").asDouble());\n                return t2.compareTo(t1);\n            }\n        });\n        ArrayNode hits = resultEnd.arrayNode();\n        for (ObjectNode n : trends) {\n            hits.add(n);\n        }\n\n        ((ObjectNode) resultEnd.get(\"hits\")).put(\"count\", resultEnd.get(\"hits\").get(\"hits\").size());\n        ((ObjectNode) resultEnd.get(\"hits\")).put(\"hits\", hits);\n\n        String str = Json.serialize(resultEnd);\n        return str;\n    }","id":13457,"modified_method":"private String analyzeTrend(String field, String hash) throws IOException {\n        int limit  = Config.analyzeLimit;\n        int show  = Config.analyzeShow;\n        ClientRequest req = new ClientRequest(hash);\n\n        LOGGER.debug(\"\\tclient: {}\", req);\n\n        Query queryEnd = new SortedQuery(req.getSearch(), req.getFrom(), req.getTo(), 0, limit, Config.timestamp, \"desc\");\n        List<String> indicesEnd = Kelastic.getIndices(req.getFrom(), req.getTo());\n        ObjectNode resultEnd = kelasticMulti(queryEnd, indicesEnd);\n        if (resultEnd.get(\"hits\").get(\"hits\").size() < limit) {\n            limit = resultEnd.get(\"hits\").get(\"hits\").size() / 2;\n            queryEnd = new SortedQuery(req.getSearch(), req.getFrom(), req.getTo(), 0, limit, Config.timestamp, \"desc\");\n            resultEnd = kelasticMulti(queryEnd, indicesEnd);\n        }\n        Map<String, Integer> countEnd = KelasticResponse.countFields(resultEnd, field);\n\n        Query queryBegin = new SortedQuery(req.getSearch(), req.getFrom(), req.getTo(), 0, limit, Config.timestamp, \"asc\");\n        List<String> indicesBegin = Kelastic.getIndices(req.getFrom(), req.getTo());\n        Collections.reverse(indicesBegin);\n        ObjectNode resultBegin = kelasticMulti(queryBegin, indicesBegin);\n        Map<String, Integer> countBegin = KelasticResponse.countFields(resultBegin, field);\n\n        ObjectNode time = ((ObjectNode) resultEnd.get(\"kibana\")).putObject(\"time\");\n        time.put(\"from\", formatDate(new Date(req.getFrom())));\n        time.put(\"to\", formatDate(new Date(req.getTo())));\n\n        List<ObjectNode> trends = new ArrayList<ObjectNode>();\n        int count = resultEnd.get(\"hits\").get(\"hits\").size();\n        for (Map.Entry<String, Integer> entry : countEnd.entrySet()) {\n            String key = entry.getKey();\n            int value = entry.getValue();\n            int first = countBegin.containsKey(key) ? countBegin.get(key) : 0;\n            ObjectNode n = resultEnd.objectNode();\n            n.put(\"id\", key);\n            n.put(\"count\", value);\n            n.put(\"first\", first);\n            n.put(\"trend\", (((float) value) / count - ((float) first) / count) * 100.0f);\n            trends.add(n);\n        }\n        Collections.sort(trends, new Comparator<ObjectNode>() {\n            @Override\n            public int compare(ObjectNode o1, ObjectNode o2) {\n                Double t1 = Math.abs(o1.get(\"trend\").asDouble());\n                Double t2 = Math.abs(o2.get(\"trend\").asDouble());\n                return t2.compareTo(t1);\n            }\n        });\n        ArrayNode hits = resultEnd.arrayNode();\n        for (ObjectNode n : trends) {\n            hits.add(n);\n        }\n\n        resultEnd.with(\"hits\").put(\"count\", resultEnd.get(\"hits\").get(\"hits\").size());\n        resultEnd.with(\"hits\").put(\"hits\", hits);\n\n        return Json.serialize(resultEnd);\n    }","commit_id":"f1080f5cf33e9e9da2c6ddc7bb189b85a707d756","url":"https://github.com/fabric8io/fabric8"},{"original_method":"public Query(String question, long from, long to) {\n            query = Json.objectNode();\n            query.put(\"size\", 0);\n            ObjectNode filtered = query.putObject(\"query\").putObject(\"filtered\");\n            // Query\n            ObjectNode questionNode = filtered.putObject(\"query\");\n            question = (question == null || question.isEmpty()) ? \"*\" : question;\n            question = Config.filter.isEmpty() ? question : \"(#{question}) AND \" + Config.filter;\n            if (\"*\".equals(question)) {\n                questionNode.putObject(\"match_all\");\n            } else {\n                ObjectNode n = questionNode.putObject(\"query_string\");\n                n.put(\"default_operator\", Config.defaultOperator);\n                n.put(\"default_field\", Config.primaryField);\n                n.put(\"query\", question);\n            }\n            // Filter\n            ObjectNode timestampNode = filtered.putObject(\"filter\").putObject(\"range\").putObject(Config.timestamp);\n            timestampNode.put(\"from\", formatDate(new Date(from)));\n            timestampNode.put(\"to\", formatDate(new Date(to)));\n        }","id":13458,"modified_method":"public Query(String question, long from, long to) {\n            this(question);\n            // Filter\n            ObjectNode timestampNode = query.with(\"query\").with(\"filtered\").putObject(\"filter\").putObject(\"range\").putObject(Config.timestamp);\n            timestampNode.put(\"from\", formatDate(new Date(from)));\n            timestampNode.put(\"to\", formatDate(new Date(to)));\n        }","commit_id":"f1080f5cf33e9e9da2c6ddc7bb189b85a707d756","url":"https://github.com/fabric8io/fabric8"},{"original_method":"private String analyzeTerms(String field, String hash) throws IOException {\n        int limit  = Config.analyzeShow;\n        ClientRequest req = new ClientRequest(hash);\n        Query query = new TermsFacet(req.getSearch(), req.getFrom(), req.getTo(), field.split(\",\"), limit);\n\n        LOGGER.debug(\"\\tclient: {}\", req);\n        LOGGER.debug(\"\\tquery: {}\", query);\n\n        List<String> indices = Kelastic.getIndices(req.getFrom(), req.getTo(), Config.facetIndexLimit);\n\n        ObjectNode result = new KelasticMultiFlat(query, indices).getResponse();\n\n        ObjectNode time = ((ObjectNode) result.get(\"kibana\")).putObject(\"time\");\n        time.put(\"from\", formatDate(new Date(req.getFrom())));\n        time.put(\"to\", formatDate(new Date(req.getTo())));\n\n\n        String str = Json.serialize(result);\n        return str;\n    }","id":13459,"modified_method":"private String analyzeTerms(String field, String hash) throws IOException {\n        int limit  = Config.analyzeShow;\n        ClientRequest req = new ClientRequest(hash);\n        Query query = new TermsFacet(req.getSearch(), req.getFrom(), req.getTo(), field.split(\",\"), limit);\n\n        LOGGER.debug(\"\\tclient: {}\", req);\n        LOGGER.debug(\"\\tquery: {}\", query);\n\n        List<String> indices = Kelastic.getIndices(req.getFrom(), req.getTo(), Config.facetIndexLimit);\n\n        ObjectNode result = kelasticMultiFlat(query, indices);\n\n        ObjectNode time = ((ObjectNode) result.get(\"kibana\")).putObject(\"time\");\n        time.put(\"from\", formatDate(new Date(req.getFrom())));\n        time.put(\"to\", formatDate(new Date(req.getTo())));\n\n\n        return Json.serialize(result);\n    }","commit_id":"f1080f5cf33e9e9da2c6ddc7bb189b85a707d756","url":"https://github.com/fabric8io/fabric8"},{"original_method":"private String search(String hash, String segment) throws IOException {\n        LOGGER.debug(\"\\thash: {}\", hash);\n        LOGGER.debug(\"\\tsegment: {}\", segment);\n\n        // TODO: segment\n        ClientRequest req = new ClientRequest(hash);\n        Query query = Config.highlightResults\n                ? new HighlightedQuery(req.getSearch(), req.getFrom(), req.getTo(), req.getOffset())\n                : new SortedQuery(req.getSearch(), req.getFrom(), req.getTo(), req.getOffset());\n\n        LOGGER.debug(\"\\tclient: {}\", req);\n        LOGGER.debug(\"\\tquery: {}\", query);\n\n\n        Collection<String> indices = Kelastic.getIndices(req.getFrom(), req.getTo());\n        LOGGER.debug(\"\\tindices: {}\", indices);\n\n        ObjectNode result = new KelasticMulti(query, indices).getResponse();\n        ObjectNode time = ((ObjectNode) result.get(\"kibana\")).putObject(\"time\");\n        time.put(\"from\", formatDate(new Date(req.getFrom())));\n        time.put(\"to\", formatDate(new Date(req.getTo())));\n        ArrayNode fields = ((ObjectNode) result.get(\"kibana\")).putArray(\"default_fields\");\n        for (String s : Config.defaultFields) {\n            fields.add(s);\n        }\n        ((ObjectNode) result.get(\"kibana\")).put(\"clickable_urls\", Config.clickableUrls);\n\n        String str = Json.serialize(result);\n        return str;\n    }","id":13460,"modified_method":"private String search(String hash, String segment) throws IOException {\n        LOGGER.debug(\"\\thash: {}\", hash);\n        LOGGER.debug(\"\\tsegment: {}\", segment);\n\n        // TODO: segment\n        ClientRequest req = new ClientRequest(hash);\n        Query query = Config.highlightResults\n                ? new HighlightedQuery(req.getSearch(), req.getFrom(), req.getTo(), req.getOffset())\n                : new SortedQuery(req.getSearch(), req.getFrom(), req.getTo(), req.getOffset());\n\n        LOGGER.debug(\"\\tclient: {}\", req);\n        LOGGER.debug(\"\\tquery: {}\", query);\n\n\n        Collection<String> indices = Kelastic.getIndices(req.getFrom(), req.getTo());\n        LOGGER.debug(\"\\tindices: {}\", indices);\n\n        ObjectNode result = kelasticMulti(query, indices);\n        ObjectNode time = result.with(\"kibana\").putObject(\"time\");\n        time.put(\"from\", formatDate(new Date(req.getFrom())));\n        time.put(\"to\", formatDate(new Date(req.getTo())));\n        ArrayNode fields = result.with(\"kibana\").putArray(\"default_fields\");\n        for (String s : Config.defaultFields) {\n            fields.add(s);\n        }\n        result.with(\"kibana\").put(\"clickable_urls\", Config.clickableUrls);\n\n        return Json.serialize(result);\n    }","commit_id":"f1080f5cf33e9e9da2c6ddc7bb189b85a707d756","url":"https://github.com/fabric8io/fabric8"},{"original_method":"public static String getFieldType(String index, String field) {\n            ObjectNode node = ElasticSearch.getJson(\"/\" + index + \"/_mapping\");\n            JsonNode in = node.get(index);\n            for  (JsonNode tn : in) {\n                JsonNode pn = tn != null ? tn.get(\"properties\") : null;\n                JsonNode fn = pn != null ? pn.get(field) : null;\n                JsonNode n = fn != null ? fn.get(\"type\") : null;\n                if (n != null) {\n                    return n.asText();\n                }\n            }\n            return \"\";\n        }","id":13461,"modified_method":"public static String getFieldType(String index, String field) {\n            ObjectNode node = ElasticSearch.getJson(\"/\" + index + \"/_mapping\");\n            JsonNode in = node.get(index);\n            for  (JsonNode tn : in) {\n                JsonNode n = tn.path(\"properties\").path(field).get(\"type\");\n                if (n != null) {\n                    return n.asText();\n                }\n            }\n            return \"\";\n        }","commit_id":"f1080f5cf33e9e9da2c6ddc7bb189b85a707d756","url":"https://github.com/fabric8io/fabric8"},{"original_method":"private String analyzeScore(String field, String hash) throws IOException {\n        int limit = Config.analyzeLimit;\n        int show = Config.analyzeShow;\n        ClientRequest req = new ClientRequest(hash);\n        Query query = new SortedQuery(req.getSearch(), req.getFrom(), req.getTo(), 0, limit);\n\n        LOGGER.debug(\"\\tclient: {}\", req);\n        LOGGER.debug(\"\\tquery: {}\", query);\n\n        List<String> indices = Kelastic.getIndices(req.getFrom(), req.getTo());\n\n        ObjectNode result = new KelasticMulti(query, indices).getResponse();\n\n        ObjectNode time = ((ObjectNode) result.get(\"kibana\")).putObject(\"time\");\n        time.put(\"from\", formatDate(new Date(req.getFrom())));\n        time.put(\"to\", formatDate(new Date(req.getTo())));\n\n        Map<String, Integer> count = KelasticResponse.countFields(result, field, show);\n        ArrayNode hits = result.arrayNode();\n        for (Map.Entry<String, Integer> entry : count.entrySet()) {\n            ObjectNode n = hits.objectNode();\n            n.put(\"id\", entry.getKey());\n            n.put(\"count\", entry.getValue().intValue());\n            hits.add(n);\n        }\n        ((ObjectNode) result.get(\"hits\")).put(\"count\", result.get(\"hits\").get(\"hits\").size());\n        ((ObjectNode) result.get(\"hits\")).put(\"hits\", hits);\n\n        String str = Json.serialize(result);\n        return str;\n    }","id":13462,"modified_method":"private String analyzeScore(String field, String hash) throws IOException {\n        int limit = Config.analyzeLimit;\n        int show = Config.analyzeShow;\n        ClientRequest req = new ClientRequest(hash);\n        Query query = new SortedQuery(req.getSearch(), req.getFrom(), req.getTo(), 0, limit);\n\n        LOGGER.debug(\"\\tclient: {}\", req);\n        LOGGER.debug(\"\\tquery: {}\", query);\n\n        List<String> indices = Kelastic.getIndices(req.getFrom(), req.getTo());\n\n        ObjectNode result = kelasticMulti(query, indices);\n\n        ObjectNode time = result.with(\"kibana\").putObject(\"time\");\n        time.put(\"from\", formatDate(new Date(req.getFrom())));\n        time.put(\"to\", formatDate(new Date(req.getTo())));\n\n        Map<String, Integer> count = KelasticResponse.countFields(result, field, show);\n        ArrayNode hits = result.arrayNode();\n        for (Map.Entry<String, Integer> entry : count.entrySet()) {\n            ObjectNode n = hits.objectNode();\n            n.put(\"id\", entry.getKey());\n            n.put(\"count\", entry.getValue().intValue());\n            hits.add(n);\n        }\n        result.with(\"hits\").put(\"count\", result.get(\"hits\").get(\"hits\").size());\n        result.with(\"hits\").put(\"hits\", hits);\n\n        return Json.serialize(result);\n    }","commit_id":"f1080f5cf33e9e9da2c6ddc7bb189b85a707d756","url":"https://github.com/fabric8io/fabric8"},{"original_method":"private String analyzeMean(String field, String hash) throws IOException {\n        ClientRequest req = new ClientRequest(hash);\n        Query query = new StatsFacet(req.getSearch(), req.getFrom(), req.getTo(), field);\n\n        LOGGER.debug(\"\\tclient: {}\", req);\n        LOGGER.debug(\"\\tquery: {}\", query);\n\n        List<String> indices = Kelastic.getIndices(req.getFrom(), req.getTo(), Config.facetIndexLimit);\n\n        String type = Kelastic.getFieldType(indices.get(0), field);\n        if (\"long\".equals(type) || \"integer\".equals(type) || \"double\".equals(type) || \"float\".equals(type)) {\n            ObjectNode result = new KelasticMultiFlat(query, indices).getResponse();\n            ObjectNode time = ((ObjectNode) result.get(\"kibana\")).putObject(\"time\");\n            time.put(\"from\", formatDate(new Date(req.getFrom())));\n            time.put(\"to\", formatDate(new Date(req.getTo())));\n            String str = Json.serialize(result);\n            return str;\n        } else {\n            ObjectNode node = Json.objectNode();\n            node.put(\"error\", \"Statistics not supported for type: \" + type);\n            return Json.serialize(node);\n        }\n    }","id":13463,"modified_method":"private String analyzeMean(String field, String hash) throws IOException {\n        ClientRequest req = new ClientRequest(hash);\n        Query query = new StatsFacet(req.getSearch(), req.getFrom(), req.getTo(), field);\n\n        LOGGER.debug(\"\\tclient: {}\", req);\n        LOGGER.debug(\"\\tquery: {}\", query);\n\n        List<String> indices = Kelastic.getIndices(req.getFrom(), req.getTo(), Config.facetIndexLimit);\n\n        String type = Kelastic.getFieldType(indices.get(0), field);\n        if (\"long\".equals(type) || \"integer\".equals(type) || \"double\".equals(type) || \"float\".equals(type)) {\n            ObjectNode result = kelasticMultiFlat(query, indices);\n            ObjectNode time = result.with(\"kibana\").putObject(\"time\");\n            time.put(\"from\", formatDate(new Date(req.getFrom())));\n            time.put(\"to\", formatDate(new Date(req.getTo())));\n            String str = Json.serialize(result);\n            return str;\n        } else {\n            ObjectNode node = Json.objectNode();\n            node.put(\"error\", \"Statistics not supported for type: \" + type);\n            return Json.serialize(node);\n        }\n    }","commit_id":"f1080f5cf33e9e9da2c6ddc7bb189b85a707d756","url":"https://github.com/fabric8io/fabric8"},{"original_method":"public static ObjectNode postJson(String request, String query) {\n            InputStream is = null;\n            OutputStream os = null;\n            try {\n                URL url = new URL(request);\n                HttpURLConnection conn = (HttpURLConnection) url.openConnection();\n                // TODO: timeout\n                conn.setDoInput(true);\n                conn.setDoOutput(true);\n                conn.setUseCaches(false);\n                conn.setRequestMethod(\"POST\");\n                conn.setRequestProperty(\"Connection\", \"close\");\n                conn.setRequestProperty(\"Accept\", \"application/json\");\n                conn.setRequestProperty(\"Content-Type\", \"application/json\");\n                conn.connect();\n                os = conn.getOutputStream();\n                os.write(query.getBytes());\n                os.close();\n                is = conn.getInputStream();\n                ObjectNode node = (ObjectNode) new ObjectMapper().readTree(is);\n                return node;\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            } finally {\n                try {\n                    if (is != null) {\n                        is.close();\n                    }\n                } catch (IOException e) {\n                    // Ignore\n                }\n            }\n        }","id":13464,"modified_method":"public static ObjectNode postJson(String request, String query) {\n            InputStream is = null;\n            OutputStream os = null;\n            try {\n                URL url = new URL(request);\n                HttpURLConnection conn = (HttpURLConnection) url.openConnection();\n                // TODO: timeout\n                conn.setDoInput(true);\n                conn.setDoOutput(true);\n                conn.setUseCaches(false);\n                conn.setRequestMethod(\"POST\");\n                conn.setRequestProperty(\"Connection\", \"close\");\n                conn.setRequestProperty(\"Accept\", \"application/json\");\n                conn.setRequestProperty(\"Content-Type\", \"application/json\");\n                conn.connect();\n                os = conn.getOutputStream();\n                os.write(query.getBytes());\n                os.close();\n                is = conn.getInputStream();\n                return (ObjectNode) new ObjectMapper().readTree(is);\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            } finally {\n                try {\n                    if (is != null) {\n                        is.close();\n                    }\n                } catch (IOException e) {\n                    // Ignore\n                }\n            }\n        }","commit_id":"f1080f5cf33e9e9da2c6ddc7bb189b85a707d756","url":"https://github.com/fabric8io/fabric8"},{"original_method":"@Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n\n        String path = req.getServletPath();\n        String info = req.getPathInfo();\n        String request = path + (info != null ? info : \"\");\n\n        Pattern search;\n        Matcher matcher;\n\n        search = Pattern.compile(\"/js/timezone\\\\.js\");\n        matcher = search.matcher(request);\n        if (matcher.matches()) {\n            LOGGER.debug(\"Timezone Javascript\");\n            LOGGER.debug(\"\\trequest: {}\", request);\n\n            String str = \"var tmp_offset = \\\"\" +\n                    (\"user\".equals(Config.timeZone) ? \"user\" : TimeZone.getTimeZone(Config.timeZone).getRawOffset() / 1000)  + \"\\\"\\n\" +\n                    \"\\n\" +\n                    \"window.time_format = \\\"\" + (Config.timeFormat != null ? Config.timeFormat : \"mm/dd HH:MM:ss\") + \"\\\"\\n\" +\n                    \"\\n\" +\n                    \"if (tmp_offset == 'user') {\\n\" +\n                    \"\\tvar d = new Date()\\n\" +\n                    \"\\twindow.tOffset = -d.getTimezoneOffset() * 60 * 1000;\\n\" +\n                    \"} else {\\n\" +\n                    \"\\twindow.tOffset = parseFloat(tmp_offset) * 3600 * 1000;\\n\" +\n                    \"}\\n\" +\n                    \"\\n\" +\n                    \"window.timestamp = \\\"\" + Config.timestamp + \"\\\";\\n\";\n\n            resp.setHeader(\"Content-Type\", \"application/json\");\n            resp.getWriter().write(str);\n            return;\n        }\n\n        search = Pattern.compile(\"/api/search/([^/?]+)(?:/([^/?]+))?\");\n        matcher = search.matcher(request);\n        if (matcher.matches()) {\n            LOGGER.debug(\"Search\");\n            LOGGER.debug(\"\\trequest: {}\", request);\n\n            String hash = matcher.group(1);\n            String segment = matcher.group(2);\n\n            String result = search(hash, segment);\n            resp.getWriter().write(result);\n            return;\n        }\n\n        search = Pattern.compile(\"/api/graph/([^/?]+)/([^/?]+)/([^/?]+)/([^/?]*)\");\n        matcher = search.matcher(request);\n        if (matcher.matches()) {\n            LOGGER.debug(\"Graph\");\n            LOGGER.debug(\"\\trequest: {}\", request);\n\n            String mode = matcher.group(1);\n            String interval = matcher.group(2);\n            String hash = matcher.group(3);\n            String segment = matcher.group(4);\n\n            String result = graph(mode, interval, hash, segment);\n            resp.getWriter().write(result);\n            return;\n        }\n\n        search = Pattern.compile(\"/api/analyze/([^/?]+)/([^/?]+)/([^/?]+)\");\n        matcher = search.matcher(request);\n        if (matcher.matches()) {\n            String field = matcher.group(1);\n            String mode = matcher.group(2);\n            String hash = matcher.group(3);\n\n            LOGGER.debug(\"Analyze {}\", mode);\n            LOGGER.debug(\"\\trequest: {}\", request);\n\n            String result;\n            if (\"score\".equals(mode)) {\n                result = analyzeScore(field, hash);\n            } else if (\"mean\".equals(mode)) {\n                result = analyzeMean(field, hash);\n            } else if (\"terms\".equals(mode)) {\n                result = analyzeTerms(field, hash);\n            } else if (\"trend\".equals(mode)) {\n                result = analyzeTrend(field, hash);\n            } else {\n                resp.sendError(404);\n                return;\n            }\n            resp.getWriter().write(result);\n            return;\n        }\n\n        // TODO: /api/id/:id/:index\n\n        // TODO: /stream\n\n        // TODO: /api/stream/:hash/?:from?\n\n        // TODO: /rss/:hash/?:count?\n\n        // TODO: /export/:hash/?:count?\n\n        // TODO: /turl/:id\n\n        // TODO: /turl/save/:hash\n\n        LOGGER.debug(\"Unknown request {}\", request);\n        resp.sendError(404);\n    }","id":13465,"modified_method":"@Override\n    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n\n        String path = req.getServletPath();\n        String info = req.getPathInfo();\n        String request = path + (info != null ? info : \"\");\n\n        Pattern search;\n        Matcher matcher;\n\n        search = Pattern.compile(\"/js/timezone\\\\.js\");\n        matcher = search.matcher(request);\n        if (matcher.matches()) {\n            LOGGER.debug(\"Timezone Javascript\");\n            LOGGER.debug(\"\\trequest: {}\", request);\n\n            ArrayNode fields = Json.arrayNode();\n            for (String f : Config.defaultFields) {\n                fields.add(f);\n            }\n            String str = \"var tmp_offset = \\\"\" +\n                    (\"user\".equals(Config.timeZone) ? \"user\" : TimeZone.getTimeZone(Config.timeZone).getRawOffset() / 1000)  + \"\\\"\\n\" +\n                    \"\\n\" +\n                    \"window.time_format = \\\"\" + (Config.timeFormat != null ? Config.timeFormat : \"mm/dd HH:MM:ss\") + \"\\\"\\n\" +\n                    \"\\n\" +\n                    \"if (tmp_offset == 'user') {\\n\" +\n                    \"\\tvar d = new Date()\\n\" +\n                    \"\\twindow.tOffset = -d.getTimezoneOffset() * 60 * 1000;\\n\" +\n                    \"} else {\\n\" +\n                    \"\\twindow.tOffset = parseFloat(tmp_offset) * 3600 * 1000;\\n\" +\n                    \"}\\n\" +\n                    \"\\n\" +\n                    \"window.default_fields = \" + fields.toString() + \";\\n\" +\n                    \"window.timestamp = \\\"\" + Config.timestamp + \"\\\";\\n\";\n\n            resp.setHeader(\"Content-Type\", \"application/json\");\n            resp.getWriter().write(str);\n            return;\n        }\n\n        search = Pattern.compile(\"/stream\");\n        matcher = search.matcher(request);\n        if (matcher.matches()) {\n            LOGGER.debug(\"Stream\");\n            LOGGER.debug(\"\\trequest: {}\", request);\n\n            req.getRequestDispatcher(\"/stream.html\").forward(req, resp);\n            return;\n        }\n\n        search = Pattern.compile(\"/api/search/([^/?]+)(?:/([^/?]+))?\");\n        matcher = search.matcher(request);\n        if (matcher.matches()) {\n            LOGGER.debug(\"Search\");\n            LOGGER.debug(\"\\trequest: {}\", request);\n\n            String hash = matcher.group(1);\n            String segment = matcher.group(2);\n\n            String result = search(hash, segment);\n            resp.getWriter().write(result);\n            return;\n        }\n\n        search = Pattern.compile(\"/api/graph/([^/?]+)/([^/?]+)/([^/?]+)/([^/?]*)\");\n        matcher = search.matcher(request);\n        if (matcher.matches()) {\n            LOGGER.debug(\"Graph\");\n            LOGGER.debug(\"\\trequest: {}\", request);\n\n            String mode = matcher.group(1);\n            String interval = matcher.group(2);\n            String hash = matcher.group(3);\n            String segment = matcher.group(4);\n\n            String result = graph(mode, interval, hash, segment);\n            resp.getWriter().write(result);\n            return;\n        }\n\n        search = Pattern.compile(\"/api/analyze/([^/?]+)/([^/?]+)/([^/?]+)\");\n        matcher = search.matcher(request);\n        if (matcher.matches()) {\n            String field = matcher.group(1);\n            String mode = matcher.group(2);\n            String hash = matcher.group(3);\n\n            LOGGER.debug(\"Analyze {}\", mode);\n            LOGGER.debug(\"\\trequest: {}\", request);\n\n            String result;\n            if (\"score\".equals(mode)) {\n                result = analyzeScore(field, hash);\n            } else if (\"mean\".equals(mode)) {\n                result = analyzeMean(field, hash);\n            } else if (\"terms\".equals(mode)) {\n                result = analyzeTerms(field, hash);\n            } else if (\"trend\".equals(mode)) {\n                result = analyzeTrend(field, hash);\n            } else {\n                resp.sendError(404);\n                return;\n            }\n            resp.getWriter().write(result);\n            return;\n        }\n\n        search = Pattern.compile(\"/api/id/([^/?]+)/([^/?]+)\");\n        matcher = search.matcher(request);\n        if (matcher.matches()) {\n            String id = matcher.group(1);\n            String index = matcher.group(2);\n\n            LOGGER.debug(\"Id\");\n            LOGGER.debug(\"\\trequest: {}\", request);\n\n            ObjectNode result = Kelastic.kelastic(new IDQuery(id), index);\n            resp.getWriter().write(result.toString());\n            return;\n        }\n\n        search = Pattern.compile(\"/api/stream/([^/?]+)(?:/([^/?]+))?\");\n        matcher = search.matcher(request);\n        if (matcher.matches()) {\n            String hash = matcher.group(1);\n            String from = matcher.group(2);\n\n            LOGGER.debug(\"Stream\");\n            LOGGER.debug(\"\\trequest: {}\", request);\n\n            ObjectNode result = stream(hash, from);\n            resp.getWriter().write(result.toString());\n            return;\n        }\n\n        search = Pattern.compile(\"/rss/([^/?]+)/([^/?]+)\");\n        matcher = search.matcher(request);\n        if (matcher.matches()) {\n            String hash = matcher.group(1);\n            String count = matcher.group(2);\n\n            LOGGER.debug(\"Rss\");\n            LOGGER.debug(\"\\trequest: {}\", request);\n\n            // TODO: create rss\n            resp.sendError(404);\n            return;\n        }\n\n        search = Pattern.compile(\"/export/([^/?]+)/([^/?]+)\");\n        matcher = search.matcher(request);\n        if (matcher.matches()) {\n            String hash = matcher.group(1);\n            String count = matcher.group(2);\n\n            LOGGER.debug(\"Export\");\n            LOGGER.debug(\"\\trequest: {}\", request);\n\n            // TODO: implement\n            resp.sendError(404);\n            return;\n        }\n\n        search = Pattern.compile(\"/turl/([^/?]+)\");\n        matcher = search.matcher(request);\n        if (matcher.matches()) {\n            String id = matcher.group(1);\n\n            LOGGER.debug(\"Turl id\");\n            LOGGER.debug(\"\\trequest: {}\", request);\n\n            // TODO: implement\n            resp.sendError(404);\n            return;\n        }\n\n        search = Pattern.compile(\"/turl/save/([^/?]+)\");\n        matcher = search.matcher(request);\n        if (matcher.matches()) {\n            String hash = matcher.group(1);\n\n            LOGGER.debug(\"Turl save\");\n            LOGGER.debug(\"\\trequest: {}\", request);\n\n            // TODO: implement\n            resp.sendError(404);\n            return;\n        }\n\n        LOGGER.debug(\"Unknown request {}\", request);\n        resp.sendError(404);\n    }","commit_id":"f1080f5cf33e9e9da2c6ddc7bb189b85a707d756","url":"https://github.com/fabric8io/fabric8"},{"original_method":"private String graph(String mode, String interval, String hash, String segment) throws IOException {\n        LOGGER.debug(\"\\tmode: {}\", mode);\n        LOGGER.debug(\"\\tinterval: {}\", interval);\n        LOGGER.debug(\"\\thash: {}\", hash);\n        LOGGER.debug(\"\\tsegment: {}\", segment);\n\n        // TODO: segment\n        int seg = segment.isEmpty() ? 0 : Integer.parseInt(segment);\n        ClientRequest req = new ClientRequest(hash);\n        Query query;\n        if (\"count\".equals(mode)) {\n            query = new DateHistogram(req.getSearch(), req.getFrom(), req.getTo(), interval);\n        } else if (\"mean\".equals(mode)) {\n            query = new StatsHistogram(req.getSearch(), req.getFrom(), req.getTo(), req.getAnalyze(), interval);\n        } else {\n            throw new IllegalArgumentException(\"unsupported mode \" + mode);\n        }\n\n        LOGGER.debug(\"\\tclient: {}\", req);\n        LOGGER.debug(\"\\tquery: {}\", query);\n\n        List<String> indices = Kelastic.getIndices(req.getFrom(), req.getTo());\n        ObjectNode result = new KelasticSegment(query, indices, seg).getResponse();\n\n        String str = Json.serialize(result);\n        return str;\n    }","id":13466,"modified_method":"private String graph(String mode, String interval, String hash, String segment) throws IOException {\n        LOGGER.debug(\"\\tmode: {}\", mode);\n        LOGGER.debug(\"\\tinterval: {}\", interval);\n        LOGGER.debug(\"\\thash: {}\", hash);\n        LOGGER.debug(\"\\tsegment: {}\", segment);\n\n        // TODO: segment\n        int seg = segment.isEmpty() ? 0 : Integer.parseInt(segment);\n        ClientRequest req = new ClientRequest(hash);\n        Query query;\n        if (\"count\".equals(mode)) {\n            query = new DateHistogram(req.getSearch(), req.getFrom(), req.getTo(), interval);\n        } else if (\"mean\".equals(mode)) {\n            query = new StatsHistogram(req.getSearch(), req.getFrom(), req.getTo(), req.getAnalyze(), interval);\n        } else {\n            throw new IllegalArgumentException(\"unsupported mode \" + mode);\n        }\n\n        LOGGER.debug(\"\\tclient: {}\", req);\n        LOGGER.debug(\"\\tquery: {}\", query);\n\n        List<String> indices = Kelastic.getIndices(req.getFrom(), req.getTo());\n        ObjectNode result = kelasticSegment(query, indices, seg);\n\n        return Json.serialize(result);\n    }","commit_id":"f1080f5cf33e9e9da2c6ddc7bb189b85a707d756","url":"https://github.com/fabric8io/fabric8"},{"original_method":"public static Map<String, Integer> countFields(ObjectNode result, String field, int limit) {\n            Map<String, Integer> count = new HashMap<String, Integer>();\n            for (String v : collectFieldValues(result, field)) {\n                Integer c = count.get(v);\n                c = (c != null ? c.intValue() : 0) + 1;\n                count.put(v, c);\n            }\n            return sortByValue(count, limit);\n        }","id":13467,"modified_method":"public static Map<String, Integer> countFields(ObjectNode result, String field, int limit) {\n            Map<String, Integer> count = new HashMap<String, Integer>();\n            for (String v : collectFieldValues(result, field)) {\n                Integer c = count.get(v);\n                c = (c != null ? c : 0) + 1;\n                count.put(v, c);\n            }\n            return sortByValue(count, limit);\n        }","commit_id":"f1080f5cf33e9e9da2c6ddc7bb189b85a707d756","url":"https://github.com/fabric8io/fabric8"},{"original_method":"@Override\n    /**\n     * Connects to CM, sets up container launch context \n     * for shell command and eventually dispatches the container \n     * start request to the CM. \n     */\n    public void run() {\n      LOG.info(\"Setting up container launch container for containerid=\"\n          + container.getId());\n      ContainerLaunchContext ctx = Records\n          .newRecord(ContainerLaunchContext.class);\n\n      // Set the environment\n      ctx.setEnvironment(shellEnv);\n\n      // Set the local resources\n      Map<String, LocalResource> localResources = new HashMap<String, LocalResource>();\n\n      // The container for the eventual shell commands needs its own local\n      // resources too.\n      // In this scenario, if a shell script is specified, we need to have it\n      // copied and made available to the container.\n      if (!scriptPath.isEmpty()) {\n        Path renamedScriptPath = null;\n        if (Shell.WINDOWS) {\n          renamedScriptPath = new Path(scriptPath + \".bat\");\n        } else {\n          renamedScriptPath = new Path(scriptPath + \".sh\");\n        }\n\n        try {\n          // rename the script file based on the underlying OS syntax.\n          renameScriptFile(renamedScriptPath);\n        } catch (Exception e) {\n          LOG.error(\n              \"Not able to add suffix (.bat/.sh) to the shell script filename\",\n              e);\n          // We know we cannot continue launching the container\n          // so we should release it.\n          numCompletedContainers.incrementAndGet();\n          numFailedContainers.incrementAndGet();\n          return;\n        }\n\n        LocalResource shellRsrc = Records.newRecord(LocalResource.class);\n        shellRsrc.setType(LocalResourceType.FILE);\n        shellRsrc.setVisibility(LocalResourceVisibility.APPLICATION);\n        try {\n          shellRsrc.setResource(ConverterUtils.getYarnUrlFromURI(new URI(\n            renamedScriptPath.toString())));\n        } catch (URISyntaxException e) {\n          LOG.error(\"Error when trying to use shell script path specified\"\n              + \" in env, path=\" + renamedScriptPath, e);\n\n          // A failure scenario on bad input such as invalid shell script path\n          // We know we cannot continue launching the container\n          // so we should release it.\n          // TODO\n          numCompletedContainers.incrementAndGet();\n          numFailedContainers.incrementAndGet();\n          return;\n        }\n        shellRsrc.setTimestamp(shellScriptPathTimestamp);\n        shellRsrc.setSize(shellScriptPathLen);\n        localResources.put(Shell.WINDOWS ? ExecBatScripStringtPath :\n            ExecShellStringPath, shellRsrc);\n        shellCommand = Shell.WINDOWS ? windows_command : linux_bash_command;\n      }\n      ctx.setLocalResources(localResources);\n\n      // Set the necessary command to execute on the allocated container\n      Vector<CharSequence> vargs = new Vector<CharSequence>(5);\n\n      // Set executable command\n      vargs.add(shellCommand);\n      // Set shell script path\n      if (!scriptPath.isEmpty()) {\n        vargs.add(Shell.WINDOWS ? ExecBatScripStringtPath\n            : ExecShellStringPath);\n      }\n\n      // Set args for the shell command if any\n      vargs.add(shellArgs);\n      // Add log redirect params\n      vargs.add(\"1>\" + ApplicationConstants.LOG_DIR_EXPANSION_VAR + \"/stdout\");\n      vargs.add(\"2>\" + ApplicationConstants.LOG_DIR_EXPANSION_VAR + \"/stderr\");\n\n      // Get final commmand\n      StringBuilder command = new StringBuilder();\n      for (CharSequence str : vargs) {\n        command.append(str).append(\" \");\n      }\n\n      List<String> commands = new ArrayList<String>();\n      commands.add(command.toString());\n      ctx.setCommands(commands);\n\n      // Set up tokens for the container too. Today, for normal shell commands,\n      // the container in distribute-shell doesn't need any tokens. We are\n      // populating them mainly for NodeManagers to be able to download any\n      // files in the distributed file-system. The tokens are otherwise also\n      // useful in cases, for e.g., when one is running a \"hadoop dfs\" command\n      // inside the distributed shell.\n      ctx.setTokens(allTokens.duplicate());\n\n      containerListener.addContainer(container.getId(), container);\n      nmClientAsync.startContainerAsync(container, ctx);\n    }","id":13468,"modified_method":"@Override\n    /**\n     * Connects to CM, sets up container launch context \n     * for shell command and eventually dispatches the container \n     * start request to the CM. \n     */\n    public void run() {\n      LOG.info(\"Setting up container launch container for containerid=\"\n          + container.getId());\n\n      // Set the local resources\n      Map<String, LocalResource> localResources = new HashMap<String, LocalResource>();\n\n      // The container for the eventual shell commands needs its own local\n      // resources too.\n      // In this scenario, if a shell script is specified, we need to have it\n      // copied and made available to the container.\n      if (!scriptPath.isEmpty()) {\n        Path renamedScriptPath = null;\n        if (Shell.WINDOWS) {\n          renamedScriptPath = new Path(scriptPath + \".bat\");\n        } else {\n          renamedScriptPath = new Path(scriptPath + \".sh\");\n        }\n\n        try {\n          // rename the script file based on the underlying OS syntax.\n          renameScriptFile(renamedScriptPath);\n        } catch (Exception e) {\n          LOG.error(\n              \"Not able to add suffix (.bat/.sh) to the shell script filename\",\n              e);\n          // We know we cannot continue launching the container\n          // so we should release it.\n          numCompletedContainers.incrementAndGet();\n          numFailedContainers.incrementAndGet();\n          return;\n        }\n\n        URL yarnUrl = null;\n        try {\n          yarnUrl = ConverterUtils.getYarnUrlFromURI(\n            new URI(renamedScriptPath.toString()));\n        } catch (URISyntaxException e) {\n          LOG.error(\"Error when trying to use shell script path specified\"\n              + \" in env, path=\" + renamedScriptPath, e);\n          // A failure scenario on bad input such as invalid shell script path\n          // We know we cannot continue launching the container\n          // so we should release it.\n          // TODO\n          numCompletedContainers.incrementAndGet();\n          numFailedContainers.incrementAndGet();\n          return;\n        }\n        LocalResource shellRsrc = LocalResource.newInstance(yarnUrl,\n          LocalResourceType.FILE, LocalResourceVisibility.APPLICATION,\n          shellScriptPathLen, shellScriptPathTimestamp);\n        localResources.put(Shell.WINDOWS ? ExecBatScripStringtPath :\n            ExecShellStringPath, shellRsrc);\n        shellCommand = Shell.WINDOWS ? windows_command : linux_bash_command;\n      }\n\n      // Set the necessary command to execute on the allocated container\n      Vector<CharSequence> vargs = new Vector<CharSequence>(5);\n\n      // Set executable command\n      vargs.add(shellCommand);\n      // Set shell script path\n      if (!scriptPath.isEmpty()) {\n        vargs.add(Shell.WINDOWS ? ExecBatScripStringtPath\n            : ExecShellStringPath);\n      }\n\n      // Set args for the shell command if any\n      vargs.add(shellArgs);\n      // Add log redirect params\n      vargs.add(\"1>\" + ApplicationConstants.LOG_DIR_EXPANSION_VAR + \"/stdout\");\n      vargs.add(\"2>\" + ApplicationConstants.LOG_DIR_EXPANSION_VAR + \"/stderr\");\n\n      // Get final commmand\n      StringBuilder command = new StringBuilder();\n      for (CharSequence str : vargs) {\n        command.append(str).append(\" \");\n      }\n\n      List<String> commands = new ArrayList<String>();\n      commands.add(command.toString());\n\n      // Set up ContainerLaunchContext, setting local resource, environment,\n      // command and token for constructor.\n\n      // Note for tokens: Set up tokens for the container too. Today, for normal\n      // shell commands, the container in distribute-shell doesn't need any\n      // tokens. We are populating them mainly for NodeManagers to be able to\n      // download anyfiles in the distributed file-system. The tokens are\n      // otherwise also useful in cases, for e.g., when one is running a\n      // \"hadoop dfs\" command inside the distributed shell.\n      ContainerLaunchContext ctx = ContainerLaunchContext.newInstance(\n        localResources, shellEnv, commands, null, allTokens.duplicate(), null);\n      containerListener.addContainer(container.getId(), container);\n      nmClientAsync.startContainerAsync(container, ctx);\n    }","commit_id":"f6c723ff0c09134d721534a409e8d688cc028307","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * Setup the request that will be sent to the RM for the container ask.\n   *\n   * @return the setup ResourceRequest to be sent to RM\n   */\n  private ContainerRequest setupContainerAskForRM() {\n    // setup requirements for hosts\n    // using * as any host will do for the distributed shell app\n    // set the priority for the request\n    Priority pri = Records.newRecord(Priority.class);\n    // TODO - what is the range for priority? how to decide?\n    pri.setPriority(requestPriority);\n\n    // Set up resource type requirements\n    // For now, memory and CPU are supported so we set memory and cpu requirements\n    Resource capability = Records.newRecord(Resource.class);\n    capability.setMemory(containerMemory);\n    capability.setVirtualCores(containerVirtualCores);\n\n    ContainerRequest request = new ContainerRequest(capability, null, null,\n        pri);\n    LOG.info(\"Requested container ask: \" + request.toString());\n    return request;\n  }","id":13469,"modified_method":"/**\n   * Setup the request that will be sent to the RM for the container ask.\n   *\n   * @return the setup ResourceRequest to be sent to RM\n   */\n  private ContainerRequest setupContainerAskForRM() {\n    // setup requirements for hosts\n    // using * as any host will do for the distributed shell app\n    // set the priority for the request\n    // TODO - what is the range for priority? how to decide?\n    Priority pri = Priority.newInstance(requestPriority);\n\n    // Set up resource type requirements\n    // For now, memory and CPU are supported so we set memory and cpu requirements\n    Resource capability = Resource.newInstance(containerMemory,\n      containerVirtualCores);\n\n    ContainerRequest request = new ContainerRequest(capability, null, null,\n        pri);\n    LOG.info(\"Requested container ask: \" + request.toString());\n    return request;\n  }","commit_id":"f6c723ff0c09134d721534a409e8d688cc028307","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * Main run function for the client\n   * @return true if application completed successfully\n   * @throws IOException\n   * @throws YarnException\n   */\n  public boolean run() throws IOException, YarnException {\n\n    LOG.info(\"Running Client\");\n    yarnClient.start();\n\n    YarnClusterMetrics clusterMetrics = yarnClient.getYarnClusterMetrics();\n    LOG.info(\"Got Cluster metric info from ASM\" \n        + \", numNodeManagers=\" + clusterMetrics.getNumNodeManagers());\n\n    List<NodeReport> clusterNodeReports = yarnClient.getNodeReports(\n        NodeState.RUNNING);\n    LOG.info(\"Got Cluster node info from ASM\");\n    for (NodeReport node : clusterNodeReports) {\n      LOG.info(\"Got node report from ASM for\"\n          + \", nodeId=\" + node.getNodeId() \n          + \", nodeAddress\" + node.getHttpAddress()\n          + \", nodeRackName\" + node.getRackName()\n          + \", nodeNumContainers\" + node.getNumContainers());\n    }\n\n    QueueInfo queueInfo = yarnClient.getQueueInfo(this.amQueue);\n    LOG.info(\"Queue info\"\n        + \", queueName=\" + queueInfo.getQueueName()\n        + \", queueCurrentCapacity=\" + queueInfo.getCurrentCapacity()\n        + \", queueMaxCapacity=\" + queueInfo.getMaximumCapacity()\n        + \", queueApplicationCount=\" + queueInfo.getApplications().size()\n        + \", queueChildQueueCount=\" + queueInfo.getChildQueues().size());\t\t\n\n    List<QueueUserACLInfo> listAclInfo = yarnClient.getQueueAclsInfo();\n    for (QueueUserACLInfo aclInfo : listAclInfo) {\n      for (QueueACL userAcl : aclInfo.getUserAcls()) {\n        LOG.info(\"User ACL Info for Queue\"\n            + \", queueName=\" + aclInfo.getQueueName()\t\t\t\n            + \", userAcl=\" + userAcl.name());\n      }\n    }\t\t\n\n    // Get a new application id\n    YarnClientApplication app = yarnClient.createApplication();\n    GetNewApplicationResponse appResponse = app.getNewApplicationResponse();\n    // TODO get min/max resource capabilities from RM and change memory ask if needed\n    // If we do not have min/max, we may not be able to correctly request \n    // the required resources from the RM for the app master\n    // Memory ask has to be a multiple of min and less than max. \n    // Dump out information about cluster capability as seen by the resource manager\n    int maxMem = appResponse.getMaximumResourceCapability().getMemory();\n    LOG.info(\"Max mem capabililty of resources in this cluster \" + maxMem);\n\n    // A resource ask cannot exceed the max. \n    if (amMemory > maxMem) {\n      LOG.info(\"AM memory specified above max threshold of cluster. Using max value.\"\n          + \", specified=\" + amMemory\n          + \", max=\" + maxMem);\n      amMemory = maxMem;\n    }\t\t\t\t\n\n    int maxVCores = appResponse.getMaximumResourceCapability().getVirtualCores();\n    LOG.info(\"Max virtual cores capabililty of resources in this cluster \" + maxVCores);\n    \n    if (amVCores > maxVCores) {\n      LOG.info(\"AM virtual cores specified above max threshold of cluster. \" \n          + \"Using max value.\" + \", specified=\" + amVCores \n          + \", max=\" + maxVCores);\n      amVCores = maxVCores;\n    }\n    \n    // set the application name\n    ApplicationSubmissionContext appContext = app.getApplicationSubmissionContext();\n    ApplicationId appId = appContext.getApplicationId();\n\n    appContext.setKeepContainersAcrossApplicationAttempts(keepContainers);\n    appContext.setApplicationName(appName);\n\n    // Set up the container launch context for the application master\n    ContainerLaunchContext amContainer = Records.newRecord(ContainerLaunchContext.class);\n\n    // set local resources for the application master\n    // local files or archives as needed\n    // In this scenario, the jar file for the application master is part of the local resources\t\t\t\n    Map<String, LocalResource> localResources = new HashMap<String, LocalResource>();\n\n    LOG.info(\"Copy App Master jar from local filesystem and add to local environment\");\n    // Copy the application master jar to the filesystem \n    // Create a local resource to point to the destination jar path \n    FileSystem fs = FileSystem.get(conf);\n    addToLocalResources(fs, appMasterJar, appMasterJarPath, appId.toString(),\n        localResources, null);\n\n    // Set the log4j properties if needed \n    if (!log4jPropFile.isEmpty()) {\n      addToLocalResources(fs, log4jPropFile, log4jPath, appId.toString(),\n          localResources, null);\n    }\t\t\t\n\n    // The shell script has to be made available on the final container(s)\n    // where it will be executed. \n    // To do this, we need to first copy into the filesystem that is visible \n    // to the yarn framework. \n    // We do not need to set this as a local resource for the application \n    // master as the application master does not need it. \t\t\n    String hdfsShellScriptLocation = \"\"; \n    long hdfsShellScriptLen = 0;\n    long hdfsShellScriptTimestamp = 0;\n    if (!shellScriptPath.isEmpty()) {\n      Path shellSrc = new Path(shellScriptPath);\n      String shellPathSuffix =\n          appName + \"/\" + appId.toString() + \"/\" + SCRIPT_PATH;\n      Path shellDst =\n          new Path(fs.getHomeDirectory(), shellPathSuffix);\n      fs.copyFromLocalFile(false, true, shellSrc, shellDst);\n      hdfsShellScriptLocation = shellDst.toUri().toString(); \n      FileStatus shellFileStatus = fs.getFileStatus(shellDst);\n      hdfsShellScriptLen = shellFileStatus.getLen();\n      hdfsShellScriptTimestamp = shellFileStatus.getModificationTime();\n    }\n\n    if (!shellCommand.isEmpty()) {\n      addToLocalResources(fs, null, shellCommandPath, appId.toString(),\n          localResources, shellCommand);\n    }\n\n    if (shellArgs.length > 0) {\n      addToLocalResources(fs, null, shellArgsPath, appId.toString(),\n          localResources, StringUtils.join(shellArgs, \" \"));\n    }\n    // Set local resource info into app master container launch context\n    amContainer.setLocalResources(localResources);\n\n    // Set the necessary security tokens as needed\n    //amContainer.setContainerTokens(containerToken);\n\n    // Set the env variables to be setup in the env where the application master will be run\n    LOG.info(\"Set the environment for the application master\");\n    Map<String, String> env = new HashMap<String, String>();\n\n    // put location of shell script into env\n    // using the env info, the application master will create the correct local resource for the \n    // eventual containers that will be launched to execute the shell scripts\n    env.put(DSConstants.DISTRIBUTEDSHELLSCRIPTLOCATION, hdfsShellScriptLocation);\n    env.put(DSConstants.DISTRIBUTEDSHELLSCRIPTTIMESTAMP, Long.toString(hdfsShellScriptTimestamp));\n    env.put(DSConstants.DISTRIBUTEDSHELLSCRIPTLEN, Long.toString(hdfsShellScriptLen));\n\n    // Add AppMaster.jar location to classpath \t\t\n    // At some point we should not be required to add \n    // the hadoop specific classpaths to the env. \n    // It should be provided out of the box. \n    // For now setting all required classpaths including\n    // the classpath to \".\" for the application jar\n    StringBuilder classPathEnv = new StringBuilder(Environment.CLASSPATH.$$())\n      .append(ApplicationConstants.CLASS_PATH_SEPARATOR).append(\"./*\");\n    for (String c : conf.getStrings(\n        YarnConfiguration.YARN_APPLICATION_CLASSPATH,\n        YarnConfiguration.DEFAULT_YARN_CROSS_PLATFORM_APPLICATION_CLASSPATH)) {\n      classPathEnv.append(ApplicationConstants.CLASS_PATH_SEPARATOR);\n      classPathEnv.append(c.trim());\n    }\n    classPathEnv.append(ApplicationConstants.CLASS_PATH_SEPARATOR).append(\n      \"./log4j.properties\");\n\n    // add the runtime classpath needed for tests to work\n    if (conf.getBoolean(YarnConfiguration.IS_MINI_YARN_CLUSTER, false)) {\n      classPathEnv.append(':');\n      classPathEnv.append(System.getProperty(\"java.class.path\"));\n    }\n\n    env.put(\"CLASSPATH\", classPathEnv.toString());\n\n    amContainer.setEnvironment(env);\n\n    // Set the necessary command to execute the application master \n    Vector<CharSequence> vargs = new Vector<CharSequence>(30);\n\n    // Set java executable command \n    LOG.info(\"Setting up app master command\");\n    vargs.add(Environment.JAVA_HOME.$$() + \"/bin/java\");\n    // Set Xmx based on am memory size\n    vargs.add(\"-Xmx\" + amMemory + \"m\");\n    // Set class name \n    vargs.add(appMasterMainClass);\n    // Set params for Application Master\n    vargs.add(\"--container_memory \" + String.valueOf(containerMemory));\n    vargs.add(\"--container_vcores \" + String.valueOf(containerVirtualCores));\n    vargs.add(\"--num_containers \" + String.valueOf(numContainers));\n    vargs.add(\"--priority \" + String.valueOf(shellCmdPriority));\n\n    for (Map.Entry<String, String> entry : shellEnv.entrySet()) {\n      vargs.add(\"--shell_env \" + entry.getKey() + \"=\" + entry.getValue());\n    }\t\t\t\n    if (debugFlag) {\n      vargs.add(\"--debug\");\n    }\n\n    vargs.add(\"1>\" + ApplicationConstants.LOG_DIR_EXPANSION_VAR + \"/AppMaster.stdout\");\n    vargs.add(\"2>\" + ApplicationConstants.LOG_DIR_EXPANSION_VAR + \"/AppMaster.stderr\");\n\n    // Get final commmand\n    StringBuilder command = new StringBuilder();\n    for (CharSequence str : vargs) {\n      command.append(str).append(\" \");\n    }\n\n    LOG.info(\"Completed setting up app master command \" + command.toString());\t   \n    List<String> commands = new ArrayList<String>();\n    commands.add(command.toString());\t\t\n    amContainer.setCommands(commands);\n\n    // Set up resource type requirements\n    // For now, both memory and vcores are supported, so we set memory and \n    // vcores requirements\n    Resource capability = Records.newRecord(Resource.class);\n    capability.setMemory(amMemory);\n    capability.setVirtualCores(amVCores);\n    appContext.setResource(capability);\n\n    // Service data is a binary blob that can be passed to the application\n    // Not needed in this scenario\n    // amContainer.setServiceData(serviceData);\n\n    // Setup security tokens\n    if (UserGroupInformation.isSecurityEnabled()) {\n      Credentials credentials = new Credentials();\n      String tokenRenewer = conf.get(YarnConfiguration.RM_PRINCIPAL);\n      if (tokenRenewer == null || tokenRenewer.length() == 0) {\n        throw new IOException(\n          \"Can't get Master Kerberos principal for the RM to use as renewer\");\n      }\n\n      // For now, only getting tokens for the default file-system.\n      final Token<?> tokens[] =\n          fs.addDelegationTokens(tokenRenewer, credentials);\n      if (tokens != null) {\n        for (Token<?> token : tokens) {\n          LOG.info(\"Got dt for \" + fs.getUri() + \"; \" + token);\n        }\n      }\n      DataOutputBuffer dob = new DataOutputBuffer();\n      credentials.writeTokenStorageToStream(dob);\n      ByteBuffer fsTokens = ByteBuffer.wrap(dob.getData(), 0, dob.getLength());\n      amContainer.setTokens(fsTokens);\n    }\n\n    appContext.setAMContainerSpec(amContainer);\n\n    // Set the priority for the application master\n    Priority pri = Records.newRecord(Priority.class);\n    // TODO - what is the range for priority? how to decide? \n    pri.setPriority(amPriority);\n    appContext.setPriority(pri);\n\n    // Set the queue to which this application is to be submitted in the RM\n    appContext.setQueue(amQueue);\n\n    // Submit the application to the applications manager\n    // SubmitApplicationResponse submitResp = applicationsManager.submitApplication(appRequest);\n    // Ignore the response as either a valid response object is returned on success \n    // or an exception thrown to denote some form of a failure\n    LOG.info(\"Submitting application to ASM\");\n\n    yarnClient.submitApplication(appContext);\n\n    // TODO\n    // Try submitting the same request again\n    // app submission failure?\n\n    // Monitor the application\n    return monitorApplication(appId);\n\n  }","id":13470,"modified_method":"/**\n   * Main run function for the client\n   * @return true if application completed successfully\n   * @throws IOException\n   * @throws YarnException\n   */\n  public boolean run() throws IOException, YarnException {\n\n    LOG.info(\"Running Client\");\n    yarnClient.start();\n\n    YarnClusterMetrics clusterMetrics = yarnClient.getYarnClusterMetrics();\n    LOG.info(\"Got Cluster metric info from ASM\" \n        + \", numNodeManagers=\" + clusterMetrics.getNumNodeManagers());\n\n    List<NodeReport> clusterNodeReports = yarnClient.getNodeReports(\n        NodeState.RUNNING);\n    LOG.info(\"Got Cluster node info from ASM\");\n    for (NodeReport node : clusterNodeReports) {\n      LOG.info(\"Got node report from ASM for\"\n          + \", nodeId=\" + node.getNodeId() \n          + \", nodeAddress\" + node.getHttpAddress()\n          + \", nodeRackName\" + node.getRackName()\n          + \", nodeNumContainers\" + node.getNumContainers());\n    }\n\n    QueueInfo queueInfo = yarnClient.getQueueInfo(this.amQueue);\n    LOG.info(\"Queue info\"\n        + \", queueName=\" + queueInfo.getQueueName()\n        + \", queueCurrentCapacity=\" + queueInfo.getCurrentCapacity()\n        + \", queueMaxCapacity=\" + queueInfo.getMaximumCapacity()\n        + \", queueApplicationCount=\" + queueInfo.getApplications().size()\n        + \", queueChildQueueCount=\" + queueInfo.getChildQueues().size());\t\t\n\n    List<QueueUserACLInfo> listAclInfo = yarnClient.getQueueAclsInfo();\n    for (QueueUserACLInfo aclInfo : listAclInfo) {\n      for (QueueACL userAcl : aclInfo.getUserAcls()) {\n        LOG.info(\"User ACL Info for Queue\"\n            + \", queueName=\" + aclInfo.getQueueName()\t\t\t\n            + \", userAcl=\" + userAcl.name());\n      }\n    }\t\t\n\n    // Get a new application id\n    YarnClientApplication app = yarnClient.createApplication();\n    GetNewApplicationResponse appResponse = app.getNewApplicationResponse();\n    // TODO get min/max resource capabilities from RM and change memory ask if needed\n    // If we do not have min/max, we may not be able to correctly request \n    // the required resources from the RM for the app master\n    // Memory ask has to be a multiple of min and less than max. \n    // Dump out information about cluster capability as seen by the resource manager\n    int maxMem = appResponse.getMaximumResourceCapability().getMemory();\n    LOG.info(\"Max mem capabililty of resources in this cluster \" + maxMem);\n\n    // A resource ask cannot exceed the max. \n    if (amMemory > maxMem) {\n      LOG.info(\"AM memory specified above max threshold of cluster. Using max value.\"\n          + \", specified=\" + amMemory\n          + \", max=\" + maxMem);\n      amMemory = maxMem;\n    }\t\t\t\t\n\n    int maxVCores = appResponse.getMaximumResourceCapability().getVirtualCores();\n    LOG.info(\"Max virtual cores capabililty of resources in this cluster \" + maxVCores);\n    \n    if (amVCores > maxVCores) {\n      LOG.info(\"AM virtual cores specified above max threshold of cluster. \" \n          + \"Using max value.\" + \", specified=\" + amVCores \n          + \", max=\" + maxVCores);\n      amVCores = maxVCores;\n    }\n    \n    // set the application name\n    ApplicationSubmissionContext appContext = app.getApplicationSubmissionContext();\n    ApplicationId appId = appContext.getApplicationId();\n\n    appContext.setKeepContainersAcrossApplicationAttempts(keepContainers);\n    appContext.setApplicationName(appName);\n\n    // set local resources for the application master\n    // local files or archives as needed\n    // In this scenario, the jar file for the application master is part of the local resources\t\t\t\n    Map<String, LocalResource> localResources = new HashMap<String, LocalResource>();\n\n    LOG.info(\"Copy App Master jar from local filesystem and add to local environment\");\n    // Copy the application master jar to the filesystem \n    // Create a local resource to point to the destination jar path \n    FileSystem fs = FileSystem.get(conf);\n    addToLocalResources(fs, appMasterJar, appMasterJarPath, appId.toString(),\n        localResources, null);\n\n    // Set the log4j properties if needed \n    if (!log4jPropFile.isEmpty()) {\n      addToLocalResources(fs, log4jPropFile, log4jPath, appId.toString(),\n          localResources, null);\n    }\t\t\t\n\n    // The shell script has to be made available on the final container(s)\n    // where it will be executed. \n    // To do this, we need to first copy into the filesystem that is visible \n    // to the yarn framework. \n    // We do not need to set this as a local resource for the application \n    // master as the application master does not need it. \t\t\n    String hdfsShellScriptLocation = \"\"; \n    long hdfsShellScriptLen = 0;\n    long hdfsShellScriptTimestamp = 0;\n    if (!shellScriptPath.isEmpty()) {\n      Path shellSrc = new Path(shellScriptPath);\n      String shellPathSuffix =\n          appName + \"/\" + appId.toString() + \"/\" + SCRIPT_PATH;\n      Path shellDst =\n          new Path(fs.getHomeDirectory(), shellPathSuffix);\n      fs.copyFromLocalFile(false, true, shellSrc, shellDst);\n      hdfsShellScriptLocation = shellDst.toUri().toString(); \n      FileStatus shellFileStatus = fs.getFileStatus(shellDst);\n      hdfsShellScriptLen = shellFileStatus.getLen();\n      hdfsShellScriptTimestamp = shellFileStatus.getModificationTime();\n    }\n\n    if (!shellCommand.isEmpty()) {\n      addToLocalResources(fs, null, shellCommandPath, appId.toString(),\n          localResources, shellCommand);\n    }\n\n    if (shellArgs.length > 0) {\n      addToLocalResources(fs, null, shellArgsPath, appId.toString(),\n          localResources, StringUtils.join(shellArgs, \" \"));\n    }\n\n    // Set the necessary security tokens as needed\n    //amContainer.setContainerTokens(containerToken);\n\n    // Set the env variables to be setup in the env where the application master will be run\n    LOG.info(\"Set the environment for the application master\");\n    Map<String, String> env = new HashMap<String, String>();\n\n    // put location of shell script into env\n    // using the env info, the application master will create the correct local resource for the \n    // eventual containers that will be launched to execute the shell scripts\n    env.put(DSConstants.DISTRIBUTEDSHELLSCRIPTLOCATION, hdfsShellScriptLocation);\n    env.put(DSConstants.DISTRIBUTEDSHELLSCRIPTTIMESTAMP, Long.toString(hdfsShellScriptTimestamp));\n    env.put(DSConstants.DISTRIBUTEDSHELLSCRIPTLEN, Long.toString(hdfsShellScriptLen));\n\n    // Add AppMaster.jar location to classpath \t\t\n    // At some point we should not be required to add \n    // the hadoop specific classpaths to the env. \n    // It should be provided out of the box. \n    // For now setting all required classpaths including\n    // the classpath to \".\" for the application jar\n    StringBuilder classPathEnv = new StringBuilder(Environment.CLASSPATH.$$())\n      .append(ApplicationConstants.CLASS_PATH_SEPARATOR).append(\"./*\");\n    for (String c : conf.getStrings(\n        YarnConfiguration.YARN_APPLICATION_CLASSPATH,\n        YarnConfiguration.DEFAULT_YARN_CROSS_PLATFORM_APPLICATION_CLASSPATH)) {\n      classPathEnv.append(ApplicationConstants.CLASS_PATH_SEPARATOR);\n      classPathEnv.append(c.trim());\n    }\n    classPathEnv.append(ApplicationConstants.CLASS_PATH_SEPARATOR).append(\n      \"./log4j.properties\");\n\n    // add the runtime classpath needed for tests to work\n    if (conf.getBoolean(YarnConfiguration.IS_MINI_YARN_CLUSTER, false)) {\n      classPathEnv.append(':');\n      classPathEnv.append(System.getProperty(\"java.class.path\"));\n    }\n\n    env.put(\"CLASSPATH\", classPathEnv.toString());\n\n    // Set the necessary command to execute the application master \n    Vector<CharSequence> vargs = new Vector<CharSequence>(30);\n\n    // Set java executable command \n    LOG.info(\"Setting up app master command\");\n    vargs.add(Environment.JAVA_HOME.$$() + \"/bin/java\");\n    // Set Xmx based on am memory size\n    vargs.add(\"-Xmx\" + amMemory + \"m\");\n    // Set class name \n    vargs.add(appMasterMainClass);\n    // Set params for Application Master\n    vargs.add(\"--container_memory \" + String.valueOf(containerMemory));\n    vargs.add(\"--container_vcores \" + String.valueOf(containerVirtualCores));\n    vargs.add(\"--num_containers \" + String.valueOf(numContainers));\n    vargs.add(\"--priority \" + String.valueOf(shellCmdPriority));\n\n    for (Map.Entry<String, String> entry : shellEnv.entrySet()) {\n      vargs.add(\"--shell_env \" + entry.getKey() + \"=\" + entry.getValue());\n    }\t\t\t\n    if (debugFlag) {\n      vargs.add(\"--debug\");\n    }\n\n    vargs.add(\"1>\" + ApplicationConstants.LOG_DIR_EXPANSION_VAR + \"/AppMaster.stdout\");\n    vargs.add(\"2>\" + ApplicationConstants.LOG_DIR_EXPANSION_VAR + \"/AppMaster.stderr\");\n\n    // Get final commmand\n    StringBuilder command = new StringBuilder();\n    for (CharSequence str : vargs) {\n      command.append(str).append(\" \");\n    }\n\n    LOG.info(\"Completed setting up app master command \" + command.toString());\t   \n    List<String> commands = new ArrayList<String>();\n    commands.add(command.toString());\t\t\n\n    // Set up the container launch context for the application master\n    ContainerLaunchContext amContainer = ContainerLaunchContext.newInstance(\n      localResources, env, commands, null, null, null);\n\n    // Set up resource type requirements\n    // For now, both memory and vcores are supported, so we set memory and \n    // vcores requirements\n    Resource capability = Resource.newInstance(amMemory, amVCores);\n    appContext.setResource(capability);\n\n    // Service data is a binary blob that can be passed to the application\n    // Not needed in this scenario\n    // amContainer.setServiceData(serviceData);\n\n    // Setup security tokens\n    if (UserGroupInformation.isSecurityEnabled()) {\n      // Note: Credentials class is marked as LimitedPrivate for HDFS and MapReduce\n      Credentials credentials = new Credentials();\n      String tokenRenewer = conf.get(YarnConfiguration.RM_PRINCIPAL);\n      if (tokenRenewer == null || tokenRenewer.length() == 0) {\n        throw new IOException(\n          \"Can't get Master Kerberos principal for the RM to use as renewer\");\n      }\n\n      // For now, only getting tokens for the default file-system.\n      final Token<?> tokens[] =\n          fs.addDelegationTokens(tokenRenewer, credentials);\n      if (tokens != null) {\n        for (Token<?> token : tokens) {\n          LOG.info(\"Got dt for \" + fs.getUri() + \"; \" + token);\n        }\n      }\n      DataOutputBuffer dob = new DataOutputBuffer();\n      credentials.writeTokenStorageToStream(dob);\n      ByteBuffer fsTokens = ByteBuffer.wrap(dob.getData(), 0, dob.getLength());\n      amContainer.setTokens(fsTokens);\n    }\n\n    appContext.setAMContainerSpec(amContainer);\n\n    // Set the priority for the application master\n    // TODO - what is the range for priority? how to decide? \n    Priority pri = Priority.newInstance(amPriority);\n    appContext.setPriority(pri);\n\n    // Set the queue to which this application is to be submitted in the RM\n    appContext.setQueue(amQueue);\n\n    // Submit the application to the applications manager\n    // SubmitApplicationResponse submitResp = applicationsManager.submitApplication(appRequest);\n    // Ignore the response as either a valid response object is returned on success \n    // or an exception thrown to denote some form of a failure\n    LOG.info(\"Submitting application to ASM\");\n\n    yarnClient.submitApplication(appContext);\n\n    // TODO\n    // Try submitting the same request again\n    // app submission failure?\n\n    // Monitor the application\n    return monitorApplication(appId);\n\n  }","commit_id":"f6c723ff0c09134d721534a409e8d688cc028307","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * Parse command line options\n   *\n   * @param args Command line args\n   * @return Whether init successful and run should be invoked\n   * @throws ParseException\n   * @throws IOException\n   */\n  public boolean init(String[] args) throws ParseException, IOException {\n\n    Options opts = new Options();\n    opts.addOption(\"app_attempt_id\", true,\n        \"App Attempt ID. Not to be used unless for testing purposes\");\n    opts.addOption(\"shell_command\", true,\n        \"Shell command to be executed by the Application Master\");\n    opts.addOption(\"shell_script\", true,\n        \"Location of the shell script to be executed\");\n    opts.addOption(\"shell_args\", true, \"Command line args for the shell script\");\n    opts.addOption(\"shell_env\", true,\n        \"Environment for shell script. Specified as env_key=env_val pairs\");\n    opts.addOption(\"container_memory\", true,\n        \"Amount of memory in MB to be requested to run the shell command\");\n    opts.addOption(\"container_vcores\", true,\n        \"Amount of virtual cores to be requested to run the shell command\");\n    opts.addOption(\"num_containers\", true,\n        \"No. of containers on which the shell command needs to be executed\");\n    opts.addOption(\"priority\", true, \"Application Priority. Default 0\");\n    opts.addOption(\"debug\", false, \"Dump out debug information\");\n\n    opts.addOption(\"help\", false, \"Print usage\");\n    CommandLine cliParser = new GnuParser().parse(opts, args);\n\n    if (args.length == 0) {\n      printUsage(opts);\n      throw new IllegalArgumentException(\n          \"No args specified for application master to initialize\");\n    }\n\n    if (cliParser.hasOption(\"help\")) {\n      printUsage(opts);\n      return false;\n    }\n\n    if (cliParser.hasOption(\"debug\")) {\n      dumpOutDebugInfo();\n    }\n\n    Map<String, String> envs = System.getenv();\n\n    if (!envs.containsKey(Environment.CONTAINER_ID.name())) {\n      if (cliParser.hasOption(\"app_attempt_id\")) {\n        String appIdStr = cliParser.getOptionValue(\"app_attempt_id\", \"\");\n        appAttemptID = ConverterUtils.toApplicationAttemptId(appIdStr);\n      } else {\n        throw new IllegalArgumentException(\n            \"Application Attempt Id not set in the environment\");\n      }\n    } else {\n      ContainerId containerId = ConverterUtils.toContainerId(envs\n          .get(Environment.CONTAINER_ID.name()));\n      appAttemptID = containerId.getApplicationAttemptId();\n    }\n\n    if (!envs.containsKey(ApplicationConstants.APP_SUBMIT_TIME_ENV)) {\n      throw new RuntimeException(ApplicationConstants.APP_SUBMIT_TIME_ENV\n          + \" not set in the environment\");\n    }\n    if (!envs.containsKey(Environment.NM_HOST.name())) {\n      throw new RuntimeException(Environment.NM_HOST.name()\n          + \" not set in the environment\");\n    }\n    if (!envs.containsKey(Environment.NM_HTTP_PORT.name())) {\n      throw new RuntimeException(Environment.NM_HTTP_PORT\n          + \" not set in the environment\");\n    }\n    if (!envs.containsKey(Environment.NM_PORT.name())) {\n      throw new RuntimeException(Environment.NM_PORT.name()\n          + \" not set in the environment\");\n    }\n\n    LOG.info(\"Application master for app\" + \", appId=\"\n        + appAttemptID.getApplicationId().getId() + \", clustertimestamp=\"\n        + appAttemptID.getApplicationId().getClusterTimestamp()\n        + \", attemptId=\" + appAttemptID.getAttemptId());\n\n    if (!cliParser.hasOption(\"shell_command\")) {\n      throw new IllegalArgumentException(\n          \"No shell command specified to be executed by application master\");\n    }\n    String shellCommandPath = cliParser.getOptionValue(\"shell_command\");\n    FileInputStream fs = null;\n    DataInputStream ds = null;\n    try {\n      ds = new DataInputStream(new FileInputStream(shellCommandPath));\n      shellCommand = ds.readUTF();\n    } finally {\n      org.apache.commons.io.IOUtils.closeQuietly(ds);\n      org.apache.commons.io.IOUtils.closeQuietly(fs);\n    }\n\n    if (cliParser.hasOption(\"shell_args\")) {\n      shellArgs = cliParser.getOptionValue(\"shell_args\");\n    }\n    if (cliParser.hasOption(\"shell_env\")) {\n      String shellEnvs[] = cliParser.getOptionValues(\"shell_env\");\n      for (String env : shellEnvs) {\n        env = env.trim();\n        int index = env.indexOf('=');\n        if (index == -1) {\n          shellEnv.put(env, \"\");\n          continue;\n        }\n        String key = env.substring(0, index);\n        String val = \"\";\n        if (index < (env.length() - 1)) {\n          val = env.substring(index + 1);\n        }\n        shellEnv.put(key, val);\n      }\n    }\n\n    if (envs.containsKey(DSConstants.DISTRIBUTEDSHELLSCRIPTLOCATION)) {\n      shellScriptPath = envs.get(DSConstants.DISTRIBUTEDSHELLSCRIPTLOCATION);\n\n      if (envs.containsKey(DSConstants.DISTRIBUTEDSHELLSCRIPTTIMESTAMP)) {\n        shellScriptPathTimestamp = Long.valueOf(envs\n            .get(DSConstants.DISTRIBUTEDSHELLSCRIPTTIMESTAMP));\n      }\n      if (envs.containsKey(DSConstants.DISTRIBUTEDSHELLSCRIPTLEN)) {\n        shellScriptPathLen = Long.valueOf(envs\n            .get(DSConstants.DISTRIBUTEDSHELLSCRIPTLEN));\n      }\n\n      if (!shellScriptPath.isEmpty()\n          && (shellScriptPathTimestamp <= 0 || shellScriptPathLen <= 0)) {\n        LOG.error(\"Illegal values in env for shell script path\" + \", path=\"\n            + shellScriptPath + \", len=\" + shellScriptPathLen + \", timestamp=\"\n            + shellScriptPathTimestamp);\n        throw new IllegalArgumentException(\n            \"Illegal values in env for shell script path\");\n      }\n    }\n\n    containerMemory = Integer.parseInt(cliParser.getOptionValue(\n        \"container_memory\", \"10\"));\n    containerVirtualCores = Integer.parseInt(cliParser.getOptionValue(\n        \"container_vcores\", \"1\"));\n    numTotalContainers = Integer.parseInt(cliParser.getOptionValue(\n        \"num_containers\", \"1\"));\n    if (numTotalContainers == 0) {\n      throw new IllegalArgumentException(\n          \"Cannot run distributed shell with no containers\");\n    }\n    requestPriority = Integer.parseInt(cliParser\n        .getOptionValue(\"priority\", \"0\"));\n\n    return true;\n  }","id":13471,"modified_method":"/**\n   * Parse command line options\n   *\n   * @param args Command line args\n   * @return Whether init successful and run should be invoked\n   * @throws ParseException\n   * @throws IOException\n   */\n  public boolean init(String[] args) throws ParseException, IOException {\n\n    Options opts = new Options();\n    opts.addOption(\"app_attempt_id\", true,\n        \"App Attempt ID. Not to be used unless for testing purposes\");\n    opts.addOption(\"shell_script\", true,\n        \"Location of the shell script to be executed\");\n    opts.addOption(\"shell_args\", true, \"Command line args for the shell script\");\n    opts.addOption(\"shell_env\", true,\n        \"Environment for shell script. Specified as env_key=env_val pairs\");\n    opts.addOption(\"container_memory\", true,\n        \"Amount of memory in MB to be requested to run the shell command\");\n    opts.addOption(\"container_vcores\", true,\n        \"Amount of virtual cores to be requested to run the shell command\");\n    opts.addOption(\"num_containers\", true,\n        \"No. of containers on which the shell command needs to be executed\");\n    opts.addOption(\"priority\", true, \"Application Priority. Default 0\");\n    opts.addOption(\"debug\", false, \"Dump out debug information\");\n\n    opts.addOption(\"help\", false, \"Print usage\");\n    CommandLine cliParser = new GnuParser().parse(opts, args);\n\n    if (args.length == 0) {\n      printUsage(opts);\n      throw new IllegalArgumentException(\n          \"No args specified for application master to initialize\");\n    }\n\n    if (cliParser.hasOption(\"help\")) {\n      printUsage(opts);\n      return false;\n    }\n\n    if (cliParser.hasOption(\"debug\")) {\n      dumpOutDebugInfo();\n    }\n\n    Map<String, String> envs = System.getenv();\n\n    if (!envs.containsKey(Environment.CONTAINER_ID.name())) {\n      if (cliParser.hasOption(\"app_attempt_id\")) {\n        String appIdStr = cliParser.getOptionValue(\"app_attempt_id\", \"\");\n        appAttemptID = ConverterUtils.toApplicationAttemptId(appIdStr);\n      } else {\n        throw new IllegalArgumentException(\n            \"Application Attempt Id not set in the environment\");\n      }\n    } else {\n      ContainerId containerId = ConverterUtils.toContainerId(envs\n          .get(Environment.CONTAINER_ID.name()));\n      appAttemptID = containerId.getApplicationAttemptId();\n    }\n\n    if (!envs.containsKey(ApplicationConstants.APP_SUBMIT_TIME_ENV)) {\n      throw new RuntimeException(ApplicationConstants.APP_SUBMIT_TIME_ENV\n          + \" not set in the environment\");\n    }\n    if (!envs.containsKey(Environment.NM_HOST.name())) {\n      throw new RuntimeException(Environment.NM_HOST.name()\n          + \" not set in the environment\");\n    }\n    if (!envs.containsKey(Environment.NM_HTTP_PORT.name())) {\n      throw new RuntimeException(Environment.NM_HTTP_PORT\n          + \" not set in the environment\");\n    }\n    if (!envs.containsKey(Environment.NM_PORT.name())) {\n      throw new RuntimeException(Environment.NM_PORT.name()\n          + \" not set in the environment\");\n    }\n\n    LOG.info(\"Application master for app\" + \", appId=\"\n        + appAttemptID.getApplicationId().getId() + \", clustertimestamp=\"\n        + appAttemptID.getApplicationId().getClusterTimestamp()\n        + \", attemptId=\" + appAttemptID.getAttemptId());\n\n    File shellCommandFile = new File(shellCommandPath);\n    if (!shellCommandFile.exists()) {\n      throw new IllegalArgumentException(\n          \"No shell command specified to be executed by application master\");\n    }\n    FileInputStream fs = null;\n    DataInputStream ds = null;\n    try {\n      ds = new DataInputStream(new FileInputStream(shellCommandFile));\n      shellCommand = ds.readUTF();\n    } finally {\n      org.apache.commons.io.IOUtils.closeQuietly(ds);\n      org.apache.commons.io.IOUtils.closeQuietly(fs);\n    }\n\n    if (cliParser.hasOption(\"shell_args\")) {\n      shellArgs = cliParser.getOptionValue(\"shell_args\");\n    }\n    if (cliParser.hasOption(\"shell_env\")) {\n      String shellEnvs[] = cliParser.getOptionValues(\"shell_env\");\n      for (String env : shellEnvs) {\n        env = env.trim();\n        int index = env.indexOf('=');\n        if (index == -1) {\n          shellEnv.put(env, \"\");\n          continue;\n        }\n        String key = env.substring(0, index);\n        String val = \"\";\n        if (index < (env.length() - 1)) {\n          val = env.substring(index + 1);\n        }\n        shellEnv.put(key, val);\n      }\n    }\n\n    if (envs.containsKey(DSConstants.DISTRIBUTEDSHELLSCRIPTLOCATION)) {\n      shellScriptPath = envs.get(DSConstants.DISTRIBUTEDSHELLSCRIPTLOCATION);\n\n      if (envs.containsKey(DSConstants.DISTRIBUTEDSHELLSCRIPTTIMESTAMP)) {\n        shellScriptPathTimestamp = Long.valueOf(envs\n            .get(DSConstants.DISTRIBUTEDSHELLSCRIPTTIMESTAMP));\n      }\n      if (envs.containsKey(DSConstants.DISTRIBUTEDSHELLSCRIPTLEN)) {\n        shellScriptPathLen = Long.valueOf(envs\n            .get(DSConstants.DISTRIBUTEDSHELLSCRIPTLEN));\n      }\n\n      if (!shellScriptPath.isEmpty()\n          && (shellScriptPathTimestamp <= 0 || shellScriptPathLen <= 0)) {\n        LOG.error(\"Illegal values in env for shell script path\" + \", path=\"\n            + shellScriptPath + \", len=\" + shellScriptPathLen + \", timestamp=\"\n            + shellScriptPathTimestamp);\n        throw new IllegalArgumentException(\n            \"Illegal values in env for shell script path\");\n      }\n    }\n\n    containerMemory = Integer.parseInt(cliParser.getOptionValue(\n        \"container_memory\", \"10\"));\n    containerVirtualCores = Integer.parseInt(cliParser.getOptionValue(\n        \"container_vcores\", \"1\"));\n    numTotalContainers = Integer.parseInt(cliParser.getOptionValue(\n        \"num_containers\", \"1\"));\n    if (numTotalContainers == 0) {\n      throw new IllegalArgumentException(\n          \"Cannot run distributed shell with no containers\");\n    }\n    requestPriority = Integer.parseInt(cliParser\n        .getOptionValue(\"priority\", \"0\"));\n\n    return true;\n  }","commit_id":"a802ef4a5f2e71eed2cbdc053258ae2f66af4755","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * Main run function for the client\n   * @return true if application completed successfully\n   * @throws IOException\n   * @throws YarnException\n   */\n  public boolean run() throws IOException, YarnException {\n\n    LOG.info(\"Running Client\");\n    yarnClient.start();\n\n    YarnClusterMetrics clusterMetrics = yarnClient.getYarnClusterMetrics();\n    LOG.info(\"Got Cluster metric info from ASM\" \n        + \", numNodeManagers=\" + clusterMetrics.getNumNodeManagers());\n\n    List<NodeReport> clusterNodeReports = yarnClient.getNodeReports(\n        NodeState.RUNNING);\n    LOG.info(\"Got Cluster node info from ASM\");\n    for (NodeReport node : clusterNodeReports) {\n      LOG.info(\"Got node report from ASM for\"\n          + \", nodeId=\" + node.getNodeId() \n          + \", nodeAddress\" + node.getHttpAddress()\n          + \", nodeRackName\" + node.getRackName()\n          + \", nodeNumContainers\" + node.getNumContainers());\n    }\n\n    QueueInfo queueInfo = yarnClient.getQueueInfo(this.amQueue);\n    LOG.info(\"Queue info\"\n        + \", queueName=\" + queueInfo.getQueueName()\n        + \", queueCurrentCapacity=\" + queueInfo.getCurrentCapacity()\n        + \", queueMaxCapacity=\" + queueInfo.getMaximumCapacity()\n        + \", queueApplicationCount=\" + queueInfo.getApplications().size()\n        + \", queueChildQueueCount=\" + queueInfo.getChildQueues().size());\t\t\n\n    List<QueueUserACLInfo> listAclInfo = yarnClient.getQueueAclsInfo();\n    for (QueueUserACLInfo aclInfo : listAclInfo) {\n      for (QueueACL userAcl : aclInfo.getUserAcls()) {\n        LOG.info(\"User ACL Info for Queue\"\n            + \", queueName=\" + aclInfo.getQueueName()\t\t\t\n            + \", userAcl=\" + userAcl.name());\n      }\n    }\t\t\n\n    // Get a new application id\n    YarnClientApplication app = yarnClient.createApplication();\n    GetNewApplicationResponse appResponse = app.getNewApplicationResponse();\n    // TODO get min/max resource capabilities from RM and change memory ask if needed\n    // If we do not have min/max, we may not be able to correctly request \n    // the required resources from the RM for the app master\n    // Memory ask has to be a multiple of min and less than max. \n    // Dump out information about cluster capability as seen by the resource manager\n    int maxMem = appResponse.getMaximumResourceCapability().getMemory();\n    LOG.info(\"Max mem capabililty of resources in this cluster \" + maxMem);\n\n    // A resource ask cannot exceed the max. \n    if (amMemory > maxMem) {\n      LOG.info(\"AM memory specified above max threshold of cluster. Using max value.\"\n          + \", specified=\" + amMemory\n          + \", max=\" + maxMem);\n      amMemory = maxMem;\n    }\t\t\t\t\n\n    int maxVCores = appResponse.getMaximumResourceCapability().getVirtualCores();\n    LOG.info(\"Max virtual cores capabililty of resources in this cluster \" + maxVCores);\n    \n    if (amVCores > maxVCores) {\n      LOG.info(\"AM virtual cores specified above max threshold of cluster. \" \n          + \"Using max value.\" + \", specified=\" + amVCores \n          + \", max=\" + maxVCores);\n      amVCores = maxVCores;\n    }\n    \n    // set the application name\n    ApplicationSubmissionContext appContext = app.getApplicationSubmissionContext();\n    ApplicationId appId = appContext.getApplicationId();\n    appContext.setApplicationName(appName);\n\n    // Set up the container launch context for the application master\n    ContainerLaunchContext amContainer = Records.newRecord(ContainerLaunchContext.class);\n\n    // set local resources for the application master\n    // local files or archives as needed\n    // In this scenario, the jar file for the application master is part of the local resources\t\t\t\n    Map<String, LocalResource> localResources = new HashMap<String, LocalResource>();\n\n    LOG.info(\"Copy App Master jar from local filesystem and add to local environment\");\n    // Copy the application master jar to the filesystem \n    // Create a local resource to point to the destination jar path \n    FileSystem fs = FileSystem.get(conf);\n    Path src = new Path(appMasterJar);\n    String pathSuffix = appName + \"/\" + appId.getId() + \"/AppMaster.jar\";\t    \n    Path dst = new Path(fs.getHomeDirectory(), pathSuffix);\n    fs.copyFromLocalFile(false, true, src, dst);\n    FileStatus destStatus = fs.getFileStatus(dst);\n    LocalResource amJarRsrc = Records.newRecord(LocalResource.class);\n\n    // Set the type of resource - file or archive\n    // archives are untarred at destination\n    // we don't need the jar file to be untarred for now\n    amJarRsrc.setType(LocalResourceType.FILE);\n    // Set visibility of the resource \n    // Setting to most private option\n    amJarRsrc.setVisibility(LocalResourceVisibility.APPLICATION);\t   \n    // Set the resource to be copied over\n    amJarRsrc.setResource(ConverterUtils.getYarnUrlFromPath(dst)); \n    // Set timestamp and length of file so that the framework \n    // can do basic sanity checks for the local resource \n    // after it has been copied over to ensure it is the same \n    // resource the client intended to use with the application\n    amJarRsrc.setTimestamp(destStatus.getModificationTime());\n    amJarRsrc.setSize(destStatus.getLen());\n    localResources.put(\"AppMaster.jar\",  amJarRsrc);\n\n    // Set the log4j properties if needed \n    if (!log4jPropFile.isEmpty()) {\n      Path log4jSrc = new Path(log4jPropFile);\n      Path log4jDst = new Path(fs.getHomeDirectory(), \"log4j.props\");\n      fs.copyFromLocalFile(false, true, log4jSrc, log4jDst);\n      FileStatus log4jFileStatus = fs.getFileStatus(log4jDst);\n      LocalResource log4jRsrc = Records.newRecord(LocalResource.class);\n      log4jRsrc.setType(LocalResourceType.FILE);\n      log4jRsrc.setVisibility(LocalResourceVisibility.APPLICATION);\t   \n      log4jRsrc.setResource(ConverterUtils.getYarnUrlFromURI(log4jDst.toUri()));\n      log4jRsrc.setTimestamp(log4jFileStatus.getModificationTime());\n      log4jRsrc.setSize(log4jFileStatus.getLen());\n      localResources.put(\"log4j.properties\", log4jRsrc);\n    }\t\t\t\n\n    // The shell script has to be made available on the final container(s)\n    // where it will be executed. \n    // To do this, we need to first copy into the filesystem that is visible \n    // to the yarn framework. \n    // We do not need to set this as a local resource for the application \n    // master as the application master does not need it. \t\t\n    String hdfsShellScriptLocation = \"\"; \n    long hdfsShellScriptLen = 0;\n    long hdfsShellScriptTimestamp = 0;\n    if (!shellScriptPath.isEmpty()) {\n      Path shellSrc = new Path(shellScriptPath);\n      String shellPathSuffix = appName + \"/\" + appId.getId() + \"/ExecShellScript.sh\";\n      Path shellDst = new Path(fs.getHomeDirectory(), shellPathSuffix);\n      fs.copyFromLocalFile(false, true, shellSrc, shellDst);\n      hdfsShellScriptLocation = shellDst.toUri().toString(); \n      FileStatus shellFileStatus = fs.getFileStatus(shellDst);\n      hdfsShellScriptLen = shellFileStatus.getLen();\n      hdfsShellScriptTimestamp = shellFileStatus.getModificationTime();\n    }\n\n    if (!shellCommand.isEmpty()) {\n      String shellCommandSuffix =\n          appName + \"/\" + appId.getId() + \"/\" + shellCommandPath;\n      Path shellCommandDst =\n          new Path(fs.getHomeDirectory(), shellCommandSuffix);\n      FSDataOutputStream ostream = null;\n      try {\n        ostream = FileSystem\n            .create(fs, shellCommandDst, new FsPermission((short) 0710));\n        ostream.writeUTF(shellCommand);\n      } finally {\n        IOUtils.closeQuietly(ostream);\n      }\n      FileStatus scFileStatus = fs.getFileStatus(shellCommandDst);\n      LocalResource scRsrc = Records.newRecord(LocalResource.class);\n      scRsrc.setType(LocalResourceType.FILE);\n      scRsrc.setVisibility(LocalResourceVisibility.APPLICATION);\n      scRsrc.setResource(ConverterUtils.getYarnUrlFromURI(shellCommandDst\n          .toUri()));\n      scRsrc.setTimestamp(scFileStatus.getModificationTime());\n      scRsrc.setSize(scFileStatus.getLen());\n      localResources.put(\"shellCommands\", scRsrc);\n    }\n    // Set local resource info into app master container launch context\n    amContainer.setLocalResources(localResources);\n\n    // Set the necessary security tokens as needed\n    //amContainer.setContainerTokens(containerToken);\n\n    // Set the env variables to be setup in the env where the application master will be run\n    LOG.info(\"Set the environment for the application master\");\n    Map<String, String> env = new HashMap<String, String>();\n\n    // put location of shell script into env\n    // using the env info, the application master will create the correct local resource for the \n    // eventual containers that will be launched to execute the shell scripts\n    env.put(DSConstants.DISTRIBUTEDSHELLSCRIPTLOCATION, hdfsShellScriptLocation);\n    env.put(DSConstants.DISTRIBUTEDSHELLSCRIPTTIMESTAMP, Long.toString(hdfsShellScriptTimestamp));\n    env.put(DSConstants.DISTRIBUTEDSHELLSCRIPTLEN, Long.toString(hdfsShellScriptLen));\n\n    // Add AppMaster.jar location to classpath \t\t\n    // At some point we should not be required to add \n    // the hadoop specific classpaths to the env. \n    // It should be provided out of the box. \n    // For now setting all required classpaths including\n    // the classpath to \".\" for the application jar\n    StringBuilder classPathEnv = new StringBuilder(Environment.CLASSPATH.$())\n      .append(File.pathSeparatorChar).append(\"./*\");\n    for (String c : conf.getStrings(\n        YarnConfiguration.YARN_APPLICATION_CLASSPATH,\n        YarnConfiguration.DEFAULT_YARN_APPLICATION_CLASSPATH)) {\n      classPathEnv.append(File.pathSeparatorChar);\n      classPathEnv.append(c.trim());\n    }\n    classPathEnv.append(File.pathSeparatorChar).append(\"./log4j.properties\");\n\n    // add the runtime classpath needed for tests to work\n    if (conf.getBoolean(YarnConfiguration.IS_MINI_YARN_CLUSTER, false)) {\n      classPathEnv.append(':');\n      classPathEnv.append(System.getProperty(\"java.class.path\"));\n    }\n\n    env.put(\"CLASSPATH\", classPathEnv.toString());\n\n    amContainer.setEnvironment(env);\n\n    // Set the necessary command to execute the application master \n    Vector<CharSequence> vargs = new Vector<CharSequence>(30);\n\n    // Set java executable command \n    LOG.info(\"Setting up app master command\");\n    vargs.add(Environment.JAVA_HOME.$() + \"/bin/java\");\n    // Set Xmx based on am memory size\n    vargs.add(\"-Xmx\" + amMemory + \"m\");\n    // Set class name \n    vargs.add(appMasterMainClass);\n    // Set params for Application Master\n    vargs.add(\"--container_memory \" + String.valueOf(containerMemory));\n    vargs.add(\"--container_vcores \" + String.valueOf(containerVirtualCores));\n    vargs.add(\"--num_containers \" + String.valueOf(numContainers));\n    vargs.add(\"--priority \" + String.valueOf(shellCmdPriority));\n\n    if (!shellCommand.isEmpty()) {\n      vargs.add(\"--shell_command \" + shellCommandPath + \"\");\n    }\n    if (!shellArgs.isEmpty()) {\n      vargs.add(\"--shell_args \" + shellArgs + \"\");\n    }\n    for (Map.Entry<String, String> entry : shellEnv.entrySet()) {\n      vargs.add(\"--shell_env \" + entry.getKey() + \"=\" + entry.getValue());\n    }\t\t\t\n    if (debugFlag) {\n      vargs.add(\"--debug\");\n    }\n\n    vargs.add(\"1>\" + ApplicationConstants.LOG_DIR_EXPANSION_VAR + \"/AppMaster.stdout\");\n    vargs.add(\"2>\" + ApplicationConstants.LOG_DIR_EXPANSION_VAR + \"/AppMaster.stderr\");\n\n    // Get final commmand\n    StringBuilder command = new StringBuilder();\n    for (CharSequence str : vargs) {\n      command.append(str).append(\" \");\n    }\n\n    LOG.info(\"Completed setting up app master command \" + command.toString());\t   \n    List<String> commands = new ArrayList<String>();\n    commands.add(command.toString());\t\t\n    amContainer.setCommands(commands);\n\n    // Set up resource type requirements\n    // For now, both memory and vcores are supported, so we set memory and \n    // vcores requirements\n    Resource capability = Records.newRecord(Resource.class);\n    capability.setMemory(amMemory);\n    capability.setVirtualCores(amVCores);\n    appContext.setResource(capability);\n\n    // Service data is a binary blob that can be passed to the application\n    // Not needed in this scenario\n    // amContainer.setServiceData(serviceData);\n\n    // Setup security tokens\n    if (UserGroupInformation.isSecurityEnabled()) {\n      Credentials credentials = new Credentials();\n      String tokenRenewer = conf.get(YarnConfiguration.RM_PRINCIPAL);\n      if (tokenRenewer == null || tokenRenewer.length() == 0) {\n        throw new IOException(\n          \"Can't get Master Kerberos principal for the RM to use as renewer\");\n      }\n\n      // For now, only getting tokens for the default file-system.\n      final Token<?> tokens[] =\n          fs.addDelegationTokens(tokenRenewer, credentials);\n      if (tokens != null) {\n        for (Token<?> token : tokens) {\n          LOG.info(\"Got dt for \" + fs.getUri() + \"; \" + token);\n        }\n      }\n      DataOutputBuffer dob = new DataOutputBuffer();\n      credentials.writeTokenStorageToStream(dob);\n      ByteBuffer fsTokens = ByteBuffer.wrap(dob.getData(), 0, dob.getLength());\n      amContainer.setTokens(fsTokens);\n    }\n\n    appContext.setAMContainerSpec(amContainer);\n\n    // Set the priority for the application master\n    Priority pri = Records.newRecord(Priority.class);\n    // TODO - what is the range for priority? how to decide? \n    pri.setPriority(amPriority);\n    appContext.setPriority(pri);\n\n    // Set the queue to which this application is to be submitted in the RM\n    appContext.setQueue(amQueue);\n\n    // Submit the application to the applications manager\n    // SubmitApplicationResponse submitResp = applicationsManager.submitApplication(appRequest);\n    // Ignore the response as either a valid response object is returned on success \n    // or an exception thrown to denote some form of a failure\n    LOG.info(\"Submitting application to ASM\");\n\n    yarnClient.submitApplication(appContext);\n\n    // TODO\n    // Try submitting the same request again\n    // app submission failure?\n\n    // Monitor the application\n    return monitorApplication(appId);\n\n  }","id":13472,"modified_method":"/**\n   * Main run function for the client\n   * @return true if application completed successfully\n   * @throws IOException\n   * @throws YarnException\n   */\n  public boolean run() throws IOException, YarnException {\n\n    LOG.info(\"Running Client\");\n    yarnClient.start();\n\n    YarnClusterMetrics clusterMetrics = yarnClient.getYarnClusterMetrics();\n    LOG.info(\"Got Cluster metric info from ASM\" \n        + \", numNodeManagers=\" + clusterMetrics.getNumNodeManagers());\n\n    List<NodeReport> clusterNodeReports = yarnClient.getNodeReports(\n        NodeState.RUNNING);\n    LOG.info(\"Got Cluster node info from ASM\");\n    for (NodeReport node : clusterNodeReports) {\n      LOG.info(\"Got node report from ASM for\"\n          + \", nodeId=\" + node.getNodeId() \n          + \", nodeAddress\" + node.getHttpAddress()\n          + \", nodeRackName\" + node.getRackName()\n          + \", nodeNumContainers\" + node.getNumContainers());\n    }\n\n    QueueInfo queueInfo = yarnClient.getQueueInfo(this.amQueue);\n    LOG.info(\"Queue info\"\n        + \", queueName=\" + queueInfo.getQueueName()\n        + \", queueCurrentCapacity=\" + queueInfo.getCurrentCapacity()\n        + \", queueMaxCapacity=\" + queueInfo.getMaximumCapacity()\n        + \", queueApplicationCount=\" + queueInfo.getApplications().size()\n        + \", queueChildQueueCount=\" + queueInfo.getChildQueues().size());\t\t\n\n    List<QueueUserACLInfo> listAclInfo = yarnClient.getQueueAclsInfo();\n    for (QueueUserACLInfo aclInfo : listAclInfo) {\n      for (QueueACL userAcl : aclInfo.getUserAcls()) {\n        LOG.info(\"User ACL Info for Queue\"\n            + \", queueName=\" + aclInfo.getQueueName()\t\t\t\n            + \", userAcl=\" + userAcl.name());\n      }\n    }\t\t\n\n    // Get a new application id\n    YarnClientApplication app = yarnClient.createApplication();\n    GetNewApplicationResponse appResponse = app.getNewApplicationResponse();\n    // TODO get min/max resource capabilities from RM and change memory ask if needed\n    // If we do not have min/max, we may not be able to correctly request \n    // the required resources from the RM for the app master\n    // Memory ask has to be a multiple of min and less than max. \n    // Dump out information about cluster capability as seen by the resource manager\n    int maxMem = appResponse.getMaximumResourceCapability().getMemory();\n    LOG.info(\"Max mem capabililty of resources in this cluster \" + maxMem);\n\n    // A resource ask cannot exceed the max. \n    if (amMemory > maxMem) {\n      LOG.info(\"AM memory specified above max threshold of cluster. Using max value.\"\n          + \", specified=\" + amMemory\n          + \", max=\" + maxMem);\n      amMemory = maxMem;\n    }\t\t\t\t\n\n    int maxVCores = appResponse.getMaximumResourceCapability().getVirtualCores();\n    LOG.info(\"Max virtual cores capabililty of resources in this cluster \" + maxVCores);\n    \n    if (amVCores > maxVCores) {\n      LOG.info(\"AM virtual cores specified above max threshold of cluster. \" \n          + \"Using max value.\" + \", specified=\" + amVCores \n          + \", max=\" + maxVCores);\n      amVCores = maxVCores;\n    }\n    \n    // set the application name\n    ApplicationSubmissionContext appContext = app.getApplicationSubmissionContext();\n    ApplicationId appId = appContext.getApplicationId();\n    appContext.setApplicationName(appName);\n\n    // Set up the container launch context for the application master\n    ContainerLaunchContext amContainer = Records.newRecord(ContainerLaunchContext.class);\n\n    // set local resources for the application master\n    // local files or archives as needed\n    // In this scenario, the jar file for the application master is part of the local resources\t\t\t\n    Map<String, LocalResource> localResources = new HashMap<String, LocalResource>();\n\n    LOG.info(\"Copy App Master jar from local filesystem and add to local environment\");\n    // Copy the application master jar to the filesystem \n    // Create a local resource to point to the destination jar path \n    FileSystem fs = FileSystem.get(conf);\n    Path src = new Path(appMasterJar);\n    String pathSuffix = appName + \"/\" + appId.getId() + \"/AppMaster.jar\";\t    \n    Path dst = new Path(fs.getHomeDirectory(), pathSuffix);\n    fs.copyFromLocalFile(false, true, src, dst);\n    FileStatus destStatus = fs.getFileStatus(dst);\n    LocalResource amJarRsrc = Records.newRecord(LocalResource.class);\n\n    // Set the type of resource - file or archive\n    // archives are untarred at destination\n    // we don't need the jar file to be untarred for now\n    amJarRsrc.setType(LocalResourceType.FILE);\n    // Set visibility of the resource \n    // Setting to most private option\n    amJarRsrc.setVisibility(LocalResourceVisibility.APPLICATION);\t   \n    // Set the resource to be copied over\n    amJarRsrc.setResource(ConverterUtils.getYarnUrlFromPath(dst)); \n    // Set timestamp and length of file so that the framework \n    // can do basic sanity checks for the local resource \n    // after it has been copied over to ensure it is the same \n    // resource the client intended to use with the application\n    amJarRsrc.setTimestamp(destStatus.getModificationTime());\n    amJarRsrc.setSize(destStatus.getLen());\n    localResources.put(\"AppMaster.jar\",  amJarRsrc);\n\n    // Set the log4j properties if needed \n    if (!log4jPropFile.isEmpty()) {\n      Path log4jSrc = new Path(log4jPropFile);\n      Path log4jDst = new Path(fs.getHomeDirectory(), \"log4j.props\");\n      fs.copyFromLocalFile(false, true, log4jSrc, log4jDst);\n      FileStatus log4jFileStatus = fs.getFileStatus(log4jDst);\n      LocalResource log4jRsrc = Records.newRecord(LocalResource.class);\n      log4jRsrc.setType(LocalResourceType.FILE);\n      log4jRsrc.setVisibility(LocalResourceVisibility.APPLICATION);\t   \n      log4jRsrc.setResource(ConverterUtils.getYarnUrlFromURI(log4jDst.toUri()));\n      log4jRsrc.setTimestamp(log4jFileStatus.getModificationTime());\n      log4jRsrc.setSize(log4jFileStatus.getLen());\n      localResources.put(\"log4j.properties\", log4jRsrc);\n    }\t\t\t\n\n    // The shell script has to be made available on the final container(s)\n    // where it will be executed. \n    // To do this, we need to first copy into the filesystem that is visible \n    // to the yarn framework. \n    // We do not need to set this as a local resource for the application \n    // master as the application master does not need it. \t\t\n    String hdfsShellScriptLocation = \"\"; \n    long hdfsShellScriptLen = 0;\n    long hdfsShellScriptTimestamp = 0;\n    if (!shellScriptPath.isEmpty()) {\n      Path shellSrc = new Path(shellScriptPath);\n      String shellPathSuffix = appName + \"/\" + appId.getId() + \"/ExecShellScript.sh\";\n      Path shellDst = new Path(fs.getHomeDirectory(), shellPathSuffix);\n      fs.copyFromLocalFile(false, true, shellSrc, shellDst);\n      hdfsShellScriptLocation = shellDst.toUri().toString(); \n      FileStatus shellFileStatus = fs.getFileStatus(shellDst);\n      hdfsShellScriptLen = shellFileStatus.getLen();\n      hdfsShellScriptTimestamp = shellFileStatus.getModificationTime();\n    }\n\n    if (!shellCommand.isEmpty()) {\n      String shellCommandSuffix =\n          appName + \"/\" + appId.getId() + \"/\" + shellCommandPath;\n      Path shellCommandDst =\n          new Path(fs.getHomeDirectory(), shellCommandSuffix);\n      FSDataOutputStream ostream = null;\n      try {\n        ostream = FileSystem\n            .create(fs, shellCommandDst, new FsPermission((short) 0710));\n        ostream.writeUTF(shellCommand);\n      } finally {\n        IOUtils.closeQuietly(ostream);\n      }\n      FileStatus scFileStatus = fs.getFileStatus(shellCommandDst);\n      LocalResource scRsrc =\n          LocalResource.newInstance(\n              ConverterUtils.getYarnUrlFromURI(shellCommandDst.toUri()),\n              LocalResourceType.FILE, LocalResourceVisibility.APPLICATION,\n              scFileStatus.getLen(), scFileStatus.getModificationTime());\n      localResources.put(shellCommandPath, scRsrc);\n    }\n    // Set local resource info into app master container launch context\n    amContainer.setLocalResources(localResources);\n\n    // Set the necessary security tokens as needed\n    //amContainer.setContainerTokens(containerToken);\n\n    // Set the env variables to be setup in the env where the application master will be run\n    LOG.info(\"Set the environment for the application master\");\n    Map<String, String> env = new HashMap<String, String>();\n\n    // put location of shell script into env\n    // using the env info, the application master will create the correct local resource for the \n    // eventual containers that will be launched to execute the shell scripts\n    env.put(DSConstants.DISTRIBUTEDSHELLSCRIPTLOCATION, hdfsShellScriptLocation);\n    env.put(DSConstants.DISTRIBUTEDSHELLSCRIPTTIMESTAMP, Long.toString(hdfsShellScriptTimestamp));\n    env.put(DSConstants.DISTRIBUTEDSHELLSCRIPTLEN, Long.toString(hdfsShellScriptLen));\n\n    // Add AppMaster.jar location to classpath \t\t\n    // At some point we should not be required to add \n    // the hadoop specific classpaths to the env. \n    // It should be provided out of the box. \n    // For now setting all required classpaths including\n    // the classpath to \".\" for the application jar\n    StringBuilder classPathEnv = new StringBuilder(Environment.CLASSPATH.$())\n      .append(File.pathSeparatorChar).append(\"./*\");\n    for (String c : conf.getStrings(\n        YarnConfiguration.YARN_APPLICATION_CLASSPATH,\n        YarnConfiguration.DEFAULT_YARN_APPLICATION_CLASSPATH)) {\n      classPathEnv.append(File.pathSeparatorChar);\n      classPathEnv.append(c.trim());\n    }\n    classPathEnv.append(File.pathSeparatorChar).append(\"./log4j.properties\");\n\n    // add the runtime classpath needed for tests to work\n    if (conf.getBoolean(YarnConfiguration.IS_MINI_YARN_CLUSTER, false)) {\n      classPathEnv.append(':');\n      classPathEnv.append(System.getProperty(\"java.class.path\"));\n    }\n\n    env.put(\"CLASSPATH\", classPathEnv.toString());\n\n    amContainer.setEnvironment(env);\n\n    // Set the necessary command to execute the application master \n    Vector<CharSequence> vargs = new Vector<CharSequence>(30);\n\n    // Set java executable command \n    LOG.info(\"Setting up app master command\");\n    vargs.add(Environment.JAVA_HOME.$() + \"/bin/java\");\n    // Set Xmx based on am memory size\n    vargs.add(\"-Xmx\" + amMemory + \"m\");\n    // Set class name \n    vargs.add(appMasterMainClass);\n    // Set params for Application Master\n    vargs.add(\"--container_memory \" + String.valueOf(containerMemory));\n    vargs.add(\"--container_vcores \" + String.valueOf(containerVirtualCores));\n    vargs.add(\"--num_containers \" + String.valueOf(numContainers));\n    vargs.add(\"--priority \" + String.valueOf(shellCmdPriority));\n\n    if (!shellArgs.isEmpty()) {\n      vargs.add(\"--shell_args \" + shellArgs + \"\");\n    }\n    for (Map.Entry<String, String> entry : shellEnv.entrySet()) {\n      vargs.add(\"--shell_env \" + entry.getKey() + \"=\" + entry.getValue());\n    }\t\t\t\n    if (debugFlag) {\n      vargs.add(\"--debug\");\n    }\n\n    vargs.add(\"1>\" + ApplicationConstants.LOG_DIR_EXPANSION_VAR + \"/AppMaster.stdout\");\n    vargs.add(\"2>\" + ApplicationConstants.LOG_DIR_EXPANSION_VAR + \"/AppMaster.stderr\");\n\n    // Get final commmand\n    StringBuilder command = new StringBuilder();\n    for (CharSequence str : vargs) {\n      command.append(str).append(\" \");\n    }\n\n    LOG.info(\"Completed setting up app master command \" + command.toString());\t   \n    List<String> commands = new ArrayList<String>();\n    commands.add(command.toString());\t\t\n    amContainer.setCommands(commands);\n\n    // Set up resource type requirements\n    // For now, both memory and vcores are supported, so we set memory and \n    // vcores requirements\n    Resource capability = Records.newRecord(Resource.class);\n    capability.setMemory(amMemory);\n    capability.setVirtualCores(amVCores);\n    appContext.setResource(capability);\n\n    // Service data is a binary blob that can be passed to the application\n    // Not needed in this scenario\n    // amContainer.setServiceData(serviceData);\n\n    // Setup security tokens\n    if (UserGroupInformation.isSecurityEnabled()) {\n      Credentials credentials = new Credentials();\n      String tokenRenewer = conf.get(YarnConfiguration.RM_PRINCIPAL);\n      if (tokenRenewer == null || tokenRenewer.length() == 0) {\n        throw new IOException(\n          \"Can't get Master Kerberos principal for the RM to use as renewer\");\n      }\n\n      // For now, only getting tokens for the default file-system.\n      final Token<?> tokens[] =\n          fs.addDelegationTokens(tokenRenewer, credentials);\n      if (tokens != null) {\n        for (Token<?> token : tokens) {\n          LOG.info(\"Got dt for \" + fs.getUri() + \"; \" + token);\n        }\n      }\n      DataOutputBuffer dob = new DataOutputBuffer();\n      credentials.writeTokenStorageToStream(dob);\n      ByteBuffer fsTokens = ByteBuffer.wrap(dob.getData(), 0, dob.getLength());\n      amContainer.setTokens(fsTokens);\n    }\n\n    appContext.setAMContainerSpec(amContainer);\n\n    // Set the priority for the application master\n    Priority pri = Records.newRecord(Priority.class);\n    // TODO - what is the range for priority? how to decide? \n    pri.setPriority(amPriority);\n    appContext.setPriority(pri);\n\n    // Set the queue to which this application is to be submitted in the RM\n    appContext.setQueue(amQueue);\n\n    // Submit the application to the applications manager\n    // SubmitApplicationResponse submitResp = applicationsManager.submitApplication(appRequest);\n    // Ignore the response as either a valid response object is returned on success \n    // or an exception thrown to denote some form of a failure\n    LOG.info(\"Submitting application to ASM\");\n\n    yarnClient.submitApplication(appContext);\n\n    // TODO\n    // Try submitting the same request again\n    // app submission failure?\n\n    // Monitor the application\n    return monitorApplication(appId);\n\n  }","commit_id":"a802ef4a5f2e71eed2cbdc053258ae2f66af4755","url":"https://github.com/apache/hadoop"},{"original_method":"private void\n      verifyContainerLog(int containerNum, List<String> expectedContent) {\n    File logFolder =\n        new File(yarnCluster.getNodeManager(0).getConfig()\n            .get(YarnConfiguration.NM_LOG_DIRS,\n                YarnConfiguration.DEFAULT_NM_LOG_DIRS));\n\n    File[] listOfFiles = logFolder.listFiles();\n    int currentContainerLogFileIndex = -1;\n    for (int i = listOfFiles.length - 1; i >= 0; i--) {\n      if (listOfFiles[i].listFiles().length == containerNum + 1) {\n        currentContainerLogFileIndex = i;\n        break;\n      }\n    }\n    Assert.assertTrue(currentContainerLogFileIndex != -1);\n    File[] containerFiles =\n        listOfFiles[currentContainerLogFileIndex].listFiles();\n\n    for (int i = 0; i < containerFiles.length; i++) {\n      for (File output : containerFiles[i].listFiles()) {\n        if (output.getName().trim().equalsIgnoreCase(\"stdout\")) {\n          BufferedReader br = null;\n          try {\n\n            String sCurrentLine;\n\n            br = new BufferedReader(new FileReader(output));\n            int numOfline = 0;\n            while ((sCurrentLine = br.readLine()) != null) {\n              Assert.assertEquals(\"The current is\" + sCurrentLine,\n                  expectedContent.get(numOfline), sCurrentLine.trim());\n              numOfline++;\n            }\n\n          } catch (IOException e) {\n            e.printStackTrace();\n          } finally {\n            try {\n              if (br != null)\n                br.close();\n            } catch (IOException ex) {\n              ex.printStackTrace();\n            }\n          }\n        }\n      }\n    }\n  }","id":13473,"modified_method":"private int verifyContainerLog(int containerNum,\n      List<String> expectedContent, boolean count, String expectedWord) {\n    File logFolder =\n        new File(yarnCluster.getNodeManager(0).getConfig()\n            .get(YarnConfiguration.NM_LOG_DIRS,\n                YarnConfiguration.DEFAULT_NM_LOG_DIRS));\n\n    File[] listOfFiles = logFolder.listFiles();\n    int currentContainerLogFileIndex = -1;\n    for (int i = listOfFiles.length - 1; i >= 0; i--) {\n      if (listOfFiles[i].listFiles().length == containerNum + 1) {\n        currentContainerLogFileIndex = i;\n        break;\n      }\n    }\n    Assert.assertTrue(currentContainerLogFileIndex != -1);\n    File[] containerFiles =\n        listOfFiles[currentContainerLogFileIndex].listFiles();\n\n    int numOfWords = 0;\n    for (int i = 0; i < containerFiles.length; i++) {\n      for (File output : containerFiles[i].listFiles()) {\n        if (output.getName().trim().contains(\"stdout\")) {\n          BufferedReader br = null;\n          try {\n\n            String sCurrentLine;\n\n            br = new BufferedReader(new FileReader(output));\n            int numOfline = 0;\n            while ((sCurrentLine = br.readLine()) != null) {\n              if (count) {\n                if (sCurrentLine.contains(expectedWord)) {\n                  numOfWords++;\n                }\n              } else if (output.getName().trim().equals(\"stdout\")){\n                Assert.assertEquals(\"The current is\" + sCurrentLine,\n                    expectedContent.get(numOfline), sCurrentLine.trim());\n                numOfline++;\n              }\n            }\n\n          } catch (IOException e) {\n            e.printStackTrace();\n          } finally {\n            try {\n              if (br != null)\n                br.close();\n            } catch (IOException ex) {\n              ex.printStackTrace();\n            }\n          }\n        }\n      }\n    }\n    return numOfWords;\n  }","commit_id":"a802ef4a5f2e71eed2cbdc053258ae2f66af4755","url":"https://github.com/apache/hadoop"},{"original_method":"@Test(timeout=90000)\n  public void testDSShellWithCommands() throws Exception {\n    String[] args = {\n        \"--jar\",\n        APPMASTER_JAR,\n        \"--num_containers\",\n        \"2\",\n        \"--shell_command\",\n        \"echo HADOOP YARN MAPREDUCE|wc -w\",\n        \"--master_memory\",\n        \"512\",\n        \"--master_vcores\",\n        \"2\",\n        \"--container_memory\",\n        \"128\",\n        \"--container_vcores\",\n        \"1\"\n    };\n\n    LOG.info(\"Initializing DS Client\");\n    final Client client =\n        new Client(new Configuration(yarnCluster.getConfig()));\n    boolean initSuccess = client.init(args);\n    Assert.assertTrue(initSuccess);\n    LOG.info(\"Running DS Client\");\n    boolean result = client.run();\n    LOG.info(\"Client run completed. Result=\" + result);\n    List<String> expectedContent = new ArrayList<String>();\n    expectedContent.add(\"3\");\n    verifyContainerLog(2, expectedContent);\n  }","id":13474,"modified_method":"@Test(timeout=90000)\n  public void testDSShellWithCommands() throws Exception {\n\n    String[] args = {\n        \"--jar\",\n        APPMASTER_JAR,\n        \"--num_containers\",\n        \"2\",\n        \"--shell_command\",\n        \"\\\"echo output_ignored;echo output_expected\\\"\",\n        \"--master_memory\",\n        \"512\",\n        \"--master_vcores\",\n        \"2\",\n        \"--container_memory\",\n        \"128\",\n        \"--container_vcores\",\n        \"1\"\n    };\n\n    LOG.info(\"Initializing DS Client\");\n    final Client client =\n        new Client(new Configuration(yarnCluster.getConfig()));\n    boolean initSuccess = client.init(args);\n    Assert.assertTrue(initSuccess);\n    LOG.info(\"Running DS Client\");\n    boolean result = client.run();\n    LOG.info(\"Client run completed. Result=\" + result);\n    List<String> expectedContent = new ArrayList<String>();\n    expectedContent.add(\"output_expected\");\n    verifyContainerLog(2, expectedContent, false, \"\");\n  }","commit_id":"a802ef4a5f2e71eed2cbdc053258ae2f66af4755","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * Parse command line options\n   *\n   * @param args Command line args\n   * @return Whether init successful and run should be invoked\n   * @throws ParseException\n   * @throws IOException\n   */\n  public boolean init(String[] args) throws ParseException, IOException {\n\n    Options opts = new Options();\n    opts.addOption(\"app_attempt_id\", true,\n        \"App Attempt ID. Not to be used unless for testing purposes\");\n    opts.addOption(\"shell_script\", true,\n        \"Location of the shell script to be executed\");\n    opts.addOption(\"shell_args\", true, \"Command line args for the shell script\");\n    opts.addOption(\"shell_env\", true,\n        \"Environment for shell script. Specified as env_key=env_val pairs\");\n    opts.addOption(\"container_memory\", true,\n        \"Amount of memory in MB to be requested to run the shell command\");\n    opts.addOption(\"container_vcores\", true,\n        \"Amount of virtual cores to be requested to run the shell command\");\n    opts.addOption(\"num_containers\", true,\n        \"No. of containers on which the shell command needs to be executed\");\n    opts.addOption(\"priority\", true, \"Application Priority. Default 0\");\n    opts.addOption(\"debug\", false, \"Dump out debug information\");\n\n    opts.addOption(\"help\", false, \"Print usage\");\n    CommandLine cliParser = new GnuParser().parse(opts, args);\n\n    if (args.length == 0) {\n      printUsage(opts);\n      throw new IllegalArgumentException(\n          \"No args specified for application master to initialize\");\n    }\n\n    if (cliParser.hasOption(\"help\")) {\n      printUsage(opts);\n      return false;\n    }\n\n    if (cliParser.hasOption(\"debug\")) {\n      dumpOutDebugInfo();\n    }\n\n    Map<String, String> envs = System.getenv();\n\n    if (!envs.containsKey(Environment.CONTAINER_ID.name())) {\n      if (cliParser.hasOption(\"app_attempt_id\")) {\n        String appIdStr = cliParser.getOptionValue(\"app_attempt_id\", \"\");\n        appAttemptID = ConverterUtils.toApplicationAttemptId(appIdStr);\n      } else {\n        throw new IllegalArgumentException(\n            \"Application Attempt Id not set in the environment\");\n      }\n    } else {\n      ContainerId containerId = ConverterUtils.toContainerId(envs\n          .get(Environment.CONTAINER_ID.name()));\n      appAttemptID = containerId.getApplicationAttemptId();\n    }\n\n    if (!envs.containsKey(ApplicationConstants.APP_SUBMIT_TIME_ENV)) {\n      throw new RuntimeException(ApplicationConstants.APP_SUBMIT_TIME_ENV\n          + \" not set in the environment\");\n    }\n    if (!envs.containsKey(Environment.NM_HOST.name())) {\n      throw new RuntimeException(Environment.NM_HOST.name()\n          + \" not set in the environment\");\n    }\n    if (!envs.containsKey(Environment.NM_HTTP_PORT.name())) {\n      throw new RuntimeException(Environment.NM_HTTP_PORT\n          + \" not set in the environment\");\n    }\n    if (!envs.containsKey(Environment.NM_PORT.name())) {\n      throw new RuntimeException(Environment.NM_PORT.name()\n          + \" not set in the environment\");\n    }\n\n    LOG.info(\"Application master for app\" + \", appId=\"\n        + appAttemptID.getApplicationId().getId() + \", clustertimestamp=\"\n        + appAttemptID.getApplicationId().getClusterTimestamp()\n        + \", attemptId=\" + appAttemptID.getAttemptId());\n\n    File shellCommandFile = new File(shellCommandPath);\n    if (!shellCommandFile.exists()) {\n      throw new IllegalArgumentException(\n          \"No shell command specified to be executed by application master\");\n    }\n    FileInputStream fs = null;\n    DataInputStream ds = null;\n    try {\n      ds = new DataInputStream(new FileInputStream(shellCommandFile));\n      shellCommand = ds.readUTF();\n    } finally {\n      org.apache.commons.io.IOUtils.closeQuietly(ds);\n      org.apache.commons.io.IOUtils.closeQuietly(fs);\n    }\n\n    if (cliParser.hasOption(\"shell_args\")) {\n      shellArgs = cliParser.getOptionValue(\"shell_args\");\n    }\n    if (cliParser.hasOption(\"shell_env\")) {\n      String shellEnvs[] = cliParser.getOptionValues(\"shell_env\");\n      for (String env : shellEnvs) {\n        env = env.trim();\n        int index = env.indexOf('=');\n        if (index == -1) {\n          shellEnv.put(env, \"\");\n          continue;\n        }\n        String key = env.substring(0, index);\n        String val = \"\";\n        if (index < (env.length() - 1)) {\n          val = env.substring(index + 1);\n        }\n        shellEnv.put(key, val);\n      }\n    }\n\n    if (envs.containsKey(DSConstants.DISTRIBUTEDSHELLSCRIPTLOCATION)) {\n      shellScriptPath = envs.get(DSConstants.DISTRIBUTEDSHELLSCRIPTLOCATION);\n\n      if (envs.containsKey(DSConstants.DISTRIBUTEDSHELLSCRIPTTIMESTAMP)) {\n        shellScriptPathTimestamp = Long.valueOf(envs\n            .get(DSConstants.DISTRIBUTEDSHELLSCRIPTTIMESTAMP));\n      }\n      if (envs.containsKey(DSConstants.DISTRIBUTEDSHELLSCRIPTLEN)) {\n        shellScriptPathLen = Long.valueOf(envs\n            .get(DSConstants.DISTRIBUTEDSHELLSCRIPTLEN));\n      }\n\n      if (!shellScriptPath.isEmpty()\n          && (shellScriptPathTimestamp <= 0 || shellScriptPathLen <= 0)) {\n        LOG.error(\"Illegal values in env for shell script path\" + \", path=\"\n            + shellScriptPath + \", len=\" + shellScriptPathLen + \", timestamp=\"\n            + shellScriptPathTimestamp);\n        throw new IllegalArgumentException(\n            \"Illegal values in env for shell script path\");\n      }\n    }\n\n    containerMemory = Integer.parseInt(cliParser.getOptionValue(\n        \"container_memory\", \"10\"));\n    containerVirtualCores = Integer.parseInt(cliParser.getOptionValue(\n        \"container_vcores\", \"1\"));\n    numTotalContainers = Integer.parseInt(cliParser.getOptionValue(\n        \"num_containers\", \"1\"));\n    if (numTotalContainers == 0) {\n      throw new IllegalArgumentException(\n          \"Cannot run distributed shell with no containers\");\n    }\n    requestPriority = Integer.parseInt(cliParser\n        .getOptionValue(\"priority\", \"0\"));\n\n    return true;\n  }","id":13475,"modified_method":"/**\n   * Parse command line options\n   *\n   * @param args Command line args\n   * @return Whether init successful and run should be invoked\n   * @throws ParseException\n   * @throws IOException\n   */\n  public boolean init(String[] args) throws ParseException, IOException {\n\n    Options opts = new Options();\n    opts.addOption(\"app_attempt_id\", true,\n        \"App Attempt ID. Not to be used unless for testing purposes\");\n    opts.addOption(\"shell_script\", true,\n        \"Location of the shell script to be executed\");\n    opts.addOption(\"shell_args\", true, \"Command line args for the shell script\");\n    opts.addOption(\"shell_env\", true,\n        \"Environment for shell script. Specified as env_key=env_val pairs\");\n    opts.addOption(\"container_memory\", true,\n        \"Amount of memory in MB to be requested to run the shell command\");\n    opts.addOption(\"container_vcores\", true,\n        \"Amount of virtual cores to be requested to run the shell command\");\n    opts.addOption(\"num_containers\", true,\n        \"No. of containers on which the shell command needs to be executed\");\n    opts.addOption(\"priority\", true, \"Application Priority. Default 0\");\n    opts.addOption(\"debug\", false, \"Dump out debug information\");\n\n    opts.addOption(\"help\", false, \"Print usage\");\n    CommandLine cliParser = new GnuParser().parse(opts, args);\n\n    if (args.length == 0) {\n      printUsage(opts);\n      throw new IllegalArgumentException(\n          \"No args specified for application master to initialize\");\n    }\n\n    //Check whether customer log4j.properties file exists\n    File customerLog4jFile = new File(log4jPath);\n    if (customerLog4jFile.exists()) {\n      try {\n        Log4jPropertyHelper.updateLog4jConfiguration(ApplicationMaster.class, log4jPath);\n      } catch (Exception e) {\n        LOG.warn(\"Can not set up custom log4j properties. \" + e);\n      }\n    }\n\n    if (cliParser.hasOption(\"help\")) {\n      printUsage(opts);\n      return false;\n    }\n\n    if (cliParser.hasOption(\"debug\")) {\n      dumpOutDebugInfo();\n    }\n\n    Map<String, String> envs = System.getenv();\n\n    if (!envs.containsKey(Environment.CONTAINER_ID.name())) {\n      if (cliParser.hasOption(\"app_attempt_id\")) {\n        String appIdStr = cliParser.getOptionValue(\"app_attempt_id\", \"\");\n        appAttemptID = ConverterUtils.toApplicationAttemptId(appIdStr);\n      } else {\n        throw new IllegalArgumentException(\n            \"Application Attempt Id not set in the environment\");\n      }\n    } else {\n      ContainerId containerId = ConverterUtils.toContainerId(envs\n          .get(Environment.CONTAINER_ID.name()));\n      appAttemptID = containerId.getApplicationAttemptId();\n    }\n\n    if (!envs.containsKey(ApplicationConstants.APP_SUBMIT_TIME_ENV)) {\n      throw new RuntimeException(ApplicationConstants.APP_SUBMIT_TIME_ENV\n          + \" not set in the environment\");\n    }\n    if (!envs.containsKey(Environment.NM_HOST.name())) {\n      throw new RuntimeException(Environment.NM_HOST.name()\n          + \" not set in the environment\");\n    }\n    if (!envs.containsKey(Environment.NM_HTTP_PORT.name())) {\n      throw new RuntimeException(Environment.NM_HTTP_PORT\n          + \" not set in the environment\");\n    }\n    if (!envs.containsKey(Environment.NM_PORT.name())) {\n      throw new RuntimeException(Environment.NM_PORT.name()\n          + \" not set in the environment\");\n    }\n\n    LOG.info(\"Application master for app\" + \", appId=\"\n        + appAttemptID.getApplicationId().getId() + \", clustertimestamp=\"\n        + appAttemptID.getApplicationId().getClusterTimestamp()\n        + \", attemptId=\" + appAttemptID.getAttemptId());\n\n    File shellCommandFile = new File(shellCommandPath);\n    if (!shellCommandFile.exists()) {\n      throw new IllegalArgumentException(\n          \"No shell command specified to be executed by application master\");\n    }\n    FileInputStream fs = null;\n    DataInputStream ds = null;\n    try {\n      ds = new DataInputStream(new FileInputStream(shellCommandFile));\n      shellCommand = ds.readUTF();\n    } finally {\n      org.apache.commons.io.IOUtils.closeQuietly(ds);\n      org.apache.commons.io.IOUtils.closeQuietly(fs);\n    }\n\n    if (cliParser.hasOption(\"shell_args\")) {\n      shellArgs = cliParser.getOptionValue(\"shell_args\");\n    }\n    if (cliParser.hasOption(\"shell_env\")) {\n      String shellEnvs[] = cliParser.getOptionValues(\"shell_env\");\n      for (String env : shellEnvs) {\n        env = env.trim();\n        int index = env.indexOf('=');\n        if (index == -1) {\n          shellEnv.put(env, \"\");\n          continue;\n        }\n        String key = env.substring(0, index);\n        String val = \"\";\n        if (index < (env.length() - 1)) {\n          val = env.substring(index + 1);\n        }\n        shellEnv.put(key, val);\n      }\n    }\n\n    if (envs.containsKey(DSConstants.DISTRIBUTEDSHELLSCRIPTLOCATION)) {\n      shellScriptPath = envs.get(DSConstants.DISTRIBUTEDSHELLSCRIPTLOCATION);\n\n      if (envs.containsKey(DSConstants.DISTRIBUTEDSHELLSCRIPTTIMESTAMP)) {\n        shellScriptPathTimestamp = Long.valueOf(envs\n            .get(DSConstants.DISTRIBUTEDSHELLSCRIPTTIMESTAMP));\n      }\n      if (envs.containsKey(DSConstants.DISTRIBUTEDSHELLSCRIPTLEN)) {\n        shellScriptPathLen = Long.valueOf(envs\n            .get(DSConstants.DISTRIBUTEDSHELLSCRIPTLEN));\n      }\n\n      if (!shellScriptPath.isEmpty()\n          && (shellScriptPathTimestamp <= 0 || shellScriptPathLen <= 0)) {\n        LOG.error(\"Illegal values in env for shell script path\" + \", path=\"\n            + shellScriptPath + \", len=\" + shellScriptPathLen + \", timestamp=\"\n            + shellScriptPathTimestamp);\n        throw new IllegalArgumentException(\n            \"Illegal values in env for shell script path\");\n      }\n    }\n\n    containerMemory = Integer.parseInt(cliParser.getOptionValue(\n        \"container_memory\", \"10\"));\n    containerVirtualCores = Integer.parseInt(cliParser.getOptionValue(\n        \"container_vcores\", \"1\"));\n    numTotalContainers = Integer.parseInt(cliParser.getOptionValue(\n        \"num_containers\", \"1\"));\n    if (numTotalContainers == 0) {\n      throw new IllegalArgumentException(\n          \"Cannot run distributed shell with no containers\");\n    }\n    requestPriority = Integer.parseInt(cliParser\n        .getOptionValue(\"priority\", \"0\"));\n\n    return true;\n  }","commit_id":"33a8234040959ecd0d0202162e1b18c990effabe","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * Parse command line options\n   * @param args Parsed command line options \n   * @return Whether the init was successful to run the client\n   * @throws ParseException\n   */\n  public boolean init(String[] args) throws ParseException {\n\n    CommandLine cliParser = new GnuParser().parse(opts, args);\n\n    if (args.length == 0) {\n      throw new IllegalArgumentException(\"No args specified for client to initialize\");\n    }\t\t\n\n    if (cliParser.hasOption(\"help\")) {\n      printUsage();\n      return false;\n    }\n\n    if (cliParser.hasOption(\"debug\")) {\n      debugFlag = true;\n\n    }\n\n    appName = cliParser.getOptionValue(\"appname\", \"DistributedShell\");\n    amPriority = Integer.parseInt(cliParser.getOptionValue(\"priority\", \"0\"));\n    amQueue = cliParser.getOptionValue(\"queue\", \"default\");\n    amMemory = Integer.parseInt(cliParser.getOptionValue(\"master_memory\", \"10\"));\t\t\n    amVCores = Integer.parseInt(cliParser.getOptionValue(\"master_vcores\", \"1\"));\n    \n    if (amMemory < 0) {\n      throw new IllegalArgumentException(\"Invalid memory specified for application master, exiting.\"\n          + \" Specified memory=\" + amMemory);\n    }\n    if (amVCores < 0) {\n      throw new IllegalArgumentException(\"Invalid virtual cores specified for application master, exiting.\"\n          + \" Specified virtual cores=\" + amVCores);\n    }\n\n    if (!cliParser.hasOption(\"jar\")) {\n      throw new IllegalArgumentException(\"No jar file specified for application master\");\n    }\t\t\n\n    appMasterJar = cliParser.getOptionValue(\"jar\");\n\n    if (!cliParser.hasOption(\"shell_command\")) {\n      throw new IllegalArgumentException(\"No shell command specified to be executed by application master\");\n    }\n    shellCommand = cliParser.getOptionValue(\"shell_command\");\n\n    if (cliParser.hasOption(\"shell_script\")) {\n      shellScriptPath = cliParser.getOptionValue(\"shell_script\");\n    }\n    if (cliParser.hasOption(\"shell_args\")) {\n      shellArgs = cliParser.getOptionValue(\"shell_args\");\n    }\n    if (cliParser.hasOption(\"shell_env\")) { \n      String envs[] = cliParser.getOptionValues(\"shell_env\");\n      for (String env : envs) {\n        env = env.trim();\n        int index = env.indexOf('=');\n        if (index == -1) {\n          shellEnv.put(env, \"\");\n          continue;\n        }\n        String key = env.substring(0, index);\n        String val = \"\";\n        if (index < (env.length()-1)) {\n          val = env.substring(index+1);\n        }\n        shellEnv.put(key, val);\n      }\n    }\n    shellCmdPriority = Integer.parseInt(cliParser.getOptionValue(\"shell_cmd_priority\", \"0\"));\n\n    containerMemory = Integer.parseInt(cliParser.getOptionValue(\"container_memory\", \"10\"));\n    containerVirtualCores = Integer.parseInt(cliParser.getOptionValue(\"container_vcores\", \"1\"));\n    numContainers = Integer.parseInt(cliParser.getOptionValue(\"num_containers\", \"1\"));\n\n    if (containerMemory < 0 || containerVirtualCores < 0 || numContainers < 1) {\n      throw new IllegalArgumentException(\"Invalid no. of containers or container memory/vcores specified,\"\n          + \" exiting.\"\n          + \" Specified containerMemory=\" + containerMemory\n          + \", containerVirtualCores=\" + containerVirtualCores\n          + \", numContainer=\" + numContainers);\n    }\n\n    clientTimeout = Integer.parseInt(cliParser.getOptionValue(\"timeout\", \"600000\"));\n\n    log4jPropFile = cliParser.getOptionValue(\"log_properties\", \"\");\n\n    return true;\n  }","id":13476,"modified_method":"/**\n   * Parse command line options\n   * @param args Parsed command line options \n   * @return Whether the init was successful to run the client\n   * @throws ParseException\n   */\n  public boolean init(String[] args) throws ParseException {\n\n    CommandLine cliParser = new GnuParser().parse(opts, args);\n\n    if (args.length == 0) {\n      throw new IllegalArgumentException(\"No args specified for client to initialize\");\n    }\n\n    if (cliParser.hasOption(\"log_properties\")) {\n      String log4jPath = cliParser.getOptionValue(\"log_properties\");\n      try {\n        Log4jPropertyHelper.updateLog4jConfiguration(Client.class, log4jPath);\n      } catch (Exception e) {\n        LOG.warn(\"Can not set up custom log4j properties. \" + e);\n      }\n    }\n\n    if (cliParser.hasOption(\"help\")) {\n      printUsage();\n      return false;\n    }\n\n    if (cliParser.hasOption(\"debug\")) {\n      debugFlag = true;\n\n    }\n\n    appName = cliParser.getOptionValue(\"appname\", \"DistributedShell\");\n    amPriority = Integer.parseInt(cliParser.getOptionValue(\"priority\", \"0\"));\n    amQueue = cliParser.getOptionValue(\"queue\", \"default\");\n    amMemory = Integer.parseInt(cliParser.getOptionValue(\"master_memory\", \"10\"));\t\t\n    amVCores = Integer.parseInt(cliParser.getOptionValue(\"master_vcores\", \"1\"));\n    \n    if (amMemory < 0) {\n      throw new IllegalArgumentException(\"Invalid memory specified for application master, exiting.\"\n          + \" Specified memory=\" + amMemory);\n    }\n    if (amVCores < 0) {\n      throw new IllegalArgumentException(\"Invalid virtual cores specified for application master, exiting.\"\n          + \" Specified virtual cores=\" + amVCores);\n    }\n\n    if (!cliParser.hasOption(\"jar\")) {\n      throw new IllegalArgumentException(\"No jar file specified for application master\");\n    }\t\t\n\n    appMasterJar = cliParser.getOptionValue(\"jar\");\n\n    if (!cliParser.hasOption(\"shell_command\")) {\n      throw new IllegalArgumentException(\"No shell command specified to be executed by application master\");\n    }\n    shellCommand = cliParser.getOptionValue(\"shell_command\");\n\n    if (cliParser.hasOption(\"shell_script\")) {\n      shellScriptPath = cliParser.getOptionValue(\"shell_script\");\n    }\n    if (cliParser.hasOption(\"shell_args\")) {\n      shellArgs = cliParser.getOptionValue(\"shell_args\");\n    }\n    if (cliParser.hasOption(\"shell_env\")) { \n      String envs[] = cliParser.getOptionValues(\"shell_env\");\n      for (String env : envs) {\n        env = env.trim();\n        int index = env.indexOf('=');\n        if (index == -1) {\n          shellEnv.put(env, \"\");\n          continue;\n        }\n        String key = env.substring(0, index);\n        String val = \"\";\n        if (index < (env.length()-1)) {\n          val = env.substring(index+1);\n        }\n        shellEnv.put(key, val);\n      }\n    }\n    shellCmdPriority = Integer.parseInt(cliParser.getOptionValue(\"shell_cmd_priority\", \"0\"));\n\n    containerMemory = Integer.parseInt(cliParser.getOptionValue(\"container_memory\", \"10\"));\n    containerVirtualCores = Integer.parseInt(cliParser.getOptionValue(\"container_vcores\", \"1\"));\n    numContainers = Integer.parseInt(cliParser.getOptionValue(\"num_containers\", \"1\"));\n\n    if (containerMemory < 0 || containerVirtualCores < 0 || numContainers < 1) {\n      throw new IllegalArgumentException(\"Invalid no. of containers or container memory/vcores specified,\"\n          + \" exiting.\"\n          + \" Specified containerMemory=\" + containerMemory\n          + \", containerVirtualCores=\" + containerVirtualCores\n          + \", numContainer=\" + numContainers);\n    }\n\n    clientTimeout = Integer.parseInt(cliParser.getOptionValue(\"timeout\", \"600000\"));\n\n    log4jPropFile = cliParser.getOptionValue(\"log_properties\", \"\");\n\n    return true;\n  }","commit_id":"33a8234040959ecd0d0202162e1b18c990effabe","url":"https://github.com/apache/hadoop"},{"original_method":"/**\n   * Main run function for the client\n   * @return true if application completed successfully\n   * @throws IOException\n   * @throws YarnException\n   */\n  public boolean run() throws IOException, YarnException {\n\n    LOG.info(\"Running Client\");\n    yarnClient.start();\n\n    YarnClusterMetrics clusterMetrics = yarnClient.getYarnClusterMetrics();\n    LOG.info(\"Got Cluster metric info from ASM\" \n        + \", numNodeManagers=\" + clusterMetrics.getNumNodeManagers());\n\n    List<NodeReport> clusterNodeReports = yarnClient.getNodeReports(\n        NodeState.RUNNING);\n    LOG.info(\"Got Cluster node info from ASM\");\n    for (NodeReport node : clusterNodeReports) {\n      LOG.info(\"Got node report from ASM for\"\n          + \", nodeId=\" + node.getNodeId() \n          + \", nodeAddress\" + node.getHttpAddress()\n          + \", nodeRackName\" + node.getRackName()\n          + \", nodeNumContainers\" + node.getNumContainers());\n    }\n\n    QueueInfo queueInfo = yarnClient.getQueueInfo(this.amQueue);\n    LOG.info(\"Queue info\"\n        + \", queueName=\" + queueInfo.getQueueName()\n        + \", queueCurrentCapacity=\" + queueInfo.getCurrentCapacity()\n        + \", queueMaxCapacity=\" + queueInfo.getMaximumCapacity()\n        + \", queueApplicationCount=\" + queueInfo.getApplications().size()\n        + \", queueChildQueueCount=\" + queueInfo.getChildQueues().size());\t\t\n\n    List<QueueUserACLInfo> listAclInfo = yarnClient.getQueueAclsInfo();\n    for (QueueUserACLInfo aclInfo : listAclInfo) {\n      for (QueueACL userAcl : aclInfo.getUserAcls()) {\n        LOG.info(\"User ACL Info for Queue\"\n            + \", queueName=\" + aclInfo.getQueueName()\t\t\t\n            + \", userAcl=\" + userAcl.name());\n      }\n    }\t\t\n\n    // Get a new application id\n    YarnClientApplication app = yarnClient.createApplication();\n    GetNewApplicationResponse appResponse = app.getNewApplicationResponse();\n    // TODO get min/max resource capabilities from RM and change memory ask if needed\n    // If we do not have min/max, we may not be able to correctly request \n    // the required resources from the RM for the app master\n    // Memory ask has to be a multiple of min and less than max. \n    // Dump out information about cluster capability as seen by the resource manager\n    int maxMem = appResponse.getMaximumResourceCapability().getMemory();\n    LOG.info(\"Max mem capabililty of resources in this cluster \" + maxMem);\n\n    // A resource ask cannot exceed the max. \n    if (amMemory > maxMem) {\n      LOG.info(\"AM memory specified above max threshold of cluster. Using max value.\"\n          + \", specified=\" + amMemory\n          + \", max=\" + maxMem);\n      amMemory = maxMem;\n    }\t\t\t\t\n\n    int maxVCores = appResponse.getMaximumResourceCapability().getVirtualCores();\n    LOG.info(\"Max virtual cores capabililty of resources in this cluster \" + maxVCores);\n    \n    if (amVCores > maxVCores) {\n      LOG.info(\"AM virtual cores specified above max threshold of cluster. \" \n          + \"Using max value.\" + \", specified=\" + amVCores \n          + \", max=\" + maxVCores);\n      amVCores = maxVCores;\n    }\n    \n    // set the application name\n    ApplicationSubmissionContext appContext = app.getApplicationSubmissionContext();\n    ApplicationId appId = appContext.getApplicationId();\n    appContext.setApplicationName(appName);\n\n    // Set up the container launch context for the application master\n    ContainerLaunchContext amContainer = Records.newRecord(ContainerLaunchContext.class);\n\n    // set local resources for the application master\n    // local files or archives as needed\n    // In this scenario, the jar file for the application master is part of the local resources\t\t\t\n    Map<String, LocalResource> localResources = new HashMap<String, LocalResource>();\n\n    LOG.info(\"Copy App Master jar from local filesystem and add to local environment\");\n    // Copy the application master jar to the filesystem \n    // Create a local resource to point to the destination jar path \n    FileSystem fs = FileSystem.get(conf);\n    Path src = new Path(appMasterJar);\n    String pathSuffix = appName + \"/\" + appId.getId() + \"/AppMaster.jar\";\t    \n    Path dst = new Path(fs.getHomeDirectory(), pathSuffix);\n    fs.copyFromLocalFile(false, true, src, dst);\n    FileStatus destStatus = fs.getFileStatus(dst);\n    LocalResource amJarRsrc = Records.newRecord(LocalResource.class);\n\n    // Set the type of resource - file or archive\n    // archives are untarred at destination\n    // we don't need the jar file to be untarred for now\n    amJarRsrc.setType(LocalResourceType.FILE);\n    // Set visibility of the resource \n    // Setting to most private option\n    amJarRsrc.setVisibility(LocalResourceVisibility.APPLICATION);\t   \n    // Set the resource to be copied over\n    amJarRsrc.setResource(ConverterUtils.getYarnUrlFromPath(dst)); \n    // Set timestamp and length of file so that the framework \n    // can do basic sanity checks for the local resource \n    // after it has been copied over to ensure it is the same \n    // resource the client intended to use with the application\n    amJarRsrc.setTimestamp(destStatus.getModificationTime());\n    amJarRsrc.setSize(destStatus.getLen());\n    localResources.put(\"AppMaster.jar\",  amJarRsrc);\n\n    // Set the log4j properties if needed \n    if (!log4jPropFile.isEmpty()) {\n      Path log4jSrc = new Path(log4jPropFile);\n      Path log4jDst = new Path(fs.getHomeDirectory(), \"log4j.props\");\n      fs.copyFromLocalFile(false, true, log4jSrc, log4jDst);\n      FileStatus log4jFileStatus = fs.getFileStatus(log4jDst);\n      LocalResource log4jRsrc = Records.newRecord(LocalResource.class);\n      log4jRsrc.setType(LocalResourceType.FILE);\n      log4jRsrc.setVisibility(LocalResourceVisibility.APPLICATION);\t   \n      log4jRsrc.setResource(ConverterUtils.getYarnUrlFromURI(log4jDst.toUri()));\n      log4jRsrc.setTimestamp(log4jFileStatus.getModificationTime());\n      log4jRsrc.setSize(log4jFileStatus.getLen());\n      localResources.put(\"log4j.properties\", log4jRsrc);\n    }\t\t\t\n\n    // The shell script has to be made available on the final container(s)\n    // where it will be executed. \n    // To do this, we need to first copy into the filesystem that is visible \n    // to the yarn framework. \n    // We do not need to set this as a local resource for the application \n    // master as the application master does not need it. \t\t\n    String hdfsShellScriptLocation = \"\"; \n    long hdfsShellScriptLen = 0;\n    long hdfsShellScriptTimestamp = 0;\n    if (!shellScriptPath.isEmpty()) {\n      Path shellSrc = new Path(shellScriptPath);\n      String shellPathSuffix = appName + \"/\" + appId.getId() + \"/ExecShellScript.sh\";\n      Path shellDst = new Path(fs.getHomeDirectory(), shellPathSuffix);\n      fs.copyFromLocalFile(false, true, shellSrc, shellDst);\n      hdfsShellScriptLocation = shellDst.toUri().toString(); \n      FileStatus shellFileStatus = fs.getFileStatus(shellDst);\n      hdfsShellScriptLen = shellFileStatus.getLen();\n      hdfsShellScriptTimestamp = shellFileStatus.getModificationTime();\n    }\n\n    if (!shellCommand.isEmpty()) {\n      String shellCommandSuffix =\n          appName + \"/\" + appId.getId() + \"/\" + shellCommandPath;\n      Path shellCommandDst =\n          new Path(fs.getHomeDirectory(), shellCommandSuffix);\n      FSDataOutputStream ostream = null;\n      try {\n        ostream = FileSystem\n            .create(fs, shellCommandDst, new FsPermission((short) 0710));\n        ostream.writeUTF(shellCommand);\n      } finally {\n        IOUtils.closeQuietly(ostream);\n      }\n      FileStatus scFileStatus = fs.getFileStatus(shellCommandDst);\n      LocalResource scRsrc =\n          LocalResource.newInstance(\n              ConverterUtils.getYarnUrlFromURI(shellCommandDst.toUri()),\n              LocalResourceType.FILE, LocalResourceVisibility.APPLICATION,\n              scFileStatus.getLen(), scFileStatus.getModificationTime());\n      localResources.put(shellCommandPath, scRsrc);\n    }\n    // Set local resource info into app master container launch context\n    amContainer.setLocalResources(localResources);\n\n    // Set the necessary security tokens as needed\n    //amContainer.setContainerTokens(containerToken);\n\n    // Set the env variables to be setup in the env where the application master will be run\n    LOG.info(\"Set the environment for the application master\");\n    Map<String, String> env = new HashMap<String, String>();\n\n    // put location of shell script into env\n    // using the env info, the application master will create the correct local resource for the \n    // eventual containers that will be launched to execute the shell scripts\n    env.put(DSConstants.DISTRIBUTEDSHELLSCRIPTLOCATION, hdfsShellScriptLocation);\n    env.put(DSConstants.DISTRIBUTEDSHELLSCRIPTTIMESTAMP, Long.toString(hdfsShellScriptTimestamp));\n    env.put(DSConstants.DISTRIBUTEDSHELLSCRIPTLEN, Long.toString(hdfsShellScriptLen));\n\n    // Add AppMaster.jar location to classpath \t\t\n    // At some point we should not be required to add \n    // the hadoop specific classpaths to the env. \n    // It should be provided out of the box. \n    // For now setting all required classpaths including\n    // the classpath to \".\" for the application jar\n    StringBuilder classPathEnv = new StringBuilder(Environment.CLASSPATH.$())\n      .append(File.pathSeparatorChar).append(\"./*\");\n    for (String c : conf.getStrings(\n        YarnConfiguration.YARN_APPLICATION_CLASSPATH,\n        YarnConfiguration.DEFAULT_YARN_APPLICATION_CLASSPATH)) {\n      classPathEnv.append(File.pathSeparatorChar);\n      classPathEnv.append(c.trim());\n    }\n    classPathEnv.append(File.pathSeparatorChar).append(\"./log4j.properties\");\n\n    // add the runtime classpath needed for tests to work\n    if (conf.getBoolean(YarnConfiguration.IS_MINI_YARN_CLUSTER, false)) {\n      classPathEnv.append(':');\n      classPathEnv.append(System.getProperty(\"java.class.path\"));\n    }\n\n    env.put(\"CLASSPATH\", classPathEnv.toString());\n\n    amContainer.setEnvironment(env);\n\n    // Set the necessary command to execute the application master \n    Vector<CharSequence> vargs = new Vector<CharSequence>(30);\n\n    // Set java executable command \n    LOG.info(\"Setting up app master command\");\n    vargs.add(Environment.JAVA_HOME.$() + \"/bin/java\");\n    // Set Xmx based on am memory size\n    vargs.add(\"-Xmx\" + amMemory + \"m\");\n    // Set class name \n    vargs.add(appMasterMainClass);\n    // Set params for Application Master\n    vargs.add(\"--container_memory \" + String.valueOf(containerMemory));\n    vargs.add(\"--container_vcores \" + String.valueOf(containerVirtualCores));\n    vargs.add(\"--num_containers \" + String.valueOf(numContainers));\n    vargs.add(\"--priority \" + String.valueOf(shellCmdPriority));\n\n    if (!shellArgs.isEmpty()) {\n      vargs.add(\"--shell_args \" + shellArgs + \"\");\n    }\n    for (Map.Entry<String, String> entry : shellEnv.entrySet()) {\n      vargs.add(\"--shell_env \" + entry.getKey() + \"=\" + entry.getValue());\n    }\t\t\t\n    if (debugFlag) {\n      vargs.add(\"--debug\");\n    }\n\n    vargs.add(\"1>\" + ApplicationConstants.LOG_DIR_EXPANSION_VAR + \"/AppMaster.stdout\");\n    vargs.add(\"2>\" + ApplicationConstants.LOG_DIR_EXPANSION_VAR + \"/AppMaster.stderr\");\n\n    // Get final commmand\n    StringBuilder command = new StringBuilder();\n    for (CharSequence str : vargs) {\n      command.append(str).append(\" \");\n    }\n\n    LOG.info(\"Completed setting up app master command \" + command.toString());\t   \n    List<String> commands = new ArrayList<String>();\n    commands.add(command.toString());\t\t\n    amContainer.setCommands(commands);\n\n    // Set up resource type requirements\n    // For now, both memory and vcores are supported, so we set memory and \n    // vcores requirements\n    Resource capability = Records.newRecord(Resource.class);\n    capability.setMemory(amMemory);\n    capability.setVirtualCores(amVCores);\n    appContext.setResource(capability);\n\n    // Service data is a binary blob that can be passed to the application\n    // Not needed in this scenario\n    // amContainer.setServiceData(serviceData);\n\n    // Setup security tokens\n    if (UserGroupInformation.isSecurityEnabled()) {\n      Credentials credentials = new Credentials();\n      String tokenRenewer = conf.get(YarnConfiguration.RM_PRINCIPAL);\n      if (tokenRenewer == null || tokenRenewer.length() == 0) {\n        throw new IOException(\n          \"Can't get Master Kerberos principal for the RM to use as renewer\");\n      }\n\n      // For now, only getting tokens for the default file-system.\n      final Token<?> tokens[] =\n          fs.addDelegationTokens(tokenRenewer, credentials);\n      if (tokens != null) {\n        for (Token<?> token : tokens) {\n          LOG.info(\"Got dt for \" + fs.getUri() + \"; \" + token);\n        }\n      }\n      DataOutputBuffer dob = new DataOutputBuffer();\n      credentials.writeTokenStorageToStream(dob);\n      ByteBuffer fsTokens = ByteBuffer.wrap(dob.getData(), 0, dob.getLength());\n      amContainer.setTokens(fsTokens);\n    }\n\n    appContext.setAMContainerSpec(amContainer);\n\n    // Set the priority for the application master\n    Priority pri = Records.newRecord(Priority.class);\n    // TODO - what is the range for priority? how to decide? \n    pri.setPriority(amPriority);\n    appContext.setPriority(pri);\n\n    // Set the queue to which this application is to be submitted in the RM\n    appContext.setQueue(amQueue);\n\n    // Submit the application to the applications manager\n    // SubmitApplicationResponse submitResp = applicationsManager.submitApplication(appRequest);\n    // Ignore the response as either a valid response object is returned on success \n    // or an exception thrown to denote some form of a failure\n    LOG.info(\"Submitting application to ASM\");\n\n    yarnClient.submitApplication(appContext);\n\n    // TODO\n    // Try submitting the same request again\n    // app submission failure?\n\n    // Monitor the application\n    return monitorApplication(appId);\n\n  }","id":13477,"modified_method":"/**\n   * Main run function for the client\n   * @return true if application completed successfully\n   * @throws IOException\n   * @throws YarnException\n   */\n  public boolean run() throws IOException, YarnException {\n\n    LOG.info(\"Running Client\");\n    yarnClient.start();\n\n    YarnClusterMetrics clusterMetrics = yarnClient.getYarnClusterMetrics();\n    LOG.info(\"Got Cluster metric info from ASM\" \n        + \", numNodeManagers=\" + clusterMetrics.getNumNodeManagers());\n\n    List<NodeReport> clusterNodeReports = yarnClient.getNodeReports(\n        NodeState.RUNNING);\n    LOG.info(\"Got Cluster node info from ASM\");\n    for (NodeReport node : clusterNodeReports) {\n      LOG.info(\"Got node report from ASM for\"\n          + \", nodeId=\" + node.getNodeId() \n          + \", nodeAddress\" + node.getHttpAddress()\n          + \", nodeRackName\" + node.getRackName()\n          + \", nodeNumContainers\" + node.getNumContainers());\n    }\n\n    QueueInfo queueInfo = yarnClient.getQueueInfo(this.amQueue);\n    LOG.info(\"Queue info\"\n        + \", queueName=\" + queueInfo.getQueueName()\n        + \", queueCurrentCapacity=\" + queueInfo.getCurrentCapacity()\n        + \", queueMaxCapacity=\" + queueInfo.getMaximumCapacity()\n        + \", queueApplicationCount=\" + queueInfo.getApplications().size()\n        + \", queueChildQueueCount=\" + queueInfo.getChildQueues().size());\t\t\n\n    List<QueueUserACLInfo> listAclInfo = yarnClient.getQueueAclsInfo();\n    for (QueueUserACLInfo aclInfo : listAclInfo) {\n      for (QueueACL userAcl : aclInfo.getUserAcls()) {\n        LOG.info(\"User ACL Info for Queue\"\n            + \", queueName=\" + aclInfo.getQueueName()\t\t\t\n            + \", userAcl=\" + userAcl.name());\n      }\n    }\t\t\n\n    // Get a new application id\n    YarnClientApplication app = yarnClient.createApplication();\n    GetNewApplicationResponse appResponse = app.getNewApplicationResponse();\n    // TODO get min/max resource capabilities from RM and change memory ask if needed\n    // If we do not have min/max, we may not be able to correctly request \n    // the required resources from the RM for the app master\n    // Memory ask has to be a multiple of min and less than max. \n    // Dump out information about cluster capability as seen by the resource manager\n    int maxMem = appResponse.getMaximumResourceCapability().getMemory();\n    LOG.info(\"Max mem capabililty of resources in this cluster \" + maxMem);\n\n    // A resource ask cannot exceed the max. \n    if (amMemory > maxMem) {\n      LOG.info(\"AM memory specified above max threshold of cluster. Using max value.\"\n          + \", specified=\" + amMemory\n          + \", max=\" + maxMem);\n      amMemory = maxMem;\n    }\t\t\t\t\n\n    int maxVCores = appResponse.getMaximumResourceCapability().getVirtualCores();\n    LOG.info(\"Max virtual cores capabililty of resources in this cluster \" + maxVCores);\n    \n    if (amVCores > maxVCores) {\n      LOG.info(\"AM virtual cores specified above max threshold of cluster. \" \n          + \"Using max value.\" + \", specified=\" + amVCores \n          + \", max=\" + maxVCores);\n      amVCores = maxVCores;\n    }\n    \n    // set the application name\n    ApplicationSubmissionContext appContext = app.getApplicationSubmissionContext();\n    ApplicationId appId = appContext.getApplicationId();\n    appContext.setApplicationName(appName);\n\n    // Set up the container launch context for the application master\n    ContainerLaunchContext amContainer = Records.newRecord(ContainerLaunchContext.class);\n\n    // set local resources for the application master\n    // local files or archives as needed\n    // In this scenario, the jar file for the application master is part of the local resources\t\t\t\n    Map<String, LocalResource> localResources = new HashMap<String, LocalResource>();\n\n    LOG.info(\"Copy App Master jar from local filesystem and add to local environment\");\n    // Copy the application master jar to the filesystem \n    // Create a local resource to point to the destination jar path \n    FileSystem fs = FileSystem.get(conf);\n    Path src = new Path(appMasterJar);\n    String pathSuffix = appName + \"/\" + appId.getId() + \"/AppMaster.jar\";\t    \n    Path dst = new Path(fs.getHomeDirectory(), pathSuffix);\n    fs.copyFromLocalFile(false, true, src, dst);\n    FileStatus destStatus = fs.getFileStatus(dst);\n    LocalResource amJarRsrc = Records.newRecord(LocalResource.class);\n\n    // Set the type of resource - file or archive\n    // archives are untarred at destination\n    // we don't need the jar file to be untarred for now\n    amJarRsrc.setType(LocalResourceType.FILE);\n    // Set visibility of the resource \n    // Setting to most private option\n    amJarRsrc.setVisibility(LocalResourceVisibility.APPLICATION);\t   \n    // Set the resource to be copied over\n    amJarRsrc.setResource(ConverterUtils.getYarnUrlFromPath(dst)); \n    // Set timestamp and length of file so that the framework \n    // can do basic sanity checks for the local resource \n    // after it has been copied over to ensure it is the same \n    // resource the client intended to use with the application\n    amJarRsrc.setTimestamp(destStatus.getModificationTime());\n    amJarRsrc.setSize(destStatus.getLen());\n    localResources.put(\"AppMaster.jar\",  amJarRsrc);\n\n    // Set the log4j properties if needed \n    if (!log4jPropFile.isEmpty()) {\n      Path log4jSrc = new Path(log4jPropFile);\n      String log4jPathSuffix = appName + \"/\" + appId.getId() + \"/\" + log4jPath;\n      Path log4jDst = new Path(fs.getHomeDirectory(), log4jPathSuffix);\n      fs.copyFromLocalFile(false, true, log4jSrc, log4jDst);\n      FileStatus log4jFileStatus = fs.getFileStatus(log4jDst);\n      LocalResource log4jRsrc =\n          LocalResource.newInstance(\n              ConverterUtils.getYarnUrlFromURI(log4jDst.toUri()),\n              LocalResourceType.FILE, LocalResourceVisibility.APPLICATION,\n              log4jFileStatus.getLen(), log4jFileStatus.getModificationTime());\n      localResources.put(log4jPath, log4jRsrc);\n    }\t\t\t\n\n    // The shell script has to be made available on the final container(s)\n    // where it will be executed. \n    // To do this, we need to first copy into the filesystem that is visible \n    // to the yarn framework. \n    // We do not need to set this as a local resource for the application \n    // master as the application master does not need it. \t\t\n    String hdfsShellScriptLocation = \"\"; \n    long hdfsShellScriptLen = 0;\n    long hdfsShellScriptTimestamp = 0;\n    if (!shellScriptPath.isEmpty()) {\n      Path shellSrc = new Path(shellScriptPath);\n      String shellPathSuffix = appName + \"/\" + appId.getId() + \"/ExecShellScript.sh\";\n      Path shellDst = new Path(fs.getHomeDirectory(), shellPathSuffix);\n      fs.copyFromLocalFile(false, true, shellSrc, shellDst);\n      hdfsShellScriptLocation = shellDst.toUri().toString(); \n      FileStatus shellFileStatus = fs.getFileStatus(shellDst);\n      hdfsShellScriptLen = shellFileStatus.getLen();\n      hdfsShellScriptTimestamp = shellFileStatus.getModificationTime();\n    }\n\n    if (!shellCommand.isEmpty()) {\n      String shellCommandSuffix =\n          appName + \"/\" + appId.getId() + \"/\" + shellCommandPath;\n      Path shellCommandDst =\n          new Path(fs.getHomeDirectory(), shellCommandSuffix);\n      FSDataOutputStream ostream = null;\n      try {\n        ostream = FileSystem\n            .create(fs, shellCommandDst, new FsPermission((short) 0710));\n        ostream.writeUTF(shellCommand);\n      } finally {\n        IOUtils.closeQuietly(ostream);\n      }\n      FileStatus scFileStatus = fs.getFileStatus(shellCommandDst);\n      LocalResource scRsrc =\n          LocalResource.newInstance(\n              ConverterUtils.getYarnUrlFromURI(shellCommandDst.toUri()),\n              LocalResourceType.FILE, LocalResourceVisibility.APPLICATION,\n              scFileStatus.getLen(), scFileStatus.getModificationTime());\n      localResources.put(shellCommandPath, scRsrc);\n    }\n    // Set local resource info into app master container launch context\n    amContainer.setLocalResources(localResources);\n\n    // Set the necessary security tokens as needed\n    //amContainer.setContainerTokens(containerToken);\n\n    // Set the env variables to be setup in the env where the application master will be run\n    LOG.info(\"Set the environment for the application master\");\n    Map<String, String> env = new HashMap<String, String>();\n\n    // put location of shell script into env\n    // using the env info, the application master will create the correct local resource for the \n    // eventual containers that will be launched to execute the shell scripts\n    env.put(DSConstants.DISTRIBUTEDSHELLSCRIPTLOCATION, hdfsShellScriptLocation);\n    env.put(DSConstants.DISTRIBUTEDSHELLSCRIPTTIMESTAMP, Long.toString(hdfsShellScriptTimestamp));\n    env.put(DSConstants.DISTRIBUTEDSHELLSCRIPTLEN, Long.toString(hdfsShellScriptLen));\n\n    // Add AppMaster.jar location to classpath \t\t\n    // At some point we should not be required to add \n    // the hadoop specific classpaths to the env. \n    // It should be provided out of the box. \n    // For now setting all required classpaths including\n    // the classpath to \".\" for the application jar\n    StringBuilder classPathEnv = new StringBuilder(Environment.CLASSPATH.$())\n      .append(File.pathSeparatorChar).append(\"./*\");\n    for (String c : conf.getStrings(\n        YarnConfiguration.YARN_APPLICATION_CLASSPATH,\n        YarnConfiguration.DEFAULT_YARN_APPLICATION_CLASSPATH)) {\n      classPathEnv.append(File.pathSeparatorChar);\n      classPathEnv.append(c.trim());\n    }\n    classPathEnv.append(File.pathSeparatorChar).append(\"./log4j.properties\");\n\n    // add the runtime classpath needed for tests to work\n    if (conf.getBoolean(YarnConfiguration.IS_MINI_YARN_CLUSTER, false)) {\n      classPathEnv.append(':');\n      classPathEnv.append(System.getProperty(\"java.class.path\"));\n    }\n\n    env.put(\"CLASSPATH\", classPathEnv.toString());\n\n    amContainer.setEnvironment(env);\n\n    // Set the necessary command to execute the application master \n    Vector<CharSequence> vargs = new Vector<CharSequence>(30);\n\n    // Set java executable command \n    LOG.info(\"Setting up app master command\");\n    vargs.add(Environment.JAVA_HOME.$() + \"/bin/java\");\n    // Set Xmx based on am memory size\n    vargs.add(\"-Xmx\" + amMemory + \"m\");\n    // Set class name \n    vargs.add(appMasterMainClass);\n    // Set params for Application Master\n    vargs.add(\"--container_memory \" + String.valueOf(containerMemory));\n    vargs.add(\"--container_vcores \" + String.valueOf(containerVirtualCores));\n    vargs.add(\"--num_containers \" + String.valueOf(numContainers));\n    vargs.add(\"--priority \" + String.valueOf(shellCmdPriority));\n\n    if (!shellArgs.isEmpty()) {\n      vargs.add(\"--shell_args \" + shellArgs + \"\");\n    }\n    for (Map.Entry<String, String> entry : shellEnv.entrySet()) {\n      vargs.add(\"--shell_env \" + entry.getKey() + \"=\" + entry.getValue());\n    }\t\t\t\n    if (debugFlag) {\n      vargs.add(\"--debug\");\n    }\n\n    vargs.add(\"1>\" + ApplicationConstants.LOG_DIR_EXPANSION_VAR + \"/AppMaster.stdout\");\n    vargs.add(\"2>\" + ApplicationConstants.LOG_DIR_EXPANSION_VAR + \"/AppMaster.stderr\");\n\n    // Get final commmand\n    StringBuilder command = new StringBuilder();\n    for (CharSequence str : vargs) {\n      command.append(str).append(\" \");\n    }\n\n    LOG.info(\"Completed setting up app master command \" + command.toString());\t   \n    List<String> commands = new ArrayList<String>();\n    commands.add(command.toString());\t\t\n    amContainer.setCommands(commands);\n\n    // Set up resource type requirements\n    // For now, both memory and vcores are supported, so we set memory and \n    // vcores requirements\n    Resource capability = Records.newRecord(Resource.class);\n    capability.setMemory(amMemory);\n    capability.setVirtualCores(amVCores);\n    appContext.setResource(capability);\n\n    // Service data is a binary blob that can be passed to the application\n    // Not needed in this scenario\n    // amContainer.setServiceData(serviceData);\n\n    // Setup security tokens\n    if (UserGroupInformation.isSecurityEnabled()) {\n      Credentials credentials = new Credentials();\n      String tokenRenewer = conf.get(YarnConfiguration.RM_PRINCIPAL);\n      if (tokenRenewer == null || tokenRenewer.length() == 0) {\n        throw new IOException(\n          \"Can't get Master Kerberos principal for the RM to use as renewer\");\n      }\n\n      // For now, only getting tokens for the default file-system.\n      final Token<?> tokens[] =\n          fs.addDelegationTokens(tokenRenewer, credentials);\n      if (tokens != null) {\n        for (Token<?> token : tokens) {\n          LOG.info(\"Got dt for \" + fs.getUri() + \"; \" + token);\n        }\n      }\n      DataOutputBuffer dob = new DataOutputBuffer();\n      credentials.writeTokenStorageToStream(dob);\n      ByteBuffer fsTokens = ByteBuffer.wrap(dob.getData(), 0, dob.getLength());\n      amContainer.setTokens(fsTokens);\n    }\n\n    appContext.setAMContainerSpec(amContainer);\n\n    // Set the priority for the application master\n    Priority pri = Records.newRecord(Priority.class);\n    // TODO - what is the range for priority? how to decide? \n    pri.setPriority(amPriority);\n    appContext.setPriority(pri);\n\n    // Set the queue to which this application is to be submitted in the RM\n    appContext.setQueue(amQueue);\n\n    // Submit the application to the applications manager\n    // SubmitApplicationResponse submitResp = applicationsManager.submitApplication(appRequest);\n    // Ignore the response as either a valid response object is returned on success \n    // or an exception thrown to denote some form of a failure\n    LOG.info(\"Submitting application to ASM\");\n\n    yarnClient.submitApplication(appContext);\n\n    // TODO\n    // Try submitting the same request again\n    // app submission failure?\n\n    // Monitor the application\n    return monitorApplication(appId);\n\n  }","commit_id":"33a8234040959ecd0d0202162e1b18c990effabe","url":"https://github.com/apache/hadoop"},{"original_method":"private void writeParameterDetails( List parameterList, XMLWriter w )\n    {\n        w.startElement( \"subsection\" );\n        w.addAttribute( \"name\", \"Parameter Details\" );\n\n        for( Iterator parameters = parameterList.iterator(); parameters.hasNext(); )\n        {\n            Parameter parameter = (Parameter) parameters.next();\n\n            w.writeMarkup( \"<p><b><a name=\\\"\" + parameter.getName() + \"\\\">\" + parameter.getName() + \"<\/a><\/b><\/p>\" );\n\n            String description = parameter.getDescription();\n            if ( StringUtils.isEmpty( description ) )\n            {\n                description = \"No Description.\";\n            }\n            w.writeMarkup( \"<p>\" + description + \"<\/p>\" );\n\n            w.startElement( \"ul\" );\n\n            writeDetail( \"Type\", parameter.getType(), w );\n\n            writeDetail( \"Since\", parameter.getSince(), w );\n\n            if ( parameter.isRequired() )\n            {\n                writeDetail( \"Required\", \"Yes\", w );\n            }\n            else\n            {\n                writeDetail( \"Required\", \"No\", w );\n            }\n\n            writeDetail( \"Expression\", parameter.getExpression(), w );\n\n            writeDetail( \"Default\", parameter.getDefaultValue(), w );\n\n            w.endElement();//ul\n\n            w.writeMarkup( \"<hr/>\" );\n        }\n\n        w.endElement();\n    }","id":13478,"modified_method":"private void writeParameterDetails( List parameterList, XMLWriter w )\n    {\n        w.startElement( \"subsection\" );\n        w.addAttribute( \"name\", \"Parameter Details\" );\n\n        for( Iterator parameters = parameterList.iterator(); parameters.hasNext(); )\n        {\n            Parameter parameter = (Parameter) parameters.next();\n\n            w.startElement( \"p\" );\n            w.writeMarkup( \"<b><a name=\\\"\" + parameter.getName() + \"\\\">\" + parameter.getName() + \"<\/a><\/b>\" );\n            w.endElement(); //p\n\n            String description = parameter.getDescription();\n            if ( StringUtils.isEmpty( description ) )\n            {\n                description = \"No Description.\";\n            }\n            w.startElement( \"p\" );\n            w.writeMarkup( description );\n            w.endElement(); //p\n\n            w.startElement( \"ul\" );\n\n            writeDetail( \"Type\", parameter.getType(), w );\n\n            writeDetail( \"Since\", parameter.getSince(), w );\n\n            if ( parameter.isRequired() )\n            {\n                writeDetail( \"Required\", \"Yes\", w );\n            }\n            else\n            {\n                writeDetail( \"Required\", \"No\", w );\n            }\n\n            writeDetail( \"Expression\", parameter.getExpression(), w );\n\n            writeDetail( \"Default\", parameter.getDefaultValue(), w );\n\n            w.endElement();//ul\n\n            if ( parameters.hasNext() )\n            {\n                w.writeMarkup( \"<hr/>\" );\n            }\n        }\n\n        w.endElement();\n    }","commit_id":"ebe77642b48146c4218f9a7486e617e1bb88eb43","url":"https://github.com/apache/maven"},{"original_method":"private void writeGoalAttributes( MojoDescriptor mojoDescriptor, XMLWriter w )\n    {\n        w.startElement( \"p\" );\n        w.writeMarkup( \"<b>Mojo Attributes<\/b>:\" );\n        w.startElement( \"ul\" );\n\n        String value = mojoDescriptor.getDeprecated();\n        if ( StringUtils.isNotEmpty( value ) )\n        {\n            w.writeMarkup( \"<li>This plugin goal has been deprecated: \" + value + \"<\/li>\" );\n        }\n\n        if ( mojoDescriptor.isProjectRequired() )\n        {\n            w.writeMarkup( \"<li>Requires a Maven 2.0 project to execute.<\/li>\" );\n        }\n\n        if ( mojoDescriptor.isAggregator() )\n        {\n            w.writeMarkup( \"<li>Executes as an aggregator plugin.<\/li>\" );\n        }\n\n        if ( mojoDescriptor.isDirectInvocationOnly() )\n        {\n            w.writeMarkup( \"<li>Executes by direct invocation only.<\/li>\" );\n        }\n\n        value = mojoDescriptor.isDependencyResolutionRequired();\n        if ( StringUtils.isNotEmpty( value ) )\n        {\n            w.writeMarkup( \"<li>Requires dependency resolution of artifacts in scope: <code>\" + value +\n                \"<\/code><\/li>\" );\n        }\n\n        value = mojoDescriptor.getPhase();\n        if ( StringUtils.isNotEmpty( value ) )\n        {\n            w.writeMarkup( \"<li>Automatically executes within the lifecycle phase: <code>\" + value + \"<\/code><\/li>\" );\n        }\n\n        value = mojoDescriptor.getExecutePhase();\n        if ( StringUtils.isNotEmpty( value ) )\n        {\n            w.writeMarkup( \"<li>Invokes the execution of the lifecycle phase <code>\" + value +\n                \"<\/code> prior to executing itself.<\/li>\" );\n        }\n\n        value = mojoDescriptor.getExecuteGoal();\n        if ( StringUtils.isNotEmpty( value ) )\n        {\n            w.writeMarkup( \"<li>Invokes the execution of this plugin's goal <code>\" + value +\n                \"<\/code> prior to executing itself.<\/li>\" );\n        }\n\n        value = mojoDescriptor.getExecuteLifecycle();\n        if ( StringUtils.isNotEmpty( value ) )\n        {\n            w.writeMarkup( \"<li>Executes in its own lifecycle: <code>\" + value + \"<\/code><\/li>\" );\n        }\n\n        if ( mojoDescriptor.isOnlineRequired() )\n        {\n            w.writeMarkup( \"<li>Requires that mvn runs in online mode.<\/li>\" );\n        }\n\n        if ( !mojoDescriptor.isInheritedByDefault() )\n        {\n            w.writeMarkup( \"<li>Is NOT inherited by default in multi-project builds.<\/li>\" );\n        }\n\n        w.endElement();//ul\n        w.endElement();//p\n    }","id":13479,"modified_method":"private void writeGoalAttributes( MojoDescriptor mojoDescriptor, XMLWriter w )\n    {\n        w.startElement( \"p\" );\n        w.writeMarkup( \"<b>Mojo Attributes<\/b>:\" );\n        w.startElement( \"ul\" );\n\n        String value = mojoDescriptor.getDeprecated();\n        if ( StringUtils.isNotEmpty( value ) )\n        {\n            w.startElement( \"li\" );\n            w.writeMarkup( \"This plugin goal has been deprecated: \" + value + \"\" );\n            w.endElement(); //li\n        }\n\n        if ( mojoDescriptor.isProjectRequired() )\n        {\n            w.startElement( \"li\" );\n            w.writeMarkup( \"Requires a Maven 2.0 project to execute.\" );\n            w.endElement(); //li\n        }\n\n        if ( mojoDescriptor.isAggregator() )\n        {\n            w.startElement( \"li\" );\n            w.writeMarkup( \"Executes as an aggregator plugin.\" );\n            w.endElement(); //li\n        }\n\n        if ( mojoDescriptor.isDirectInvocationOnly() )\n        {\n            w.startElement( \"li\" );\n            w.writeMarkup( \"Executes by direct invocation only.\" );\n            w.endElement(); //li\n        }\n\n        value = mojoDescriptor.isDependencyResolutionRequired();\n        if ( StringUtils.isNotEmpty( value ) )\n        {\n            w.startElement( \"li\" );\n            w.writeMarkup( \"Requires dependency resolution of artifacts in scope: <code>\" + value +\n                \"<\/code>\" );\n            w.endElement(); //li\n        }\n\n        value = mojoDescriptor.getPhase();\n        if ( StringUtils.isNotEmpty( value ) )\n        {\n            w.startElement( \"li\" );\n            w.writeMarkup( \"Automatically executes within the lifecycle phase: <code>\" + value + \"<\/code>\" );\n            w.endElement(); //li\n        }\n\n        value = mojoDescriptor.getExecutePhase();\n        if ( StringUtils.isNotEmpty( value ) )\n        {\n            w.startElement( \"li\" );\n            w.writeMarkup( \"Invokes the execution of the lifecycle phase <code>\" + value +\n                \"<\/code> prior to executing itself.\" );\n            w.endElement(); //li\n        }\n\n        value = mojoDescriptor.getExecuteGoal();\n        if ( StringUtils.isNotEmpty( value ) )\n        {\n            w.startElement( \"li\" );\n            w.writeMarkup( \"Invokes the execution of this plugin's goal <code>\" + value +\n                \"<\/code> prior to executing itself.\" );\n            w.endElement(); //li\n        }\n\n        value = mojoDescriptor.getExecuteLifecycle();\n        if ( StringUtils.isNotEmpty( value ) )\n        {\n            w.startElement( \"li\" );\n            w.writeMarkup( \"Executes in its own lifecycle: <code>\" + value + \"<\/code>\" );\n            w.endElement(); //li\n        }\n\n        if ( mojoDescriptor.isOnlineRequired() )\n        {\n            w.startElement( \"li\" );\n            w.writeMarkup( \"Requires that mvn runs in online mode.\" );\n            w.endElement(); //li\n        }\n\n        if ( !mojoDescriptor.isInheritedByDefault() )\n        {\n            w.startElement( \"li\" );\n            w.writeMarkup( \"Is NOT inherited by default in multi-project builds.\" );\n            w.endElement(); //li\n        }\n\n        w.endElement();//ul\n        w.endElement();//p\n    }","commit_id":"ebe77642b48146c4218f9a7486e617e1bb88eb43","url":"https://github.com/apache/maven"},{"original_method":"private void writeParameterList( String title, List parameterList, XMLWriter w )\n    {\n        w.startElement( \"subsection\" );\n        w.addAttribute( \"name\", title );\n\n        w.startElement( \"table\" );\n\n        w.startElement( \"tr\" );\n        w.startElement( \"th\" );\n        w.writeText( \"Name\" );\n        w.endElement();//th\n        w.startElement( \"th\" );\n        w.writeText( \"Type\" );\n        w.endElement();//th\n        w.startElement( \"th\" );\n        w.writeText( \"Description\" );\n        w.endElement();//th\n        w.endElement();//tr\n\n        for( Iterator parameters = parameterList.iterator(); parameters.hasNext(); )\n        {\n            Parameter parameter = (Parameter) parameters.next();\n\n            w.startElement( \"tr\" );\n            w.startElement( \"td\" );\n            w.writeMarkup( \"<b><a href=\\\"#\" + parameter.getName() + \"\\\">\" + parameter.getName() + \"<\/a><\/b>\");\n            w.endElement();//td\n            w.startElement( \"td\" );\n            int index = parameter.getType().lastIndexOf( \".\" );\n            w.writeMarkup( \"<code>\" + parameter.getType().substring( index + 1 ) + \"<\/code>\" );\n            w.endElement();//td\n            w.startElement( \"td\" );\n            String description = parameter.getDescription();\n            if ( StringUtils.isEmpty( description ) )\n            {\n                description = \"No description.\";\n            }\n            if ( StringUtils.isNotEmpty( parameter.getDefaultValue() ) )\n            {\n                description = description + \" Default value is <code>\" + parameter.getDefaultValue() + \"<\/code>.\";\n            }\n            w.writeMarkup( description );\n            w.endElement();//td\n            w.endElement(); //tr\n        }\n\n        w.endElement();//table\n        w.endElement();//section\n    }","id":13480,"modified_method":"private void writeParameterList( String title, List parameterList, XMLWriter w )\n    {\n        w.startElement( \"subsection\" );\n        w.addAttribute( \"name\", title );\n\n        w.startElement( \"table\" );\n\n        w.startElement( \"tr\" );\n        w.startElement( \"th\" );\n        w.writeText( \"Name\" );\n        w.endElement();//th\n        w.startElement( \"th\" );\n        w.writeText( \"Type\" );\n        w.endElement();//th\n        w.startElement( \"th\" );\n        w.writeText( \"Description\" );\n        w.endElement();//th\n        w.endElement();//tr\n\n        for( Iterator parameters = parameterList.iterator(); parameters.hasNext(); )\n        {\n            Parameter parameter = (Parameter) parameters.next();\n\n            w.startElement( \"tr\" );\n            w.startElement( \"td\" );\n            w.writeMarkup( \"<b><a href=\\\"#\" + parameter.getName() + \"\\\">\" + parameter.getName() + \"<\/a><\/b>\");\n            w.endElement();//td\n            w.startElement( \"td\" );\n            int index = parameter.getType().lastIndexOf( \".\" );\n            w.writeMarkup( \"<code>\" + parameter.getType().substring( index + 1 ) + \"<\/code>\" );\n            w.endElement();//td\n            w.startElement( \"td\" );\n            String description = parameter.getDescription();\n            if ( StringUtils.isEmpty( description ) )\n            {\n                description = \"No description.\";\n            }\n            w.writeMarkup( description );\n\n            if ( StringUtils.isNotEmpty( parameter.getDefaultValue() ) )\n            {\n                w.writeMarkup( \" Default value is <code>\" );\n                w.writeText( parameter.getDefaultValue() );\n                w.writeMarkup( \"<\/code>.\" );\n            }\n            w.endElement();//td\n            w.endElement(); //tr\n        }\n\n        w.endElement();//table\n        w.endElement();//section\n    }","commit_id":"ebe77642b48146c4218f9a7486e617e1bb88eb43","url":"https://github.com/apache/maven"},{"original_method":"private void writeDetail( String param, String value, XMLWriter w )\n    {\n        if ( StringUtils.isNotEmpty( value ) )\n        {\n            w.writeMarkup( \"<li><b>\" + param + \"<\/b>: <code>\" + value + \"<\/code><\/li>\" );\n        }\n    }","id":13481,"modified_method":"private void writeDetail( String param, String value, XMLWriter w )\n    {\n        if ( StringUtils.isNotEmpty( value ) )\n        {\n            w.startElement( \"li\" );\n            w.writeMarkup( \"<b>\" + param + \"<\/b>: <code>\" );\n            w.writeText( value );\n            w.writeMarkup( \"<\/code>\" );\n            w.endElement(); //li\n        }\n    }","commit_id":"ebe77642b48146c4218f9a7486e617e1bb88eb43","url":"https://github.com/apache/maven"},{"original_method":"@Path(\"/system/services\")\n  @GET\n  public void getServiceSpec(final HttpRequest request, final HttpResponder responder) {\n    List<Map<String, String>> serviceSpec = new ArrayList<Map<String, String>>();\n    String json;\n    SortedSet<String> services = new TreeSet<String>(reactorServiceManagementMap.keySet());\n    List<String> serviceList = new ArrayList<String>(services);\n    for (String service : serviceList) {\n      Map<String, String> spec = new HashMap<String, String>();\n      ReactorServiceManager serviceManager = reactorServiceManagementMap.get(service);\n      String logs = serviceManager.isLogAvailable() ? Constants.Monitor.STATUS_OK : Constants.Monitor.STATUS_NOTOK;\n      String canCheck = serviceManager.canCheckStatus() ? (\n        serviceManager.isServiceAvailable() ? STATUSOK : STATUSNOTOK) : NOTAPPLICABLE;\n      String minInstance = String.valueOf(serviceManager.getMinInstances());\n      String maxInstance = String.valueOf(serviceManager.getMaxInstances());\n      String reqInstance = String.valueOf(serviceManager.getRequestedInstances());\n      String provInstance = String.valueOf(serviceManager.getProvisionedInstances());\n      spec.put(\"name\", service);\n      spec.put(\"logs\", logs);\n      spec.put(\"status\", canCheck);\n      spec.put(\"min\", minInstance);\n      spec.put(\"max\", maxInstance);\n      spec.put(\"requested\", reqInstance);\n      spec.put(\"provisioned\", provInstance);\n\n      //TODO: Add metric name for Event Rate monitoring\n      serviceSpec.add(spec);\n    }\n\n    json = (GSON).toJson(serviceSpec);\n    responder.sendByteArray(HttpResponseStatus.OK, json.getBytes(Charsets.UTF_8),\n                            ImmutableMultimap.of(HttpHeaders.Names.CONTENT_TYPE, \"application/json\"));\n  }","id":13482,"modified_method":"@Path(\"/system/services\")\n  @GET\n  public void getServiceSpec(final HttpRequest request, final HttpResponder responder) {\n    List<JsonObject> serviceSpec = new ArrayList<JsonObject>();\n    SortedSet<String> services = new TreeSet<String>(reactorServiceManagementMap.keySet());\n    List<String> serviceList = new ArrayList<String>(services);\n    for (String service : serviceList) {\n      ReactorServiceManager serviceManager = reactorServiceManagementMap.get(service);\n      String logs = serviceManager.isLogAvailable() ? Constants.Monitor.STATUS_OK : Constants.Monitor.STATUS_NOTOK;\n      String canCheck = serviceManager.canCheckStatus() ? (\n        serviceManager.isServiceAvailable() ? STATUSOK : STATUSNOTOK) : NOTAPPLICABLE;\n      String minInstance = String.valueOf(serviceManager.getMinInstances());\n      String maxInstance = String.valueOf(serviceManager.getMaxInstances());\n      String reqInstance = String.valueOf(serviceManager.getRequestedInstances());\n      String provInstance = String.valueOf(serviceManager.getProvisionedInstances());\n      JsonObject reply = new JsonObject();\n      reply.addProperty(\"name\", service);\n      reply.addProperty(\"logs\", logs);\n      reply.addProperty(\"status\", canCheck);\n      reply.addProperty(\"min\", minInstance);\n      reply.addProperty(\"max\", maxInstance);\n      reply.addProperty(\"requested\", reqInstance);\n      reply.addProperty(\"provisioned\", provInstance);\n      //TODO: Add metric name for Event Rate monitoring\n      serviceSpec.add(reply);\n    }\n    responder.sendJson(HttpResponseStatus.OK, serviceSpec);\n  }","commit_id":"59cae3157182c4252d2913ae377af8c2630de24e","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n    protected void configure() {\n      bind(PipelineFactory.class).to(SynchronousPipelineFactory.class);\n\n      install(\n        new FactoryModuleBuilder()\n          .implement(new TypeLiteral<Manager<Location, ApplicationWithPrograms>>() { },\n                     new TypeLiteral<LocalManager<Location, ApplicationWithPrograms>>() { })\n          .build(new TypeLiteral<ManagerFactory<Location, ApplicationWithPrograms>>() { })\n      );\n\n      bind(AuthorizationFactory.class).to(PassportAuthorizationFactory.class);\n\n      bind(StoreFactory.class).to(MDTBasedStoreFactory.class);\n\n      Multibinder<HttpHandler> handlerBinder = Multibinder.newSetBinder(binder(), HttpHandler.class,\n                                                                        Names.named(\"appfabric.http.handler\"));\n      handlerBinder.addBinding().to(AppFabricHttpHandler.class);\n      handlerBinder.addBinding().to(PingHandler.class);\n      handlerBinder.addBinding().to(MonitorHandler.class);\n      handlerBinder.addBinding().to(ServiceHttpHandler.class);\n    }","id":13483,"modified_method":"@Override\n    protected void configure() {\n      bind(PipelineFactory.class).to(SynchronousPipelineFactory.class);\n\n      install(\n        new FactoryModuleBuilder()\n          .implement(new TypeLiteral<Manager<Location, ApplicationWithPrograms>>() { },\n                     new TypeLiteral<LocalManager<Location, ApplicationWithPrograms>>() { })\n          .build(new TypeLiteral<ManagerFactory<Location, ApplicationWithPrograms>>() { })\n      );\n\n      bind(AuthorizationFactory.class).to(PassportAuthorizationFactory.class);\n\n      bind(StoreFactory.class).to(MDTBasedStoreFactory.class);\n\n      Multibinder<HttpHandler> handlerBinder = Multibinder.newSetBinder(binder(), HttpHandler.class,\n                                                                        Names.named(\"appfabric.http.handler\"));\n      handlerBinder.addBinding().to(AppFabricHttpHandler.class);\n      handlerBinder.addBinding().to(PingHandler.class);\n      handlerBinder.addBinding().to(MonitorHandler.class);\n      handlerBinder.addBinding().to(ServiceHttpHandler.class);\n\n      MapBinder<String, ReactorServiceManager> mapBinder = MapBinder.newMapBinder(binder(), String.class,\n                                                                                  ReactorServiceManager.class);\n      mapBinder.addBinding(Constants.Service.LOGSAVER).to(LogSaverServiceManager.class);\n      mapBinder.addBinding(Constants.Service.TRANSACTION).to(TransactionServiceManager.class);\n      mapBinder.addBinding(Constants.Service.METRICS_PROCESSOR).to(MetricsProcessorServiceManager.class);\n      mapBinder.addBinding(Constants.Service.METRICS).to(MetricsServiceManager.class);\n      mapBinder.addBinding(Constants.Service.APP_FABRIC_HTTP).to(InMemoryReactorServiceManager.class);\n      mapBinder.addBinding(Constants.Service.STREAMS).to(StreamServiceManager.class);\n      mapBinder.addBinding(Constants.Service.DATASET_EXECUTOR).to(DatasetExecutorServiceManager.class);\n      mapBinder.addBinding(Constants.Service.EXPLORE_HTTP_USER_SERVICE).to(ExploreServiceManager.class);\n    }","commit_id":"76b17d4ec609d33e3e93457c272cfc806cc7d377","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public Module getSingleNodeModules() {\n\n    return Modules.combine(new AppFabricServiceModule(),\n                           new AbstractModule() {\n                             @Override\n                             protected void configure() {\n                               bind(SchedulerService.class).to(LocalSchedulerService.class).in(Scopes.SINGLETON);\n                               bind(Scheduler.class).to(SchedulerService.class);\n\n                               MapBinder<String, ReactorServiceManager> mapBinder = MapBinder.newMapBinder(\n                                 binder(), String.class, ReactorServiceManager.class);\n                               mapBinder.addBinding(Constants.Service.LOGSAVER).to(\n                                 InMemoryLogSaverServiceMananger.class);\n                               mapBinder.addBinding(Constants.Service.TRANSACTION).to(\n                                 InMemoryTransactionServiceManager.class);\n                               //Using LogSaverServiceManager since status check and logs are not available\n                               //for metrics.processor as well\n                               mapBinder.addBinding(Constants.Service.METRICS_PROCESSOR).to(\n                                 InMemoryLogSaverServiceMananger.class);\n                               mapBinder.addBinding(Constants.Service.METRICS).to(InMemoryReactorServiceManager.class);\n                               mapBinder.addBinding(Constants.Service.APP_FABRIC_HTTP).to(\n                                 InMemoryReactorServiceManager.class);\n                               mapBinder.addBinding(Constants.Service.STREAMS).to(InMemoryReactorServiceManager.class);\n                               mapBinder.addBinding(Constants.Service.DATASET_EXECUTOR).to(\n                                 InMemoryReactorServiceManager.class);\n                             }\n                           });\n  }","id":13484,"modified_method":"@Override\n  public Module getSingleNodeModules() {\n\n    return Modules.combine(new AppFabricServiceModule(),\n                           new AbstractModule() {\n                             @Override\n                             protected void configure() {\n                               bind(SchedulerService.class).to(LocalSchedulerService.class).in(Scopes.SINGLETON);\n                               bind(Scheduler.class).to(SchedulerService.class);\n                             }\n                           });\n  }","commit_id":"76b17d4ec609d33e3e93457c272cfc806cc7d377","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public Module getInMemoryModules() {\n    return Modules.combine(new AppFabricServiceModule(),\n                           new AbstractModule() {\n                             @Override\n                             protected void configure() {\n                               bind(SchedulerService.class).to(LocalSchedulerService.class).in(Scopes.SINGLETON);\n                               bind(Scheduler.class).to(SchedulerService.class);\n\n                               MapBinder<String, ReactorServiceManager> mapBinder = MapBinder.newMapBinder(\n                                 binder(), String.class, ReactorServiceManager.class);\n                               mapBinder.addBinding(Constants.Service.LOGSAVER).to(\n                                 InMemoryLogSaverServiceMananger.class);\n                               mapBinder.addBinding(Constants.Service.TRANSACTION).to(\n                                 InMemoryTransactionServiceManager.class);\n                               //Using LogSaverServiceManager since status check and logs are not available\n                               //for metrics.processor as well\n                               mapBinder.addBinding(Constants.Service.METRICS_PROCESSOR).to(\n                                 InMemoryLogSaverServiceMananger.class);\n                               mapBinder.addBinding(Constants.Service.METRICS).to(InMemoryReactorServiceManager.class);\n                               mapBinder.addBinding(Constants.Service.APP_FABRIC_HTTP).to(\n                                 InMemoryReactorServiceManager.class);\n                               mapBinder.addBinding(Constants.Service.STREAMS).to(InMemoryReactorServiceManager.class);\n                               mapBinder.addBinding(Constants.Service.DATASET_EXECUTOR).to(\n                                 InMemoryReactorServiceManager.class);\n                             }\n                           });\n  }","id":13485,"modified_method":"@Override\n  public Module getInMemoryModules() {\n    return Modules.combine(new AppFabricServiceModule(),\n                           new AbstractModule() {\n                             @Override\n                             protected void configure() {\n                               bind(SchedulerService.class).to(LocalSchedulerService.class).in(Scopes.SINGLETON);\n                               bind(Scheduler.class).to(SchedulerService.class);\n                             }\n                           });\n  }","commit_id":"76b17d4ec609d33e3e93457c272cfc806cc7d377","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public Module getDistributedModules() {\n\n\n    return Modules.combine(new AppFabricServiceModule(),\n                           new AbstractModule() {\n                             @Override\n                             protected void configure() {\n                               bind(SchedulerService.class).to(DistributedSchedulerService.class).in(Scopes.SINGLETON);\n                               bind(Scheduler.class).to(SchedulerService.class);\n\n                               MapBinder<String, ReactorServiceManager> mapBinder = MapBinder.newMapBinder(\n                                 binder(), String.class, ReactorServiceManager.class);\n                               mapBinder.addBinding(Constants.Service.LOGSAVER).to(LogSaverServiceManager.class);\n                               mapBinder.addBinding(Constants.Service.TRANSACTION).to(TransactionServiceManager.class);\n                               mapBinder.addBinding(Constants.Service.METRICS_PROCESSOR).to(\n                                 MetricsProcessorServiceManager.class);\n                               mapBinder.addBinding(Constants.Service.METRICS).to(MetricsServiceManager.class);\n                               mapBinder.addBinding(Constants.Service.APP_FABRIC_HTTP).to(\n                                 InMemoryReactorServiceManager.class);\n                               mapBinder.addBinding(Constants.Service.STREAMS).to(StreamServiceManager.class);\n                               mapBinder.addBinding(Constants.Service.DATASET_EXECUTOR).to(\n                                 DatasetExecutorServiceManager.class);\n                             }\n                           });\n  }","id":13486,"modified_method":"@Override\n  public Module getDistributedModules() {\n\n\n    return Modules.combine(new AppFabricServiceModule(),\n                           new AbstractModule() {\n                             @Override\n                             protected void configure() {\n                               bind(SchedulerService.class).to(DistributedSchedulerService.class).in(Scopes.SINGLETON);\n                               bind(Scheduler.class).to(SchedulerService.class);\n\n                             }\n                           });\n  }","commit_id":"76b17d4ec609d33e3e93457c272cfc806cc7d377","url":"https://github.com/caskdata/cdap"},{"original_method":"@Path(\"/system/services\")\n  @GET\n  public void getServiceSpec(final HttpRequest request, final HttpResponder responder) {\n    List<JsonObject> serviceSpec = new ArrayList<JsonObject>();\n    SortedSet<String> services = new TreeSet<String>(reactorServiceManagementMap.keySet());\n    List<String> serviceList = new ArrayList<String>(services);\n    for (String service : serviceList) {\n      ReactorServiceManager serviceManager = reactorServiceManagementMap.get(service);\n      String logs = serviceManager.isLogAvailable() ? Constants.Monitor.STATUS_OK : Constants.Monitor.STATUS_NOTOK;\n      String canCheck = serviceManager.canCheckStatus() ? (\n        serviceManager.isServiceAvailable() ? STATUSOK : STATUSNOTOK) : NOTAPPLICABLE;\n      String minInstance = String.valueOf(serviceManager.getMinInstances());\n      String maxInstance = String.valueOf(serviceManager.getMaxInstances());\n      String reqInstance = String.valueOf(serviceManager.getRequestedInstances());\n      String provInstance = String.valueOf(serviceManager.getProvisionedInstances());\n      JsonObject reply = new JsonObject();\n      reply.addProperty(\"name\", service);\n      reply.addProperty(\"logs\", logs);\n      reply.addProperty(\"status\", canCheck);\n      reply.addProperty(\"min\", minInstance);\n      reply.addProperty(\"max\", maxInstance);\n      reply.addProperty(\"requested\", reqInstance);\n      reply.addProperty(\"provisioned\", provInstance);\n      //TODO: Add metric name for Event Rate monitoring\n      serviceSpec.add(reply);\n    }\n    responder.sendJson(HttpResponseStatus.OK, serviceSpec);\n  }","id":13487,"modified_method":"@Path(\"/system/services\")\n  @GET\n  public void getServiceSpec(final HttpRequest request, final HttpResponder responder) {\n    List<JsonObject> serviceSpec = new ArrayList<JsonObject>();\n    SortedSet<String> services = new TreeSet<String>(reactorServiceManagementMap.keySet());\n    List<String> serviceList = new ArrayList<String>(services);\n    for (String service : serviceList) {\n      ReactorServiceManager serviceManager = reactorServiceManagementMap.get(service);\n      if (serviceManager.isServiceEnabled()) {\n        String logs = serviceManager.isLogAvailable() ? Constants.Monitor.STATUS_OK : Constants.Monitor.STATUS_NOTOK;\n        String canCheck = serviceManager.canCheckStatus() ? (\n          serviceManager.isServiceAvailable() ? STATUSOK : STATUSNOTOK) : NOTAPPLICABLE;\n        String minInstance = String.valueOf(serviceManager.getMinInstances());\n        String maxInstance = String.valueOf(serviceManager.getMaxInstances());\n        String reqInstance = String.valueOf(serviceManager.getRequestedInstances());\n        String provInstance = String.valueOf(serviceManager.getProvisionedInstances());\n        JsonObject reply = new JsonObject();\n        reply.addProperty(\"name\", service);\n        reply.addProperty(\"logs\", logs);\n        reply.addProperty(\"status\", canCheck);\n        reply.addProperty(\"min\", minInstance);\n        reply.addProperty(\"max\", maxInstance);\n        reply.addProperty(\"requested\", reqInstance);\n        reply.addProperty(\"provisioned\", provInstance);\n        //TODO: Add metric name for Event Rate monitoring\n        serviceSpec.add(reply);\n      }\n    }\n    responder.sendJson(HttpResponseStatus.OK, serviceSpec);\n  }","commit_id":"76b17d4ec609d33e3e93457c272cfc806cc7d377","url":"https://github.com/caskdata/cdap"},{"original_method":"@Path(\"/system/services/status\")\n  @GET\n  public void getBootStatus(final HttpRequest request, final HttpResponder responder) {\n    Map<String, String> result = new HashMap<String, String>();\n    String json;\n    for (String service : reactorServiceManagementMap.keySet()) {\n      ReactorServiceManager reactorServiceManager = reactorServiceManagementMap.get(service);\n      if (reactorServiceManager.canCheckStatus()) {\n        String status = reactorServiceManager.isServiceAvailable() ? STATUSOK : STATUSNOTOK;\n        result.put(service, status);\n      }\n    }\n\n    json = (GSON).toJson(result);\n    responder.sendByteArray(HttpResponseStatus.OK, json.getBytes(Charsets.UTF_8),\n                            ImmutableMultimap.of(HttpHeaders.Names.CONTENT_TYPE, \"application/json\"));\n  }","id":13488,"modified_method":"@Path(\"/system/services/status\")\n  @GET\n  public void getBootStatus(final HttpRequest request, final HttpResponder responder) {\n    Map<String, String> result = new HashMap<String, String>();\n    for (String service : reactorServiceManagementMap.keySet()) {\n      ReactorServiceManager reactorServiceManager = reactorServiceManagementMap.get(service);\n      if (reactorServiceManager.isServiceEnabled() && reactorServiceManager.canCheckStatus()) {\n        String status = reactorServiceManager.isServiceAvailable() ? STATUSOK : STATUSNOTOK;\n        result.put(service, status);\n      }\n    }\n    responder.sendJson(HttpResponseStatus.OK, result);\n  }","commit_id":"76b17d4ec609d33e3e93457c272cfc806cc7d377","url":"https://github.com/caskdata/cdap"},{"original_method":"@GET\n  @Path(\"/namespaces\")\n  public void getAllNamespaces(HttpRequest request, HttpResponder responder) {\n    LOG.debug(\"Listing all namespaces\");\n    try {\n      List<NamespaceMetadata> namespaces = namespaceMetaStore.list();\n      if (null == namespaces) {\n        responder.sendStatus(HttpResponseStatus.NOT_FOUND);\n      } else {\n        String result = GSON.toJson(namespaces);\n        responder.sendByteArray(HttpResponseStatus.OK, result.getBytes(Charsets.UTF_8),\n                                ImmutableMultimap.of(HttpHeaders.Names.CONTENT_TYPE, \"application/json\"));\n      }\n    } catch (Exception e) {\n      LOG.error(\"Internal error - {} \", e.getLocalizedMessage(), e);\n      responder.sendStatus(HttpResponseStatus.INTERNAL_SERVER_ERROR);\n    }\n  }","id":13489,"modified_method":"@GET\n  @Path(\"/namespaces\")\n  public void getAllNamespaces(HttpRequest request, HttpResponder responder) {\n    LOG.debug(\"Listing all namespaces\");\n    try {\n      List<NamespaceMetadata> namespaces = namespaceMetaStore.list();\n      if (null == namespaces) {\n        responder.sendStatus(HttpResponseStatus.NOT_FOUND);\n      } else {\n        responder.sendJson(HttpResponseStatus.OK, namespaces);\n      }\n    } catch (Exception e) {\n      LOG.error(\"Internal error while listing all namespaces\", e);\n      responder.sendStatus(HttpResponseStatus.INTERNAL_SERVER_ERROR);\n    }\n  }","commit_id":"94270bd172bd3d114c1f4f4cd3a3b4bbf4ee6ce3","url":"https://github.com/caskdata/cdap"},{"original_method":"@PUT\n  @Path(\"/namespaces\")\n  public void create(HttpRequest request, HttpResponder responder) {\n    try {\n      NamespaceMetadata metadata = parseBody(request, NamespaceMetadata.class);\n      String name = metadata.getName();\n      // name cannot be null or empty.\n      if (null == name || name.isEmpty()) {\n        LOG.error(\"Namespace name cannot be null or empty.\");\n        responder.sendStatus(HttpResponseStatus.BAD_REQUEST);\n        return;\n      }\n      if (namespaceMetaStore.exists(name)) {\n        LOG.error(\"Namespace {} already exists\", name);\n        responder.sendStatus(HttpResponseStatus.CONFLICT);\n        return;\n      }\n      LOG.debug(\"Creating namespace {}\", name);\n      // displayName and description could be null\n      String displayName = metadata.getDisplayName();\n      if (null == displayName || displayName.isEmpty()) {\n        displayName = name;\n      }\n      String description = metadata.getDescription();\n      if (null == description) {\n        description = \"\";\n      }\n      namespaceMetaStore.create(name, displayName, description);\n      responder.sendStatus(HttpResponseStatus.OK);\n    } catch (JsonSyntaxException e) {\n      LOG.error(\"Invalid namespace metadata: {}. Must be a valid json string.\", request.getContent()\n        .toString(Charsets.UTF_8), e);\n      responder.sendStatus(HttpResponseStatus.BAD_REQUEST);\n    } catch (IOException e) {\n      LOG.error(\"Error reading namespace metadata: {}\", request.getContent().toString(Charsets.UTF_8), e);\n      responder.sendStatus(HttpResponseStatus.INTERNAL_SERVER_ERROR);\n    } catch (Exception e) {\n      LOG.error(\"Internal error - {}\", e.getLocalizedMessage(), e);\n      responder.sendStatus(HttpResponseStatus.INTERNAL_SERVER_ERROR);\n    }\n  }","id":13490,"modified_method":"@PUT\n  @Path(\"/namespaces\")\n  public void create(HttpRequest request, HttpResponder responder) {\n    try {\n      NamespaceMetadata metadata = parseBody(request, NamespaceMetadata.class);\n      String name = metadata.getName();\n      // name cannot be null or empty.\n      if (null == name || name.isEmpty()) {\n        LOG.error(\"Namespace name cannot be null or empty.\");\n        responder.sendString(HttpResponseStatus.BAD_REQUEST, \"Namespace name cannot be null or empty.\");\n        return;\n      }\n      if (namespaceMetaStore.exists(name)) {\n        LOG.error(\"Namespace {} already exists\", name);\n        responder.sendString(HttpResponseStatus.CONFLICT, String.format(\"Namespace %s already exists\", name));\n        return;\n      }\n      LOG.debug(\"Creating namespace {}\", name);\n      // displayName and description could be null\n      String displayName = metadata.getDisplayName();\n      if (null == displayName || displayName.isEmpty()) {\n        displayName = name;\n      }\n      String description = metadata.getDescription();\n      if (null == description) {\n        description = \"\";\n      }\n      namespaceMetaStore.create(name, displayName, description);\n      responder.sendStatus(HttpResponseStatus.OK);\n    } catch (JsonSyntaxException e) {\n      LOG.error(\"Invalid namespace metadata. Must be a valid json.\", e);\n      responder.sendString(HttpResponseStatus.BAD_REQUEST, String.format(\"Invalid namespace metadata. Must be a valid\" +\n                                                                           \" json.\"));\n    } catch (IOException e) {\n      LOG.error(\"Error reading namespace metadata: {}\", request.getContent().toString(Charsets.UTF_8), e);\n      responder.sendStatus(HttpResponseStatus.INTERNAL_SERVER_ERROR);\n    } catch (Exception e) {\n      LOG.error(\"Internal error while creating namespace\", e);\n      responder.sendStatus(HttpResponseStatus.INTERNAL_SERVER_ERROR);\n    }\n  }","commit_id":"94270bd172bd3d114c1f4f4cd3a3b4bbf4ee6ce3","url":"https://github.com/caskdata/cdap"},{"original_method":"/**\n   * Returns the CDAP service which will handle the HttpRequest\n   *\n   * @param fallbackService service to which we fall back to if we can't determine the destination from the URI path\n   * @param requestPath Normalized (and query string removed) URI path\n   * @param httpRequest HttpRequest used to get the Http method and account id\n   * @return destination service\n   */\n  public String getRoutingService(String fallbackService, String requestPath, HttpRequest httpRequest) {\n    try {\n      String method = httpRequest.getMethod().getName();\n      AllowedMethod requestMethod = AllowedMethod.valueOf(method);\n      String[] uriParts = StringUtils.split(requestPath, '/');\n\n      //Check if the call should go to webapp\n      //If service contains \"$HOST\" and if first split element is NOT the gateway version, then send it to WebApp\n      //WebApp serves only static files (HTML, CSS, JS) and so /<appname> calls should go to WebApp\n      //But procedure/stream calls issued by the UI should be routed to the appropriate CDAP service\n      if (fallbackService.contains(\"$HOST\") && (uriParts.length >= 1)\n                                            && (!((\"/\" + uriParts[0]).equals(Constants.Gateway.GATEWAY_VERSION)))) {\n        return fallbackService;\n      }\n\n      if ((uriParts.length >= 2) && uriParts[1].equals(\"acls\")) {\n        return Constants.Service.ACL;\n      } else if ((uriParts.length >= 2) && uriParts[1].equals(\"metrics\")) {\n        return Constants.Service.METRICS;\n      } else if ((uriParts.length >= 2) && uriParts[1].equals(\"data\")) {\n        if ((uriParts.length >= 3) && uriParts[2].equals(\"explore\")\n          && (uriParts[3].equals(\"queries\") || uriParts[3].equals(\"jdbc\") || uriParts[3].equals(\"tables\"))) {\n          return Constants.Service.EXPLORE_HTTP_USER_SERVICE;\n        } else if ((uriParts.length == 6) && uriParts[2].equals(\"explore\") && uriParts[3].equals(\"datasets\")\n          && uriParts[5].equals(\"schema\")) {\n          // v2/data/explore/datasets/<dataset>/schema\n          return Constants.Service.EXPLORE_HTTP_USER_SERVICE;\n        }\n        return Constants.Service.DATASET_MANAGER;\n      } else if ((uriParts.length == 3) && uriParts[1].equals(\"explore\") && uriParts[2].equals(\"status\")) {\n        return Constants.Service.EXPLORE_HTTP_USER_SERVICE;\n      } else if ((uriParts.length >= 2) && uriParts[1].equals(\"streams\")) {\n        // /v2/streams/<stream-id> GET should go to AppFabricHttp, PUT, POST should go to Stream Handler\n        // /v2/streams should go to AppFabricHttp\n        // GET /v2/streams/flows should go to AppFabricHttp, rest should go Stream Handler\n        if (uriParts.length == 2) {\n          return Constants.Service.APP_FABRIC_HTTP;\n        } else if (uriParts.length == 3) {\n          return (requestMethod.equals(AllowedMethod.GET)) ?\n            Constants.Service.APP_FABRIC_HTTP : Constants.Service.STREAMS;\n        } else if ((uriParts.length == 4) && uriParts[3].equals(\"flows\") && requestMethod.equals(AllowedMethod.GET)) {\n          return Constants.Service.APP_FABRIC_HTTP;\n        } else {\n          return Constants.Service.STREAMS;\n        }\n      } else if ((uriParts.length >= 6) && uriParts[5].equals(\"logs\")) {\n        //Log Handler Path /v2/apps/<appid>/<programid-type>/<programid>/logs\n        return Constants.Service.METRICS;\n      } else if ((uriParts.length >= 5) && uriParts[4].equals(\"logs\")) {\n        //Log Handler Path /v2/system/services/<service-id>/logs\n        return Constants.Service.METRICS;\n      } else if ((uriParts.length >= 7) && uriParts[3].equals(\"procedures\") && uriParts[5].equals(\"methods\")) {\n        //Procedure Path /v2/apps/<appid>/procedures/<procedureid>/methods/<methodName>\n        String accId = getAuthenticatedAccountId(httpRequest);\n        //Discoverable Service Name -> procedure.%s.%s.%s\", accountId, appId, procedureName ;\n        String serviceName = String.format(\"procedure.%s.%s.%s\", accId, uriParts[2], uriParts[4]);\n        return serviceName;\n      } else if ((uriParts.length >= 7) && uriParts[3].equals(\"services\") && uriParts[5].equals(\"methods\")) {\n        //User defined services handle methods on them:\n        //Service Path:  \"/v2/apps/{app-id}/services/{service-id}/methods/<user-defined-method-path>\"\n        String accId = getAuthenticatedAccountId(httpRequest);\n        //Discoverable Service Name -> \"service.%s.%s.%s\", accountId, appId, serviceId\n        String serviceName = String.format(\"service.%s.%s.%s\", accId, uriParts[2], uriParts[4]);\n        return serviceName;\n      } else if (uriParts.length >= 2 && uriParts[1].equals(\"namespaces\")) {\n        return Constants.Service.APP_FABRIC_HTTP;\n      } else {\n        return Constants.Service.APP_FABRIC_HTTP;\n      }\n    } catch (Exception e) {\n\n    }\n    return Constants.Service.APP_FABRIC_HTTP;\n  }","id":13491,"modified_method":"/**\n   * Returns the CDAP service which will handle the HttpRequest\n   *\n   * @param fallbackService service to which we fall back to if we can't determine the destination from the URI path\n   * @param requestPath Normalized (and query string removed) URI path\n   * @param httpRequest HttpRequest used to get the Http method and account id\n   * @return destination service\n   */\n  public String getRoutingService(String fallbackService, String requestPath, HttpRequest httpRequest) {\n    try {\n      String method = httpRequest.getMethod().getName();\n      AllowedMethod requestMethod = AllowedMethod.valueOf(method);\n      String[] uriParts = StringUtils.split(requestPath, '/');\n\n      //Check if the call should go to webapp\n      //If service contains \"$HOST\" and if first split element is NOT the gateway version, then send it to WebApp\n      //WebApp serves only static files (HTML, CSS, JS) and so /<appname> calls should go to WebApp\n      //But procedure/stream calls issued by the UI should be routed to the appropriate CDAP service\n      if (fallbackService.contains(\"$HOST\") && (uriParts.length >= 1)\n                                            && (!((\"/\" + uriParts[0]).equals(Constants.Gateway.GATEWAY_VERSION)))) {\n        return fallbackService;\n      }\n\n      if ((uriParts.length >= 2) && uriParts[1].equals(\"acls\")) {\n        return Constants.Service.ACL;\n      } else if ((uriParts.length >= 2) && uriParts[1].equals(\"metrics\")) {\n        return Constants.Service.METRICS;\n      } else if ((uriParts.length >= 2) && uriParts[1].equals(\"data\")) {\n        if ((uriParts.length >= 3) && uriParts[2].equals(\"explore\")\n          && (uriParts[3].equals(\"queries\") || uriParts[3].equals(\"jdbc\") || uriParts[3].equals(\"tables\"))) {\n          return Constants.Service.EXPLORE_HTTP_USER_SERVICE;\n        } else if ((uriParts.length == 6) && uriParts[2].equals(\"explore\") && uriParts[3].equals(\"datasets\")\n          && uriParts[5].equals(\"schema\")) {\n          // v2/data/explore/datasets/<dataset>/schema\n          return Constants.Service.EXPLORE_HTTP_USER_SERVICE;\n        }\n        return Constants.Service.DATASET_MANAGER;\n      } else if ((uriParts.length == 3) && uriParts[1].equals(\"explore\") && uriParts[2].equals(\"status\")) {\n        return Constants.Service.EXPLORE_HTTP_USER_SERVICE;\n      } else if ((uriParts.length >= 2) && uriParts[1].equals(\"streams\")) {\n        // /v2/streams/<stream-id> GET should go to AppFabricHttp, PUT, POST should go to Stream Handler\n        // /v2/streams should go to AppFabricHttp\n        // GET /v2/streams/flows should go to AppFabricHttp, rest should go Stream Handler\n        if (uriParts.length == 2) {\n          return Constants.Service.APP_FABRIC_HTTP;\n        } else if (uriParts.length == 3) {\n          return (requestMethod.equals(AllowedMethod.GET)) ?\n            Constants.Service.APP_FABRIC_HTTP : Constants.Service.STREAMS;\n        } else if ((uriParts.length == 4) && uriParts[3].equals(\"flows\") && requestMethod.equals(AllowedMethod.GET)) {\n          return Constants.Service.APP_FABRIC_HTTP;\n        } else {\n          return Constants.Service.STREAMS;\n        }\n      } else if ((uriParts.length >= 6) && uriParts[5].equals(\"logs\")) {\n        //Log Handler Path /v2/apps/<appid>/<programid-type>/<programid>/logs\n        return Constants.Service.METRICS;\n      } else if ((uriParts.length >= 5) && uriParts[4].equals(\"logs\")) {\n        //Log Handler Path /v2/system/services/<service-id>/logs\n        return Constants.Service.METRICS;\n      } else if ((uriParts.length >= 7) && uriParts[3].equals(\"procedures\") && uriParts[5].equals(\"methods\")) {\n        //Procedure Path /v2/apps/<appid>/procedures/<procedureid>/methods/<methodName>\n        String accId = getAuthenticatedAccountId(httpRequest);\n        //Discoverable Service Name -> procedure.%s.%s.%s\", accountId, appId, procedureName ;\n        String serviceName = String.format(\"procedure.%s.%s.%s\", accId, uriParts[2], uriParts[4]);\n        return serviceName;\n      } else if ((uriParts.length >= 7) && uriParts[3].equals(\"services\") && uriParts[5].equals(\"methods\")) {\n        //User defined services handle methods on them:\n        //Service Path:  \"/v2/apps/{app-id}/services/{service-id}/methods/<user-defined-method-path>\"\n        String accId = getAuthenticatedAccountId(httpRequest);\n        //Discoverable Service Name -> \"service.%s.%s.%s\", accountId, appId, serviceId\n        String serviceName = String.format(\"service.%s.%s.%s\", accId, uriParts[2], uriParts[4]);\n        return serviceName;\n      } else {\n        return Constants.Service.APP_FABRIC_HTTP;\n      }\n    } catch (Exception e) {\n\n    }\n    return Constants.Service.APP_FABRIC_HTTP;\n  }","commit_id":"94270bd172bd3d114c1f4f4cd3a3b4bbf4ee6ce3","url":"https://github.com/caskdata/cdap"},{"original_method":"/**\n     * @see org.apache.sling.resourceaccesssecurity.AllowingResourceAccessGate#canDelete(org.apache.sling.api.resource.Resource)\n     */\n    @Override\n    public GateResult canDelete(Resource resource) {\n        return this.checkPermission(resource, Session.ACTION_REMOVE);\n    }","id":13492,"modified_method":"/**\n     * @see org.apache.sling.resourceaccesssecurity.AllowingResourceAccessGate#canDelete(org.apache.sling.api.resource.Resource)\n     */\n    @Override\n    public GateResult canDelete(Resource resource) {\n        return this.checkPermission(resource.getResourceResolver(), resource.getPath(), Session.ACTION_REMOVE);\n    }","commit_id":"f25c98c4695109353ca6156a7965b654b560ce5e","url":"https://github.com/apache/sling"},{"original_method":"/**\n     * @see org.apache.sling.resourceaccesssecurity.AllowingResourceAccessGate#canRead(org.apache.sling.api.resource.Resource)\n     */\n    @Override\n    public GateResult canRead(final Resource resource) {\n        return this.checkPermission(resource, Session.ACTION_READ);\n    }","id":13493,"modified_method":"/**\n     * @see org.apache.sling.resourceaccesssecurity.AllowingResourceAccessGate#canRead(org.apache.sling.api.resource.Resource)\n     */\n    @Override\n    public GateResult canRead(final Resource resource) {\n        return this.checkPermission(resource.getResourceResolver(), resource.getPath(), Session.ACTION_READ);\n    }","commit_id":"f25c98c4695109353ca6156a7965b654b560ce5e","url":"https://github.com/apache/sling"},{"original_method":"/**\n     * @see org.apache.sling.resourceaccesssecurity.AllowingResourceAccessGate#canCreate(java.lang.String, org.apache.sling.api.resource.ResourceResolver)\n     */\n    @Override\n    public GateResult canCreate(String absPathName, ResourceResolver resourceResolver) {\n        boolean canCreate = false;\n\n        final Session session = resourceResolver.adaptTo(Session.class);\n        if ( session != null ) {\n            try {\n                canCreate = session.hasPermission(jcrPath, Session.ACTION_ADD_NODE);\n            } catch (final RepositoryException re) {\n                // ignore\n            }\n        }\n\n        return canCreate ? GateResult.GRANTED : GateResult.DENIED;\n    }","id":13494,"modified_method":"/**\n     * @see org.apache.sling.resourceaccesssecurity.AllowingResourceAccessGate#canCreate(java.lang.String, org.apache.sling.api.resource.ResourceResolver)\n     */\n    @Override\n    public GateResult canCreate(String absPathName, ResourceResolver resourceResolver) {\n        return this.checkPermission(resourceResolver, absPathName, Session.ACTION_ADD_NODE);\n    }","commit_id":"f25c98c4695109353ca6156a7965b654b560ce5e","url":"https://github.com/apache/sling"},{"original_method":"/**\n     * Check the permission\n     */\n    private GateResult checkPermission(final Resource resource, final String permission) {\n        if ( this.skipCheck(resource) ) {\n            return GateResult.GRANTED;\n        }\n        boolean granted = false;\n        final Session session = resource.getResourceResolver().adaptTo(Session.class);\n        if ( session != null ) {\n            try {\n                granted = session.hasPermission(jcrPath, permission);\n            } catch (final RepositoryException re) {\n                // ignore\n            }\n        }\n        return granted ? GateResult.GRANTED : GateResult.DENIED;\n    }","id":13495,"modified_method":"/**\n     * Check the permission\n     */\n    private GateResult checkPermission(final ResourceResolver resolver,\n            final String path,\n            final String permission) {\n        boolean granted = false;\n        final Session session = resolver.adaptTo(Session.class);\n        if ( session != null ) {\n            try {\n                granted = session.hasPermission(jcrPath, permission);\n            } catch (final RepositoryException re) {\n                // ignore\n            }\n        }\n        return granted ? GateResult.GRANTED : GateResult.DENIED;\n    }","commit_id":"f25c98c4695109353ca6156a7965b654b560ce5e","url":"https://github.com/apache/sling"},{"original_method":"/**\n     * @see org.apache.sling.resourceaccesssecurity.AllowingResourceAccessGate#canUpdate(org.apache.sling.api.resource.Resource)\n     */\n    @Override\n    public GateResult canUpdate(Resource resource) {\n        return this.checkPermission(resource, Session.ACTION_SET_PROPERTY);\n    }","id":13496,"modified_method":"/**\n     * @see org.apache.sling.resourceaccesssecurity.AllowingResourceAccessGate#canUpdate(org.apache.sling.api.resource.Resource)\n     */\n    @Override\n    public GateResult canUpdate(Resource resource) {\n        return this.checkPermission(resource.getResourceResolver(), resource.getPath(), Session.ACTION_SET_PROPERTY);\n    }","commit_id":"f25c98c4695109353ca6156a7965b654b560ce5e","url":"https://github.com/apache/sling"},{"original_method":"/**\n     * @see org.apache.sling.resourceaccesssecurity.AllowingResourceAccessGate#canUpdate(org.apache.sling.api.resource.Resource)\n     */\n    @Override\n    public GateResult canUpdate(Resource resource) {\n        if ( this.skipCheck(resource) ) {\n            return GateResult.GRANTED;\n        }\n\n        boolean canUpdate = false;\n\n        final Session session = resource.getResourceResolver().adaptTo(Session.class);\n        if ( session != null ) {\n            try {\n                canUpdate = session.hasPermission(jcrPath, Session.ACTION_SET_PROPERTY);\n            } catch (final RepositoryException re) {\n                // ignore\n            }\n        }\n\n        return canUpdate ? GateResult.GRANTED : GateResult.DENIED;\n    }","id":13497,"modified_method":"/**\n     * @see org.apache.sling.resourceaccesssecurity.AllowingResourceAccessGate#canUpdate(org.apache.sling.api.resource.Resource)\n     */\n    @Override\n    public GateResult canUpdate(Resource resource) {\n        return this.checkPermission(resource, Session.ACTION_SET_PROPERTY);\n    }","commit_id":"a20ca3196c0fe058d86c4bc0fb7dd70fe7697f36","url":"https://github.com/apache/sling"},{"original_method":"/**\n     * @see org.apache.sling.resourceaccesssecurity.AllowingResourceAccessGate#canRead(org.apache.sling.api.resource.Resource)\n     */\n    @Override\n    public GateResult canRead(final Resource resource) {\n        if ( this.skipCheck(resource) ) {\n            return GateResult.GRANTED;\n        }\n        final Session session = resource.getResourceResolver().adaptTo(Session.class);\n        boolean canRead = false;\n        if ( session != null ) {\n            try {\n                canRead = session.nodeExists(this.jcrPath);\n            } catch (final RepositoryException re) {\n                // ignore\n            }\n        }\n        return canRead ? GateResult.GRANTED : GateResult.DENIED;\n    }","id":13498,"modified_method":"/**\n     * @see org.apache.sling.resourceaccesssecurity.AllowingResourceAccessGate#canRead(org.apache.sling.api.resource.Resource)\n     */\n    @Override\n    public GateResult canRead(final Resource resource) {\n        return this.checkPermission(resource, Session.ACTION_READ);\n    }","commit_id":"a20ca3196c0fe058d86c4bc0fb7dd70fe7697f36","url":"https://github.com/apache/sling"},{"original_method":"/**\n     * @see org.apache.sling.resourceaccesssecurity.AllowingResourceAccessGate#canDelete(org.apache.sling.api.resource.Resource)\n     */\n    @Override\n    public GateResult canDelete(Resource resource) {\n        if ( this.skipCheck(resource) ) {\n            return GateResult.GRANTED;\n        }\n\n        boolean canDelete = false;\n        final Session session = resource.getResourceResolver().adaptTo(Session.class);\n        if ( session != null ) {\n            try {\n                canDelete = session.hasPermission(jcrPath, Session.ACTION_REMOVE);\n            } catch (final RepositoryException re) {\n                // ignore\n            }\n        }\n\n        return canDelete ? GateResult.GRANTED : GateResult.DENIED;\n\n    }","id":13499,"modified_method":"/**\n     * @see org.apache.sling.resourceaccesssecurity.AllowingResourceAccessGate#canDelete(org.apache.sling.api.resource.Resource)\n     */\n    @Override\n    public GateResult canDelete(Resource resource) {\n        return this.checkPermission(resource, Session.ACTION_REMOVE);\n    }","commit_id":"a20ca3196c0fe058d86c4bc0fb7dd70fe7697f36","url":"https://github.com/apache/sling"},{"original_method":"/**\n\t * Adds a structure referencing its parent structure.\n\t *\n\t * @param      groupId the primary key of the group\n\t * @param      parentStructureId the primary key of the parent structure\n\t *             (optionally {@link\n\t *             com.liferay.dynamic.data.mapping.model.DDMStructureConstants#DEFAULT_PARENT_STRUCTURE_ID})\n\t * @param      classNameId the primary key of the class name for the\n\t *             structure's related model\n\t * @param      structureKey the unique string identifying the structure\n\t *             (optionally <code>null<\/code>)\n\t * @param      nameMap the structure's locales and localized names\n\t * @param      descriptionMap the structure's locales and localized\n\t *             descriptions\n\t * @param      xsd the structure's XML schema definition\n\t * @param      storageType the structure's storage type. It can be \"xml\" or\n\t *             \"expando\". For more information, see {@link\n\t *             com.liferay.dynamic.data.mapping.storage.StorageType}.\n\t * @param      type the structure's type. For more information, see {@link\n\t *             com.liferay.dynamic.data.mapping.model.DDMStructureConstants}.\n\t * @param      serviceContext the service context to be applied. Can set the\n\t *             UUID, creation date, modification date, guest permissions,\n\t *             and group permissions for the structure.\n\t * @return     the structure\n\t * @throws     PortalException if the user did not have permission to add\n\t *             the structure, if the XSD is not well formed, or if a portal\n\t *             exception occurred\n\t * @deprecated As of 7.0.0, replaced by {@link #addStructure(long, long,\n\t *             long, String, Map, Map, DDMForm, DDMFormLayout, String, int,\n\t *             ServiceContext)}\n\t */\n\t@Deprecated\n\t@Override\n\tpublic DDMStructure addStructure(\n\t\t\tlong groupId, long parentStructureId, long classNameId,\n\t\t\tString structureKey, Map<Locale, String> nameMap,\n\t\t\tMap<Locale, String> descriptionMap, String xsd, String storageType,\n\t\t\tint type, ServiceContext serviceContext)\n\t\tthrows PortalException {\n\n\t\tDDMPermissionHandler ddmPermissionHandler =\n\t\t\tDDMUtil.getDDMPermissionHandler(classNameId);\n\n\t\tDDMPermission.check(\n\t\t\tgetPermissionChecker(), serviceContext.getScopeGroupId(),\n\t\t\tddmPermissionHandler.getResourceName(classNameId),\n\t\t\tddmPermissionHandler.getAddStructureActionId());\n\n\t\treturn ddmStructureLocalService.addStructure(\n\t\t\tgetUserId(), groupId, parentStructureId, classNameId, structureKey,\n\t\t\tnameMap, descriptionMap, xsd, storageType, type, serviceContext);\n\t}","id":13500,"modified_method":"/**\n\t * Adds a structure referencing its parent structure.\n\t *\n\t * @param      groupId the primary key of the group\n\t * @param      parentStructureId the primary key of the parent structure\n\t *             (optionally {@link\n\t *             com.liferay.dynamic.data.mapping.model.DDMStructureConstants#DEFAULT_PARENT_STRUCTURE_ID})\n\t * @param      classNameId the primary key of the class name for the\n\t *             structure's related model\n\t * @param      structureKey the unique string identifying the structure\n\t *             (optionally <code>null<\/code>)\n\t * @param      nameMap the structure's locales and localized names\n\t * @param      descriptionMap the structure's locales and localized\n\t *             descriptions\n\t * @param      xsd the structure's XML schema definition\n\t * @param      storageType the structure's storage type. It can be \"xml\" or\n\t *             \"expando\". For more information, see {@link\n\t *             com.liferay.dynamic.data.mapping.storage.StorageType}.\n\t * @param      type the structure's type. For more information, see {@link\n\t *             com.liferay.dynamic.data.mapping.model.DDMStructureConstants}.\n\t * @param      serviceContext the service context to be applied. Can set the\n\t *             UUID, creation date, modification date, guest permissions,\n\t *             and group permissions for the structure.\n\t * @return     the structure\n\t * @throws     PortalException if the user did not have permission to add\n\t *             the structure, if the XSD is not well formed, or if a portal\n\t *             exception occurred\n\t * @deprecated As of 7.0.0, replaced by {@link #addStructure(long, long,\n\t *             long, String, Map, Map, DDMForm, DDMFormLayout, String, int,\n\t *             ServiceContext)}\n\t */\n\t@Deprecated\n\t@Override\n\tpublic DDMStructure addStructure(\n\t\t\tlong groupId, long parentStructureId, long classNameId,\n\t\t\tString structureKey, Map<Locale, String> nameMap,\n\t\t\tMap<Locale, String> descriptionMap, String xsd, String storageType,\n\t\t\tint type, ServiceContext serviceContext)\n\t\tthrows PortalException {\n\n\t\tDDMStructurePermission.checkAddStruturePermission(\n\t\t\tgetPermissionChecker(), groupId, classNameId);\n\n\t\treturn ddmStructureLocalService.addStructure(\n\t\t\tgetUserId(), groupId, parentStructureId, classNameId, structureKey,\n\t\t\tnameMap, descriptionMap, xsd, storageType, type, serviceContext);\n\t}","commit_id":"0b530085b6a2879732d3f22a7e8ee82adb9da4a3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n\t * Copies a structure, creating a new structure with all the values\n\t * extracted from the original one. The new structure supports a new name\n\t * and description.\n\t *\n\t * @param  structureId the primary key of the structure to be copied\n\t * @param  nameMap the new structure's locales and localized names\n\t * @param  descriptionMap the new structure's locales and localized\n\t *         descriptions\n\t * @param  serviceContext the service context to be applied. Can set the\n\t *         UUID, creation date, modification date, guest permissions, and\n\t *         group permissions for the structure.\n\t * @return the new structure\n\t * @throws PortalException if the user did not have permission to add the\n\t *         structure or if a portal exception occurred\n\t */\n\t@Override\n\tpublic DDMStructure copyStructure(\n\t\t\tlong structureId, Map<Locale, String> nameMap,\n\t\t\tMap<Locale, String> descriptionMap, ServiceContext serviceContext)\n\t\tthrows PortalException {\n\n\t\tDDMStructure structure = ddmStructurePersistence.findByPrimaryKey(\n\t\t\tstructureId);\n\n\t\tDDMPermissionHandler ddmPermissionHandler =\n\t\t\tDDMUtil.getDDMPermissionHandler(structure.getClassNameId());\n\n\t\tDDMPermission.check(\n\t\t\tgetPermissionChecker(), serviceContext.getScopeGroupId(),\n\t\t\tddmPermissionHandler.getResourceName(structure.getClassNameId()),\n\t\t\tddmPermissionHandler.getAddStructureActionId());\n\n\t\treturn ddmStructureLocalService.copyStructure(\n\t\t\tgetUserId(), structureId, nameMap, descriptionMap, serviceContext);\n\t}","id":13501,"modified_method":"/**\n\t * Copies a structure, creating a new structure with all the values\n\t * extracted from the original one. The new structure supports a new name\n\t * and description.\n\t *\n\t * @param  structureId the primary key of the structure to be copied\n\t * @param  nameMap the new structure's locales and localized names\n\t * @param  descriptionMap the new structure's locales and localized\n\t *         descriptions\n\t * @param  serviceContext the service context to be applied. Can set the\n\t *         UUID, creation date, modification date, guest permissions, and\n\t *         group permissions for the structure.\n\t * @return the new structure\n\t * @throws PortalException if the user did not have permission to add the\n\t *         structure or if a portal exception occurred\n\t */\n\t@Override\n\tpublic DDMStructure copyStructure(\n\t\t\tlong structureId, Map<Locale, String> nameMap,\n\t\t\tMap<Locale, String> descriptionMap, ServiceContext serviceContext)\n\t\tthrows PortalException {\n\n\t\tDDMStructure structure = ddmStructurePersistence.findByPrimaryKey(\n\t\t\tstructureId);\n\n\t\tDDMStructurePermission.checkAddStruturePermission(\n\t\t\tgetPermissionChecker(), serviceContext.getScopeGroupId(),\n\t\t\tstructure.getClassNameId());\n\n\t\treturn ddmStructureLocalService.copyStructure(\n\t\t\tgetUserId(), structureId, nameMap, descriptionMap, serviceContext);\n\t}","commit_id":"0b530085b6a2879732d3f22a7e8ee82adb9da4a3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic DDMStructure addStructure(\n\t\t\tlong groupId, long parentStructureId, long classNameId,\n\t\t\tString structureKey, Map<Locale, String> nameMap,\n\t\t\tMap<Locale, String> descriptionMap, DDMForm ddmForm,\n\t\t\tDDMFormLayout ddmFormLayout, String storageType, int type,\n\t\t\tServiceContext serviceContext)\n\t\tthrows PortalException {\n\n\t\tDDMPermissionHandler ddmPermissionHandler =\n\t\t\tDDMUtil.getDDMPermissionHandler(classNameId);\n\n\t\tDDMPermission.check(\n\t\t\tgetPermissionChecker(), serviceContext.getScopeGroupId(),\n\t\t\tddmPermissionHandler.getResourceName(classNameId),\n\t\t\tddmPermissionHandler.getAddStructureActionId());\n\n\t\treturn ddmStructureLocalService.addStructure(\n\t\t\tgetUserId(), groupId, parentStructureId, classNameId, structureKey,\n\t\t\tnameMap, descriptionMap, ddmForm, ddmFormLayout, storageType, type,\n\t\t\tserviceContext);\n\t}","id":13502,"modified_method":"@Override\n\tpublic DDMStructure addStructure(\n\t\t\tlong groupId, long parentStructureId, long classNameId,\n\t\t\tString structureKey, Map<Locale, String> nameMap,\n\t\t\tMap<Locale, String> descriptionMap, DDMForm ddmForm,\n\t\t\tDDMFormLayout ddmFormLayout, String storageType, int type,\n\t\t\tServiceContext serviceContext)\n\t\tthrows PortalException {\n\n\t\tDDMStructurePermission.checkAddStruturePermission(\n\t\t\tgetPermissionChecker(), groupId, classNameId);\n\n\t\treturn ddmStructureLocalService.addStructure(\n\t\t\tgetUserId(), groupId, parentStructureId, classNameId, structureKey,\n\t\t\tnameMap, descriptionMap, ddmForm, ddmFormLayout, storageType, type,\n\t\t\tserviceContext);\n\t}","commit_id":"0b530085b6a2879732d3f22a7e8ee82adb9da4a3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n\t * Adds a structure referencing the parent structure by its structure key.\n\t * In case the parent structure is not found, it uses the default parent\n\t * structure ID.\n\t *\n\t * @param      userId the primary key of the structure's creator/owner\n\t * @param      groupId the primary key of the group\n\t * @param      parentStructureKey the unique string identifying the\n\t *             structure\n\t * @param      classNameId the primary key of the class name for the\n\t *             structure's related model\n\t * @param      structureKey unique string identifying the structure\n\t *             (optionally <code>null<\/code>)\n\t * @param      nameMap the structure's locales and localized names\n\t * @param      descriptionMap the structure's locales and localized\n\t *             descriptions\n\t * @param      xsd the XML schema definition of the structure\n\t * @param      storageType the storage type of the structure. It can be XML\n\t *             or expando. For more information, see {@link\n\t *             com.liferay.dynamic.data.mapping.storage.StorageType}.\n\t * @param      type the structure's type. For more information, see {@link\n\t *             com.liferay.dynamic.data.mapping.model.DDMStructureConstants}.\n\t * @param      serviceContext the service context to be applied. Must have\n\t *             the <code>ddmResource<\/code> attribute to check permissions.\n\t *             Can set the UUID, creation date, modification date, guest\n\t *             permissions, and group permissions for the structure.\n\t * @return     the structure\n\t * @throws     PortalException if a user with the primary key could not be\n\t *             found, if the user did not have permission to add the\n\t *             structure, if the XSD was not well-formed, or if a portal\n\t *             exception occurred\n\t * @deprecated As of 7.0.0, replaced by {@link #addStructure(long, long,\n\t *             String, long, String, Map, Map, DDMForm, DDMFormLayout,\n\t *             String, int, ServiceContext)}\n\t */\n\t@Deprecated\n\t@Override\n\tpublic DDMStructure addStructure(\n\t\t\tlong userId, long groupId, String parentStructureKey,\n\t\t\tlong classNameId, String structureKey, Map<Locale, String> nameMap,\n\t\t\tMap<Locale, String> descriptionMap, String xsd, String storageType,\n\t\t\tint type, ServiceContext serviceContext)\n\t\tthrows PortalException {\n\n\t\tDDMPermissionHandler ddmPermissionHandler =\n\t\t\tDDMUtil.getDDMPermissionHandler(classNameId);\n\n\t\tDDMPermission.check(\n\t\t\tgetPermissionChecker(), serviceContext.getScopeGroupId(),\n\t\t\tddmPermissionHandler.getResourceName(classNameId),\n\t\t\tddmPermissionHandler.getAddStructureActionId());\n\n\t\treturn ddmStructureLocalService.addStructure(\n\t\t\tuserId, groupId, parentStructureKey, classNameId, structureKey,\n\t\t\tnameMap, descriptionMap, xsd, storageType, type, serviceContext);\n\t}","id":13503,"modified_method":"/**\n\t * Adds a structure referencing the parent structure by its structure key.\n\t * In case the parent structure is not found, it uses the default parent\n\t * structure ID.\n\t *\n\t * @param      userId the primary key of the structure's creator/owner\n\t * @param      groupId the primary key of the group\n\t * @param      parentStructureKey the unique string identifying the\n\t *             structure\n\t * @param      classNameId the primary key of the class name for the\n\t *             structure's related model\n\t * @param      structureKey unique string identifying the structure\n\t *             (optionally <code>null<\/code>)\n\t * @param      nameMap the structure's locales and localized names\n\t * @param      descriptionMap the structure's locales and localized\n\t *             descriptions\n\t * @param      xsd the XML schema definition of the structure\n\t * @param      storageType the storage type of the structure. It can be XML\n\t *             or expando. For more information, see {@link\n\t *             com.liferay.dynamic.data.mapping.storage.StorageType}.\n\t * @param      type the structure's type. For more information, see {@link\n\t *             com.liferay.dynamic.data.mapping.model.DDMStructureConstants}.\n\t * @param      serviceContext the service context to be applied. Must have\n\t *             the <code>ddmResource<\/code> attribute to check permissions.\n\t *             Can set the UUID, creation date, modification date, guest\n\t *             permissions, and group permissions for the structure.\n\t * @return     the structure\n\t * @throws     PortalException if a user with the primary key could not be\n\t *             found, if the user did not have permission to add the\n\t *             structure, if the XSD was not well-formed, or if a portal\n\t *             exception occurred\n\t * @deprecated As of 7.0.0, replaced by {@link #addStructure(long, long,\n\t *             String, long, String, Map, Map, DDMForm, DDMFormLayout,\n\t *             String, int, ServiceContext)}\n\t */\n\t@Deprecated\n\t@Override\n\tpublic DDMStructure addStructure(\n\t\t\tlong userId, long groupId, String parentStructureKey,\n\t\t\tlong classNameId, String structureKey, Map<Locale, String> nameMap,\n\t\t\tMap<Locale, String> descriptionMap, String xsd, String storageType,\n\t\t\tint type, ServiceContext serviceContext)\n\t\tthrows PortalException {\n\n\t\tDDMStructurePermission.checkAddStruturePermission(\n\t\t\tgetPermissionChecker(), groupId, classNameId);\n\n\t\treturn ddmStructureLocalService.addStructure(\n\t\t\tuserId, groupId, parentStructureKey, classNameId, structureKey,\n\t\t\tnameMap, descriptionMap, xsd, storageType, type, serviceContext);\n\t}","commit_id":"0b530085b6a2879732d3f22a7e8ee82adb9da4a3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic DDMStructure addStructure(\n\t\t\tlong userId, long groupId, long classNameId,\n\t\t\tMap<Locale, String> nameMap, Map<Locale, String> descriptionMap,\n\t\t\tDDMForm ddmForm, DDMFormLayout ddmFormLayout, String storageType,\n\t\t\tServiceContext serviceContext)\n\t\tthrows PortalException {\n\n\t\tDDMPermissionHandler ddmPermissionHandler =\n\t\t\tDDMUtil.getDDMPermissionHandler(classNameId);\n\n\t\tDDMPermission.check(\n\t\t\tgetPermissionChecker(), serviceContext.getScopeGroupId(),\n\t\t\tddmPermissionHandler.getResourceName(classNameId),\n\t\t\tddmPermissionHandler.getAddStructureActionId());\n\n\t\treturn ddmStructureLocalService.addStructure(\n\t\t\tgetUserId(), groupId, classNameId, nameMap, descriptionMap, ddmForm,\n\t\t\tddmFormLayout, storageType, serviceContext);\n\t}","id":13504,"modified_method":"@Override\n\tpublic DDMStructure addStructure(\n\t\t\tlong userId, long groupId, long classNameId,\n\t\t\tMap<Locale, String> nameMap, Map<Locale, String> descriptionMap,\n\t\t\tDDMForm ddmForm, DDMFormLayout ddmFormLayout, String storageType,\n\t\t\tServiceContext serviceContext)\n\t\tthrows PortalException {\n\n\t\tDDMStructurePermission.checkAddStruturePermission(\n\t\t\tgetPermissionChecker(), groupId, classNameId);\n\n\t\treturn ddmStructureLocalService.addStructure(\n\t\t\tgetUserId(), groupId, classNameId, nameMap, descriptionMap, ddmForm,\n\t\t\tddmFormLayout, storageType, serviceContext);\n\t}","commit_id":"0b530085b6a2879732d3f22a7e8ee82adb9da4a3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic DDMStructure copyStructure(\n\t\t\tlong structureId, ServiceContext serviceContext)\n\t\tthrows PortalException {\n\n\t\tDDMStructure structure = ddmStructurePersistence.findByPrimaryKey(\n\t\t\tstructureId);\n\n\t\tDDMPermissionHandler ddmPermissionHandler =\n\t\t\tDDMUtil.getDDMPermissionHandler(structure.getClassNameId());\n\n\t\tDDMPermission.check(\n\t\t\tgetPermissionChecker(), serviceContext.getScopeGroupId(),\n\t\t\tddmPermissionHandler.getResourceName(structure.getClassNameId()),\n\t\t\tddmPermissionHandler.getAddStructureActionId());\n\n\t\treturn ddmStructureLocalService.copyStructure(\n\t\t\tgetUserId(), structureId, serviceContext);\n\t}","id":13505,"modified_method":"@Override\n\tpublic DDMStructure copyStructure(\n\t\t\tlong structureId, ServiceContext serviceContext)\n\t\tthrows PortalException {\n\n\t\tDDMStructure structure = ddmStructurePersistence.findByPrimaryKey(\n\t\t\tstructureId);\n\n\t\tDDMStructurePermission.checkAddStruturePermission(\n\t\t\tgetPermissionChecker(), serviceContext.getScopeGroupId(),\n\t\t\tstructure.getClassNameId());\n\n\t\treturn ddmStructureLocalService.copyStructure(\n\t\t\tgetUserId(), structureId, serviceContext);\n\t}","commit_id":"0b530085b6a2879732d3f22a7e8ee82adb9da4a3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic DDMStructure addStructure(\n\t\t\tlong userId, long groupId, String parentStructureKey,\n\t\t\tlong classNameId, String structureKey, Map<Locale, String> nameMap,\n\t\t\tMap<Locale, String> descriptionMap, DDMForm ddmForm,\n\t\t\tDDMFormLayout ddmFormLayout, String storageType, int type,\n\t\t\tServiceContext serviceContext)\n\t\tthrows PortalException {\n\n\t\tDDMPermissionHandler ddmPermissionHandler =\n\t\t\tDDMUtil.getDDMPermissionHandler(classNameId);\n\n\t\tDDMPermission.check(\n\t\t\tgetPermissionChecker(), serviceContext.getScopeGroupId(),\n\t\t\tddmPermissionHandler.getResourceName(classNameId),\n\t\t\tddmPermissionHandler.getAddStructureActionId());\n\n\t\treturn ddmStructureLocalService.addStructure(\n\t\t\tuserId, groupId, parentStructureKey, classNameId, structureKey,\n\t\t\tnameMap, descriptionMap, ddmForm, ddmFormLayout, storageType, type,\n\t\t\tserviceContext);\n\t}","id":13506,"modified_method":"@Override\n\tpublic DDMStructure addStructure(\n\t\t\tlong userId, long groupId, String parentStructureKey,\n\t\t\tlong classNameId, String structureKey, Map<Locale, String> nameMap,\n\t\t\tMap<Locale, String> descriptionMap, DDMForm ddmForm,\n\t\t\tDDMFormLayout ddmFormLayout, String storageType, int type,\n\t\t\tServiceContext serviceContext)\n\t\tthrows PortalException {\n\n\t\tDDMStructurePermission.checkAddStruturePermission(\n\t\t\tgetPermissionChecker(), groupId, classNameId);\n\n\t\treturn ddmStructureLocalService.addStructure(\n\t\t\tuserId, groupId, parentStructureKey, classNameId, structureKey,\n\t\t\tnameMap, descriptionMap, ddmForm, ddmFormLayout, storageType, type,\n\t\t\tserviceContext);\n\t}","commit_id":"0b530085b6a2879732d3f22a7e8ee82adb9da4a3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n\t * Adds a structure referencing a default parent structure, using the portal\n\t * property <code>dynamic.data.lists.storage.type<\/code> storage type and\n\t * default structure type.\n\t *\n\t * @param      userId the primary key of the structure's creator/owner\n\t * @param      groupId the primary key of the group\n\t * @param      classNameId the primary key of the class name for the\n\t *             structure's related model\n\t * @param      nameMap the structure's locales and localized names\n\t * @param      descriptionMap the structure's locales and localized\n\t *             descriptions\n\t * @param      xsd the structure's XML schema definition\n\t * @param      serviceContext the service context to be applied. Can set the\n\t *             UUID, creation date, modification date, guest permissions,\n\t *             and group permissions for the structure.\n\t * @return     the structure\n\t * @throws     PortalException if a user with the primary key could not be\n\t *             found, if the user did not have permission to add the\n\t *             structure, if the XSD was not well-formed, or if a portal\n\t *             exception occurred\n\t * @deprecated As of 7.0.0, replaced by {@link #addStructure(long, long,\n\t *             long, Map, Map, DDMForm, DDMFormLayout, ServiceContext)}\n\t */\n\t@Deprecated\n\t@Override\n\tpublic DDMStructure addStructure(\n\t\t\tlong userId, long groupId, long classNameId,\n\t\t\tMap<Locale, String> nameMap, Map<Locale, String> descriptionMap,\n\t\t\tString xsd, ServiceContext serviceContext)\n\t\tthrows PortalException {\n\n\t\tDDMPermissionHandler ddmPermissionHandler =\n\t\t\tDDMUtil.getDDMPermissionHandler(classNameId);\n\n\t\tDDMPermission.check(\n\t\t\tgetPermissionChecker(), serviceContext.getScopeGroupId(),\n\t\t\tddmPermissionHandler.getResourceName(classNameId),\n\t\t\tddmPermissionHandler.getAddStructureActionId());\n\n\t\treturn ddmStructureLocalService.addStructure(\n\t\t\tgetUserId(), groupId, classNameId, nameMap, descriptionMap, xsd,\n\t\t\tserviceContext);\n\t}","id":13507,"modified_method":"/**\n\t * Adds a structure referencing a default parent structure, using the portal\n\t * property <code>dynamic.data.lists.storage.type<\/code> storage type and\n\t * default structure type.\n\t *\n\t * @param      userId the primary key of the structure's creator/owner\n\t * @param      groupId the primary key of the group\n\t * @param      classNameId the primary key of the class name for the\n\t *             structure's related model\n\t * @param      nameMap the structure's locales and localized names\n\t * @param      descriptionMap the structure's locales and localized\n\t *             descriptions\n\t * @param      xsd the structure's XML schema definition\n\t * @param      serviceContext the service context to be applied. Can set the\n\t *             UUID, creation date, modification date, guest permissions,\n\t *             and group permissions for the structure.\n\t * @return     the structure\n\t * @throws     PortalException if a user with the primary key could not be\n\t *             found, if the user did not have permission to add the\n\t *             structure, if the XSD was not well-formed, or if a portal\n\t *             exception occurred\n\t * @deprecated As of 7.0.0, replaced by {@link #addStructure(long, long,\n\t *             long, Map, Map, DDMForm, DDMFormLayout, ServiceContext)}\n\t */\n\t@Deprecated\n\t@Override\n\tpublic DDMStructure addStructure(\n\t\t\tlong userId, long groupId, long classNameId,\n\t\t\tMap<Locale, String> nameMap, Map<Locale, String> descriptionMap,\n\t\t\tString xsd, ServiceContext serviceContext)\n\t\tthrows PortalException {\n\n\t\tDDMStructurePermission.checkAddStruturePermission(\n\t\t\tgetPermissionChecker(), groupId, classNameId);\n\n\t\treturn ddmStructureLocalService.addStructure(\n\t\t\tgetUserId(), groupId, classNameId, nameMap, descriptionMap, xsd,\n\t\t\tserviceContext);\n\t}","commit_id":"0b530085b6a2879732d3f22a7e8ee82adb9da4a3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n\t * Deletes the structure and its resources.\n\t *\n\t * <p>\n\t * Before deleting the structure, the system verifies whether the structure\n\t * is required by another entity. If it is needed, an exception is thrown.\n\t * <\/p>\n\t *\n\t * @param  structureId the primary key of the structure to be deleted\n\t * @throws PortalException if the user did not have permission to delete the\n\t *         structure or if a portal exception occurred\n\t */\n\t@Override\n\tpublic void deleteStructure(long structureId) throws PortalException {\n\t\tDDMStructurePermission.check(\n\t\t\tgetPermissionChecker(), structureId, ActionKeys.DELETE);\n\n\t\tddmStructureLocalService.deleteStructure(structureId);\n\t}","id":13508,"modified_method":"/**\n\t * Deletes the structure and its resources.\n\t *\n\t * <p>\n\t * Before deleting the structure, the system verifies whether the structure\n\t * is required by another entity. If it is needed, an exception is thrown.\n\t * <\/p>\n\t *\n\t * @param  structureId the primary key of the structure to be deleted\n\t * @throws PortalException if the user did not have permission to delete the\n\t *         structure or if a portal exception occurred\n\t */\n\t@Override\n\tpublic void deleteStructure(long structureId) throws PortalException {\n\t\tDDMStructurePermission.check(\n\t\t\tgetPermissionChecker(), structureId, ActionKeys.VIEW);\n\n\t\tddmStructureLocalService.deleteStructure(structureId);\n\t}","commit_id":"0b530085b6a2879732d3f22a7e8ee82adb9da4a3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n\t * Adds a template.\n\t *\n\t * @param  groupId the primary key of the group\n\t * @param  classNameId the primary key of the class name for template's\n\t *         related model\n\t * @param  classPK the primary key of the template's related entity\n\t * @param  resourceClassNameId the primary key of the class name for\n\t *         template's resource model\n\t * @param  nameMap the template's locales and localized names\n\t * @param  descriptionMap the template's locales and localized descriptions\n\t * @param  type the template's type. For more information, see {@link\n\t *         com.liferay.dynamic.data.mapping.model.DDMTemplateConstants}.\n\t * @param  mode the template's mode. For more information, see {@link\n\t *         com.liferay.dynamic.data.mapping.model.DDMTemplateConstants}.\n\t * @param  language the template's script language. For more information,\n\t *         see {@link\n\t *         com.liferay.dynamic.data.mapping.model.DDMTemplateConstants}.\n\t * @param  script the template's script\n\t * @param  serviceContext the service context to be applied. Must have the\n\t *         <code>ddmResource<\/code> attribute to check permissions. Can set\n\t *         the UUID, creation date, modification date, guest permissions,\n\t *         and group permissions for the template.\n\t * @return the template\n\t * @throws PortalException if the user did not have permission to add the\n\t *         template or if a portal exception occurred\n\t */\n\t@Override\n\tpublic DDMTemplate addTemplate(\n\t\t\tlong groupId, long classNameId, long classPK,\n\t\t\tlong resourceClassNameId, Map<Locale, String> nameMap,\n\t\t\tMap<Locale, String> descriptionMap, String type, String mode,\n\t\t\tString language, String script, ServiceContext serviceContext)\n\t\tthrows PortalException {\n\n\t\tDDMPermissionHandler ddmPermissionHandler =\n\t\t\tDDMUtil.getDDMPermissionHandler(resourceClassNameId);\n\n\t\tDDMPermission.check(\n\t\t\tgetPermissionChecker(), serviceContext.getScopeGroupId(),\n\t\t\tddmPermissionHandler.getResourceName(classNameId),\n\t\t\tddmPermissionHandler.getAddTemplateActionId());\n\n\t\treturn ddmTemplateLocalService.addTemplate(\n\t\t\tgetUserId(), groupId, classNameId, classPK, resourceClassNameId,\n\t\t\tnull, nameMap, descriptionMap, type, mode, language, script, false,\n\t\t\tfalse, null, null, serviceContext);\n\t}","id":13509,"modified_method":"/**\n\t * Adds a template.\n\t *\n\t * @param  groupId the primary key of the group\n\t * @param  classNameId the primary key of the class name for template's\n\t *         related model\n\t * @param  classPK the primary key of the template's related entity\n\t * @param  resourceClassNameId the primary key of the class name for\n\t *         template's resource model\n\t * @param  nameMap the template's locales and localized names\n\t * @param  descriptionMap the template's locales and localized descriptions\n\t * @param  type the template's type. For more information, see {@link\n\t *         com.liferay.dynamic.data.mapping.model.DDMTemplateConstants}.\n\t * @param  mode the template's mode. For more information, see {@link\n\t *         com.liferay.dynamic.data.mapping.model.DDMTemplateConstants}.\n\t * @param  language the template's script language. For more information,\n\t *         see {@link\n\t *         com.liferay.dynamic.data.mapping.model.DDMTemplateConstants}.\n\t * @param  script the template's script\n\t * @param  serviceContext the service context to be applied. Must have the\n\t *         <code>ddmResource<\/code> attribute to check permissions. Can set\n\t *         the UUID, creation date, modification date, guest permissions,\n\t *         and group permissions for the template.\n\t * @return the template\n\t * @throws PortalException if the user did not have permission to add the\n\t *         template or if a portal exception occurred\n\t */\n\t@Override\n\tpublic DDMTemplate addTemplate(\n\t\t\tlong groupId, long classNameId, long classPK,\n\t\t\tlong resourceClassNameId, Map<Locale, String> nameMap,\n\t\t\tMap<Locale, String> descriptionMap, String type, String mode,\n\t\t\tString language, String script, ServiceContext serviceContext)\n\t\tthrows PortalException {\n\n\t\tDDMTemplatePermission.checkAddTemplatePermission(\n\t\t\tgetPermissionChecker(), groupId, classNameId, resourceClassNameId);\n\n\t\treturn ddmTemplateLocalService.addTemplate(\n\t\t\tgetUserId(), groupId, classNameId, classPK, resourceClassNameId,\n\t\t\tnull, nameMap, descriptionMap, type, mode, language, script, false,\n\t\t\tfalse, null, null, serviceContext);\n\t}","commit_id":"0b530085b6a2879732d3f22a7e8ee82adb9da4a3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n\t * Copies the template, creating a new template with all the values\n\t * extracted from the original one. This method supports defining a new name\n\t * and description.\n\t *\n\t * @param  templateId the primary key of the template to be copied\n\t * @param  nameMap the new template's locales and localized names\n\t * @param  descriptionMap the new template's locales and localized\n\t *         descriptions\n\t * @param  serviceContext the service context to be applied. Must have the\n\t *         <code>ddmResource<\/code> attribute to check permissions. Can set\n\t *         the UUID, creation date, modification date, guest permissions,\n\t *         and group permissions for the template.\n\t * @return the new template\n\t * @throws PortalException if the user did not have permission to add the\n\t *         template or if a portal exception occurred\n\t */\n\t@Override\n\tpublic DDMTemplate copyTemplate(\n\t\t\tlong templateId, Map<Locale, String> nameMap,\n\t\t\tMap<Locale, String> descriptionMap, ServiceContext serviceContext)\n\t\tthrows PortalException {\n\n\t\tDDMTemplate template = ddmTemplatePersistence.findByPrimaryKey(\n\t\t\ttemplateId);\n\n\t\tDDMPermissionHandler ddmPermissionHandler =\n\t\t\tDDMUtil.getDDMPermissionHandler(template.getResourceClassNameId());\n\n\t\tDDMPermission.check(\n\t\t\tgetPermissionChecker(), serviceContext.getScopeGroupId(),\n\t\t\tddmPermissionHandler.getResourceName(template.getClassNameId()),\n\t\t\tddmPermissionHandler.getAddTemplateActionId());\n\n\t\treturn ddmTemplateLocalService.copyTemplate(\n\t\t\tgetUserId(), templateId, nameMap, descriptionMap, serviceContext);\n\t}","id":13510,"modified_method":"/**\n\t * Copies the template, creating a new template with all the values\n\t * extracted from the original one. This method supports defining a new name\n\t * and description.\n\t *\n\t * @param  templateId the primary key of the template to be copied\n\t * @param  nameMap the new template's locales and localized names\n\t * @param  descriptionMap the new template's locales and localized\n\t *         descriptions\n\t * @param  serviceContext the service context to be applied. Must have the\n\t *         <code>ddmResource<\/code> attribute to check permissions. Can set\n\t *         the UUID, creation date, modification date, guest permissions,\n\t *         and group permissions for the template.\n\t * @return the new template\n\t * @throws PortalException if the user did not have permission to add the\n\t *         template or if a portal exception occurred\n\t */\n\t@Override\n\tpublic DDMTemplate copyTemplate(\n\t\t\tlong templateId, Map<Locale, String> nameMap,\n\t\t\tMap<Locale, String> descriptionMap, ServiceContext serviceContext)\n\t\tthrows PortalException {\n\n\t\tDDMTemplate template = ddmTemplatePersistence.findByPrimaryKey(\n\t\t\ttemplateId);\n\n\t\tDDMTemplatePermission.checkAddTemplatePermission(\n\t\t\tgetPermissionChecker(), serviceContext.getScopeGroupId(),\n\t\t\ttemplate.getClassNameId(), template.getResourceClassNameId());\n\n\t\treturn ddmTemplateLocalService.copyTemplate(\n\t\t\tgetUserId(), templateId, nameMap, descriptionMap, serviceContext);\n\t}","commit_id":"0b530085b6a2879732d3f22a7e8ee82adb9da4a3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n\t * Adds a template with additional parameters.\n\t *\n\t * @param  groupId the primary key of the group\n\t * @param  classNameId the primary key of the class name for template's\n\t *         related model\n\t * @param  classPK the primary key of the template's related entity\n\t * @param  resourceClassNameId the primary key of the class name for\n\t *         template's resource model\n\t * @param  templateKey the unique string identifying the template\n\t *         (optionally <code>null<\/code>)\n\t * @param  nameMap the template's locales and localized names\n\t * @param  descriptionMap the template's locales and localized descriptions\n\t * @param  type the template's type. For more information, see {@link\n\t *         com.liferay.dynamic.data.mapping.model.DDMTemplateConstants}.\n\t * @param  mode the template's mode. For more information, see {@link\n\t *         com.liferay.dynamic.data.mapping.model.DDMTemplateConstants}.\n\t * @param  language the template's script language. For more information,\n\t *         see {@link\n\t *         com.liferay.dynamic.data.mapping.model.DDMTemplateConstants}.\n\t * @param  script the template's script\n\t * @param  cacheable whether the template is cacheable\n\t * @param  smallImage whether the template has a small image\n\t * @param  smallImageURL the template's small image URL (optionally\n\t *         <code>null<\/code>)\n\t * @param  smallImageFile the template's small image file (optionally\n\t *         <code>null<\/code>)\n\t * @param  serviceContext the service context to be applied. Must have the\n\t *         <code>ddmResource<\/code> attribute to check permissions. Can set\n\t *         the UUID, creation date, modification date, guest permissions,\n\t *         and group permissions for the template.\n\t * @return the template\n\t * @throws PortalException if the user did not have permission to add the\n\t *         template or if a portal exception occurred\n\t */\n\t@Override\n\tpublic DDMTemplate addTemplate(\n\t\t\tlong groupId, long classNameId, long classPK,\n\t\t\tlong resourceClassNameId, String templateKey,\n\t\t\tMap<Locale, String> nameMap, Map<Locale, String> descriptionMap,\n\t\t\tString type, String mode, String language, String script,\n\t\t\tboolean cacheable, boolean smallImage, String smallImageURL,\n\t\t\tFile smallImageFile, ServiceContext serviceContext)\n\t\tthrows PortalException {\n\n\t\tDDMPermissionHandler ddmPermissionHandler =\n\t\t\tDDMUtil.getDDMPermissionHandler(resourceClassNameId);\n\n\t\tDDMPermission.check(\n\t\t\tgetPermissionChecker(), serviceContext.getScopeGroupId(),\n\t\t\tddmPermissionHandler.getResourceName(classNameId),\n\t\t\tddmPermissionHandler.getAddTemplateActionId());\n\n\t\treturn ddmTemplateLocalService.addTemplate(\n\t\t\tgetUserId(), groupId, classNameId, classPK, resourceClassNameId,\n\t\t\ttemplateKey, nameMap, descriptionMap, type, mode, language, script,\n\t\t\tcacheable, smallImage, smallImageURL, smallImageFile,\n\t\t\tserviceContext);\n\t}","id":13511,"modified_method":"/**\n\t * Adds a template with additional parameters.\n\t *\n\t * @param  groupId the primary key of the group\n\t * @param  classNameId the primary key of the class name for template's\n\t *         related model\n\t * @param  classPK the primary key of the template's related entity\n\t * @param  resourceClassNameId the primary key of the class name for\n\t *         template's resource model\n\t * @param  templateKey the unique string identifying the template\n\t *         (optionally <code>null<\/code>)\n\t * @param  nameMap the template's locales and localized names\n\t * @param  descriptionMap the template's locales and localized descriptions\n\t * @param  type the template's type. For more information, see {@link\n\t *         com.liferay.dynamic.data.mapping.model.DDMTemplateConstants}.\n\t * @param  mode the template's mode. For more information, see {@link\n\t *         com.liferay.dynamic.data.mapping.model.DDMTemplateConstants}.\n\t * @param  language the template's script language. For more information,\n\t *         see {@link\n\t *         com.liferay.dynamic.data.mapping.model.DDMTemplateConstants}.\n\t * @param  script the template's script\n\t * @param  cacheable whether the template is cacheable\n\t * @param  smallImage whether the template has a small image\n\t * @param  smallImageURL the template's small image URL (optionally\n\t *         <code>null<\/code>)\n\t * @param  smallImageFile the template's small image file (optionally\n\t *         <code>null<\/code>)\n\t * @param  serviceContext the service context to be applied. Must have the\n\t *         <code>ddmResource<\/code> attribute to check permissions. Can set\n\t *         the UUID, creation date, modification date, guest permissions,\n\t *         and group permissions for the template.\n\t * @return the template\n\t * @throws PortalException if the user did not have permission to add the\n\t *         template or if a portal exception occurred\n\t */\n\t@Override\n\tpublic DDMTemplate addTemplate(\n\t\t\tlong groupId, long classNameId, long classPK,\n\t\t\tlong resourceClassNameId, String templateKey,\n\t\t\tMap<Locale, String> nameMap, Map<Locale, String> descriptionMap,\n\t\t\tString type, String mode, String language, String script,\n\t\t\tboolean cacheable, boolean smallImage, String smallImageURL,\n\t\t\tFile smallImageFile, ServiceContext serviceContext)\n\t\tthrows PortalException {\n\n\t\tDDMTemplatePermission.checkAddTemplatePermission(\n\t\t\tgetPermissionChecker(), groupId, classNameId, resourceClassNameId);\n\n\t\treturn ddmTemplateLocalService.addTemplate(\n\t\t\tgetUserId(), groupId, classNameId, classPK, resourceClassNameId,\n\t\t\ttemplateKey, nameMap, descriptionMap, type, mode, language, script,\n\t\t\tcacheable, smallImage, smallImageURL, smallImageFile,\n\t\t\tserviceContext);\n\t}","commit_id":"0b530085b6a2879732d3f22a7e8ee82adb9da4a3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n\t * Copies all the templates matching the class name ID, class PK, and type.\n\t * This method creates new templates, extracting all the values from the old\n\t * ones and updating their class PKs.\n\t *\n\t * @param  classNameId the primary key of the class name for template's\n\t *         related model\n\t * @param  oldClassPK the primary key of the old template's related entity\n\t * @param  resourceClassNameId the primary key of the class name for\n\t *         template's resource model\n\t * @param  newClassPK the primary key of the new template's related entity\n\t * @param  type the template's type. For more information, see {@link\n\t *         com.liferay.dynamic.data.mapping.model.DDMTemplateConstants}.\n\t * @param  serviceContext the service context to be applied. Must have the\n\t *         <code>ddmResource<\/code> attribute to check permissions. Can set\n\t *         the UUID, creation date, modification date, guest permissions,\n\t *         and group permissions for the template.\n\t * @return the new template\n\t * @throws PortalException if the user did not have permission to add the\n\t *         template or if a portal exception occurred\n\t */\n\t@Override\n\tpublic List<DDMTemplate> copyTemplates(\n\t\t\tlong classNameId, long oldClassPK, long resourceClassNameId,\n\t\t\tlong newClassPK, String type, ServiceContext serviceContext)\n\t\tthrows PortalException {\n\n\t\tDDMPermissionHandler ddmPermissionHandler =\n\t\t\tDDMUtil.getDDMPermissionHandler(resourceClassNameId);\n\n\t\tDDMPermission.check(\n\t\t\tgetPermissionChecker(), serviceContext.getScopeGroupId(),\n\t\t\tddmPermissionHandler.getResourceName(classNameId),\n\t\t\tddmPermissionHandler.getAddTemplateActionId());\n\n\t\treturn ddmTemplateLocalService.copyTemplates(\n\t\t\tgetUserId(), classNameId, oldClassPK, newClassPK, type,\n\t\t\tserviceContext);\n\t}","id":13512,"modified_method":"/**\n\t * Copies all the templates matching the class name ID, class PK, and type.\n\t * This method creates new templates, extracting all the values from the old\n\t * ones and updating their class PKs.\n\t *\n\t * @param  classNameId the primary key of the class name for template's\n\t *         related model\n\t * @param  oldClassPK the primary key of the old template's related entity\n\t * @param  resourceClassNameId the primary key of the class name for\n\t *         template's resource model\n\t * @param  newClassPK the primary key of the new template's related entity\n\t * @param  type the template's type. For more information, see {@link\n\t *         com.liferay.dynamic.data.mapping.model.DDMTemplateConstants}.\n\t * @param  serviceContext the service context to be applied. Must have the\n\t *         <code>ddmResource<\/code> attribute to check permissions. Can set\n\t *         the UUID, creation date, modification date, guest permissions,\n\t *         and group permissions for the template.\n\t * @return the new template\n\t * @throws PortalException if the user did not have permission to add the\n\t *         template or if a portal exception occurred\n\t */\n\t@Override\n\tpublic List<DDMTemplate> copyTemplates(\n\t\t\tlong classNameId, long oldClassPK, long resourceClassNameId,\n\t\t\tlong newClassPK, String type, ServiceContext serviceContext)\n\t\tthrows PortalException {\n\n\t\tDDMTemplatePermission.checkAddTemplatePermission(\n\t\t\tgetPermissionChecker(), serviceContext.getScopeGroupId(),\n\t\t\tclassNameId, resourceClassNameId);\n\n\t\treturn ddmTemplateLocalService.copyTemplates(\n\t\t\tgetUserId(), classNameId, oldClassPK, newClassPK, type,\n\t\t\tserviceContext);\n\t}","commit_id":"0b530085b6a2879732d3f22a7e8ee82adb9da4a3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic void revertTemplate(\n\t\t\tlong templateId, String version, ServiceContext serviceContext)\n\t\tthrows PortalException {\n\n\t\tDDMTemplatePermission.check(\n\t\t\tgetPermissionChecker(), templateId, ActionKeys.UPDATE);\n\n\t\tddmTemplateLocalService.revertTemplate(\n\t\t\tgetUserId(), templateId, version, serviceContext);\n\t}","id":13513,"modified_method":"@Override\n\tpublic void revertTemplate(\n\t\t\tlong templateId, String version, ServiceContext serviceContext)\n\t\tthrows PortalException {\n\n\t\tDDMTemplatePermission.check(\n\t\t\tgetPermissionChecker(), templateId, ActionKeys.VIEW);\n\n\t\tddmTemplateLocalService.revertTemplate(\n\t\t\tgetUserId(), templateId, version, serviceContext);\n\t}","commit_id":"0b530085b6a2879732d3f22a7e8ee82adb9da4a3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Override\n\tpublic DDMTemplate copyTemplate(\n\t\t\tlong templateId, ServiceContext serviceContext)\n\t\tthrows PortalException {\n\n\t\tDDMTemplate template = ddmTemplatePersistence.findByPrimaryKey(\n\t\t\ttemplateId);\n\n\t\tDDMPermissionHandler ddmPermissionHandler =\n\t\t\tDDMUtil.getDDMPermissionHandler(template.getResourceClassNameId());\n\n\t\tDDMPermission.check(\n\t\t\tgetPermissionChecker(), serviceContext.getScopeGroupId(),\n\t\t\tddmPermissionHandler.getResourceName(template.getClassNameId()),\n\t\t\tddmPermissionHandler.getAddTemplateActionId());\n\n\t\treturn ddmTemplateLocalService.copyTemplate(\n\t\t\tgetUserId(), templateId, serviceContext);\n\t}","id":13514,"modified_method":"@Override\n\tpublic DDMTemplate copyTemplate(\n\t\t\tlong templateId, ServiceContext serviceContext)\n\t\tthrows PortalException {\n\n\t\tDDMTemplate template = ddmTemplatePersistence.findByPrimaryKey(\n\t\t\ttemplateId);\n\n\t\tDDMTemplatePermission.checkAddTemplatePermission(\n\t\t\tgetPermissionChecker(), serviceContext.getScopeGroupId(),\n\t\t\ttemplate.getClassNameId(), template.getResourceClassNameId());\n\n\t\treturn ddmTemplateLocalService.copyTemplate(\n\t\t\tgetUserId(), templateId, serviceContext);\n\t}","commit_id":"0b530085b6a2879732d3f22a7e8ee82adb9da4a3","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public GenerationFailedException(GenerationFailueInfo failueInfo, Throwable cause) {\n    super(failueInfo.getMessage(), cause);\n    myFailueInfo = failueInfo;\n  }","id":13515,"modified_method":"public GenerationFailedException(String message, SNode inputNode, SNode templateNode, SNode ruleNode) {\n    super(message);\n    logError(message, inputNode, templateNode, ruleNode);\n  }","commit_id":"37339e9a25d69c5a3112f83043943a176c21ddfd","url":"https://github.com/JetBrains/MPS"},{"original_method":"public GenerationFailedException(GenerationFailueInfo failueInfo) {\n    super(failueInfo.getMessage());\n    myFailueInfo = failueInfo;\n  }","id":13516,"modified_method":"public GenerationFailedException(String message, SNode hintNode, Throwable cause) {\n    super(toBetterMessage(message, cause), toBetterCause(cause));\n    LOG.error(message, hintNode);\n  }","commit_id":"37339e9a25d69c5a3112f83043943a176c21ddfd","url":"https://github.com/JetBrains/MPS"},{"original_method":"public GenerationFailedException(String message, Throwable cause) {\n    super(message, cause);\n  }","id":13517,"modified_method":"public GenerationFailedException(String message, SNode inputNode, SNode templateNode, SNode ruleNode, Throwable cause) {\n    super(toBetterMessage(message, cause), toBetterCause(cause));\n    logError(getMessage(), inputNode, templateNode, ruleNode);\n  }","commit_id":"37339e9a25d69c5a3112f83043943a176c21ddfd","url":"https://github.com/JetBrains/MPS"},{"original_method":"public GenerationFailedException(String message) {\n    super(message);\n  }","id":13518,"modified_method":"public GenerationFailedException(String message) {\n    super(message);\n    logError(message, null, null, null);\n  }","commit_id":"37339e9a25d69c5a3112f83043943a176c21ddfd","url":"https://github.com/JetBrains/MPS"},{"original_method":"private GenerationStatus generateModel_step(SModel inputModel,\n                                              AbstractGenerationStepController stepController)\n    throws ClassNotFoundException,\n    NoSuchMethodException,\n    IllegalAccessException,\n    InvocationTargetException,\n    InstantiationException {\n\n    myInvocationCount++;\n    myTransientModelsCount = 0;\n    addProgressMessage(MessageKind.INFORMATION, \"generating model \\\"\" + inputModel.getUID() + \"\\\"\");\n\n    if (stepController.getCurrentMappings().isEmpty()) {\n      addProgressMessage(MessageKind.WARNING, \"skip model \\\"\" + inputModel.getUID() + \"\\\" : no generator avalable\");\n      return new GenerationStatus(inputModel, null, null, false, false, false);\n    }\n    printGenerationStepData(stepController, inputModel);\n\n    // -- replace context\n    mySessionContext = new GenerationSessionContext(myInvocationContext, inputModel, stepController, mySessionContext);\n\n    // -- replace generator\n    ITemplateGenerator generator = new TemplateGenerator(mySessionContext, myProgressMonitor);\n    GenerationStatus status;\n    try {\n      SModel outputModel = generateModel_stepIntern(inputModel, generator);\n      boolean wasErrors = generator.getErrorCount() > 0;\n      boolean wasWarnigns = generator.getWarningCount() > 0;\n      status = new GenerationStatus(inputModel, outputModel, mySessionContext.getTraceMap(), wasErrors, wasWarnigns, false);\n      addMessage(status.isError() ? MessageKind.WARNING : MessageKind.INFORMATION, \"model \\\"\" + inputModel.getUID() + \"\\\" has been generated \" + (status.isError() ? \"with errors\" : \"successfully\"));\n    } catch (GenerationCanceledException gce) {\n      throw gce;//rethrow it for not to be caught in the last catch block\n    } catch (GenerationFailedException gfe) {\n      LOG.error(gfe);\n      myProgressMonitor.addText(gfe.toString());\n      GenerationFailueInfo failueInfo = gfe.getFailueInfo();\n      if (failueInfo != null) {\n        for (Message message : failueInfo.createMessages()) {\n          addMessage(message);\n        }\n      }\n      addMessage(MessageKind.ERROR, \"model \\\"\" + inputModel.getUID() + \"\\\" generation failed : \" + gfe);\n      status = new GenerationStatus.ERROR(inputModel);\n    } catch (Throwable e) {\n      LOG.error(e);\n      myProgressMonitor.addText(e.toString());\n      addMessage(MessageKind.ERROR, \"model \\\"\" + inputModel.getUID() + \"\\\" generation failed : \" + e);\n      status = new GenerationStatus.ERROR(inputModel);\n    }\n\n    return status;\n  }","id":13519,"modified_method":"private GenerationStatus generateModel_step(SModel inputModel,\n                                              AbstractGenerationStepController stepController)\n    throws ClassNotFoundException,\n    NoSuchMethodException,\n    IllegalAccessException,\n    InvocationTargetException,\n    InstantiationException {\n\n    myInvocationCount++;\n    myTransientModelsCount = 0;\n    addProgressMessage(MessageKind.INFORMATION, \"generating model \\\"\" + inputModel.getUID() + \"\\\"\");\n\n    if (stepController.getCurrentMappings().isEmpty()) {\n      addProgressMessage(MessageKind.WARNING, \"skip model \\\"\" + inputModel.getUID() + \"\\\" : no generator avalable\");\n      return new GenerationStatus(inputModel, null, null, false, false, false);\n    }\n    printGenerationStepData(stepController, inputModel);\n\n    // -- replace context\n    mySessionContext = new GenerationSessionContext(myInvocationContext, inputModel, stepController, mySessionContext);\n\n    // -- replace generator\n    ITemplateGenerator generator = new TemplateGenerator(mySessionContext, myProgressMonitor);\n    GenerationStatus status;\n    try {\n      SModel outputModel = generateModel_stepIntern(inputModel, generator);\n      boolean wasErrors = generator.getErrorCount() > 0;\n      boolean wasWarnigns = generator.getWarningCount() > 0;\n      status = new GenerationStatus(inputModel, outputModel, mySessionContext.getTraceMap(), wasErrors, wasWarnigns, false);\n      addMessage(status.isError() ? MessageKind.WARNING : MessageKind.INFORMATION, \"model \\\"\" + inputModel.getUID() + \"\\\" has been generated \" + (status.isError() ? \"with errors\" : \"successfully\"));\n    } catch (GenerationCanceledException gce) {\n      throw gce;//rethrow it for not to be caught in the last catch block\n    } catch (GenerationFailedException gfe) {\n      LOG.error(gfe);\n      myProgressMonitor.addText(gfe.toString());\n      addMessage(MessageKind.ERROR, \"model \\\"\" + inputModel.getUID() + \"\\\" generation failed : \" + gfe);\n      status = new GenerationStatus.ERROR(inputModel);\n    } catch (Throwable e) {\n      LOG.error(e);\n      myProgressMonitor.addText(e.toString());\n      addMessage(MessageKind.ERROR, \"model \\\"\" + inputModel.getUID() + \"\\\" generation failed : \" + e);\n      status = new GenerationStatus.ERROR(inputModel);\n    }\n\n    return status;\n  }","commit_id":"37339e9a25d69c5a3112f83043943a176c21ddfd","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static List<SNode> applyReductionRule_internal(SNode inputNode, Reduction_MappingRule rule, TemplateGenerator generator)\n    throws\n    DismissTopMappingRuleException,\n    AbandonRuleInputException,\n    GenerationFailedException {\n\n    SNode reductionTemplateNode = null;\n    String ruleMappingName = getMappingName(rule, null);\n    String mappingName = null;\n    RuleConsequence ruleConsequence = rule.getRuleConsequence();\n    if (ruleConsequence != null) {\n      Pair<SNode, String> nodeAndMappingName = getTemplateNodeFromRuleConsequence(ruleConsequence, inputNode, rule.getNode(), generator);\n      if (nodeAndMappingName == null) {\n        generator.showErrorMessage(inputNode, null, ruleConsequence.getNode(), \"error processing reduction rule consequence\");\n        return null;\n      }\n      reductionTemplateNode = nodeAndMappingName.o1;\n      mappingName = nodeAndMappingName.o2 != null ? nodeAndMappingName.o2 : ruleMappingName;\n    } else {\n      // old\n      TemplateDeclaration template = rule.getTemplate();\n      if (template == null) {\n        generator.showErrorMessage(inputNode, null, rule.getNode(), \"error processing reduction rule: no template\");\n        return null;\n      }\n\n      TemplateFragment fragment = getFragmentFromTemplate(template, inputNode, rule.getNode(), generator);\n      if (fragment != null) {\n        reductionTemplateNode = fragment.getParent().getNode();\n        mappingName = getMappingName(fragment, ruleMappingName);\n      }\n    }\n\n    if (reductionTemplateNode == null) {\n      generator.showErrorMessage(inputNode, null, rule.getNode(), \"error processing reduction rule\");\n      return new ArrayList<SNode>();\n    }\n\n    try {\n      return TemplateProcessor.createOutputNodesForTemplateNode(mappingName, reductionTemplateNode, inputNode, generator);\n    } catch (DismissTopMappingRuleException e) {\n      throw e;\n    } catch (TemplateProcessingFailureException e) {\n      generator.showErrorMessage(inputNode, reductionTemplateNode, rule.getNode(), \"error processing reduction rule\");\n    } catch (GenerationFailedException e) {\n      if (e.getFailueInfo() != null) e.getFailueInfo().setRuleNode(rule.getNode());\n      throw e;\n    } catch (Throwable t) {\n      LOG.error(t, BaseAdapter.fromNode(reductionTemplateNode));\n      generator.showErrorMessage(inputNode, reductionTemplateNode, rule.getNode(), \"error processing reduction rule\");\n    }\n    return new ArrayList<SNode>(1);\n  }","id":13520,"modified_method":"private static List<SNode> applyReductionRule_internal(SNode inputNode, Reduction_MappingRule rule, TemplateGenerator generator)\n    throws\n    DismissTopMappingRuleException,\n    AbandonRuleInputException,\n    GenerationFailedException {\n\n    SNode reductionTemplateNode = null;\n    String ruleMappingName = getMappingName(rule, null);\n    String mappingName = null;\n    RuleConsequence ruleConsequence = rule.getRuleConsequence();\n    if (ruleConsequence != null) {\n      Pair<SNode, String> nodeAndMappingName = getTemplateNodeFromRuleConsequence(ruleConsequence, inputNode, rule.getNode(), generator);\n      if (nodeAndMappingName == null) {\n        generator.showErrorMessage(inputNode, null, ruleConsequence.getNode(), \"error processing reduction rule consequence\");\n        return null;\n      }\n      reductionTemplateNode = nodeAndMappingName.o1;\n      mappingName = nodeAndMappingName.o2 != null ? nodeAndMappingName.o2 : ruleMappingName;\n    } else {\n      // old\n      TemplateDeclaration template = rule.getTemplate();\n      if (template == null) {\n        generator.showErrorMessage(inputNode, null, rule.getNode(), \"error processing reduction rule: no template\");\n        return null;\n      }\n\n      TemplateFragment fragment = getFragmentFromTemplate(template, inputNode, rule.getNode(), generator);\n      if (fragment != null) {\n        reductionTemplateNode = fragment.getParent().getNode();\n        mappingName = getMappingName(fragment, ruleMappingName);\n      }\n    }\n\n    if (reductionTemplateNode == null) {\n      generator.showErrorMessage(inputNode, null, rule.getNode(), \"error processing reduction rule\");\n      return new ArrayList<SNode>();\n    }\n\n    try {\n      return TemplateProcessor.createOutputNodesForTemplateNode(mappingName, reductionTemplateNode, inputNode, generator);\n    } catch (DismissTopMappingRuleException e) {\n      throw e;\n    } catch (TemplateProcessingFailureException e) {\n      generator.showErrorMessage(inputNode, reductionTemplateNode, rule.getNode(), \"error processing reduction rule\");\n    } catch (GenerationFailedException e) {\n      LOG.error(\"-- was rule: \" + rule.getNode().getDebugText(), rule.getNode());\n      throw e;\n    } catch (Throwable t) {\n      LOG.error(t, BaseAdapter.fromNode(reductionTemplateNode));\n      generator.showErrorMessage(inputNode, reductionTemplateNode, rule.getNode(), \"error processing reduction rule\");\n    }\n    return new ArrayList<SNode>(1);\n  }","commit_id":"37339e9a25d69c5a3112f83043943a176c21ddfd","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static void executeMappingScript(MappingScript mappingScript, SModel model, ITemplateGenerator generator) throws GenerationFailedException {\n    MappingScript_CodeBlock codeBlock = mappingScript.getCodeBlock();\n    if (codeBlock == null) {\n      generator.showWarningMessage(mappingScript.getNode(), \"couldn't run script '\" + mappingScript.getName() + \"' : no code-block\");\n      return;\n    }\n\n    String methodName = TemplateFunctionMethodName.mappingScript_CodeBlock(codeBlock.getNode());\n    long startTime = System.currentTimeMillis();\n    try {\n      QueryMethodGenerated.invoke(\n        methodName,\n        generator.getGeneratorSessionContext(),\n        new MappingScriptContext(model, generator),\n        mappingScript.getModel());\n    } /*catch (GenerationFailedException gfe) {\n      generator.showErrorMessage(codeBlock.getNode(), \"error executing script '\" + mappingScript.getName() + \"'\");\n      throw gfe;\n    } */catch (IllegalModelChangeError imce) {\n      generator.showErrorMessage(codeBlock.getNode(), \"error executing script '\" + mappingScript.getName() + \"'\");\n      throw imce;\n    } catch (Throwable t) {\n      generator.showErrorMessage(codeBlock.getNode(), \"error executing script '\" + mappingScript.getName() + \"'\");\n      GenerationFailueInfo failueInfo = new GenerationFailueInfo(\"?\", null, null, mappingScript.getNode(), generator.getGeneratorSessionContext());\n      throw new GenerationFailedException(failueInfo, t);\n    }\n\n    finally {\n      Statistics.getStatistic(Statistics.TPL).add(mappingScript.getModel(), methodName, startTime);\n    }\n  }","id":13521,"modified_method":"public static void executeMappingScript(MappingScript mappingScript, SModel model, ITemplateGenerator generator) throws GenerationFailedException {\n    MappingScript_CodeBlock codeBlock = mappingScript.getCodeBlock();\n    if (codeBlock == null) {\n      generator.showWarningMessage(mappingScript.getNode(), \"couldn't run script '\" + mappingScript.getName() + \"' : no code-block\");\n      return;\n    }\n\n    String methodName = TemplateFunctionMethodName.mappingScript_CodeBlock(codeBlock.getNode());\n    long startTime = System.currentTimeMillis();\n    try {\n      QueryMethodGenerated.invoke(\n        methodName,\n        generator.getGeneratorSessionContext(),\n        new MappingScriptContext(model, generator),\n        mappingScript.getModel());\n    } /*catch (GenerationFailedException gfe) {\n      generator.showErrorMessage(codeBlock.getNode(), \"error executing script '\" + mappingScript.getName() + \"'\");\n      throw gfe;\n    } *//*catch (IllegalModelChangeError imce) {\n      generator.showErrorMessage(codeBlock.getNode(), \"error executing script '\" + mappingScript.getName() + \"'\");\n      throw imce;\n    } */ catch (Throwable t) {\n      throw new GenerationFailedException(\"error executing script '\" + mappingScript.getName() + \"'\", codeBlock.getNode(), t);\n    } finally {\n      Statistics.getStatistic(Statistics.TPL).add(mappingScript.getModel(), methodName, startTime);\n    }\n  }","commit_id":"37339e9a25d69c5a3112f83043943a176c21ddfd","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static void applyRoot_MappingRule(Root_MappingRule rule, TemplateGenerator generator) throws GenerationFailedException {\n    AbstractConceptDeclaration applicableConcept = rule.getApplicableConcept();\n    if (applicableConcept == null) {\n      generator.showErrorMessage(null, null, BaseAdapter.fromAdapter(rule), \"rule has no applicable concept defined\");\n      return;\n    }\n    boolean includeInheritors = rule.getApplyToConceptInheritors();\n    List<SNode> inputNodes = generator.getInputModel().getModelDescriptor().getFastNodeFinder().getNodes(applicableConcept, includeInheritors);\n    for (SNode inputNode : inputNodes) {\n      // do not apply root mapping if root node has been copied from input model on previous micro-step\n      // because some roots can be already mapped and copied as well (if some rule has 'keep root' = true)\n      if (generator.getGeneratorSessionContext().isCopiedRoot(inputNode)) {\n        continue;\n      }\n\n      if (checkCondition(rule.getConditionFunction(), false, inputNode, rule.getNode(), generator)) {\n        generator.getGeneratorSessionContext().getGenerationTracer().pushInputNode(inputNode);\n        generator.getGeneratorSessionContext().getGenerationTracer().pushRule(rule.getNode());\n        boolean wasChanged = generator.isChanged();\n        try {\n          generator.setChanged(true);\n          SNode templateNode = BaseAdapter.fromAdapter(rule.getTemplate());\n          if (templateNode != null) {\n            createRootNodeFromTemplate(getMappingName(rule, null), templateNode, inputNode, generator);\n          } else {\n            generator.showErrorMessage(BaseAdapter.fromAdapter(rule), \"no template is defined for the rule\");\n          }\n          if (inputNode.isRoot() && rule.getKeepSourceRoot() == Options_DefaultTrue.default_) {\n            generator.addRootNotToCopy(inputNode);\n          }\n        } catch (DismissTopMappingRuleException e) {\n          // it's ok, just continue\n          generator.setChanged(wasChanged);\n        } catch (GenerationFailedException e) {\n          if (e.getFailueInfo() != null) e.getFailueInfo().setRuleNode(rule.getNode());\n          throw e;\n        } finally {\n          generator.getGeneratorSessionContext().getGenerationTracer().closeInputNode(inputNode);\n        }\n      }\n    }\n  }","id":13522,"modified_method":"public static void applyRoot_MappingRule(Root_MappingRule rule, TemplateGenerator generator) throws GenerationFailedException {\n    AbstractConceptDeclaration applicableConcept = rule.getApplicableConcept();\n    if (applicableConcept == null) {\n      generator.showErrorMessage(null, null, BaseAdapter.fromAdapter(rule), \"rule has no applicable concept defined\");\n      return;\n    }\n    boolean includeInheritors = rule.getApplyToConceptInheritors();\n    List<SNode> inputNodes = generator.getInputModel().getModelDescriptor().getFastNodeFinder().getNodes(applicableConcept, includeInheritors);\n    for (SNode inputNode : inputNodes) {\n      // do not apply root mapping if root node has been copied from input model on previous micro-step\n      // because some roots can be already mapped and copied as well (if some rule has 'keep root' = true)\n      if (generator.getGeneratorSessionContext().isCopiedRoot(inputNode)) {\n        continue;\n      }\n\n      if (checkCondition(rule.getConditionFunction(), false, inputNode, rule.getNode(), generator)) {\n        generator.getGeneratorSessionContext().getGenerationTracer().pushInputNode(inputNode);\n        generator.getGeneratorSessionContext().getGenerationTracer().pushRule(rule.getNode());\n        boolean wasChanged = generator.isChanged();\n        try {\n          generator.setChanged(true);\n          SNode templateNode = BaseAdapter.fromAdapter(rule.getTemplate());\n          if (templateNode != null) {\n            createRootNodeFromTemplate(getMappingName(rule, null), templateNode, inputNode, generator);\n          } else {\n            generator.showErrorMessage(BaseAdapter.fromAdapter(rule), \"no template is defined for the rule\");\n          }\n          if (inputNode.isRoot() && rule.getKeepSourceRoot() == Options_DefaultTrue.default_) {\n            generator.addRootNotToCopy(inputNode);\n          }\n        } catch (DismissTopMappingRuleException e) {\n          // it's ok, just continue\n          generator.setChanged(wasChanged);\n        } catch (GenerationFailedException e) {\n          LOG.error(\"-- was rule: \" + rule.getNode().getDebugText(), rule.getNode());\n          throw e;\n        } finally {\n          generator.getGeneratorSessionContext().getGenerationTracer().closeInputNode(inputNode);\n        }\n      }\n    }\n  }","commit_id":"37339e9a25d69c5a3112f83043943a176c21ddfd","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static void weaveTemplateDeclaration_intern(SNode inputNode, TemplateDeclaration template, SNode outputContextNode, Weaving_MappingRule rule, TemplateGenerator generator) throws GenerationFailedException {\n    if (template == null) {\n      generator.showErrorMessage(inputNode, null, rule.getNode(), \"couldn't evaluate weaving rule: no template\");\n      return;\n    }\n\n    List<TemplateFragment> templateFragments = getTemplateFragments(template);\n    if (templateFragments.isEmpty()) {\n      generator.showErrorMessage(inputNode, template.getNode(), rule.getNode(), \"nothing to weave: no template fragments found in template\");\n      return;\n    }\n\n    // check fragments: all fragments with <default context> should have the same parent\n    boolean allFragmentsWhichUseDefaultContextHaveSameParent = true;\n    SNode defaultContext = null;\n    for (TemplateFragment templateFragment : templateFragments) {\n      if (templateFragment.getContextNodeQuery() == null) { // uses <default context>\n        SNode fragmentContextNode = BaseAdapter.fromAdapter(templateFragment.getParent().getParent());\n        if (defaultContext == null) {\n          defaultContext = fragmentContextNode;\n        } else if (defaultContext != fragmentContextNode) {\n          allFragmentsWhichUseDefaultContextHaveSameParent = false;\n          break;\n        }\n      }\n    }\n    if (!allFragmentsWhichUseDefaultContextHaveSameParent) {\n      for (TemplateFragment templateFragment : templateFragments) {\n        if (templateFragment.getContextNodeQuery() == null) { // uses <default context>\n          generator.showErrorMessage(null, templateFragment.getNode(), null, \"template fragment uses <default context>: conflicts with other fragments which use <default context>\");\n        }\n      }\n    }\n\n    String ruleMappingName = getMappingName(rule, null);\n    // for each template fragment create output nodes\n    for (TemplateFragment templateFragment : templateFragments) {\n      SNode templateFragmentNode = BaseAdapter.fromAdapter(templateFragment.getParent());\n      SNode contextParentNode = null;\n      try {\n        contextParentNode = getContextNodeForTemplateFragment(inputNode, templateFragmentNode, outputContextNode, generator);\n      } catch (Exception e) {\n        LOG.error(e);\n      }\n      if (contextParentNode != null) {\n        try {\n          List<SNode> outputNodesToWeave = TemplateProcessor.createOutputNodesForTemplateNode(\n            getMappingName(templateFragment, ruleMappingName),\n            templateFragmentNode, inputNode, generator);\n          String childRole = templateFragmentNode.getRole_();\n          for (SNode outputNodeToWeave : outputNodesToWeave) {\n            if (!GeneratorUtil.checkChild(contextParentNode, childRole, outputNodeToWeave)) {\n              LOG.warning(\" -- was input: \" + inputNode.getDebugText(), inputNode);\n              LOG.warning(\" -- was template: \" + templateFragment.getDebugText(), templateFragment);\n              LOG.warning(\" -- was rule: \" + rule.getDebugText(), rule);\n            }\n\n            contextParentNode.addChild(childRole, outputNodeToWeave);\n          }\n        } catch (DismissTopMappingRuleException e) {\n          generator.showErrorMessage(inputNode, templateFragment.getNode(), rule.getNode(), \"dismission of weaving rule is not supported\");\n        } catch (GenerationFailedException e) {\n          if (e.getFailueInfo() != null) e.getFailueInfo().setRuleNode(rule.getNode());\n          throw e;\n        } catch (TemplateProcessingFailureException e) {\n          generator.showErrorMessage(inputNode, templateFragment.getNode(), rule.getNode(), \"error pocessing template fragment\");\n          generator.showInformationMessage(contextParentNode, \" -- was output context node:\");\n        }\n      } else {\n        generator.showErrorMessage(inputNode, templateFragment.getNode(), rule.getNode(), \"couldn't define 'context' for template fragment\");\n      }\n    }\n  }","id":13523,"modified_method":"private static void weaveTemplateDeclaration_intern(SNode inputNode, TemplateDeclaration template, SNode outputContextNode, Weaving_MappingRule rule, TemplateGenerator generator) throws GenerationFailedException {\n    if (template == null) {\n      generator.showErrorMessage(inputNode, null, rule.getNode(), \"couldn't evaluate weaving rule: no template\");\n      return;\n    }\n\n    List<TemplateFragment> templateFragments = getTemplateFragments(template);\n    if (templateFragments.isEmpty()) {\n      generator.showErrorMessage(inputNode, template.getNode(), rule.getNode(), \"nothing to weave: no template fragments found in template\");\n      return;\n    }\n\n    // check fragments: all fragments with <default context> should have the same parent\n    boolean allFragmentsWhichUseDefaultContextHaveSameParent = true;\n    SNode defaultContext = null;\n    for (TemplateFragment templateFragment : templateFragments) {\n      if (templateFragment.getContextNodeQuery() == null) { // uses <default context>\n        SNode fragmentContextNode = BaseAdapter.fromAdapter(templateFragment.getParent().getParent());\n        if (defaultContext == null) {\n          defaultContext = fragmentContextNode;\n        } else if (defaultContext != fragmentContextNode) {\n          allFragmentsWhichUseDefaultContextHaveSameParent = false;\n          break;\n        }\n      }\n    }\n    if (!allFragmentsWhichUseDefaultContextHaveSameParent) {\n      for (TemplateFragment templateFragment : templateFragments) {\n        if (templateFragment.getContextNodeQuery() == null) { // uses <default context>\n          generator.showErrorMessage(null, templateFragment.getNode(), null, \"template fragment uses <default context>: conflicts with other fragments which use <default context>\");\n        }\n      }\n    }\n\n    String ruleMappingName = getMappingName(rule, null);\n    // for each template fragment create output nodes\n    for (TemplateFragment templateFragment : templateFragments) {\n      SNode templateFragmentNode = BaseAdapter.fromAdapter(templateFragment.getParent());\n      SNode contextParentNode = null;\n      try {\n        contextParentNode = getContextNodeForTemplateFragment(inputNode, templateFragmentNode, outputContextNode, generator);\n      } catch (Exception e) {\n        LOG.error(e);\n      }\n      if (contextParentNode != null) {\n        try {\n          List<SNode> outputNodesToWeave = TemplateProcessor.createOutputNodesForTemplateNode(\n            getMappingName(templateFragment, ruleMappingName),\n            templateFragmentNode, inputNode, generator);\n          String childRole = templateFragmentNode.getRole_();\n          for (SNode outputNodeToWeave : outputNodesToWeave) {\n            if (!GeneratorUtil.checkChild(contextParentNode, childRole, outputNodeToWeave)) {\n              LOG.warning(\" -- was input: \" + inputNode.getDebugText(), inputNode);\n              LOG.warning(\" -- was template: \" + templateFragment.getDebugText(), templateFragment);\n              LOG.warning(\" -- was rule: \" + rule.getDebugText(), rule);\n            }\n\n            contextParentNode.addChild(childRole, outputNodeToWeave);\n          }\n        } catch (DismissTopMappingRuleException e) {\n          generator.showErrorMessage(inputNode, templateFragment.getNode(), rule.getNode(), \"dismission of weaving rule is not supported\");\n        } catch (GenerationFailedException e) {\n          LOG.error(\"-- was rule: \" + rule.getNode().getDebugText(), rule.getNode());\n          throw e;\n        } catch (TemplateProcessingFailureException e) {\n          generator.showErrorMessage(inputNode, templateFragment.getNode(), rule.getNode(), \"error pocessing template fragment\");\n          generator.showInformationMessage(contextParentNode, \" -- was output context node:\");\n        }\n      } else {\n        generator.showErrorMessage(inputNode, templateFragment.getNode(), rule.getNode(), \"couldn't define 'context' for template fragment\");\n      }\n    }\n  }","commit_id":"37339e9a25d69c5a3112f83043943a176c21ddfd","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static void applyCreateRootRule(CreateRootRule createRootRule, TemplateGenerator generator) throws GenerationFailedException {\n    if (checkCondition(createRootRule, generator)) {\n      INamedConcept templateNode = createRootRule.getTemplateNode();\n      if (templateNode == null) {\n        generator.showErrorMessage(null, null, createRootRule.getNode(), \"'create root' rule has no template\");\n      } else {\n        generator.getGeneratorSessionContext().getGenerationTracer().pushRule(createRootRule.getNode());\n        boolean wasChanged = generator.isChanged();\n        try {\n          createRootNodeFromTemplate(\n            getMappingName(createRootRule, null),\n            BaseAdapter.fromAdapter(templateNode), null, generator);\n        } catch (GenerationFailedException e) {\n          if (e.getFailueInfo() != null) e.getFailueInfo().setRuleNode(createRootRule.getNode());\n          throw e;\n        } catch (DismissTopMappingRuleException e) {\n          // it's ok, just continue\n          generator.setChanged(wasChanged);\n        } finally {\n          generator.getGeneratorSessionContext().getGenerationTracer().closeRule(createRootRule.getNode());\n        }\n      }\n    }\n  }","id":13524,"modified_method":"public static void applyCreateRootRule(CreateRootRule createRootRule, TemplateGenerator generator) throws GenerationFailedException {\n    if (checkCondition(createRootRule, generator)) {\n      INamedConcept templateNode = createRootRule.getTemplateNode();\n      if (templateNode == null) {\n        generator.showErrorMessage(null, null, createRootRule.getNode(), \"'create root' rule has no template\");\n      } else {\n        generator.getGeneratorSessionContext().getGenerationTracer().pushRule(createRootRule.getNode());\n        boolean wasChanged = generator.isChanged();\n        try {\n          createRootNodeFromTemplate(\n            getMappingName(createRootRule, null),\n            BaseAdapter.fromAdapter(templateNode), null, generator);\n        } catch (GenerationFailedException e) {\n          LOG.error(\"-- was rule: \" + createRootRule.getNode().getDebugText(), createRootRule.getNode());\n          throw e;\n        } catch (DismissTopMappingRuleException e) {\n          // it's ok, just continue\n          generator.setChanged(wasChanged);\n        } finally {\n          generator.getGeneratorSessionContext().getGenerationTracer().closeRule(createRootRule.getNode());\n        }\n      }\n    }\n  }","commit_id":"37339e9a25d69c5a3112f83043943a176c21ddfd","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static List<SNode> getNewInputNodes(SNode currentInputNode, SourceSubstituteMacro macro, SourceSubstituteMacro_SourceNodesQuery query, ITemplateGenerator generator) throws GenerationFailedException {\n    // new\n    if (query != null) {\n      List<SNode> list = GeneratorUtil.evaluateSourceNodesQuery(currentInputNode, query, generator);\n      if (list != null) {\n        return list;\n      }\n      return new LinkedList<SNode>();\n    }\n\n    // old\n    String sourceQueryAspectMethodName = macro.getSourceQueryAspectMethodName();\n    if (sourceQueryAspectMethodName != null) {\n      String methodName = \"templateSourceQuery_\" + sourceQueryAspectMethodName;\n      Object[] args = new Object[]{currentInputNode, generator};\n      long startTime = System.currentTimeMillis();\n      try {\n        List<SNode> sourceNodes = (List<SNode>) QueryMethod.invoke(methodName, args, macro.getModel());\n        if (sourceNodes != null) {\n          return sourceNodes;\n        }\n        return new LinkedList<SNode>();\n      } finally {\n        Statistics.getStatistic(Statistics.TPL).add(macro.getModel(), methodName, startTime);\n      }\n    }\n\n    throw new GenerationFailedException(new GenerationFailueInfo(\"couldn't evaluate macro query\", currentInputNode, BaseAdapter.fromAdapter(macro), null, generator.getGeneratorSessionContext()));\n  }","id":13525,"modified_method":"private static List<SNode> getNewInputNodes(SNode currentInputNode, SourceSubstituteMacro macro, SourceSubstituteMacro_SourceNodesQuery query, ITemplateGenerator generator) throws GenerationFailedException {\n    // new\n    if (query != null) {\n      List<SNode> list = GeneratorUtil.evaluateSourceNodesQuery(currentInputNode, query, generator);\n      if (list != null) {\n        return list;\n      }\n      return new LinkedList<SNode>();\n    }\n\n    // old\n    String sourceQueryAspectMethodName = macro.getSourceQueryAspectMethodName();\n    if (sourceQueryAspectMethodName != null) {\n      String methodName = \"templateSourceQuery_\" + sourceQueryAspectMethodName;\n      Object[] args = new Object[]{currentInputNode, generator};\n      long startTime = System.currentTimeMillis();\n      try {\n        List<SNode> sourceNodes = (List<SNode>) QueryMethod.invoke(methodName, args, macro.getModel());\n        if (sourceNodes != null) {\n          return sourceNodes;\n        }\n        return new LinkedList<SNode>();\n      } finally {\n        Statistics.getStatistic(Statistics.TPL).add(macro.getModel(), methodName, startTime);\n      }\n    }\n\n    throw new GenerationFailedException(\"couldn't evaluate macro query\", currentInputNode, BaseAdapter.fromAdapter(macro), null);\n  }","commit_id":"37339e9a25d69c5a3112f83043943a176c21ddfd","url":"https://github.com/JetBrains/MPS"},{"original_method":"/**\n   * only applicable to macros, which can yield 1 new output node\n   */\n  public static SNode getNewInputNode(NodeMacro nodeMacro, SNode currentInputNode, ITemplateGenerator generator) throws GenerationFailedException {\n    try {\n      if (nodeMacro instanceof SwitchMacro) {\n        return getNewInputNodeForSwitchMacro(currentInputNode, (SwitchMacro) nodeMacro, generator);\n      } else if (nodeMacro instanceof IncludeMacro) {\n        return getNewInputNode(currentInputNode, (SourceSubstituteMacro) nodeMacro, ((IncludeMacro) nodeMacro).getSourceNodeQuery(), true, generator);\n      }\n    } catch (GenerationFailedException gfe) {\n      throw gfe;\n    } catch (Throwable t) {\n      throw new GenerationFailedException(new GenerationFailueInfo(\"couldn't get new input node\", currentInputNode, nodeMacro.getNode(), null, generator.getGeneratorSessionContext()), t);\n    }\n    throw new GenerationFailedException(new GenerationFailueInfo(\"couldn't get new input node\", currentInputNode, nodeMacro.getNode(), null, generator.getGeneratorSessionContext()));\n  }","id":13526,"modified_method":"/**\n   * only applicable to macros, which can yield 1 new output node\n   */\n  public static SNode getNewInputNode(NodeMacro nodeMacro, SNode currentInputNode, ITemplateGenerator generator) throws GenerationFailedException {\n    try {\n      if (nodeMacro instanceof SwitchMacro) {\n        return getNewInputNodeForSwitchMacro(currentInputNode, (SwitchMacro) nodeMacro, generator);\n      } else if (nodeMacro instanceof IncludeMacro) {\n        return getNewInputNode(currentInputNode, (SourceSubstituteMacro) nodeMacro, ((IncludeMacro) nodeMacro).getSourceNodeQuery(), true, generator);\n      }\n    } catch (Throwable t) {\n      throw new GenerationFailedException(\"couldn't get new input node\", currentInputNode, nodeMacro.getNode(), null, t);\n    }\n    throw new GenerationFailedException(\"couldn't get new input node\", currentInputNode, nodeMacro.getNode(), null);\n  }","commit_id":"37339e9a25d69c5a3112f83043943a176c21ddfd","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static List<SNode> getNewInputNodes(NodeMacro nodeMacro, SNode currentInputNode, ITemplateGenerator generator) throws GenerationFailedException {\n    try {\n      if (nodeMacro instanceof LoopMacro) {\n        return getNewInputNodes(currentInputNode, (SourceSubstituteMacro) nodeMacro, ((LoopMacro) nodeMacro).getSourceNodesQuery(), generator);\n      } else if (nodeMacro instanceof CopySrcListMacro) {\n        return getNewInputNodes(currentInputNode, (SourceSubstituteMacro) nodeMacro, ((CopySrcListMacro) nodeMacro).getSourceNodesQuery(), generator);\n      } else if (nodeMacro instanceof MapSrcListMacro) {\n        return getNewInputNodes(currentInputNode, (SourceSubstituteMacro) nodeMacro, ((MapSrcListMacro) nodeMacro).getSourceNodesQuery(), generator);\n      }\n\n      if (nodeMacro instanceof CopySrcNodeMacro) {\n        List<SNode> result = new ArrayList<SNode>(1);\n        SNode newInputNode = getNewInputNode(currentInputNode, (SourceSubstituteMacro) nodeMacro, ((CopySrcNodeMacro) nodeMacro).getSourceNodeQuery(), false, generator);\n        if (newInputNode != null) {\n          result.add(newInputNode);\n        }\n        return result;\n      } else if (nodeMacro instanceof MapSrcNodeMacro) {\n        List<SNode> result = new ArrayList<SNode>(1);\n        SNode newInputNode = getNewInputNode(currentInputNode, (SourceSubstituteMacro) nodeMacro, ((MapSrcNodeMacro) nodeMacro).getSourceNodeQuery(), true, generator);\n        if (newInputNode != null) {\n          result.add(newInputNode);\n        }\n        return result;\n      }\n\n      if (nodeMacro instanceof SwitchMacro) {\n        throw new GenerationFailedException(new GenerationFailueInfo(\"The SwitchMacro is not supported by getNewInputNodes\", currentInputNode, nodeMacro.getNode(), null, generator.getGeneratorSessionContext()));\n      } else if (nodeMacro instanceof IncludeMacro) {\n        throw new GenerationFailedException(new GenerationFailueInfo(\"The IncludeMacro is not supported by getNewInputNodes\", currentInputNode, nodeMacro.getNode(), null, generator.getGeneratorSessionContext()));\n      }\n\n      // old\n      String sourceQueryAspectMethodName = nodeMacro.getSourceQueryAspectMethodName();\n      if (sourceQueryAspectMethodName != null) {\n        String methodName = \"templateSourceQuery_\" + sourceQueryAspectMethodName;\n        Object[] args = new Object[]{currentInputNode, generator};\n        return (List<SNode>) QueryMethod.invoke(methodName, args, nodeMacro.getModel());\n      }\n\n      // <default> : propagate  current input node\n      List<SNode> list = new ArrayList<SNode>(1);\n      list.add(currentInputNode);\n      return list;\n\n    } catch (GenerationFailedException gfe) {\n      throw gfe;\n    } catch (Throwable t) {\n      throw new GenerationFailedException(new GenerationFailueInfo(\"couldn't get input nodes\", currentInputNode, nodeMacro.getNode(), null, generator.getGeneratorSessionContext()), t);\n    }\n  }","id":13527,"modified_method":"public static List<SNode> getNewInputNodes(NodeMacro nodeMacro, SNode currentInputNode, ITemplateGenerator generator) throws GenerationFailedException {\n    try {\n      if (nodeMacro instanceof LoopMacro) {\n        return getNewInputNodes(currentInputNode, (SourceSubstituteMacro) nodeMacro, ((LoopMacro) nodeMacro).getSourceNodesQuery(), generator);\n      } else if (nodeMacro instanceof CopySrcListMacro) {\n        return getNewInputNodes(currentInputNode, (SourceSubstituteMacro) nodeMacro, ((CopySrcListMacro) nodeMacro).getSourceNodesQuery(), generator);\n      } else if (nodeMacro instanceof MapSrcListMacro) {\n        return getNewInputNodes(currentInputNode, (SourceSubstituteMacro) nodeMacro, ((MapSrcListMacro) nodeMacro).getSourceNodesQuery(), generator);\n      }\n\n      if (nodeMacro instanceof CopySrcNodeMacro) {\n        List<SNode> result = new ArrayList<SNode>(1);\n        SNode newInputNode = getNewInputNode(currentInputNode, (SourceSubstituteMacro) nodeMacro, ((CopySrcNodeMacro) nodeMacro).getSourceNodeQuery(), false, generator);\n        if (newInputNode != null) {\n          result.add(newInputNode);\n        }\n        return result;\n      } else if (nodeMacro instanceof MapSrcNodeMacro) {\n        List<SNode> result = new ArrayList<SNode>(1);\n        SNode newInputNode = getNewInputNode(currentInputNode, (SourceSubstituteMacro) nodeMacro, ((MapSrcNodeMacro) nodeMacro).getSourceNodeQuery(), true, generator);\n        if (newInputNode != null) {\n          result.add(newInputNode);\n        }\n        return result;\n      }\n\n      if (nodeMacro instanceof SwitchMacro) {\n        throw new GenerationFailedException(\"SwitchMacro is not supported by getNewInputNodes\", currentInputNode, nodeMacro.getNode(), null);\n      } else if (nodeMacro instanceof IncludeMacro) {\n        throw new GenerationFailedException(\"IncludeMacro is not supported by getNewInputNodes\", currentInputNode, nodeMacro.getNode(), null);\n      }\n\n      // old\n      String sourceQueryAspectMethodName = nodeMacro.getSourceQueryAspectMethodName();\n      if (sourceQueryAspectMethodName != null) {\n        String methodName = \"templateSourceQuery_\" + sourceQueryAspectMethodName;\n        Object[] args = new Object[]{currentInputNode, generator};\n        return (List<SNode>) QueryMethod.invoke(methodName, args, nodeMacro.getModel());\n      }\n\n      // <default> : propagate  current input node\n      List<SNode> list = new ArrayList<SNode>(1);\n      list.add(currentInputNode);\n      return list;\n\n    } catch (Throwable t) {\n      throw new GenerationFailedException(\"couldn't get input nodes\", currentInputNode, nodeMacro.getNode(), null, t);\n    }\n  }","commit_id":"37339e9a25d69c5a3112f83043943a176c21ddfd","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static boolean checkConditionForIfMacro(SNode inputNode, IfMacro ifMacro, ITemplateGenerator generator) throws GenerationFailedException {\n    // new\n    IfMacro_Condition function = ifMacro.getConditionFunction();\n    long startTime = System.currentTimeMillis();\n    Boolean res = false;\n    if (function != null) {\n      String methodName = TemplateFunctionMethodName.ifMacro_Condition(function.getNode());\n      try {\n        res = (Boolean) QueryMethodGenerated.invoke(\n          methodName,\n          generator.getGeneratorSessionContext(),\n          new IfMacroContext(inputNode, generator.getInputModel(), generator),\n          ifMacro.getModel());\n        return res;\n      } catch (Exception e) {\n        generator.showErrorMessage(inputNode, null, BaseAdapter.fromAdapter(ifMacro), \"couldn't evaluate if-macro condition\");\n        LOG.error(e);\n        return false;\n      } finally {\n        Statistics.getStatistic(Statistics.TPL).add(ifMacro.getModel(), methodName, startTime, res);\n      }\n    }\n\n    // old\n    String conditionAspectId = ifMacro.getConditionAspectId();\n    if (conditionAspectId != null) {\n      String methodName = \"semanticNodeCondition_\" + conditionAspectId;\n      Object[] args = new Object[]{inputNode};\n      try {\n        res = (Boolean) QueryMethod.invokeWithOptionalArg(methodName, args, ifMacro.getModel(), generator.getGeneratorSessionContext());\n        return res;\n      } catch (Exception e) {\n        generator.showErrorMessage(inputNode, null, BaseAdapter.fromAdapter(ifMacro), \"couldn't evaluate if-macro condition: \" + NameUtil.shortNameFromLongName(e.getClass().getName()) + \" : \" + e.getMessage());\n        LOG.error(e);\n        return false;\n      } finally {\n        Statistics.getStatistic(Statistics.TPL).add(ifMacro.getModel(), methodName, startTime, res);\n      }\n    }\n\n    throw new GenerationFailedException(new GenerationFailueInfo(\"couldn't evaluate if-macro condition\", inputNode, BaseAdapter.fromAdapter(ifMacro), null, generator.getGeneratorSessionContext()));\n  }","id":13528,"modified_method":"public static boolean checkConditionForIfMacro(SNode inputNode, IfMacro ifMacro, ITemplateGenerator generator) throws GenerationFailedException {\n    // new\n    IfMacro_Condition function = ifMacro.getConditionFunction();\n    long startTime = System.currentTimeMillis();\n    Boolean res = false;\n    if (function != null) {\n      String methodName = TemplateFunctionMethodName.ifMacro_Condition(function.getNode());\n      try {\n        res = (Boolean) QueryMethodGenerated.invoke(\n          methodName,\n          generator.getGeneratorSessionContext(),\n          new IfMacroContext(inputNode, generator.getInputModel(), generator),\n          ifMacro.getModel());\n        return res;\n      } catch (Exception e) {\n        generator.showErrorMessage(inputNode, null, BaseAdapter.fromAdapter(ifMacro), \"couldn't evaluate if-macro condition\");\n        LOG.error(e);\n        return false;\n      } finally {\n        Statistics.getStatistic(Statistics.TPL).add(ifMacro.getModel(), methodName, startTime, res);\n      }\n    }\n\n    // old\n    String conditionAspectId = ifMacro.getConditionAspectId();\n    if (conditionAspectId != null) {\n      String methodName = \"semanticNodeCondition_\" + conditionAspectId;\n      Object[] args = new Object[]{inputNode};\n      try {\n        res = (Boolean) QueryMethod.invokeWithOptionalArg(methodName, args, ifMacro.getModel(), generator.getGeneratorSessionContext());\n        return res;\n      } catch (Exception e) {\n        generator.showErrorMessage(inputNode, null, BaseAdapter.fromAdapter(ifMacro), \"couldn't evaluate if-macro condition: \" + NameUtil.shortNameFromLongName(e.getClass().getName()) + \" : \" + e.getMessage());\n        LOG.error(e);\n        return false;\n      } finally {\n        Statistics.getStatistic(Statistics.TPL).add(ifMacro.getModel(), methodName, startTime, res);\n      }\n    }\n\n    throw new GenerationFailedException(\"couldn't evaluate if-macro condition\", inputNode, BaseAdapter.fromAdapter(ifMacro), null);\n  }","commit_id":"37339e9a25d69c5a3112f83043943a176c21ddfd","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static SNode getNewInputNode(SNode currentInputNode, SourceSubstituteMacro macro, SourceSubstituteMacro_SourceNodeQuery query, boolean optionalQuery, ITemplateGenerator generator) throws GenerationFailedException {\n    if (query == null) {\n      if (optionalQuery) {\n        // continue with current source node\n        return currentInputNode;\n      }\n      throw new GenerationFailedException(new GenerationFailueInfo(\"couldn't evaluate macro query\", currentInputNode, BaseAdapter.fromAdapter(macro), null, generator.getGeneratorSessionContext()));\n    }\n\n    SNode resultNode = GeneratorUtil.evaluateSourceNodeQuery(currentInputNode, query, generator);\n    return resultNode;\n  }","id":13529,"modified_method":"private static SNode getNewInputNode(SNode currentInputNode, SourceSubstituteMacro macro, SourceSubstituteMacro_SourceNodeQuery query, boolean optionalQuery, ITemplateGenerator generator) throws GenerationFailedException {\n    if (query == null) {\n      if (optionalQuery) {\n        // continue with current source node\n        return currentInputNode;\n      }\n      throw new GenerationFailedException(\"couldn't evaluate macro query\", currentInputNode, BaseAdapter.fromAdapter(macro), null);\n    }\n\n    SNode resultNode = GeneratorUtil.evaluateSourceNodeQuery(currentInputNode, query, generator);\n    return resultNode;\n  }","commit_id":"37339e9a25d69c5a3112f83043943a176c21ddfd","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static List<SNode> createOutputNodesForTemplateNode(String mappingName,\n                                                             SNode templateNode,\n                                                             SNode inputNode,\n                                                             TemplateGenerator generator)\n    throws\n    DismissTopMappingRuleException,\n    TemplateProcessingFailureException,\n    GenerationFailedException {\n    TemplateProcessor templateProcessor = new TemplateProcessor(generator);\n    Map<String, SNode> old = generator.setPreviousInputNodesByMappingName(templateProcessor.myInputNodesByMappingName);\n    try {\n      List<SNode> outputNodels = templateProcessor.createOutputNodesForTemplateNode(mappingName, templateNode, inputNode, 0, true);\n      if (outputNodels == null) {\n        throw new TemplateProcessingFailureException();\n      }\n      return outputNodels;\n    } catch (StackOverflowError e) {\n      // this is critical\n      throw new GenerationFailedException(new GenerationFailueInfo(\"couldn't process template\", inputNode, templateNode, null, generator.getOperationContext()), e);\n    } finally {\n      generator.setPreviousInputNodesByMappingName(old);\n    }\n  }","id":13530,"modified_method":"public static List<SNode> createOutputNodesForTemplateNode(String mappingName,\n                                                             SNode templateNode,\n                                                             SNode inputNode,\n                                                             TemplateGenerator generator)\n    throws\n    DismissTopMappingRuleException,\n    TemplateProcessingFailureException,\n    GenerationFailedException {\n    TemplateProcessor templateProcessor = new TemplateProcessor(generator);\n    Map<String, SNode> old = generator.setPreviousInputNodesByMappingName(templateProcessor.myInputNodesByMappingName);\n    try {\n      List<SNode> outputNodels = templateProcessor.createOutputNodesForTemplateNode(mappingName, templateNode, inputNode, 0, true);\n      if (outputNodels == null) {\n        throw new TemplateProcessingFailureException();\n      }\n      return outputNodels;\n    } catch (StackOverflowError e) {\n      // this is critical\n      throw new GenerationFailedException(\"couldn't process template\", inputNode, templateNode, null, e);\n    } finally {\n      generator.setPreviousInputNodesByMappingName(old);\n    }\n  }","commit_id":"37339e9a25d69c5a3112f83043943a176c21ddfd","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static SNode _quotation_createNode_peeqac_a0b0g0a(Object parameter_1) {\n    PersistenceFacade facade = PersistenceFacade.getInstance();\n    SNode quotedNode_2 = null;\n    quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.DocTypeParameterReference\", null, null, GlobalScope.getInstance(), false);\n    SNodeAccessUtil.setReferenceTarget(quotedNode_2, \"param\", (SNode) parameter_1);\n    return quotedNode_2;\n  }","id":13531,"modified_method":"private static SNode _quotation_createNode_peeqac_a0b0h0a(Object parameter_1) {\n    PersistenceFacade facade = PersistenceFacade.getInstance();\n    SNode quotedNode_2 = null;\n    quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.DocTypeParameterReference\", null, null, GlobalScope.getInstance(), false);\n    SNodeAccessUtil.setReferenceTarget(quotedNode_2, \"param\", (SNode) parameter_1);\n    return quotedNode_2;\n  }","commit_id":"d93baec8eba543becb9779d9eac04f069a54c4fd","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void execute(final SNode node, final EditorContext editorContext) {\n      if ((AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.ClassifierDocComment\"))) != null)) {\n        AttributeOperations.setAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.ClassifierDocComment\")), null);\n        if (editorContext.getSelectedNode() != node) {\n          editorContext.selectWRTFocusPolicy(node);\n        }\n        return;\n      }\n\n      SNodeFactoryOperations.setNewAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.ClassifierDocComment\")), \"jetbrains.mps.baseLanguage.javadoc.structure.ClassifierDocComment\");\n      SNodeFactoryOperations.addNewChild(ListSequence.fromList(SLinkOperations.getTargets(AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.ClassifierDocComment\"))), \"body\", true)).first(), \"part\", \"jetbrains.mps.baseLanguage.javadoc.structure.TextCommentLinePart\");\n\n      //  Type variables \n      for (SNode typeVariableDeclaration : ListSequence.fromList(SLinkOperations.getTargets(node, \"typeVariableDeclaration\", true))) {\n        SNode paramTag = SNodeFactoryOperations.createNewNode(\"jetbrains.mps.baseLanguage.javadoc.structure.ParameterBlockDocTag\", null);\n        SLinkOperations.setTarget(paramTag, \"parameter\", _quotation_createNode_peeqac_a0b0g0a(typeVariableDeclaration), true);\n        ListSequence.fromList(SLinkOperations.getTargets(AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.ClassifierDocComment\"))), \"param\", true)).addElement(paramTag);\n      }\n\n      editorContext.select(ListSequence.fromList(SLinkOperations.getTargets(AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.ClassifierDocComment\"))), \"body\", true)).first());\n    }","id":13532,"modified_method":"public void execute(final SNode node, final EditorContext editorContext) {\n      if ((AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.ClassifierDocComment\"))) != null)) {\n        AttributeOperations.setAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.ClassifierDocComment\")), null);\n        if (editorContext.getSelectedNode() != node) {\n          editorContext.selectWRTFocusPolicy(node);\n        }\n        return;\n      }\n\n      SNodeFactoryOperations.setNewAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.ClassifierDocComment\")), \"jetbrains.mps.baseLanguage.javadoc.structure.ClassifierDocComment\");\n      SNode line = SNodeFactoryOperations.addNewChild(AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.ClassifierDocComment\"))), \"body\", \"jetbrains.mps.baseLanguage.javadoc.structure.CommentLine\");\n      SNodeFactoryOperations.addNewChild(line, \"part\", \"jetbrains.mps.baseLanguage.javadoc.structure.TextCommentLinePart\");\n\n      //  Type variables \n      for (SNode typeVariableDeclaration : ListSequence.fromList(SLinkOperations.getTargets(node, \"typeVariableDeclaration\", true))) {\n        SNode paramTag = SNodeFactoryOperations.createNewNode(\"jetbrains.mps.baseLanguage.javadoc.structure.ParameterBlockDocTag\", null);\n        SLinkOperations.setTarget(paramTag, \"parameter\", _quotation_createNode_peeqac_a0b0h0a(typeVariableDeclaration), true);\n        ListSequence.fromList(SLinkOperations.getTargets(AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.ClassifierDocComment\"))), \"param\", true)).addElement(paramTag);\n      }\n\n      editorContext.select(ListSequence.fromList(SLinkOperations.getTargets(AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.ClassifierDocComment\"))), \"body\", true)).first());\n    }","commit_id":"d93baec8eba543becb9779d9eac04f069a54c4fd","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void execute(final SNode node, final EditorContext editorContext) {\n      if ((AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment\"))) == null)) {\n        SNodeFactoryOperations.setNewAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment\")), \"jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment\");\n      } else {\n        AttributeOperations.setAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment\")), null);\n      }\n      SNodeFactoryOperations.addNewChild(ListSequence.fromList(SLinkOperations.getTargets(AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment\"))), \"body\", true)).first(), \"part\", \"jetbrains.mps.baseLanguage.javadoc.structure.TextCommentLinePart\");\n\n      editorContext.select(ListSequence.fromList(SLinkOperations.getTargets(AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment\"))), \"body\", true)).first());\n    }","id":13533,"modified_method":"public void execute(final SNode node, final EditorContext editorContext) {\n      if ((AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment\"))) == null)) {\n        SNodeFactoryOperations.setNewAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment\")), \"jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment\");\n      } else {\n        AttributeOperations.setAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment\")), null);\n      }\n      SNode line = SNodeFactoryOperations.addNewChild(AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment\"))), \"body\", \"jetbrains.mps.baseLanguage.javadoc.structure.CommentLine\");\n      SNodeFactoryOperations.addNewChild(line, \"part\", \"jetbrains.mps.baseLanguage.javadoc.structure.TextCommentLinePart\");\n\n      editorContext.select(ListSequence.fromList(SLinkOperations.getTargets(AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment\"))), \"body\", true)).first());\n    }","commit_id":"d93baec8eba543becb9779d9eac04f069a54c4fd","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void execute(final SNode node, final EditorContext editorContext) {\n      if ((AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.MethodDocComment\"))) != null)) {\n        AttributeOperations.setAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.MethodDocComment\")), null);\n        if (editorContext.getSelectedNode() != node) {\n          editorContext.selectWRTFocusPolicy(node);\n        }\n\n        return;\n      }\n\n      AttributeOperations.setAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.MethodDocComment\")), SNodeFactoryOperations.createNewNode(\"jetbrains.mps.baseLanguage.javadoc.structure.MethodDocComment\", null));\n      SNodeFactoryOperations.addNewChild(ListSequence.fromList(SLinkOperations.getTargets(AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.MethodDocComment\"))), \"body\", true)).first(), \"part\", \"jetbrains.mps.baseLanguage.javadoc.structure.TextCommentLinePart\");\n\n      //  Method parameters \n      for (SNode parameterDeclaration : ListSequence.fromList(SLinkOperations.getTargets(node, \"parameter\", true))) {\n        SNode paramTag = SNodeFactoryOperations.createNewNode(\"jetbrains.mps.baseLanguage.javadoc.structure.ParameterBlockDocTag\", null);\n        SLinkOperations.setTarget(paramTag, \"parameter\", _quotation_createNode_i2k1f8_a0b0g0a(parameterDeclaration), true);\n        ListSequence.fromList(SLinkOperations.getTargets(AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.MethodDocComment\"))), \"param\", true)).addElement(paramTag);\n      }\n\n      //  Type variables \n      for (SNode typeVariableDeclaration : ListSequence.fromList(SLinkOperations.getTargets(node, \"typeVariableDeclaration\", true))) {\n        SNode paramTag = SNodeFactoryOperations.createNewNode(\"jetbrains.mps.baseLanguage.javadoc.structure.ParameterBlockDocTag\", null);\n        SLinkOperations.setTarget(paramTag, \"parameter\", _quotation_createNode_i2k1f8_a0b0j0a(typeVariableDeclaration), true);\n        ListSequence.fromList(SLinkOperations.getTargets(AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.MethodDocComment\"))), \"param\", true)).addElement(paramTag);\n      }\n\n      //  Thrown exceptions \n      for (SNode throwsItem : ListSequence.fromList(SLinkOperations.getTargets(node, \"throwsItem\", true))) {\n        SNode throwsTag = SNodeFactoryOperations.createNewNode(\"jetbrains.mps.baseLanguage.javadoc.structure.ThrowsBlockDocTag\", null);\n        SLinkOperations.setTarget(throwsTag, \"exceptionType\", SNodeOperations.copyNode(throwsItem), true);\n        ListSequence.fromList(SLinkOperations.getTargets(AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.MethodDocComment\"))), \"throwsTag\", true)).addElement(throwsTag);\n      }\n\n      //  Return value \n      if (!(SNodeOperations.isInstanceOf(SLinkOperations.getTarget(node, \"returnType\", true), \"jetbrains.mps.baseLanguage.structure.VoidType\"))) {\n        SLinkOperations.setTarget(AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.MethodDocComment\"))), \"return\", SNodeFactoryOperations.createNewNode(\"jetbrains.mps.baseLanguage.javadoc.structure.ReturnBlockDocTag\", null), true);\n      }\n\n      editorContext.select(ListSequence.fromList(SLinkOperations.getTargets(AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.MethodDocComment\"))), \"body\", true)).first());\n    }","id":13534,"modified_method":"public void execute(final SNode node, final EditorContext editorContext) {\n      if ((AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.MethodDocComment\"))) != null)) {\n        AttributeOperations.setAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.MethodDocComment\")), null);\n        if (editorContext.getSelectedNode() != node) {\n          editorContext.selectWRTFocusPolicy(node);\n        }\n\n        return;\n      }\n\n      AttributeOperations.setAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.MethodDocComment\")), SNodeFactoryOperations.createNewNode(\"jetbrains.mps.baseLanguage.javadoc.structure.MethodDocComment\", null));\n      SNode line = SNodeFactoryOperations.addNewChild(AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.MethodDocComment\"))), \"body\", \"jetbrains.mps.baseLanguage.javadoc.structure.CommentLine\");\n      SNodeFactoryOperations.addNewChild(line, \"part\", \"jetbrains.mps.baseLanguage.javadoc.structure.TextCommentLinePart\");\n\n      //  Method parameters \n      for (SNode parameterDeclaration : ListSequence.fromList(SLinkOperations.getTargets(node, \"parameter\", true))) {\n        SNode paramTag = SNodeFactoryOperations.createNewNode(\"jetbrains.mps.baseLanguage.javadoc.structure.ParameterBlockDocTag\", null);\n        SLinkOperations.setTarget(paramTag, \"parameter\", _quotation_createNode_i2k1f8_a0b0h0a(parameterDeclaration), true);\n        ListSequence.fromList(SLinkOperations.getTargets(AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.MethodDocComment\"))), \"param\", true)).addElement(paramTag);\n      }\n\n      //  Type variables \n      for (SNode typeVariableDeclaration : ListSequence.fromList(SLinkOperations.getTargets(node, \"typeVariableDeclaration\", true))) {\n        SNode paramTag = SNodeFactoryOperations.createNewNode(\"jetbrains.mps.baseLanguage.javadoc.structure.ParameterBlockDocTag\", null);\n        SLinkOperations.setTarget(paramTag, \"parameter\", _quotation_createNode_i2k1f8_a0b0k0a(typeVariableDeclaration), true);\n        ListSequence.fromList(SLinkOperations.getTargets(AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.MethodDocComment\"))), \"param\", true)).addElement(paramTag);\n      }\n\n      //  Thrown exceptions \n      for (SNode throwsItem : ListSequence.fromList(SLinkOperations.getTargets(node, \"throwsItem\", true))) {\n        SNode throwsTag = SNodeFactoryOperations.createNewNode(\"jetbrains.mps.baseLanguage.javadoc.structure.ThrowsBlockDocTag\", null);\n        SLinkOperations.setTarget(throwsTag, \"exceptionType\", SNodeOperations.copyNode(throwsItem), true);\n        ListSequence.fromList(SLinkOperations.getTargets(AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.MethodDocComment\"))), \"throwsTag\", true)).addElement(throwsTag);\n      }\n\n      //  Return value \n      if (!(SNodeOperations.isInstanceOf(SLinkOperations.getTarget(node, \"returnType\", true), \"jetbrains.mps.baseLanguage.structure.VoidType\"))) {\n        SLinkOperations.setTarget(AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.MethodDocComment\"))), \"return\", SNodeFactoryOperations.createNewNode(\"jetbrains.mps.baseLanguage.javadoc.structure.ReturnBlockDocTag\", null), true);\n      }\n\n      editorContext.select(ListSequence.fromList(SLinkOperations.getTargets(AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.MethodDocComment\"))), \"body\", true)).first());\n    }","commit_id":"d93baec8eba543becb9779d9eac04f069a54c4fd","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static SNode _quotation_createNode_i2k1f8_a0b0j0a(Object parameter_1) {\n    PersistenceFacade facade = PersistenceFacade.getInstance();\n    SNode quotedNode_2 = null;\n    quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.DocTypeParameterReference\", null, null, GlobalScope.getInstance(), false);\n    SNodeAccessUtil.setReferenceTarget(quotedNode_2, \"param\", (SNode) parameter_1);\n    return quotedNode_2;\n  }","id":13535,"modified_method":"private static SNode _quotation_createNode_i2k1f8_a0b0k0a(Object parameter_1) {\n    PersistenceFacade facade = PersistenceFacade.getInstance();\n    SNode quotedNode_2 = null;\n    quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.DocTypeParameterReference\", null, null, GlobalScope.getInstance(), false);\n    SNodeAccessUtil.setReferenceTarget(quotedNode_2, \"param\", (SNode) parameter_1);\n    return quotedNode_2;\n  }","commit_id":"d93baec8eba543becb9779d9eac04f069a54c4fd","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static SNode _quotation_createNode_i2k1f8_a0b0g0a(Object parameter_1) {\n    PersistenceFacade facade = PersistenceFacade.getInstance();\n    SNode quotedNode_2 = null;\n    quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.DocMethodParameterReference\", null, null, GlobalScope.getInstance(), false);\n    SNodeAccessUtil.setReferenceTarget(quotedNode_2, \"param\", (SNode) parameter_1);\n    return quotedNode_2;\n  }","id":13536,"modified_method":"private static SNode _quotation_createNode_i2k1f8_a0b0h0a(Object parameter_1) {\n    PersistenceFacade facade = PersistenceFacade.getInstance();\n    SNode quotedNode_2 = null;\n    quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.DocMethodParameterReference\", null, null, GlobalScope.getInstance(), false);\n    SNodeAccessUtil.setReferenceTarget(quotedNode_2, \"param\", (SNode) parameter_1);\n    return quotedNode_2;\n  }","commit_id":"d93baec8eba543becb9779d9eac04f069a54c4fd","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void execute(final SNode node, final EditorContext editorContext) {\n      if ((AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment\"))) == null)) {\n        SNodeFactoryOperations.setNewAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment\")), \"jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment\");\n        SNodeFactoryOperations.addNewChild(ListSequence.fromList(SLinkOperations.getTargets(AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment\"))), \"body\", true)).first(), \"part\", \"jetbrains.mps.baseLanguage.javadoc.structure.TextCommentLinePart\");\n      } else {\n        AttributeOperations.setAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment\")), null);\n      }\n      editorContext.select(ListSequence.fromList(SLinkOperations.getTargets(AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment\"))), \"body\", true)).first());\n    }","id":13537,"modified_method":"public void execute(final SNode node, final EditorContext editorContext) {\n      if ((AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment\"))) == null)) {\n        SNodeFactoryOperations.setNewAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment\")), \"jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment\");\n        SNode line = SNodeFactoryOperations.addNewChild(AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment\"))), \"body\", \"jetbrains.mps.baseLanguage.javadoc.structure.CommentLine\");\n        SNodeFactoryOperations.addNewChild(line, \"part\", \"jetbrains.mps.baseLanguage.javadoc.structure.TextCommentLinePart\");\n      } else {\n        AttributeOperations.setAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment\")), null);\n      }\n      editorContext.select(ListSequence.fromList(SLinkOperations.getTargets(AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration(\"jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment\"))), \"body\", true)).first());\n    }","commit_id":"d93baec8eba543becb9779d9eac04f069a54c4fd","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static SNode divideLineBetweenCaretAndInsertNewLine(SNode node, int index1, int index2, String text) {\n    String leftPart = text.substring(0, index1);\n    String rightPart = text.substring(index2);\n\n    SNode thisLine = SNodeOperations.cast(SNodeOperations.getParent(node), \"jetbrains.mps.baseLanguage.javadoc.structure.CommentLine\");\n    SNode nextLine = SNodeFactoryOperations.createNewNode(\"jetbrains.mps.baseLanguage.javadoc.structure.CommentLine\", null);\n    SPropertyOperations.set(SNodeOperations.cast(ListSequence.fromList(SLinkOperations.getTargets(nextLine, \"part\", true)).getElement(0), \"jetbrains.mps.baseLanguage.javadoc.structure.TextCommentLinePart\"), \"text\", rightPart);\n    SNodeOperations.insertNextSiblingChild(thisLine, nextLine);\n\n    int indexInParent = SNodeOperations.getIndexInParent(node);\n    SPropertyOperations.set(SNodeOperations.cast(ListSequence.fromList(SLinkOperations.getTargets(thisLine, \"part\", true)).getElement(indexInParent), \"jetbrains.mps.baseLanguage.javadoc.structure.TextCommentLinePart\"), \"text\", leftPart);\n\n    while (ListSequence.fromList(SLinkOperations.getTargets(thisLine, \"part\", true)).count() > indexInParent + 1) {\n      SNode linePart = ListSequence.fromList(SLinkOperations.getTargets(thisLine, \"part\", true)).getElement(indexInParent + 1);\n      SNodeOperations.detachNode(linePart);\n      ListSequence.fromList(SLinkOperations.getTargets(nextLine, \"part\", true)).addElement(linePart);\n    }\n\n    return nextLine;\n  }","id":13538,"modified_method":"public static SNode divideLineBetweenCaretAndInsertNewLine(SNode node, int index1, int index2, String text) {\n    String leftPart = text.substring(0, index1);\n    String rightPart = text.substring(index2);\n\n    SNode thisLine = SNodeOperations.cast(SNodeOperations.getParent(node), \"jetbrains.mps.baseLanguage.javadoc.structure.CommentLine\");\n    SNode nextLine = SNodeFactoryOperations.createNewNode(\"jetbrains.mps.baseLanguage.javadoc.structure.CommentLine\", null);\n    SNodeFactoryOperations.addNewChild(nextLine, \"part\", \"jetbrains.mps.baseLanguage.javadoc.structure.TextCommentLinePart\");\n    SPropertyOperations.set(SNodeOperations.cast(ListSequence.fromList(SLinkOperations.getTargets(nextLine, \"part\", true)).getElement(0), \"jetbrains.mps.baseLanguage.javadoc.structure.TextCommentLinePart\"), \"text\", rightPart);\n    SNodeOperations.insertNextSiblingChild(thisLine, nextLine);\n\n    int indexInParent = SNodeOperations.getIndexInParent(node);\n    SPropertyOperations.set(SNodeOperations.cast(ListSequence.fromList(SLinkOperations.getTargets(thisLine, \"part\", true)).getElement(indexInParent), \"jetbrains.mps.baseLanguage.javadoc.structure.TextCommentLinePart\"), \"text\", leftPart);\n\n    while (ListSequence.fromList(SLinkOperations.getTargets(thisLine, \"part\", true)).count() > indexInParent + 1) {\n      SNode linePart = ListSequence.fromList(SLinkOperations.getTargets(thisLine, \"part\", true)).getElement(indexInParent + 1);\n      SNodeOperations.detachNode(linePart);\n      ListSequence.fromList(SLinkOperations.getTargets(nextLine, \"part\", true)).addElement(linePart);\n    }\n\n    return nextLine;\n  }","commit_id":"d93baec8eba543becb9779d9eac04f069a54c4fd","url":"https://github.com/JetBrains/MPS"},{"original_method":"public Set getAuthzGroupIds(String providerId)\n\t\t{\n\t\t\tString statement = \"select sr.REALM_ID from SAKAI_REALM sr INNER JOIN SAKAI_REALM_PROVIDER srp on sr.REALM_KEY = srp.REALM_KEY where srp.PROVIDER_ID=?\";\n\t\t\tList results = sqlService().dbRead(statement, new Object[] {providerId}, null);\t\n\t\t\tif(results == null)\n\t\t\t{\n\t\t\t\treturn new HashSet();\n\t\t\t}\n\t\t\treturn new HashSet(results);\n\t\t}","id":13539,"modified_method":"/**\n\t\t * {@inheritDoc}\n\t\t */\n\t\tpublic Set getAuthzGroupIds(String providerId)\n\t\t{\n\t\t\tString statement = \"select sr.REALM_ID from SAKAI_REALM sr INNER JOIN SAKAI_REALM_PROVIDER srp on sr.REALM_KEY = srp.REALM_KEY where srp.PROVIDER_ID=?\";\n\t\t\tList results = sqlService().dbRead(statement, new Object[] {providerId}, null);\t\n\t\t\tif(results == null)\n\t\t\t{\n\t\t\t\treturn new HashSet();\n\t\t\t}\n\t\t\treturn new HashSet(results);\n\t\t}","commit_id":"e11965dca07beb57fce042323711556df5044062","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\n\t * Final initialization, once all dependencies are set.\n\t */\n\tpublic void init()\n\t{\n\t\ttry\n\t\t{\n\t\t\t// if we are auto-creating our schema, check and create\n\t\t\tif (m_autoDdl)\n\t\t\t{\n\t\t\t\tsqlService().ddl(this.getClass().getClassLoader(), \"sakai_realm_2_4_0_001\");\n\t\t\t\tsqlService().ddl(this.getClass().getClassLoader(), \"sakai_realm\");\n\t\t\t}\n\n\t\t\tsuper.init();\n\n\t\t\t// pre-cache role and function names\n\t\t\tcacheRoleNames();\n\t\t\tcacheFunctionNames();\n\n\t\t\tM_log.info(\"init(): table: \" + m_realmTableName + \" external locks: \" + m_useExternalLocks);\n\t\t}\n\t\tcatch (Throwable t)\n\t\t{\n\t\t\tM_log.warn(\"init(): \", t);\n\t\t}\n\t}","id":13540,"modified_method":"/**\n\t * Final initialization, once all dependencies are set.\n\t */\n\tpublic void init()\n\t{\n\t\ttry\n\t\t{\n\t\t\t// if we are auto-creating our schema, check and create\n\t\t\tif (m_autoDdl)\n\t\t\t{\n\t\t\t\tsqlService().ddl(this.getClass().getClassLoader(), \"sakai_realm\");\n\t\t\t\tsqlService().ddl(this.getClass().getClassLoader(), \"sakai_realm_2_4_0_001\");\n\t\t\t}\n\n\t\t\tsuper.init();\n\n\t\t\t// pre-cache role and function names\n\t\t\tcacheRoleNames();\n\t\t\tcacheFunctionNames();\n\n\t\t\tM_log.info(\"init(): table: \" + m_realmTableName + \" external locks: \" + m_useExternalLocks);\n\t\t}\n\t\tcatch (Throwable t)\n\t\t{\n\t\t\tM_log.warn(\"init(): \", t);\n\t\t}\n\t}","commit_id":"e11965dca07beb57fce042323711556df5044062","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\n\t\t * Complete the read process once the basic realm info has been read\n\t\t * \n\t\t * @param conn\n\t\t *        optional SQL connection to use.\n\t\t * @param realm\n\t\t *        The real to complete.\n\t\t * @param updateProvider\n\t\t *        if true, update and store the provider info.\n\t\t */\n\t\tprotected void completeGet(Connection conn, final BaseAuthzGroup realm, boolean updateProvider)\n\t\t{\n\t\t\tif (realm == null) return;\n\n\t\t\tif (!realm.m_lazy) return;\n\t\t\trealm.m_lazy = false;\n\n\t\t\t// update the db and realm with latest provider\n\t\t\tif (updateProvider)\n\t\t\t{\n\t\t\t\trefreshAuthzGroup(realm);\n\t\t\t}\n\n\t\t\t// read the properties\n\t\t\tif (((BaseResourceProperties) realm.m_properties).isLazy())\n\t\t\t{\n\t\t\t\t((BaseResourcePropertiesEdit) realm.m_properties).setLazy(false);\n\t\t\t\tsuper.readProperties(conn, realm.getKey(), realm.m_properties);\n\t\t\t}\n\n\t\t\t// read the roles and role functions\n\t\t\tString sql = null;\n\t\t\tif (\"mysql\".equals(sqlService().getVendor()))\n\t\t\t{\n\t\t\t\tsql = \"SELECT SAKAI_REALM_ROLE.ROLE_NAME, SAKAI_REALM_FUNCTION.FUNCTION_NAME FROM SAKAI_REALM_ROLE, \"\n\t\t\t\t\t\t+ \" SAKAI_REALM_FUNCTION,SAKAI_REALM_RL_FN,SAKAI_REALM WHERE SAKAI_REALM.REALM_ID = ? AND \"\n\t\t\t\t\t\t+ \"SAKAI_REALM.REALM_KEY = SAKAI_REALM_RL_FN.REALM_KEY and \"\n\t\t\t\t\t\t+ \"SAKAI_REALM_ROLE.ROLE_KEY = SAKAI_REALM_RL_FN.ROLE_KEY and  \"\n\t\t\t\t\t\t+ \"SAKAI_REALM_FUNCTION.FUNCTION_KEY = SAKAI_REALM_RL_FN.FUNCTION_KEY\";\n\t\t\t}\n\t\t\telse\n\t\t\t// oracle and hsql\n\t\t\t{\n\t\t\t\tsql = \"select \"\n\t\t\t\t\t\t+ \"(select ROLE_NAME from SAKAI_REALM_ROLE where SAKAI_REALM_ROLE.ROLE_KEY = SAKAI_REALM_RL_FN.ROLE_KEY), \"\n\t\t\t\t\t\t+ \"(select FUNCTION_NAME from SAKAI_REALM_FUNCTION where SAKAI_REALM_FUNCTION.FUNCTION_KEY = SAKAI_REALM_RL_FN.FUNCTION_KEY) \"\n\t\t\t\t\t\t+ \"from SAKAI_REALM_RL_FN where REALM_KEY in (select REALM_KEY from SAKAI_REALM where REALM_ID = ?)\";\n\t\t\t}\n\n\t\t\tObject fields[] = new Object[1];\n\t\t\tfields[0] = realm.getId();\n\t\t\tList all = m_sql.dbRead(conn, sql, fields, new SqlReader()\n\t\t\t{\n\t\t\t\tpublic Object readSqlResultRecord(ResultSet result)\n\t\t\t\t{\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\t// get the fields\n\t\t\t\t\t\tString roleName = result.getString(1);\n\t\t\t\t\t\tString functionName = result.getString(2);\n\n\t\t\t\t\t\t// make the role if needed\n\t\t\t\t\t\tBaseRole role = (BaseRole) realm.m_roles.get(roleName);\n\t\t\t\t\t\tif (role == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trole = new BaseRole(roleName);\n\t\t\t\t\t\t\trealm.m_roles.put(role.getId(), role);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// add the function to the role\n\t\t\t\t\t\trole.allowFunction(functionName);\n\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\tcatch (SQLException ignore)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// read the role descriptions\n\t\t\tif (\"mysql\".equals(sqlService().getVendor()))\n\t\t\t{\n\t\t\t\tsql = \"select ROLE_NAME, DESCRIPTION, PROVIDER_ONLY \"\n\t\t\t\t\t+ \"from SAKAI_REALM_ROLE inner join SAKAI_REALM_ROLE_DESC inner join SAKAI_REALM \"\n\t\t\t\t\t+ \"on SAKAI_REALM_ROLE.ROLE_KEY = SAKAI_REALM_ROLE_DESC.ROLE_KEY and SAKAI_REALM.REALM_KEY = SAKAI_REALM_ROLE_DESC.REALM_KEY \"\n\t\t\t\t\t+ \"where REALM_ID = ?\";\n\t\t\t}\n\t\t\telse\n\t\t\t// oracle and hsql\n\t\t\t{\n                sql = \"select \"\n                    + \"(select ROLE_NAME from SAKAI_REALM_ROLE where SAKAI_REALM_ROLE.ROLE_KEY = SAKAI_REALM_ROLE_DESC.ROLE_KEY), \"\n                    + \"DESCRIPTION, PROVIDER_ONLY \"\n                    + \"from SAKAI_REALM_ROLE_DESC where REALM_KEY in (select REALM_KEY from SAKAI_REALM where REALM_ID = ?)\";\t\t\n\t\t\t}\n\n\t\t\tm_sql.dbRead(conn, sql, fields, new SqlReader()\n\t\t\t{\n\t\t\t\tpublic Object readSqlResultRecord(ResultSet result)\n\t\t\t\t{\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\t// get the fields\n\t\t\t\t\t\tString roleName = result.getString(1);\n\t\t\t\t\t\tString description = result.getString(2);\n\t\t\t\t\t\tboolean providerOnly = \"1\".equals(result.getString(3));\n\n\t\t\t\t\t\t// find the role - create it if needed\n\t\t\t\t\t\t// Note: if the role does not yet exist, it has no functions\n\t\t\t\t\t\tBaseRole role = (BaseRole) realm.m_roles.get(roleName);\n\t\t\t\t\t\tif (role == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trole = new BaseRole(roleName);\n\t\t\t\t\t\t\trealm.m_roles.put(role.getId(), role);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// set the description\n\t\t\t\t\t\trole.setDescription(description);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// set the provider only flag\n\t\t\t\t\t\trole.setProviderOnly(providerOnly);\n\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\tcatch (SQLException ignore)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// read the role grants\t\t\n\t\t\tif (\"mysql\".equals(sqlService().getVendor()))\n\t\t\t{\n\t\t\t\tsql = \"select ROLE_NAME, USER_ID, ACTIVE, PROVIDED \"\n\t\t\t\t\t+ \"from SAKAI_REALM_RL_GR A inner join SAKAI_REALM B inner join SAKAI_REALM_ROLE C \"\n\t\t\t\t\t+ \"on A.REALM_KEY = B.REALM_KEY and A.ROLE_KEY = C.ROLE_KEY \"\n\t\t\t\t\t+ \"where B.REALM_ID = ?\";\n\t\t\t}\n\t\t\telse\n\t\t\t// oracle and hsql\n\t\t\t{\n\t\t\t    sql = \"select \"\n                    + \"(select ROLE_NAME from SAKAI_REALM_ROLE where SAKAI_REALM_ROLE.ROLE_KEY = SAKAI_REALM_RL_GR.ROLE_KEY), \"\n                    + \"USER_ID, ACTIVE, PROVIDED \"\n                    + \"from SAKAI_REALM_RL_GR where REALM_KEY in (select REALM_KEY from SAKAI_REALM where REALM_ID = ?)\";\n\t\t\t}\n\t\t\t\n\t\t\tall = m_sql.dbRead(conn, sql, fields, new SqlReader()\n\t\t\t{\n\t\t\t\tpublic Object readSqlResultRecord(ResultSet result)\n\t\t\t\t{\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\t// get the fields\n\t\t\t\t\t\tString roleName = result.getString(1);\n\t\t\t\t\t\tString userId = result.getString(2);\n\t\t\t\t\t\tString active = result.getString(3);\n\t\t\t\t\t\tString provided = result.getString(4);\n\n\t\t\t\t\t\t// give the user one and only one role grant - there should be no second...\n\t\t\t\t\t\tBaseMember grant = (BaseMember) realm.m_userGrants.get(userId);\n\t\t\t\t\t\tif (grant == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// find the role - if it does not exist, create it for this grant\n\t\t\t\t\t\t\t// NOTE: it would have no functions or description\n\t\t\t\t\t\t\tBaseRole role = (BaseRole) realm.m_roles.get(roleName);\n\t\t\t\t\t\t\tif (role == null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\trole = new BaseRole(roleName);\n\t\t\t\t\t\t\t\trealm.m_roles.put(role.getId(), role);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgrant = new BaseMember(role, \"1\".equals(active), \"1\".equals(provided), userId);\n\n\t\t\t\t\t\t\trealm.m_userGrants.put(userId, grant);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tM_log.warn(\"completeGet: additional user - role grant: \" + userId + \" \" + roleName);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\tcatch (SQLException ignore)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}","id":13541,"modified_method":"/**\n\t\t * Complete the read process once the basic realm info has been read\n\t\t * \n\t\t * @param conn\n\t\t *        optional SQL connection to use.\n\t\t * @param realm\n\t\t *        The real to complete.\n\t\t * @param updateProvider\n\t\t *        if true, update and store the provider info.\n\t\t */\n\t\tprotected void completeGet(Connection conn, final BaseAuthzGroup realm, boolean updateProvider)\n\t\t{\n\t\t\tif (realm == null) return;\n\n\t\t\tif (!realm.m_lazy) return;\n\t\t\trealm.m_lazy = false;\n\n\t\t\t// update the db and realm with latest provider\n\t\t\tif (updateProvider)\n\t\t\t{\n\t\t\t\trefreshAuthzGroup(realm);\n\t\t\t}\n\n\t\t\t// read the properties\n\t\t\tif (((BaseResourceProperties) realm.m_properties).isLazy())\n\t\t\t{\n\t\t\t\t((BaseResourcePropertiesEdit) realm.m_properties).setLazy(false);\n\t\t\t\tsuper.readProperties(conn, realm.getKey(), realm.m_properties);\n\t\t\t}\n\n\t\t\t// read the roles and role functions\n\t\t\tString sql = \"SELECT SAKAI_REALM_ROLE.ROLE_NAME, SAKAI_REALM_FUNCTION.FUNCTION_NAME FROM SAKAI_REALM_RL_FN\"\n\t\t\t\t\t+ \" INNER JOIN SAKAI_REALM ON SAKAI_REALM.REALM_KEY = SAKAI_REALM_RL_FN.REALM_KEY AND SAKAI_REALM.REALM_ID = ?\"\n\t\t\t\t\t+ \" INNER JOIN SAKAI_REALM_ROLE ON SAKAI_REALM_ROLE.ROLE_KEY = SAKAI_REALM_RL_FN.ROLE_KEY\"\n\t\t\t\t\t+ \" INNER JOIN SAKAI_REALM_FUNCTION ON SAKAI_REALM_FUNCTION.FUNCTION_KEY = SAKAI_REALM_RL_FN.FUNCTION_KEY\";\n\t\t\tObject fields[] = new Object[1];\n\t\t\tfields[0] = realm.getId();\n\t\t\tList all = m_sql.dbRead(conn, sql, fields, new SqlReader()\n\t\t\t{\n\t\t\t\tpublic Object readSqlResultRecord(ResultSet result)\n\t\t\t\t{\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\t// get the fields\n\t\t\t\t\t\tString roleName = result.getString(1);\n\t\t\t\t\t\tString functionName = result.getString(2);\n\n\t\t\t\t\t\t// make the role if needed\n\t\t\t\t\t\tBaseRole role = (BaseRole) realm.m_roles.get(roleName);\n\t\t\t\t\t\tif (role == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trole = new BaseRole(roleName);\n\t\t\t\t\t\t\trealm.m_roles.put(role.getId(), role);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// add the function to the role\n\t\t\t\t\t\trole.allowFunction(functionName);\n\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\tcatch (SQLException ignore)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// read the role descriptions\n\t\t\tsql = \"SELECT SAKAI_REALM_ROLE.ROLE_NAME, SAKAI_REALM_ROLE_DESC.DESCRIPTION, SAKAI_REALM_ROLE_DESC.PROVIDER_ONLY\"\n\t\t\t\t\t+ \" FROM SAKAI_REALM_ROLE_DESC\"\n\t\t\t\t\t+ \" INNER JOIN SAKAI_REALM ON SAKAI_REALM.REALM_KEY = SAKAI_REALM_ROLE_DESC.REALM_KEY AND SAKAI_REALM.REALM_ID = ?\"\n\t\t\t\t\t+ \" INNER JOIN SAKAI_REALM_ROLE ON SAKAI_REALM_ROLE.ROLE_KEY = SAKAI_REALM_ROLE_DESC.ROLE_KEY\";\n\t\t\tm_sql.dbRead(conn, sql, fields, new SqlReader()\n\t\t\t{\n\t\t\t\tpublic Object readSqlResultRecord(ResultSet result)\n\t\t\t\t{\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\t// get the fields\n\t\t\t\t\t\tString roleName = result.getString(1);\n\t\t\t\t\t\tString description = result.getString(2);\n\t\t\t\t\t\tboolean providerOnly = \"1\".equals(result.getString(3));\n\n\t\t\t\t\t\t// find the role - create it if needed\n\t\t\t\t\t\t// Note: if the role does not yet exist, it has no functions\n\t\t\t\t\t\tBaseRole role = (BaseRole) realm.m_roles.get(roleName);\n\t\t\t\t\t\tif (role == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trole = new BaseRole(roleName);\n\t\t\t\t\t\t\trealm.m_roles.put(role.getId(), role);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// set the description\n\t\t\t\t\t\trole.setDescription(description);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// set the provider only flag\n\t\t\t\t\t\trole.setProviderOnly(providerOnly);\n\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\tcatch (SQLException ignore)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// read the role grants\n\t\t\tsql = \"SELECT SAKAI_REALM_ROLE.ROLE_NAME, SAKAI_REALM_RL_GR.USER_ID, SAKAI_REALM_RL_GR.ACTIVE, SAKAI_REALM_RL_GR.PROVIDED\"\n\t\t\t\t\t+ \" FROM SAKAI_REALM_RL_GR\"\n\t\t\t\t\t+ \" INNER JOIN SAKAI_REALM ON SAKAI_REALM.REALM_KEY = SAKAI_REALM_RL_GR.REALM_KEY AND SAKAI_REALM.REALM_ID = ?\"\n\t\t\t\t\t+ \" INNER JOIN SAKAI_REALM_ROLE ON SAKAI_REALM_ROLE.ROLE_KEY = SAKAI_REALM_RL_GR.ROLE_KEY\";\t\t\t\n\t\t\tall = m_sql.dbRead(conn, sql, fields, new SqlReader()\n\t\t\t{\n\t\t\t\tpublic Object readSqlResultRecord(ResultSet result)\n\t\t\t\t{\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\t// get the fields\n\t\t\t\t\t\tString roleName = result.getString(1);\n\t\t\t\t\t\tString userId = result.getString(2);\n\t\t\t\t\t\tString active = result.getString(3);\n\t\t\t\t\t\tString provided = result.getString(4);\n\n\t\t\t\t\t\t// give the user one and only one role grant - there should be no second...\n\t\t\t\t\t\tBaseMember grant = (BaseMember) realm.m_userGrants.get(userId);\n\t\t\t\t\t\tif (grant == null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// find the role - if it does not exist, create it for this grant\n\t\t\t\t\t\t\t// NOTE: it would have no functions or description\n\t\t\t\t\t\t\tBaseRole role = (BaseRole) realm.m_roles.get(roleName);\n\t\t\t\t\t\t\tif (role == null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\trole = new BaseRole(roleName);\n\t\t\t\t\t\t\t\trealm.m_roles.put(role.getId(), role);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgrant = new BaseMember(role, \"1\".equals(active), \"1\".equals(provided), userId);\n\n\t\t\t\t\t\t\trealm.m_userGrants.put(userId, grant);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tM_log.warn(\"completeGet: additional user - role grant: \" + userId + \" \" + roleName);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\tcatch (SQLException ignore)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}","commit_id":"e11965dca07beb57fce042323711556df5044062","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public Set getProviderIds(String authzGroupId)\n\t\t{\n\t\t\tString statement = \"select srp.PROVIDER_ID from SAKAI_REALM sr INNER JOIN SAKAI_REALM_PROVIDER srp on sr.REALM_KEY = srp.REALM_KEY where sr.REALM_ID=?\";\n\t\t\tList results = sqlService().dbRead(statement, new Object[] {authzGroupId}, null);\t\n\t\t\tif(results == null)\n\t\t\t{\n\t\t\t\treturn new HashSet();\n\t\t\t}\n\t\t\treturn new HashSet(results);\n\t\t}","id":13542,"modified_method":"/**\n\t\t * {@inheritDoc}\n\t\t */\n\t\tpublic Set getProviderIds(String authzGroupId)\n\t\t{\n\t\t\tString statement = \"select srp.PROVIDER_ID from SAKAI_REALM sr INNER JOIN SAKAI_REALM_PROVIDER srp on sr.REALM_KEY = srp.REALM_KEY where sr.REALM_ID=?\";\n\t\t\tList results = sqlService().dbRead(statement, new Object[] {authzGroupId}, null);\t\n\t\t\tif(results == null)\n\t\t\t{\n\t\t\t\treturn new HashSet();\n\t\t\t}\n\t\t\treturn new HashSet(results);\n\t\t}","commit_id":"e11965dca07beb57fce042323711556df5044062","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public void remove(AuthzGroup edit)\n\t\t{\n\t\t\t// delete all the role functions, auth grants, anon grants, role grants, fucntion grants\n\t\t\t// and then the realm and release the lock, all in one transaction\n\t\t\tConnection connection = null;\n\t\t\tboolean wasCommit = true;\n\t\t\ttry\n\t\t\t{\n\t\t\t\tconnection = m_sql.borrowConnection();\n\t\t\t\twasCommit = connection.getAutoCommit();\n\t\t\t\tconnection.setAutoCommit(false);\n\n\t\t\t\t// delete the role functions, role grants, provider entries\n\t\t\t\tObject fields[] = new Object[1];\n\t\t\t\tfields[0] = caseId(edit.getId());\n\n\t\t\t\tif (\"mysql\".equals(sqlService().getVendor()))\n\t\t\t\t{\n\t\t\t\t\tString statement = \"delete SAKAI_REALM_RL_FN from SAKAI_REALM_RL_FN inner join SAKAI_REALM on SAKAI_REALM_RL_FN.REALM_KEY = SAKAI_REALM.REALM_KEY where REALM_ID = ?\";\n \t\t\t\t\tm_sql.dbWrite(connection, statement, fields);\n \n\t\t\t\t\tstatement = \"delete SAKAI_REALM_RL_GR from SAKAI_REALM_RL_GR inner join SAKAI_REALM on SAKAI_REALM_RL_GR.REALM_KEY = SAKAI_REALM.REALM_KEY where REALM_ID = ?\";\n \t\t\t\t\tm_sql.dbWrite(connection, statement, fields);\n \n\t\t\t\t\tstatement = \"delete SAKAI_REALM_PROVIDER from SAKAI_REALM_PROVIDER inner join SAKAI_REALM on SAKAI_REALM_PROVIDER.REALM_KEY = SAKAI_REALM.REALM_KEY where REALM_ID = ?\";\n \t\t\t\t\tm_sql.dbWrite(connection, statement, fields);\n \n\t\t\t\t\tstatement = \"delete SAKAI_REALM_ROLE_DESC from SAKAI_REALM_ROLE_DESC inner join SAKAI_REALM on SAKAI_REALM_ROLE_DESC.REALM_KEY = SAKAI_REALM.REALM_KEY where REALM_ID = ?\";\n \t\t\t\t\tm_sql.dbWrite(connection, statement, fields);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t// oracle and hsql\n\t\t\t\t{\n\t\t\t\t\tString statement = \"delete from SAKAI_REALM_RL_FN where REALM_KEY in (select REALM_KEY from SAKAI_REALM where REALM_ID = ?)\";\n\t\t\t\t\tm_sql.dbWrite(connection, statement, fields);\n\n\t\t\t\t\tstatement = \"delete from SAKAI_REALM_RL_GR where REALM_KEY in (select REALM_KEY from SAKAI_REALM where REALM_ID = ?)\";\n\t\t\t\t\tm_sql.dbWrite(connection, statement, fields);\n\n\t\t\t\t\tstatement = \"delete from SAKAI_REALM_PROVIDER where REALM_KEY in (select REALM_KEY from SAKAI_REALM where REALM_ID = ?)\";\n\t\t\t\t\tm_sql.dbWrite(connection, statement, fields);\n\n\t\t\t\t\tstatement = \"delete from SAKAI_REALM_ROLE_DESC where REALM_KEY in (select REALM_KEY from SAKAI_REALM where REALM_ID = ?)\";\n\t\t\t\t\tm_sql.dbWrite(connection, statement, fields);\n\t\t\t\t}\n\n\t\t\t\t// delete the realm and properties\n\t\t\t\tsuper.removeResource(connection, edit, ((BaseAuthzGroup) edit).getKey());\n\n\t\t\t\tconnection.commit();\n\t\t\t}\n\t\t\tcatch (Exception e)\n\t\t\t{\n\t\t\t\tif (connection != null)\n\t\t\t\t{\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tconnection.rollback();\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception ee)\n\t\t\t\t\t{\n\t\t\t\t\t\tM_log.warn(\"remove, while rolling back: \" + ee);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tM_log.warn(\"remove: \" + e);\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\tif (connection != null)\n\t\t\t\t{\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tconnection.setAutoCommit(wasCommit);\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e)\n\t\t\t\t\t{\n\t\t\t\t\t\tM_log.warn(\"remove, while setting auto commit: \" + e);\n\t\t\t\t\t}\n\t\t\t\t\tm_sql.returnConnection(connection);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}","id":13543,"modified_method":"public void remove(AuthzGroup edit)\n\t\t{\n\t\t\t// delete all the role functions, auth grants, anon grants, role grants, fucntion grants\n\t\t\t// and then the realm and release the lock.\n\t\t\t// Note: no need for a transaction, avoid using it to avoid deadlock conditions -ggolden\n\n\t\t\t// delete the role functions, role grants, provider entries\n\t\t\tObject fields[] = new Object[1];\n\t\t\tfields[0] = caseId(edit.getId());\n\n\t\t\tString statement = null;\n\t\t\t\n\t\t\tif (\"mysql\".equals(sqlService().getVendor()))\n\t\t\t{\n\t\t\t\tstatement = \"DELETE SAKAI_REALM_RL_FN FROM SAKAI_REALM_RL_FN INNER JOIN SAKAI_REALM ON SAKAI_REALM_RL_FN.REALM_KEY = SAKAI_REALM.REALM_KEY AND SAKAI_REALM.REALM_ID = ?\";\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstatement = \"DELETE FROM SAKAI_REALM_RL_FN WHERE REALM_KEY IN (SELECT REALM_KEY FROM SAKAI_REALM WHERE REALM_ID = ?)\";\n\t\t\t}\n\t\t\tm_sql.dbWrite(statement, fields);\n\n\t\t\tif (\"mysql\".equals(sqlService().getVendor()))\n\t\t\t{\n\t\t\t\tstatement = \"DELETE SAKAI_REALM_RL_GR FROM SAKAI_REALM_RL_GR INNER JOIN SAKAI_REALM ON SAKAI_REALM_RL_GR.REALM_KEY = SAKAI_REALM.REALM_KEY AND SAKAI_REALM.REALM_ID = ?\";\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstatement = \"DELETE FROM SAKAI_REALM_RL_GR WHERE REALM_KEY IN (SELECT REALM_KEY FROM SAKAI_REALM WHERE REALM_ID = ?)\";\n\t\t\t}\n\t\t\tm_sql.dbWrite(statement, fields);\n\n\t\t\tif (\"mysql\".equals(sqlService().getVendor()))\n\t\t\t{\n\t\t\t\tstatement = \"DELETE SAKAI_REALM_PROVIDER FROM SAKAI_REALM_PROVIDER INNER JOIN SAKAI_REALM ON SAKAI_REALM_PROVIDER.REALM_KEY = SAKAI_REALM.REALM_KEY AND SAKAI_REALM.REALM_ID = ?\";\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstatement = \"DELETE FROM SAKAI_REALM_PROVIDER WHERE REALM_KEY IN (SELECT REALM_KEY FROM SAKAI_REALM WHERE REALM_ID = ?)\";\n\t\t\t}\n\t\t\tm_sql.dbWrite(statement, fields);\n\n\t\t\tif (\"mysql\".equals(sqlService().getVendor()))\n\t\t\t{\n\t\t\t\tstatement = \"DELETE SAKAI_REALM_ROLE_DESC FROM SAKAI_REALM_ROLE_DESC INNER JOIN SAKAI_REALM ON SAKAI_REALM_ROLE_DESC.REALM_KEY = SAKAI_REALM.REALM_KEY AND SAKAI_REALM.REALM_ID = ?\";\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tstatement = \"DELETE FROM SAKAI_REALM_ROLE_DESC WHERE REALM_KEY IN (SELECT REALM_KEY FROM SAKAI_REALM WHERE REALM_ID = ?)\";\n\t\t\t}\n\t\t\tm_sql.dbWrite(statement, fields);\n\n\t\t\t// delete the realm and properties\n\t\t\tsuper.removeResource(null, edit, ((BaseAuthzGroup) edit).getKey());\n\t\t}","commit_id":"e11965dca07beb57fce042323711556df5044062","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\n\t\t * {@inheritDoc}\n\t\t */\n\t\tpublic boolean isAllowed(String userId, String lock, Collection realms)\n\t\t{\n\t\t\tif (lock == null) return false;\n\n\t\t\tboolean auth = (userId != null) && (!userDirectoryService().getAnonymousUser().getId().equals(userId));\n\n\t\t\t// TODO: pre-compute some fields arrays and statements for common roleRealms sizes for efficiency? -ggolden\n\n\t\t\tif (realms == null || realms.size() < 1)\n\t\t\t{\n\t\t\t\tM_log.warn(\"isAllowed(): called with no realms: lock: \" + lock + \" user: \" + userId);\n\t\t\t\tif (M_log.isDebugEnabled())\n\t\t\t\t{\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tthrow new Exception();\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e)\n\t\t\t\t\t{\n\t\t\t\t\t\tM_log.debug(\"isAllowed():\", e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// make (?, ?, ?...) for realms size\n\t\t\tStringBuffer buf = new StringBuffer();\n\t\t\tbuf.append(\"(?\");\n\t\t\tfor (int i = 0; i < realms.size() - 1; i++)\n\t\t\t{\n\t\t\t\tbuf.append(\",?\");\n\t\t\t}\n\t\t\tbuf.append(\")\");\n\n\t\t\tString statement = null;\n\n\t\t\t// any of the grant or role realms\n\t\t\tif (\"mysql\".equals(sqlService().getVendor()))\n\t\t\t{\n\t\t\t\tstatement = \"select count(1) from SAKAI_REALM_RL_FN,SAKAI_REALM force index \"\n\t\t\t\t\t\t+ \"(AK_SAKAI_REALM_ID) where SAKAI_REALM_RL_FN.REALM_KEY = SAKAI_REALM.REALM_KEY \"\n\t\t\t\t\t\t+ \"and SAKAI_REALM.REALM_ID in \" + buf.toString();\n\t\t\t}\n\t\t\telse\n\t\t\t// oracle and hsql\n\t\t\t{\n\t\t\t\tstatement = \"select count(1) from SAKAI_REALM_RL_FN \"\n\t\t\t\t\t\t+ \"where REALM_KEY in (select REALM_KEY from SAKAI_REALM where REALM_ID in \" + buf.toString() + \")\";\n\t\t\t}\n\t\t\tstatement = statement\n\t\t\t\t\t+ \" and FUNCTION_KEY in (select FUNCTION_KEY from SAKAI_REALM_FUNCTION where FUNCTION_NAME = ?) \"\n\t\t\t\t\t+ \"and (ROLE_KEY in \"\n\t\t\t\t\t+ \"(select ROLE_KEY from SAKAI_REALM_RL_GR where ACTIVE = '1' and USER_ID = ? \"\n\t\t\t\t\t+\n\t\t\t\t\t// granted in any of the grant or role realms\n\t\t\t\t\t\"and REALM_KEY in (select REALM_KEY from SAKAI_REALM where REALM_ID in \" + buf.toString() + \")) \"\n\t\t\t\t\t+ \"or ROLE_KEY in (select ROLE_KEY from SAKAI_REALM_ROLE where ROLE_NAME = '\" + ANON_ROLE + \"') \"\n\t\t\t\t\t+ (auth ? \"or ROLE_KEY in (select ROLE_KEY from SAKAI_REALM_ROLE where ROLE_NAME = '\" + AUTH_ROLE + \"') \" : \"\")\n\t\t\t\t\t+ \")\";\n\n\t\t\tObject[] fields = new Object[2 + (2 * realms.size())];\n\t\t\tint pos = 0;\n\t\t\tfor (Iterator i = realms.iterator(); i.hasNext();)\n\t\t\t{\n\t\t\t\tString role = (String) i.next();\n\t\t\t\tfields[pos++] = role;\n\t\t\t}\n\t\t\tfields[pos++] = lock;\n\t\t\tfields[pos++] = userId;\n\t\t\tfor (Iterator i = realms.iterator(); i.hasNext();)\n\t\t\t{\n\t\t\t\tString role = (String) i.next();\n\t\t\t\tfields[pos++] = role;\n\t\t\t}\n\n\t\t\tList results = m_sql.dbRead(statement, fields, new SqlReader()\n\t\t\t{\n\t\t\t\tpublic Object readSqlResultRecord(ResultSet result)\n\t\t\t\t{\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tint count = result.getInt(1);\n\t\t\t\t\t\treturn new Integer(count);\n\t\t\t\t\t}\n\t\t\t\t\tcatch (SQLException ignore)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tboolean rv = false;\n\t\t\tint count = -1;\n\t\t\tif (!results.isEmpty())\n\t\t\t{\n\t\t\t\tcount = ((Integer) results.get(0)).intValue();\n\t\t\t\trv = count > 0;\n\t\t\t}\n\n\t\t\treturn rv;\n\n\t\t\t// return rvNew;\n\t\t}","id":13544,"modified_method":"/**\n\t\t * {@inheritDoc}\n\t\t */\n\t\tpublic boolean isAllowed(String userId, String lock, Collection realms)\n\t\t{\n\t\t\tif (lock == null) return false;\n\n\t\t\tboolean auth = (userId != null) && (!userDirectoryService().getAnonymousUser().getId().equals(userId));\n\n\t\t\tif (realms == null || realms.size() < 1)\n\t\t\t{\n\t\t\t\tM_log.warn(\"isAllowed(): called with no realms: lock: \" + lock + \" user: \" + userId);\n\t\t\t\tif (M_log.isDebugEnabled())\n\t\t\t\t{\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tthrow new Exception();\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e)\n\t\t\t\t\t{\n\t\t\t\t\t\tM_log.debug(\"isAllowed():\", e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tString inClause = orInClause(realms.size(), \"SAKAI_REALM.REALM_ID\");\n\n\t\t\tString statement = null;\n\n\t\t\t// any of the grant or role realms\n\t\t\tif (\"mysql\".equals(sqlService().getVendor()))\n\t\t\t{\n\t\t\t\tstatement = \"select count(1) from SAKAI_REALM_RL_FN,SAKAI_REALM force index \"\n\t\t\t\t\t\t+ \"(AK_SAKAI_REALM_ID) where SAKAI_REALM_RL_FN.REALM_KEY = SAKAI_REALM.REALM_KEY \"\n\t\t\t\t\t\t+ \"and \" + inClause;\n\t\t\t}\n\t\t\telse\n\t\t\t// oracle and hsql\n\t\t\t{\n\t\t\t\tstatement = \"select count(1) from SAKAI_REALM_RL_FN \"\n\t\t\t\t\t\t+ \"where REALM_KEY in (select REALM_KEY from SAKAI_REALM where \" + inClause + \")\";\n\t\t\t}\n\t\t\tstatement = statement\n\t\t\t\t\t+ \" and FUNCTION_KEY in (select FUNCTION_KEY from SAKAI_REALM_FUNCTION where FUNCTION_NAME = ?) \"\n\t\t\t\t\t+ \"and (ROLE_KEY in \"\n\t\t\t\t\t+ \"(select ROLE_KEY from SAKAI_REALM_RL_GR where ACTIVE = '1' and USER_ID = ? \"\n\t\t\t\t\t+\n\t\t\t\t\t// granted in any of the grant or role realms\n\t\t\t\t\t\"and REALM_KEY in (select REALM_KEY from SAKAI_REALM where \" + inClause + \")) \"\n\t\t\t\t\t+ \"or ROLE_KEY in (select ROLE_KEY from SAKAI_REALM_ROLE where ROLE_NAME = '\" + ANON_ROLE + \"') \"\n\t\t\t\t\t+ (auth ? \"or ROLE_KEY in (select ROLE_KEY from SAKAI_REALM_ROLE where ROLE_NAME = '\" + AUTH_ROLE + \"') \" : \"\")\n\t\t\t\t\t+ \")\";\n\n\t\t\tObject[] fields = new Object[2 + (2 * realms.size())];\n\t\t\tint pos = 0;\n\t\t\tfor (Iterator i = realms.iterator(); i.hasNext();)\n\t\t\t{\n\t\t\t\tString role = (String) i.next();\n\t\t\t\tfields[pos++] = role;\n\t\t\t}\n\t\t\tfields[pos++] = lock;\n\t\t\tfields[pos++] = userId;\n\t\t\tfor (Iterator i = realms.iterator(); i.hasNext();)\n\t\t\t{\n\t\t\t\tString role = (String) i.next();\n\t\t\t\tfields[pos++] = role;\n\t\t\t}\n\n\t\t\tList results = m_sql.dbRead(statement, fields, new SqlReader()\n\t\t\t{\n\t\t\t\tpublic Object readSqlResultRecord(ResultSet result)\n\t\t\t\t{\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tint count = result.getInt(1);\n\t\t\t\t\t\treturn new Integer(count);\n\t\t\t\t\t}\n\t\t\t\t\tcatch (SQLException ignore)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tboolean rv = false;\n\t\t\tint count = -1;\n\t\t\tif (!results.isEmpty())\n\t\t\t{\n\t\t\t\tcount = ((Integer) results.get(0)).intValue();\n\t\t\t\trv = count > 0;\n\t\t\t}\n\n\t\t\treturn rv;\n\n\t\t\t// return rvNew;\n\t\t}","commit_id":"e11965dca07beb57fce042323711556df5044062","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\n\t\t * {@inheritDoc}\n\t\t */\n\t\tpublic void refreshUser(String userId, Map providerGrants)\n\t\t{\n\t\t\tif (userId == null) return;\n\n\t\t\tString sql = \"\";\n\t\t\tString sqlParam = \"\";\n\t\t\tStringBuffer sqlBuf = null;\n\t\t\tStringBuffer sqlParamBuf = null;\n\n\t\t\t// read this user's grants from all realms\n\t\t\tsqlBuf = new StringBuffer();\n\t\t\tsqlBuf.append(\"select SRRG.REALM_KEY, SRR.ROLE_NAME, SRRG.ACTIVE, SRRG.PROVIDED \");\n\t\t\tsqlBuf.append(\"from SAKAI_REALM_ROLE SRR \");\n\t\t\tsqlBuf.append(\"inner join SAKAI_REALM_RL_GR SRRG on SRR.ROLE_KEY = SRRG.ROLE_KEY \");\n\t\t\tsqlBuf.append(\"where SRRG.USER_ID = ?\");\n\t\t\tsql = sqlBuf.toString();\n\n\t\t\tObject[] fields = new Object[1];\n\t\t\tfields[0] = userId;\n\n\t\t\tList grants = m_sql.dbRead(sql, fields, new SqlReader()\n\t\t\t{\n\t\t\t\tpublic Object readSqlResultRecord(ResultSet result)\n\t\t\t\t{\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tint realmKey = result.getInt(1);\n\t\t\t\t\t\tString roleName = result.getString(2);\n\t\t\t\t\t\tString active = result.getString(3);\n\t\t\t\t\t\tString provided = result.getString(4);\n\t\t\t\t\t\treturn new RealmAndRole(new Integer(realmKey), roleName, \"1\".equals(active), \"1\".equals(provided));\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Throwable ignore)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// make a map, realm id -> role granted, each for provider and non-provider (or inactive)\n\t\t\tMap existing = new HashMap();\n\t\t\tMap nonProvider = new HashMap();\n\t\t\tfor (Iterator i = grants.iterator(); i.hasNext();)\n\t\t\t{\n\t\t\t\tRealmAndRole rar = (RealmAndRole) i.next();\n\t\t\t\t// active and provided are the currently stored provider grants\n\t\t\t\tif (rar.active && rar.provided)\n\t\t\t\t{\n\t\t\t\t\tif (existing.containsKey(rar.realmId))\n\t\t\t\t\t{\n\t\t\t\t\t\tM_log.warn(\"refreshUser: duplicate realm id found in provider grants: \" + rar.realmId);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\texisting.put(rar.realmId, rar.role);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// inactive or not provided are the currently stored internal grants - not to be overwritten by provider info\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (nonProvider.containsKey(rar.realmId))\n\t\t\t\t\t{\n\t\t\t\t\t\tM_log.warn(\"refreshUser: duplicate realm id found in nonProvider grants: \" + rar.realmId);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tnonProvider.put(rar.realmId, rar.role);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// compute the user's realm roles based on the new provider information\n\t\t\t// same map form as existing, realm id -> role granted\n\t\t\tMap target = new HashMap();\n\n\t\t\t// for each realm that has a provider in the map, and does not have a grant for the user,\n\t\t\t// add the active provided grant with the map's role.\n\n\t\t\tif ((providerGrants != null) && (providerGrants.size() > 0))\n\t\t\t{\n\t\t\t\t// get all the realms that have providers in the map, with their full provider id\n\n\t\t\t\t// TODO: pre-compute some fields arrays and statements for common providerGrants sizes for efficiency? -ggolden\n\t\t\t\t// make (?, ?, ?...) for providerGrants size\n\t\t\t\tsqlParamBuf = new StringBuffer();\n\t\t\t\tsqlParamBuf.append(\"(?\");\n\t\t\t\tfor (int i = 1; i < providerGrants.size(); i++)\n\t\t\t\t{\n\t\t\t\t\tsqlParamBuf.append(\",?\");\n\t\t\t\t}\n\t\t\t\tsqlParamBuf.append(\")\");\n\t\t\t\tsqlParam = sqlParamBuf.toString();\n\n\t\t\t\t// Assemble SQL. Note: distinct must be used because one cannot establish an equijoin between\n\t\t\t\t// SRP.PROVIDER_ID and SR.PROVIDER_ID as the values in SRP.PROVIDER_ID often include\n\t\t\t\t// additional concatenated course values. It may be worth reviewing this strategy.\n\n\t\t\t\tsqlBuf = new StringBuffer();\n\t\t\t\tsqlBuf.append(\"select distinct SRP.REALM_KEY, SR.PROVIDER_ID \");\n\t\t\t\tsqlBuf.append(\"from SAKAI_REALM_PROVIDER SRP \");\n\t\t\t\tsqlBuf.append(\"inner join SAKAI_REALM SR on SRP.REALM_KEY = SR.REALM_KEY \");\n\t\t\t\tsqlBuf.append(\"where SRP.PROVIDER_ID in \" + sqlParam);\n\t\t\t\tsql = sqlBuf.toString();\n\n\t\t\t\tObject[] fieldsx = new Object[providerGrants.size()];\n\t\t\t\tint pos = 0;\n\t\t\t\tfor (Iterator f = providerGrants.keySet().iterator(); f.hasNext();)\n\t\t\t\t{\n\t\t\t\t\tString providerId = (String) f.next();\n\t\t\t\t\tfieldsx[pos++] = providerId;\n\t\t\t\t}\n\t\t\t\tList realms = m_sql.dbRead(sql, fieldsx, new SqlReader()\n\t\t\t\t{\n\t\t\t\t\tpublic Object readSqlResultRecord(ResultSet result)\n\t\t\t\t\t{\n\t\t\t\t\t\ttry\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tint id = result.getInt(1);\n\t\t\t\t\t\t\tString provider = result.getString(2);\n\t\t\t\t\t\t\treturn new RealmAndProvider(new Integer(id), provider);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcatch (Throwable ignore)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif ((realms != null) && (realms.size() > 0))\n\t\t\t\t{\n\t\t\t\t\tfor (Iterator r = realms.iterator(); r.hasNext();)\n\t\t\t\t\t{\n\t\t\t\t\t\tRealmAndProvider rp = (RealmAndProvider) r.next();\n\t\t\t\t\t\tString role = (String) providerGrants.get(rp.providerId);\n\t\t\t\t\t\tif (role != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (target.containsKey(rp.realmId))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tM_log.warn(\"refreshUser: duplicate realm id computed for new grants: \" + rp.realmId);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttarget.put(rp.realmId, role);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// compute the records we need to delete: every existing not in target or not matching target's role\n\t\t\tList toDelete = new Vector();\n\t\t\tfor (Iterator i = existing.entrySet().iterator(); i.hasNext();)\n\t\t\t{\n\t\t\t\tMap.Entry entry = (Map.Entry) i.next();\n\t\t\t\tInteger realmId = (Integer) entry.getKey();\n\t\t\t\tString role = (String) entry.getValue();\n\n\t\t\t\tString targetRole = (String) target.get(realmId);\n\t\t\t\tif ((targetRole == null) || (!targetRole.equals(role)))\n\t\t\t\t{\n\t\t\t\t\ttoDelete.add(realmId);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// compute the records we need to add: every target not in existing, or not matching's existing's role\n\t\t\t// we don't insert target grants that would override internal grants\n\t\t\tList toInsert = new Vector();\n\t\t\tfor (Iterator i = target.entrySet().iterator(); i.hasNext();)\n\t\t\t{\n\t\t\t\tMap.Entry entry = (Map.Entry) i.next();\n\t\t\t\tInteger realmId = (Integer) entry.getKey();\n\t\t\t\tString role = (String) entry.getValue();\n\n\t\t\t\tString existingRole = (String) existing.get(realmId);\n\t\t\t\tString nonProviderRole = (String) nonProvider.get(realmId);\n\t\t\t\tif ((nonProviderRole == null) && ((existingRole == null) || (!existingRole.equals(role))))\n\t\t\t\t{\n\t\t\t\t\ttoInsert.add(new RealmAndRole(realmId, role, true, true));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// if any, do it\n\t\t\tif ((toDelete.size() > 0) || (toInsert.size() > 0))\n\t\t\t{\n\t\t\t\t// do these each in their own transaction, to avoid possible deadlock\n\t\t\t\t// caused by transactions modifying more than one row at a time.\n\n\t\t\t\t// delete\n\t\t\t\tsql = \"delete from SAKAI_REALM_RL_GR where REALM_KEY = ? and USER_ID = ?\";\n\t\t\t\tfields = new Object[2];\n\t\t\t\tfields[1] = userId;\n\t\t\t\tfor (Iterator i = toDelete.iterator(); i.hasNext();)\n\t\t\t\t{\n\t\t\t\t\tInteger realmId = (Integer) i.next();\n\t\t\t\t\tfields[0] = realmId;\n\t\t\t\t\tm_sql.dbWrite(sql, fields);\n\t\t\t\t}\n\n\t\t\t\t// insert\n\t\t\t\tsql = \"insert into SAKAI_REALM_RL_GR (REALM_KEY, USER_ID, ROLE_KEY, ACTIVE, PROVIDED) \"\n\t\t\t\t\t\t+ \"values (?, ?, (select ROLE_KEY from SAKAI_REALM_ROLE where ROLE_NAME = ?), '1', '1')\";\n\t\t\t\tfields = new Object[3];\n\t\t\t\tfields[1] = userId;\n\t\t\t\tfor (Iterator i = toInsert.iterator(); i.hasNext();)\n\t\t\t\t{\n\t\t\t\t\tRealmAndRole rar = (RealmAndRole) i.next();\n\t\t\t\t\tfields[0] = rar.realmId;\n\t\t\t\t\tfields[2] = rar.role;\n\n\t\t\t\t\tm_sql.dbWrite(sql, fields);\n\t\t\t\t}\n\t\t\t}\n\t\t}","id":13545,"modified_method":"/**\n\t\t * {@inheritDoc}\n\t\t */\n\t\tpublic void refreshUser(String userId, Map providerGrants)\n\t\t{\n\t\t\tif (userId == null) return;\n\n\t\t\tString sql = \"\";\n\t\t\tString sqlParam = \"\";\n\t\t\tStringBuffer sqlBuf = null;\n\t\t\tStringBuffer sqlParamBuf = null;\n\n\t\t\t// read this user's grants from all realms\n\t\t\tsqlBuf = new StringBuffer();\n\t\t\tsqlBuf.append(\"select SRRG.REALM_KEY, SRR.ROLE_NAME, SRRG.ACTIVE, SRRG.PROVIDED \");\n\t\t\tsqlBuf.append(\"from SAKAI_REALM_ROLE SRR \");\n\t\t\tsqlBuf.append(\"inner join SAKAI_REALM_RL_GR SRRG on SRR.ROLE_KEY = SRRG.ROLE_KEY \");\n\t\t\tsqlBuf.append(\"where SRRG.USER_ID = ?\");\n\t\t\tsql = sqlBuf.toString();\n\n\t\t\tObject[] fields = new Object[1];\n\t\t\tfields[0] = userId;\n\n\t\t\tList grants = m_sql.dbRead(sql, fields, new SqlReader()\n\t\t\t{\n\t\t\t\tpublic Object readSqlResultRecord(ResultSet result)\n\t\t\t\t{\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tint realmKey = result.getInt(1);\n\t\t\t\t\t\tString roleName = result.getString(2);\n\t\t\t\t\t\tString active = result.getString(3);\n\t\t\t\t\t\tString provided = result.getString(4);\n\t\t\t\t\t\treturn new RealmAndRole(new Integer(realmKey), roleName, \"1\".equals(active), \"1\".equals(provided));\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Throwable ignore)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// make a map, realm id -> role granted, each for provider and non-provider (or inactive)\n\t\t\tMap<Integer, String> existing = new HashMap<Integer, String>();\n\t\t\tMap<Integer, String> nonProvider = new HashMap<Integer, String>();\n\t\t\tfor (Iterator i = grants.iterator(); i.hasNext();)\n\t\t\t{\n\t\t\t\tRealmAndRole rar = (RealmAndRole) i.next();\n\t\t\t\t// active and provided are the currently stored provider grants\n\t\t\t\tif (rar.active && rar.provided)\n\t\t\t\t{\n\t\t\t\t\tif (existing.containsKey(rar.realmId))\n\t\t\t\t\t{\n\t\t\t\t\t\tM_log.warn(\"refreshUser: duplicate realm id found in provider grants: \" + rar.realmId);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\texisting.put(rar.realmId, rar.role);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// inactive or not provided are the currently stored internal grants - not to be overwritten by provider info\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (nonProvider.containsKey(rar.realmId))\n\t\t\t\t\t{\n\t\t\t\t\t\tM_log.warn(\"refreshUser: duplicate realm id found in nonProvider grants: \" + rar.realmId);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tnonProvider.put(rar.realmId, rar.role);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// compute the user's realm roles based on the new provider information\n\t\t\t// same map form as existing, realm id -> role granted\n\t\t\tMap<Integer, String> target = new HashMap<Integer, String>();\n\n\t\t\t// for each realm that has a provider in the map, and does not have a grant for the user,\n\t\t\t// add the active provided grant with the map's role.\n\n\t\t\tif ((providerGrants != null) && (providerGrants.size() > 0))\n\t\t\t{\n\t\t\t\t// get all the realms that have providers in the map, with their full provider id\n\n\t\t\t\t// Assemble SQL. Note: distinct must be used because one cannot establish an equijoin between\n\t\t\t\t// SRP.PROVIDER_ID and SR.PROVIDER_ID as the values in SRP.PROVIDER_ID often include\n\t\t\t\t// additional concatenated course values. It may be worth reviewing this strategy.\n\n\t\t\t\tsqlBuf = new StringBuffer();\n\t\t\t\tsqlBuf.append(\"select distinct SRP.REALM_KEY, SR.PROVIDER_ID \");\n\t\t\t\tsqlBuf.append(\"from SAKAI_REALM_PROVIDER SRP \");\n\t\t\t\tsqlBuf.append(\"inner join SAKAI_REALM SR on SRP.REALM_KEY = SR.REALM_KEY \");\n\t\t\t\tsqlBuf.append(\"where \" + orInClause(providerGrants.size(), \"SRP.PROVIDER_ID\"));\n\t\t\t\tsql = sqlBuf.toString();\n\n\t\t\t\tObject[] fieldsx = new Object[providerGrants.size()];\n\t\t\t\tint pos = 0;\n\t\t\t\tfor (Iterator f = providerGrants.keySet().iterator(); f.hasNext();)\n\t\t\t\t{\n\t\t\t\t\tString providerId = (String) f.next();\n\t\t\t\t\tfieldsx[pos++] = providerId;\n\t\t\t\t}\n\t\t\t\tList realms = m_sql.dbRead(sql, fieldsx, new SqlReader()\n\t\t\t\t{\n\t\t\t\t\tpublic Object readSqlResultRecord(ResultSet result)\n\t\t\t\t\t{\n\t\t\t\t\t\ttry\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tint id = result.getInt(1);\n\t\t\t\t\t\t\tString provider = result.getString(2);\n\t\t\t\t\t\t\treturn new RealmAndProvider(new Integer(id), provider);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcatch (Throwable ignore)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif ((realms != null) && (realms.size() > 0))\n\t\t\t\t{\n\t\t\t\t\tfor (Iterator r = realms.iterator(); r.hasNext();)\n\t\t\t\t\t{\n\t\t\t\t\t\tRealmAndProvider rp = (RealmAndProvider) r.next();\n\t\t\t\t\t\tString role = (String) providerGrants.get(rp.providerId);\n\t\t\t\t\t\tif (role != null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (target.containsKey(rp.realmId))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tM_log.warn(\"refreshUser: duplicate realm id computed for new grants: \" + rp.realmId);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttarget.put(rp.realmId, role);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// compute the records we need to delete: every existing not in target or not matching target's role\n\t\t\tList<Integer> toDelete = new Vector<Integer>();\n\t\t\tfor (Iterator i = existing.entrySet().iterator(); i.hasNext();)\n\t\t\t{\n\t\t\t\tMap.Entry entry = (Map.Entry) i.next();\n\t\t\t\tInteger realmId = (Integer) entry.getKey();\n\t\t\t\tString role = (String) entry.getValue();\n\n\t\t\t\tString targetRole = (String) target.get(realmId);\n\t\t\t\tif ((targetRole == null) || (!targetRole.equals(role)))\n\t\t\t\t{\n\t\t\t\t\ttoDelete.add(realmId);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// compute the records we need to add: every target not in existing, or not matching's existing's role\n\t\t\t// we don't insert target grants that would override internal grants\n\t\t\tList<RealmAndRole> toInsert = new Vector<RealmAndRole>();\n\t\t\tfor (Iterator i = target.entrySet().iterator(); i.hasNext();)\n\t\t\t{\n\t\t\t\tMap.Entry entry = (Map.Entry) i.next();\n\t\t\t\tInteger realmId = (Integer) entry.getKey();\n\t\t\t\tString role = (String) entry.getValue();\n\n\t\t\t\tString existingRole = (String) existing.get(realmId);\n\t\t\t\tString nonProviderRole = (String) nonProvider.get(realmId);\n\t\t\t\tif ((nonProviderRole == null) && ((existingRole == null) || (!existingRole.equals(role))))\n\t\t\t\t{\n\t\t\t\t\ttoInsert.add(new RealmAndRole(realmId, role, true, true));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// if any, do it\n\t\t\tif ((toDelete.size() > 0) || (toInsert.size() > 0))\n\t\t\t{\n\t\t\t\t// do these each in their own transaction, to avoid possible deadlock\n\t\t\t\t// caused by transactions modifying more than one row at a time.\n\n\t\t\t\t// delete\n\t\t\t\tsql = \"delete from SAKAI_REALM_RL_GR where REALM_KEY = ? and USER_ID = ?\";\n\t\t\t\tfields = new Object[2];\n\t\t\t\tfields[1] = userId;\n\t\t\t\tfor (Iterator i = toDelete.iterator(); i.hasNext();)\n\t\t\t\t{\n\t\t\t\t\tInteger realmId = (Integer) i.next();\n\t\t\t\t\tfields[0] = realmId;\n\t\t\t\t\tm_sql.dbWrite(sql, fields);\n\t\t\t\t}\n\n\t\t\t\t// insert\n\t\t\t\tsql = \"insert into SAKAI_REALM_RL_GR (REALM_KEY, USER_ID, ROLE_KEY, ACTIVE, PROVIDED) \"\n\t\t\t\t\t\t+ \"values (?, ?, (select ROLE_KEY from SAKAI_REALM_ROLE where ROLE_NAME = ?), '1', '1')\";\n\t\t\t\tfields = new Object[3];\n\t\t\t\tfields[1] = userId;\n\t\t\t\tfor (Iterator i = toInsert.iterator(); i.hasNext();)\n\t\t\t\t{\n\t\t\t\t\tRealmAndRole rar = (RealmAndRole) i.next();\n\t\t\t\t\tfields[0] = rar.realmId;\n\t\t\t\t\tfields[2] = rar.role;\n\n\t\t\t\t\tm_sql.dbWrite(sql, fields);\n\t\t\t\t}\n\t\t\t}\n\t\t}","commit_id":"e11965dca07beb57fce042323711556df5044062","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\n\t\t * {@inheritDoc}\n\t\t */\n\t\tpublic Set getUsersIsAllowed(String lock, Collection realms)\n\t\t{\n\t\t\tif ((lock == null) || (realms == null) || (realms.isEmpty())) return new HashSet();\n\n\t\t\tString sql = \"\";\n\t\t\tString sqlParam = \"\";\n\t\t\tStringBuffer sqlBuf = null;\n\t\t\tStringBuffer sqlParamBuf = null;\n\n\t\t\t// TODO: pre-compute some fields arrays and statements for common roleRealms sizes for efficiency? -ggolden\n\n\t\t\t// make (?, ?, ?...) for realms size\n\t\t\tsqlParamBuf = new StringBuffer();\n\t\t\tsqlParamBuf.append(\"(?\");\n\t\t\tfor (int i = 0; i < realms.size() - 1; i++)\n\t\t\t{\n\t\t\t\tsqlParamBuf.append(\",?\");\n\t\t\t}\n\t\t\tsqlParamBuf.append(\")\");\n\t\t\tsqlParam = sqlParamBuf.toString();\n\n\t\t\t// Assemble SQL\n\t\t\tsqlBuf = new StringBuffer();\n\t\t\tsqlBuf.append(\"select SRRG.USER_ID \");\n\t\t\tsqlBuf.append(\"from SAKAI_REALM_RL_GR SRRG \");\n\t\t\tif (\"mysql\".equals(sqlService().getVendor()))\n\t\t\t{\n\t\t\t\tsqlBuf.append(\"inner join SAKAI_REALM SR force index (AK_SAKAI_REALM_ID) ON SRRG.REALM_KEY = SR.REALM_KEY \");\n\t\t\t}\n\t\t\telse\n\t\t\t// oracle and hsql\n\t\t\t{\n\t\t\t\tsqlBuf.append(\"inner join SAKAI_REALM SR ON SRRG.REALM_KEY = SR.REALM_KEY \");\n\t\t\t}\n\t\t\tsqlBuf.append(\"where SR.REALM_ID in \" + sqlParam + \" \");\n\t\t\tsqlBuf.append(\"and SRRG.ACTIVE = '1' \");\n\t\t\tsqlBuf.append(\"and SRRG.ROLE_KEY in \");\n\t\t\tsqlBuf.append(\"(select SRRF.ROLE_KEY \");\n\t\t\tsqlBuf.append(\"from SAKAI_REALM_RL_FN SRRF \");\n\t\t\tsqlBuf.append(\"inner join SAKAI_REALM_FUNCTION SRF ON SRRF.FUNCTION_KEY = SRF.FUNCTION_KEY \");\n\t\t\tif (\"mysql\".equals(sqlService().getVendor()))\n\t\t\t{\n\t\t\t\tsqlBuf.append(\"inner join SAKAI_REALM SR1 force index (AK_SAKAI_REALM_ID) ON SRRF.REALM_KEY = SR1.REALM_KEY \");\n\t\t\t}\n\t\t\telse\n\t\t\t// oracle and hsql\n\t\t\t{\n\t\t\t\tsqlBuf.append(\"inner join SAKAI_REALM SR1 ON SRRF.REALM_KEY = SR1.REALM_KEY \");\n\t\t\t}\n\t\t\tsqlBuf.append(\"where SRF.FUNCTION_NAME = ? \");\n\t\t\tsqlBuf.append(\"and SR1.REALM_ID in  \" + sqlParam + \")\");\n\t\t\tsql = sqlBuf.toString();\n\n\t\t\tObject[] fields = new Object[1 + (2 * realms.size())];\n\t\t\tint pos = 0;\n\t\t\tfor (Iterator i = realms.iterator(); i.hasNext();)\n\t\t\t{\n\t\t\t\tString roleRealm = (String) i.next();\n\t\t\t\tfields[pos++] = roleRealm;\n\t\t\t}\n\t\t\tfields[pos++] = lock;\n\t\t\tfor (Iterator i = realms.iterator(); i.hasNext();)\n\t\t\t{\n\t\t\t\tString roleRealm = (String) i.next();\n\t\t\t\tfields[pos++] = roleRealm;\n\t\t\t}\n\n\t\t\t// read the strings\n\t\t\tList results = m_sql.dbRead(sql, fields, null);\n\n\t\t\t// prepare the return\n\t\t\tSet rv = new HashSet();\n\t\t\trv.addAll(results);\n\t\t\treturn rv;\n\t\t}","id":13546,"modified_method":"/**\n\t\t * {@inheritDoc}\n\t\t */\n\t\tpublic Set getUsersIsAllowed(String lock, Collection realms)\n\t\t{\n\t\t\tif ((lock == null) || (realms == null) || (realms.isEmpty())) return new HashSet();\n\n\t\t\tString sql = \"\";\n\t\t\tStringBuffer sqlBuf = null;\n\t\t\t\n\t\t\t// Assemble SQL\n\t\t\tsqlBuf = new StringBuffer();\n\t\t\tsqlBuf.append(\"select SRRG.USER_ID \");\n\t\t\tsqlBuf.append(\"from SAKAI_REALM_RL_GR SRRG \");\n\t\t\tif (\"mysql\".equals(sqlService().getVendor()))\n\t\t\t{\n\t\t\t\tsqlBuf.append(\"inner join SAKAI_REALM SR force index (AK_SAKAI_REALM_ID) ON SRRG.REALM_KEY = SR.REALM_KEY \");\n\t\t\t}\n\t\t\telse\n\t\t\t// oracle and hsql\n\t\t\t{\n\t\t\t\tsqlBuf.append(\"inner join SAKAI_REALM SR ON SRRG.REALM_KEY = SR.REALM_KEY \");\n\t\t\t}\n\t\t\tsqlBuf.append(\"where \" + orInClause(realms.size(), \"SR.REALM_ID\") + \" \");\n\t\t\tsqlBuf.append(\"and SRRG.ACTIVE = '1' \");\n\t\t\tsqlBuf.append(\"and SRRG.ROLE_KEY in \");\n\t\t\tsqlBuf.append(\"(select SRRF.ROLE_KEY \");\n\t\t\tsqlBuf.append(\"from SAKAI_REALM_RL_FN SRRF \");\n\t\t\tsqlBuf.append(\"inner join SAKAI_REALM_FUNCTION SRF ON SRRF.FUNCTION_KEY = SRF.FUNCTION_KEY \");\n\t\t\tif (\"mysql\".equals(sqlService().getVendor()))\n\t\t\t{\n\t\t\t\tsqlBuf.append(\"inner join SAKAI_REALM SR1 force index (AK_SAKAI_REALM_ID) ON SRRF.REALM_KEY = SR1.REALM_KEY \");\n\t\t\t}\n\t\t\telse\n\t\t\t// oracle and hsql\n\t\t\t{\n\t\t\t\tsqlBuf.append(\"inner join SAKAI_REALM SR1 ON SRRF.REALM_KEY = SR1.REALM_KEY \");\n\t\t\t}\n\t\t\tsqlBuf.append(\"where SRF.FUNCTION_NAME = ? \");\n\t\t\tsqlBuf.append(\"and \" + orInClause(realms.size(), \"SR1.REALM_ID\") + \")\");\n\t\t\tsql = sqlBuf.toString();\n\n\t\t\tObject[] fields = new Object[1 + (2 * realms.size())];\n\t\t\tint pos = 0;\n\t\t\tfor (Iterator i = realms.iterator(); i.hasNext();)\n\t\t\t{\n\t\t\t\tString roleRealm = (String) i.next();\n\t\t\t\tfields[pos++] = roleRealm;\n\t\t\t}\n\t\t\tfields[pos++] = lock;\n\t\t\tfor (Iterator i = realms.iterator(); i.hasNext();)\n\t\t\t{\n\t\t\t\tString roleRealm = (String) i.next();\n\t\t\t\tfields[pos++] = roleRealm;\n\t\t\t}\n\n\t\t\t// read the strings\n\t\t\tList results = m_sql.dbRead(sql, fields, null);\n\n\t\t\t// prepare the return\n\t\t\tSet rv = new HashSet();\n\t\t\trv.addAll(results);\n\t\t\treturn rv;\n\t\t}","commit_id":"e11965dca07beb57fce042323711556df5044062","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\n\t\t * {@inheritDoc}\n\t\t */\n\t\tpublic void refreshAuthzGroup(BaseAuthzGroup realm)\n\t\t{\n\t\t\tif ((realm == null) || (m_provider == null)) return;\n\n\t\t\tString sql = \"\";\n\t\t\tStringBuffer sqlBuf = null;\n\n\t\t\t// Note: the realm is still lazy - we have the realm id but don't need to worry about changing grants\n\n\t\t\t// get the latest userEid -> role name map from the provider\n\t\t\tMap target = m_provider.getUserRolesForGroup(realm.getProviderGroupId());\n\n\t\t\t// read the realm's grants\n\t\t\tsqlBuf = new StringBuffer();\n\t\t\tsqlBuf.append(\"select SRRG.USER_ID, SRR.ROLE_NAME, SRRG.ACTIVE, SRRG.PROVIDED \");\n\t\t\tsqlBuf.append(\"from SAKAI_REALM_RL_GR SRRG \");\n\t\t\tsqlBuf.append(\"inner join SAKAI_REALM SR on SRRG. REALM_KEY = SR. REALM_KEY \");\n\t\t\tsqlBuf.append(\"inner join SAKAI_REALM_ROLE SRR on SRRG.ROLE_KEY = SRR.ROLE_KEY \");\n\t\t\tsqlBuf.append(\"where SR.REALM_ID = ?\");\n\t\t\tsql = sqlBuf.toString();\n\n\t\t\tObject[] fields = new Object[1];\n\t\t\tfields[0] = caseId(realm.getId());\n\n\t\t\tList grants = m_sql.dbRead(sql, fields, new SqlReader()\n\t\t\t{\n\t\t\t\tpublic Object readSqlResultRecord(ResultSet result)\n\t\t\t\t{\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tString userId = result.getString(1);\n\t\t\t\t\t\tString roleName = result.getString(2);\n\t\t\t\t\t\tString active = result.getString(3);\n\t\t\t\t\t\tString provided = result.getString(4);\n\t\t\t\t\t\treturn new UserAndRole(userId, roleName, \"1\".equals(active), \"1\".equals(provided));\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Throwable ignore)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// make a map, user id -> role granted, each for provider and non-provider (or inactive)\n\t\t\tMap existing = new HashMap();\n\t\t\tMap nonProvider = new HashMap();\n\t\t\tfor (Iterator i = grants.iterator(); i.hasNext();)\n\t\t\t{\n\t\t\t\tUserAndRole uar = (UserAndRole) i.next();\n\n\t\t\t\t// active and provided are the currently stored provider grants\n\t\t\t\tif (uar.active && uar.provided)\n\t\t\t\t{\n\t\t\t\t\tif (existing.containsKey(uar.userId))\n\t\t\t\t\t{\n\t\t\t\t\t\tM_log.warn(\"refreshRealm: duplicate user id found in provider grants: \" + uar.userId);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\texisting.put(uar.userId, uar.role);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// inactive or not provided are the currently stored internal grants - not to be overwritten by provider info\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (nonProvider.containsKey(uar.userId))\n\t\t\t\t\t{\n\t\t\t\t\t\tM_log.warn(\"refreshRealm: duplicate user id found in nonProvider grants: \" + uar.userId);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tnonProvider.put(uar.userId, uar.role);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// compute the records we need to delete: every existing not in target or not matching target's role\n\t\t\tList toDelete = new Vector();\n\t\t\tfor (Iterator i = existing.entrySet().iterator(); i.hasNext();)\n\t\t\t{\n\t\t\t\tMap.Entry entry = (Map.Entry) i.next();\n\t\t\t\tString userId = (String) entry.getKey();\n\t\t\t\tString role = (String) entry.getValue();\n\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tString userEid = userDirectoryService().getUserEid(userId);\n\t\t\t\t\tString targetRole = (String) target.get(userEid);\n\t\t\t\t\tif ((targetRole == null) || (!targetRole.equals(role)))\n\t\t\t\t\t{\n\t\t\t\t\t\ttoDelete.add(userId);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcatch (UserNotDefinedException e)\n\t\t\t\t{\n\t\t\t\t\tM_log.warn(\"refreshAuthzGroup: cannot find eid for user: \" + userId);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// compute the records we need to add: every target not in existing, or not matching's existing's role\n\t\t\t// we don't insert target grants that would override internal grants\n\t\t\tList toInsert = new Vector();\n\t\t\tfor (Iterator i = target.entrySet().iterator(); i.hasNext();)\n\t\t\t{\n\t\t\t\tMap.Entry entry = (Map.Entry) i.next();\n\t\t\t\tString userEid = (String) entry.getKey();\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tString userId = userDirectoryService().getUserId(userEid);\n\n\t\t\t\t\tString role = (String) entry.getValue();\n\t\n\t\t\t\t\tString existingRole = (String) existing.get(userId);\n\t\t\t\t\tString nonProviderRole = (String) nonProvider.get(userId);\n\t\t\t\t\tif ((nonProviderRole == null) && ((existingRole == null) || (!existingRole.equals(role))))\n\t\t\t\t\t{\n\t\t\t\t\t\ttoInsert.add(new UserAndRole(userId, role, true, true));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcatch (UserNotDefinedException e)\n\t\t\t\t{\n\t\t\t\t\tM_log.warn(\"refreshAuthzGroup: cannot find id for user eid: \" + userEid);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// if any, do it\n\t\t\tif ((toDelete.size() > 0) || (toInsert.size() > 0))\n\t\t\t{\n\t\t\t\t// do these each in their own transaction, to avoid possible deadlock\n\t\t\t\t// caused by transactions modifying more than one row at a time.\n\n\t\t\t\t// delete\n\t\t\t\tif (\"mysql\".equals(sqlService().getVendor()))\n\t\t\t\t{\n\t\t\t\t\tsql = \"delete SAKAI_REALM_RL_GR from SAKAI_REALM_RL_GR inner join SAKAI_REALM \"\n\t\t\t\t\t\t+ \"on SAKAI_REALM_RL_GR.REALM_KEY = SAKAI_REALM.REALM_KEY where REALM_ID = ? and USER_ID = ?\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t// oracle and hsql\n\t\t\t\t{\n\t\t\t\t\tsql = \"delete from SAKAI_REALM_RL_GR \"\n\t\t\t\t\t\t+ \"where REALM_KEY in (select REALM_KEY from SAKAI_REALM where REALM_ID = ?) and USER_ID = ?\";\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfields = new Object[2];\n\t\t\t\tfields[0] = caseId(realm.getId());\n\t\t\t\tfor (Iterator i = toDelete.iterator(); i.hasNext();)\n\t\t\t\t{\n\t\t\t\t\tString userId = (String) i.next();\n\t\t\t\t\tfields[1] = userId;\n\t\t\t\t\tm_sql.dbWrite(sql, fields);\n\t\t\t\t}\n\n\t\t\t\t// insert\n\t\t\t\tsql = \"insert into SAKAI_REALM_RL_GR (REALM_KEY, USER_ID, ROLE_KEY, ACTIVE, PROVIDED) \"\n\t\t\t\t\t\t+ \"values ((select REALM_KEY from SAKAI_REALM where REALM_ID = ?), ?, (select ROLE_KEY from SAKAI_REALM_ROLE where ROLE_NAME = ?), '1', '1')\";\n\t\t\t\tfields = new Object[3];\n\t\t\t\tfields[0] = caseId(realm.getId());\n\t\t\t\tfor (Iterator i = toInsert.iterator(); i.hasNext();)\n\t\t\t\t{\n\t\t\t\t\tUserAndRole uar = (UserAndRole) i.next();\n\t\t\t\t\tfields[1] = uar.userId;\n\t\t\t\t\tfields[2] = uar.role;\n\n\t\t\t\t\tm_sql.dbWrite(sql, fields);\n\t\t\t\t}\n\t\t\t}\n\t\t}","id":13547,"modified_method":"/**\n\t\t * {@inheritDoc}\n\t\t */\n\t\tpublic void refreshAuthzGroup(BaseAuthzGroup realm)\n\t\t{\n\t\t\tif ((realm == null) || (m_provider == null)) return;\n\n\t\t\tString sql = \"\";\n\t\t\tStringBuffer sqlBuf = null;\n\n\t\t\t// Note: the realm is still lazy - we have the realm id but don't need to worry about changing grants\n\n\t\t\t// get the latest userEid -> role name map from the provider\n\t\t\tMap target = m_provider.getUserRolesForGroup(realm.getProviderGroupId());\n\n\t\t\t// read the realm's grants\n\t\t\tsqlBuf = new StringBuffer();\n\t\t\tsqlBuf.append(\"select SRRG.USER_ID, SRR.ROLE_NAME, SRRG.ACTIVE, SRRG.PROVIDED \");\n\t\t\tsqlBuf.append(\"from SAKAI_REALM_RL_GR SRRG \");\n\t\t\tsqlBuf.append(\"inner join SAKAI_REALM SR on SRRG. REALM_KEY = SR. REALM_KEY \");\n\t\t\tsqlBuf.append(\"inner join SAKAI_REALM_ROLE SRR on SRRG.ROLE_KEY = SRR.ROLE_KEY \");\n\t\t\tsqlBuf.append(\"where SR.REALM_ID = ?\");\n\t\t\tsql = sqlBuf.toString();\n\n\t\t\tObject[] fields = new Object[1];\n\t\t\tfields[0] = caseId(realm.getId());\n\n\t\t\tList grants = m_sql.dbRead(sql, fields, new SqlReader()\n\t\t\t{\n\t\t\t\tpublic Object readSqlResultRecord(ResultSet result)\n\t\t\t\t{\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tString userId = result.getString(1);\n\t\t\t\t\t\tString roleName = result.getString(2);\n\t\t\t\t\t\tString active = result.getString(3);\n\t\t\t\t\t\tString provided = result.getString(4);\n\t\t\t\t\t\treturn new UserAndRole(userId, roleName, \"1\".equals(active), \"1\".equals(provided));\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Throwable ignore)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// make a map, user id -> role granted, each for provider and non-provider (or inactive)\n\t\t\tMap<String, String> existing = new HashMap<String, String>();\n\t\t\tMap<String, String> nonProvider = new HashMap<String, String>();\n\t\t\tfor (Iterator i = grants.iterator(); i.hasNext();)\n\t\t\t{\n\t\t\t\tUserAndRole uar = (UserAndRole) i.next();\n\n\t\t\t\t// active and provided are the currently stored provider grants\n\t\t\t\tif (uar.active && uar.provided)\n\t\t\t\t{\n\t\t\t\t\tif (existing.containsKey(uar.userId))\n\t\t\t\t\t{\n\t\t\t\t\t\tM_log.warn(\"refreshRealm: duplicate user id found in provider grants: \" + uar.userId);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\texisting.put(uar.userId, uar.role);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// inactive or not provided are the currently stored internal grants - not to be overwritten by provider info\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tif (nonProvider.containsKey(uar.userId))\n\t\t\t\t\t{\n\t\t\t\t\t\tM_log.warn(\"refreshRealm: duplicate user id found in nonProvider grants: \" + uar.userId);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tnonProvider.put(uar.userId, uar.role);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// compute the records we need to delete: every existing not in target or not matching target's role\n\t\t\tList<String> toDelete = new Vector<String>();\n\t\t\tfor (Iterator i = existing.entrySet().iterator(); i.hasNext();)\n\t\t\t{\n\t\t\t\tMap.Entry entry = (Map.Entry) i.next();\n\t\t\t\tString userId = (String) entry.getKey();\n\t\t\t\tString role = (String) entry.getValue();\n\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tString userEid = userDirectoryService().getUserEid(userId);\n\t\t\t\t\tString targetRole = (String) target.get(userEid);\n\t\t\t\t\tif ((targetRole == null) || (!targetRole.equals(role)))\n\t\t\t\t\t{\n\t\t\t\t\t\ttoDelete.add(userId);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcatch (UserNotDefinedException e)\n\t\t\t\t{\n\t\t\t\t\tM_log.warn(\"refreshAuthzGroup: cannot find eid for user: \" + userId);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// compute the records we need to add: every target not in existing, or not matching's existing's role\n\t\t\t// we don't insert target grants that would override internal grants\n\t\t\tList<UserAndRole> toInsert = new Vector<UserAndRole>();\n\t\t\tfor (Iterator i = target.entrySet().iterator(); i.hasNext();)\n\t\t\t{\n\t\t\t\tMap.Entry entry = (Map.Entry) i.next();\n\t\t\t\tString userEid = (String) entry.getKey();\n\t\t\t\ttry\n\t\t\t\t{\n\t\t\t\t\tString userId = userDirectoryService().getUserId(userEid);\n\n\t\t\t\t\tString role = (String) entry.getValue();\n\t\n\t\t\t\t\tString existingRole = (String) existing.get(userId);\n\t\t\t\t\tString nonProviderRole = (String) nonProvider.get(userId);\n\t\t\t\t\tif ((nonProviderRole == null) && ((existingRole == null) || (!existingRole.equals(role))))\n\t\t\t\t\t{\n\t\t\t\t\t\ttoInsert.add(new UserAndRole(userId, role, true, true));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcatch (UserNotDefinedException e)\n\t\t\t\t{\n\t\t\t\t\tM_log.warn(\"refreshAuthzGroup: cannot find id for user eid: \" + userEid);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// if any, do it\n\t\t\tif ((toDelete.size() > 0) || (toInsert.size() > 0))\n\t\t\t{\n\t\t\t\t// do these each in their own transaction, to avoid possible deadlock\n\t\t\t\t// caused by transactions modifying more than one row at a time.\n\n\t\t\t\t// delete\n\t\t\t\tif (\"mysql\".equals(sqlService().getVendor()))\n\t\t\t\t{\n\t\t\t\t\tsql = \"DELETE SAKAI_REALM_RL_GR FROM SAKAI_REALM_RL_GR INNER JOIN SAKAI_REALM\"\n\t\t\t\t\t\t+ \" ON SAKAI_REALM_RL_GR.REALM_KEY = SAKAI_REALM.REALM_KEY AND SAKAI_REALM.REALM_ID = ?\"\n\t\t\t\t\t\t+ \" WHERE SAKAI_REALM_RL_GR.USER_ID = ?\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tsql = \"DELETE FROM SAKAI_REALM_RL_GR \"\n\t\t\t\t\t\t+ \" WHERE REALM_KEY IN (SELECT REALM_KEY FROM SAKAI_REALM WHERE REALM_ID = ?)\"\n\t\t\t\t\t\t+ \" AND USER_ID = ?\";\n\t\t\t\t}\n\t\t\t\tfields = new Object[2];\n\t\t\t\tfields[0] = caseId(realm.getId());\n\t\t\t\tfor (Iterator i = toDelete.iterator(); i.hasNext();)\n\t\t\t\t{\n\t\t\t\t\tString userId = (String) i.next();\n\t\t\t\t\tfields[1] = userId;\n\t\t\t\t\tm_sql.dbWrite(sql, fields);\n\t\t\t\t}\n\n\t\t\t\t// insert\n\t\t\t\tsql = \"insert into SAKAI_REALM_RL_GR (REALM_KEY, USER_ID, ROLE_KEY, ACTIVE, PROVIDED)\"\n\t\t\t\t\t\t+ \" values ((select REALM_KEY from SAKAI_REALM where REALM_ID = ?), ?, (select ROLE_KEY from SAKAI_REALM_ROLE where ROLE_NAME = ?), '1', '1')\";\n\t\t\t\tfields = new Object[3];\n\t\t\t\tfields[0] = caseId(realm.getId());\n\t\t\t\tfor (Iterator i = toInsert.iterator(); i.hasNext();)\n\t\t\t\t{\n\t\t\t\t\tUserAndRole uar = (UserAndRole) i.next();\n\t\t\t\t\tfields[1] = uar.userId;\n\t\t\t\t\tfields[2] = uar.role;\n\n\t\t\t\t\tm_sql.dbWrite(sql, fields);\n\t\t\t\t}\n\t\t\t}\n\t\t}","commit_id":"e11965dca07beb57fce042323711556df5044062","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public AuthzGroup edit(String id)\n\t\t{\n\t\t\tBaseAuthzGroup edit = (BaseAuthzGroup) super.editResource(id);\n\n\t\t\tif (edit != null)\n\t\t\t{\n\t\t\t\tedit.activate();\n\t\t\t\tcompleteGet(null, edit, true);\n\t\t\t}\n\n\t\t\treturn edit;\n\t\t}","id":13548,"modified_method":"/**\n\t\t * {@inheritDoc}\n\t\t */\n\t\tpublic AuthzGroup edit(String id)\n\t\t{\n\t\t\tBaseAuthzGroup edit = (BaseAuthzGroup) super.editResource(id);\n\n\t\t\tif (edit != null)\n\t\t\t{\n\t\t\t\tedit.activate();\n\t\t\t\tcompleteGet(null, edit, true);\n\t\t\t}\n\n\t\t\treturn edit;\n\t\t}","commit_id":"e11965dca07beb57fce042323711556df5044062","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\n\t\t * {@inheritDoc}\n\t\t */\n\t\tpublic Set getAllowedFunctions(String role, Collection realms)\n\t\t{\n\t\t\tif ((role == null) || (realms == null) || (realms.isEmpty())) return new HashSet();\n\n\t\t\tString sql = \"\";\n\t\t\tString sqlParam = \"\";\n\t\t\tStringBuffer sqlBuf = null;\n\t\t\tStringBuffer sqlParamBuf = null;\n\n\t\t\t// TODO: pre-compute some fields arrays and statements for common roleRealms sizes for efficiency? -ggolden\n\n\t\t\t// make (?, ?, ?...) for realms size\n\t\t\tsqlParamBuf = new StringBuffer();\n\t\t\tsqlParamBuf.append(\"(?\");\n\t\t\tfor (int i = 0; i < realms.size() - 1; i++)\n\t\t\t{\n\t\t\t\tsqlParamBuf.append(\",?\");\n\t\t\t}\n\t\t\tsqlParamBuf.append(\")\");\n\t\t\tsqlParam = sqlParamBuf.toString();\n\n\t\t\t// Assemble SQL\n\t\t\tsqlBuf = new StringBuffer();\n\t\t\tsqlBuf.append(\"select DISTINCT FUNCTION_NAME \");\n\t\t\tsqlBuf.append(\"from SAKAI_REALM_FUNCTION SRF \");\n\t\t\tsqlBuf.append(\"inner join SAKAI_REALM_RL_FN SRRF on SRF.FUNCTION_KEY = SRRF.FUNCTION_KEY \");\n\t\t\tsqlBuf.append(\"inner join SAKAI_REALM_ROLE SRR on SRRF.ROLE_KEY = SRR.ROLE_KEY \");\n\t\t\tsqlBuf.append(\"inner join SAKAI_REALM SR on SRRF.REALM_KEY = SR.REALM_KEY \");\n\t\t\tsqlBuf.append(\"where SRR.ROLE_NAME = ? \");\n\t\t\tsqlBuf.append(\"and SR.REALM_ID in \" + sqlParam);\n\t\t\tsql = sqlBuf.toString();\n\n\t\t\tObject[] fields = new Object[1 + realms.size()];\n\t\t\tfields[0] = role;\n\t\t\tint pos = 1;\n\t\t\tfor (Iterator i = realms.iterator(); i.hasNext();)\n\t\t\t{\n\t\t\t\tString roleRealm = (String) i.next();\n\t\t\t\tfields[pos++] = roleRealm;\n\t\t\t}\n\n\t\t\t// read the strings\n\t\t\tList results = m_sql.dbRead(sql, fields, null);\n\n\t\t\t// prepare the return\n\t\t\tSet rv = new HashSet();\n\t\t\trv.addAll(results);\n\t\t\treturn rv;\n\t\t}","id":13549,"modified_method":"/**\n\t\t * {@inheritDoc}\n\t\t */\n\t\tpublic Set getAllowedFunctions(String role, Collection realms)\n\t\t{\n\t\t\tif ((role == null) || (realms == null) || (realms.isEmpty())) return new HashSet();\n\n\t\t\tString sql = \"\";\n\t\t\tStringBuffer sqlBuf = null;\n\n\t\t\t// Assemble SQL\n\t\t\tsqlBuf = new StringBuffer();\n\t\t\tsqlBuf.append(\"select DISTINCT FUNCTION_NAME \");\n\t\t\tsqlBuf.append(\"from SAKAI_REALM_FUNCTION SRF \");\n\t\t\tsqlBuf.append(\"inner join SAKAI_REALM_RL_FN SRRF on SRF.FUNCTION_KEY = SRRF.FUNCTION_KEY \");\n\t\t\tsqlBuf.append(\"inner join SAKAI_REALM_ROLE SRR on SRRF.ROLE_KEY = SRR.ROLE_KEY \");\n\t\t\tsqlBuf.append(\"inner join SAKAI_REALM SR on SRRF.REALM_KEY = SR.REALM_KEY \");\n\t\t\tsqlBuf.append(\"where SRR.ROLE_NAME = ? \");\n\t\t\tsqlBuf.append(\"and \" + orInClause(realms.size(), \"SR.REALM_ID\"));\n\t\t\tsql = sqlBuf.toString();\n\n\t\t\tObject[] fields = new Object[1 + realms.size()];\n\t\t\tfields[0] = role;\n\t\t\tint pos = 1;\n\t\t\tfor (Iterator i = realms.iterator(); i.hasNext();)\n\t\t\t{\n\t\t\t\tString roleRealm = (String) i.next();\n\t\t\t\tfields[pos++] = roleRealm;\n\t\t\t}\n\n\t\t\t// read the strings\n\t\t\tList results = m_sql.dbRead(sql, fields, null);\n\n\t\t\t// prepare the return\n\t\t\tSet rv = new HashSet();\n\t\t\trv.addAll(results);\n\t\t\treturn rv;\n\t\t}","commit_id":"e11965dca07beb57fce042323711556df5044062","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\n\t\t * @inheritDoc\n\t\t */\n\t\tpublic void save(AuthzGroup edit)\n\t\t{\n\t\t\t// pre-check the roles and functions to make sure they are all defined\n\t\t\tfor (Iterator iRoles = ((BaseAuthzGroup) edit).m_roles.values().iterator(); iRoles.hasNext();)\n\t\t\t{\n\t\t\t\tRole role = (Role) iRoles.next();\n\n\t\t\t\t// make sure the role name is defined / define it\n\t\t\t\tcheckRoleName(role.getId());\n\n\t\t\t\tfor (Iterator iFunctions = role.getAllowedFunctions().iterator(); iFunctions.hasNext();)\n\t\t\t\t{\n\t\t\t\t\tString function = (String) iFunctions.next();\n\n\t\t\t\t\t// make sure the role name is defined / define it\n\t\t\t\t\tcheckFunctionName(function);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// write role functions, auth grants, anon grants, role grants, function grants, provider ids\n\t\t\t// and then commit the realm and release the lock, all in one transaction\n\t\t\tConnection connection = null;\n\t\t\tboolean wasCommit = true;\n\t\t\ttry\n\t\t\t{\n\t\t\t\tconnection = m_sql.borrowConnection();\n\t\t\t\twasCommit = connection.getAutoCommit();\n\t\t\t\tconnection.setAutoCommit(false);\n\n\t\t\t\t// delete the role functions, role grants, provider ids, role descriptions\n\t\t\t\tObject fields1[] = new Object[1];\n\t\t\t\tfields1[0] = caseId(edit.getId());\n\n\t\t\t\tString statement;\n\t\t\t\t\n\t\t\t\tif (\"mysql\".equals(sqlService().getVendor()))\n\t\t\t\t{\n\t\t\t\t\tstatement = \"delete SAKAI_REALM_RL_FN from SAKAI_REALM_RL_FN inner join SAKAI_REALM on SAKAI_REALM_RL_FN.REALM_KEY = SAKAI_REALM.REALM_KEY where REALM_ID = ?\";\n \t\t\t\t\tm_sql.dbWrite(connection, statement, fields1);\n \n\t\t\t\t\tstatement = \"delete SAKAI_REALM_RL_GR from SAKAI_REALM_RL_GR inner join SAKAI_REALM on SAKAI_REALM_RL_GR.REALM_KEY = SAKAI_REALM.REALM_KEY where REALM_ID = ?\";\n \t\t\t\t\tm_sql.dbWrite(connection, statement, fields1);\n \n\t\t\t\t\tstatement = \"delete SAKAI_REALM_PROVIDER from SAKAI_REALM_PROVIDER inner join SAKAI_REALM on SAKAI_REALM_PROVIDER.REALM_KEY = SAKAI_REALM.REALM_KEY where REALM_ID = ?\";\n \t\t\t\t\tm_sql.dbWrite(connection, statement, fields1);\n \n\t\t\t\t\tstatement = \"delete SAKAI_REALM_ROLE_DESC from SAKAI_REALM_ROLE_DESC inner join SAKAI_REALM on SAKAI_REALM_ROLE_DESC.REALM_KEY = SAKAI_REALM.REALM_KEY where REALM_ID = ?\";\n \t\t\t\t\tm_sql.dbWrite(connection, statement, fields1);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t// oracle and hsql\n\t\t\t\t{\n\t\t\t\t\tstatement = \"delete from SAKAI_REALM_RL_FN where REALM_KEY in (select REALM_KEY from SAKAI_REALM where REALM_ID = ?)\";\n\t\t\t\t\tm_sql.dbWrite(connection, statement, fields1);\n\n\t\t\t\t\tstatement = \"delete from SAKAI_REALM_RL_GR where REALM_KEY in (select REALM_KEY from SAKAI_REALM where REALM_ID = ?)\";\n\t\t\t\t\tm_sql.dbWrite(connection, statement, fields1);\n\n\t\t\t\t\tstatement = \"delete from SAKAI_REALM_PROVIDER where REALM_KEY in (select REALM_KEY from SAKAI_REALM where REALM_ID = ?)\";\n\t\t\t\t\tm_sql.dbWrite(connection, statement, fields1);\n\n\t\t\t\t\tstatement = \"delete from SAKAI_REALM_ROLE_DESC where REALM_KEY in (select REALM_KEY from SAKAI_REALM where REALM_ID = ?)\";\n\t\t\t\t\tm_sql.dbWrite(connection, statement, fields1);\n\t\t\t\t}\n\n\t\t\t\tObject[] fields3 = new Object[3];\n\t\t\t\tObject[] roleDescFields = new Object[4];\n\n\t\t\t\tfields3[0] = caseId(edit.getId());\n\t\t\t\troleDescFields[0] = caseId(edit.getId());\n\n\t\t\t\t// write all the role definitions for the realm\n\t\t\t\tstatement = \"insert into SAKAI_REALM_RL_FN (REALM_KEY, ROLE_KEY, FUNCTION_KEY) values (\"\n\t\t\t\t\t\t+ \"(select REALM_KEY from SAKAI_REALM where REALM_ID = ?), \"\n\t\t\t\t\t\t+ \"(select ROLE_KEY from SAKAI_REALM_ROLE where ROLE_NAME = ?), \"\n\t\t\t\t\t\t+ \"(select FUNCTION_KEY from SAKAI_REALM_FUNCTION where FUNCTION_NAME = ?))\";\n\t\t\t\t// and the role descriptions\n\t\t\t\tString stmt2 = \"insert into SAKAI_REALM_ROLE_DESC (REALM_KEY, ROLE_KEY, DESCRIPTION, PROVIDER_ONLY) values(\"\n\t\t\t\t\t\t+ \"(select REALM_KEY from SAKAI_REALM where REALM_ID = ?), \"\n\t\t\t\t\t\t+ \"(select ROLE_KEY from SAKAI_REALM_ROLE where ROLE_NAME = ?), ?, ?)\";\n\t\t\t\tfor (Iterator iRoles = ((BaseAuthzGroup) edit).m_roles.values().iterator(); iRoles.hasNext();)\n\t\t\t\t{\n\t\t\t\t\tRole role = (Role) iRoles.next();\n\n\t\t\t\t\t// write the role's function entries\n\t\t\t\t\tfields3[1] = role.getId();\n\t\t\t\t\troleDescFields[1] = role.getId();\n\t\t\t\t\tfor (Iterator iFunctions = role.getAllowedFunctions().iterator(); iFunctions.hasNext();)\n\t\t\t\t\t{\n\t\t\t\t\t\tString function = (String) iFunctions.next();\n\n\t\t\t\t\t\tfields3[2] = function;\n\t\t\t\t\t\tm_sql.dbWrite(connection, statement, fields3);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// and the description -\n\t\t\t\t\t// lets always write it even if null so we can help keep the role defined even if it has no functions\n\t\t\t\t\troleDescFields[2] = role.getDescription();\n\t\t\t\t\t\n\t\t\t\t\t// and the provider_only flag\n\t\t\t\t\troleDescFields[3] = role.isProviderOnly() ? '1' : '0';\n\t\t\t\t\tm_sql.dbWrite(connection, stmt2, roleDescFields);\n\t\t\t\t}\n\n\t\t\t\t// write all the role grants for the realm\n\t\t\t\tstatement = \"insert into SAKAI_REALM_RL_GR (REALM_KEY, USER_ID, ROLE_KEY, ACTIVE, PROVIDED) values (\"\n\t\t\t\t\t\t+ \"(select REALM_KEY from SAKAI_REALM where REALM_ID = ?), ?, \"\n\t\t\t\t\t\t+ \"(select ROLE_KEY from SAKAI_REALM_ROLE where ROLE_NAME = ?), ?, ?)\";\n\t\t\t\tObject[] fields5 = new Object[5];\n\t\t\t\tfields5[0] = caseId(edit.getId());\n\t\t\t\tfor (Iterator i = ((BaseAuthzGroup) edit).m_userGrants.entrySet().iterator(); i.hasNext();)\n\t\t\t\t{\n\t\t\t\t\tMap.Entry entry = (Map.Entry) i.next();\n\t\t\t\t\tBaseMember grant = (BaseMember) entry.getValue();\n\t\t\t\t\tString user = (String) entry.getKey();\n\n\t\t\t\t\tfields5[1] = user;\n\t\t\t\t\tfields5[2] = grant.role.getId();\n\t\t\t\t\tfields5[3] = (grant.active ? \"1\" : \"0\");\n\t\t\t\t\tfields5[4] = (grant.provided ? \"1\" : \"0\");\n\n\t\t\t\t\tm_sql.dbWrite(connection, statement, fields5);\n\t\t\t\t}\n\n\t\t\t\t// write each provider id component of a possibly compound id\n\t\t\t\tif ((edit.getProviderGroupId() != null) && (m_provider != null))\n\t\t\t\t{\n\t\t\t\t\tString[] ids = m_provider.unpackId(edit.getProviderGroupId());\n\t\t\t\t\tstatement = \"insert into SAKAI_REALM_PROVIDER (REALM_KEY, PROVIDER_ID) values (\"\n\t\t\t\t\t\t\t+ \"(select REALM_KEY from SAKAI_REALM where REALM_ID = ?), ?)\";\n\t\t\t\t\tObject[] fields2 = new Object[2];\n\t\t\t\t\tfields2[0] = caseId(edit.getId());\n\t\t\t\t\tfor (int i = 0; i < ids.length; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tfields2[1] = ids[i];\n\t\t\t\t\t\tm_sql.dbWrite(connection, statement, fields2);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// write the realm and properties, releasing the lock\n\t\t\t\tsuper.commitResource(connection, edit, fields(edit.getId(), ((BaseAuthzGroup) edit), true), edit.getProperties(),\n\t\t\t\t\t\t((BaseAuthzGroup) edit).getKey());\n\n\t\t\t\t// commit\n\t\t\t\tconnection.commit();\n\n\t\t\t\trefreshAuthzGroup((BaseAuthzGroup) edit);\n\t\t\t}\n\t\t\tcatch (Exception e)\n\t\t\t{\n\t\t\t\tif (connection != null)\n\t\t\t\t{\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tconnection.rollback();\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception ee)\n\t\t\t\t\t{\n\t\t\t\t\t\tM_log.warn(\"commit, while rolling back: \" + ee);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tM_log.warn(\"commit: \" + e);\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\tif (connection != null)\n\t\t\t\t{\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tconnection.setAutoCommit(wasCommit);\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e)\n\t\t\t\t\t{\n\t\t\t\t\t\tM_log.warn(\"commit, while setting auto commit: \" + e);\n\t\t\t\t\t}\n\t\t\t\t\tm_sql.returnConnection(connection);\n\t\t\t\t}\n\t\t\t}\n\t\t}","id":13550,"modified_method":"/**\n\t\t * @inheritDoc\n\t\t */\n\t\tpublic void save(AuthzGroup edit)\n\t\t{\n\t\t\t// pre-check the roles and functions to make sure they are all defined\n\t\t\tfor (Iterator iRoles = ((BaseAuthzGroup) edit).m_roles.values().iterator(); iRoles.hasNext();)\n\t\t\t{\n\t\t\t\tRole role = (Role) iRoles.next();\n\n\t\t\t\t// make sure the role name is defined / define it\n\t\t\t\tcheckRoleName(role.getId());\n\n\t\t\t\tfor (Iterator iFunctions = role.getAllowedFunctions().iterator(); iFunctions.hasNext();)\n\t\t\t\t{\n\t\t\t\t\tString function = (String) iFunctions.next();\n\n\t\t\t\t\t// make sure the role name is defined / define it\n\t\t\t\t\tcheckFunctionName(function);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// update SAKAI_REALM_RL_FN: read, diff with the edit, add and delete\n\t\t\tsave_REALM_RL_FN(edit);\n\n\t\t\t// update SAKAI_REALM_RL_GR\n\t\t\tsave_REALM_RL_GR(edit);\n\n\t\t\t// update SAKAI_REALM_PROVIDER\n\t\t\tsave_REALM_PROVIDER(edit);\n\n\t\t\t// update SAKAI_REALM_ROLE_DESC\n\t\t\tsave_REALM_ROLE_DESC(edit);\n\n\t\t\t// update the main realm table and properties\n\t\t\tsuper.commitResource(null, edit, fields(edit.getId(), ((BaseAuthzGroup) edit), true), edit.getProperties(), ((BaseAuthzGroup) edit)\n\t\t\t\t\t.getKey());\n\n\t\t\t// update with the provider\n\t\t\trefreshAuthzGroup((BaseAuthzGroup) edit);\n\t\t}","commit_id":"e11965dca07beb57fce042323711556df5044062","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public AuthzGroup put(String id)\n\t\t{\n\t\t\tBaseAuthzGroup rv = (BaseAuthzGroup) super.putResource(id, fields(id, null, false));\n\t\t\tif (rv != null)\n\t\t\t{\n\t\t\t\trv.activate();\n\t\t\t}\n\n\t\t\treturn rv;\n\t\t}","id":13551,"modified_method":"/**\n\t\t * {@inheritDoc}\n\t\t */\n\t\tpublic AuthzGroup put(String id)\n\t\t{\n\t\t\tBaseAuthzGroup rv = (BaseAuthzGroup) super.putResource(id, fields(id, null, false));\n\t\t\tif (rv != null)\n\t\t\t{\n\t\t\t\trv.activate();\n\t\t\t}\n\n\t\t\treturn rv;\n\t\t}","commit_id":"e11965dca07beb57fce042323711556df5044062","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\n\t\t * {@inheritDoc}\n\t\t */\n\t\tpublic Map getUsersRole(Collection userIds, String azGroupId)\n\t\t{\n\t\t\tif ((userIds == null) || (userIds.isEmpty()) || (azGroupId == null))\n\t\t\t{\n\t\t\t\treturn new HashMap();\n\t\t\t}\n\n\t\t\tString inClause = orInClause(userIds, \"SRRG.USER_ID\");\n\n\t\t\tString sql = \"select SRRG.USER_ID, SRR.ROLE_NAME from SAKAI_REALM_RL_GR SRRG \"\n\t\t\t\t\t+ \"inner join SAKAI_REALM SR on SRRG.REALM_KEY = SR.REALM_KEY \"\n\t\t\t\t\t+ \"inner join SAKAI_REALM_ROLE SRR on SRRG.ROLE_KEY = SRR.ROLE_KEY \" + \"where SR.REALM_ID = ? and \" + inClause\n\t\t\t\t\t+ \" and SRRG.ACTIVE = '1'\";\n\n\t\t\tObject[] fields = new Object[1 + userIds.size()];\n\t\t\tfields[0] = azGroupId;\n\t\t\tint pos = 1;\n\t\t\tfor (Iterator i = userIds.iterator(); i.hasNext();)\n\t\t\t{\n\t\t\t\tfields[pos++] = i.next();\n\t\t\t}\n\n\t\t\t// the return\n\t\t\tfinal Map rv = new HashMap();\n\n\t\t\t// read\n\t\t\tList results = m_sql.dbRead(sql, fields, new SqlReader()\n\t\t\t{\n\t\t\t\tpublic Object readSqlResultRecord(ResultSet result)\n\t\t\t\t{\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\t// read the results\n\t\t\t\t\t\tString userId = result.getString(1);\n\t\t\t\t\t\tString role = result.getString(2);\n\n\t\t\t\t\t\tif ((userId != null) && (role != null))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trv.put(userId, role);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Throwable t)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn rv;\n\t\t}","id":13552,"modified_method":"/**\n\t\t * {@inheritDoc}\n\t\t */\n\t\tpublic Map getUsersRole(Collection userIds, String azGroupId)\n\t\t{\n\t\t\tif ((userIds == null) || (userIds.isEmpty()) || (azGroupId == null))\n\t\t\t{\n\t\t\t\treturn new HashMap();\n\t\t\t}\n\n\t\t\tString inClause = orInClause(userIds.size(), \"SRRG.USER_ID\");\n\n\t\t\tString sql = \"select SRRG.USER_ID, SRR.ROLE_NAME from SAKAI_REALM_RL_GR SRRG \"\n\t\t\t\t\t+ \"inner join SAKAI_REALM SR on SRRG.REALM_KEY = SR.REALM_KEY \"\n\t\t\t\t\t+ \"inner join SAKAI_REALM_ROLE SRR on SRRG.ROLE_KEY = SRR.ROLE_KEY \" + \"where SR.REALM_ID = ? and \" + inClause\n\t\t\t\t\t+ \" and SRRG.ACTIVE = '1'\";\n\n\t\t\tObject[] fields = new Object[1 + userIds.size()];\n\t\t\tfields[0] = azGroupId;\n\t\t\tint pos = 1;\n\t\t\tfor (Iterator i = userIds.iterator(); i.hasNext();)\n\t\t\t{\n\t\t\t\tfields[pos++] = i.next();\n\t\t\t}\n\n\t\t\t// the return\n\t\t\tfinal Map rv = new HashMap();\n\n\t\t\t// read\n\t\t\tm_sql.dbRead(sql, fields, new SqlReader()\n\t\t\t{\n\t\t\t\tpublic Object readSqlResultRecord(ResultSet result)\n\t\t\t\t{\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\t// read the results\n\t\t\t\t\t\tString userId = result.getString(1);\n\t\t\t\t\t\tString role = result.getString(2);\n\n\t\t\t\t\t\tif ((userId != null) && (role != null))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trv.put(userId, role);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Throwable t)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn rv;\n\t\t}","commit_id":"e11965dca07beb57fce042323711556df5044062","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\n\t * Form a SQL IN() clause, but break it up with ORs to keep the size of each IN below 100\n\t * \n\t * @param c\n\t *        The collection site\n\t * @param field\n\t *        The field name\n\t * @return a SQL IN() with ORs clause this large.\n\t */\n\tprotected String orInClause(Collection c, String field)\n\t{\n\t\t// Note: to avoide the dreaded ORA-01795 and the like, we need to limit to <100 the items in each in(?, ?, ...) clause, connecting them with ORs -ggolden\n\t\tint ors = c.size() / 99;\n\t\tint leftover = c.size() - (ors * 99);\n\t\tStringBuffer buf = new StringBuffer();\n\n\t\tbuf.append(\" \" + field + \" in \");\n\n\t\t// do all the full 99 '?' in/ors\n\t\tif (ors > 0)\n\t\t{\n\t\t\tfor (int i = 0; i < ors; i++)\n\t\t\t{\n\t\t\t\tbuf.append(\"(?\");\n\t\t\t\tfor (int j = 1; j < 99; j++)\n\t\t\t\t{\n\t\t\t\t\tbuf.append(\",?\");\n\t\t\t\t}\n\t\t\t\tbuf.append(\")\");\n\n\t\t\t\tif (i < ors - 1)\n\t\t\t\t{\n\t\t\t\t\tbuf.append(\" or \" + field + \" in \");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// add one more for the extra\n\t\tif (leftover > 0)\n\t\t{\n\t\t\tif (ors > 0)\n\t\t\t{\n\t\t\t\tbuf.append(\" or SRRG.USER_ID in \");\n\t\t\t}\n\t\t\tbuf.append(\"(?\");\n\t\t\tfor (int i = 1; i < leftover; i++)\n\t\t\t{\n\t\t\t\tbuf.append(\",?\");\n\t\t\t}\n\t\t\tbuf.append(\")\");\n\t\t}\n\n\t\treturn buf.toString();\n\t}","id":13553,"modified_method":"/**\n\t * Form a SQL IN() clause, but break it up with ORs to keep the size of each IN below 100\n\t * \n\t * @param size\n\t *        The size\n\t * @param field\n\t *        The field name\n\t * @return a SQL IN() with ORs clause this large.\n\t */\n\tprotected String orInClause(int size, String field)\n\t{\n\t\t// Note: to avoide the dreaded ORA-01795 and the like, we need to limit to <100 the items in each in(?, ?, ...) clause, connecting them with ORs -ggolden\n\t\tint ors = size / MAX_IN_CLAUSE;\n\t\tint leftover = size - (ors * MAX_IN_CLAUSE);\n\t\tStringBuffer buf = new StringBuffer();\n\n\t\t// enclose them all in parens if we have > 1\n\t\tif (ors > 0)\n\t\t{\n\t\t\tbuf.append(\" (\");\n\t\t}\n\n\t\tbuf.append(\" \" + field + \" IN \");\n\t\t\n\t\t// do all the full MAX_IN_CLAUSE '?' in/ors\n\t\tif (ors > 0)\n\t\t{\n\t\t\tfor (int i = 0; i < ors; i++)\n\t\t\t{\n\t\t\t\tbuf.append(\"(?\");\n\t\t\t\tfor (int j = 1; j < MAX_IN_CLAUSE; j++)\n\t\t\t\t{\n\t\t\t\t\tbuf.append(\",?\");\n\t\t\t\t}\n\t\t\t\tbuf.append(\")\");\n\n\t\t\t\tif (i < ors - 1)\n\t\t\t\t{\n\t\t\t\t\tbuf.append(\" OR \" + field + \" IN \");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// add one more for the extra\n\t\tif (leftover > 0)\n\t\t{\n\t\t\tif (ors > 0)\n\t\t\t{\n\t\t\t\tbuf.append(\" OR \" + field + \" IN \");\n\t\t\t}\n\t\t\tbuf.append(\"(?\");\n\t\t\tfor (int i = 1; i < leftover; i++)\n\t\t\t{\n\t\t\t\tbuf.append(\",?\");\n\t\t\t}\n\t\t\tbuf.append(\")\");\n\t\t}\n\n\t\t// enclose them all in parens if we have > 1\n\t\tif (ors > 0)\n\t\t{\n\t\t\tbuf.append(\" )\");\n\t\t}\n\n\t\treturn buf.toString();\n\t}","commit_id":"e11965dca07beb57fce042323711556df5044062","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public void testAddBlogsEntrySite() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dock Bar\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//li[@id='_145_mySites']/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//li[@id='_145_mySites']/a/span\",\n\t\t\tRuntimeVariables.replace(\"Go To\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Site Name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Site Name\", RuntimeVariables.replace(\"Site name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Blogs Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//input[@value='Add Blog Entry']\",\n\t\t\tRuntimeVariables.replace(\"Add Blog Entry\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='_33_title']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__33_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__33_editor']/iframe\");\n\t\tselenium.type(\"//body\", RuntimeVariables.replace(\"Blogs Entry Content\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//div[@class='entry-title']/h2/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Content\"),\n\t\t\tselenium.getText(\"//div[@class='entry-body']/p\"));\n\t}","id":13554,"modified_method":"public void testAddBlogsEntrySite() throws Exception {\n\t\tselenium.open(\"/web/site-name/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Blogs Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//input[@value='Add Blog Entry']\",\n\t\t\tRuntimeVariables.replace(\"Add Blog Entry\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='_33_title']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__33_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__33_editor']/iframe\");\n\t\tselenium.type(\"//body\", RuntimeVariables.replace(\"Blogs Entry Content\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//div[@class='entry-title']/h2/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Content\"),\n\t\t\tselenium.getText(\"//div[@class='entry-body']/p\"));\n\t}","commit_id":"6cc9414967539467376a94d5d9d64723cd203b44","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageBlogsSite() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dock Bar\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//li[@id='_145_mySites']/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//li[@id='_145_mySites']/a/span\",\n\t\t\tRuntimeVariables.replace(\"Go To\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Manage Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//div[@id='_156_layoutSetToolbar']/span/button[1]\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.type(\"//input[@id='_156_addLayoutName_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","id":13555,"modified_method":"public void testAddPageBlogsSite() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Manage Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//div[@id='_156_layoutSetToolbar']/span/button[1]\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@name='_156_name_en_US']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//input[@name='_156_name_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"6cc9414967539467376a94d5d9d64723cd203b44","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletBlogsSite() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dock Bar\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//li[@id='_145_mySites']/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//li[@id='_145_mySites']/a/span\",\n\t\t\tRuntimeVariables.replace(\"Go To\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Site Name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Site Name\", RuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Blogs Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//li[@id='_145_addContent']/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//li[@id='_145_addContent']/a/span\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[@title='Blogs']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[@title='Blogs']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":13556,"modified_method":"public void testAddPortletBlogsSite() throws Exception {\n\t\tselenium.open(\"/web/site-name/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Blogs Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[@title='Blogs']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[@title='Blogs']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"6cc9414967539467376a94d5d9d64723cd203b44","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddSites() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dock Bar\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//li[@id='_145_mySites']/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//li[@id='_145_mySites']/a/span\",\n\t\t\tRuntimeVariables.replace(\"Go To\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Blank Site\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Site Name\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Site Name\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t}","id":13557,"modified_method":"public void testAddSites() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Blank Site\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Site Name\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Site Name\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t}","commit_id":"6cc9414967539467376a94d5d9d64723cd203b44","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditSiteMemberRole() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dock Bar\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//li[@id='_145_mySites']/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//li[@id='_145_mySites']/a/span\",\n\t\t\tRuntimeVariables.replace(\"Go To\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Roles\", RuntimeVariables.replace(\"Roles\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='_128_keywords']\",\n\t\t\tRuntimeVariables.replace(\"Member\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Site Member\"),\n\t\t\tselenium.getText(\"//tr[3]/td/a\"));\n\t\tselenium.clickAt(\"//tr[3]/td/a\", RuntimeVariables.replace(\"Site Member\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Define Permissions\",\n\t\t\tRuntimeVariables.replace(\"Define Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.typeKeys(\"//select[@id='_128_add-permissions']\",\n\t\t\tRuntimeVariables.replace(\"b\"));\n\t\tselenium.keyPress(\"//select[@id='_128_add-permissions']\",\n\t\t\tRuntimeVariables.replace(\"\\\\13\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs\"), selenium.getText(\"//h3\"));\n\t\tselenium.check(\"//input[@value='com.liferay.portlet.blogsADD_ENTRY']\");\n\t\tselenium.check(\"//input[@value='com.liferay.portlet.blogsPERMISSIONS']\");\n\t\tselenium.check(\"//input[@value='com.liferay.portlet.blogsSUBSCRIBE']\");\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"The role permissions were updated.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","id":13558,"modified_method":"public void testEditSiteMemberRole() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Roles\", RuntimeVariables.replace(\"Roles\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='_128_keywords']\",\n\t\t\tRuntimeVariables.replace(\"Member\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Site Member\"),\n\t\t\tselenium.getText(\"//tr[3]/td/a\"));\n\t\tselenium.clickAt(\"//tr[3]/td/a\", RuntimeVariables.replace(\"Site Member\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Define Permissions\",\n\t\t\tRuntimeVariables.replace(\"Define Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.select(\"//select[@id='_128_add-permissions']\",\n\t\t\tRuntimeVariables.replace(\"Blogs\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs\"), selenium.getText(\"//h3\"));\n\t\tselenium.check(\"//input[@value='com.liferay.portlet.blogsADD_ENTRY']\");\n\t\tselenium.check(\"//input[@value='com.liferay.portlet.blogsPERMISSIONS']\");\n\t\tselenium.check(\"//input[@value='com.liferay.portlet.blogsSUBSCRIBE']\");\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"The role permissions were updated.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"6cc9414967539467376a94d5d9d64723cd203b44","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditUser2Sites() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dock Bar\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//li[@id='_145_mySites']/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//li[@id='_145_mySites']/a/span\",\n\t\t\tRuntimeVariables.replace(\"Go To\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='_125_keywords']\",\n\t\t\tRuntimeVariables.replace(\"userfn2*\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"userfn2\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"userln2\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"usersn2\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tselenium.clickAt(\"link=Actions\", RuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//ul/li[1]/a\", RuntimeVariables.replace(\"Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_125_sitesLink']\", \"Sites\"));\n\t\tselenium.clickAt(\"//a[@id='_125_sitesLink']\",\n\t\t\tRuntimeVariables.replace(\"Sites\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[4]/span/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[4]/span/a/span\",\n\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\tThread.sleep(5000);\n\t\tselenium.selectWindow(\"title=Users and Organizations\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_125_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//input[@id='_125_name']\",\n\t\t\tRuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.clickAt(\"//input[@value=\\\"Search\\\"]\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Site Name\"),\n\t\t\tselenium.getText(\"//tr[3]/td/a\"));\n\t\tselenium.clickAt(\"//tr[3]/td/a\", RuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.selectWindow(\"null\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//table/tr/td\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Site Name\"),\n\t\t\tselenium.getText(\"//table/tr/td\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//section[@id='portlet_125']/div/div/div/div\"));\n\t}","id":13559,"modified_method":"public void testEditUser2Sites() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='_125_keywords']\",\n\t\t\tRuntimeVariables.replace(\"userfn2\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"userfn2\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"userln2\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"usersn2\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_125_sitesLink']\", \"Sites\"));\n\t\tselenium.clickAt(\"//a[@id='_125_sitesLink']\",\n\t\t\tRuntimeVariables.replace(\"Sites\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[4]/span/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//div[4]/span/a/span\",\n\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\tThread.sleep(5000);\n\t\tselenium.selectWindow(\"title=Users and Organizations\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_125_name']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//input[@id='_125_name']\",\n\t\t\tRuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.clickAt(\"//input[@value=\\\"Search\\\"]\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Site Name\"),\n\t\t\tselenium.getText(\"//tr[3]/td/a\"));\n\t\tselenium.clickAt(\"//tr[3]/td/a\", RuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.selectWindow(\"null\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//table/tr/td\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Site Name\"),\n\t\t\tselenium.getText(\"//table/tr/td\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//section[@id='portlet_125']/div/div/div/div\"));\n\t}","commit_id":"6cc9414967539467376a94d5d9d64723cd203b44","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGuest_AssertNotViewableBlogsAddEntryButton()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.open(\"/web/site-name/blogs-test-page/\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\"//input[@value='Add Blog Entry']\"));\n\t}","id":13560,"modified_method":"public void testGuest_AssertNotViewableBlogsAddEntryButton()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/site-name/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Blogs Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\"//input[@value='Add Blog Entry']\"));\n\t}","commit_id":"6cc9414967539467376a94d5d9d64723cd203b44","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGuest_AssertNotViewableBlogsPermissionsButton()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.open(\"/web/site-name/blogs-test-page/\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertFalse(selenium.isElementPresent(\"//input[@value='Permissions']\"));\n\t}","id":13561,"modified_method":"public void testGuest_AssertNotViewableBlogsPermissionsButton()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/site-name/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Blogs Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertFalse(selenium.isElementPresent(\"//input[@value='Permissions']\"));\n\t}","commit_id":"6cc9414967539467376a94d5d9d64723cd203b44","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(AddUser1Test.class);\n\t\ttestSuite.addTestSuite(AddUser1PasswordTest.class);\n\t\ttestSuite.addTestSuite(AddUser2Test.class);\n\t\ttestSuite.addTestSuite(AddUser2PasswordTest.class);\n\t\ttestSuite.addTestSuite(AddSitesTest.class);\n\t\ttestSuite.addTestSuite(AddPageBlogsSiteTest.class);\n\t\ttestSuite.addTestSuite(AddPortletBlogsSiteTest.class);\n\t\ttestSuite.addTestSuite(AddBlogsEntrySiteTest.class);\n\t\ttestSuite.addTestSuite(EditUser2SitesTest.class);\n\t\ttestSuite.addTestSuite(EditSiteMemberRoleTest.class);\n\t\ttestSuite.addTestSuite(SignOutTest.class);\n\t\ttestSuite.addTestSuite(Guest_AssertNotViewableBlogsAddEntryButtonTest.class);\n\t\ttestSuite.addTestSuite(Guest_AssertNotViewableBlogsPermissionsButtonTest.class);\n\t\ttestSuite.addTestSuite(User1_SignInTest.class);\n\t\ttestSuite.addTestSuite(User1_AssertNotViewableBlogsAddEntryButtonTest.class);\n\t\ttestSuite.addTestSuite(User1_AssertNotViewableBlogsPermissionsButtonTest.class);\n\t\ttestSuite.addTestSuite(SignOutTest.class);\n\t\ttestSuite.addTestSuite(User2_SignInTest.class);\n\t\ttestSuite.addTestSuite(User2_AssertViewableBlogsAddEntryButtonTest.class);\n\t\ttestSuite.addTestSuite(User2_AssertViewableBlogsPermissionsButtonTest.class);\n\t\ttestSuite.addTestSuite(User2_AddBlogsEntrySiteTest.class);\n\t\ttestSuite.addTestSuite(User2_ViewSiteMemberRolePermissionTest.class);\n\t\ttestSuite.addTestSuite(SignOutTest.class);\n\t\ttestSuite.addTestSuite(SignInTest.class);\n\t\ttestSuite.addTestSuite(TearDownUser1Test.class);\n\t\ttestSuite.addTestSuite(TearDownUser2Test.class);\n\t\ttestSuite.addTestSuite(TearDownSitesTest.class);\n\t\ttestSuite.addTestSuite(TearDownSiteMemberRoleTest.class);\n\n\t\treturn testSuite;\n\t}","id":13562,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(AddUser1Test.class);\n\t\ttestSuite.addTestSuite(EditUser1PasswordTest.class);\n\t\ttestSuite.addTestSuite(AddUser2Test.class);\n\t\ttestSuite.addTestSuite(EditUser2PasswordTest.class);\n\t\ttestSuite.addTestSuite(AddSitesTest.class);\n\t\ttestSuite.addTestSuite(AddPageBlogsSiteTest.class);\n\t\ttestSuite.addTestSuite(AddPortletBlogsSiteTest.class);\n\t\ttestSuite.addTestSuite(AddBlogsEntrySiteTest.class);\n\t\ttestSuite.addTestSuite(EditUser2SitesTest.class);\n\t\ttestSuite.addTestSuite(EditSiteMemberRoleTest.class);\n\t\ttestSuite.addTestSuite(SignOutTest.class);\n\t\ttestSuite.addTestSuite(Guest_AssertNotViewableBlogsAddEntryButtonTest.class);\n\t\ttestSuite.addTestSuite(Guest_AssertNotViewableBlogsPermissionsButtonTest.class);\n\t\ttestSuite.addTestSuite(User1_SignInTest.class);\n\t\ttestSuite.addTestSuite(User1_AssertNotViewableBlogsAddEntryButtonTest.class);\n\t\ttestSuite.addTestSuite(User1_AssertNotViewableBlogsPermissionsButtonTest.class);\n\t\ttestSuite.addTestSuite(SignOutTest.class);\n\t\ttestSuite.addTestSuite(User2_SignInTest.class);\n\t\ttestSuite.addTestSuite(User2_AssertViewableBlogsAddEntryButtonTest.class);\n\t\ttestSuite.addTestSuite(User2_AssertViewableBlogsPermissionsButtonTest.class);\n\t\ttestSuite.addTestSuite(User2_AddBlogsEntrySiteTest.class);\n\t\ttestSuite.addTestSuite(User2_ViewSiteMemberRolePermissionTest.class);\n\t\ttestSuite.addTestSuite(SignOutTest.class);\n\t\ttestSuite.addTestSuite(SignInTest.class);\n\t\ttestSuite.addTestSuite(TearDownUserTest.class);\n\t\ttestSuite.addTestSuite(TearDownSitesTest.class);\n\t\ttestSuite.addTestSuite(TearDownPermissionsSiteMemberRoleTest.class);\n\n\t\treturn testSuite;\n\t}","commit_id":"6cc9414967539467376a94d5d9d64723cd203b44","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSignOut() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Sign Out\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Sign Out\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_58_login\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":13563,"modified_method":"public void testSignOut() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Sign Out\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Sign Out\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_58_login']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"6cc9414967539467376a94d5d9d64723cd203b44","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownSites() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dock Bar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//li[@id='_145_mySites']/a/span\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[@id='_145_mySites']/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Go To\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Site Name\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tboolean site1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!site1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean site2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!site2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean site3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!site3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean site4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!site4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean site5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!site5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//td[7]/span/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":13564,"modified_method":"public void testTearDownSites() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Site Name\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\n\t\t\t\tboolean site1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!site1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean site2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!site2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean site3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!site3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean site4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!site4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean site5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tif (!site5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 90) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[@class='last']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tloadRequiredJavaScriptModules();\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"6cc9414967539467376a94d5d9d64723cd203b44","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testUser1_AssertNotViewableBlogsAddEntryButton()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.open(\"/web/site-name/blogs-test-page/\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\"//input[@value='Add Blog Entry']\"));\n\t}","id":13565,"modified_method":"public void testUser1_AssertNotViewableBlogsAddEntryButton()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/site-name/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Blogs Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\"//input[@value='Add Blog Entry']\"));\n\t}","commit_id":"6cc9414967539467376a94d5d9d64723cd203b44","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testUser1_AssertNotViewableBlogsPermissionsButton()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.open(\"/web/site-name/blogs-test-page/\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertFalse(selenium.isElementPresent(\"//input[@value='Permissions']\"));\n\t}","id":13566,"modified_method":"public void testUser1_AssertNotViewableBlogsPermissionsButton()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/site-name/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Blogs Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertFalse(selenium.isElementPresent(\"//input[@value='Permissions']\"));\n\t}","commit_id":"6cc9414967539467376a94d5d9d64723cd203b44","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testUser2_AddBlogsEntrySite() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dock Bar\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//li[@id='_145_mySites']/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//li[@id='_145_mySites']/a/span\",\n\t\t\tRuntimeVariables.replace(\"Go To\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Site Name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Site Name\", RuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Blogs Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//input[@value='Add Blog Entry']\",\n\t\t\tRuntimeVariables.replace(\"Add Blog Entry\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='_33_title']\",\n\t\t\tRuntimeVariables.replace(\"User2 Blog Entry\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__33_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__33_editor']/iframe\");\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"User2 Blog Entry Content\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"User2 Blog Entry\"),\n\t\t\tselenium.getText(\"//div[@class='entry-title']/h2/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"User2 Blog Entry Content\"),\n\t\t\tselenium.getText(\"//div[@class='entry-body']/p\"));\n\t}","id":13567,"modified_method":"public void testUser2_AddBlogsEntrySite() throws Exception {\n\t\tselenium.open(\"/web/site-name/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Blogs Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//input[@value='Add Blog Entry']\",\n\t\t\tRuntimeVariables.replace(\"Add Blog Entry\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='_33_title']\",\n\t\t\tRuntimeVariables.replace(\"User2 Blog Entry\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__33_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__33_editor']/iframe\");\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"User2 Blog Entry Content\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"User2 Blog Entry\"),\n\t\t\tselenium.getText(\"//div[@class='entry-title']/h2/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"User2 Blog Entry Content\"),\n\t\t\tselenium.getText(\"//div[@class='entry-body']/p\"));\n\t}","commit_id":"6cc9414967539467376a94d5d9d64723cd203b44","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testUser2_AssertViewableBlogsAddEntryButton()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.open(\"/web/site-name/blogs-test-page/\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertTrue(selenium.isVisible(\"//input[@value='Add Blog Entry']\"));\n\t}","id":13568,"modified_method":"public void testUser2_AssertViewableBlogsAddEntryButton()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/site-name/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Blogs Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertTrue(selenium.isVisible(\"//input[@value='Add Blog Entry']\"));\n\t}","commit_id":"6cc9414967539467376a94d5d9d64723cd203b44","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testUser2_AssertViewableBlogsPermissionsButton()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.open(\"/web/site-name/blogs-test-page/\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertTrue(selenium.isVisible(\"//input[@value='Permissions']\"));\n\t}","id":13569,"modified_method":"public void testUser2_AssertViewableBlogsPermissionsButton()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/site-name/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Blogs Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertTrue(selenium.isVisible(\"//input[@value='Permissions']\"));\n\t}","commit_id":"6cc9414967539467376a94d5d9d64723cd203b44","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testUser2_ViewSiteMemberRolePermission()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dock Bar\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//li[@id='_145_mySites']/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"//li[@id='_145_mySites']/a/span\",\n\t\t\tRuntimeVariables.replace(\"Go To\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Site Name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Site Name\", RuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Blogs Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[@class='entry '][1]/div[@class='lfr-meta-actions edit-actions entry']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\"//span/a/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Permissions\"),\n\t\t\tselenium.getText(\"//td[2]/span/a/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\tselenium.getText(\"//td[3]/span/a/span\"));\n\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\"//div[@class='entry '][2]/div[@class='lfr-meta-actions edit-actions entry']\"));\n\t}","id":13570,"modified_method":"public void testUser2_ViewSiteMemberRolePermission()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/site-name/\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Blogs Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\"//td[1]/span/a/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Permissions\"),\n\t\t\tselenium.getText(\"//td[2]/span/a/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\tselenium.getText(\"//td[3]/span/a/span\"));\n\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\"//div[@class='entry '][2]/div[@class='lfr-meta-actions edit-actions entry']\"));\n\t}","commit_id":"6cc9414967539467376a94d5d9d64723cd203b44","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testParsePidWithFactoryPid()\n    {\n        mockBundleContextControl.replay();\n        ConfigInstaller ci = new ConfigInstaller(null, null, null);\n\n        String path = \"factory-pid.cfg\";\n        assertEquals( \"Pid with Factory Pid calculated\", \"factory\", ci.parsePid( path )[0] );\n        assertEquals( \"Pid with Factory Pid calculated\", \"pid\", ci.parsePid( path )[1] );\n    }","id":13571,"modified_method":"public void testParsePidWithFactoryPid()\n    {\n        ConfigInstaller ci = new ConfigInstaller(null, null, null);\n\n        String path = \"factory-pid.cfg\";\n        assertEquals( \"Pid with Factory Pid calculated\", \"factory\", ci.parsePid( path )[0] );\n        assertEquals( \"Pid with Factory Pid calculated\", \"pid\", ci.parsePid( path )[1] );\n    }","commit_id":"be265c3c7410afa0d8d93386928ec45233e6d9dd","url":"https://github.com/apache/felix"},{"original_method":"protected void setUp() throws Exception\n    {\n        super.setUp();\n        mockBundleContextControl = MockControl.createControl( BundleContext.class );\n        mockBundleContext = ( BundleContext ) mockBundleContextControl.getMock();\n        mockBundleControl = MockControl.createControl( Bundle.class );\n        mockBundle = ( Bundle ) mockBundleControl.getMock();\n        mockConfigurationAdminControl = MockControl.createControl( ConfigurationAdmin.class );\n        mockConfigurationAdmin = ( ConfigurationAdmin ) mockConfigurationAdminControl.getMock();\n        mockConfigurationControl = MockControl.createControl( Configuration.class );\n        mockConfiguration = ( Configuration ) mockConfigurationControl.getMock();\n    }","id":13572,"modified_method":"protected void setUp() throws Exception\n    {\n        super.setUp();\n        mockBundleContext = (BundleContext) EasyMock.createMock(BundleContext.class);\n        mockBundle = ( Bundle ) EasyMock.createMock(Bundle.class);\n        mockConfigurationAdmin = ( ConfigurationAdmin ) EasyMock.createMock(ConfigurationAdmin.class);\n        mockConfiguration = ( Configuration ) EasyMock.createMock(Configuration.class);\n    }","commit_id":"be265c3c7410afa0d8d93386928ec45233e6d9dd","url":"https://github.com/apache/felix"},{"original_method":"public void testSetConfiguration() throws Exception\n    {\n        mockConfiguration.getBundleLocation();\n        mockConfigurationControl.setReturnValue( null );\n        mockConfiguration.getProperties();\n        mockConfigurationControl.setReturnValue( new Hashtable() );\n        mockConfiguration.update( new Hashtable() );\n        mockConfigurationControl.setMatcher( new ArgumentsMatcher()\n        {\n            public boolean matches( Object[] expected, Object[] actual )\n            {\n                return ( actual.length == 1 ) && ( (Dictionary) actual[0] ).get( \"testkey\" ).equals( \"testvalue\" );\n            }\n\n\n            public String toString( Object[] arg0 )\n            {\n                return arg0.toString();\n            }\n        } );\n        mockConfigurationControl.replay();\n        mockConfigurationAdmin.listConfigurations( null );\n        mockConfigurationAdminControl.setMatcher( MockControl.ALWAYS_MATCHER );\n        mockConfigurationAdminControl.setReturnValue( null );\n        mockConfigurationAdmin.getConfiguration( \"firstcfg\", null );\n        mockConfigurationAdminControl.setReturnValue( mockConfiguration );\n        mockConfigurationAdminControl.replay();\n        mockBundleContextControl.replay();\n\n        ConfigInstaller ci = new ConfigInstaller( mockBundleContext, mockConfigurationAdmin, new FileInstall() );\n\n        assertTrue( ci.setConfig( new File( \"src/test/resources/watched/firstcfg.cfg\" ) ) );\n\n        mockConfigurationAdminControl.verify();\n        mockConfigurationControl.verify();\n        mockBundleContextControl.verify();\n    }","id":13573,"modified_method":"public void testSetConfiguration() throws Exception\n    {\n        EasyMock.expect(mockConfiguration.getBundleLocation()).andReturn(null);\n        EasyMock.expect(mockConfiguration.getProperties()).andReturn(new Hashtable());\n        EasyMock.reportMatcher(new IArgumentMatcher()\n        {\n            public boolean matches( Object argument )\n            {\n                return ((Dictionary) argument).get(\"testkey\").equals(\"testvalue\");\n            }\n\n            public void appendTo(StringBuffer buffer)\n            {\n                buffer.append(\"<Dictionary check: testkey present?>\");\n            }\n        } );\n        mockConfiguration.update(new Hashtable());\n        EasyMock.expect(mockConfigurationAdmin.listConfigurations((String) EasyMock.anyObject()))\n                        .andReturn(null);\n        EasyMock.expect(mockConfigurationAdmin.getConfiguration(\"firstcfg\", null))\n                        .andReturn(mockConfiguration);\n        EasyMock.replay(new Object[]{mockConfiguration, mockConfigurationAdmin, mockBundleContext});\n\n        ConfigInstaller ci = new ConfigInstaller( mockBundleContext, mockConfigurationAdmin, new FileInstall() );\n\n        assertTrue( ci.setConfig( new File( \"src/test/resources/watched/firstcfg.cfg\" ) ) );\n\n        EasyMock.verify(new Object[]{mockConfiguration, mockConfigurationAdmin, mockBundleContext});\n    }","commit_id":"be265c3c7410afa0d8d93386928ec45233e6d9dd","url":"https://github.com/apache/felix"},{"original_method":"public void testGetExistentFactoryConfiguration() throws Exception\n    {\n        mockConfigurationControl.replay();\n        mockConfigurationAdmin.listConfigurations( null );\n        mockConfigurationAdminControl.setMatcher( MockControl.ALWAYS_MATCHER );\n        mockConfigurationAdminControl.setReturnValue( null );\n        mockConfigurationAdmin.createFactoryConfiguration( \"pid\", null );\n        mockConfigurationAdminControl.setReturnValue( mockConfiguration );\n        mockConfigurationAdminControl.replay();\n        mockBundleContextControl.replay();\n\n        ConfigInstaller ci = new ConfigInstaller( mockBundleContext, mockConfigurationAdmin, new FileInstall() );\n\n        assertEquals( \"Factory configuration retrieved\", mockConfiguration, ci.getConfiguration( \"pid-factoryPid.cfg\",\"pid\", \"factoryPid\" ) );\n\n        mockConfigurationAdminControl.verify();\n        mockConfigurationControl.verify();\n        mockBundleContextControl.verify();\n    }","id":13574,"modified_method":"public void testGetExistentFactoryConfiguration() throws Exception\n    {\n        EasyMock.expect(mockConfigurationAdmin.listConfigurations((String) EasyMock.anyObject()))\n                        .andReturn(null);\n        EasyMock.expect(mockConfigurationAdmin.createFactoryConfiguration( \"pid\", null ))\n                        .andReturn(mockConfiguration);\n        EasyMock.replay(new Object[]{mockConfiguration, mockConfigurationAdmin, mockBundleContext});\n\n        ConfigInstaller ci = new ConfigInstaller( mockBundleContext, mockConfigurationAdmin, new FileInstall() );\n\n        assertEquals( \"Factory configuration retrieved\", mockConfiguration, ci.getConfiguration( \"pid-factoryPid.cfg\",\"pid\", \"factoryPid\" ) );\n\n        EasyMock.verify(new Object[]{mockConfiguration, mockConfigurationAdmin, mockBundleContext});\n    }","commit_id":"be265c3c7410afa0d8d93386928ec45233e6d9dd","url":"https://github.com/apache/felix"},{"original_method":"public void testDeleteConfig() throws Exception\n    {\n        mockConfiguration.delete();\n        mockConfigurationControl.replay();\n        mockConfigurationAdmin.listConfigurations( null );\n        mockConfigurationAdminControl.setMatcher( MockControl.ALWAYS_MATCHER );\n        mockConfigurationAdminControl.setReturnValue( null );\n        mockConfigurationAdmin.getConfiguration( \"pid\", null );\n        mockConfigurationAdminControl.setReturnValue( mockConfiguration );\n        mockConfigurationAdminControl.replay();\n        mockBundleContextControl.replay();\n\n        ConfigInstaller ci = new ConfigInstaller( mockBundleContext, mockConfigurationAdmin, new FileInstall() );\n\n        assertTrue( ci.deleteConfig( new File( \"pid.cfg\" ) ) );\n\n        mockConfigurationAdminControl.verify();\n        mockConfigurationControl.verify();\n        mockBundleContextControl.verify();\n    }","id":13575,"modified_method":"public void testDeleteConfig() throws Exception\n    {\n        mockConfiguration.delete();\n        EasyMock.expect(mockConfigurationAdmin.listConfigurations((String) EasyMock.anyObject()))\n                        .andReturn(null);\n        EasyMock.expect(mockConfigurationAdmin.getConfiguration(\"pid\", null ))\n                        .andReturn(mockConfiguration);\n        EasyMock.replay(new Object[]{mockConfiguration, mockConfigurationAdmin, mockBundleContext});\n\n        ConfigInstaller ci = new ConfigInstaller( mockBundleContext, mockConfigurationAdmin, new FileInstall() );\n\n        assertTrue( ci.deleteConfig( new File( \"pid.cfg\" ) ) );\n\n        EasyMock.verify(new Object[]{mockConfiguration, mockConfigurationAdmin, mockBundleContext});\n    }","commit_id":"be265c3c7410afa0d8d93386928ec45233e6d9dd","url":"https://github.com/apache/felix"},{"original_method":"public void testParsePidWithoutFactoryPid()\n    {\n        mockBundleContextControl.replay();\n        ConfigInstaller ci = new ConfigInstaller(null, null, null);\n\n        String path = \"pid.cfg\";\n        assertEquals( \"Pid without Factory Pid calculated\", \"pid\", ci.parsePid( path )[0] );\n        assertEquals( \"Pid without Factory Pid calculated\", null, ci.parsePid( path )[1] );\n    }","id":13576,"modified_method":"public void testParsePidWithoutFactoryPid()\n    {\n        ConfigInstaller ci = new ConfigInstaller(null, null, null);\n\n        String path = \"pid.cfg\";\n        assertEquals( \"Pid without Factory Pid calculated\", \"pid\", ci.parsePid( path )[0] );\n        assertEquals( \"Pid without Factory Pid calculated\", null, ci.parsePid( path )[1] );\n    }","commit_id":"be265c3c7410afa0d8d93386928ec45233e6d9dd","url":"https://github.com/apache/felix"},{"original_method":"public void testGetExistentNoFactoryConfiguration() throws Exception\n    {\n        mockConfigurationControl.replay();\n        mockConfigurationAdmin.listConfigurations( null );\n        mockConfigurationAdminControl.setMatcher( MockControl.ALWAYS_MATCHER );\n        mockConfigurationAdminControl.setReturnValue( null );\n        mockConfigurationAdmin.getConfiguration( \"pid\", null );\n        mockConfigurationAdminControl.setReturnValue( mockConfiguration );\n        mockConfigurationAdminControl.replay();\n        mockBundleContextControl.replay();\n\n        ConfigInstaller ci = new ConfigInstaller( mockBundleContext, mockConfigurationAdmin, new FileInstall() );\n\n        assertEquals( \"Factory configuration retrieved\", mockConfiguration, ci.getConfiguration( \"pid.cfg\", \"pid\", null ) );\n\n        mockConfigurationAdminControl.verify();\n        mockConfigurationControl.verify();\n        mockBundleContextControl.verify();\n    }","id":13577,"modified_method":"public void testGetExistentNoFactoryConfiguration() throws Exception\n    {\n        EasyMock.expect(mockConfigurationAdmin.listConfigurations((String) EasyMock.anyObject()))\n                        .andReturn(null);\n        EasyMock.expect(mockConfigurationAdmin.getConfiguration( \"pid\", null ))\n                        .andReturn(mockConfiguration);\n        EasyMock.replay(new Object[]{mockConfiguration, mockConfigurationAdmin, mockBundleContext});\n\n        ConfigInstaller ci = new ConfigInstaller( mockBundleContext, mockConfigurationAdmin, new FileInstall() );\n\n        assertEquals( \"Factory configuration retrieved\", mockConfiguration, ci.getConfiguration( \"pid.cfg\", \"pid\", null ) );\n\n        EasyMock.verify(new Object[]{mockConfiguration, mockConfigurationAdmin, mockBundleContext});\n    }","commit_id":"be265c3c7410afa0d8d93386928ec45233e6d9dd","url":"https://github.com/apache/felix"},{"original_method":"public void testGetNewFactoryConfiguration() throws Exception\n    {\n        mockConfigurationControl.replay();\n        mockConfigurationAdmin.listConfigurations( null );\n        mockConfigurationAdminControl.setMatcher( MockControl.ALWAYS_MATCHER );\n        mockConfigurationAdminControl.setReturnValue( null );\n        mockConfigurationAdmin.createFactoryConfiguration( \"pid\", null );\n        mockConfigurationAdminControl.setReturnValue( mockConfiguration );\n        mockConfigurationAdminControl.replay();\n        mockBundleContextControl.replay();\n\n        ConfigInstaller ci = new ConfigInstaller( mockBundleContext, mockConfigurationAdmin, new FileInstall() );\n\n        assertEquals( \"Factory configuration retrieved\", mockConfiguration, ci.getConfiguration( \"pid-factoryPid.cfg\", \"pid\", \"factoryPid\" ) );\n\n        mockConfigurationAdminControl.verify();\n        mockConfigurationControl.verify();\n        mockBundleContextControl.verify();\n    }","id":13578,"modified_method":"public void testGetNewFactoryConfiguration() throws Exception\n    {\n        EasyMock.expect(mockConfigurationAdmin.listConfigurations((String) EasyMock.anyObject()))\n                    .andReturn(null);\n        EasyMock.expect(mockConfigurationAdmin.createFactoryConfiguration( \"pid\", null ))\n                    .andReturn(mockConfiguration);\n        EasyMock.replay(new Object[]{mockConfiguration, mockConfigurationAdmin, mockBundleContext});\n\n        ConfigInstaller ci = new ConfigInstaller( mockBundleContext, mockConfigurationAdmin, new FileInstall() );\n\n        assertEquals( \"Factory configuration retrieved\", mockConfiguration, ci.getConfiguration( \"pid-factoryPid.cfg\", \"pid\", \"factoryPid\" ) );\n\n        EasyMock.verify(new Object[]{mockConfiguration, mockConfigurationAdmin, mockBundleContext});\n    }","commit_id":"be265c3c7410afa0d8d93386928ec45233e6d9dd","url":"https://github.com/apache/felix"},{"original_method":"public void testGetLongWithExistentProperty()\n    {\n        props.put( TEST, \"33\" );\n\n        mockBundleContext.addBundleListener((BundleListener) org.easymock.EasyMock.anyObject());\n        mockBundleContextControl.replay();\n        dw = new DirectoryWatcher( props, mockBundleContext );\n        assertEquals( \"getLong retrieves the right property value\", 33, dw.getLong( props, TEST, 100 ) );\n    }","id":13579,"modified_method":"public void testGetLongWithExistentProperty()\n    {\n        props.put( TEST, \"33\" );\n\n        mockBundleContext.addBundleListener((BundleListener) org.easymock.EasyMock.anyObject());\n        EasyMock.replay(new Object[]{mockBundleContext});\n        dw = new DirectoryWatcher( props, mockBundleContext );\n        assertEquals( \"getLong retrieves the right property value\", 33, dw.getLong( props, TEST, 100 ) );\n        EasyMock.verify(new Object[]{mockBundleContext});\n    }","commit_id":"be265c3c7410afa0d8d93386928ec45233e6d9dd","url":"https://github.com/apache/felix"},{"original_method":"public void testIsFragment() throws Exception\n    {\n        mockBundleContext.addBundleListener((BundleListener) org.easymock.EasyMock.anyObject());\n        mockBundleContext.createFilter( \"\" );\n        mockBundleContextControl.setMatcher( MockControl.ALWAYS_MATCHER );\n        mockBundleContextControl.setReturnValue( null );\n        mockBundleContextControl.replay();\n        mockPackageAdmin.getBundleType( mockBundle );\n        mockPackageAdminControl.setReturnValue( new Long(PackageAdmin.BUNDLE_TYPE_FRAGMENT) );\n        mockPackageAdminControl.replay();\n        mockBundleControl.replay();\n\n        FileInstall.padmin = new MockServiceTracker( mockBundleContext, mockPackageAdmin );\n        dw = new DirectoryWatcher( props, mockBundleContext );\n\n        assertTrue( \"Fragment type correctly retrieved from Package Admin service\", dw.isFragment( mockBundle ) );\n\n        mockPackageAdminControl.verify();\n        mockBundleContextControl.verify();\n    }","id":13580,"modified_method":"public void testIsFragment() throws Exception\n    {\n        mockBundleContext.addBundleListener((BundleListener) org.easymock.EasyMock.anyObject());\n        EasyMock.expect(mockBundleContext.createFilter((String) EasyMock.anyObject()))\n                        .andReturn(null);\n        EasyMock.expect(Long.valueOf(mockPackageAdmin.getBundleType(mockBundle)))\n                        .andReturn(new Long(PackageAdmin.BUNDLE_TYPE_FRAGMENT) );\n        EasyMock.replay(new Object[]{mockBundleContext, mockPackageAdmin, mockBundle});\n\n        FileInstall.padmin = new MockServiceTracker( mockBundleContext, mockPackageAdmin );\n        dw = new DirectoryWatcher( props, mockBundleContext );\n\n        assertTrue( \"Fragment type correctly retrieved from Package Admin service\", dw.isFragment( mockBundle ) );\n\n        EasyMock.verify(new Object[]{mockBundleContext});\n    }","commit_id":"be265c3c7410afa0d8d93386928ec45233e6d9dd","url":"https://github.com/apache/felix"},{"original_method":"public void testGetBooleanWithNonExistentProperty()\n    {\n        mockBundleContext.addBundleListener((BundleListener) org.easymock.EasyMock.anyObject());\n        mockBundleContextControl.replay();\n        dw = new DirectoryWatcher( props, mockBundleContext );\n        assertEquals( \"getBoolean gives the default value for non-existing properties\", true, dw.getBoolean( props, TEST, true ) );\n    }","id":13581,"modified_method":"public void testGetBooleanWithNonExistentProperty()\n    {\n        mockBundleContext.addBundleListener((BundleListener) org.easymock.EasyMock.anyObject());\n        EasyMock.replay(new Object[]{mockBundleContext});\n        dw = new DirectoryWatcher( props, mockBundleContext );\n        assertEquals( \"getBoolean gives the default value for non-existing properties\", true, dw.getBoolean( props, TEST, true ) );\n        EasyMock.verify(new Object[]{mockBundleContext});\n    }","commit_id":"be265c3c7410afa0d8d93386928ec45233e6d9dd","url":"https://github.com/apache/felix"},{"original_method":"public void testGetBooleanWithExistentProperty()\n    {\n        props.put( TEST, \"true\" );\n\n        mockBundleContext.addBundleListener((BundleListener) org.easymock.EasyMock.anyObject());\n        mockBundleContextControl.replay();\n        dw = new DirectoryWatcher( props, mockBundleContext );\n        assertEquals( \"getBoolean retrieves the right property value\", true, dw.getBoolean( props, TEST, false ) );\n    }","id":13582,"modified_method":"public void testGetBooleanWithExistentProperty()\n    {\n        props.put( TEST, \"true\" );\n\n        mockBundleContext.addBundleListener((BundleListener) org.easymock.EasyMock.anyObject());\n        EasyMock.replay(new Object[]{mockBundleContext});\n        dw = new DirectoryWatcher( props, mockBundleContext );\n        assertEquals( \"getBoolean retrieves the right property value\", true, dw.getBoolean( props, TEST, false ) );\n        EasyMock.verify(new Object[]{mockBundleContext});\n    }","commit_id":"be265c3c7410afa0d8d93386928ec45233e6d9dd","url":"https://github.com/apache/felix"},{"original_method":"public void testGetLongWithIncorrectValue()\n    {\n        props.put( TEST, \"incorrect\" );\n\n        mockBundleContext.addBundleListener((BundleListener) org.easymock.EasyMock.anyObject());\n        mockBundleContext.getServiceReference( \"org.osgi.service.log.LogService\" );\n        mockBundleContextControl.setReturnValue( null );\n        mockBundleContextControl.replay();\n        dw = new DirectoryWatcher( props, mockBundleContext );\n        assertEquals( \"getLong retrieves the right property value\", 100, dw.getLong( props, TEST, 100 ) );\n    }","id":13583,"modified_method":"public void testGetLongWithIncorrectValue()\n    {\n        props.put( TEST, \"incorrect\" );\n\n        mockBundleContext.addBundleListener((BundleListener) org.easymock.EasyMock.anyObject());\n        EasyMock.replay(new Object[]{mockBundleContext});\n        dw = new DirectoryWatcher( props, mockBundleContext );\n        assertEquals( \"getLong retrieves the right property value\", 100, dw.getLong( props, TEST, 100 ) );\n        EasyMock.verify(new Object[]{mockBundleContext});\n    }","commit_id":"be265c3c7410afa0d8d93386928ec45233e6d9dd","url":"https://github.com/apache/felix"},{"original_method":"public void testParameterAfterInitialization()\n    {\n        props.put( DirectoryWatcher.POLL, \"500\" );\n        props.put( DirectoryWatcher.LOG_LEVEL, \"1\" );\n        props.put( DirectoryWatcher.START_NEW_BUNDLES, \"false\" );\n        props.put( DirectoryWatcher.DIR, new File( \"src/test/resources\" ).getAbsolutePath() );\n        props.put( DirectoryWatcher.TMPDIR, new File( \"src/test/resources\" ).getAbsolutePath() );\n        props.put( DirectoryWatcher.FILTER, \".*\\\\.cfg\" );\n\n        mockBundleContext.addBundleListener((BundleListener) org.easymock.EasyMock.anyObject());\n        mockBundleContextControl.replay();\n        dw = new DirectoryWatcher( props, mockBundleContext );\n\n        assertEquals( \"POLL parameter correctly read\", 500l, dw.poll );\n        assertEquals( \"LOG_LEVEL parameter correctly read\", 1, dw.logLevel );\n        assertTrue( \"DIR parameter correctly read\", dw.watchedDirectory.getAbsolutePath().endsWith(\n            \"src\" + File.separatorChar + \"test\" + File.separatorChar + \"resources\" ) );\n        assertTrue( \"TMPDIR parameter correctly read\", dw.tmpDir.getAbsolutePath().endsWith(\n            \"src\" + File.separatorChar + \"test\" + File.separatorChar + \"resources\" ) );\n        assertEquals( \"START_NEW_BUNDLES parameter correctly read\", false, dw.startBundles );\n        assertEquals( \"FILTER parameter correctly read\", \".*\\\\.cfg\", dw.filter );\n    }","id":13584,"modified_method":"public void testParameterAfterInitialization()\n    {\n        props.put( DirectoryWatcher.POLL, \"500\" );\n        props.put( DirectoryWatcher.LOG_LEVEL, \"1\" );\n        props.put( DirectoryWatcher.START_NEW_BUNDLES, \"false\" );\n        props.put( DirectoryWatcher.DIR, new File( \"src/test/resources\" ).getAbsolutePath() );\n        props.put( DirectoryWatcher.TMPDIR, new File( \"src/test/resources\" ).getAbsolutePath() );\n        props.put( DirectoryWatcher.FILTER, \".*\\\\.cfg\" );\n\n        mockBundleContext.addBundleListener((BundleListener) org.easymock.EasyMock.anyObject());\n        EasyMock.replay(new Object[]{mockBundleContext});\n\n        dw = new DirectoryWatcher( props, mockBundleContext );\n\n        assertEquals( \"POLL parameter correctly read\", 500l, dw.poll );\n        assertEquals( \"LOG_LEVEL parameter correctly read\", 1, dw.logLevel );\n        assertTrue( \"DIR parameter correctly read\", dw.watchedDirectory.getAbsolutePath().endsWith(\n            \"src\" + File.separatorChar + \"test\" + File.separatorChar + \"resources\" ) );\n        assertTrue( \"TMPDIR parameter correctly read\", dw.tmpDir.getAbsolutePath().endsWith(\n            \"src\" + File.separatorChar + \"test\" + File.separatorChar + \"resources\" ) );\n        assertEquals( \"START_NEW_BUNDLES parameter correctly read\", false, dw.startBundles );\n        assertEquals( \"FILTER parameter correctly read\", \".*\\\\.cfg\", dw.filter );\n        EasyMock.verify(new Object[]{mockBundleContext});\n    }","commit_id":"be265c3c7410afa0d8d93386928ec45233e6d9dd","url":"https://github.com/apache/felix"},{"original_method":"public void testGetFileWithNonExistentProperty()\n    {\n        mockBundleContext.addBundleListener((BundleListener) org.easymock.EasyMock.anyObject());\n        mockBundleContextControl.replay();\n        dw = new DirectoryWatcher( props, mockBundleContext );\n        assertEquals( \"getFile gives the default value for non-existing properties\", new File(\"tmp\"), dw.getFile( props, TEST, new File(\"tmp\") ) );\n    }","id":13585,"modified_method":"public void testGetFileWithNonExistentProperty()\n    {\n        mockBundleContext.addBundleListener((BundleListener) org.easymock.EasyMock.anyObject());\n        EasyMock.replay(new Object[]{mockBundleContext});\n        dw = new DirectoryWatcher( props, mockBundleContext );\n        assertEquals( \"getFile gives the default value for non-existing properties\", new File(\"tmp\"), dw.getFile( props, TEST, new File(\"tmp\") ) );\n        EasyMock.verify(new Object[]{mockBundleContext});\n    }","commit_id":"be265c3c7410afa0d8d93386928ec45233e6d9dd","url":"https://github.com/apache/felix"},{"original_method":"protected void setUp() throws Exception\n    {\n        super.setUp();\n        mockBundleContextControl = MockControl.createControl( BundleContext.class );\n        mockBundleContext = ( BundleContext ) mockBundleContextControl.getMock();\n        mockPackageAdminControl = MockControl.createControl( PackageAdmin.class );\n        mockPackageAdmin = ( PackageAdmin ) mockPackageAdminControl.getMock();\n        mockBundleControl = MockControl.createControl( Bundle.class );\n        mockBundle = ( Bundle ) mockBundleControl.getMock();\n        props.put( DirectoryWatcher.DIR, new File( \"target/load\" ).getAbsolutePath() );\n    }","id":13586,"modified_method":"protected void setUp() throws Exception\n    {\n        super.setUp();\n        mockBundleContext = (BundleContext) EasyMock.createMock(BundleContext.class);\n        mockPackageAdmin = (PackageAdmin) EasyMock.createMock(PackageAdmin.class);\n        mockBundle = (Bundle) EasyMock.createMock(Bundle.class);\n        props.put( DirectoryWatcher.DIR, new File( \"target/load\" ).getAbsolutePath() );\n\n        // Might get called, but most of the time it doesn't matter whether they do or don't.\n        EasyMock.expect(mockBundleContext.getProperty(DirectoryWatcher.LOG_LEVEL))\n                        .andStubReturn(null);\n        EasyMock.expect(mockBundleContext.getServiceReference(LogService.class.getName()))\n                        .andStubReturn(null);\n    }","commit_id":"be265c3c7410afa0d8d93386928ec45233e6d9dd","url":"https://github.com/apache/felix"},{"original_method":"public void testGetFileWithExistentProperty()\n    {\n        props.put( TEST, \"test\" );\n\n        mockBundleContext.addBundleListener((BundleListener) org.easymock.EasyMock.anyObject());\n        mockBundleContextControl.replay();\n        dw = new DirectoryWatcher( props, mockBundleContext );\n        assertEquals( \"getBoolean retrieves the right property value\", new File(\"test\"), dw.getFile( props, TEST, new File(\"tmp\") ) );\n    }","id":13587,"modified_method":"public void testGetFileWithExistentProperty()\n    {\n        props.put( TEST, \"test\" );\n\n        mockBundleContext.addBundleListener((BundleListener) org.easymock.EasyMock.anyObject());\n        EasyMock.replay(new Object[]{mockBundleContext});\n        dw = new DirectoryWatcher( props, mockBundleContext );\n        assertEquals( \"getBoolean retrieves the right property value\", new File(\"test\"), dw.getFile( props, TEST, new File(\"tmp\") ) );\n        EasyMock.verify(new Object[]{mockBundleContext});\n    }","commit_id":"be265c3c7410afa0d8d93386928ec45233e6d9dd","url":"https://github.com/apache/felix"},{"original_method":"public void testGetLongWithNonExistentProperty()\n    {\n        mockBundleContext.addBundleListener((BundleListener) org.easymock.EasyMock.anyObject());\n        mockBundleContextControl.replay();\n        dw = new DirectoryWatcher( props, mockBundleContext );\n        assertEquals( \"getLong gives the default value for non-existing properties\", 100, dw.getLong( props, TEST, 100 ) );\n    }","id":13588,"modified_method":"public void testGetLongWithNonExistentProperty()\n    {\n        mockBundleContext.addBundleListener((BundleListener) org.easymock.EasyMock.anyObject());\n        EasyMock.replay(new Object[]{mockBundleContext});\n        dw = new DirectoryWatcher( props, mockBundleContext );\n        assertEquals( \"getLong gives the default value for non-existing properties\", 100, dw.getLong( props, TEST, 100 ) );\n        EasyMock.verify(new Object[]{mockBundleContext});\n    }","commit_id":"be265c3c7410afa0d8d93386928ec45233e6d9dd","url":"https://github.com/apache/felix"},{"original_method":"public void testDefaultParametersAreSetAfterEmptyInitialization()\n    {\n        props.put( DirectoryWatcher.DIR, new File( \"src/test/resources\" ).getAbsolutePath() );\n\n        mockBundleContext.addBundleListener((BundleListener) org.easymock.EasyMock.anyObject());\n        mockBundleContextControl.replay();\n        dw = new DirectoryWatcher( props, mockBundleContext );\n\n        assertTrue( \"DIR parameter correctly read\", dw.watchedDirectory.getAbsolutePath().endsWith(\n            \"src\" + File.separatorChar + \"test\" + File.separatorChar + \"resources\" ) );\n        assertEquals( \"Default POLL parameter correctly read\", 2000l, dw.poll );\n        assertEquals( \"Default LOG_LEVEL parameter correctly read\", 0, dw.logLevel );\n        assertTrue( \"Default TMPDIR parameter correctly read\", dw.tmpDir.getAbsolutePath().startsWith(\n                new File(System.getProperty(\"java.io.tmpdir\")).getAbsolutePath()) );\n        assertEquals( \"Default START_NEW_BUNDLES parameter correctly read\", true, dw.startBundles );\n        assertEquals( \"Default FILTER parameter correctly read\", null, dw.filter );\n    }","id":13589,"modified_method":"public void testDefaultParametersAreSetAfterEmptyInitialization()\n    {\n        props.put( DirectoryWatcher.DIR, new File( \"src/test/resources\" ).getAbsolutePath() );\n\n        mockBundleContext.addBundleListener((BundleListener) org.easymock.EasyMock.anyObject());\n        EasyMock.replay(new Object[]{mockBundleContext});\n\n        dw = new DirectoryWatcher( props, mockBundleContext );\n\n        assertTrue( \"DIR parameter correctly read\", dw.watchedDirectory.getAbsolutePath().endsWith(\n            \"src\" + File.separatorChar + \"test\" + File.separatorChar + \"resources\" ) );\n        assertEquals( \"Default POLL parameter correctly read\", 2000l, dw.poll );\n        assertEquals( \"Default LOG_LEVEL parameter correctly read\", 0, dw.logLevel );\n        assertTrue( \"Default TMPDIR parameter correctly read\", dw.tmpDir.getAbsolutePath().startsWith(\n                new File(System.getProperty(\"java.io.tmpdir\")).getAbsolutePath()) );\n        assertEquals( \"Default START_NEW_BUNDLES parameter correctly read\", true, dw.startBundles );\n        assertEquals( \"Default FILTER parameter correctly read\", null, dw.filter );\n        EasyMock.verify(new Object[]{mockBundleContext});\n    }","commit_id":"be265c3c7410afa0d8d93386928ec45233e6d9dd","url":"https://github.com/apache/felix"},{"original_method":"public void testGetBooleanWithIncorrectValue()\n    {\n        props.put( TEST, \"incorrect\" );\n\n        mockBundleContext.addBundleListener((BundleListener) org.easymock.EasyMock.anyObject());\n        mockBundleContext.getServiceReference( \"org.osgi.service.log.LogService\" );\n        mockBundleContextControl.setReturnValue( null );\n        mockBundleContextControl.replay();\n        dw = new DirectoryWatcher( props, mockBundleContext );\n        assertEquals( \"getBoolean retrieves the right property value\", false, dw.getBoolean( props, TEST, true ) );\n    }","id":13590,"modified_method":"public void testGetBooleanWithIncorrectValue()\n    {\n        props.put( TEST, \"incorrect\" );\n\n        mockBundleContext.addBundleListener((BundleListener) org.easymock.EasyMock.anyObject());\n        EasyMock.replay(new Object[]{mockBundleContext});\n        dw = new DirectoryWatcher( props, mockBundleContext );\n        assertEquals( \"getBoolean retrieves the right property value\", false, dw.getBoolean( props, TEST, true ) );\n        EasyMock.verify(new Object[]{mockBundleContext});\n    }","commit_id":"be265c3c7410afa0d8d93386928ec45233e6d9dd","url":"https://github.com/apache/felix"},{"original_method":"@Override\n\tprotected void processFilter(\n\t\t\tHttpServletRequest request, HttpServletResponse response,\n\t\t\tFilterChain filterChain)\n\t\tthrows Exception {\n\n\t\tHttpSession session = request.getSession();\n\n\t\tString host = PortalUtil.getHost(request);\n\n\t\tif (PortalInstances.isAutoLoginIgnoreHost(host)) {\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(\"Ignore host \" + host);\n\t\t\t}\n\n\t\t\tprocessFilter(\n\t\t\t\tAutoLoginFilter.class, request, response, filterChain);\n\n\t\t\treturn;\n\t\t}\n\n\t\tString contextPath = PortalUtil.getPathContext();\n\n\t\tString path = request.getRequestURI().toLowerCase();\n\n\t\tif (!contextPath.equals(StringPool.SLASH) &&\n\t\t\tpath.contains(contextPath)) {\n\n\t\t\tpath = path.substring(contextPath.length());\n\t\t}\n\n\t\tif (PortalInstances.isAutoLoginIgnorePath(path)) {\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(\"Ignore path \" + path);\n\t\t\t}\n\n\t\t\tprocessFilter(\n\t\t\t\tAutoLoginFilter.class, request, response, filterChain);\n\n\t\t\treturn;\n\t\t}\n\n\t\tString remoteUser = request.getRemoteUser();\n\t\tString jUserName = (String)session.getAttribute(\"j_username\");\n\n\t\t// PLACEHOLDER 01\n\t\t// PLACEHOLDER 02\n\t\t// PLACEHOLDER 03\n\t\t// PLACEHOLDER 04\n\t\t// PLACEHOLDER 05\n\n\t\tif (!PropsValues.AUTH_LOGIN_DISABLED &&\n\t\t\t(remoteUser == null) && (jUserName == null)) {\n\n\t\t\tfor (AutoLogin autoLogin : _autoLogins) {\n\t\t\t\ttry {\n\t\t\t\t\tString[] credentials = autoLogin.login(request, response);\n\n\t\t\t\t\tString redirect = (String)request.getAttribute(\n\t\t\t\t\t\tAutoLogin.AUTO_LOGIN_REDIRECT);\n\n\t\t\t\t\tif (Validator.isNotNull(redirect)) {\n\t\t\t\t\t\tresponse.sendRedirect(redirect);\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tString loginRemoteUser = getLoginRemoteUser(\n\t\t\t\t\t\trequest, response, session, credentials);\n\n\t\t\t\t\tif (loginRemoteUser != null) {\n\t\t\t\t\t\trequest = new ProtectedServletRequest(\n\t\t\t\t\t\t\trequest, loginRemoteUser);\n\n\t\t\t\t\t\tif (PropsValues.PORTAL_JAAS_ENABLE) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!PropsValues.AUTH_FORWARD_BY_LAST_PATH) {\n\t\t\t\t\t\t\tredirect = Portal.PATH_MAIN;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tredirect = (String)request.getAttribute(\n\t\t\t\t\t\t\t\tAutoLogin.AUTO_LOGIN_REDIRECT_AND_CONTINUE);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (Validator.isNotNull(redirect)) {\n\t\t\t\t\t\t\tresponse.sendRedirect(redirect);\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcatch (Exception e) {\n\t\t\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t\t\t_log.warn(e, e);\n\t\t\t\t\t}\n\n\t\t\t\t\tString currentURL = PortalUtil.getCurrentURL(request);\n\n\t\t\t\t\tif (currentURL.endsWith(_PATH_CHAT_LATEST)) {\n\t\t\t\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t\t\t\t_log.warn(\n\t\t\t\t\t\t\t\t\"Current URL \" + currentURL +\n\t\t\t\t\t\t\t\t\t\" generates exception: \" + e.getMessage());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t_log.error(\n\t\t\t\t\t\t\t\"Current URL \" + currentURL +\n\t\t\t\t\t\t\t\t\" generates exception: \" + e.getMessage());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tprocessFilter(AutoLoginFilter.class, request, response, filterChain);\n\t}","id":13591,"modified_method":"@Override\n\tprotected void processFilter(\n\t\t\tHttpServletRequest request, HttpServletResponse response,\n\t\t\tFilterChain filterChain)\n\t\tthrows Exception {\n\n\t\tHttpSession session = request.getSession();\n\n\t\tString host = PortalUtil.getHost(request);\n\n\t\tif (PortalInstances.isAutoLoginIgnoreHost(host)) {\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(\"Ignore host \" + host);\n\t\t\t}\n\n\t\t\tprocessFilter(\n\t\t\t\tAutoLoginFilter.class, request, response, filterChain);\n\n\t\t\treturn;\n\t\t}\n\n\t\tString contextPath = PortalUtil.getPathContext();\n\n\t\tString path = request.getRequestURI().toLowerCase();\n\n\t\tif (!contextPath.equals(StringPool.SLASH) &&\n\t\t\tpath.contains(contextPath)) {\n\n\t\t\tpath = path.substring(contextPath.length());\n\t\t}\n\n\t\tif (PortalInstances.isAutoLoginIgnorePath(path)) {\n\t\t\tif (_log.isDebugEnabled()) {\n\t\t\t\t_log.debug(\"Ignore path \" + path);\n\t\t\t}\n\n\t\t\tprocessFilter(\n\t\t\t\tAutoLoginFilter.class, request, response, filterChain);\n\n\t\t\treturn;\n\t\t}\n\n\t\tString remoteUser = request.getRemoteUser();\n\t\tString jUserName = (String)session.getAttribute(\"j_username\");\n\n\t\t// PLACEHOLDER 01\n\t\t// PLACEHOLDER 02\n\t\t// PLACEHOLDER 03\n\t\t// PLACEHOLDER 04\n\t\t// PLACEHOLDER 05\n\n\t\tif (!PropsValues.AUTH_LOGIN_DISABLED &&\n\t\t\t(remoteUser == null) && (jUserName == null)) {\n\n\t\t\tfor (AutoLogin autoLogin : _autoLogins) {\n\t\t\t\ttry {\n\t\t\t\t\tString[] credentials = autoLogin.login(request, response);\n\n\t\t\t\t\tString redirect = (String)request.getAttribute(\n\t\t\t\t\t\tAutoLogin.AUTO_LOGIN_REDIRECT);\n\n\t\t\t\t\tif (Validator.isNotNull(redirect)) {\n\t\t\t\t\t\tresponse.sendRedirect(redirect);\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tString loginRemoteUser = getLoginRemoteUser(\n\t\t\t\t\t\trequest, response, session, credentials);\n\n\t\t\t\t\tif (loginRemoteUser != null) {\n\t\t\t\t\t\trequest = new ProtectedServletRequest(\n\t\t\t\t\t\t\trequest, loginRemoteUser);\n\n\t\t\t\t\t\tif (PropsValues.PORTAL_JAAS_ENABLE) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!PropsValues.AUTH_FORWARD_BY_LAST_PATH) {\n\t\t\t\t\t\t\tredirect = Portal.PATH_MAIN;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tredirect = (String)request.getAttribute(\n\t\t\t\t\t\t\t\tAutoLogin.AUTO_LOGIN_REDIRECT_AND_CONTINUE);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (Validator.isNotNull(redirect)) {\n\t\t\t\t\t\t\tresponse.sendRedirect(redirect);\n\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcatch (Exception e) {\n\t\t\t\t\tString currentURL = PortalUtil.getCurrentURL(request);\n\n\t\t\t\t\tStringBundler sb = new StringBundler(4);\n\n\t\t\t\t\tsb.append(\"Current URL \");\n\t\t\t\t\tsb.append(currentURL);\n\t\t\t\t\tsb.append(\" generates exception: \");\n\t\t\t\t\tsb.append(e.getMessage());\n\n\t\t\t\t\tif (currentURL.endsWith(_PATH_CHAT_LATEST)) {\n\t\t\t\t\t\tif (_log.isWarnEnabled()) {\n\t\t\t\t\t\t\t_log.warn(sb.toString());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (_log.isErrorEnabled()) {\n\t\t\t\t\t\t\t_log.error(sb.toString());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tprocessFilter(AutoLoginFilter.class, request, response, filterChain);\n\t}","commit_id":"2599ed4516f9f353153944bb2684f60b54df19a1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void importAssetCategory(\n\t\t\tPortletDataContext portletDataContext,\n\t\t\tMap<Long, Long> assetVocabularyPKs,\n\t\t\tMap<Long, Long> assetCategoryPKs,\n\t\t\tMap<String, String> assetCategoryUuids,\n\t\t\tElement assetCategoryElement, AssetCategory assetCategory)\n\t\tthrows Exception {\n\n\t\tlong userId = portletDataContext.getUserId(assetCategory.getUserUuid());\n\t\tlong assetVocabularyId = MapUtil.getLong(\n\t\t\tassetVocabularyPKs, assetCategory.getVocabularyId(),\n\t\t\tassetCategory.getVocabularyId());\n\t\tlong parentAssetCategoryId = MapUtil.getLong(\n\t\t\tassetCategoryPKs, assetCategory.getParentCategoryId(),\n\t\t\tassetCategory.getParentCategoryId());\n\t\tlong groupId = portletDataContext.getGroupId();\n\n\t\tif ((parentAssetCategoryId !=\n\t\t\t\tAssetCategoryConstants.DEFAULT_PARENT_CATEGORY_ID) &&\n\t\t\t(parentAssetCategoryId == assetCategory.getParentCategoryId())) {\n\n\t\t\tString path = getAssetCategoryPath(\n\t\t\t\tportletDataContext, parentAssetCategoryId);\n\n\t\t\tAssetCategory parentAssetCategory =\n\t\t\t\t(AssetCategory)portletDataContext.getZipEntryAsObject(path);\n\n\t\t\tNode parentCategoryNode =\n\t\t\t\tassetCategoryElement.getParent().selectSingleNode(\n\t\t\t\t\t\"./category[@path='\" + path + \"']\");\n\n\t\t\tif (parentCategoryNode != null) {\n\t\t\t\timportAssetCategory(\n\t\t\t\t\tportletDataContext, assetVocabularyPKs, assetCategoryPKs,\n\t\t\t\t\tassetCategoryUuids, (Element)parentCategoryNode,\n\t\t\t\t\tparentAssetCategory);\n\n\t\t\t\tparentAssetCategoryId = MapUtil.getLong(\n\t\t\t\t\tassetCategoryPKs, assetCategory.getParentCategoryId(),\n\t\t\t\t\tassetCategory.getParentCategoryId());\n\t\t\t}\n\t\t}\n\n\t\tServiceContext serviceContext = new ServiceContext();\n\n\t\tserviceContext.setAddGroupPermissions(true);\n\t\tserviceContext.setAddGuestPermissions(true);\n\t\tserviceContext.setCreateDate(assetCategory.getCreateDate());\n\t\tserviceContext.setModifiedDate(assetCategory.getModifiedDate());\n\t\tserviceContext.setScopeGroupId(portletDataContext.getScopeGroupId());\n\n\t\tboolean global = GetterUtil.getBoolean(\n\t\t\tassetCategoryElement.attributeValue(\"global\"));\n\n\t\tif (global) {\n\t\t\tGroup companyGroup = GroupLocalServiceUtil.getCompanyGroup(\n\t\t\t\tportletDataContext.getCompanyId());\n\n\t\t\tgroupId = companyGroup.getGroupId();\n\t\t}\n\n\t\tAssetCategory importedAssetCategory = null;\n\n\t\ttry {\n\t\t\tif (parentAssetCategoryId !=\n\t\t\t\t\tAssetCategoryConstants.DEFAULT_PARENT_CATEGORY_ID) {\n\n\t\t\t\tAssetCategoryUtil.findByPrimaryKey(parentAssetCategoryId);\n\t\t\t}\n\n\t\t\tList<Element> propertyElements = assetCategoryElement.elements(\n\t\t\t\t\"property\");\n\n\t\t\tString[] properties = new String[propertyElements.size()];\n\n\t\t\tfor (int i = 0; i < propertyElements.size(); i++) {\n\t\t\t\tElement propertyElement = propertyElements.get(i);\n\n\t\t\t\tString key = propertyElement.attributeValue(\"key\");\n\t\t\t\tString value = propertyElement.attributeValue(\"value\");\n\n\t\t\t\tproperties[i] = key.concat(StringPool.COLON).concat(value);\n\t\t\t}\n\n\t\t\tAssetCategory existingAssetCategory =\n\t\t\t\tAssetCategoryUtil.fetchByUUID_G(\n\t\t\t\t\tassetCategory.getUuid(), groupId);\n\n\t\t\tif (existingAssetCategory == null) {\n\t\t\t\tString name = getAssetCategoryName(\n\t\t\t\t\tnull, portletDataContext.getGroupId(),\n\t\t\t\t\tparentAssetCategoryId, assetCategory.getName(), 2);\n\n\t\t\t\tserviceContext.setUuid(assetCategory.getUuid());\n\n\t\t\t\tif (global) {\n\t\t\t\t\tif (AssetPermission.contains(\n\t\t\t\t\t\tPermissionThreadLocal.getPermissionChecker(), groupId,\n\t\t\t\t\t\tActionKeys.ADD_CATEGORY)) {\n\n\t\t\t\t\t\tserviceContext.setScopeGroupId(groupId);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t_log.error(\"Category \" + assetCategory.getName() +\n\t\t\t\t\t\t\t\" could not be imported to the Global scope because\"\n\t\t\t\t\t\t\t+ \" the user doesn't have enough permissions. \" +\n\t\t\t\t\t\t\t\"It will be imported into the current scope.\");\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\timportedAssetCategory =\n\t\t\t\t\tAssetCategoryLocalServiceUtil.addCategory(\n\t\t\t\t\t\tuserId, parentAssetCategoryId,\n\t\t\t\t\t\tgetAssetCategoryTitleMap(assetCategory, name),\n\t\t\t\t\t\tassetCategory.getDescriptionMap(), assetVocabularyId,\n\t\t\t\t\t\tproperties, serviceContext);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tString name = getAssetCategoryName(\n\t\t\t\t\tassetCategory.getUuid(), assetCategory.getGroupId(),\n\t\t\t\t\tparentAssetCategoryId, assetCategory.getName(), 2);\n\n\t\t\t\tboolean updateCategory = true;\n\n\t\t\t\tif (global) {\n\t\t\t\t\tPermissionChecker permissionChecker =\n\t\t\t\t\t\tPermissionThreadLocal.getPermissionChecker();\n\n\t\t\t\t\tif (permissionChecker.hasPermission(\n\t\t\t\t\t\t groupId, AssetCategory.class.getName(),\n\t\t\t\t\t\t existingAssetCategory.getCategoryId(),\n\t\t\t\t\t\t ActionKeys.UPDATE)) {\n\n\t\t\t\t\t\t serviceContext.setScopeGroupId(groupId);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t updateCategory = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (updateCategory) {\n\t\t\t\t\timportedAssetCategory =\n\t\t\t\t\t\tAssetCategoryLocalServiceUtil.updateCategory(\n\t\t\t\t\t\t\tuserId, existingAssetCategory.getCategoryId(),\n\t\t\t\t\t\t\tparentAssetCategoryId,\n\t\t\t\t\t\t\tgetAssetCategoryTitleMap(assetCategory, name),\n\t\t\t\t\t\t\tassetCategory.getDescriptionMap(),\n\t\t\t\t\t\t\tassetVocabularyId, properties, serviceContext);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t_log.error(\"Category \" + existingAssetCategory.getName() +\n\t\t\t\t\t\t\" could not be updated in the global scope because\"\n\t\t\t\t\t\t+ \" the user doesn't have enough permissions.\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tassetCategoryPKs.put(\n\t\t\t\tassetCategory.getCategoryId(),\n\t\t\t\timportedAssetCategory.getCategoryId());\n\n\t\t\tassetCategoryUuids.put(\n\t\t\t\tassetCategory.getUuid(), importedAssetCategory.getUuid());\n\n\t\t\tportletDataContext.importPermissions(\n\t\t\t\tAssetCategory.class, assetCategory.getCategoryId(),\n\t\t\t\timportedAssetCategory.getCategoryId());\n\t\t}\n\t\tcatch (NoSuchCategoryException nsce) {\n\t\t\t_log.error(\n\t\t\t\t\"Could not find the parent category for category \" +\n\t\t\t\t\tassetCategory.getCategoryId());\n\t\t}\n\t}","id":13592,"modified_method":"protected void importAssetCategory(\n\t\t\tPortletDataContext portletDataContext,\n\t\t\tMap<Long, Long> assetVocabularyPKs,\n\t\t\tMap<Long, Long> assetCategoryPKs,\n\t\t\tMap<String, String> assetCategoryUuids,\n\t\t\tElement assetCategoryElement, AssetCategory assetCategory)\n\t\tthrows Exception {\n\n\t\tlong userId = portletDataContext.getUserId(assetCategory.getUserUuid());\n\t\tlong groupId = portletDataContext.getGroupId();\n\t\tlong assetVocabularyId = MapUtil.getLong(\n\t\t\tassetVocabularyPKs, assetCategory.getVocabularyId(),\n\t\t\tassetCategory.getVocabularyId());\n\t\tlong parentAssetCategoryId = MapUtil.getLong(\n\t\t\tassetCategoryPKs, assetCategory.getParentCategoryId(),\n\t\t\tassetCategory.getParentCategoryId());\n\n\t\tif ((parentAssetCategoryId !=\n\t\t\t\tAssetCategoryConstants.DEFAULT_PARENT_CATEGORY_ID) &&\n\t\t\t(parentAssetCategoryId == assetCategory.getParentCategoryId())) {\n\n\t\t\tString path = getAssetCategoryPath(\n\t\t\t\tportletDataContext, parentAssetCategoryId);\n\n\t\t\tAssetCategory parentAssetCategory =\n\t\t\t\t(AssetCategory)portletDataContext.getZipEntryAsObject(path);\n\n\t\t\tNode parentCategoryNode =\n\t\t\t\tassetCategoryElement.getParent().selectSingleNode(\n\t\t\t\t\t\"./category[@path='\" + path + \"']\");\n\n\t\t\tif (parentCategoryNode != null) {\n\t\t\t\timportAssetCategory(\n\t\t\t\t\tportletDataContext, assetVocabularyPKs, assetCategoryPKs,\n\t\t\t\t\tassetCategoryUuids, (Element)parentCategoryNode,\n\t\t\t\t\tparentAssetCategory);\n\n\t\t\t\tparentAssetCategoryId = MapUtil.getLong(\n\t\t\t\t\tassetCategoryPKs, assetCategory.getParentCategoryId(),\n\t\t\t\t\tassetCategory.getParentCategoryId());\n\t\t\t}\n\t\t}\n\n\t\tServiceContext serviceContext = new ServiceContext();\n\n\t\tserviceContext.setAddGroupPermissions(true);\n\t\tserviceContext.setAddGuestPermissions(true);\n\t\tserviceContext.setCreateDate(assetCategory.getCreateDate());\n\t\tserviceContext.setModifiedDate(assetCategory.getModifiedDate());\n\t\tserviceContext.setScopeGroupId(portletDataContext.getScopeGroupId());\n\n\t\tboolean global = GetterUtil.getBoolean(\n\t\t\tassetCategoryElement.attributeValue(\"global\"));\n\n\t\tif (global) {\n\t\t\tGroup companyGroup = GroupLocalServiceUtil.getCompanyGroup(\n\t\t\t\tportletDataContext.getCompanyId());\n\n\t\t\tgroupId = companyGroup.getGroupId();\n\t\t}\n\n\t\tAssetCategory importedAssetCategory = null;\n\n\t\ttry {\n\t\t\tif (parentAssetCategoryId !=\n\t\t\t\t\tAssetCategoryConstants.DEFAULT_PARENT_CATEGORY_ID) {\n\n\t\t\t\tAssetCategoryUtil.findByPrimaryKey(parentAssetCategoryId);\n\t\t\t}\n\n\t\t\tList<Element> propertyElements = assetCategoryElement.elements(\n\t\t\t\t\"property\");\n\n\t\t\tString[] properties = new String[propertyElements.size()];\n\n\t\t\tfor (int i = 0; i < propertyElements.size(); i++) {\n\t\t\t\tElement propertyElement = propertyElements.get(i);\n\n\t\t\t\tString key = propertyElement.attributeValue(\"key\");\n\t\t\t\tString value = propertyElement.attributeValue(\"value\");\n\n\t\t\t\tproperties[i] = key.concat(StringPool.COLON).concat(value);\n\t\t\t}\n\n\t\t\tAssetCategory existingAssetCategory =\n\t\t\t\tAssetCategoryUtil.fetchByUUID_G(\n\t\t\t\t\tassetCategory.getUuid(), groupId);\n\n\t\t\tif (existingAssetCategory == null) {\n\t\t\t\tString name = getAssetCategoryName(\n\t\t\t\t\tnull, portletDataContext.getGroupId(),\n\t\t\t\t\tparentAssetCategoryId, assetCategory.getName(), 2);\n\n\t\t\t\tserviceContext.setUuid(assetCategory.getUuid());\n\n\t\t\t\tif (global) {\n\t\t\t\t\tif (AssetPermission.contains(\n\t\t\t\t\t\t\tPermissionThreadLocal.getPermissionChecker(),\n\t\t\t\t\t\t\tgroupId, ActionKeys.ADD_CATEGORY)) {\n\n\t\t\t\t\t\tserviceContext.setScopeGroupId(groupId);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tStringBundler sb = new StringBundler(6);\n\n\t\t\t\t\t\tsb.append(\"Category \");\n\t\t\t\t\t\tsb.append(assetCategory.getName());\n\t\t\t\t\t\tsb.append(\" could not be imported to the Global \");\n\t\t\t\t\t\tsb.append(\"scope because the user does not have \");\n\t\t\t\t\t\tsb.append(\"permissions. It will be imported into the \");\n\t\t\t\t\t\tsb.append(\"current scope.\");\n\n\t\t\t\t\t\t_log.error(sb.toString());\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\timportedAssetCategory =\n\t\t\t\t\tAssetCategoryLocalServiceUtil.addCategory(\n\t\t\t\t\t\tuserId, parentAssetCategoryId,\n\t\t\t\t\t\tgetAssetCategoryTitleMap(assetCategory, name),\n\t\t\t\t\t\tassetCategory.getDescriptionMap(), assetVocabularyId,\n\t\t\t\t\t\tproperties, serviceContext);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tString name = getAssetCategoryName(\n\t\t\t\t\tassetCategory.getUuid(), assetCategory.getGroupId(),\n\t\t\t\t\tparentAssetCategoryId, assetCategory.getName(), 2);\n\n\t\t\t\tboolean updateAssetCategory = true;\n\n\t\t\t\tif (global) {\n\t\t\t\t\tPermissionChecker permissionChecker =\n\t\t\t\t\t\tPermissionThreadLocal.getPermissionChecker();\n\n\t\t\t\t\tif (permissionChecker.hasPermission(\n\t\t\t\t\t\t\t groupId, AssetCategory.class.getName(),\n\t\t\t\t\t\t\t existingAssetCategory.getCategoryId(),\n\t\t\t\t\t\t\t ActionKeys.UPDATE)) {\n\n\t\t\t\t\t\t serviceContext.setScopeGroupId(groupId);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t updateAssetCategory = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (updateAssetCategory) {\n\t\t\t\t\timportedAssetCategory =\n\t\t\t\t\t\tAssetCategoryLocalServiceUtil.updateCategory(\n\t\t\t\t\t\t\tuserId, existingAssetCategory.getCategoryId(),\n\t\t\t\t\t\t\tparentAssetCategoryId,\n\t\t\t\t\t\t\tgetAssetCategoryTitleMap(assetCategory, name),\n\t\t\t\t\t\t\tassetCategory.getDescriptionMap(),\n\t\t\t\t\t\t\tassetVocabularyId, properties, serviceContext);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tStringBundler sb = new StringBundler(4);\n\n\t\t\t\t\tsb.append(\"Category \");\n\t\t\t\t\tsb.append(existingAssetCategory.getName());\n\t\t\t\t\tsb.append(\" could not be updated in the Global scope \");\n\t\t\t\t\tsb.append(\"because the user does not have permissions.\");\n\n\t\t\t\t\t_log.error(sb.toString());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tassetCategoryPKs.put(\n\t\t\t\tassetCategory.getCategoryId(),\n\t\t\t\timportedAssetCategory.getCategoryId());\n\n\t\t\tassetCategoryUuids.put(\n\t\t\t\tassetCategory.getUuid(), importedAssetCategory.getUuid());\n\n\t\t\tportletDataContext.importPermissions(\n\t\t\t\tAssetCategory.class, assetCategory.getCategoryId(),\n\t\t\t\timportedAssetCategory.getCategoryId());\n\t\t}\n\t\tcatch (NoSuchCategoryException nsce) {\n\t\t\t_log.error(\n\t\t\t\t\"Could not find the parent category for category \" +\n\t\t\t\t\tassetCategory.getCategoryId());\n\t\t}\n\t}","commit_id":"5785053e1bc64b696696a3bec8c757036681768f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void importAssetVocabulary(\n\t\t\tPortletDataContext portletDataContext,\n\t\t\tMap<Long, Long> assetVocabularyPKs, Element assetVocabularyElement,\n\t\t\tAssetVocabulary assetVocabulary)\n\t\tthrows Exception {\n\n\t\tlong userId = portletDataContext.getUserId(\n\t\t\tassetVocabulary.getUserUuid());\n\t\tlong groupId = portletDataContext.getScopeGroupId();\n\n\t\tServiceContext serviceContext = new ServiceContext();\n\n\t\tserviceContext.setAddGroupPermissions(true);\n\t\tserviceContext.setAddGuestPermissions(true);\n\t\tserviceContext.setCreateDate(assetVocabulary.getCreateDate());\n\t\tserviceContext.setModifiedDate(assetVocabulary.getModifiedDate());\n\t\tserviceContext.setScopeGroupId(portletDataContext.getScopeGroupId());\n\n\t\tboolean global = GetterUtil.getBoolean(\n\t\t\tassetVocabularyElement.attributeValue(\"global\"));\n\n\t\tif (global) {\n\t\t\tGroup companyGroup = GroupLocalServiceUtil.getCompanyGroup(\n\t\t\t\tportletDataContext.getCompanyId());\n\n\t\t\tgroupId = companyGroup.getGroupId();\n\t\t}\n\n\t\tAssetVocabulary importedAssetVocabulary = null;\n\n\t\tAssetVocabulary existingAssetVocabulary =\n\t\t\tAssetVocabularyUtil.fetchByUUID_G(\n\t\t\t\tassetVocabulary.getUuid(), groupId);\n\n\t\tif (existingAssetVocabulary == null) {\n\t\t\tString name = getAssetVocabularyName(\n\t\t\t\tnull, groupId, assetVocabulary.getName(), 2);\n\n\t\t\tserviceContext.setUuid(assetVocabulary.getUuid());\n\n\t\t\tif (global) {\n\t\t\t\tif (AssetPermission.contains(\n\t\t\t\t\tPermissionThreadLocal.getPermissionChecker(), groupId,\n\t\t\t\t\tActionKeys.ADD_VOCABULARY)) {\n\n\t\t\t\t\tserviceContext.setScopeGroupId(groupId);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t_log.error(\"Vocabulary \" + assetVocabulary.getName() +\n\t\t\t\t\t\t\" could not be imported to the Global scope because\"\n\t\t\t\t\t\t+ \" the user doesn't have enough permissions. \" +\n\t\t\t\t\t\t\"It will be imported into the current scope.\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\timportedAssetVocabulary =\n\t\t\t\tAssetVocabularyLocalServiceUtil.addVocabulary(\n\t\t\t\t\tuserId, StringPool.BLANK,\n\t\t\t\t\tgetAssetVocabularyTitleMap(assetVocabulary, name),\n\t\t\t\t\tassetVocabulary.getDescriptionMap(),\n\t\t\t\t\tassetVocabulary.getSettings(), serviceContext);\n\t\t}\n\t\telse {\n\t\t\tString name = getAssetVocabularyName(\n\t\t\t\tassetVocabulary.getUuid(), groupId, assetVocabulary.getName(),\n\t\t\t\t2);\n\n\t\t\tboolean updateVocabulary = true;\n\n\t\t\tif (global) {\n\t\t\t\tPermissionChecker permissionChecker =\n\t\t\t\t\tPermissionThreadLocal.getPermissionChecker();\n\n\t\t\t\tif (permissionChecker.hasPermission(\n\t\t\t\t\t groupId, AssetVocabulary.class.getName(),\n\t\t\t\t\t existingAssetVocabulary.getVocabularyId(),\n\t\t\t\t\t ActionKeys.UPDATE)) {\n\n\t\t\t\t\t serviceContext.setScopeGroupId(groupId);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t updateVocabulary = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (updateVocabulary) {\n\t\t\t\timportedAssetVocabulary =\n\t\t\t\t\tAssetVocabularyLocalServiceUtil.updateVocabulary(\n\t\t\t\t\t\texistingAssetVocabulary.getVocabularyId(),\n\t\t\t\t\t\tStringPool.BLANK,\n\t\t\t\t\t\tgetAssetVocabularyTitleMap(assetVocabulary, name),\n\t\t\t\t\t\tassetVocabulary.getDescriptionMap(),\n\t\t\t\t\t\tassetVocabulary.getSettings(), serviceContext);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_log.error(\"Vocabulary \" + existingAssetVocabulary.getName() +\n\t\t\t\t\t\" could not be updated in the global scope because\"\n\t\t\t\t\t+ \" the user doesn't have enough permissions.\");\n\t\t\t}\n\t\t}\n\n\t\tassetVocabularyPKs.put(\n\t\t\tassetVocabulary.getVocabularyId(),\n\t\t\timportedAssetVocabulary.getVocabularyId());\n\n\t\tportletDataContext.importPermissions(\n\t\t\tAssetVocabulary.class, assetVocabulary.getVocabularyId(),\n\t\t\timportedAssetVocabulary.getVocabularyId());\n\t}","id":13593,"modified_method":"protected void importAssetVocabulary(\n\t\t\tPortletDataContext portletDataContext,\n\t\t\tMap<Long, Long> assetVocabularyPKs, Element assetVocabularyElement,\n\t\t\tAssetVocabulary assetVocabulary)\n\t\tthrows Exception {\n\n\t\tlong userId = portletDataContext.getUserId(\n\t\t\tassetVocabulary.getUserUuid());\n\t\tlong groupId = portletDataContext.getScopeGroupId();\n\n\t\tServiceContext serviceContext = new ServiceContext();\n\n\t\tserviceContext.setAddGroupPermissions(true);\n\t\tserviceContext.setAddGuestPermissions(true);\n\t\tserviceContext.setCreateDate(assetVocabulary.getCreateDate());\n\t\tserviceContext.setModifiedDate(assetVocabulary.getModifiedDate());\n\t\tserviceContext.setScopeGroupId(portletDataContext.getScopeGroupId());\n\n\t\tboolean global = GetterUtil.getBoolean(\n\t\t\tassetVocabularyElement.attributeValue(\"global\"));\n\n\t\tif (global) {\n\t\t\tGroup companyGroup = GroupLocalServiceUtil.getCompanyGroup(\n\t\t\t\tportletDataContext.getCompanyId());\n\n\t\t\tgroupId = companyGroup.getGroupId();\n\t\t}\n\n\t\tAssetVocabulary importedAssetVocabulary = null;\n\n\t\tAssetVocabulary existingAssetVocabulary =\n\t\t\tAssetVocabularyUtil.fetchByUUID_G(\n\t\t\t\tassetVocabulary.getUuid(), groupId);\n\n\t\tif (existingAssetVocabulary == null) {\n\t\t\tString name = getAssetVocabularyName(\n\t\t\t\tnull, groupId, assetVocabulary.getName(), 2);\n\n\t\t\tserviceContext.setUuid(assetVocabulary.getUuid());\n\n\t\t\tif (global) {\n\t\t\t\tif (AssetPermission.contains(\n\t\t\t\t\t\tPermissionThreadLocal.getPermissionChecker(), groupId,\n\t\t\t\t\t\tActionKeys.ADD_VOCABULARY)) {\n\n\t\t\t\t\tserviceContext.setScopeGroupId(groupId);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tStringBundler sb = new StringBundler(5);\n\n\t\t\t\t\tsb.append(\"Vocabulary \");\n\t\t\t\t\tsb.append(assetVocabulary.getName());\n\t\t\t\t\tsb.append(\" could not be imported to the Global scope \");\n\t\t\t\t\tsb.append(\"because the user does not have permissions. \");\n\t\t\t\t\tsb.append(\"It will be imported into the current scope.\");\n\n\t\t\t\t\t_log.error(sb.toString());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\timportedAssetVocabulary =\n\t\t\t\tAssetVocabularyLocalServiceUtil.addVocabulary(\n\t\t\t\t\tuserId, StringPool.BLANK,\n\t\t\t\t\tgetAssetVocabularyTitleMap(assetVocabulary, name),\n\t\t\t\t\tassetVocabulary.getDescriptionMap(),\n\t\t\t\t\tassetVocabulary.getSettings(), serviceContext);\n\t\t}\n\t\telse {\n\t\t\tString name = getAssetVocabularyName(\n\t\t\t\tassetVocabulary.getUuid(), groupId, assetVocabulary.getName(),\n\t\t\t\t2);\n\n\t\t\tboolean updateVocabulary = true;\n\n\t\t\tif (global) {\n\t\t\t\tPermissionChecker permissionChecker =\n\t\t\t\t\tPermissionThreadLocal.getPermissionChecker();\n\n\t\t\t\tif (permissionChecker.hasPermission(\n\t\t\t\t\t groupId, AssetVocabulary.class.getName(),\n\t\t\t\t\t existingAssetVocabulary.getVocabularyId(),\n\t\t\t\t\t ActionKeys.UPDATE)) {\n\n\t\t\t\t\t serviceContext.setScopeGroupId(groupId);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t updateVocabulary = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (updateVocabulary) {\n\t\t\t\timportedAssetVocabulary =\n\t\t\t\t\tAssetVocabularyLocalServiceUtil.updateVocabulary(\n\t\t\t\t\t\texistingAssetVocabulary.getVocabularyId(),\n\t\t\t\t\t\tStringPool.BLANK,\n\t\t\t\t\t\tgetAssetVocabularyTitleMap(assetVocabulary, name),\n\t\t\t\t\t\tassetVocabulary.getDescriptionMap(),\n\t\t\t\t\t\tassetVocabulary.getSettings(), serviceContext);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tStringBundler sb = new StringBundler(4);\n\n\t\t\t\tsb.append(\"Vocabulary \");\n\t\t\t\tsb.append(existingAssetVocabulary.getName());\n\t\t\t\tsb.append(\" could not be updated in the Global scope because \");\n\t\t\t\tsb.append(\"the user does not have permissions.\");\n\n\t\t\t\t_log.error(sb.toString());\n\t\t\t}\n\t\t}\n\n\t\tassetVocabularyPKs.put(\n\t\t\tassetVocabulary.getVocabularyId(),\n\t\t\timportedAssetVocabulary.getVocabularyId());\n\n\t\tportletDataContext.importPermissions(\n\t\t\tAssetVocabulary.class, assetVocabulary.getVocabularyId(),\n\t\t\timportedAssetVocabulary.getVocabularyId());\n\t}","commit_id":"5785053e1bc64b696696a3bec8c757036681768f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private void bindWithRequestAndPropertyValues(ServletRequest request, MutablePropertyValues mpvs) {\n        GrailsWebRequest webRequest = GrailsWebRequest.lookup((HttpServletRequest) request);\n        if (webRequest != null) {\n            final ApplicationContext applicationContext = webRequest.getApplicationContext();\n            if (applicationContext != null) {\n                final Map<String, BindEventListener> bindEventListenerMap = applicationContext.getBeansOfType(BindEventListener.class);\n                for (BindEventListener bindEventListener : bindEventListenerMap.values()) {\n                    bindEventListener.doBind(getTarget(), mpvs, getTypeConverter());\n                }\n            }\n        }\n        preProcessMutablePropertyValues(mpvs);\n\n        if (request instanceof MultipartHttpServletRequest) {\n            MultipartHttpServletRequest multipartRequest = (MultipartHttpServletRequest) request;\n            bindMultipart(multipartRequest.getMultiFileMap(), mpvs);\n        }\n        doBind(mpvs);\n    }","id":13594,"modified_method":"private void bindWithRequestAndPropertyValues(ServletRequest request, MutablePropertyValues mpvs) {\n        GrailsWebRequest webRequest = GrailsWebRequest.lookup((HttpServletRequest) request);\n        if (webRequest != null) {\n            final ApplicationContext applicationContext = webRequest.getApplicationContext();\n            if (applicationContext != null) {\n                ServletContext servletContext = webRequest.getServletContext();\n                @SuppressWarnings(\"unchecked\")\n                Map<String, BindEventListener> bindEventListenerMap = (Map<String, BindEventListener>)servletContext.getAttribute(BIND_EVENT_LISTENERS);\n                if(bindEventListenerMap==null) {\n                    bindEventListenerMap = applicationContext.getBeansOfType(BindEventListener.class);\n                    if(!Environment.isDevelopmentMode()) {\n                        servletContext.setAttribute(BIND_EVENT_LISTENERS, bindEventListenerMap);\n                    }\n                }\n                for (BindEventListener bindEventListener : bindEventListenerMap.values()) {\n                    bindEventListener.doBind(getTarget(), mpvs, getTypeConverter());\n                }\n            }\n        }\n        preProcessMutablePropertyValues(mpvs);\n\n        if (request instanceof MultipartHttpServletRequest) {\n            MultipartHttpServletRequest multipartRequest = (MultipartHttpServletRequest) request;\n            bindMultipart(multipartRequest.getMultiFileMap(), mpvs);\n        }\n        doBind(mpvs);\n    }","commit_id":"59307b6d80269aa7b8a07819cee31ada273bbbb8","url":"https://github.com/grails/grails-core"},{"original_method":"/**\n     * Collects all PropertyEditorRegistrars in the application context and\n     * calls them to register their custom editors\n     *\n     * @param servletContext\n     * @param registry The PropertyEditorRegistry instance\n     */\n    private static void registerCustomEditors(ServletContext servletContext, PropertyEditorRegistry registry) {\n        if (servletContext == null) {\n            return;\n        }\n\n        WebApplicationContext context = WebApplicationContextUtils.getWebApplicationContext(servletContext);\n        if (context == null) {\n            return;\n        }\n\n        Map<String, PropertyEditorRegistrar> editors = context.getBeansOfType(PropertyEditorRegistrar.class);\n        for (PropertyEditorRegistrar editorRegistrar : editors.values()) {\n            editorRegistrar.registerCustomEditors(registry);\n        }\n    }","id":13595,"modified_method":"/**\n     * Collects all PropertyEditorRegistrars in the application context and\n     * calls them to register their custom editors\n     *\n     * @param servletContext\n     * @param registry The PropertyEditorRegistry instance\n     */\n    private static void registerCustomEditors(ServletContext servletContext, PropertyEditorRegistry registry) {\n        if (servletContext == null) {\n            return;\n        }\n\n        WebApplicationContext context = WebApplicationContextUtils.getWebApplicationContext(servletContext);\n        if (context == null) {\n            return;\n        }\n\n        @SuppressWarnings(\"unchecked\")\n        Map<String, PropertyEditorRegistrar> editors = (Map<String, PropertyEditorRegistrar>)servletContext.getAttribute(PROPERTY_EDITOR_REGISTRARS);\n        if(editors==null) {\n            editors = context.getBeansOfType(PropertyEditorRegistrar.class);\n            if(!Environment.isDevelopmentMode()) {\n                servletContext.setAttribute(PROPERTY_EDITOR_REGISTRARS, editors);\n            }\n        }\n        for (PropertyEditorRegistrar editorRegistrar : editors.values()) {\n            editorRegistrar.registerCustomEditors(registry);\n        }\n    }","commit_id":"59307b6d80269aa7b8a07819cee31ada273bbbb8","url":"https://github.com/grails/grails-core"},{"original_method":"/**\n     * Collects all PropertyEditorRegistrars in the application context and\n     * calls them to register their custom editors\n     *\n     * @param servletContext\n     * @param registry The PropertyEditorRegistry instance\n     */\n    private static void registerCustomEditors(ServletContext servletContext, PropertyEditorRegistry registry) {\n        if (servletContext == null) {\n            return;\n        }\n\n        WebApplicationContext context = WebApplicationContextUtils.getWebApplicationContext(servletContext);\n        if (context == null) {\n            return;\n        }\n\n        Map<String, PropertyEditorRegistrar> editors = context.getBeansOfType(PropertyEditorRegistrar.class);\n        for (PropertyEditorRegistrar editorRegistrar : editors.values()) {\n            editorRegistrar.registerCustomEditors(registry);\n        }\n    }","id":13596,"modified_method":"/**\n     * Collects all PropertyEditorRegistrars in the application context and\n     * calls them to register their custom editors\n     *\n     * @param servletContext\n     * @param registry The PropertyEditorRegistry instance\n     */\n    private static void registerCustomEditors(ServletContext servletContext, PropertyEditorRegistry registry) {\n        if (servletContext == null) {\n            return;\n        }\n\n        WebApplicationContext context = WebApplicationContextUtils.getWebApplicationContext(servletContext);\n        if (context == null) {\n            return;\n        }\n\n        @SuppressWarnings(\"unchecked\")\n        Map<String, PropertyEditorRegistrar> editors = (Map<String, PropertyEditorRegistrar>)servletContext.getAttribute(PROPERTY_EDITOR_REGISTRARS);\n        if(editors==null) {\n            editors = context.getBeansOfType(PropertyEditorRegistrar.class);\n            if(!Environment.isDevelopmentMode()) {\n                servletContext.setAttribute(PROPERTY_EDITOR_REGISTRARS, editors);\n            }\n        }\n        for (PropertyEditorRegistrar editorRegistrar : editors.values()) {\n            editorRegistrar.registerCustomEditors(registry);\n        }\n    }","commit_id":"e5d8ee120c7f19f9477eb72608824d665d1d483d","url":"https://github.com/grails/grails-core"},{"original_method":"private void bindWithRequestAndPropertyValues(ServletRequest request, MutablePropertyValues mpvs) {\n        GrailsWebRequest webRequest = GrailsWebRequest.lookup((HttpServletRequest) request);\n        if (webRequest != null) {\n            final ApplicationContext applicationContext = webRequest.getApplicationContext();\n            if (applicationContext != null) {\n                final Map<String, BindEventListener> bindEventListenerMap = applicationContext.getBeansOfType(BindEventListener.class);\n                for (BindEventListener bindEventListener : bindEventListenerMap.values()) {\n                    bindEventListener.doBind(getTarget(), mpvs, getTypeConverter());\n                }\n            }\n        }\n        preProcessMutablePropertyValues(mpvs);\n\n        if (request instanceof MultipartHttpServletRequest) {\n            MultipartHttpServletRequest multipartRequest = (MultipartHttpServletRequest) request;\n            bindMultipart(multipartRequest.getMultiFileMap(), mpvs);\n        }\n        doBind(mpvs);\n    }","id":13597,"modified_method":"private void bindWithRequestAndPropertyValues(ServletRequest request, MutablePropertyValues mpvs) {\n        GrailsWebRequest webRequest = GrailsWebRequest.lookup((HttpServletRequest) request);\n        if (webRequest != null) {\n            final ApplicationContext applicationContext = webRequest.getApplicationContext();\n            if (applicationContext != null) {\n                ServletContext servletContext = webRequest.getServletContext();\n                @SuppressWarnings(\"unchecked\")\n                Map<String, BindEventListener> bindEventListenerMap = (Map<String, BindEventListener>)servletContext.getAttribute(BIND_EVENT_LISTENERS);\n                if(bindEventListenerMap==null) {\n                    bindEventListenerMap = applicationContext.getBeansOfType(BindEventListener.class);\n                    if(!Environment.isDevelopmentMode()) {\n                        servletContext.setAttribute(BIND_EVENT_LISTENERS, bindEventListenerMap);\n                    }\n                }\n                for (BindEventListener bindEventListener : bindEventListenerMap.values()) {\n                    bindEventListener.doBind(getTarget(), mpvs, getTypeConverter());\n                }\n            }\n        }\n        preProcessMutablePropertyValues(mpvs);\n\n        if (request instanceof MultipartHttpServletRequest) {\n            MultipartHttpServletRequest multipartRequest = (MultipartHttpServletRequest) request;\n            bindMultipart(multipartRequest.getMultiFileMap(), mpvs);\n        }\n        doBind(mpvs);\n    }","commit_id":"e5d8ee120c7f19f9477eb72608824d665d1d483d","url":"https://github.com/grails/grails-core"},{"original_method":"protected UrlMapping createShowActionResourcesRestfulMapping(String controllerName, Object pluginName, UrlMappingData urlData, List<ConstrainedProperty> previousConstraints) {\n            UrlMappingData showUrlMappingData = urlData.createRelative('/' + CAPTURING_WILD_CARD);\n            List<ConstrainedProperty> showUrlMappingConstraints = new ArrayList<ConstrainedProperty>(previousConstraints);\n            showUrlMappingConstraints.add(new ConstrainedProperty(UrlMapping.class, \"id\", String.class));\n\n            return new RegexUrlMapping(showUrlMappingData,controllerName,\"show\",pluginName, null, HttpMethod.GET.toString(), showUrlMappingConstraints.toArray(new ConstrainedProperty[showUrlMappingConstraints.size()]) , servletContext);\n        }","id":13598,"modified_method":"protected UrlMapping createShowActionResourcesRestfulMapping(String controllerName, Object pluginName, UrlMappingData urlData, List<ConstrainedProperty> previousConstraints) {\n            UrlMappingData showUrlMappingData = urlData.createRelative('/' + CAPTURING_WILD_CARD);\n            List<ConstrainedProperty> showUrlMappingConstraints = new ArrayList<ConstrainedProperty>(previousConstraints);\n            showUrlMappingConstraints.add(new ConstrainedProperty(UrlMapping.class, \"id\", String.class));\n\n            return new RegexUrlMapping(showUrlMappingData,controllerName, ACTION_SHOW,pluginName, null, HttpMethod.GET.toString(), showUrlMappingConstraints.toArray(new ConstrainedProperty[showUrlMappingConstraints.size()]) , servletContext);\n        }","commit_id":"d0d9eaebd881ce4ccb7a2e3a40ffedcc74b80dcd","url":"https://github.com/grails/grails-core"},{"original_method":"protected UrlMapping createDeleteActionResourcesRestfulMapping(String controllerName, Object pluginName, UrlMappingData urlData, List<ConstrainedProperty> previousConstraints) {\n            UrlMappingData deleteUrlMappingData = urlData.createRelative('/' + CAPTURING_WILD_CARD);\n            List<ConstrainedProperty> deleteUrlMappingConstraints = new ArrayList<ConstrainedProperty>(previousConstraints);\n            deleteUrlMappingConstraints.add(new ConstrainedProperty(UrlMapping.class, \"id\", String.class));\n\n            return new RegexUrlMapping(deleteUrlMappingData,controllerName,\"delete\",pluginName, null, HttpMethod.DELETE.toString(),deleteUrlMappingConstraints.toArray(new ConstrainedProperty[deleteUrlMappingConstraints.size()]) , servletContext);\n        }","id":13599,"modified_method":"protected UrlMapping createDeleteActionResourcesRestfulMapping(String controllerName, Object pluginName, UrlMappingData urlData, List<ConstrainedProperty> previousConstraints) {\n            UrlMappingData deleteUrlMappingData = urlData.createRelative('/' + CAPTURING_WILD_CARD);\n            List<ConstrainedProperty> deleteUrlMappingConstraints = new ArrayList<ConstrainedProperty>(previousConstraints);\n            deleteUrlMappingConstraints.add(new ConstrainedProperty(UrlMapping.class, \"id\", String.class));\n\n            return new RegexUrlMapping(deleteUrlMappingData,controllerName, ACTION_DELETE,pluginName, null, HttpMethod.DELETE.toString(),deleteUrlMappingConstraints.toArray(new ConstrainedProperty[deleteUrlMappingConstraints.size()]) , servletContext);\n        }","commit_id":"d0d9eaebd881ce4ccb7a2e3a40ffedcc74b80dcd","url":"https://github.com/grails/grails-core"},{"original_method":"protected UrlMapping createSaveActionResourcesRestfulMapping(String controllerName, Object pluginName, UrlMappingData urlData, ConstrainedProperty[] constraintArray) {\n            return new RegexUrlMapping(urlData,controllerName,\"save\",pluginName, null, HttpMethod.POST.toString(),constraintArray, servletContext);\n        }","id":13600,"modified_method":"protected UrlMapping createSaveActionResourcesRestfulMapping(String controllerName, Object pluginName, UrlMappingData urlData, ConstrainedProperty[] constraintArray) {\n            return new RegexUrlMapping(urlData,controllerName, ACTION_SAVE,pluginName, null, HttpMethod.POST.toString(),constraintArray, servletContext);\n        }","commit_id":"d0d9eaebd881ce4ccb7a2e3a40ffedcc74b80dcd","url":"https://github.com/grails/grails-core"},{"original_method":"/**\n         * Takes a controller and creates the necessary URL mappings for a singular RESTful resource\n         *\n         * @param controllerName The controller name\n         * @param pluginName The name of the plugin\n         * @param urlData   The urlData instance\n         * @param previousConstraints Any constraints\n         */\n        protected void createSingleResourceRestfulMappings(String controllerName, Object pluginName, UrlMappingData urlData, List<ConstrainedProperty> previousConstraints) {\n\n            ConstrainedProperty[] constraintArray = previousConstraints.toArray(new ConstrainedProperty[previousConstraints.size()]);\n\n            // GET /$controller/create -> action: 'create'\n            UrlMapping createUrlMapping = createCreateActionResourcesRestfulMapping(controllerName, pluginName, urlData, constraintArray);\n            configureUrlMapping(createUrlMapping);\n\n            // POST /$controller -> action:'save'\n            UrlMapping saveUrlMapping = createSaveActionResourcesRestfulMapping(controllerName, pluginName, urlData, constraintArray);\n            configureUrlMapping(saveUrlMapping);\n\n            // GET /$controller -> action:'show'\n            UrlMapping showUrlMapping = createShowActionResourceRestfulMapping(controllerName, pluginName, urlData, constraintArray);\n            configureUrlMapping(showUrlMapping);\n\n            // GET /$controller/edit -> action:'edit'\n            UrlMapping editUrlMapping = createEditctionResourceRestfulMapping(controllerName, pluginName, urlData, constraintArray);\n            configureUrlMapping(editUrlMapping);\n\n            // PUT /$controller -> action:'update'\n            UrlMapping updateUrlMapping = createUpdateActionResourceRestfulMapping(controllerName, pluginName, urlData, constraintArray);\n            configureUrlMapping(updateUrlMapping);\n\n            // DELETE /$controller -> action:'delete'\n            UrlMapping deleteUrlMapping = createDeleteActionResourceRestfulMapping(controllerName, pluginName, urlData, constraintArray);\n            configureUrlMapping(deleteUrlMapping);\n            \n        }","id":13601,"modified_method":"/**\n         * Takes a controller and creates the necessary URL mappings for a singular RESTful resource\n         *\n         * @param controllerName The controller name\n         * @param pluginName The name of the plugin\n         * @param urlData   The urlData instance\n         * @param previousConstraints Any constraints\n         * @param includes\n         */\n        protected void createSingleResourceRestfulMappings(String controllerName, Object pluginName, UrlMappingData urlData, List<ConstrainedProperty> previousConstraints, List<String> includes) {\n\n            ConstrainedProperty[] constraintArray = previousConstraints.toArray(new ConstrainedProperty[previousConstraints.size()]);\n\n            if(includes.contains(ACTION_CREATE)) {\n                // GET /$controller/create -> action: 'create'\n                UrlMapping createUrlMapping = createCreateActionResourcesRestfulMapping(controllerName, pluginName, urlData, constraintArray);\n                configureUrlMapping(createUrlMapping);\n            }\n\n            if(includes.contains(ACTION_SAVE)) {\n\n                // POST /$controller -> action:'save'\n                UrlMapping saveUrlMapping = createSaveActionResourcesRestfulMapping(controllerName, pluginName, urlData, constraintArray);\n                configureUrlMapping(saveUrlMapping);\n            }\n\n            if(includes.contains(ACTION_SHOW)) {\n                // GET /$controller -> action:'show'\n                UrlMapping showUrlMapping = createShowActionResourceRestfulMapping(controllerName, pluginName, urlData, constraintArray);\n                configureUrlMapping(showUrlMapping);\n            }\n\n            if(includes.contains(ACTION_EDIT)) {\n                // GET /$controller/edit -> action:'edit'\n                UrlMapping editUrlMapping = createEditctionResourceRestfulMapping(controllerName, pluginName, urlData, constraintArray);\n                configureUrlMapping(editUrlMapping);\n            }\n\n            if(includes.contains(ACTION_UPDATE)) {\n                // PUT /$controller -> action:'update'\n                UrlMapping updateUrlMapping = createUpdateActionResourceRestfulMapping(controllerName, pluginName, urlData, constraintArray);\n                configureUrlMapping(updateUrlMapping);\n            }\n\n            if(includes.contains(ACTION_DELETE)) {\n                // DELETE /$controller -> action:'delete'\n                UrlMapping deleteUrlMapping = createDeleteActionResourceRestfulMapping(controllerName, pluginName, urlData, constraintArray);\n                configureUrlMapping(deleteUrlMapping);\n            }\n\n        }","commit_id":"d0d9eaebd881ce4ccb7a2e3a40ffedcc74b80dcd","url":"https://github.com/grails/grails-core"},{"original_method":"protected UrlMapping createEditActionResourcesRestfulMapping(String controllerName, Object pluginName, UrlMappingData urlData, List<ConstrainedProperty> previousConstraints) {\n            UrlMappingData editUrlMappingData = urlData.createRelative('/' + CAPTURING_WILD_CARD + \"/edit\");\n            List<ConstrainedProperty> editUrlMappingConstraints = new ArrayList<ConstrainedProperty>(previousConstraints);\n            editUrlMappingConstraints.add(new ConstrainedProperty(UrlMapping.class, \"id\", String.class));\n\n            return new RegexUrlMapping(editUrlMappingData,controllerName,\"edit\",pluginName, null, HttpMethod.GET.toString(), editUrlMappingConstraints.toArray(new ConstrainedProperty[editUrlMappingConstraints.size()]) , servletContext);\n        }","id":13602,"modified_method":"protected UrlMapping createEditActionResourcesRestfulMapping(String controllerName, Object pluginName, UrlMappingData urlData, List<ConstrainedProperty> previousConstraints) {\n            UrlMappingData editUrlMappingData = urlData.createRelative('/' + CAPTURING_WILD_CARD + \"/edit\");\n            List<ConstrainedProperty> editUrlMappingConstraints = new ArrayList<ConstrainedProperty>(previousConstraints);\n            editUrlMappingConstraints.add(new ConstrainedProperty(UrlMapping.class, \"id\", String.class));\n\n            return new RegexUrlMapping(editUrlMappingData,controllerName, ACTION_EDIT,pluginName, null, HttpMethod.GET.toString(), editUrlMappingConstraints.toArray(new ConstrainedProperty[editUrlMappingConstraints.size()]) , servletContext);\n        }","commit_id":"d0d9eaebd881ce4ccb7a2e3a40ffedcc74b80dcd","url":"https://github.com/grails/grails-core"},{"original_method":"protected UrlMapping createCreateActionResourcesRestfulMapping(String controllerName, Object pluginName, UrlMappingData urlData, ConstrainedProperty[] constraintArray) {\n            UrlMappingData createMappingData = urlData.createRelative(\"/create\");\n            return new RegexUrlMapping(createMappingData,controllerName,\"create\",pluginName, null, HttpMethod.GET.toString(), constraintArray, servletContext);\n        }","id":13603,"modified_method":"protected UrlMapping createCreateActionResourcesRestfulMapping(String controllerName, Object pluginName, UrlMappingData urlData, ConstrainedProperty[] constraintArray) {\n            UrlMappingData createMappingData = urlData.createRelative(\"/create\");\n            return new RegexUrlMapping(createMappingData,controllerName, ACTION_CREATE,pluginName, null, HttpMethod.GET.toString(), constraintArray, servletContext);\n        }","commit_id":"d0d9eaebd881ce4ccb7a2e3a40ffedcc74b80dcd","url":"https://github.com/grails/grails-core"},{"original_method":"protected UrlMapping createUpdateActionResourcesRestfulMapping(String controllerName, Object pluginName, UrlMappingData urlData, List<ConstrainedProperty> previousConstraints) {\n            UrlMappingData updateUrlMappingData = urlData.createRelative('/' + CAPTURING_WILD_CARD);\n            List<ConstrainedProperty> updateUrlMappingConstraints = new ArrayList<ConstrainedProperty>(previousConstraints);\n            updateUrlMappingConstraints.add(new ConstrainedProperty(UrlMapping.class, \"id\", String.class));\n\n            return new RegexUrlMapping(updateUrlMappingData,controllerName,\"update\",pluginName, null, HttpMethod.PUT.toString(),updateUrlMappingConstraints.toArray(new ConstrainedProperty[updateUrlMappingConstraints.size()]) , servletContext);\n        }","id":13604,"modified_method":"protected UrlMapping createUpdateActionResourcesRestfulMapping(String controllerName, Object pluginName, UrlMappingData urlData, List<ConstrainedProperty> previousConstraints) {\n            UrlMappingData updateUrlMappingData = urlData.createRelative('/' + CAPTURING_WILD_CARD);\n            List<ConstrainedProperty> updateUrlMappingConstraints = new ArrayList<ConstrainedProperty>(previousConstraints);\n            updateUrlMappingConstraints.add(new ConstrainedProperty(UrlMapping.class, \"id\", String.class));\n\n            return new RegexUrlMapping(updateUrlMappingData,controllerName, ACTION_UPDATE,pluginName, null, HttpMethod.PUT.toString(),updateUrlMappingConstraints.toArray(new ConstrainedProperty[updateUrlMappingConstraints.size()]) , servletContext);\n        }","commit_id":"d0d9eaebd881ce4ccb7a2e3a40ffedcc74b80dcd","url":"https://github.com/grails/grails-core"},{"original_method":"protected void createResourceRestfulMappings(String controllerName, Object pluginName, UrlMappingData urlData, List<ConstrainedProperty> previousConstraints) {\n            ConstrainedProperty[] constraintArray = previousConstraints.toArray(new ConstrainedProperty[previousConstraints.size()]);\n\n            // GET /$controller -> action:'list'\n            UrlMapping listUrlMapping = createListActionResourcesRestfulMapping(controllerName, pluginName, urlData, constraintArray);\n            configureUrlMapping(listUrlMapping);\n\n            // GET /$controller/create -> action:'create'\n            UrlMapping createUrlMapping = createCreateActionResourcesRestfulMapping(controllerName, pluginName, urlData, constraintArray);\n            configureUrlMapping(createUrlMapping);\n\n            // POST /$controller -> action:'save'\n            UrlMapping saveUrlMapping = createSaveActionResourcesRestfulMapping(controllerName, pluginName, urlData, constraintArray);\n            configureUrlMapping(saveUrlMapping);\n\n            // GET /$controller/$id -> action:'show'\n            UrlMapping showUrlMapping = createShowActionResourcesRestfulMapping(controllerName, pluginName, urlData, previousConstraints);\n            configureUrlMapping(showUrlMapping);\n\n            // GET /$controller/$id/edit -> action:'edit'\n            UrlMapping editUrlMapping = createEditActionResourcesRestfulMapping(controllerName, pluginName, urlData, previousConstraints);\n            configureUrlMapping(editUrlMapping);\n\n            // PUT /$controller/$id -> action:'update'\n            UrlMapping updateUrlMapping = createUpdateActionResourcesRestfulMapping(controllerName, pluginName, urlData, previousConstraints);\n            configureUrlMapping(updateUrlMapping);\n\n            // DELETE /$controller/$id -> action:'delete'\n            UrlMapping deleteUrlMapping = createDeleteActionResourcesRestfulMapping(controllerName, pluginName, urlData, previousConstraints);\n            configureUrlMapping(deleteUrlMapping);\n        }","id":13605,"modified_method":"protected void createResourceRestfulMappings(String controllerName, Object pluginName, UrlMappingData urlData, List<ConstrainedProperty> previousConstraints, List<String> includes) {\n            ConstrainedProperty[] constraintArray = previousConstraints.toArray(new ConstrainedProperty[previousConstraints.size()]);\n\n\n            if(includes.contains(ACTION_INDEX)) {\n                // GET /$controller -> action:'index'\n                UrlMapping listUrlMapping = createIndexActionResourcesRestfulMapping(controllerName, pluginName, urlData, constraintArray);\n                configureUrlMapping(listUrlMapping);\n            }\n\n            if(includes.contains(ACTION_CREATE)) {\n                // GET /$controller/create -> action:'create'\n                UrlMapping createUrlMapping = createCreateActionResourcesRestfulMapping(controllerName, pluginName, urlData, constraintArray);\n                configureUrlMapping(createUrlMapping);\n            }\n\n            if(includes.contains(ACTION_SAVE)) {\n                // POST /$controller -> action:'save'\n                UrlMapping saveUrlMapping = createSaveActionResourcesRestfulMapping(controllerName, pluginName, urlData, constraintArray);\n                configureUrlMapping(saveUrlMapping);\n            }\n\n            if(includes.contains(ACTION_SHOW)) {\n                // GET /$controller/$id -> action:'show'\n                UrlMapping showUrlMapping = createShowActionResourcesRestfulMapping(controllerName, pluginName, urlData, previousConstraints);\n                configureUrlMapping(showUrlMapping);\n            }\n\n            if(includes.contains(ACTION_EDIT)) {\n                // GET /$controller/$id/edit -> action:'edit'\n                UrlMapping editUrlMapping = createEditActionResourcesRestfulMapping(controllerName, pluginName, urlData, previousConstraints);\n                configureUrlMapping(editUrlMapping);\n            }\n\n            if(includes.contains(ACTION_UPDATE)) {\n                // PUT /$controller/$id -> action:'update'\n                UrlMapping updateUrlMapping = createUpdateActionResourcesRestfulMapping(controllerName, pluginName, urlData, previousConstraints);\n                configureUrlMapping(updateUrlMapping);\n            }\n\n            if(includes.contains(ACTION_DELETE)) {\n                // DELETE /$controller/$id -> action:'delete'\n                UrlMapping deleteUrlMapping = createDeleteActionResourcesRestfulMapping(controllerName, pluginName, urlData, previousConstraints);\n                configureUrlMapping(deleteUrlMapping);\n            }\n\n        }","commit_id":"d0d9eaebd881ce4ccb7a2e3a40ffedcc74b80dcd","url":"https://github.com/grails/grails-core"},{"original_method":"private Object _invoke(String methodName, Object arg, Object delegate) {\n            Object[] args = (Object[]) arg;\n            String mappedURI = establishFullURI(methodName);\n            final boolean isResponseCode = isResponseCode(mappedURI);\n            if (mappedURI.startsWith(SLASH) || isResponseCode) {\n                // Create a new parameter map for this mapping.\n                parameterValues = new HashMap<String, Object>();\n                Map variables = binding != null ? binding.getVariables() : null;\n                try {\n                    urlDefiningMode = false;\n                    args = args != null && args.length > 0 ? args : new Object[]{Collections.EMPTY_MAP};\n                    if (args[0] instanceof Closure) {\n                        UrlMappingData urlData = createUrlMappingData(mappedURI, isResponseCode);\n\n                        Closure callable = (Closure) args[0];\n                        if (delegate != null) callable.setDelegate(delegate);\n                        callable.call();\n\n                        Object controllerName;\n                        Object actionName;\n                        Object pluginName;\n                        String httpMethod = null;\n                        Object viewName;\n                        Object uri;\n\n                        if (binding != null) {\n                            controllerName = variables.get(GrailsControllerClass.CONTROLLER);\n                            actionName = variables.get(GrailsControllerClass.ACTION);\n                            viewName = variables.get(GrailsControllerClass.VIEW);\n                            uri = variables.get(URI);\n                            pluginName = variables.get(PLUGIN);\n                            if(variables.containsKey(HTTP_METHOD)) {\n                                httpMethod = variables.get(HTTP_METHOD).toString();\n                            }\n\n                        }\n                        else {\n                            controllerName = this.controllerName;\n                            actionName = this.actionName;\n                            pluginName = this.pluginName;\n                            viewName = this.viewName;\n                            uri = this.uri;\n                            httpMethod = this.httpMethod;\n                        }\n\n                        ConstrainedProperty[] constraints = previousConstraints.toArray(new ConstrainedProperty[previousConstraints.size()]);\n                        UrlMapping urlMapping;\n                        if (uri != null) {\n                            try {\n                                urlMapping = new RegexUrlMapping(urlData, new URI(uri.toString()), constraints, sc);\n                            }\n                            catch (URISyntaxException e) {\n                                throw new UrlMappingException(\"Cannot map to invalid URI: \" + e.getMessage(), e);\n                            }\n                        }\n                        else {\n                            urlMapping = createURLMapping(urlData, isResponseCode, controllerName, actionName, pluginName, viewName, httpMethod, constraints);\n                        }\n\n                        if (binding != null) {\n                            Map bindingVariables = variables;\n                            Object parse = getParseRequest(Collections.EMPTY_MAP, bindingVariables);\n                            if (parse instanceof Boolean) {\n                                urlMapping.setParseRequest((Boolean)parse);\n                            }\n                        }\n                        configureUrlMapping(urlMapping);\n                        return urlMapping;\n                    }\n\n                    if (args[0] instanceof Map) {\n                        Map namedArguments = (Map) args[0];\n                        String uri = mappedURI;\n\n                        UrlMappingData urlData = createUrlMappingData(uri, isResponseCode);\n\n                        if(namedArguments.containsKey(RESOURCE)) {\n                            Object controller = namedArguments.get(RESOURCE);\n                            String controllerName = controller.toString();\n                            parentResources.push( new ParentResource(controllerName,uri, true) );\n                            try {\n                                invokeLastArgumentIfClosure(args);\n                            } finally {\n                                parentResources.pop();\n                            }\n                            if(controller != null) {\n                                createSingleResourceRestfulMappings(controllerName,pluginName, urlData, previousConstraints);\n                            }\n                        }\n                        else if(namedArguments.containsKey(RESOURCES)) {\n                            Object controller = namedArguments.get(RESOURCES);\n                            String controllerName = controller.toString();\n                            parentResources.push( new ParentResource(controllerName,uri,false) );\n                            try {\n                                invokeLastArgumentIfClosure(args);\n                            } finally {\n                                parentResources.pop();\n                            }\n                            if(controller != null) {\n                                createResourceRestfulMappings(controllerName, pluginName, urlData, previousConstraints);\n                            }\n                        }\n                        else {\n\n                            invokeLastArgumentIfClosure(args);\n                            UrlMapping urlMapping = getURLMappingForNamedArgs(namedArguments, urlData, mappedURI, isResponseCode);\n                            configureUrlMapping(urlMapping);\n                            return urlMapping;\n                        }\n                    }\n                    return null;\n                }\n                finally {\n                    if (binding != null) {\n                        variables.clear();\n                    }\n                    else {\n                        controllerName = null;\n                        actionName = null;\n                        viewName = null;\n                        pluginName = null;\n                    }\n                    previousConstraints.clear();\n                    urlDefiningMode = true;\n                }\n            }\n            else if (!urlDefiningMode && CONSTRAINTS.equals(mappedURI)) {\n                ConstrainedPropertyBuilder builder = new ConstrainedPropertyBuilder(this);\n                if (args.length > 0 && (args[0] instanceof Closure)) {\n\n                    Closure callable = (Closure) args[0];\n                    callable.setDelegate(builder);\n                    for (ConstrainedProperty constrainedProperty : previousConstraints) {\n                        builder.getConstrainedProperties().put(constrainedProperty.getPropertyName(), constrainedProperty);\n                    }\n                    callable.call();\n                }\n                return builder.getConstrainedProperties();\n            }\n            else {\n                return super.invokeMethod(mappedURI, arg);\n            }\n        }","id":13606,"modified_method":"private Object _invoke(String methodName, Object arg, Object delegate) {\n            Object[] args = (Object[]) arg;\n            String mappedURI = establishFullURI(methodName);\n            final boolean isResponseCode = isResponseCode(mappedURI);\n            if (mappedURI.startsWith(SLASH) || isResponseCode) {\n                // Create a new parameter map for this mapping.\n                parameterValues = new HashMap<String, Object>();\n                Map variables = binding != null ? binding.getVariables() : null;\n                try {\n                    urlDefiningMode = false;\n                    args = args != null && args.length > 0 ? args : new Object[]{Collections.EMPTY_MAP};\n                    if (args[0] instanceof Closure) {\n                        UrlMappingData urlData = createUrlMappingData(mappedURI, isResponseCode);\n\n                        Closure callable = (Closure) args[0];\n                        if (delegate != null) callable.setDelegate(delegate);\n                        callable.call();\n\n                        Object controllerName;\n                        Object actionName;\n                        Object pluginName;\n                        String httpMethod = null;\n                        Object viewName;\n                        Object uri;\n\n                        if (binding != null) {\n                            controllerName = variables.get(GrailsControllerClass.CONTROLLER);\n                            actionName = variables.get(GrailsControllerClass.ACTION);\n                            viewName = variables.get(GrailsControllerClass.VIEW);\n                            uri = variables.get(URI);\n                            pluginName = variables.get(PLUGIN);\n                            if(variables.containsKey(HTTP_METHOD)) {\n                                httpMethod = variables.get(HTTP_METHOD).toString();\n                            }\n\n                        }\n                        else {\n                            controllerName = this.controllerName;\n                            actionName = this.actionName;\n                            pluginName = this.pluginName;\n                            viewName = this.viewName;\n                            uri = this.uri;\n                            httpMethod = this.httpMethod;\n                        }\n\n                        ConstrainedProperty[] constraints = previousConstraints.toArray(new ConstrainedProperty[previousConstraints.size()]);\n                        UrlMapping urlMapping;\n                        if (uri != null) {\n                            try {\n                                urlMapping = new RegexUrlMapping(urlData, new URI(uri.toString()), constraints, sc);\n                            }\n                            catch (URISyntaxException e) {\n                                throw new UrlMappingException(\"Cannot map to invalid URI: \" + e.getMessage(), e);\n                            }\n                        }\n                        else {\n                            urlMapping = createURLMapping(urlData, isResponseCode, controllerName, actionName, pluginName, viewName, httpMethod, constraints);\n                        }\n\n                        if (binding != null) {\n                            Map bindingVariables = variables;\n                            Object parse = getParseRequest(Collections.EMPTY_MAP, bindingVariables);\n                            if (parse instanceof Boolean) {\n                                urlMapping.setParseRequest((Boolean)parse);\n                            }\n                        }\n                        configureUrlMapping(urlMapping);\n                        return urlMapping;\n                    }\n\n                    if (args[0] instanceof Map) {\n                        Map namedArguments = (Map) args[0];\n                        String uri = mappedURI;\n\n                        UrlMappingData urlData = createUrlMappingData(uri, isResponseCode);\n\n                        if(namedArguments.containsKey(RESOURCE)) {\n                            Object controller = namedArguments.get(RESOURCE);\n                            String controllerName = controller.toString();\n                            parentResources.push( new ParentResource(controllerName,uri, true) );\n                            try {\n                                invokeLastArgumentIfClosure(args);\n                            } finally {\n                                parentResources.pop();\n                            }\n                            if(controller != null) {\n\n                                createSingleResourceRestfulMappings(controllerName,pluginName, urlData, previousConstraints, calculateIncludes(namedArguments, DEFAULT_RESOURCE_INCLUDES));\n                            }\n                        }\n                        else if(namedArguments.containsKey(RESOURCES)) {\n                            Object controller = namedArguments.get(RESOURCES);\n                            String controllerName = controller.toString();\n                            parentResources.push( new ParentResource(controllerName,uri,false) );\n                            try {\n                                invokeLastArgumentIfClosure(args);\n                            } finally {\n                                parentResources.pop();\n                            }\n                            if(controller != null) {\n                                createResourceRestfulMappings(controllerName, pluginName, urlData, previousConstraints,calculateIncludes(namedArguments, DEFAULT_RESOURCES_INCLUDES));\n                            }\n                        }\n                        else {\n\n                            invokeLastArgumentIfClosure(args);\n                            UrlMapping urlMapping = getURLMappingForNamedArgs(namedArguments, urlData, mappedURI, isResponseCode);\n                            configureUrlMapping(urlMapping);\n                            return urlMapping;\n                        }\n                    }\n                    return null;\n                }\n                finally {\n                    if (binding != null) {\n                        variables.clear();\n                    }\n                    else {\n                        controllerName = null;\n                        actionName = null;\n                        viewName = null;\n                        pluginName = null;\n                    }\n                    previousConstraints.clear();\n                    urlDefiningMode = true;\n                }\n            }\n            else if (!urlDefiningMode && CONSTRAINTS.equals(mappedURI)) {\n                ConstrainedPropertyBuilder builder = new ConstrainedPropertyBuilder(this);\n                if (args.length > 0 && (args[0] instanceof Closure)) {\n\n                    Closure callable = (Closure) args[0];\n                    callable.setDelegate(builder);\n                    for (ConstrainedProperty constrainedProperty : previousConstraints) {\n                        builder.getConstrainedProperties().put(constrainedProperty.getPropertyName(), constrainedProperty);\n                    }\n                    callable.call();\n                }\n                return builder.getConstrainedProperties();\n            }\n            else {\n                return super.invokeMethod(mappedURI, arg);\n            }\n        }","commit_id":"d0d9eaebd881ce4ccb7a2e3a40ffedcc74b80dcd","url":"https://github.com/grails/grails-core"},{"original_method":"protected UrlMapping createListActionResourcesRestfulMapping(String controllerName, Object pluginName, UrlMappingData urlData, ConstrainedProperty[] constraintArray) {\n            return new RegexUrlMapping(urlData, controllerName, \"list\", pluginName, null, HttpMethod.GET.toString(), constraintArray, servletContext);\n        }","id":13607,"modified_method":"protected UrlMapping createIndexActionResourcesRestfulMapping(String controllerName, Object pluginName, UrlMappingData urlData, ConstrainedProperty[] constraintArray) {\n            return new RegexUrlMapping(urlData, controllerName, ACTION_INDEX, pluginName, null, HttpMethod.GET.toString(), constraintArray, servletContext);\n        }","commit_id":"d0d9eaebd881ce4ccb7a2e3a40ffedcc74b80dcd","url":"https://github.com/grails/grails-core"},{"original_method":"@Override\r\n  public void check(List<CheckResultInterface> remarks, JobMeta jobMeta)\r\n  {\r\n    andValidator().validate(this, \"workDirectory\", remarks, putValidators(notBlankValidator(), fileExistsValidator())); //$NON-NLS-1$\r\n    andValidator().validate(this, \"filename\", remarks, putValidators(notBlankValidator())); //$NON-NLS-1$\r\n\r\n    if (setLogfile) {\r\n      andValidator().validate(this, \"logfile\", remarks, putValidators(notBlankValidator())); //$NON-NLS-1$\r\n    }\r\n  }","id":13608,"modified_method":"@Override\r\n\tpublic void check(List<CheckResultInterface> remarks, JobMeta jobMeta)\r\n\t{\r\n\t\tValidatorContext ctx = new ValidatorContext();\r\n\t\tputVariableSpace(ctx, getVariables());\r\n\t\tputValidators(ctx, notBlankValidator(), fileExistsValidator());\r\n\r\n\t\tandValidator().validate(this, \"workDirectory\", remarks, ctx); //$NON-NLS-1$\r\n\t\tandValidator().validate(this, \"filename\", remarks, putValidators(notBlankValidator())); //$NON-NLS-1$\r\n\r\n\t\tif (setLogfile)\r\n\t\t{\r\n\t\t\tandValidator().validate(this, \"logfile\", remarks, putValidators(notBlankValidator())); //$NON-NLS-1$\r\n\t\t}\r\n\t}","commit_id":"0f8cc12ba4b0d07cf414712673a44255e9a68a0b","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"@Override\n  public void check(List<CheckResultInterface> remarks, JobMeta jobMeta)\n  {\n    andValidator().validate(this, \"filename\", remarks, putValidators(notBlankValidator(), fileExistsValidator())); //$NON-NLS-1$\n    andValidator().validate(this, \"tablename\", remarks, putValidators(notBlankValidator())); //$NON-NLS-1$\n  }","id":13609,"modified_method":"@Override\n  public void check(List<CheckResultInterface> remarks, JobMeta jobMeta)\n  {\n    ValidatorContext ctx = new ValidatorContext();\n    putVariableSpace(ctx, getVariables());\n    putValidators(ctx, notBlankValidator(), fileExistsValidator());\n    andValidator().validate(this, \"filename\", remarks, ctx);//$NON-NLS-1$\n\n    andValidator().validate(this, \"tablename\", remarks, ctx); //$NON-NLS-1$\n  }","commit_id":"20fa79c2168fa0a13023fd577dfea12ee9a2b825","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"@Override\n  public void check(List<CheckResultInterface> remarks, JobMeta jobMeta)\n  {\n    andValidator().validate(this, \"serverName\", remarks, putValidators(notBlankValidator())); //$NON-NLS-1$\n    andValidator()\n        .validate(this, \"targetDirectory\", remarks, putValidators(notBlankValidator(), fileExistsValidator())); //$NON-NLS-1$\n    andValidator().validate(this, \"userName\", remarks, putValidators(notBlankValidator())); //$NON-NLS-1$\n    andValidator().validate(this, \"password\", remarks, putValidators(notNullValidator())); //$NON-NLS-1$\n    andValidator().validate(this, \"serverPort\", remarks, putValidators(integerValidator())); //$NON-NLS-1$\n  }","id":13610,"modified_method":"@Override\n  public void check(List<CheckResultInterface> remarks, JobMeta jobMeta)\n  {\n    andValidator().validate(this, \"serverName\", remarks, putValidators(notBlankValidator())); //$NON-NLS-1$\n\n    ValidatorContext ctx = new ValidatorContext();\n    putVariableSpace(ctx, getVariables());\n    putValidators(ctx, notBlankValidator(), fileExistsValidator());\n    andValidator().validate(this, \"targetDirectory\", remarks, ctx);//$NON-NLS-1$\n\n    andValidator().validate(this, \"userName\", remarks, putValidators(notBlankValidator())); //$NON-NLS-1$\n    andValidator().validate(this, \"password\", remarks, putValidators(notNullValidator())); //$NON-NLS-1$\n    andValidator().validate(this, \"serverPort\", remarks, putValidators(integerValidator())); //$NON-NLS-1$\n  }","commit_id":"20fa79c2168fa0a13023fd577dfea12ee9a2b825","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"/**\r\n   * Default constructor.\r\n   * @param main reference to the main window\r\n   */\r\n  public DialogFontChooser(final GUI main) {\r\n    super(main, FONTTITLE, false);\r\n\r\n    final String[] fonts = GraphicsEnvironment.getLocalGraphicsEnvironment().\r\n      getAvailableFontFamilyNames();\r\n\r\n    final BaseXBack p = new BaseXBack(new TableLayout(1, 4, 8, 6));\r\n    font = new BaseXListChooser(fonts, this);\r\n    font.setSize(150, 112);\r\n    p.add(font);\r\n    font2 = new BaseXListChooser(fonts, this);\r\n    font2.setSize(150, 112);\r\n    p.add(font2);\r\n    type = new BaseXListChooser(FONTTYPES, this);\r\n    type.setSize(80, 112);\r\n    p.add(type);\r\n    size = new BaseXListChooser(FTSZ, this);\r\n    size.setSize(50, 112);\r\n    p.add(size);\r\n\r\n    final GUIProp gprop = gui.gprop;\r\n    font.setValue(gprop.get(GUIProp.FONT));\r\n    font2.setValue(gprop.get(GUIProp.MONOFONT));\r\n    type.setValue(FONTTYPES[gprop.num(GUIProp.FONTTYPE)]);\r\n    size.setValue(Integer.toString(gui.gprop.num(GUIProp.FONTSIZE)));\r\n\r\n    set(p, BorderLayout.CENTER);\r\n    finish(gprop.nums(GUIProp.FONTSLOC));\r\n  }","id":13611,"modified_method":"/**\r\n   * Default constructor.\r\n   * @param main reference to the main window\r\n   */\r\n  public DialogFontChooser(final GUI main) {\r\n    super(main, FONTTITLE, false);\r\n\r\n    final String[] fonts = GraphicsEnvironment.getLocalGraphicsEnvironment().\r\n      getAvailableFontFamilyNames();\r\n\r\n    final BaseXBack p = new BaseXBack(new TableLayout(1, 4, 8, 6));\r\n    font = new BaseXList(fonts, this);\r\n    font.setSize(150, 112);\r\n    p.add(font);\r\n    font2 = new BaseXList(fonts, this);\r\n    font2.setSize(150, 112);\r\n    p.add(font2);\r\n    type = new BaseXList(FONTTYPES, this);\r\n    type.setSize(80, 112);\r\n    p.add(type);\r\n    size = new BaseXList(FTSZ, this);\r\n    size.setSize(50, 112);\r\n    p.add(size);\r\n\r\n    final GUIProp gprop = gui.gprop;\r\n    font.setValue(gprop.get(GUIProp.FONT));\r\n    font2.setValue(gprop.get(GUIProp.MONOFONT));\r\n    type.setValue(FONTTYPES[gprop.num(GUIProp.FONTTYPE)]);\r\n    size.setValue(Integer.toString(gui.gprop.num(GUIProp.FONTSIZE)));\r\n\r\n    set(p, BorderLayout.CENTER);\r\n    finish(gprop.nums(GUIProp.FONTSLOC));\r\n  }","commit_id":"84134bc3826b7091bc285fa9206f6663ce380ee6","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Default constructor.\r\n   * @param main reference to the main window\r\n   */\r\n  public DialogMapLayout(final GUI main) {\r\n    super(main, MAPLAYOUTTITLE, false);\r\n\r\n    final BaseXBack p = new BaseXBack(new TableLayout(4, 1, 0, 8));\r\n\r\n    // create list\r\n    algo = new BaseXListChooser(MAPALG, this);\r\n    p.add(algo);\r\n\r\n    // create drop down\r\n    final GUIProp gprop = gui.gprop;\r\n    border = new BaseXCombo(this, MAPOFFSET);\r\n    border.setSelectedIndex(gprop.num(GUIProp.MAPOFFSETS));\r\n\r\n    BaseXBack tmp = new BaseXBack(new TableLayout(1, 3));\r\n    tmp.add(new BaseXLabel(MAPOFF));\r\n    tmp.add(Box.createHorizontalStrut(25));\r\n    tmp.add(border);\r\n    p.add(tmp);\r\n\r\n    algo.setSize(200, 100);\r\n\r\n    // create slider\r\n    sizeLabel = new BaseXLabel(MAPSIZE);\r\n    sizeSlider = new BaseXSlider(0, 100, gprop.num(GUIProp.MAPWEIGHT), this);\r\n    BaseXLayout.setWidth(sizeSlider, p.getPreferredSize().width);\r\n\r\n    tmp = new BaseXBack(new TableLayout(2, 1));\r\n    tmp.add(sizeLabel);\r\n    tmp.add(sizeSlider);\r\n    p.add(tmp);\r\n\r\n    // create checkbox\r\n    atts = new BaseXCheckBox(MAPATT, gprop.is(GUIProp.MAPATTS), this);\r\n    p.add(atts);\r\n\r\n    set(p, BorderLayout.CENTER);\r\n    finish(gprop.nums(GUIProp.MAPLAYOUTLOC));\r\n\r\n    algo.setIndex(gprop.num(GUIProp.MAPALGO));\r\n  }","id":13612,"modified_method":"/**\r\n   * Default constructor.\r\n   * @param main reference to the main window\r\n   */\r\n  public DialogMapLayout(final GUI main) {\r\n    super(main, MAPLAYOUTTITLE, false);\r\n\r\n    final BaseXBack p = new BaseXBack(new TableLayout(4, 1, 0, 8));\r\n\r\n    // create list\r\n    algo = new BaseXList(MAPALG, this);\r\n    p.add(algo);\r\n\r\n    // create drop down\r\n    final GUIProp gprop = gui.gprop;\r\n    border = new BaseXCombo(this, MAPOFFSET);\r\n    border.setSelectedIndex(gprop.num(GUIProp.MAPOFFSETS));\r\n\r\n    BaseXBack tmp = new BaseXBack(new TableLayout(1, 3));\r\n    tmp.add(new BaseXLabel(MAPOFF));\r\n    tmp.add(Box.createHorizontalStrut(25));\r\n    tmp.add(border);\r\n    p.add(tmp);\r\n\r\n    algo.setSize(200, 100);\r\n\r\n    // create slider\r\n    sizeLabel = new BaseXLabel(MAPSIZE);\r\n    sizeSlider = new BaseXSlider(0, 100, gprop.num(GUIProp.MAPWEIGHT), this);\r\n    BaseXLayout.setWidth(sizeSlider, p.getPreferredSize().width);\r\n\r\n    tmp = new BaseXBack(new TableLayout(2, 1));\r\n    tmp.add(sizeLabel);\r\n    tmp.add(sizeSlider);\r\n    p.add(tmp);\r\n\r\n    // create checkbox\r\n    atts = new BaseXCheckBox(MAPATT, gprop.is(GUIProp.MAPATTS), this);\r\n    p.add(atts);\r\n\r\n    set(p, BorderLayout.CENTER);\r\n    finish(gprop.nums(GUIProp.MAPLAYOUTLOC));\r\n\r\n    algo.setIndex(gprop.num(GUIProp.MAPALGO));\r\n  }","commit_id":"84134bc3826b7091bc285fa9206f6663ce380ee6","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Default constructor.\r\n   * @param main reference to the main window\r\n   * @param m show manage dialog\r\n   */\r\n  public DialogOpen(final GUI main, final boolean m) {\r\n    super(main, m ? MANAGETITLE : OPENTITLE);\r\n    manage = m;\r\n    // create database chooser\r\n    final StringList db = List.list(main.context);\r\n\r\n    choice = new BaseXListChooser(db.toArray(), this);\r\n    set(choice, BorderLayout.CENTER);\r\n    choice.setSize(130, 440);\r\n\r\n    final BaseXBack info = new BaseXBack(new BorderLayout());\r\n    info.setBorder(new CompoundBorder(new EtchedBorder(),\r\n        new EmptyBorder(10, 10, 10, 10)));\r\n\r\n    final Font f = choice.getFont();\r\n    doc = new BaseXLabel(DIALOGINFO).border(0, 0, 5, 0);\r\n    doc.setFont(f.deriveFont(f.getSize2D() + 7f));\r\n    info.add(doc, BorderLayout.NORTH);\r\n\r\n    detail = new BaseXEditor(false, this);\r\n    detail.border(5, 5, 5, 5).setFont(f);\r\n\r\n    BaseXLayout.setWidth(detail, 400);\r\n    info.add(detail, BorderLayout.CENTER);\r\n\r\n    final BaseXBack pp = new BaseXBack(new BorderLayout()).border(0, 12, 0, 0);\r\n    pp.add(info, BorderLayout.CENTER);\r\n\r\n    // create buttons\r\n    final BaseXBack p = new BaseXBack(new BorderLayout());\r\n\r\n    backup = new BaseXButton(BUTTONBACKUP, this);\r\n    restore = new BaseXButton(BUTTONRESTORE, this);\r\n    copy = new BaseXButton(BUTTONCOPY, this);\r\n    rename = new BaseXButton(BUTTONRENAME, this);\r\n    open = new BaseXButton(BUTTONOPEN, this);\r\n    drop = new BaseXButton(BUTTONDROP, this);\r\n    buttons = manage ?\r\n        newButtons(this, backup, restore, copy, rename, drop, BUTTONOK) :\r\n        newButtons(this, open, BUTTONCANCEL);\r\n    p.add(buttons, BorderLayout.EAST);\r\n    pp.add(p, BorderLayout.SOUTH);\r\n\r\n    set(pp, BorderLayout.EAST);\r\n    action(null);\r\n    if(db.size() == 0) return;\r\n\r\n    finish(null);\r\n  }","id":13613,"modified_method":"/**\r\n   * Default constructor.\r\n   * @param main reference to the main window\r\n   * @param m show manage dialog\r\n   */\r\n  public DialogOpen(final GUI main, final boolean m) {\r\n    super(main, m ? MANAGETITLE : OPENTITLE);\r\n    manage = m;\r\n    // create database chooser\r\n    final StringList db = List.list(main.context);\r\n\r\n    choice = new BaseXList(db.toArray(), this, !m);\r\n    set(choice, BorderLayout.CENTER);\r\n    choice.setSize(160, 440);\r\n\r\n    final BaseXBack info = new BaseXBack(new BorderLayout());\r\n    info.setBorder(new CompoundBorder(new EtchedBorder(),\r\n        new EmptyBorder(10, 10, 10, 10)));\r\n\r\n    final Font f = choice.getFont();\r\n    doc = new BaseXLabel(DIALOGINFO).border(0, 0, 5, 0);\r\n    doc.setFont(f.deriveFont(f.getSize2D() + 7f));\r\n    info.add(doc, BorderLayout.NORTH);\r\n\r\n    detail = new BaseXEditor(false, this);\r\n    detail.border(5, 5, 5, 5).setFont(f);\r\n\r\n    BaseXLayout.setWidth(detail, 400);\r\n    info.add(detail, BorderLayout.CENTER);\r\n\r\n    final BaseXBack pp = new BaseXBack(new BorderLayout()).border(0, 12, 0, 0);\r\n    pp.add(info, BorderLayout.CENTER);\r\n\r\n    // create buttons\r\n    final BaseXBack p = new BaseXBack(new BorderLayout());\r\n\r\n    backup = new BaseXButton(BUTTONBACKUP, this);\r\n    restore = new BaseXButton(BUTTONRESTORE, this);\r\n    copy = new BaseXButton(BUTTONCOPY, this);\r\n    rename = new BaseXButton(BUTTONRENAME, this);\r\n    open = new BaseXButton(BUTTONOPEN, this);\r\n    drop = new BaseXButton(BUTTONDROP, this);\r\n    buttons = manage ?\r\n        newButtons(this, drop, rename, copy, backup, restore, BUTTONOK) :\r\n        newButtons(this, open, BUTTONCANCEL);\r\n    p.add(buttons, BorderLayout.EAST);\r\n    pp.add(p, BorderLayout.SOUTH);\r\n\r\n    set(pp, BorderLayout.EAST);\r\n    action(null);\r\n    if(db.size() == 0) return;\r\n\r\n    finish(null);\r\n  }","commit_id":"84134bc3826b7091bc285fa9206f6663ce380ee6","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Tests if no databases have been found.\r\n   * @return result of check\r\n   */\r\n  public boolean nodb() {\r\n    return choice.getIndex() == -1;\r\n  }","id":13614,"modified_method":"/**\r\n   * Tests if no databases have been found.\r\n   * @return result of check\r\n   */\r\n  public boolean nodb() {\r\n    return choice.getList().length == 0;\r\n  }","commit_id":"84134bc3826b7091bc285fa9206f6663ce380ee6","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Returns the database name.\r\n   * @return database name\r\n   */\r\n  public String db() {\r\n    return ok ? choice.getValue() : null;\r\n  }","id":13615,"modified_method":"/**\r\n   * Returns the name of the selected database.\r\n   * @return database name\r\n   */\r\n  public String db() {\r\n    return choice.getValue();\r\n  }","commit_id":"84134bc3826b7091bc285fa9206f6663ce380ee6","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\r\n  public void action(final Object cmp) {\r\n    final Context ctx = gui.context;\r\n    final String db = choice.getValue().trim();\r\n    ok = true;\r\n    if(refresh) {\r\n      // rebuild databases and focus list chooser\r\n      choice.setData(List.list(ctx).toArray());\r\n      choice.requestFocusInWindow();\r\n      refresh = false;\r\n    }\r\n\r\n    if(cmp == open) {\r\n      close();\r\n    } else if(cmp == rename) {\r\n      final DialogInput dr = new DialogInput(db, RENAMETITLE, gui, 1);\r\n      if(!dr.ok() || dr.input().equals(db)) return;\r\n      refresh = true;\r\n      DialogProgress.execute(this, \"\", new AlterDB(db, dr.input()));\r\n    } else if(cmp == copy) {\r\n      final DialogInput dc = new DialogInput(db, COPYTITLE, gui, 2);\r\n      if(!dc.ok() || dc.input().equals(db)) return;\r\n      refresh = true;\r\n      DialogProgress.execute(this, \"\", new Copy(db, dc.input()));\r\n    } else if(cmp == drop) {\r\n      if(db.isEmpty() || !Dialog.confirm(gui, Util.info(DROPCONF, db))) return;\r\n      refresh = true;\r\n      DialogProgress.execute(this, \"\", new DropDB(db));\r\n    } else if(cmp == backup) {\r\n      DialogProgress.execute(this, \"\", new CreateBackup(db));\r\n    } else if(cmp == restore) {\r\n      DialogProgress.execute(this, \"\", new Restore(db));\r\n    } else {\r\n      // update components\r\n      ok = ctx.mprop.dbexists(db);\r\n      enableOK(buttons, BUTTONDROP, ok);\r\n      if(ok) {\r\n        doc.setText(db);\r\n        DataInput in = null;\r\n        final MetaData meta = new MetaData(db, ctx);\r\n        try {\r\n          in = new DataInput(meta.dbfile(DATAINFO));\r\n          meta.read(in);\r\n          detail.setText(InfoDB.db(meta, true, true, true));\r\n        } catch(final IOException ex) {\r\n          detail.setText(Token.token(ex.getMessage()));\r\n          ok = manage;\r\n        } finally {\r\n          if(in != null) try { in.close(); } catch(final IOException ex) { }\r\n        }\r\n      }\r\n      enableOK(buttons, BUTTONOPEN, ok);\r\n      enableOK(buttons, BUTTONRENAME, ok);\r\n      enableOK(buttons, BUTTONBACKUP, ok);\r\n      enableOK(buttons, BUTTONCOPY, ok);\r\n      enableOK(buttons, BUTTONRESTORE, ok && Restore.list(db, ctx).size() != 0);\r\n    }\r\n  }","id":13616,"modified_method":"@Override\r\n  public void action(final Object cmp) {\r\n    final Context ctx = gui.context;\r\n    if(refresh) {\r\n      // rebuild databases and focus list chooser\r\n      choice.setData(List.list(ctx).toArray());\r\n      choice.requestFocusInWindow();\r\n      refresh = false;\r\n    }\r\n\r\n    final StringList dbs = choice.getValues();\r\n    final String db = choice.getValue().trim();\r\n    final ObjList<Command> cmds = new ObjList<Command>();\r\n    ok = dbs.size() > 0;\r\n\r\n    if(cmp == open) {\r\n      close();\r\n    } else if(cmp == drop) {\r\n      if(!Dialog.confirm(gui, Util.info(DROPCONF, dbs.size()))) return;\r\n      refresh = true;\r\n      for(final String s : dbs) cmds.add(new DropDB(s));\r\n    } else if(cmp == rename) {\r\n      final DialogInput dr = new DialogInput(db, RENAMETITLE, gui, 1);\r\n      if(!dr.ok() || dr.input().equals(db)) return;\r\n      refresh = true;\r\n      cmds.add(new AlterDB(db, dr.input()));\r\n    } else if(cmp == copy) {\r\n      final DialogInput dc = new DialogInput(db, COPYTITLE, gui, 2);\r\n      if(!dc.ok() || dc.input().equals(db)) return;\r\n      refresh = true;\r\n      cmds.add(new Copy(db, dc.input()));\r\n    } else if(cmp == backup) {\r\n      for(final String s : dbs) cmds.add(new CreateBackup(s));\r\n    } else if(cmp == restore) {\r\n      for(final String s : dbs) cmds.add(new Restore(s));\r\n    } else {\r\n      // update components\r\n      enableOK(buttons, BUTTONOPEN, ok);\r\n      enableOK(buttons, BUTTONBACKUP, ok);\r\n      enableOK(buttons, BUTTONDROP, ok);\r\n      ok = ctx.mprop.dbexists(db);\r\n      if(ok) {\r\n        // refresh info view\r\n        DataInput in = null;\r\n        final MetaData meta = new MetaData(db, ctx);\r\n        try {\r\n          in = new DataInput(meta.dbfile(DATAINFO));\r\n          meta.read(in);\r\n          detail.setText(InfoDB.db(meta, true, true, true));\r\n        } catch(final IOException ex) {\r\n          detail.setText(Token.token(ex.getMessage()));\r\n          ok = manage;\r\n        } finally {\r\n          if(in != null) try { in.close(); } catch(final IOException ex) { }\r\n        }\r\n      }\r\n      enableOK(buttons, BUTTONRENAME, ok);\r\n      enableOK(buttons, BUTTONCOPY, ok);\r\n      ok = true;\r\n      for(final String s : dbs) ok &= Restore.list(s, ctx).size() != 0;\r\n      enableOK(buttons, BUTTONRESTORE, ok);\r\n    }\r\n\r\n    // run all commands\r\n    if(cmds.size() != 0) {\r\n      DialogProgress.execute(this, \"\", cmds.toArray(new Command[cmds.size()]));\r\n    }\r\n  }","commit_id":"84134bc3826b7091bc285fa9206f6663ce380ee6","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\n   * Converts a file filter (glob) to a regular expression. A filter may\n   * contain asterisks (*) and question marks (?); commas (,) are used to\n   * separate multiple filters.\n   * @param glob filter\n   * @return regular expression\n   */\n  public static String regex(final String glob) {\n    final StringBuilder sb = new StringBuilder();\n    for(final String g : glob.split(\",\")) {\n      boolean suf = false;\n      final String gl = g.trim();\n      if(sb.length() != 0) {\n        if(!suf) sb.append(\".*\");\n        suf = false;\n        sb.append('|');\n      }\n      // loop through single pattern\n      for(int f = 0; f < gl.length(); f++) {\n        char ch = gl.charAt(f);\n        if(ch == '*') {\n          // don't allow other dots if pattern ends with a dot\n          suf = true;\n          sb.append(gl.endsWith(\".\") ? \"[^.]\" : \".\");\n        } else if(ch == '?') {\n          ch = '.';\n          suf = true;\n        } else if(ch == '.') {\n          suf = true;\n          // last character is dot: disallow file suffix\n          if(f + 1 == gl.length()) break;\n          sb.append('\\\\');\n        } else if(!Character.isLetterOrDigit(ch)) {\n          sb.append('\\\\');\n        }\n        sb.append(ch);\n      }\n      if(!suf) sb.append(\".*\");\n    }\n    return Prop.WIN ? sb.toString().toLowerCase() : sb.toString();\n  }","id":13617,"modified_method":"/**\n   * Converts a file filter (glob) to a regular expression.\n   * @param glob filter\n   * @return regular expression\n   */\n  public static String regex(final String glob) {\n    return regex(glob, true);\n  }","commit_id":"84134bc3826b7091bc285fa9206f6663ce380ee6","url":"https://github.com/BaseXdb/basex"},{"original_method":"public void testCaseWhen() throws Exception {\n        System.out.println(\"STARTING test Case When...\");\n        Client cl = getClient();\n        VoltTable vt;\n        String sql;\n\n        //                           ID, DESC,   NUM, FLOAT, TIMESTAMP\n        cl.callProcedure(\"R1.insert\", 1, \"VoltDB\", 1, 1.0, new Timestamp(1000000000000L));\n        cl.callProcedure(\"R1.insert\", 2, \"Memsql\",  5, 5.0, new Timestamp(1000000000000L));\n\n        sql = \"SELECT ID, CASE WHEN num < 3 THEN 0 ELSE 8 END FROM R1 ORDER BY 1;\";\n        validateTableOfLongs(cl, sql, new long[][] {{1, 0},{2, 8}});\n\n        sql = \"SELECT ID, CASE WHEN num < 3 THEN num/2 ELSE num + 10 END FROM R1 ORDER BY 1;\";\n        validateTableOfLongs(cl, sql, new long[][] {{1, 0},{2, 15}});\n\n        sql = \"SELECT ID, CASE WHEN num > 0 AND num < 5 THEN num * 5 \" +\n                \"WHEN num >=5 THEN num * 10  ELSE num END FROM R1 ORDER BY 1;\";\n        validateTableOfLongs(cl, sql, new long[][] {{1, 5},{2, 50}});\n\n\n        // (2) Test case when Types.\n        sql = \"SELECT ID, CASE WHEN num > 0 AND num < 5 THEN NULL \" +\n                \"WHEN num >=5 THEN num * 10  ELSE num END FROM R1 ORDER BY 1;\";\n        vt = cl.callProcedure(\"@AdHoc\", sql).getResults()[0];\n        assertEquals(VoltType.BIGINT, vt.getColumnType(1));\n        if (isHSQL()) {\n            validateTableOfLongs(vt, new long[][] {{1, 0},{2, 50}});\n        } else {\n            validateTableOfLongs(vt, new long[][] {{1, Long.MIN_VALUE},{2, 50}});\n        }\n\n        sql = \"SELECT ID, CASE WHEN num > 0 AND num < 5 THEN NULL \" +\n                \"WHEN num >=5 THEN NULL  ELSE num END FROM R1 ORDER BY 1;\";\n        vt = cl.callProcedure(\"@AdHoc\", sql).getResults()[0];\n        assertEquals(VoltType.INTEGER, vt.getColumnType(1));\n        if (isHSQL()) {\n            validateTableOfLongs(vt, new long[][] {{1, 0},{2, 0}});\n        } else {\n            validateTableOfLongs(vt, new long[][] {{1, Long.MIN_VALUE},{2, Long.MIN_VALUE}});\n        }\n\n        // Expected failed type cases:\n        try {\n            sql = \"SELECT ID, CASE WHEN num > 0 AND num < 5 THEN NULL \" +\n                    \"WHEN num >=5 THEN NULL ELSE NULL END FROM R1 ORDER BY 1;\";\n            vt = cl.callProcedure(\"@AdHoc\", sql).getResults()[0];\n            fail();\n        } catch (Exception ex) {\n            assertNotNull(ex);\n            assertTrue(ex.getMessage().contains(\"data type cast needed for parameter or null literal\"));\n        }\n\n        try {\n            // Use String as the casted type\n            sql = \"SELECT ID, CASE WHEN num > 0 AND num < 5 THEN NULL \" +\n                    \"WHEN num >=5 THEN NULL ELSE 'NULL' END FROM R1 ORDER BY 1;\";\n            vt = cl.callProcedure(\"@AdHoc\", sql).getResults()[0];\n        } catch (Exception ex) {\n            fail();\n        }\n\n        try {\n            sql = \"SELECT ID, CASE WHEN num > 0 AND num < 5 THEN NULL \" +\n                    \"WHEN num >=5 THEN 'I am null'  ELSE num END FROM R1 ORDER BY 1;\";\n            vt = cl.callProcedure(\"@AdHoc\", sql).getResults()[0];\n            fail();\n        } catch (Exception ex) {\n            assertNotNull(ex);\n            assertTrue(ex.getMessage().contains(\"incompatible data types in combination\"));\n        }\n\n        // Test string types\n        sql = \"SELECT ID, CASE WHEN desc > 'Volt' THEN 'Good' ELSE 'Bad' END FROM R1 ORDER BY 1;\";\n        vt = cl.callProcedure(\"@AdHoc\", sql).getResults()[0];\n        assertEquals(2, vt.getRowCount());\n        vt.advanceRow();\n        assertEquals(vt.getLong(0), 1);\n        assertTrue(vt.getString(1).equals(\"Good\"));\n        vt.advanceRow();\n        assertEquals(vt.getLong(0), 2);\n        if (isHSQL()) {\n            assertTrue(vt.getString(1).contains(\"Bad\"));\n        } else {\n            assertTrue(vt.getString(1).equals(\"Bad\"));\n        }\n\n\n        // Test string concatenation\n        sql = \"SELECT ID, desc || ':' ||  CASE WHEN desc > 'Volt' THEN 'Good' ELSE 'Bad' END FROM R1 ORDER BY 1;\";\n        vt = cl.callProcedure(\"@AdHoc\", sql).getResults()[0];\n        assertEquals(2, vt.getRowCount());\n        vt.advanceRow();\n        assertEquals(vt.getLong(0), 1);\n        assertTrue(vt.getString(1).equals(\"VoltDB:Good\"));\n        vt.advanceRow();\n        assertEquals(vt.getLong(0), 2);\n        if (isHSQL()) {\n            assertTrue(vt.getString(1).contains(\"Memsql:Bad\"));\n        } else {\n            assertTrue(vt.getString(1).equals(\"Memsql:Bad\"));\n        }\n\n        // Test inlined varchar/varbinary value produced by CASE WHEN.\n        // This is regression coverage for ENG-6666.\n        sql = \"INSERT INTO INLINED_VC_VB_TABLE (ID, VC1, VC2, VB1, VB2) \" +\n            \"VALUES (72, 'FOO', 'BAR', 'DEADBEEF', 'CDCDCDCD');\";\n        cl.callProcedure(\"@AdHoc\", sql);\n        sql = \"SELECT CASE WHEN ID > 11 THEN VC1 ELSE VC2 END FROM INLINED_VC_VB_TABLE WHERE ID = 72;\";\n        vt = cl.callProcedure(\"@AdHoc\", sql).getResults()[0];\n        vt.advanceRow();\n        assertEquals(\"FOO\", vt.getString(0));\n\n        sql = \"SELECT CASE WHEN ID > 11 THEN VB1 ELSE VB2 END FROM INLINED_VC_VB_TABLE WHERE ID = 72;\";\n        vt = cl.callProcedure(\"@AdHoc\", sql).getResults()[0];\n        vt.advanceRow();\n        assertTrue(VoltType.varbinaryToPrintableString(vt.getVarbinary(0)).contains(\"DEADBEEF\"));\n\n        cl.callProcedure(\"R1.insert\", 3, \"ORACLE\",  8, 8.0, new Timestamp(1000000000000L));\n        // Test nested case when\n        sql = \"SELECT ID, CASE WHEN num < 5 THEN num * 5 \" +\n                \"WHEN num < 10 THEN CASE WHEN num > 7 THEN num * 10 ELSE num * 8 END \" +\n                \"END FROM R1 ORDER BY 1;\";\n        validateTableOfLongs(cl, sql, new long[][] {{1, 5},{2, 40}, {3, 80}});\n\n\n        // Test case when without ELSE clause\n        sql = \"SELECT ID, CASE WHEN num > 3 AND num < 5 THEN 4 \" +\n                \"WHEN num >=5 THEN num END FROM R1 ORDER BY 1;\";\n        vt = cl.callProcedure(\"@AdHoc\", sql).getResults()[0];\n        assertEquals(VoltType.INTEGER, vt.getColumnType(1));\n        if (isHSQL()) {\n            validateTableOfLongs(vt, new long[][] {{1, 0},{2,5}, {3, 8}});\n        } else {\n            validateTableOfLongs(vt, new long[][] {{1, Long.MIN_VALUE},{2,5}, {3, 8}});\n        }\n\n        sql = \"SELECT ID, CASE WHEN num > 3 AND num < 5 THEN 4 \" +\n                \"WHEN num >=5 THEN num*10 END FROM R1 ORDER BY 1;\";\n        vt = cl.callProcedure(\"@AdHoc\", sql).getResults()[0];\n        assertEquals(VoltType.BIGINT, vt.getColumnType(1));\n        if (isHSQL()) {\n            validateTableOfLongs(vt, new long[][] {{1, 0},{2,50}, {3, 80}});\n        } else {\n            validateTableOfLongs(vt, new long[][] {{1, Long.MIN_VALUE},{2,50}, {3, 80}});\n        }\n\n        // Test NULL\n        cl.callProcedure(\"R1.insert\", 4, \"DB2\",  null, null, new Timestamp(1000000000000L));\n        sql = \"SELECT ID, CASE WHEN num < 3 THEN num/2 ELSE num + 10 END FROM R1 ORDER BY 1;\";\n        vt = cl.callProcedure(\"@AdHoc\", sql).getResults()[0];\n        assertEquals(VoltType.INTEGER, vt.getColumnType(1));\n        if (isHSQL()) {\n            validateTableOfLongs(vt, new long[][] {{1, 0},{2, 15}, {3, 18}, {4, 0}});\n        } else {\n            validateTableOfLongs(vt, new long[][] {{1, 0},{2, 15}, {3, 18}, {4, Long.MIN_VALUE}});\n        }\n\n    }","id":13618,"modified_method":"public void testCaseWhen() throws Exception {\n        System.out.println(\"STARTING test Case When...\");\n        Client cl = getClient();\n        VoltTable vt;\n        String sql;\n\n        //                           ID, DESC,   NUM, FLOAT, TIMESTAMP\n        cl.callProcedure(\"R1.insert\", 1, \"VoltDB\", 1, 1.0, new Timestamp(1000000000000L));\n        cl.callProcedure(\"R1.insert\", 2, \"Memsql\",  5, 5.0, new Timestamp(1000000000000L));\n\n        sql = \"SELECT ID, CASE WHEN num < 3 THEN 0 ELSE 8 END FROM R1 ORDER BY 1;\";\n        validateTableOfLongs(cl, sql, new long[][] {{1, 0},{2, 8}});\n\n        sql = \"SELECT ID, CASE WHEN num < 3 THEN num/2 ELSE num + 10 END FROM R1 ORDER BY 1;\";\n        validateTableOfLongs(cl, sql, new long[][] {{1, 0},{2, 15}});\n\n        sql = \"SELECT ID, CASE WHEN num > 0 AND num < 5 THEN num * 5 \" +\n                \"WHEN num >=5 THEN num * 10  ELSE num END FROM R1 ORDER BY 1;\";\n        validateTableOfLongs(cl, sql, new long[][] {{1, 5},{2, 50}});\n\n\n        // (2) Test case when Types.\n        sql = \"SELECT ID, CASE WHEN num > 0 AND num < 5 THEN NULL \" +\n                \"WHEN num >=5 THEN num * 10  ELSE num END FROM R1 ORDER BY 1;\";\n        vt = cl.callProcedure(\"@AdHoc\", sql).getResults()[0];\n        assertEquals(VoltType.BIGINT, vt.getColumnType(1));\n        validateTableOfLongs(vt, new long[][] {{1, Long.MIN_VALUE},{2, 50}});\n\n        sql = \"SELECT ID, CASE WHEN num > 0 AND num < 5 THEN NULL \" +\n                \"WHEN num >=5 THEN NULL  ELSE num END FROM R1 ORDER BY 1;\";\n        vt = cl.callProcedure(\"@AdHoc\", sql).getResults()[0];\n        assertEquals(VoltType.INTEGER, vt.getColumnType(1));\n        validateTableOfLongs(vt, new long[][] {{1, Long.MIN_VALUE},{2, Long.MIN_VALUE}});\n\n        // Expected failed type cases:\n        try {\n            sql = \"SELECT ID, CASE WHEN num > 0 AND num < 5 THEN NULL \" +\n                    \"WHEN num >=5 THEN NULL ELSE NULL END FROM R1 ORDER BY 1;\";\n            vt = cl.callProcedure(\"@AdHoc\", sql).getResults()[0];\n            fail();\n        } catch (Exception ex) {\n            assertNotNull(ex);\n            assertTrue(ex.getMessage().contains(\"data type cast needed for parameter or null literal\"));\n        }\n\n        try {\n            // Use String as the casted type\n            sql = \"SELECT ID, CASE WHEN num > 0 AND num < 5 THEN NULL \" +\n                    \"WHEN num >=5 THEN NULL ELSE 'NULL' END FROM R1 ORDER BY 1;\";\n            vt = cl.callProcedure(\"@AdHoc\", sql).getResults()[0];\n        } catch (Exception ex) {\n            fail();\n        }\n\n        try {\n            sql = \"SELECT ID, CASE WHEN num > 0 AND num < 5 THEN NULL \" +\n                    \"WHEN num >=5 THEN 'I am null'  ELSE num END FROM R1 ORDER BY 1;\";\n            vt = cl.callProcedure(\"@AdHoc\", sql).getResults()[0];\n            fail();\n        } catch (Exception ex) {\n            assertNotNull(ex);\n            assertTrue(ex.getMessage().contains(\"incompatible data types in combination\"));\n        }\n\n        // Test string types\n        sql = \"SELECT ID, CASE WHEN desc > 'Volt' THEN 'Good' ELSE 'Bad' END FROM R1 ORDER BY 1;\";\n        vt = cl.callProcedure(\"@AdHoc\", sql).getResults()[0];\n        assertEquals(2, vt.getRowCount());\n        vt.advanceRow();\n        assertEquals(vt.getLong(0), 1);\n        assertTrue(vt.getString(1).equals(\"Good\"));\n        vt.advanceRow();\n        assertEquals(vt.getLong(0), 2);\n        if (isHSQL()) {\n            assertTrue(vt.getString(1).contains(\"Bad\"));\n        } else {\n            assertTrue(vt.getString(1).equals(\"Bad\"));\n        }\n\n\n        // Test string concatenation\n        sql = \"SELECT ID, desc || ':' ||  CASE WHEN desc > 'Volt' THEN 'Good' ELSE 'Bad' END FROM R1 ORDER BY 1;\";\n        vt = cl.callProcedure(\"@AdHoc\", sql).getResults()[0];\n        assertEquals(2, vt.getRowCount());\n        vt.advanceRow();\n        assertEquals(vt.getLong(0), 1);\n        assertTrue(vt.getString(1).equals(\"VoltDB:Good\"));\n        vt.advanceRow();\n        assertEquals(vt.getLong(0), 2);\n        if (isHSQL()) {\n            assertTrue(vt.getString(1).contains(\"Memsql:Bad\"));\n        } else {\n            assertTrue(vt.getString(1).equals(\"Memsql:Bad\"));\n        }\n\n        // Test inlined varchar/varbinary value produced by CASE WHEN.\n        // This is regression coverage for ENG-6666.\n        sql = \"INSERT INTO INLINED_VC_VB_TABLE (ID, VC1, VC2, VB1, VB2) \" +\n            \"VALUES (72, 'FOO', 'BAR', 'DEADBEEF', 'CDCDCDCD');\";\n        cl.callProcedure(\"@AdHoc\", sql);\n        sql = \"SELECT CASE WHEN ID > 11 THEN VC1 ELSE VC2 END FROM INLINED_VC_VB_TABLE WHERE ID = 72;\";\n        vt = cl.callProcedure(\"@AdHoc\", sql).getResults()[0];\n        vt.advanceRow();\n        assertEquals(\"FOO\", vt.getString(0));\n\n        sql = \"SELECT CASE WHEN ID > 11 THEN VB1 ELSE VB2 END FROM INLINED_VC_VB_TABLE WHERE ID = 72;\";\n        vt = cl.callProcedure(\"@AdHoc\", sql).getResults()[0];\n        vt.advanceRow();\n        assertTrue(VoltType.varbinaryToPrintableString(vt.getVarbinary(0)).contains(\"DEADBEEF\"));\n\n        cl.callProcedure(\"R1.insert\", 3, \"ORACLE\",  8, 8.0, new Timestamp(1000000000000L));\n        // Test nested case when\n        sql = \"SELECT ID, CASE WHEN num < 5 THEN num * 5 \" +\n                \"WHEN num < 10 THEN CASE WHEN num > 7 THEN num * 10 ELSE num * 8 END \" +\n                \"END FROM R1 ORDER BY 1;\";\n        validateTableOfLongs(cl, sql, new long[][] {{1, 5},{2, 40}, {3, 80}});\n\n\n        // Test case when without ELSE clause\n        sql = \"SELECT ID, CASE WHEN num > 3 AND num < 5 THEN 4 \" +\n                \"WHEN num >=5 THEN num END FROM R1 ORDER BY 1;\";\n        vt = cl.callProcedure(\"@AdHoc\", sql).getResults()[0];\n        assertEquals(VoltType.INTEGER, vt.getColumnType(1));\n        validateTableOfLongs(vt, new long[][] {{1, Long.MIN_VALUE},{2,5}, {3, 8}});\n\n        sql = \"SELECT ID, CASE WHEN num > 3 AND num < 5 THEN 4 \" +\n                \"WHEN num >=5 THEN num*10 END FROM R1 ORDER BY 1;\";\n        vt = cl.callProcedure(\"@AdHoc\", sql).getResults()[0];\n        assertEquals(VoltType.BIGINT, vt.getColumnType(1));\n        validateTableOfLongs(vt, new long[][] {{1, Long.MIN_VALUE},{2,50}, {3, 80}});\n\n        // Test NULL\n        cl.callProcedure(\"R1.insert\", 4, \"DB2\",  null, null, new Timestamp(1000000000000L));\n        sql = \"SELECT ID, CASE WHEN num < 3 THEN num/2 ELSE num + 10 END FROM R1 ORDER BY 1;\";\n        vt = cl.callProcedure(\"@AdHoc\", sql).getResults()[0];\n        assertEquals(VoltType.INTEGER, vt.getColumnType(1));\n        validateTableOfLongs(vt, new long[][] {{1, 0},{2, 15}, {3, 18}, {4, Long.MIN_VALUE}});\n\n    }","commit_id":"0a06ba4d810f8911a0c56a44703a983326916a39","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public void testCaseWhenLikeDecodeFunction() throws Exception {\n        System.out.println(\"STARTING test Case When like decode function...\");\n        Client cl = getClient();\n        String sql;\n\n        //      ID, DESC,   NUM, FLOAT, TIMESTAMP\n        cl.callProcedure(\"R1.insert\", 1, \"VoltDB\", 1, 1.0, new Timestamp(1000000000000L));\n        cl.callProcedure(\"R1.insert\", 2, \"MySQL\",  5, 5.0, new Timestamp(1000000000000L));\n\n        sql = \"SELECT ID, CASE num WHEN 3 THEN 3*2 WHEN 1 THEN 0 ELSE 10 END FROM R1 ORDER BY 1;\";\n        validateTableOfLongs(cl, sql, new long[][] {{1, 0},{2, 10}});\n\n        // No ELSE clause\n        sql = \"SELECT ID, CASE num WHEN 1 THEN 10 WHEN 2 THEN 1 END FROM R1 ORDER BY 1;\";\n        if (isHSQL()) {\n            validateTableOfLongs(cl, sql, new long[][] {{1, 10},{2, 0}});\n        } else {\n            validateTableOfLongs(cl, sql, new long[][] {{1, 10},{2, Long.MIN_VALUE}});\n        }\n\n        // Test NULL\n        cl.callProcedure(\"R1.insert\", 3, \"Oracle\",  null, null, new Timestamp(1000000000000L));\n        sql = \"SELECT ID, CASE num WHEN 5 THEN 50 ELSE num + 10 END FROM R1 ORDER BY 1;\";\n        if (isHSQL()) {\n            validateTableOfLongs(cl, sql, new long[][] {{1, 11},{2, 50}, {3, 0}});\n        } else {\n            validateTableOfLongs(cl, sql, new long[][] {{1, 11},{2, 50}, {3, Long.MIN_VALUE}});\n        }\n    }","id":13619,"modified_method":"public void testCaseWhenLikeDecodeFunction() throws Exception {\n        System.out.println(\"STARTING test Case When like decode function...\");\n        Client cl = getClient();\n        String sql;\n\n        //      ID, DESC,   NUM, FLOAT, TIMESTAMP\n        cl.callProcedure(\"R1.insert\", 1, \"VoltDB\", 1, 1.0, new Timestamp(1000000000000L));\n        cl.callProcedure(\"R1.insert\", 2, \"MySQL\",  5, 5.0, new Timestamp(1000000000000L));\n\n        sql = \"SELECT ID, CASE num WHEN 3 THEN 3*2 WHEN 1 THEN 0 ELSE 10 END FROM R1 ORDER BY 1;\";\n        validateTableOfLongs(cl, sql, new long[][] {{1, 0},{2, 10}});\n\n        // No ELSE clause\n        sql = \"SELECT ID, CASE num WHEN 1 THEN 10 WHEN 2 THEN 1 END FROM R1 ORDER BY 1;\";\n        validateTableOfLongs(cl, sql, new long[][] {{1, 10},{2, Long.MIN_VALUE}});\n\n        // Test NULL\n        cl.callProcedure(\"R1.insert\", 3, \"Oracle\",  null, null, new Timestamp(1000000000000L));\n        sql = \"SELECT ID, CASE num WHEN 5 THEN 50 ELSE num + 10 END FROM R1 ORDER BY 1;\";\n        validateTableOfLongs(cl, sql, new long[][] {{1, 11},{2, 50}, {3, Long.MIN_VALUE}});\n    }","commit_id":"0a06ba4d810f8911a0c56a44703a983326916a39","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public void testENG5386() throws Exception {\n        System.out.println(\"Test MV partition agg query NO FIX edge cases. ENG5386...\");\n        VoltTable vt = null;\n        Client client = this.getClient();\n\n        // Load data\n        loadTableForMVFixSuite();\n        String[] tbs = {\"V_R4_ENG5386\", \"V_P1_ENG5386\"};\n        /*\n        * Current expected data:\n        * V_G1, V_G2, V_CNT, V_sum_age, V_min_age, V_max_rent, V_count_rent\n        * 10,   1,     4,     101,       21,        12,             4\n        * 20,   2,     2,     45,        22,         7,             2\n        * 30,   2,     1,     24,        24,         8,             1\n        * 30,   3,     3,     85,        26,        14,             3\n        * */\n\n        for (String tb: tbs) {\n            vt = client.callProcedure(\"@AdHoc\", \"Select SUM(V_sum_age), MIN(V_min_age), MAX(V_max_rent), \" +\n                    \"SUM(V_count_rent)  from \" + tb + \" ;\").getResults()[0];\n            validateTableOfLongs(vt, new long[][]{{255,21,14,10}});\n\n\n            vt = client.callProcedure(\"@AdHoc\", \"Select V_G1, SUM(V_sum_age), MIN(V_min_age), MAX(V_max_rent), \" +\n                    \"SUM(V_count_rent)  from \" + tb + \" GROUP BY V_G1 ORDER BY 1;\").getResults()[0];\n            validateTableOfLongs(vt, new long[][]{{10,101,21,12,4}, {20,45,22,7,2}, {30,109,24,14,4}});\n\n\n            vt = client.callProcedure(\"@AdHoc\", \"Select V_G2, SUM(V_sum_age), MIN(V_min_age), MAX(V_max_rent), \" +\n                    \"SUM(V_count_rent)  from \" + tb + \" GROUP BY V_G2 ORDER BY 1;\").getResults()[0];\n            validateTableOfLongs(vt, new long[][]{{1,101,21,12,4}, {2,69,22,8,3}, {3,85,26,14,3}});\n\n\n            // Where clause.\n            vt = client.callProcedure(\"@AdHoc\", \"Select SUM(V_sum_age), MIN(V_min_age), MAX(V_max_rent), \" +\n                    \"SUM(V_count_rent)  from \" + tb + \" WHERE v_g1 > 10;\").getResults()[0];\n            validateTableOfLongs(vt, new long[][]{{154,22,14,6}});\n\n            vt = client.callProcedure(\"@AdHoc\", \"Select V_G1, SUM(V_sum_age), MIN(V_min_age), MAX(V_max_rent), \" +\n                    \"SUM(V_count_rent)  from \" + tb + \" WHERE v_g1 > 10 GROUP BY V_G1 ORDER BY 1;\").getResults()[0];\n            validateTableOfLongs(vt, new long[][]{{20,45,22,7,2}, {30,109,24,14,4}});\n\n            vt = client.callProcedure(\"@AdHoc\", \"Select V_G1, SUM(V_sum_age), MIN(V_min_age), MAX(V_max_rent), \" +\n                    \"SUM(V_count_rent)  from \" + tb + \" WHERE v_g2 > 1 GROUP BY V_G1 ORDER BY 1;\").getResults()[0];\n            validateTableOfLongs(vt, new long[][]{{20,45,22,7,2}, {30,109,24,14,4}});\n\n            // join\n            String sql = \"\";\n            sql = \"Select SUM(V_P1_ENG5386.v_sum_age), MAX(v_r4.v_sum_rent), MAX(V_P1_ENG5386.V_max_rent), \" +\n                    \"MIN(V_P1_ENG5386.V_min_age) from V_P1_ENG5386 join v_r4 on V_P1_ENG5386.v_g1 = v_r4.v_g1;\";\n            sql = sql.replace(\"V_P1_ENG5386\", tb);\n            vt = client.callProcedure(\"@AdHoc\", sql).getResults()[0];\n            validateTableOfLongs(vt, new long[][] {{364, 37, 14, 21}});\n\n\n            sql = \"Select V_P1_ENG5386.v_g1, SUM(V_P1_ENG5386.v_sum_age), MAX(v_r4.v_sum_rent), \" +\n                    \"MAX(V_P1_ENG5386.V_max_rent), MIN(V_P1_ENG5386.V_min_age) from V_P1_ENG5386 \" +\n                    \"join v_r4 on V_P1_ENG5386.v_g1 = v_r4.v_g1 GROUP BY V_P1_ENG5386.v_g1 ORDER BY 1;\";\n            sql = sql.replace(\"V_P1_ENG5386\", tb);\n            vt = client.callProcedure(\"@AdHoc\", sql).getResults()[0];\n            validateTableOfLongs(vt, new long[][] {{10,101,37,12,21}, {20,45,13,7,22}, {30,218,37,14,24}});\n\n\n            // join + where\n            sql = \"Select SUM(V_P1_ENG5386.v_sum_age), MAX(v_r4.v_sum_rent), MAX(V_P1_ENG5386.V_max_rent), \" +\n                    \"MIN(V_P1_ENG5386.V_min_age) from V_P1_ENG5386 join v_r4 on V_P1_ENG5386.v_g1 = v_r4.v_g1 \" +\n                    \"WHERE V_P1_ENG5386.v_g1 > 10;\";\n            sql = sql.replace(\"V_P1_ENG5386\", tb);\n            vt = client.callProcedure(\"@AdHoc\", sql).getResults()[0];\n            validateTableOfLongs(vt, new long[][] {{263,37,14,22}});\n\n\n            sql = \"Select V_P1_ENG5386.v_g1, SUM(V_P1_ENG5386.v_sum_age), MAX(v_r4.v_sum_rent), \" +\n                    \"MAX(V_P1_ENG5386.V_max_rent), MIN(V_P1_ENG5386.V_min_age) from V_P1_ENG5386 \" +\n                    \"join v_r4 on V_P1_ENG5386.v_g1 = v_r4.v_g1 WHERE V_P1_ENG5386.v_g1 > 10 \" +\n                    \"GROUP BY V_P1_ENG5386.v_g1 ORDER BY 1;\";\n            sql = sql.replace(\"V_P1_ENG5386\", tb);\n            vt = client.callProcedure(\"@AdHoc\", sql).getResults()[0];\n            validateTableOfLongs(vt, new long[][] {{20,45,13,7,22}, {30,218,37,14,24}});\n\n\n            // Outer join\n            sql = \"Select SUM(V_P1_ENG5386.v_sum_age), MAX(v_r4.v_sum_rent), MAX(V_P1_ENG5386.V_max_rent), \" +\n                    \"MIN(V_P1_ENG5386.V_min_age) from V_P1_ENG5386 left join v_r4 on V_P1_ENG5386.v_g1 < v_r4.v_g1;\";\n            sql = sql.replace(\"V_P1_ENG5386\", tb);\n            vt = client.callProcedure(\"@AdHoc\", sql).getResults()[0];\n            validateTableOfLongs(vt, new long[][] {{502, 37, 14, 21}});\n\n\n            sql = \"Select V_P1_ENG5386.v_g1, SUM(V_P1_ENG5386.v_sum_age), MAX(v_r4.v_sum_rent), \" +\n                    \"MAX(V_P1_ENG5386.V_max_rent), MIN(V_P1_ENG5386.V_min_age) from V_P1_ENG5386 \" +\n                    \"left join v_r4 on V_P1_ENG5386.v_g1 < v_r4.v_g1 GROUP BY V_P1_ENG5386.v_g1 ORDER BY 1;\";\n            sql = sql.replace(\"V_P1_ENG5386\", tb);\n            vt = client.callProcedure(\"@AdHoc\", sql).getResults()[0];\n            //* enable for debug*/ System.out.println(vt);\n            long voltNullLong = Long.MIN_VALUE;\n            if (isHSQL()) {\n                voltNullLong = 0l;\n            }\n            validateTableOfLongs(vt, new long[][] {{10,303,37,12,21}, {20,90,37,7,22}, {30,109,voltNullLong,14,24}});\n\n        }\n\n    }","id":13620,"modified_method":"public void testENG5386() throws Exception {\n        System.out.println(\"Test MV partition agg query NO FIX edge cases. ENG5386...\");\n        VoltTable vt = null;\n        Client client = this.getClient();\n\n        // Load data\n        loadTableForMVFixSuite();\n        String[] tbs = {\"V_R4_ENG5386\", \"V_P1_ENG5386\"};\n        /*\n        * Current expected data:\n        * V_G1, V_G2, V_CNT, V_sum_age, V_min_age, V_max_rent, V_count_rent\n        * 10,   1,     4,     101,       21,        12,             4\n        * 20,   2,     2,     45,        22,         7,             2\n        * 30,   2,     1,     24,        24,         8,             1\n        * 30,   3,     3,     85,        26,        14,             3\n        * */\n\n        for (String tb: tbs) {\n            vt = client.callProcedure(\"@AdHoc\", \"Select SUM(V_sum_age), MIN(V_min_age), MAX(V_max_rent), \" +\n                    \"SUM(V_count_rent)  from \" + tb + \" ;\").getResults()[0];\n            validateTableOfLongs(vt, new long[][]{{255,21,14,10}});\n\n\n            vt = client.callProcedure(\"@AdHoc\", \"Select V_G1, SUM(V_sum_age), MIN(V_min_age), MAX(V_max_rent), \" +\n                    \"SUM(V_count_rent)  from \" + tb + \" GROUP BY V_G1 ORDER BY 1;\").getResults()[0];\n            validateTableOfLongs(vt, new long[][]{{10,101,21,12,4}, {20,45,22,7,2}, {30,109,24,14,4}});\n\n\n            vt = client.callProcedure(\"@AdHoc\", \"Select V_G2, SUM(V_sum_age), MIN(V_min_age), MAX(V_max_rent), \" +\n                    \"SUM(V_count_rent)  from \" + tb + \" GROUP BY V_G2 ORDER BY 1;\").getResults()[0];\n            validateTableOfLongs(vt, new long[][]{{1,101,21,12,4}, {2,69,22,8,3}, {3,85,26,14,3}});\n\n\n            // Where clause.\n            vt = client.callProcedure(\"@AdHoc\", \"Select SUM(V_sum_age), MIN(V_min_age), MAX(V_max_rent), \" +\n                    \"SUM(V_count_rent)  from \" + tb + \" WHERE v_g1 > 10;\").getResults()[0];\n            validateTableOfLongs(vt, new long[][]{{154,22,14,6}});\n\n            vt = client.callProcedure(\"@AdHoc\", \"Select V_G1, SUM(V_sum_age), MIN(V_min_age), MAX(V_max_rent), \" +\n                    \"SUM(V_count_rent)  from \" + tb + \" WHERE v_g1 > 10 GROUP BY V_G1 ORDER BY 1;\").getResults()[0];\n            validateTableOfLongs(vt, new long[][]{{20,45,22,7,2}, {30,109,24,14,4}});\n\n            vt = client.callProcedure(\"@AdHoc\", \"Select V_G1, SUM(V_sum_age), MIN(V_min_age), MAX(V_max_rent), \" +\n                    \"SUM(V_count_rent)  from \" + tb + \" WHERE v_g2 > 1 GROUP BY V_G1 ORDER BY 1;\").getResults()[0];\n            validateTableOfLongs(vt, new long[][]{{20,45,22,7,2}, {30,109,24,14,4}});\n\n            // join\n            String sql = \"\";\n            sql = \"Select SUM(V_P1_ENG5386.v_sum_age), MAX(v_r4.v_sum_rent), MAX(V_P1_ENG5386.V_max_rent), \" +\n                    \"MIN(V_P1_ENG5386.V_min_age) from V_P1_ENG5386 join v_r4 on V_P1_ENG5386.v_g1 = v_r4.v_g1;\";\n            sql = sql.replace(\"V_P1_ENG5386\", tb);\n            vt = client.callProcedure(\"@AdHoc\", sql).getResults()[0];\n            validateTableOfLongs(vt, new long[][] {{364, 37, 14, 21}});\n\n\n            sql = \"Select V_P1_ENG5386.v_g1, SUM(V_P1_ENG5386.v_sum_age), MAX(v_r4.v_sum_rent), \" +\n                    \"MAX(V_P1_ENG5386.V_max_rent), MIN(V_P1_ENG5386.V_min_age) from V_P1_ENG5386 \" +\n                    \"join v_r4 on V_P1_ENG5386.v_g1 = v_r4.v_g1 GROUP BY V_P1_ENG5386.v_g1 ORDER BY 1;\";\n            sql = sql.replace(\"V_P1_ENG5386\", tb);\n            vt = client.callProcedure(\"@AdHoc\", sql).getResults()[0];\n            validateTableOfLongs(vt, new long[][] {{10,101,37,12,21}, {20,45,13,7,22}, {30,218,37,14,24}});\n\n\n            // join + where\n            sql = \"Select SUM(V_P1_ENG5386.v_sum_age), MAX(v_r4.v_sum_rent), MAX(V_P1_ENG5386.V_max_rent), \" +\n                    \"MIN(V_P1_ENG5386.V_min_age) from V_P1_ENG5386 join v_r4 on V_P1_ENG5386.v_g1 = v_r4.v_g1 \" +\n                    \"WHERE V_P1_ENG5386.v_g1 > 10;\";\n            sql = sql.replace(\"V_P1_ENG5386\", tb);\n            vt = client.callProcedure(\"@AdHoc\", sql).getResults()[0];\n            validateTableOfLongs(vt, new long[][] {{263,37,14,22}});\n\n\n            sql = \"Select V_P1_ENG5386.v_g1, SUM(V_P1_ENG5386.v_sum_age), MAX(v_r4.v_sum_rent), \" +\n                    \"MAX(V_P1_ENG5386.V_max_rent), MIN(V_P1_ENG5386.V_min_age) from V_P1_ENG5386 \" +\n                    \"join v_r4 on V_P1_ENG5386.v_g1 = v_r4.v_g1 WHERE V_P1_ENG5386.v_g1 > 10 \" +\n                    \"GROUP BY V_P1_ENG5386.v_g1 ORDER BY 1;\";\n            sql = sql.replace(\"V_P1_ENG5386\", tb);\n            vt = client.callProcedure(\"@AdHoc\", sql).getResults()[0];\n            validateTableOfLongs(vt, new long[][] {{20,45,13,7,22}, {30,218,37,14,24}});\n\n\n            // Outer join\n            sql = \"Select SUM(V_P1_ENG5386.v_sum_age), MAX(v_r4.v_sum_rent), MAX(V_P1_ENG5386.V_max_rent), \" +\n                    \"MIN(V_P1_ENG5386.V_min_age) from V_P1_ENG5386 left join v_r4 on V_P1_ENG5386.v_g1 < v_r4.v_g1;\";\n            sql = sql.replace(\"V_P1_ENG5386\", tb);\n            vt = client.callProcedure(\"@AdHoc\", sql).getResults()[0];\n            validateTableOfLongs(vt, new long[][] {{502, 37, 14, 21}});\n\n\n            sql = \"Select V_P1_ENG5386.v_g1, SUM(V_P1_ENG5386.v_sum_age), MAX(v_r4.v_sum_rent), \" +\n                    \"MAX(V_P1_ENG5386.V_max_rent), MIN(V_P1_ENG5386.V_min_age) from V_P1_ENG5386 \" +\n                    \"left join v_r4 on V_P1_ENG5386.v_g1 < v_r4.v_g1 GROUP BY V_P1_ENG5386.v_g1 ORDER BY 1;\";\n            sql = sql.replace(\"V_P1_ENG5386\", tb);\n            vt = client.callProcedure(\"@AdHoc\", sql).getResults()[0];\n            //* enable for debug*/ System.out.println(vt);\n            validateTableOfLongs(vt, new long[][] {{10,303,37,12,21}, {20,90,37,7,22}, {30,109,Long.MIN_VALUE,14,24}});\n        }\n\n    }","commit_id":"0a06ba4d810f8911a0c56a44703a983326916a39","url":"https://github.com/VoltDB/voltdb"},{"original_method":"private void subTestIsDistinctFromUsingSubqueries(Client client) throws Exception\n    {\n        // 'is Distinct from' operator does not work on HSQL-backend - it's missing end-to-end\n        // support. It results in runt time exception \"unsupported internal operation: Expression\"\n        // So assert in case if these test cases are executed on HSQL backend\n        // Once support for 'is distinct from' is available on HSQL-backend, remove the assert below.\n        // results for HSQL backend below are HSQL 2.3.2/3 version and also verified against postgresql.\n        // so it come handy and have left them in there.\n        assert(!isHSQL());\n\n        String sql;\n\n        // test cases below test different subquery condition paths in EE like LHS NULL, RHS NOT NULL and so forth\n        sql = \"SELECT wage salary, count(*) from S2 \"+\n                \"WHERE WAGE is distinct from  \" +\n                \"(SELECT SUM(WAGE) FROM S2 where WAGE is not distinct from 1000) \" +\n                \"GROUP BY WAGE HAVING COUNT(*) is distinct from 7;\";\n        if(isHSQL()) {\n            validateTableOfLongs(client, sql, new long[][] {{Long.MIN_VALUE,    1},\n                                                            {5253,              1}});\n        }\n        else {\n            validateTableOfLongs(client, sql, new long[][] {{5253,              1},\n                                                            {Long.MIN_VALUE,    1}});\n        }\n\n        sql = \"SELECT wage salary, count(*) from S2 \"+\n                \"WHERE WAGE is distinct from  \" +\n                \"(SELECT SUM(WAGE) FROM S2 where WAGE is distinct from 1000) \" +\n                \"GROUP BY WAGE HAVING COUNT(*) is distinct from 7;\";\n        if(isHSQL()) {\n            validateTableOfLongs(client, sql, new long[][] {{1000,              1},\n                                                            {Long.MIN_VALUE,    1}});\n        }\n        else {\n            validateTableOfLongs(client, sql, new long[][] {{Long.MIN_VALUE,    1},\n                                                            {1000,              1}});\n        }\n\n        sql = \"SELECT wage salary, count(*)  from S2 \" +\n                \"WHERE  (select S2.wage from S2 where S2.ID<>1 and S2.id<>5) is distinct from wage \"+\n                \"GROUP BY WAGE HAVING COUNT(*) is distinct from 7;\";\n        if(isHSQL()) {\n            validateTableOfLongs(client, sql, new long[][] {{1000, 1}, {5253, 1}});\n        }\n        else {\n            validateTableOfLongs(client, sql, new long[][] {{5253, 1}, {1000, 1}});\n        }\n\n\n        sql = \"select S1.wage, count(*) from S1 Right Join S2 \"+\n                \"On S2.WAGE is distinct from  \" +\n                \"(SELECT MIN(WAGE) FROM S2 where WAGE is  distinct from 1000)\" +\n                \"group by S1.wage  having COUNT(*) is not distinct from 1;\";\n        validateTableOfLongs(client, sql, new long[][] {});\n\n        sql = \"select * from S1 where S1.WAGE = ANY \" +\n                \"(select S2.wage from S2 where S2.wage is distinct from  5253 or S2.Wage is not distinct from  1000);\";\n        validateTableOfLongs(client, sql, new long[][] {{1,     1000,      1}});\n\n        // currrently ANY/ALL operator is not supported with \"is distinct from\" comparison operator\n        sql = \"select * from S1 where S1.WAGE is not distinct from ANY \" +\n                \"(select S2.wage from S2 where S2.wage is distinct from  5253 or S2.Wage is not distinct from  1000);\";\n        verifyStmtFails(client, sql, \"unexpected token: SELECT\");\n\n        sql = \"select * from S1 where S1.WAGE is not distinct from ANY \" +\n                \"(select S2.wage from S2 where S2.wage is distinct from  5253 or S2.Wage is not distinct from  Null);\";\n        verifyStmtFails(client, sql, \"unexpected token: SELECT\");\n    }","id":13621,"modified_method":"private void subTestIsDistinctFromUsingSubqueries(Client client) throws Exception\n    {\n        // 'is Distinct from' operator does not work on HSQL-backend - it's missing end-to-end\n        // support. It results in runt time exception \"unsupported internal operation: Expression\"\n        // So assert in case if these test cases are executed on HSQL backend\n        // Once support for 'is distinct from' is available on HSQL-backend, remove the assert below.\n        // results for HSQL backend below are HSQL 2.3.2/3 version and also verified against postgresql.\n        // so it come handy and have left them in there.\n        assert(!isHSQL());\n\n        String sql;\n\n        // test cases below test different subquery condition paths in EE like LHS NULL, RHS NOT NULL and so forth\n        sql = \"SELECT wage salary, count(*) from S2 \"+\n                \"WHERE wage is distinct from  \" +\n                \"(SELECT MIN(wage) FROM S1 where wage is distinct from 2553) \" +\n                \"GROUP BY wage \" +\n                \"HAVING COUNT(*) is distinct from 7 \" +\n                \"ORDER BY wage\";\n        validateTableOfLongs(client, sql, new long[][] {{Long.MIN_VALUE,    1},\n                                                        {5253,              1}});\n\n        sql = \"SELECT id, wage, count(*) from S1 \"+\n                \"WHERE wage is distinct from  \" +\n                \"(SELECT wage FROM S2 where id is not distinct from 4) \" +\n                \"GROUP BY wage, id HAVING COUNT(*) is distinct from 7 ORDER BY id;\";\n        validateTableOfLongs(client, sql, new long[][] {{1, 1000,   1},\n                                                        {3, 3000,   1},\n                                                        {5, 2553,   1},\n                                                        {7, 4552,   1},\n                                                        {9, 5152,   1}});\n\n        sql = \"SELECT id, wage salary, count(*)  from S1 \" +\n                \"WHERE  (select S2.wage from S2 where S2.ID<>1 and S2.id<>5) is not distinct from wage \"+\n                \"GROUP BY wage, id HAVING COUNT(*) is distinct from 7 ORDER BY wage;\";\n        validateTableOfLongs(client, sql, new long[][] {{10,    Long.MIN_VALUE,    1}});\n\n\n\n        sql = \"select S1.wage, count(*) from S1 Right Join S2 \"+\n                \"On S2.wage is distinct from  \" +\n                \"(SELECT MIN(wage) FROM S1 where wage is  distinct from 1000) \" +\n                \"GROUP BY S1.wage  having COUNT(*) is not distinct from 1;\";\n        validateTableOfLongs(client, sql, new long[][] {});\n\n        sql = \"select * from S1 where S1.wage = ANY \" +\n                \"(select S2.wage from S2 where S2.wage is distinct from  5253 or S2.wage is not distinct from  1000);\";\n        validateTableOfLongs(client, sql, new long[][] {{1,     1000,      1}});\n\n        // currently ANY/ALL operator is not supported with \"is distinct from\" comparison operator\n        sql = \"select * from S1 where S1.WAGE is not distinct from ANY \" +\n                \"(select S2.wage from S2 where S2.wage is distinct from  5253 or S2.Wage is not distinct from  1000);\";\n        verifyStmtFails(client, sql, \"unexpected token: SELECT\");\n\n        sql = \"select * from S1 where S1.WAGE is not distinct from ANY \" +\n                \"(select S2.wage from S2 where S2.wage is distinct from  5253 or S2.Wage is not distinct from  Null);\";\n        verifyStmtFails(client, sql, \"unexpected token: SELECT\");\n    }","commit_id":"7cd0a4707557a0ff54053b3b0d697e4f399b4385","url":"https://github.com/VoltDB/voltdb"},{"original_method":"private void subTestIsDistinctFrom(Client client)\n            throws Exception\n    {\n        // 'is Distinct from' operator does not work on HSQL-backend - it's missing end-to-end\n        // support. It results in runt time exception \"unsupported internal operation: Expression\"\n        // So assert in case if these test cases are executed on HSQL backend\n        // Once support for 'is distinct from' is available on HSQL-backend, remove the assert below.\n        // results for HSQL backend below are HSQL 2.3.2/3 version and also verified against postgresql.\n        // so it come handy and have left them in there.\n        assert(!isHSQL());\n\n        String sql;\n\n        //ENG-8946: NULL constant in runtime exception when trying to resolve in HSQL\n        // NULL constant - results in non-parameterized plan\n        //sql = \"SELECT * FROM S2 A WHERE  A.WAGE is not distinct from NULL;\";\n        //validateTableOfLongs(client, sql, new long[][] {{4,     Long.MIN_VALUE,     2}});\n\n        // Non-Null constant results in parameterized plan\n        sql = \"SELECT * FROM S2 A WHERE  A.WAGE is  distinct from 1000.01;\";\n        validateTableOfLongs(client, sql, new long[][] {{1,     1000,               2},\n                                                        {4,     Long.MIN_VALUE,     2},\n                                                        {5,     5253,               3}});\n\n        // Join operation\n        // case 1: on column that can't have null values\n        sql = \"Select S1.ID ID,\" +\n                \"S1.Wage, S1.Dept, \" +\n                \"S2.WAGE, S2.Dept \" +\n                \"from S1, S2 where S1.ID is not distinct from S2.ID;\";\n        //vt = client.callProcedure(\"@AdHoc\", sql).getResults()[0];\n        //System.out.println(\"\\n\\nsql: \" + sql + \"\\nResult: \" + (vt.toString()) + \" row Count: \"+ vt.getRowCount() + \"\\n\\n\");\n        validateTableOfLongs(client, sql, new long[][] {{1, 1000, 1, 1000, 2},\n                                                        {5, 2553, 3, 5253, 3}});\n\n        // case 2.1: on column that can have null values; result set does not has null values\n        sql = \"Select S1.Wage,\" +\n                \"S1.ID, S1.Dept, \" +\n                \"S2.ID, S2.Dept \" +\n                \"from S1, S2 where S1.WAGE is not distinct from S2.WAGE;\";\n        validateTableOfLongs(client, sql, new long[][] {{1000,              1,  1,  1,  2},\n                                                        {Long.MIN_VALUE,    10, 2,  4,  2}});\n\n\n        // case 2.2: on column that can have null values; result set has null values\n        sql = \"Select S1.ID ID,\" +\n                \"S1.Wage, S1.Dept, \" +\n                \"S2.WAGE, S2.Dept \" +\n                \"from S1, S2 where S1.WAGE is distinct from S2.WAGE;\";\n\n        validateTableOfLongs(client, sql, new long[][] {{1, 1000,           1,  Long.MIN_VALUE, 2},\n                                                        {1, 1000,           1,  5253,           3},\n                                                        {3,  3000,          1,  1000,           2},\n                                                        {3,  3000,          1,  Long.MIN_VALUE, 2},\n                                                        {3,  3000,          1,  5253,           3},\n                                                        {5,  2553,          3,  1000,           2},\n                                                        {5,  2553,          3,  Long.MIN_VALUE, 2},\n                                                        {5,  2553,          3,  5253,           3},\n                                                        {7,  4552,          2,  1000,           2},\n                                                        {7,  4552,          2,  Long.MIN_VALUE, 2},\n                                                        {7,  4552,          2,  5253,           3},\n                                                        {9,  5152,          2,  1000,           2},\n                                                        {9,  5152,          2,  Long.MIN_VALUE, 2},\n                                                        {9,  5152,          2,  5253,           3},\n                                                        {10, Long.MIN_VALUE,2,  1000,           2},\n                                                        {10, Long.MIN_VALUE,2,  5253,           3}});\n\n\n        // left join on column that has null values\n        sql = \"Select S2.wage, S2.ID, count (*) from S1 left Join S2 On S2.WAGE is not distinct from S2.wage group by S2.wage, S2.ID;\";\n        if(isHSQL()) {\n            validateTableOfLongs(client, sql, new long[][] {{1000,              1,   6},\n                                                            {Long.MIN_VALUE,    4,   6},\n                                                            {5253,              5,   6}});\n        }\n        else {\n            validateTableOfLongs(client, sql, new long[][] {{5253,              5,   6},\n                                                            {Long.MIN_VALUE,    4,   6},\n                                                            {1000,              1,   6}});\n        }\n    }","id":13622,"modified_method":"private void subTestIsDistinctFrom(Client client)\n            throws Exception\n    {\n        // 'is Distinct from' operator does not work on HSQL-backend - it's missing end-to-end\n        // support. It results in runt time exception \"unsupported internal operation: Expression\"\n        // So assert in case if these test cases are executed on HSQL backend\n        // Once support for 'is distinct from' is available on HSQL-backend, remove the assert below.\n        // results for HSQL backend below are HSQL 2.3.2/3 version and also verified against postgresql.\n        // so it come handy and have left them in there.\n        assert(!isHSQL());\n\n        String sql;\n\n        //ENG-8946: NULL constant in runtime exception when trying to resolve in HSQL\n        // NULL constant - results in non-parameterized plan\n        //sql = \"SELECT * FROM S2 A WHERE  A.WAGE is not distinct from NULL;\";\n        //validateTableOfLongs(client, sql, new long[][] {{4,     Long.MIN_VALUE,     2}});\n\n        // Non-Null constant results in parameterized plan\n        sql = \"SELECT * FROM S2 A WHERE  A.WAGE is  distinct from 1000.01;\";\n        validateTableOfLongs(client, sql, new long[][] {{1,     1000,               2},\n                                                        {4,     Long.MIN_VALUE,     2},\n                                                        {5,     5253,               3}});\n\n        // Join operation\n        // case 1: on column that can't have null values\n        sql = \"Select S1.ID ID,\" +\n                \"S1.Wage, S1.Dept, \" +\n                \"S2.WAGE, S2.Dept \" +\n                \"from S1, S2 where S1.ID is not distinct from S2.ID;\";\n        //vt = client.callProcedure(\"@AdHoc\", sql).getResults()[0];\n        //System.out.println(\"\\n\\nsql: \" + sql + \"\\nResult: \" + (vt.toString()) + \" row Count: \"+ vt.getRowCount() + \"\\n\\n\");\n        validateTableOfLongs(client, sql, new long[][] {{1, 1000, 1, 1000, 2},\n                                                        {5, 2553, 3, 5253, 3}});\n\n        // case 2.1: on column that can have null values; result set does not has null values\n        sql = \"Select S1.Wage,\" +\n                \"S1.ID, S1.Dept, \" +\n                \"S2.ID, S2.Dept \" +\n                \"from S1, S2 where S1.WAGE is not distinct from S2.WAGE;\";\n        validateTableOfLongs(client, sql, new long[][] {{1000,              1,  1,  1,  2},\n                                                        {Long.MIN_VALUE,    10, 2,  4,  2}});\n\n\n        // case 2.2: on column that can have null values; result set has null values\n        sql = \"Select S1.ID ID,\" +\n                \"S1.Wage, S1.Dept, \" +\n                \"S2.WAGE, S2.Dept \" +\n                \"from S1, S2 where S1.WAGE is distinct from S2.WAGE;\";\n\n        validateTableOfLongs(client, sql, new long[][] {{1, 1000,           1,  Long.MIN_VALUE, 2},\n                                                        {1, 1000,           1,  5253,           3},\n                                                        {3,  3000,          1,  1000,           2},\n                                                        {3,  3000,          1,  Long.MIN_VALUE, 2},\n                                                        {3,  3000,          1,  5253,           3},\n                                                        {5,  2553,          3,  1000,           2},\n                                                        {5,  2553,          3,  Long.MIN_VALUE, 2},\n                                                        {5,  2553,          3,  5253,           3},\n                                                        {7,  4552,          2,  1000,           2},\n                                                        {7,  4552,          2,  Long.MIN_VALUE, 2},\n                                                        {7,  4552,          2,  5253,           3},\n                                                        {9,  5152,          2,  1000,           2},\n                                                        {9,  5152,          2,  Long.MIN_VALUE, 2},\n                                                        {9,  5152,          2,  5253,           3},\n                                                        {10, Long.MIN_VALUE,2,  1000,           2},\n                                                        {10, Long.MIN_VALUE,2,  5253,           3}});\n\n\n        // left join on column that has null values\n        sql = \"Select S2.wage, S2.ID, count (*) from S1 left Join S2 On \" +\n                \"S2.WAGE is not distinct from S2.wage group by S2.wage, S2.ID order by s2.wage;\";\n        validateTableOfLongs(client, sql, new long[][] {{Long.MIN_VALUE,    4,   6},\n                                                        {1000,              1,   6},\n                                                        {5253,              5,   6}});\n    }","commit_id":"7cd0a4707557a0ff54053b3b0d697e4f399b4385","url":"https://github.com/VoltDB/voltdb"},{"original_method":"private void createLayersItems(ContextMenuAdapter adapter, MapActivity activity) {\n\t\tOsmandApplication app = activity.getMyApplication();\n\t\tOsmandSettings settings = app.getSettings();\n\t\tLayerMenuListener l = new LayerMenuListener(activity, adapter);\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t.setTitleId(R.string.shared_string_show, activity)\n\t\t\t\t.setCategory(true).setLayout(R.layout.list_group_title_with_switch).createItem());\n\t\t// String appMode = \" [\" + settings.getApplicationMode().toHumanString(view.getApplication()) +\"] \";\n\t\tboolean selected = settings.SHOW_FAVORITES.get();\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t.setTitleId(R.string.shared_string_favorites, activity)\n\t\t\t\t.setSelected(settings.SHOW_FAVORITES.get())\n\t\t\t\t.setColor(selected ? R.color.osmand_orange : ContextMenuItem.INVALID_ID)\n\t\t\t\t.setIcon(R.drawable.ic_action_fav_dark)\n\t\t\t\t.setListener(l).createItem());\n\t\tselected = app.getPoiFilters().isShowingAnyPoi();\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t.setTitleId(R.string.layer_poi, activity)\n\t\t\t\t.setSelected(selected)\n\t\t\t\t.setDescription(app.getPoiFilters().getSelectedPoiFiltersName())\n\t\t\t\t.setColor(selected ? R.color.osmand_orange : ContextMenuItem.INVALID_ID)\n\t\t\t\t.setIcon(R.drawable.ic_action_info_dark)\n\t\t\t\t.setSecondaryIcon(R.drawable.ic_action_additional_option)\n\t\t\t\t.setListener(l).createItem());\n\t\tselected = settings.SHOW_POI_LABEL.get();\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t.setTitleId(R.string.layer_amenity_label, activity)\n\t\t\t\t.setSelected(settings.SHOW_POI_LABEL.get())\n\t\t\t\t.setColor(selected ? R.color.osmand_orange : ContextMenuItem.INVALID_ID)\n\t\t\t\t.setIcon(R.drawable.ic_action_text_dark)\n\t\t\t\t.setListener(l).createItem());\n\t\tselected = app.getSelectedGpxHelper().isShowingAnyGpxFiles();\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t.setTitleId(R.string.layer_gpx_layer, activity)\n\t\t\t\t.setSelected(app.getSelectedGpxHelper().isShowingAnyGpxFiles())\n\t\t\t\t.setDescription(app.getSelectedGpxHelper().getGpxDescription())\n\t\t\t\t.setColor(selected ? R.color.osmand_orange : ContextMenuItem.INVALID_ID)\n\t\t\t\t.setIcon(R.drawable.ic_action_polygom_dark)\n\t\t\t\t.setSecondaryIcon(R.drawable.ic_action_additional_option)\n\t\t\t\t.setListener(l).createItem());\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t.setTitleId(R.string.layer_map, activity)\n\t\t\t\t.setIcon(R.drawable.ic_world_globe_dark)\n\t\t\t\t.setListener(l).createItem());\n\n\t\tOsmandPlugin.registerLayerContextMenu(activity.getMapView(), adapter, activity);\n\t\tapp.getAppCustomization().prepareLayerContextMenu(activity, adapter);\n\t}","id":13623,"modified_method":"private void createLayersItems(List<RenderingRuleProperty> customRules, ContextMenuAdapter adapter, MapActivity activity) {\n\t\tOsmandApplication app = activity.getMyApplication();\n\t\tOsmandSettings settings = app.getSettings();\n\t\tLayerMenuListener l = new LayerMenuListener(activity, adapter);\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t.setTitleId(R.string.shared_string_show, activity)\n\t\t\t\t.setCategory(true).setLayout(R.layout.list_group_title_with_switch).createItem());\n\t\t// String appMode = \" [\" + settings.getApplicationMode().toHumanString(view.getApplication()) +\"] \";\n\t\tboolean selected = settings.SHOW_FAVORITES.get();\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t.setTitleId(R.string.shared_string_favorites, activity)\n\t\t\t\t.setSelected(settings.SHOW_FAVORITES.get())\n\t\t\t\t.setColor(selected ? R.color.osmand_orange : ContextMenuItem.INVALID_ID)\n\t\t\t\t.setIcon(R.drawable.ic_action_fav_dark)\n\t\t\t\t.setListener(l).createItem());\n\t\tselected = app.getPoiFilters().isShowingAnyPoi();\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t.setTitleId(R.string.layer_poi, activity)\n\t\t\t\t.setSelected(selected)\n\t\t\t\t.setDescription(app.getPoiFilters().getSelectedPoiFiltersName())\n\t\t\t\t.setColor(selected ? R.color.osmand_orange : ContextMenuItem.INVALID_ID)\n\t\t\t\t.setIcon(R.drawable.ic_action_info_dark)\n\t\t\t\t.setSecondaryIcon(R.drawable.ic_action_additional_option)\n\t\t\t\t.setListener(l).createItem());\n\t\tContextMenuItem item = createProperties(customRules, R.string.rendering_category_transport, R.drawable.ic_action_bus_dark,\n\t\t\t\t\"transport\", adapter, activity, false);\n\t\tif(item != null) {\n\t\t\tadapter.addItem(item);\t\n\t\t}\n\t\tselected = settings.SHOW_POI_LABEL.get();\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t.setTitleId(R.string.layer_amenity_label, activity)\n\t\t\t\t.setSelected(settings.SHOW_POI_LABEL.get())\n\t\t\t\t.setColor(selected ? R.color.osmand_orange : ContextMenuItem.INVALID_ID)\n\t\t\t\t.setIcon(R.drawable.ic_action_text_dark)\n\t\t\t\t.setListener(l).createItem());\n\t\tselected = app.getSelectedGpxHelper().isShowingAnyGpxFiles();\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t.setTitleId(R.string.layer_gpx_layer, activity)\n\t\t\t\t.setSelected(app.getSelectedGpxHelper().isShowingAnyGpxFiles())\n\t\t\t\t.setDescription(app.getSelectedGpxHelper().getGpxDescription())\n\t\t\t\t.setColor(selected ? R.color.osmand_orange : ContextMenuItem.INVALID_ID)\n\t\t\t\t.setIcon(R.drawable.ic_action_polygom_dark)\n\t\t\t\t.setSecondaryIcon(R.drawable.ic_action_additional_option)\n\t\t\t\t.setListener(l).createItem());\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t.setTitleId(R.string.layer_map, activity)\n\t\t\t\t.setIcon(R.drawable.ic_world_globe_dark)\n\t\t\t\t.setListener(l).createItem());\n\n\t\tOsmandPlugin.registerLayerContextMenu(activity.getMapView(), adapter, activity);\n\t\tapp.getAppCustomization().prepareLayerContextMenu(activity, adapter);\n\t}","commit_id":"3a03ce0cf36cf94019f72c2e038d8945e1ee93a3","url":"https://github.com/osmandapp/Osmand"},{"original_method":"private void createProperties(List<RenderingRuleProperty> customRules,\n\t\t\t\t\t\t\t\t  @StringRes final int strId,\n\t\t\t\t\t\t\t\t  @DrawableRes final int icon,\n\t\t\t\t\t\t\t\t  String category,\n\t\t\t\t\t\t\t\t  final ContextMenuAdapter adapter, final MapActivity activity) {\n\t\tfinal List<RenderingRuleProperty> ps = new ArrayList<>();\n\t\tfinal List<OsmandSettings.CommonPreference<Boolean>> prefs = new ArrayList<>();\n\t\tIterator<RenderingRuleProperty> it = customRules.iterator();\n\n\t\twhile (it.hasNext()) {\n\t\t\tRenderingRuleProperty p = it.next();\n\t\t\tif (category.equals(p.getCategory()) && p.isBoolean()) {\n\t\t\t\tps.add(p);\n\t\t\t\tfinal OsmandSettings.CommonPreference<Boolean> pref = activity.getMyApplication().getSettings()\n\t\t\t\t\t\t.getCustomRenderBooleanProperty(p.getAttrName());\n\t\t\t\tprefs.add(pref);\n\t\t\t\tit.remove();\n\t\t\t}\n\t\t}\n\t\tif (prefs.size() > 0) {\n\t\t\tfinal String descr = getDescription(prefs);\n\t\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t\t.setTitleId(strId, activity)\n\t\t\t\t\t.setDescription(descr)\n\t\t\t\t\t.setLayout(R.layout.list_item_single_line_descrition_narrow)\n\t\t\t\t\t.setIcon(icon)\n\t\t\t\t\t.setListener(new ContextMenuAdapter.ItemClickListener() {\n\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic boolean onContextMenuClick(ArrayAdapter<ContextMenuItem> a,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  int itemId, int pos, boolean isChecked) {\n\t\t\t\t\t\t\tshowPreferencesDialog(adapter, a, pos, activity, activity.getString(strId), ps, prefs);\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}).createItem());\n//\t\t\tcreateCustomRenderingProperties(adapter, activity, ps);\n\t\t}\n\t}","id":13624,"modified_method":"private ContextMenuItem createProperties(List<RenderingRuleProperty> customRules,\n\t\t\t\t\t\t\t\t  @StringRes final int strId,\n\t\t\t\t\t\t\t\t  @DrawableRes final int icon,\n\t\t\t\t\t\t\t\t  String category, \n\t\t\t\t\t\t\t\t  final ContextMenuAdapter adapter, final MapActivity activity, final boolean useDescription) {\n\t\tfinal List<RenderingRuleProperty> ps = new ArrayList<>();\n\t\tfinal List<OsmandSettings.CommonPreference<Boolean>> prefs = new ArrayList<>();\n\t\tIterator<RenderingRuleProperty> it = customRules.iterator();\n\n\t\twhile (it.hasNext()) {\n\t\t\tRenderingRuleProperty p = it.next();\n\t\t\tif (category.equals(p.getCategory()) && p.isBoolean()) {\n\t\t\t\tps.add(p);\n\t\t\t\tfinal OsmandSettings.CommonPreference<Boolean> pref = activity.getMyApplication().getSettings()\n\t\t\t\t\t\t.getCustomRenderBooleanProperty(p.getAttrName());\n\t\t\t\tprefs.add(pref);\n\t\t\t\tit.remove();\n\t\t\t}\n\t\t}\n\t\tif (prefs.size() > 0) {\n\t\t\t\n\t\t\tContextMenuItem.ItemBuilder builder = new ContextMenuItem.ItemBuilder()\n\t\t\t.setTitleId(strId, activity)\n\t\t\t.setIcon(icon)\n\t\t\t.setListener(new ContextMenuAdapter.ItemClickListener() {\n\t\t\t\t@Override\n\t\t\t\tpublic boolean onContextMenuClick(ArrayAdapter<ContextMenuItem> a,\n\t\t\t\t\t\t\t\t\t\t\t\t  int itemId, int pos, boolean isChecked) {\n\t\t\t\t\tif(!isChecked) {\n\t\t\t\t\t\tfor (int i = 0; i < prefs.size(); i++) {\n\t\t\t\t\t\t\tprefs.get(i).set(false);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tshowPreferencesDialog(adapter, a, pos, activity, activity.getString(strId), ps, prefs, useDescription);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t\tif(useDescription) {\n\t\t\t\tfinal String descr = getDescription(prefs);\n\t\t\t\tbuilder.setDescription(descr);\n\t\t\t\tbuilder.setLayout(R.layout.list_item_single_line_descrition_narrow);\n\t\t\t} else {\n\t\t\t\tboolean selected = false;\n\t\t\t\tfor(OsmandSettings.CommonPreference<Boolean> p : prefs) {\n\t\t\t\t\tif(p.get()) {\n\t\t\t\t\t\tselected = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbuilder.setSelected(selected);\n\t\t\t}\n\t\t\treturn builder.createItem();\n//\t\t\tcreateCustomRenderingProperties(adapter, activity, ps);\n\t\t}\n\t\treturn null;\n\t}","commit_id":"3a03ce0cf36cf94019f72c2e038d8945e1ee93a3","url":"https://github.com/osmandapp/Osmand"},{"original_method":"protected void showPreferencesDialog(final ContextMenuAdapter adapter, final ArrayAdapter<?> a, final int pos, final MapActivity activity,\n\t\t\t\t\t\t\t\t\t\t String category, List<RenderingRuleProperty> ps, final List<CommonPreference<Boolean>> prefs) {\n\t\tAlertDialog.Builder bld = new AlertDialog.Builder(activity);\n\t\tboolean[] checkedItems = new boolean[prefs.size()];\n\t\tfor (int i = 0; i < prefs.size(); i++) {\n\t\t\tcheckedItems[i] = prefs.get(i).get();\n\t\t}\n\n\t\tfinal boolean[] tempPrefs = new boolean[prefs.size()];\n\t\tfor (int i = 0; i < prefs.size(); i++) {\n\t\t\ttempPrefs[i] = prefs.get(i).get();\n\t\t}\n\t\tfinal String[] vals = new String[ps.size()];\n\t\tfor (int i = 0; i < ps.size(); i++) {\n\t\t\tRenderingRuleProperty p = ps.get(i);\n\t\t\tString propertyName = SettingsActivity.getStringPropertyName(activity, p.getAttrName(),\n\t\t\t\t\tp.getName());\n\t\t\tvals[i] = propertyName;\n\t\t}\n\n\t\tbld.setMultiChoiceItems(vals, checkedItems, new OnMultiChoiceClickListener() {\n\n\t\t\t@Override\n\t\t\tpublic void onClick(DialogInterface dialog, int which, boolean isChecked) {\n\t\t\t\ttempPrefs[which] = isChecked;\n\t\t\t}\n\t\t});\n\n\t\tbld.setTitle(category);\n\n\t\tbld.setNegativeButton(R.string.shared_string_cancel, null);\n\n\t\tbld.setPositiveButton(R.string.shared_string_ok, new DialogInterface.OnClickListener() {\n\t\t\tpublic void onClick(DialogInterface dialog, int whichButton) {\n\t\t\t\tfor (int i = 0; i < prefs.size(); i++) {\n\t\t\t\t\tprefs.get(i).set(tempPrefs[i]);\n\t\t\t\t}\n\t\t\t\tadapter.getItem(pos).setDescription(getDescription(prefs));\n\t\t\t\ta.notifyDataSetInvalidated();\n\t\t\t\trefreshMapComplete(activity);\n\t\t\t\tactivity.getMapLayers().updateLayers(activity.getMapView());\n\t\t\t}\n\t\t});\n\n\t\tbld.show();\n\t}","id":13625,"modified_method":"protected void showPreferencesDialog(final ContextMenuAdapter adapter, final ArrayAdapter<?> a, final int pos, final MapActivity activity,\n\t\t\t\t\t\t\t\t\t\t String category, List<RenderingRuleProperty> ps, final List<CommonPreference<Boolean>> prefs, final boolean useDescription) {\n\t\tAlertDialog.Builder bld = new AlertDialog.Builder(activity);\n\t\tboolean[] checkedItems = new boolean[prefs.size()];\n\t\tfor (int i = 0; i < prefs.size(); i++) {\n\t\t\tcheckedItems[i] = prefs.get(i).get();\n\t\t}\n\n\t\tfinal boolean[] tempPrefs = new boolean[prefs.size()];\n\t\tfor (int i = 0; i < prefs.size(); i++) {\n\t\t\ttempPrefs[i] = prefs.get(i).get();\n\t\t}\n\t\tfinal String[] vals = new String[ps.size()];\n\t\tfor (int i = 0; i < ps.size(); i++) {\n\t\t\tRenderingRuleProperty p = ps.get(i);\n\t\t\tString propertyName = SettingsActivity.getStringPropertyName(activity, p.getAttrName(),\n\t\t\t\t\tp.getName());\n\t\t\tvals[i] = propertyName;\n\t\t}\n\n\t\tbld.setMultiChoiceItems(vals, checkedItems, new OnMultiChoiceClickListener() {\n\n\t\t\t@Override\n\t\t\tpublic void onClick(DialogInterface dialog, int which, boolean isChecked) {\n\t\t\t\ttempPrefs[which] = isChecked;\n\t\t\t}\n\t\t});\n\n\t\tbld.setTitle(category);\n\n\t\tbld.setNegativeButton(R.string.shared_string_cancel, null);\n\n\t\tbld.setPositiveButton(R.string.shared_string_ok, new DialogInterface.OnClickListener() {\n\t\t\tpublic void onClick(DialogInterface dialog, int whichButton) {\n\t\t\t\tboolean selected = false;\n\t\t\t\tfor (int i = 0; i < prefs.size(); i++) {\n\t\t\t\t\tprefs.get(i).set(tempPrefs[i]);\n\t\t\t\t\tselected |= tempPrefs[i];\n\t\t\t\t}\n\t\t\t\tif(adapter != null) {\n\t\t\t\t\tif(useDescription) {\n\t\t\t\t\t\tadapter.getItem(pos).setDescription(getDescription(prefs));\n\t\t\t\t\t} else{\n\t\t\t\t\t\tadapter.getItem(pos).setSelected(selected);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ta.notifyDataSetInvalidated();\n\t\t\t\trefreshMapComplete(activity);\n\t\t\t\tactivity.getMapLayers().updateLayers(activity.getMapView());\n\t\t\t}\n\t\t});\n\n\t\tbld.show();\n\t}","commit_id":"3a03ce0cf36cf94019f72c2e038d8945e1ee93a3","url":"https://github.com/osmandapp/Osmand"},{"original_method":"public ContextMenuAdapter createListAdapter(final MapActivity ma) {\n\t\tContextMenuAdapter adapter = new ContextMenuAdapter();\n\t\tadapter.setDefaultLayoutId(R.layout.list_item_icon_and_menu);\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t.setTitleId(R.string.app_modes_choose, ma)\n\t\t\t\t.setLayout(R.layout.mode_toggles).createItem());\n\t\tadapter.setChangeAppModeListener(new OnClickListener() {\n\t\t\t@Override\n\t\t\tpublic void onClick() {\n\t\t\t\tma.getDashboard().updateListAdapter(createListAdapter(ma));\n\t\t\t}\n\t\t});\n\t\tcreateLayersItems(adapter, ma);\n\t\tcreateRenderingAttributeItems(adapter, ma);\n\n\t\treturn adapter;\n\t}","id":13626,"modified_method":"public ContextMenuAdapter createListAdapter(final MapActivity ma) {\n\t\tContextMenuAdapter adapter = new ContextMenuAdapter();\n\t\tadapter.setDefaultLayoutId(R.layout.list_item_icon_and_menu);\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t.setTitleId(R.string.app_modes_choose, ma)\n\t\t\t\t.setLayout(R.layout.mode_toggles).createItem());\n\t\tadapter.setChangeAppModeListener(new OnClickListener() {\n\t\t\t@Override\n\t\t\tpublic void onClick() {\n\t\t\t\tma.getDashboard().updateListAdapter(createListAdapter(ma));\n\t\t\t}\n\t\t});\n\t\tRenderingRulesStorage renderer = ma.getMyApplication().getRendererRegistry().getCurrentSelectedRenderer();\n\t\tList<RenderingRuleProperty> customRules = new ArrayList<>();\n\t\tif (renderer != null) {\n\t\t\tfor (RenderingRuleProperty p : renderer.PROPS.getCustomRules()) {\n\t\t\t\tif (!RenderingRuleStorageProperties.UI_CATEGORY_HIDDEN.equals(p.getCategory())) {\n\t\t\t\t\tcustomRules.add(p);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcreateLayersItems(customRules, adapter, ma);\n\t\tcreateRenderingAttributeItems(customRules, adapter, ma);\n\n\t\treturn adapter;\n\t}","commit_id":"3a03ce0cf36cf94019f72c2e038d8945e1ee93a3","url":"https://github.com/osmandapp/Osmand"},{"original_method":"private void createRenderingAttributeItems(final ContextMenuAdapter adapter, final MapActivity activity) {\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t.setTitleId(R.string.map_widget_map_rendering, activity)\n\t\t\t\t.setCategory(true)\n\t\t\t\t.setLayout(R.layout.list_group_title_with_switch).createItem());\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t.setTitleId(R.string.map_widget_renderer, activity)\n\t\t\t\t.setDescription(getRenderDescr(activity))\n\t\t\t\t.setLayout(R.layout.list_item_single_line_descrition_narrow)\n\t\t\t\t.setIcon(R.drawable.ic_map)\n\t\t\t\t.setListener(new ContextMenuAdapter.ItemClickListener() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onContextMenuClick(final ArrayAdapter<ContextMenuItem> ad,\n\t\t\t\t\t\t\t\t\t\t\t\t\t  int itemId, final int pos, boolean isChecked) {\n\t\t\t\t\t\tAlertDialog.Builder bld = new AlertDialog.Builder(activity);\n\t\t\t\t\t\tbld.setTitle(R.string.renderers);\n\t\t\t\t\t\tfinal OsmandApplication app = activity.getMyApplication();\n\t\t\t\t\t\tCollection<String> rendererNames = app.getRendererRegistry().getRendererNames();\n\t\t\t\t\t\tfinal String[] items = rendererNames.toArray(new String[rendererNames.size()]);\n\t\t\t\t\t\tfinal String[] visibleNames = new String[items.length];\n\t\t\t\t\t\tint selected = -1;\n\t\t\t\t\t\tfinal String selectedName = app.getRendererRegistry().getCurrentSelectedRenderer().getName();\n\t\t\t\t\t\tfor (int j = 0; j < items.length; j++) {\n\t\t\t\t\t\t\tif (items[j].equals(selectedName)) {\n\t\t\t\t\t\t\t\tselected = j;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvisibleNames[j] = items[j].replace('_', ' ').replace('-', ' ');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbld.setSingleChoiceItems(visibleNames, selected, new DialogInterface.OnClickListener() {\n\n\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\tpublic void onClick(DialogInterface dialog, int which) {\n\t\t\t\t\t\t\t\tString renderer = items[which];\n\t\t\t\t\t\t\t\tRenderingRulesStorage loaded = app.getRendererRegistry().getRenderer(renderer);\n\t\t\t\t\t\t\t\tif (loaded != null) {\n\t\t\t\t\t\t\t\t\tOsmandMapTileView view = activity.getMapView();\n\t\t\t\t\t\t\t\t\tview.getSettings().RENDERER.set(renderer);\n\t\t\t\t\t\t\t\t\tapp.getRendererRegistry().setCurrentSelectedRender(loaded);\n\t\t\t\t\t\t\t\t\trefreshMapComplete(activity);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tToast.makeText(app, R.string.renderer_load_exception, Toast.LENGTH_SHORT).show();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tadapter.getItem(pos).setDescription(getRenderDescr(activity));\n\t\t\t\t\t\t\t\tactivity.getDashboard().refreshContent(true);\n\t\t\t\t\t\t\t\tdialog.dismiss();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbld.show();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}).createItem());\n\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t.setTitleId(R.string.map_mode, activity)\n\t\t\t\t.setDescription(getDayNightDescr(activity))\n\t\t\t\t.setLayout(R.layout.list_item_single_line_descrition_narrow)\n\t\t\t\t.setIcon(getDayNightIcon(activity))\n\t\t\t\t.setListener(new ItemClickListener() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onContextMenuClick(final ArrayAdapter<ContextMenuItem> ad,\n\t\t\t\t\t\t\t\t\t\t\t\t\t  int itemId, final int pos, boolean isChecked) {\n\t\t\t\t\t\tfinal OsmandMapTileView view = activity.getMapView();\n\t\t\t\t\t\tAlertDialog.Builder bld = new AlertDialog.Builder(view.getContext());\n\t\t\t\t\t\tbld.setTitle(R.string.daynight);\n\t\t\t\t\t\tfinal String[] items = new String[OsmandSettings.DayNightMode.values().length];\n\t\t\t\t\t\tfor (int i = 0; i < items.length; i++) {\n\t\t\t\t\t\t\titems[i] = OsmandSettings.DayNightMode.values()[i].toHumanString(activity.getMyApplication());\n\t\t\t\t\t\t}\n\t\t\t\t\t\tint i = view.getSettings().DAYNIGHT_MODE.get().ordinal();\n\t\t\t\t\t\tbld.setSingleChoiceItems(items, i, new DialogInterface.OnClickListener() {\n\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\tpublic void onClick(DialogInterface dialog, int which) {\n\t\t\t\t\t\t\t\tview.getSettings().DAYNIGHT_MODE.set(OsmandSettings.DayNightMode.values()[which]);\n\t\t\t\t\t\t\t\trefreshMapComplete(activity);\n\t\t\t\t\t\t\t\tdialog.dismiss();\n\t\t\t\t\t\t\t\tactivity.getDashboard().refreshContent(true);\n\t\t\t\t\t\t\t\t//adapter.getItem(pos).setDescription(s, getDayNightDescr(activity));\n\t\t\t\t\t\t\t\t//ad.notifyDataSetInvalidated();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbld.show();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}).createItem());\n\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t.setTitleId(R.string.map_magnifier, activity)\n\t\t\t\t.setDescription(String.format(Locale.UK, \"%.0f\", 100f * activity.getMyApplication().getSettings().MAP_DENSITY.get()) + \" %\")\n\t\t\t\t.setLayout(R.layout.list_item_single_line_descrition_narrow)\n\t\t\t\t.setIcon(R.drawable.ic_action_map_magnifier)\n\t\t\t\t.setListener(new ContextMenuAdapter.ItemClickListener() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onContextMenuClick(final ArrayAdapter<ContextMenuItem> ad,\n\t\t\t\t\t\t\t\t\t\t\t\t\t  int itemId, final int pos, boolean isChecked) {\n\t\t\t\t\t\tfinal OsmandMapTileView view = activity.getMapView();\n\t\t\t\t\t\tfinal OsmandSettings.OsmandPreference<Float> mapDensity = view.getSettings().MAP_DENSITY;\n\t\t\t\t\t\tfinal AlertDialog.Builder bld = new AlertDialog.Builder(view.getContext());\n\t\t\t\t\t\tint p = (int) (mapDensity.get() * 100);\n\t\t\t\t\t\tfinal TIntArrayList tlist = new TIntArrayList(new int[]{33, 50, 75, 100, 150, 200, 300, 400});\n\t\t\t\t\t\tfinal List<String> values = new ArrayList<>();\n\t\t\t\t\t\tint i = -1;\n\t\t\t\t\t\tfor (int k = 0; k <= tlist.size(); k++) {\n\t\t\t\t\t\t\tfinal boolean end = k == tlist.size();\n\t\t\t\t\t\t\tif (i == -1) {\n\t\t\t\t\t\t\t\tif ((end || p < tlist.get(k))) {\n\t\t\t\t\t\t\t\t\tvalues.add(p + \" %\");\n\t\t\t\t\t\t\t\t\ti = k;\n\t\t\t\t\t\t\t\t} else if (p == tlist.get(k)) {\n\t\t\t\t\t\t\t\t\ti = k;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (k < tlist.size()) {\n\t\t\t\t\t\t\t\tvalues.add(tlist.get(k) + \" %\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (values.size() != tlist.size()) {\n\t\t\t\t\t\t\ttlist.insert(i, p);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbld.setTitle(R.string.map_magnifier);\n\t\t\t\t\t\tbld.setSingleChoiceItems(values.toArray(new String[values.size()]), i,\n\t\t\t\t\t\t\t\tnew DialogInterface.OnClickListener() {\n\t\t\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\t\t\tpublic void onClick(DialogInterface dialog, int which) {\n\t\t\t\t\t\t\t\t\t\tint p = tlist.get(which);\n\t\t\t\t\t\t\t\t\t\tmapDensity.set(p / 100.0f);\n\t\t\t\t\t\t\t\t\t\tview.setComplexZoom(view.getZoom(), view.getSettingsMapDensity());\n\t\t\t\t\t\t\t\t\t\tMapRendererContext mapContext = NativeCoreContext.getMapRendererContext();\n\t\t\t\t\t\t\t\t\t\tif (mapContext != null) {\n\t\t\t\t\t\t\t\t\t\t\tmapContext.updateMapSettings();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tadapter.getItem(pos).setDescription(String.format(Locale.UK,\n\t\t\t\t\t\t\t\t\t\t\t\t\"%.0f\", 100f * activity.getMyApplication().getSettings().MAP_DENSITY.get()) + \" %\");\n\t\t\t\t\t\t\t\t\t\tad.notifyDataSetInvalidated();\n\t\t\t\t\t\t\t\t\t\tdialog.dismiss();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\tbld.show();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}).createItem());\n\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t.setTitleId(R.string.text_size, activity)\n\t\t\t\t.setDescription(getScale(activity))\n\t\t\t\t.setLayout(R.layout.list_item_single_line_descrition_narrow)\n\t\t\t\t.setIcon(R.drawable.ic_action_map_text_size)\n\t\t\t\t.setListener(new ContextMenuAdapter.ItemClickListener() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onContextMenuClick(final ArrayAdapter<ContextMenuItem> ad,\n\t\t\t\t\t\t\t\t\t\t\t\t\t  int itemId, final int pos, boolean isChecked) {\n\t\t\t\t\t\tfinal OsmandMapTileView view = activity.getMapView();\n\t\t\t\t\t\tAlertDialog.Builder b = new AlertDialog.Builder(view.getContext());\n\t\t\t\t\t\t// test old descr as title\n\t\t\t\t\t\tb.setTitle(R.string.text_size);\n\t\t\t\t\t\tfinal Float[] txtValues = new Float[]{0.75f, 1f, 1.25f, 1.5f, 2f, 3f};\n\t\t\t\t\t\tint selected = -1;\n\t\t\t\t\t\tfinal String[] txtNames = new String[txtValues.length];\n\t\t\t\t\t\tfor (int i = 0; i < txtNames.length; i++) {\n\t\t\t\t\t\t\ttxtNames[i] = (int) (txtValues[i] * 100) + \" %\";\n\t\t\t\t\t\t\tif (Math.abs(view.getSettings().TEXT_SCALE.get() - txtValues[i]) < 0.1f) {\n\t\t\t\t\t\t\t\tselected = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tb.setSingleChoiceItems(txtNames, selected, new DialogInterface.OnClickListener() {\n\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\tpublic void onClick(DialogInterface dialog, int which) {\n\t\t\t\t\t\t\t\tview.getSettings().TEXT_SCALE.set(txtValues[which]);\n\t\t\t\t\t\t\t\trefreshMapComplete(activity);\n\t\t\t\t\t\t\t\tadapter.getItem(pos).setDescription(getScale(activity));\n\t\t\t\t\t\t\t\tad.notifyDataSetInvalidated();\n\t\t\t\t\t\t\t\tdialog.dismiss();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tb.show();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}).createItem());\n\n\t\tString localeDescr = activity.getMyApplication().getSettings().MAP_PREFERRED_LOCALE.get();\n\t\tlocaleDescr = localeDescr == null || localeDescr.equals(\"\") ?\n\t\t\t\tactivity.getString(R.string.local_map_names) : localeDescr;\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t.setTitleId(R.string.map_locale, activity)\n\t\t\t\t.setDescription(localeDescr)\n\t\t\t\t.setLayout(R.layout.list_item_single_line_descrition_narrow)\n\t\t\t\t.setIcon(R.drawable.ic_action_map_language)\n\t\t\t\t.setListener(new ContextMenuAdapter.ItemClickListener() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onContextMenuClick(final ArrayAdapter<ContextMenuItem> ad,\n\t\t\t\t\t\t\t\t\t\t\t\t\t  int itemId, final int pos, boolean isChecked) {\n\t\t\t\t\t\tfinal OsmandMapTileView view = activity.getMapView();\n\t\t\t\t\t\tAlertDialog.Builder b = new AlertDialog.Builder(view.getContext());\n\t\t\t\t\t\t// test old descr as title\n\t\t\t\t\t\tb.setTitle(R.string.map_preferred_locale);\n\t\t\t\t\t\tfinal String[] txtIds = getSortedMapNamesIds(activity, mapNamesIds, getMapNamesValues(activity, mapNamesIds));\n\t\t\t\t\t\tfinal String[] txtValues = getMapNamesValues(activity, txtIds);\n\t\t\t\t\t\tint selected = -1;\n\t\t\t\t\t\tfor (int i = 0; i < txtIds.length; i++) {\n\t\t\t\t\t\t\tif (view.getSettings().MAP_PREFERRED_LOCALE.get().equals(txtIds[i])) {\n\t\t\t\t\t\t\t\tselected = i;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tb.setSingleChoiceItems(txtValues, selected, new DialogInterface.OnClickListener() {\n\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\tpublic void onClick(DialogInterface dialog, int which) {\n\t\t\t\t\t\t\t\tview.getSettings().MAP_PREFERRED_LOCALE.set(txtIds[which]);\n\t\t\t\t\t\t\t\trefreshMapComplete(activity);\n\t\t\t\t\t\t\t\tString localeDescr = txtIds[which];\n\t\t\t\t\t\t\t\tlocaleDescr = localeDescr == null || localeDescr.equals(\"\") ?\n\t\t\t\t\t\t\t\t\t\tactivity.getString(R.string.local_map_names) : localeDescr;\n\t\t\t\t\t\t\t\tadapter.getItem(pos).setDescription(localeDescr);\n\t\t\t\t\t\t\t\tad.notifyDataSetInvalidated();\n\t\t\t\t\t\t\t\tdialog.dismiss();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tb.show();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}).createItem());\n\n\t\tRenderingRulesStorage renderer = activity.getMyApplication().getRendererRegistry().getCurrentSelectedRenderer();\n\t\tif (renderer != null) {\n\t\t\tList<RenderingRuleProperty> customRules = new ArrayList<>();\n\t\t\tfor (RenderingRuleProperty p : renderer.PROPS.getCustomRules()) {\n\t\t\t\tif (!RenderingRuleStorageProperties.UI_CATEGORY_HIDDEN.equals(p.getCategory())) {\n\t\t\t\t\tcustomRules.add(p);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcreateProperties(customRules, R.string.rendering_category_transport,\n\t\t\t\t\tR.drawable.ic_action_bus_dark, \"transport\", adapter, activity);\n\t\t\tcreateProperties(customRules, R.string.rendering_category_details,\n\t\t\t\t\tR.drawable.ic_action_layers_dark, \"details\", adapter, activity);\n\t\t\tcreateProperties(customRules, R.string.rendering_category_hide,\n\t\t\t\t\tR.drawable.ic_action_hide, \"hide\", adapter, activity);\n\t\t\tcreateProperties(customRules, R.string.rendering_category_routes,\n\t\t\t\t\tR.drawable.ic_action_map_routes, \"routes\", adapter, activity);\n\n\t\t\tif (customRules.size() > 0) {\n\t\t\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t\t\t.setTitleId(R.string.rendering_category_others, activity)\n\t\t\t\t\t\t.setCategory(true)\n\t\t\t\t\t\t.setLayout(R.layout.list_group_title_with_switch)\n\t\t\t\t\t\t.createItem());\n\t\t\t\tcreateCustomRenderingProperties(adapter, activity, customRules);\n\t\t\t}\n\t\t}\n\t}","id":13627,"modified_method":"private void createRenderingAttributeItems(List<RenderingRuleProperty> customRules,\n\t\t\tfinal ContextMenuAdapter adapter, final MapActivity activity) {\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder().setTitleId(R.string.map_widget_map_rendering, activity)\n\t\t\t\t.setCategory(true).setLayout(R.layout.list_group_title_with_switch).createItem());\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder().setTitleId(R.string.map_widget_renderer, activity)\n\t\t\t\t.setDescription(getRenderDescr(activity)).setLayout(R.layout.list_item_single_line_descrition_narrow)\n\t\t\t\t.setIcon(R.drawable.ic_map).setListener(new ContextMenuAdapter.ItemClickListener() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onContextMenuClick(final ArrayAdapter<ContextMenuItem> ad, int itemId,\n\t\t\t\t\t\t\tfinal int pos, boolean isChecked) {\n\t\t\t\t\t\tAlertDialog.Builder bld = new AlertDialog.Builder(activity);\n\t\t\t\t\t\tbld.setTitle(R.string.renderers);\n\t\t\t\t\t\tfinal OsmandApplication app = activity.getMyApplication();\n\t\t\t\t\t\tCollection<String> rendererNames = app.getRendererRegistry().getRendererNames();\n\t\t\t\t\t\tfinal String[] items = rendererNames.toArray(new String[rendererNames.size()]);\n\t\t\t\t\t\tfinal String[] visibleNames = new String[items.length];\n\t\t\t\t\t\tint selected = -1;\n\t\t\t\t\t\tfinal String selectedName = app.getRendererRegistry().getCurrentSelectedRenderer().getName();\n\t\t\t\t\t\tfor (int j = 0; j < items.length; j++) {\n\t\t\t\t\t\t\tif (items[j].equals(selectedName)) {\n\t\t\t\t\t\t\t\tselected = j;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvisibleNames[j] = items[j].replace('_', ' ').replace('-', ' ');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbld.setSingleChoiceItems(visibleNames, selected, new DialogInterface.OnClickListener() {\n\n\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\tpublic void onClick(DialogInterface dialog, int which) {\n\t\t\t\t\t\t\t\tString renderer = items[which];\n\t\t\t\t\t\t\t\tRenderingRulesStorage loaded = app.getRendererRegistry().getRenderer(renderer);\n\t\t\t\t\t\t\t\tif (loaded != null) {\n\t\t\t\t\t\t\t\t\tOsmandMapTileView view = activity.getMapView();\n\t\t\t\t\t\t\t\t\tview.getSettings().RENDERER.set(renderer);\n\t\t\t\t\t\t\t\t\tapp.getRendererRegistry().setCurrentSelectedRender(loaded);\n\t\t\t\t\t\t\t\t\trefreshMapComplete(activity);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tToast.makeText(app, R.string.renderer_load_exception, Toast.LENGTH_SHORT).show();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tadapter.getItem(pos).setDescription(getRenderDescr(activity));\n\t\t\t\t\t\t\t\tactivity.getDashboard().refreshContent(true);\n\t\t\t\t\t\t\t\tdialog.dismiss();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbld.show();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}).createItem());\n\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder().setTitleId(R.string.map_mode, activity)\n\t\t\t\t.setDescription(getDayNightDescr(activity)).setLayout(R.layout.list_item_single_line_descrition_narrow)\n\t\t\t\t.setIcon(getDayNightIcon(activity)).setListener(new ItemClickListener() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onContextMenuClick(final ArrayAdapter<ContextMenuItem> ad, int itemId,\n\t\t\t\t\t\t\tfinal int pos, boolean isChecked) {\n\t\t\t\t\t\tfinal OsmandMapTileView view = activity.getMapView();\n\t\t\t\t\t\tAlertDialog.Builder bld = new AlertDialog.Builder(view.getContext());\n\t\t\t\t\t\tbld.setTitle(R.string.daynight);\n\t\t\t\t\t\tfinal String[] items = new String[OsmandSettings.DayNightMode.values().length];\n\t\t\t\t\t\tfor (int i = 0; i < items.length; i++) {\n\t\t\t\t\t\t\titems[i] = OsmandSettings.DayNightMode.values()[i].toHumanString(activity\n\t\t\t\t\t\t\t\t\t.getMyApplication());\n\t\t\t\t\t\t}\n\t\t\t\t\t\tint i = view.getSettings().DAYNIGHT_MODE.get().ordinal();\n\t\t\t\t\t\tbld.setSingleChoiceItems(items, i, new DialogInterface.OnClickListener() {\n\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\tpublic void onClick(DialogInterface dialog, int which) {\n\t\t\t\t\t\t\t\tview.getSettings().DAYNIGHT_MODE.set(OsmandSettings.DayNightMode.values()[which]);\n\t\t\t\t\t\t\t\trefreshMapComplete(activity);\n\t\t\t\t\t\t\t\tdialog.dismiss();\n\t\t\t\t\t\t\t\tactivity.getDashboard().refreshContent(true);\n\t\t\t\t\t\t\t\t// adapter.getItem(pos).setDescription(s, getDayNightDescr(activity));\n\t\t\t\t\t\t\t\t// ad.notifyDataSetInvalidated();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbld.show();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}).createItem());\n\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t.setTitleId(R.string.map_magnifier, activity)\n\t\t\t\t.setDescription(\n\t\t\t\t\t\tString.format(Locale.UK, \"%.0f\",\n\t\t\t\t\t\t\t\t100f * activity.getMyApplication().getSettings().MAP_DENSITY.get())\n\t\t\t\t\t\t\t\t+ \" %\").setLayout(R.layout.list_item_single_line_descrition_narrow)\n\t\t\t\t.setIcon(R.drawable.ic_action_map_magnifier).setListener(new ContextMenuAdapter.ItemClickListener() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onContextMenuClick(final ArrayAdapter<ContextMenuItem> ad, int itemId,\n\t\t\t\t\t\t\tfinal int pos, boolean isChecked) {\n\t\t\t\t\t\tfinal OsmandMapTileView view = activity.getMapView();\n\t\t\t\t\t\tfinal OsmandSettings.OsmandPreference<Float> mapDensity = view.getSettings().MAP_DENSITY;\n\t\t\t\t\t\tfinal AlertDialog.Builder bld = new AlertDialog.Builder(view.getContext());\n\t\t\t\t\t\tint p = (int) (mapDensity.get() * 100);\n\t\t\t\t\t\tfinal TIntArrayList tlist = new TIntArrayList(new int[] { 33, 50, 75, 100, 150, 200, 300, 400 });\n\t\t\t\t\t\tfinal List<String> values = new ArrayList<>();\n\t\t\t\t\t\tint i = -1;\n\t\t\t\t\t\tfor (int k = 0; k <= tlist.size(); k++) {\n\t\t\t\t\t\t\tfinal boolean end = k == tlist.size();\n\t\t\t\t\t\t\tif (i == -1) {\n\t\t\t\t\t\t\t\tif ((end || p < tlist.get(k))) {\n\t\t\t\t\t\t\t\t\tvalues.add(p + \" %\");\n\t\t\t\t\t\t\t\t\ti = k;\n\t\t\t\t\t\t\t\t} else if (p == tlist.get(k)) {\n\t\t\t\t\t\t\t\t\ti = k;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (k < tlist.size()) {\n\t\t\t\t\t\t\t\tvalues.add(tlist.get(k) + \" %\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (values.size() != tlist.size()) {\n\t\t\t\t\t\t\ttlist.insert(i, p);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbld.setTitle(R.string.map_magnifier);\n\t\t\t\t\t\tbld.setSingleChoiceItems(values.toArray(new String[values.size()]), i,\n\t\t\t\t\t\t\t\tnew DialogInterface.OnClickListener() {\n\t\t\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\t\t\tpublic void onClick(DialogInterface dialog, int which) {\n\t\t\t\t\t\t\t\t\t\tint p = tlist.get(which);\n\t\t\t\t\t\t\t\t\t\tmapDensity.set(p / 100.0f);\n\t\t\t\t\t\t\t\t\t\tview.setComplexZoom(view.getZoom(), view.getSettingsMapDensity());\n\t\t\t\t\t\t\t\t\t\tMapRendererContext mapContext = NativeCoreContext.getMapRendererContext();\n\t\t\t\t\t\t\t\t\t\tif (mapContext != null) {\n\t\t\t\t\t\t\t\t\t\t\tmapContext.updateMapSettings();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tadapter.getItem(pos).setDescription(\n\t\t\t\t\t\t\t\t\t\t\t\tString.format(Locale.UK, \"%.0f\", 100f * activity.getMyApplication()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.getSettings().MAP_DENSITY.get())\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ \" %\");\n\t\t\t\t\t\t\t\t\t\tad.notifyDataSetInvalidated();\n\t\t\t\t\t\t\t\t\t\tdialog.dismiss();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\tbld.show();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}).createItem());\n\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder().setTitleId(R.string.text_size, activity)\n\t\t\t\t.setDescription(getScale(activity)).setLayout(R.layout.list_item_single_line_descrition_narrow)\n\t\t\t\t.setIcon(R.drawable.ic_action_map_text_size).setListener(new ContextMenuAdapter.ItemClickListener() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onContextMenuClick(final ArrayAdapter<ContextMenuItem> ad, int itemId,\n\t\t\t\t\t\t\tfinal int pos, boolean isChecked) {\n\t\t\t\t\t\tfinal OsmandMapTileView view = activity.getMapView();\n\t\t\t\t\t\tAlertDialog.Builder b = new AlertDialog.Builder(view.getContext());\n\t\t\t\t\t\t// test old descr as title\n\t\t\t\t\t\tb.setTitle(R.string.text_size);\n\t\t\t\t\t\tfinal Float[] txtValues = new Float[] { 0.75f, 1f, 1.25f, 1.5f, 2f, 3f };\n\t\t\t\t\t\tint selected = -1;\n\t\t\t\t\t\tfinal String[] txtNames = new String[txtValues.length];\n\t\t\t\t\t\tfor (int i = 0; i < txtNames.length; i++) {\n\t\t\t\t\t\t\ttxtNames[i] = (int) (txtValues[i] * 100) + \" %\";\n\t\t\t\t\t\t\tif (Math.abs(view.getSettings().TEXT_SCALE.get() - txtValues[i]) < 0.1f) {\n\t\t\t\t\t\t\t\tselected = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tb.setSingleChoiceItems(txtNames, selected, new DialogInterface.OnClickListener() {\n\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\tpublic void onClick(DialogInterface dialog, int which) {\n\t\t\t\t\t\t\t\tview.getSettings().TEXT_SCALE.set(txtValues[which]);\n\t\t\t\t\t\t\t\trefreshMapComplete(activity);\n\t\t\t\t\t\t\t\tadapter.getItem(pos).setDescription(getScale(activity));\n\t\t\t\t\t\t\t\tad.notifyDataSetInvalidated();\n\t\t\t\t\t\t\t\tdialog.dismiss();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tb.show();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}).createItem());\n\n\t\tString localeDescr = activity.getMyApplication().getSettings().MAP_PREFERRED_LOCALE.get();\n\t\tlocaleDescr = localeDescr == null || localeDescr.equals(\"\") ? activity.getString(R.string.local_map_names)\n\t\t\t\t: localeDescr;\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder().setTitleId(R.string.map_locale, activity)\n\t\t\t\t.setDescription(localeDescr).setLayout(R.layout.list_item_single_line_descrition_narrow)\n\t\t\t\t.setIcon(R.drawable.ic_action_map_language).setListener(new ContextMenuAdapter.ItemClickListener() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onContextMenuClick(final ArrayAdapter<ContextMenuItem> ad, int itemId,\n\t\t\t\t\t\t\tfinal int pos, boolean isChecked) {\n\t\t\t\t\t\tfinal OsmandMapTileView view = activity.getMapView();\n\t\t\t\t\t\tAlertDialog.Builder b = new AlertDialog.Builder(view.getContext());\n\t\t\t\t\t\t// test old descr as title\n\t\t\t\t\t\tb.setTitle(R.string.map_preferred_locale);\n\t\t\t\t\t\tfinal String[] txtIds = getSortedMapNamesIds(activity, mapNamesIds,\n\t\t\t\t\t\t\t\tgetMapNamesValues(activity, mapNamesIds));\n\t\t\t\t\t\tfinal String[] txtValues = getMapNamesValues(activity, txtIds);\n\t\t\t\t\t\tint selected = -1;\n\t\t\t\t\t\tfor (int i = 0; i < txtIds.length; i++) {\n\t\t\t\t\t\t\tif (view.getSettings().MAP_PREFERRED_LOCALE.get().equals(txtIds[i])) {\n\t\t\t\t\t\t\t\tselected = i;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tb.setSingleChoiceItems(txtValues, selected, new DialogInterface.OnClickListener() {\n\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\tpublic void onClick(DialogInterface dialog, int which) {\n\t\t\t\t\t\t\t\tview.getSettings().MAP_PREFERRED_LOCALE.set(txtIds[which]);\n\t\t\t\t\t\t\t\trefreshMapComplete(activity);\n\t\t\t\t\t\t\t\tString localeDescr = txtIds[which];\n\t\t\t\t\t\t\t\tlocaleDescr = localeDescr == null || localeDescr.equals(\"\") ? activity\n\t\t\t\t\t\t\t\t\t\t.getString(R.string.local_map_names) : localeDescr;\n\t\t\t\t\t\t\t\tadapter.getItem(pos).setDescription(localeDescr);\n\t\t\t\t\t\t\t\tad.notifyDataSetInvalidated();\n\t\t\t\t\t\t\t\tdialog.dismiss();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tb.show();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}).createItem());\n\n\t\tContextMenuItem props;\n\t\tprops = createProperties(customRules, R.string.rendering_category_transport, R.drawable.ic_action_bus_dark,\n\t\t\t\t\"transport\", adapter, activity, true);\n\t\tif(props != null) {\n\t\t\tadapter.addItem(props);\n\t\t}\n\t\tprops = createProperties(customRules, R.string.rendering_category_details, R.drawable.ic_action_layers_dark,\n\t\t\t\t\"details\", adapter, activity, true);\n\t\tif(props != null) {\n\t\t\tadapter.addItem(props);\n\t\t}\n\t\tprops = createProperties(customRules, R.string.rendering_category_hide, R.drawable.ic_action_hide, \"hide\",\n\t\t\t\tadapter, activity, true);\n\t\tif(props != null) {\n\t\t\tadapter.addItem(props);\n\t\t}\n\t\tprops = createProperties(customRules, R.string.rendering_category_routes, R.drawable.ic_action_map_routes,\n\t\t\t\t\"routes\", adapter, activity, true);\n\t\tif(props != null) {\n\t\t\tadapter.addItem(props);\n\t\t}\n\n\t\tif (customRules.size() > 0) {\n\t\t\tadapter.addItem(new ContextMenuItem.ItemBuilder().setTitleId(R.string.rendering_category_others, activity)\n\t\t\t\t\t.setCategory(true).setLayout(R.layout.list_group_title_with_switch).createItem());\n\t\t\tcreateCustomRenderingProperties(adapter, activity, customRules);\n\t\t}\n\t}","commit_id":"3a03ce0cf36cf94019f72c2e038d8945e1ee93a3","url":"https://github.com/osmandapp/Osmand"},{"original_method":"/**\n\t * Reaktivates a task.\n\t * @param cms The cms-object.\n\t * @param int taskid The id of the task.\n\t * @param agentName The name of the new editor for this task.\n\t * @param roleName The name of the new role for the user.\n\t * @param taskName The new name of the task.\n\t * @param taskcomment The new comment for this task.\n\t * @param timeoutString The new timeout-date as a string in the following format:\n\t * \"dd.mm.yyyy\"\n\t * @param priorityString the new priority as String (\"1\" = high, \n\t * \"2\" = normal or \"3\" = low)\n\t * @param paraAcceptation controls if a message should be send by acceptation. (\"checked\" | \"\")\n\t * @param paraAll controls if a message should be send to all users in a role. (\"checked\" | \"\")\n\t * @param paraCompletion controls if a message should be send by completing this task. (\"checked\" | \"\")\n\t * @param paraDelivery controls if a message should be send by delivering a task. (\"checked\" | \"\")\n\t * @exception CmsException Throws CmsExceptions, that are be \n\t * thrown in calling methods.\n\t */\n\tpublic static void reakt(A_CmsObject cms, int taskid, \n\t\t\t\t\t\t\t String agentName, String roleName, String taskName, \n\t\t\t\t\t\t\t String taskcomment, String timeoutString, \n\t\t\t\t\t\t\t String priorityString, String paraAcceptation,\n\t\t\t\t\t\t\t String paraAll, String paraCompletion, String paraDelivery) \n\t\tthrows CmsException {\n\t\tCmsXmlLanguageFile lang = new CmsXmlLanguageFile(cms);\n\t\tA_CmsTask task = cms.readTask(taskid);\n\t\tif( roleName.equals(C_ALL_ROLES) ) {\n\t\t\troleName = cms.readUser(agentName).getDefaultGroup().getName();\n\t\t}\n\t\tcms.setName(taskid, taskName);\n\t\t\t\t\n\t\t// try to reaktivate the task\n\t\tcms.reaktivateTask(taskid);\n\t\tint priority = Integer.parseInt(priorityString);\n\t\tcms.setPriority(taskid, priority);\n\t\t// create a long from the overgiven date.\n\t\tString splittetDate[] = Utils.split(timeoutString, \".\");\n\t\tGregorianCalendar cal = new GregorianCalendar(Integer.parseInt(splittetDate[2]),\n\t\t\t\t\t\t\t\t\t\t\t\t\t  Integer.parseInt(splittetDate[1]) - 1,\n\t\t\t\t\t\t\t\t\t\t\t\t\t  Integer.parseInt(splittetDate[0]), 0, 0, 0);\n\t\tlong timeout = cal.getTime().getTime();\n\t\tcms.setTimeout(taskid, timeout);\n\t\t\t\t    \t\t\n\t\tcms.setTaskPar(taskid,C_TASKPARA_ACCEPTATION, paraAcceptation);\n\t\tcms.setTaskPar(taskid,C_TASKPARA_ALL, paraAll);\n\t\tcms.setTaskPar(taskid,C_TASKPARA_COMPLETION, paraCompletion);\n\t\tcms.setTaskPar(taskid,C_TASKPARA_DELIVERY, paraDelivery);\n\t\t\t\t\n\t\tcms.forwardTask(taskid, roleName, agentName);\n\t\t\t\t\n\t\tString comment = lang.getLanguageValue(\"task.label.forrole\") + \": \" + roleName + \"\\n\";\n\t\tcomment += lang.getLanguageValue(\"task.label.editor\") + \": \" +  Utils.getFullName(cms.readUser(agentName)) + \"\\n\";\n\t\tcomment += taskcomment;\n\t\tcms.writeTaskLog(task.getId(), comment, C_TASKLOGTYPE_REACTIVATED);\n\t\t\n\t\t// send an email\n\t\tString content=lang.getLanguageValue(\"task.email.reakt.content\");\n\t\tString subject=lang.getLanguageValue(\"task.email.reakt.subject\");\n\t\tA_CmsUser[] users={cms.readAgent(task)};\n\t\tCmsMail mail=new CmsMail(cms,cms.readOwner(task),users,subject,content);\n\t\t// if \"Alle Rollenmitglieder von Aufgabe Benachrichtigen\" checkbox is selected.\n\t\tif (cms.getTaskPar(task.getId(),C_TASKPARA_ALL)!=null) {\n\t\t\tmail=new CmsMail(cms,cms.readOwner(task),cms.readGroup(task),subject,content);\n\t\t}\n\t\tmail.start();\n\t}","id":13628,"modified_method":"/**\n\t * Reaktivates a task.\n\t * @param cms The cms-object.\n\t * @param int taskid The id of the task.\n\t * @param agentName The name of the new editor for this task.\n\t * @param roleName The name of the new role for the user.\n\t * @param taskName The new name of the task.\n\t * @param taskcomment The new comment for this task.\n\t * @param timeoutString The new timeout-date as a string in the following format:\n\t * \"dd.mm.yyyy\"\n\t * @param priorityString the new priority as String (\"1\" = high, \n\t * \"2\" = normal or \"3\" = low)\n\t * @param paraAcceptation controls if a message should be send by acceptation. (\"checked\" | \"\")\n\t * @param paraAll controls if a message should be send to all users in a role. (\"checked\" | \"\")\n\t * @param paraCompletion controls if a message should be send by completing this task. (\"checked\" | \"\")\n\t * @param paraDelivery controls if a message should be send by delivering a task. (\"checked\" | \"\")\n\t * @exception CmsException Throws CmsExceptions, that are be \n\t * thrown in calling methods.\n\t */\n\tpublic static void reakt(A_CmsObject cms, int taskid, \n\t\t\t\t\t\t\t String agentName, String roleName, String taskName, \n\t\t\t\t\t\t\t String taskcomment, String timeoutString, \n\t\t\t\t\t\t\t String priorityString, String paraAcceptation,\n\t\t\t\t\t\t\t String paraAll, String paraCompletion, String paraDelivery) \n\t\tthrows CmsException {\n\t\tCmsXmlLanguageFile lang = new CmsXmlLanguageFile(cms);\n\t\tA_CmsTask task = cms.readTask(taskid);\n\t\tif( roleName.equals(C_ALL_ROLES) ) {\n\t\t\troleName = cms.readUser(agentName).getDefaultGroup().getName();\n\t\t}\n\t\tcms.setName(taskid, taskName);\n\t\t\t\t\n\t\t// try to reaktivate the task\n\t\tcms.reaktivateTask(taskid);\n\t\tint priority = Integer.parseInt(priorityString);\n\t\tcms.setPriority(taskid, priority);\n\t\t// create a long from the overgiven date.\n\t\tString splittetDate[] = Utils.split(timeoutString, \".\");\n\t\tGregorianCalendar cal = new GregorianCalendar(Integer.parseInt(splittetDate[2]),\n\t\t\t\t\t\t\t\t\t\t\t\t\t  Integer.parseInt(splittetDate[1]) - 1,\n\t\t\t\t\t\t\t\t\t\t\t\t\t  Integer.parseInt(splittetDate[0]), 0, 0, 0);\n\t\tlong timeout = cal.getTime().getTime();\n\t\tcms.setTimeout(taskid, timeout);\n\t\t\t\t    \t\t\n\t\tcms.setTaskPar(taskid,C_TASKPARA_ACCEPTATION, paraAcceptation);\n\t\tcms.setTaskPar(taskid,C_TASKPARA_ALL, paraAll);\n\t\tcms.setTaskPar(taskid,C_TASKPARA_COMPLETION, paraCompletion);\n\t\tcms.setTaskPar(taskid,C_TASKPARA_DELIVERY, paraDelivery);\n\t\t\t\t\n\t\tcms.forwardTask(taskid, roleName, agentName);\n\t\t\t\t\n\t\tString comment = lang.getLanguageValue(\"task.label.forrole\") + \": \" + roleName + \"\\n\";\n\t\tcomment += lang.getLanguageValue(\"task.label.editor\") + \": \" +  Utils.getFullName(cms.readUser(agentName)) + \"\\n\";\n\t\tcomment += taskcomment;\n\t\tcms.writeTaskLog(task.getId(), comment, C_TASKLOGTYPE_REACTIVATED);\n\t\t\n\t\t// send an email\n\t    StringBuffer contentBuf = new StringBuffer(lang.getLanguageValue(\"task.email.reakt.content\"));\n        contentBuf.append(\"\\n\");\n        contentBuf.append(lang.getLanguageValue(\"task.label.project\"));\n        contentBuf.append(\": \");            \n        String projectname = \"?\";\n\t    try {\n\t    \tprojectname = cms.readTask(task.getRoot()).getName();\n\t    } catch(Exception exc) {\n\t    \t// no root?!\n\t    }\n        contentBuf.append(projectname);\n        contentBuf.append(\"\\n\");\n        contentBuf.append(lang.getLanguageValue(\"task.label.task\"));\n        contentBuf.append(\": \");            \n        contentBuf.append(task.getName());     \n\t\tString subject=lang.getLanguageValue(\"task.email.reakt.subject\");\n\t\tA_CmsUser[] users={cms.readAgent(task)};\n\t\tCmsMail mail=new CmsMail(cms,cms.readOwner(task),users,subject,contentBuf.toString());\n\t\t// if \"Alle Rollenmitglieder von Aufgabe Benachrichtigen\" checkbox is selected.\n\t\tif (cms.getTaskPar(task.getId(),C_TASKPARA_ALL)!=null) {\n\t\t\tmail=new CmsMail(cms,cms.readOwner(task),cms.readGroup(task),subject,contentBuf.toString());\n\t\t}\n\t\tmail.start();\n\t}","commit_id":"72529d27ad7294ec58c5f286f2c9af112423a0a8","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n\t * Creates a new task.\n\t * @param cms The cms-object.\n\t * @param agentName The name of the new editor for this task.\n\t * @param roleName The name of the new role for the user.\n\t * @param taskName The new name of the task.\n\t * @param taskcomment The new comment for this task.\n\t * @param timeoutString The new timeout-date as a string in the following format:\n\t * \"dd.mm.yyyy\"\n\t * @param priorityString the new priority as String (\"1\" = high, \n\t * \"2\" = normal or \"3\" = low)\n\t * @param paraAcceptation controls if a message should be send by acceptation. (\"checked\" | \"\")\n\t * @param paraAll controls if a message should be send to all users in a role. (\"checked\" | \"\")\n\t * @param paraCompletion controls if a message should be send by completing this task. (\"checked\" | \"\")\n\t * @param paraDelivery controls if a message should be send by delivering a task. (\"checked\" | \"\")\n\t * @exception CmsException Throws CmsExceptions, that are be \n\t * thrown in calling methods.\n\t */\n\tpublic static void create(A_CmsObject cms, \n\t\t\t\t\t\t\t String agentName, String roleName, String taskName, \n\t\t\t\t\t\t\t String taskcomment, String timeoutString, \n\t\t\t\t\t\t\t String priorityString, String paraAcceptation,\n\t\t\t\t\t\t\t String paraAll, String paraCompletion, String paraDelivery) \n\t\tthrows CmsException {\n\t\t\n\t\tCmsXmlLanguageFile lang = new CmsXmlLanguageFile(cms);\n\t\tif( roleName.equals(C_ALL_ROLES) ) {\n\t\t\troleName = cms.readUser(agentName).getDefaultGroup().getName();\n\t\t}\n\t\t\n\t\t// try to create the task\n\t\tint priority = Integer.parseInt(priorityString);\n\t\t// create a long from the overgiven date.\n\t\tString splittetDate[] = Utils.split(timeoutString, \".\");\n\t\tGregorianCalendar cal = new GregorianCalendar(Integer.parseInt(splittetDate[2]),\n\t\t\t\t\t\t\t\t\t\t\t\t\t  Integer.parseInt(splittetDate[1]) - 1,\n\t\t\t\t\t\t\t\t\t\t\t\t\t  Integer.parseInt(splittetDate[0]), 0, 0, 0);\n\t\tlong timeout = cal.getTime().getTime();\n        \n\t\tA_CmsTask task = cms.createTask(agentName, roleName, taskName, \n\t\t\t\t\t\t\t\t\t\ttaskcomment, timeout, priority);\n\t\tcms.setTaskPar(task.getId(),C_TASKPARA_ACCEPTATION, paraAcceptation);\n\t\tcms.setTaskPar(task.getId(),C_TASKPARA_ALL, paraAll);\n\t\tcms.setTaskPar(task.getId(),C_TASKPARA_COMPLETION, paraCompletion);\n\t\tcms.setTaskPar(task.getId(),C_TASKPARA_DELIVERY, paraDelivery);\n\t\tString comment = lang.getLanguageValue(\"task.label.forrole\") + \": \" + roleName + \"\\n\";\n\t\tcomment += lang.getLanguageValue(\"task.label.editor\") + \": \" +  Utils.getFullName(cms.readUser(agentName)) + \"\\n\";\n\t\tcomment += taskcomment;\n\t\t\n\t\tcms.writeTaskLog(task.getId(), comment, C_TASKLOGTYPE_CREATED);\n\t\t// send an email\n\t\t\n\t\t// per default send a mail from task's organizer to task's recipient.\n\t\t\n\t\tString content=lang.getLanguageValue(\"task.email.create.content\");\n\t\tString subject=lang.getLanguageValue(\"task.email.create.subject\");\n\t\tA_CmsUser[] users={cms.readAgent(task)};\n\t\tCmsMail mail=new CmsMail(cms,cms.readOwner(task),users,subject,content);\n\t\t\n\t\t// if \"Alle Rollenmitglieder von Aufgabe Benachrichtigen\" checkbox is selected.\n\t\tif (cms.getTaskPar(task.getId(),C_TASKPARA_ALL)!=null) {\n\t\t\tmail=new CmsMail(cms,cms.readOwner(task),cms.readGroup(task),subject,content);\n\t\t}\n\t\t\n\t\tmail.start();\n\t\t\n\t}","id":13629,"modified_method":"/**\n\t * Creates a new task.\n\t * @param cms The cms-object.\n\t * @param agentName The name of the new editor for this task.\n\t * @param roleName The name of the new role for the user.\n\t * @param taskName The new name of the task.\n\t * @param taskcomment The new comment for this task.\n\t * @param timeoutString The new timeout-date as a string in the following format:\n\t * \"dd.mm.yyyy\"\n\t * @param priorityString the new priority as String (\"1\" = high, \n\t * \"2\" = normal or \"3\" = low)\n\t * @param paraAcceptation controls if a message should be send by acceptation. (\"checked\" | \"\")\n\t * @param paraAll controls if a message should be send to all users in a role. (\"checked\" | \"\")\n\t * @param paraCompletion controls if a message should be send by completing this task. (\"checked\" | \"\")\n\t * @param paraDelivery controls if a message should be send by delivering a task. (\"checked\" | \"\")\n\t * @exception CmsException Throws CmsExceptions, that are be \n\t * thrown in calling methods.\n\t */\n\tpublic static void create(A_CmsObject cms, \n\t\t\t\t\t\t\t String agentName, String roleName, String taskName, \n\t\t\t\t\t\t\t String taskcomment, String timeoutString, \n\t\t\t\t\t\t\t String priorityString, String paraAcceptation,\n\t\t\t\t\t\t\t String paraAll, String paraCompletion, String paraDelivery) \n\t\tthrows CmsException {\n\t\t\n\t\tCmsXmlLanguageFile lang = new CmsXmlLanguageFile(cms);\n\t\tif( roleName.equals(C_ALL_ROLES) ) {\n\t\t\troleName = cms.readUser(agentName).getDefaultGroup().getName();\n\t\t}\n\t\t\n\t\t// try to create the task\n\t\tint priority = Integer.parseInt(priorityString);\n\t\t// create a long from the overgiven date.\n\t\tString splittetDate[] = Utils.split(timeoutString, \".\");\n\t\tGregorianCalendar cal = new GregorianCalendar(Integer.parseInt(splittetDate[2]),\n\t\t\t\t\t\t\t\t\t\t\t\t\t  Integer.parseInt(splittetDate[1]) - 1,\n\t\t\t\t\t\t\t\t\t\t\t\t\t  Integer.parseInt(splittetDate[0]), 0, 0, 0);\n\t\tlong timeout = cal.getTime().getTime();\n        \n\t\tA_CmsTask task = cms.createTask(agentName, roleName, taskName, \n\t\t\t\t\t\t\t\t\t\ttaskcomment, timeout, priority);\n\t\tcms.setTaskPar(task.getId(),C_TASKPARA_ACCEPTATION, paraAcceptation);\n\t\tcms.setTaskPar(task.getId(),C_TASKPARA_ALL, paraAll);\n\t\tcms.setTaskPar(task.getId(),C_TASKPARA_COMPLETION, paraCompletion);\n\t\tcms.setTaskPar(task.getId(),C_TASKPARA_DELIVERY, paraDelivery);\n\t\tString comment = lang.getLanguageValue(\"task.label.forrole\") + \": \" + roleName + \"\\n\";\n\t\tcomment += lang.getLanguageValue(\"task.label.editor\") + \": \" +  Utils.getFullName(cms.readUser(agentName)) + \"\\n\";\n\t\tcomment += taskcomment;\n\t\t\n\t\tcms.writeTaskLog(task.getId(), comment, C_TASKLOGTYPE_CREATED);\n\t\t// send an email\n\t\t\n\t\t// per default send a mail from task's organizer to task's recipient.\n\t\tStringBuffer contentBuf = new StringBuffer(lang.getLanguageValue(\"task.email.create.content\"));\n        contentBuf.append(\"\\n\");\n        contentBuf.append(lang.getLanguageValue(\"task.label.project\"));\n        contentBuf.append(\": \");            \n        String projectname = \"?\";\n\t\ttry {\n\t\t\tprojectname = cms.readTask(task.getRoot()).getName();\n\t\t} catch(Exception exc) {\n\t\t\t// no root?!\n\t\t}\n        contentBuf.append(projectname);\n        contentBuf.append(\"\\n\");\n        contentBuf.append(lang.getLanguageValue(\"task.label.task\"));\n        contentBuf.append(\": \");            \n        contentBuf.append(task.getName());            \n        contentBuf.append(\"\\n\");\n        contentBuf.append(lang.getLanguageValue(\"task.label.actuator\"));\n        contentBuf.append(\": \");            \n        contentBuf.append(Utils.getFullName(cms.readOwner(task)));            \t\t\n\t\tString subject=lang.getLanguageValue(\"task.email.create.subject\");\n\t\tA_CmsUser[] users={cms.readAgent(task)};\n\t\tCmsMail mail=new CmsMail(cms,cms.readOwner(task),users,subject,contentBuf.toString());\n\t\t\n\t\t// if \"Alle Rollenmitglieder von Aufgabe Benachrichtigen\" checkbox is selected.\n\t\tif (cms.getTaskPar(task.getId(),C_TASKPARA_ALL)!=null) {\n\t\t\tmail=new CmsMail(cms,cms.readOwner(task),cms.readGroup(task),subject,contentBuf.toString());\n\t\t}\n\t\t\n\t\tmail.start();\n\t\t\n\t}","commit_id":"72529d27ad7294ec58c5f286f2c9af112423a0a8","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n\t * Ends a task.\n\t * @param cms The cms-object.\n\t * @param int taskid The id of the task.\n\t * @exception CmsException Throws CmsExceptions, that are be \n\t * thrown in calling methods.\n\t */\n\tpublic static void end(A_CmsObject cms, int taskid) \n\t\tthrows CmsException {\n\t\tcms.endTask(taskid);\n\t\tString comment = \"\";\n\t\tcms.writeTaskLog(taskid, comment, C_TASKLOGTYPE_OK);\n\t\t// send an email if \"Benachrichtigung bei Abhacken\" was selected.\n\t\tCmsXmlLanguageFile lang = new CmsXmlLanguageFile(cms);\n\t\tA_CmsTask task = cms.readTask(taskid);\n\t\tif (cms.getTaskPar(task.getId(),C_TASKPARA_COMPLETION)!=null) {\t\n\t\t\tString content=lang.getLanguageValue(\"task.email.end.content\");\n\t\t\tString subject=lang.getLanguageValue(\"task.email.end.subject\");\n\t\t\tA_CmsUser[] users={cms.readOwner(task)};\n\t\t\tCmsMail mail=new CmsMail(cms,cms.readAgent(task),users,subject,content);\n\t\t\tmail.start();\n\t\t}\n\t}","id":13630,"modified_method":"/**\n\t * Ends a task.\n\t * @param cms The cms-object.\n\t * @param int taskid The id of the task.\n\t * @exception CmsException Throws CmsExceptions, that are be \n\t * thrown in calling methods.\n\t */\n\tpublic static void end(A_CmsObject cms, int taskid) \n\t\tthrows CmsException {\n\t\tcms.endTask(taskid);\n\t\tString comment = \"\";\n\t\tcms.writeTaskLog(taskid, comment, C_TASKLOGTYPE_OK);\n\t\t// send an email if \"Benachrichtigung bei Abhacken\" was selected.\n\t\tCmsXmlLanguageFile lang = new CmsXmlLanguageFile(cms);\n\t\tA_CmsTask task = cms.readTask(taskid);\n\t\tif (cms.getTaskPar(task.getId(),C_TASKPARA_COMPLETION)!=null) {\t\n\t        StringBuffer contentBuf = new StringBuffer(lang.getLanguageValue(\"task.email.end.content\"));\n            contentBuf.append(\"\\n\");\n            contentBuf.append(lang.getLanguageValue(\"task.label.project\"));\n            contentBuf.append(\": \");            \n            String projectname = \"?\";\n\t        try {\n\t        \tprojectname = cms.readTask(task.getRoot()).getName();\n\t        } catch(Exception exc) {\n\t        \t// no root?!\n\t        }\n            contentBuf.append(projectname);\n            contentBuf.append(\"\\n\");\n            contentBuf.append(lang.getLanguageValue(\"task.label.task\"));\n            contentBuf.append(\": \");            \n            contentBuf.append(task.getName());     \n            contentBuf.append(\"\\n\");\n            contentBuf.append(lang.getLanguageValue(\"task.label.taskfor\"));\n            contentBuf.append(\": \");            \n            contentBuf.append(Utils.getFullName(cms.readOriginalAgent(task)));             \n            contentBuf.append(\"\\n\");\n            contentBuf.append(lang.getLanguageValue(\"task.label.editor\"));\n            contentBuf.append(\": \");            \n            contentBuf.append(Utils.getFullName(cms.readAgent(task)));             \n\t\t\tString subject=lang.getLanguageValue(\"task.email.end.subject\");\n\t\t\tA_CmsUser[] users={cms.readOwner(task)};\n\t\t\tCmsMail mail=new CmsMail(cms,cms.readAgent(task),users,subject,contentBuf.toString());\n\t\t\tmail.start();\n\t\t}\n\t}","commit_id":"72529d27ad7294ec58c5f286f2c9af112423a0a8","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n\t * Takes a task. The calling user is now the agent for this task.\n\t * @param cms The cms-object.\n\t * @param int taskid The id of the task.\n\t * @exception CmsException Throws CmsExceptions, that are be \n\t * thrown in calling methods.\n\t */\n\tpublic static void take(A_CmsObject cms, int taskid) \n\t\tthrows CmsException {\n\t\tCmsXmlLanguageFile lang = new CmsXmlLanguageFile(cms);\n\t\tA_CmsRequestContext context = cms.getRequestContext();\n\t\tA_CmsTask task = cms.readTask(taskid);\n\t\tA_CmsUser newEditor = context.currentUser();\n\t\tA_CmsGroup oldRole = cms.readGroup(task);\n\t\t// has the user the correct role?\n\t\tif(cms.userInGroup(newEditor.getName(), oldRole.getName())) {\n\t\t\tcms.forwardTask(taskid, oldRole.getName(), newEditor.getName());\n\t\t\tString comment = lang.getLanguageValue(\"task.dialog.take.logmessage\");\n\t\t\tcomment += \" \" + Utils.getFullName(newEditor);\n\t\t\tcms.writeTaskLog(taskid, comment, C_TASKLOGTYPE_TAKE);\n\t\t}\t\t\n\t\t\n\t\t// send an email\t\t\n\t\tString content=lang.getLanguageValue(\"task.email.take.content\");\n\t\tString subject=lang.getLanguageValue(\"task.email.take.subject\");\n\t\tA_CmsUser[] users={cms.readAgent(task)};\n\t\tCmsMail mail=new CmsMail(cms,cms.readOwner(task),users,subject,content);\n\t\tmail.start();\n\t}","id":13631,"modified_method":"/**\n\t * Takes a task. The calling user is now the agent for this task.\n\t * @param cms The cms-object.\n\t * @param int taskid The id of the task.\n\t * @exception CmsException Throws CmsExceptions, that are be \n\t * thrown in calling methods.\n\t */\n\tpublic static void take(A_CmsObject cms, int taskid) \n\t\tthrows CmsException {\n\t\tCmsXmlLanguageFile lang = new CmsXmlLanguageFile(cms);\n\t\tA_CmsRequestContext context = cms.getRequestContext();\n\t\tA_CmsTask task = cms.readTask(taskid);\n\t\tA_CmsUser newEditor = context.currentUser();\n\t\tA_CmsGroup oldRole = cms.readGroup(task);\n\t\t// has the user the correct role?\n\t\tif(cms.userInGroup(newEditor.getName(), oldRole.getName())) {\n\t\t\tcms.forwardTask(taskid, oldRole.getName(), newEditor.getName());\n\t\t\tString comment = lang.getLanguageValue(\"task.dialog.take.logmessage\");\n\t\t\tcomment += \" \" + Utils.getFullName(newEditor);\n\t\t\tcms.writeTaskLog(taskid, comment, C_TASKLOGTYPE_TAKE);\n\t\t}\t\t\n\t\t\n\t\t// send an email\t\t\n\t\tStringBuffer contentBuf = new StringBuffer(lang.getLanguageValue(\"task.email.take.content\"));\n        contentBuf.append(\"\\n\");\n        contentBuf.append(lang.getLanguageValue(\"task.label.project\"));\n        contentBuf.append(\": \");            \n        String projectname = \"?\";\n\t\ttry {\n\t\t\tprojectname = cms.readTask(task.getRoot()).getName();\n\t\t} catch(Exception exc) {\n\t\t\t// no root?!\n\t\t}\n        contentBuf.append(projectname);\n        contentBuf.append(\"\\n\");\n        contentBuf.append(lang.getLanguageValue(\"task.label.task\"));\n        contentBuf.append(\": \");            \n        contentBuf.append(task.getName());     \n        contentBuf.append(\"\\n\");\n        contentBuf.append(lang.getLanguageValue(\"task.label.taskfor\"));\n        contentBuf.append(\": \");            \n        contentBuf.append(Utils.getFullName(cms.readAgent(task)));             \n\t\tString subject=lang.getLanguageValue(\"task.email.take.subject\");\n\t\tA_CmsUser[] users={cms.readAgent(task)};\n\t\tCmsMail mail=new CmsMail(cms,cms.readOwner(task),users,subject,contentBuf.toString());\n\t\tmail.start();\n\t}","commit_id":"72529d27ad7294ec58c5f286f2c9af112423a0a8","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n\t * Sends a message to the editor of the task.\n\t * @param cms The cms-object.\n\t * @param int taskid The id of the task.\n\t * @param message The text of the message.\n\t * @exception CmsException Throws CmsExceptions, that are be \n\t * thrown in calling methods.\n\t */\n\tpublic static void message(A_CmsObject cms, int taskid, String message)\n\t\tthrows CmsException {\n\t\tCmsXmlLanguageFile lang = new CmsXmlLanguageFile(cms);\n\t\tA_CmsTask task = cms.readTask(taskid);\n\t\tString comment = lang.getLanguageValue(\"task.dialog.message.head\") + \" \";\n\t\tif( (message != null) && (message.length() != 0)) {\n\t\t\tcomment += Utils.getFullName(cms.readAgent(task)) + \"\\n\";\n\t\t\tcomment += message;\n\t\t\tcms.writeTaskLog(taskid, comment, C_TASKLOGTYPE_CALL);\n\t\t}\n\t\t\n\t\t// send an email \n\t\tString content=lang.getLanguageValue(\"task.email.message.content\");\n\t\tString subject=lang.getLanguageValue(\"task.email.message.subject\");\n\t\tA_CmsUser[] users={cms.readAgent(task)};\n\t\tCmsMail mail=new CmsMail(cms,cms.readOwner(task),users,subject,content);\n\t\tmail.start();\n\t}","id":13632,"modified_method":"/**\n\t * Sends a message to the editor of the task.\n\t * @param cms The cms-object.\n\t * @param int taskid The id of the task.\n\t * @param message The text of the message.\n\t * @exception CmsException Throws CmsExceptions, that are be \n\t * thrown in calling methods.\n\t */\n\tpublic static void message(A_CmsObject cms, int taskid, String message)\n\t\tthrows CmsException {\n\t\tCmsXmlLanguageFile lang = new CmsXmlLanguageFile(cms);\n\t\tA_CmsTask task = cms.readTask(taskid);\n\t\tString comment = lang.getLanguageValue(\"task.dialog.message.head\") + \" \";\n\t\tif( (message != null) && (message.length() != 0)) {\n\t\t\tcomment += Utils.getFullName(cms.readAgent(task)) + \"\\n\";\n\t\t\tcomment += message;\n\t\t\tcms.writeTaskLog(taskid, comment, C_TASKLOGTYPE_CALL);\n\t\t}\n\t\t\n\t\t// send an email \n\t    StringBuffer contentBuf = new StringBuffer(lang.getLanguageValue(\"task.email.message.content\"));\n        contentBuf.append(\"\\n\");\n        contentBuf.append(lang.getLanguageValue(\"task.label.project\"));\n        contentBuf.append(\": \");            \n        String projectname = \"?\";\n\t    try {\n\t    \tprojectname = cms.readTask(task.getRoot()).getName();\n\t    } catch(Exception exc) {\n\t    \t// no root?!\n\t    }\n        contentBuf.append(projectname);\n        contentBuf.append(\"\\n\");\n        contentBuf.append(lang.getLanguageValue(\"task.label.task\"));\n        contentBuf.append(\": \");            \n        contentBuf.append(task.getName());     \n        contentBuf.append(\"\\n\");\n        contentBuf.append(lang.getLanguageValue(\"task.label.actuator\"));\n        contentBuf.append(\": \");            \n        contentBuf.append(Utils.getFullName(cms.readOwner(task)));             \n\t\tString subject=lang.getLanguageValue(\"task.email.message.subject\");\n\t\tA_CmsUser[] users={cms.readAgent(task)};\n\t\tCmsMail mail=new CmsMail(cms,cms.readOwner(task),users,subject,contentBuf.toString());\n\t\tmail.start();\n\t}","commit_id":"72529d27ad7294ec58c5f286f2c9af112423a0a8","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n\t * Forwards a task. The task is forwarded to a new editor in a new role.\n\t * @param cms The cms-object.\n\t * @param int taskid The id of the task.\n\t * @param newEditorName The name of the new editor for this task.\n\t * @param newRoleName The name of the new role for the user.\n\t * @exception CmsException Throws CmsExceptions, that are be \n\t * thrown in calling methods.\n\t */\n\tpublic static void forward(A_CmsObject cms, int taskid,\n\t\t\t\t\t\t\t   String newEditorName, String newRoleName)\n\t\tthrows CmsException {\n\t\tCmsXmlLanguageFile lang = new CmsXmlLanguageFile(cms);\n\t\tA_CmsUser newEditor = cms.readUser(newEditorName);\n\t\tA_CmsGroup oldRole = cms.readGroup(newRoleName);\n\n\t\tcms.forwardTask(taskid, oldRole.getName(), newEditor.getName());\n\n\t\tString comment = lang.getLanguageValue(\"task.dialog.forward.logmessage\");\n\t\tcomment += \" \" + Utils.getFullName(newEditor);\n\t\tcms.writeTaskLog(taskid, comment, C_TASKLOGTYPE_FORWARDED);\n\t\t\n\t\t// send an email if \"Benachrichtigung bei Weiterleitung\" was selected.\n\t\tA_CmsTask task = cms.readTask(taskid);\n\t\tif (cms.getTaskPar(task.getId(),C_TASKPARA_DELIVERY)!=null) {\t\n\t\t\tString content=lang.getLanguageValue(\"task.email.forward.content\");\n\t\t\tString subject=lang.getLanguageValue(\"task.email.forward.subject\");\t\t\t\n\t\t\t// if \"Alle Rollenmitglieder von Aufgabe Benachrichtigen\" checkbox is selected.\n\t\t\tif (cms.getTaskPar(task.getId(),C_TASKPARA_ALL)!=null) {\n\t\t\t\tCmsMail mail=new CmsMail(cms,cms.getRequestContext().currentUser(),cms.readGroup(task),subject,content);\n\t\t\t\tmail.start();\n\t\t\t} else {\n\t\t\t\t// send a mail to user\n\t\t\t\tA_CmsUser[] user={cms.readAgent(task)};\n\t\t\t\tCmsMail mail1=new CmsMail(cms,cms.getRequestContext().currentUser(),user,subject,content);\n\t\t\t\tmail1.start();\n\t\t\t\t// send a mail to owner\n\t\t\t\tA_CmsUser[] owner={cms.readOwner(task)};\n\t\t\t\tCmsMail mail2=new CmsMail(cms,cms.getRequestContext().currentUser(),owner,subject,content);\n\t\t\t\tmail2.start();\n\t\t\t}\n\t\t\t\n\t\t}\n\t}","id":13633,"modified_method":"/**\n\t * Forwards a task. The task is forwarded to a new editor in a new role.\n\t * @param cms The cms-object.\n\t * @param int taskid The id of the task.\n\t * @param newEditorName The name of the new editor for this task.\n\t * @param newRoleName The name of the new role for the user.\n\t * @exception CmsException Throws CmsExceptions, that are be \n\t * thrown in calling methods.\n\t */\n\tpublic static void forward(A_CmsObject cms, int taskid,\n\t\t\t\t\t\t\t   String newEditorName, String newRoleName)\n\t\tthrows CmsException {\n\t\tCmsXmlLanguageFile lang = new CmsXmlLanguageFile(cms);\n\t\tA_CmsUser newEditor = cms.readUser(newEditorName);\n\t\tA_CmsGroup oldRole = cms.readGroup(newRoleName);\n\n\t\tcms.forwardTask(taskid, oldRole.getName(), newEditor.getName());\n\n\t\tString comment = lang.getLanguageValue(\"task.dialog.forward.logmessage\");\n\t\tcomment += \" \" + Utils.getFullName(newEditor);\n\t\tcms.writeTaskLog(taskid, comment, C_TASKLOGTYPE_FORWARDED);\n\t\t\n\t\t// send an email if \"Benachrichtigung bei Weiterleitung\" was selected.\n\t\tA_CmsTask task = cms.readTask(taskid);\n\t\tif (cms.getTaskPar(task.getId(),C_TASKPARA_DELIVERY)!=null) {\t\n\t        StringBuffer contentBuf = new StringBuffer(lang.getLanguageValue(\"task.email.forward.content\"));\n            contentBuf.append(\"\\n\");\n            contentBuf.append(lang.getLanguageValue(\"task.label.project\"));\n            contentBuf.append(\": \");            \n            String projectname = \"?\";\n\t        try {\n\t        \tprojectname = cms.readTask(task.getRoot()).getName();\n\t        } catch(Exception exc) {\n\t        \t// no root?!\n\t        }\n            contentBuf.append(projectname);\n            contentBuf.append(\"\\n\");\n            contentBuf.append(lang.getLanguageValue(\"task.label.task\"));\n            contentBuf.append(\": \");            \n            contentBuf.append(task.getName());     \n            contentBuf.append(\"\\n\");\n            contentBuf.append(lang.getLanguageValue(\"task.label.actuator\"));\n            contentBuf.append(\": \");            \n            contentBuf.append(Utils.getFullName(cms.readOwner(task)));            \t\t\n            contentBuf.append(\"\\n\");\n            contentBuf.append(lang.getLanguageValue(\"task.label.taskfor\"));\n            contentBuf.append(\": \");            \n            contentBuf.append(Utils.getFullName(cms.readOriginalAgent(task)));             \n            contentBuf.append(\"\\n\");\n            contentBuf.append(lang.getLanguageValue(\"task.label.editor\"));\n            contentBuf.append(\": \");            \n            contentBuf.append(Utils.getFullName(cms.readAgent(task)));             \n\t\t\tString subject=lang.getLanguageValue(\"task.email.forward.subject\");\t\t\t\n\t\t\t// if \"Alle Rollenmitglieder von Aufgabe Benachrichtigen\" checkbox is selected.\n\t\t\tif (cms.getTaskPar(task.getId(),C_TASKPARA_ALL)!=null) {\n\t\t\t\tCmsMail mail=new CmsMail(cms,cms.getRequestContext().currentUser(),cms.readGroup(task),subject,contentBuf.toString());\n\t\t\t\tmail.start();\n\t\t\t} else {\n\t\t\t\t// send a mail to user\n\t\t\t\tA_CmsUser[] user={cms.readAgent(task)};\n\t\t\t\tCmsMail mail1=new CmsMail(cms,cms.getRequestContext().currentUser(),user,subject,contentBuf.toString());\n\t\t\t\tmail1.start();\n\t\t\t\t// send a mail to owner\n\t\t\t\tA_CmsUser[] owner={cms.readOwner(task)};\n\t\t\t\tCmsMail mail2=new CmsMail(cms,cms.getRequestContext().currentUser(),owner,subject,contentBuf.toString());\n\t\t\t\tmail2.start();\n\t\t\t}\n\t\t\t\n\t\t}\n\t}","commit_id":"72529d27ad7294ec58c5f286f2c9af112423a0a8","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n\t * Accepts a task.\n\t * @param cms The cms-object.\n\t * @param int taskid The id of the task.\n\t * @exception CmsException Throws CmsExceptions, that are be \n\t * thrown in calling methods.\n\t */\n\tpublic static void accept(A_CmsObject cms, int taskid) \n\t\tthrows CmsException {\n\t\tcms.acceptTask(taskid);\n\t\tString comment = \"\";\n\t\tcms.writeTaskLog(taskid, comment, C_TASKLOGTYPE_ACCEPTED);\n\t\t\n\t\t// send an email if \"Benachrichtigung bei Annahme\" was selected.\n\t\tCmsXmlLanguageFile lang = new CmsXmlLanguageFile(cms);\n\t\tA_CmsTask task = cms.readTask(taskid);\n\t\tif (cms.getTaskPar(task.getId(),C_TASKPARA_ACCEPTATION)!=null) {\t\n\t\t\tString content=lang.getLanguageValue(\"task.email.accept.content\");\n\t\t\tString subject=lang.getLanguageValue(\"task.email.accept.subject\");\n\t\t\tA_CmsUser[] users={cms.readAgent(task)};\n\t\t\tCmsMail mail=new CmsMail(cms,cms.readOwner(task),users,subject,content);\n\t\t\tmail.start();\n\t\t}\n\t\t\n\t}","id":13634,"modified_method":"/**\n\t * Accepts a task.\n\t * @param cms The cms-object.\n\t * @param int taskid The id of the task.\n\t * @exception CmsException Throws CmsExceptions, that are be \n\t * thrown in calling methods.\n\t */\n\tpublic static void accept(A_CmsObject cms, int taskid) \n\t\tthrows CmsException {\n\t\tcms.acceptTask(taskid);\n\t\tString comment = \"\";\n\t\tcms.writeTaskLog(taskid, comment, C_TASKLOGTYPE_ACCEPTED);\n\t\t\n\t\t// send an email if \"Benachrichtigung bei Annahme\" was selected.\n\t\tCmsXmlLanguageFile lang = new CmsXmlLanguageFile(cms);\n\t\tA_CmsTask task = cms.readTask(taskid);\n\t\tif (cms.getTaskPar(task.getId(),C_TASKPARA_ACCEPTATION)!=null) {\t\n\t\t\tStringBuffer contentBuf = new StringBuffer(lang.getLanguageValue(\"task.email.accept.content\"));\n            contentBuf.append(\"\\n\");\n            contentBuf.append(lang.getLanguageValue(\"task.label.project\"));\n            contentBuf.append(\": \");            \n            String projectname = \"?\";\n\t\t\ttry {\n\t\t\t\tprojectname = cms.readTask(task.getRoot()).getName();\n\t\t\t} catch(Exception exc) {\n\t\t\t\t// no root?!\n\t\t\t}\n            contentBuf.append(projectname);\n            contentBuf.append(\"\\n\");\n            contentBuf.append(lang.getLanguageValue(\"task.label.task\"));\n            contentBuf.append(\": \");            \n            contentBuf.append(task.getName());            \n\t\t\tString subject=lang.getLanguageValue(\"task.email.accept.subject\");\n\t\t\tA_CmsUser[] users={cms.readAgent(task)};\n\t\t\tCmsMail mail=new CmsMail(cms,cms.readOwner(task),users,subject,contentBuf.toString());\n\t\t\tmail.start();\n\t\t}\n\t\t\n\t}","commit_id":"72529d27ad7294ec58c5f286f2c9af112423a0a8","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n\t * Sends a message to the initiator (owner) of the task.\n\t * @param cms The cms-object.\n\t * @param int taskid The id of the task.\n\t * @param message The text of the message.\n\t * @exception CmsException Throws CmsExceptions, that are be \n\t * thrown in calling methods.\n\t */\n\tpublic static void query(A_CmsObject cms, int taskid, String message) \n\t\tthrows CmsException {\n\t\tCmsXmlLanguageFile lang = new CmsXmlLanguageFile(cms);\n\t\tA_CmsTask task = cms.readTask(taskid);\n\t\tString comment = lang.getLanguageValue(\"task.dialog.query.head\") + \" \";\n\t\tif( (message != null) && (message.length() != 0)) {\n\t\t\tcomment += Utils.getFullName(cms.readOwner(task)) + \"\\n\";\n\t\t\tcomment += message;\n\t\t\tcms.writeTaskLog(taskid, comment, C_TASKLOGTYPE_CALL);\n\t\t}\n\t\t\n\t\t// send an email.\n\t\tString content=lang.getLanguageValue(\"task.email.query.content\");\n\t\tString subject=lang.getLanguageValue(\"task.email.query.subject\");\n\t\tA_CmsUser[] users={cms.readOwner(task)};\n\t\tCmsMail mail=new CmsMail(cms,cms.readAgent(task),users,subject,content);\n\t\tmail.start();\n\t\t\n\t}","id":13635,"modified_method":"/**\n\t * Sends a message to the initiator (owner) of the task.\n\t * @param cms The cms-object.\n\t * @param int taskid The id of the task.\n\t * @param message The text of the message.\n\t * @exception CmsException Throws CmsExceptions, that are be \n\t * thrown in calling methods.\n\t */\n\tpublic static void query(A_CmsObject cms, int taskid, String message) \n\t\tthrows CmsException {\n\t\tCmsXmlLanguageFile lang = new CmsXmlLanguageFile(cms);\n\t\tA_CmsTask task = cms.readTask(taskid);\n\t\tString comment = lang.getLanguageValue(\"task.dialog.query.head\") + \" \";\n\t\tif( (message != null) && (message.length() != 0)) {\n\t\t\tcomment += Utils.getFullName(cms.readOwner(task)) + \"\\n\";\n\t\t\tcomment += message;\n\t\t\tcms.writeTaskLog(taskid, comment, C_TASKLOGTYPE_CALL);\n\t\t}\n\t\t\n\t\t// send an email.\n\t    StringBuffer contentBuf = new StringBuffer(lang.getLanguageValue(\"task.email.query.content\"));\n        contentBuf.append(\"\\n\");\n        contentBuf.append(lang.getLanguageValue(\"task.label.project\"));\n        contentBuf.append(\": \");            \n        String projectname = \"?\";\n\t    try {\n\t    \tprojectname = cms.readTask(task.getRoot()).getName();\n\t    } catch(Exception exc) {\n\t    \t// no root?!\n\t    }\n        contentBuf.append(projectname);\n        contentBuf.append(\"\\n\");\n        contentBuf.append(lang.getLanguageValue(\"task.label.task\"));\n        contentBuf.append(\": \");            \n        contentBuf.append(task.getName());     \n        contentBuf.append(\"\\n\");\n        contentBuf.append(lang.getLanguageValue(\"task.label.editor\"));\n        contentBuf.append(\": \");            \n        contentBuf.append(Utils.getFullName(cms.readAgent(task)));             \n\t\tString subject=lang.getLanguageValue(\"task.email.query.subject\");\n\t\tA_CmsUser[] users={cms.readOwner(task)};\n\t\tCmsMail mail=new CmsMail(cms,cms.readAgent(task),users,subject,contentBuf.toString());\n\t\tmail.start();\n\t\t\n\t}","commit_id":"72529d27ad7294ec58c5f286f2c9af112423a0a8","url":"https://github.com/alkacon/opencms-core"},{"original_method":"@Override\n    public void onMessage(Message message) {\n        logger.info(\"Received message: \" + message);\n        try {\n            if (message.getJMSReplyTo() != null) {\n                logger.info(\"Replying to \" + message.getJMSReplyTo());\n                final Destination destination = message.getJMSReplyTo();\n                final MessageProducer replyProducer = session.createProducer(destination);\n                final Message replyMsg = session.createTextMessage(SUCCESS_REPLY);\n                replyMsg.setJMSCorrelationID(message.getJMSMessageID());\n                replyProducer.send(replyMsg);\n                replyProducer.close();\n            }\n        } catch (JMSException jmse) {\n            throw new RuntimeException(jmse);\n        }\n    }","id":13636,"modified_method":"@Override\n    public void onMessage(Message message) {\n        logger.info(\"Received message: \" + message);\n        try {\n            final Destination replyTo = message.getJMSReplyTo();\n            if (replyTo != null) {\n                logger.info(\"Replying to \" + replyTo);\n                try (\n                        JMSContext context = factory.createContext()\n                ) {\n                    context.createProducer()\n                            .setJMSCorrelationID(message.getJMSMessageID())\n                            .send(replyTo, SUCCESS_REPLY);\n                }\n            }\n        } catch (JMSException jmse) {\n            throw new RuntimeException(jmse);\n        }\n    }","commit_id":"93a5830f6567c2073a453abf0b74cdce6f0a1259","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public void onMessage(Message message) {\n        try {\n            log.info(this + \" received message \" + message);\n            final Destination destination = message.getJMSReplyTo();\n            // ignore messages that need no reply\n            if (destination == null) {\n                log.info(this + \" noticed that no reply-to destination has been set. Just returning\");\n                return;\n            }\n            final MessageProducer replyProducer = session.createProducer(destination);\n            final Message replyMsg = session.createTextMessage(Constants.REPLY_MESSAGE_PREFIX + ((TextMessage) message).getText());\n            replyMsg.setJMSCorrelationID(message.getJMSMessageID());\n            replyProducer.send(replyMsg);\n            replyProducer.close();\n        } catch (JMSException e) {\n            throw new RuntimeException(e);\n        }\n    }","id":13637,"modified_method":"@Override\n    public void onMessage(Message message) {\n        try {\n            log.info(this + \" received message \" + message);\n            final Destination replyTo = message.getJMSReplyTo();\n            // ignore messages that need no reply\n            if (replyTo == null) {\n                log.info(this + \" noticed that no reply-to replyTo has been set. Just returning\");\n                return;\n            }\n            try (\n                    JMSContext context = factory.createContext()\n            ) {\n                String reply = Constants.REPLY_MESSAGE_PREFIX + ((TextMessage) message).getText();\n                context.createProducer()\n                        .setJMSCorrelationID(message.getJMSMessageID())\n                        .send(replyTo, reply);\n            }\n        } catch (JMSException e) {\n            throw new RuntimeException(e);\n        }\n    }","commit_id":"93a5830f6567c2073a453abf0b74cdce6f0a1259","url":"https://github.com/wildfly/wildfly"},{"original_method":"@PostConstruct\n    protected void postConstruct() throws JMSException, NamingException {\n        lifeCycleTracker.trackPostConstructOn(this.getClass().getName());\n        log.info(this + \" MDB @PostConstructed\");\n\n        this.connection = this.factory.createConnection();\n        this.session = this.connection.createSession(false, Session.AUTO_ACKNOWLEDGE);\n    }","id":13638,"modified_method":"@PostConstruct\n    protected void postConstruct() {\n        lifeCycleTracker.trackPostConstructOn(this.getClass().getName());\n        log.info(this + \" MDB @PostConstructed\");\n    }","commit_id":"93a5830f6567c2073a453abf0b74cdce6f0a1259","url":"https://github.com/wildfly/wildfly"},{"original_method":"@PreDestroy\n    protected void preDestroy() throws JMSException {\n\n        log.info(\"@PreDestroy on \" + this);\n        try {\n            lifeCycleTracker.trackPreDestroyOn(this.getClass().getName());\n        } finally {\n            // closing the connection will close the session too (see javadoc of javax.jms.Connection#close())\n            safeClose(this.connection);\n        }\n    }","id":13639,"modified_method":"@PreDestroy\n    protected void preDestroy() {\n\n        log.info(\"@PreDestroy on \" + this);\n        lifeCycleTracker.trackPreDestroyOn(this.getClass().getName());\n    }","commit_id":"93a5830f6567c2073a453abf0b74cdce6f0a1259","url":"https://github.com/wildfly/wildfly"},{"original_method":"public void onMessage(Message message) {\n      try {\n         System.out.println(\"Message \" + message);\n         if (!\"Let's test it!\".equals(((TextMessage) message).getText())){\n            throw new AssertionError(\"Unexpected message: \" + ((TextMessage) message).getText() + \" ; expected:\\\"Let's test it!\\\"\");\n         }\n         final Destination destination = message.getJMSReplyTo();\n         // ignore messages that need no reply\n         if (destination == null)\n            return;\n         final MessageProducer replyProducer = session.createProducer(destination);\n\n         final Message replyMsg = session.createTextMessage(createResponse());\n         replyMsg.setJMSCorrelationID(message.getJMSMessageID());\n         replyProducer.send(replyMsg);\n         replyProducer.close();\n      } catch (JMSException e) {\n         throw new RuntimeException(e);\n      }\n   }","id":13640,"modified_method":"public void onMessage(Message message) {\n      try {\n         System.out.println(\"Message \" + message);\n         if (!\"Let's test it!\".equals(((TextMessage) message).getText())){\n            throw new AssertionError(\"Unexpected message: \" + ((TextMessage) message).getText() + \" ; expected:\\\"Let's test it!\\\"\");\n         }\n         final Destination replyTo = message.getJMSReplyTo();\n         // ignore messages that need no reply\n         if (replyTo == null)\n            return;\n         try (\n                JMSContext context = factory.createContext()\n         ) {\n            context.createProducer()\n                  .setJMSCorrelationID(message.getJMSMessageID())\n                  .send(replyTo, createResponse());\n          }\n      } catch (JMSException e) {\n         throw new RuntimeException(e);\n      }\n   }","commit_id":"93a5830f6567c2073a453abf0b74cdce6f0a1259","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public void onMessage(Message message) {\n        try {\n            System.out.println(\"Message \" + message);\n            final Destination destination = message.getJMSReplyTo();\n            // ignore messages that need no reply\n            if (destination == null)\n                return;\n            final MessageProducer replyProducer = session.createProducer(destination);\n            final Message replyMsg = session.createTextMessage(\"replying \" + ((TextMessage) message).getText());\n            replyMsg.setJMSCorrelationID(message.getJMSMessageID());\n            replyProducer.send(replyMsg);\n            replyProducer.close();\n        } catch (JMSException e) {\n            throw new RuntimeException(e);\n        }\n    }","id":13641,"modified_method":"@Override\n    public void onMessage(Message message) {\n        try {\n            System.out.println(\"Message \" + message);\n            final Destination replyTo = message.getJMSReplyTo();\n            // ignore messages that need no reply\n            if (replyTo == null)\n                return;\n            try (\n                JMSContext context = factory.createContext()\n            ) {\n                context.createProducer()\n                    .setJMSCorrelationID(message.getJMSMessageID())\n                    .send(replyTo, \"replying \" + ((TextMessage) message).getText());\n            }\n        } catch (JMSException e) {\n            throw new RuntimeException(e);\n        }\n    }","commit_id":"93a5830f6567c2073a453abf0b74cdce6f0a1259","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public void onMessage(Message message) {\n        try {\n            System.out.println(\"Message \" + message);\n            final Destination destination = message.getJMSReplyTo();\n            // ignore messages that need no reply\n            if (destination == null)\n                return;\n            final MessageProducer replyProducer = session.createProducer(destination);\n            final Message replyMsg = session.createTextMessage(\"replying \" + ((TextMessage) message).getText());\n            replyMsg.setJMSCorrelationID(message.getJMSMessageID());\n            replyProducer.send(replyMsg);\n            replyProducer.close();\n        } catch (JMSException e) {\n            throw new RuntimeException(e);\n        }\n    }","id":13642,"modified_method":"@Override\n    public void onMessage(Message message) {\n        try {\n            System.out.println(\"Message \" + message);\n            final Destination replyTo = message.getJMSReplyTo();\n            // ignore messages that need no reply\n            if (replyTo == null)\n                return;\n            try (\n                    JMSContext context = factory.createContext()\n            ) {\n                context.createProducer()\n                        .setJMSCorrelationID(message.getJMSMessageID())\n                        .send(replyTo, \"replying \" + ((TextMessage) message).getText());\n            }\n        } catch (JMSException e) {\n            throw new RuntimeException(e);\n        }\n    }","commit_id":"93a5830f6567c2073a453abf0b74cdce6f0a1259","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public void onMessage(Message message) {\n        logger.info(\"Received message: \" + message);\n        try {\n            if (message.getJMSReplyTo() != null) {\n                logger.info(\"Replying to \" + message.getJMSReplyTo());\n                final Destination destination = message.getJMSReplyTo();\n                final MessageProducer replyProducer = session.createProducer(destination);\n                final Message replyMsg;\n                if (this.messageDrivenContext != null) {\n                    replyMsg = session.createTextMessage(SUCCESS_REPLY);\n                } else {\n                    replyMsg = session.createTextMessage(FAILURE_REPLY);\n                }\n                replyMsg.setJMSCorrelationID(message.getJMSMessageID());\n                replyProducer.send(replyMsg);\n                replyProducer.close();\n            }\n        } catch (JMSException jmse) {\n            throw new RuntimeException(jmse);\n        }\n    }","id":13643,"modified_method":"@Override\n    public void onMessage(Message message) {\n        logger.info(\"Received message: \" + message);\n        try {\n            final Destination replyTo = message.getJMSReplyTo();\n            if (replyTo != null) {\n                logger.info(\"Replying to \" + replyTo);\n                try (\n                        JMSContext context = factory.createContext()\n                ) {\n                    String reply = (messageDrivenContext != null) ? SUCCESS_REPLY : FAILURE_REPLY;\n                    context.createProducer()\n                            .setJMSCorrelationID(message.getJMSMessageID())\n                            .send(replyTo, reply);\n                }\n            }\n        } catch (JMSException jmse) {\n            throw new RuntimeException(jmse);\n        }\n    }","commit_id":"93a5830f6567c2073a453abf0b74cdce6f0a1259","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n  public void deleteChildInternal(@NotNull ASTNode node) {\n    if (ArrayUtil.contains(node.getPsi(), getArguments())) {\n      final ASTNode commaNode = PyPsiUtils.getAdjacentComma(node);\n      if (commaNode != null) {\n        deleteChildInternal(commaNode);\n      }\n    }\n    super.deleteChildInternal(node);\n  }","id":13644,"modified_method":"@Override\n  public void deleteChildInternal(@NotNull ASTNode node) {\n    PyPsiUtils.deleteAdjacentComma(this, node, getArguments());\n    super.deleteChildInternal(node);\n  }","commit_id":"c478b45ddffd2e6fb30d1aabc27430ec76f81575","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void deleteChildInternal(@NotNull ASTNode child) {\n    if (ArrayUtil.contains(child.getPsi(), getGlobals())) {\n      final ASTNode commaNode = PyPsiUtils.getAdjacentComma(child);\n      if (commaNode != null) {\n        deleteChildInternal(commaNode);\n      }\n    }\n    super.deleteChildInternal(child);\n  }","id":13645,"modified_method":"@Override\n  public void deleteChildInternal(@NotNull ASTNode child) {\n    PyPsiUtils.deleteAdjacentComma(this, child, getGlobals());\n    super.deleteChildInternal(child);\n  }","commit_id":"c478b45ddffd2e6fb30d1aabc27430ec76f81575","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void deleteChildInternal(@NotNull ASTNode child) {\n    if (ArrayUtil.contains(child.getPsi(), getVariables())) {\n      final ASTNode commaNode = PyPsiUtils.getAdjacentComma(child);\n      if (commaNode != null) {\n        deleteChildInternal(commaNode);\n      }\n    }\n    super.deleteChildInternal(child);\n  }","id":13646,"modified_method":"@Override\n  public void deleteChildInternal(@NotNull ASTNode child) {\n    PyPsiUtils.deleteAdjacentComma(this, child, getVariables());\n    super.deleteChildInternal(child);\n  }","commit_id":"c478b45ddffd2e6fb30d1aabc27430ec76f81575","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * Finds closest comma after the node skipping any whitespaces in-between.\n   */\n  @Nullable\n  public static ASTNode getPrevComma(@NotNull ASTNode node) {\n    final ASTNode prevNode = TreeUtil.skipElementsBack(node, PyTokenTypes.WHITESPACE_OR_LINEBREAK);\n    return prevNode != null && prevNode.getElementType() == PyTokenTypes.COMMA ? prevNode : null;\n  }","id":13647,"modified_method":"/**\n   * Finds closest comma after the node skipping any whitespaces in-between.\n   */\n  @Nullable\n  public static ASTNode getPrevComma(@NotNull ASTNode node) {\n    final ASTNode prevNode = getPrevNonWhitespaceNode(node);\n    return prevNode != null && prevNode.getElementType() == PyTokenTypes.COMMA ? prevNode : null;\n  }","commit_id":"c478b45ddffd2e6fb30d1aabc27430ec76f81575","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"static void deleteAdjacentComma(ASTDelegatePsiElement pyImportStatement, ASTNode child, final PyElement[] elements) {\n    if (ArrayUtil.contains(child.getPsi(), elements)) {\n      final ASTNode commaNode = getAdjacentComma(child);\n      if (commaNode != null) {\n        final ASTNode prev = commaNode.getTreePrev();\n        pyImportStatement.deleteChildInternal(commaNode);\n        removeSlash(pyImportStatement, prev);\n      }\n    }\n  }","id":13648,"modified_method":"/**\n   * Removes given comma closest to the given child node along with any whitespaces around. Argument {@code filter} serves\n   * to apply this modification only if child the belongs to given set of elements.\n   *\n   * @param node   parent node\n   * @param child  child node comma should be adjacent to\n   * @param filter optional filter to decide whether child node is applicable\n   */\n  public static void deleteAdjacentComma(@NotNull ASTDelegatePsiElement node, @NotNull ASTNode child, @Nullable PyElement[] filter) {\n    if (filter == null || ArrayUtil.contains(child.getPsi(), filter)) {\n      final ASTNode commaNode = getAdjacentComma(child);\n      if (commaNode != null) {\n        final ASTNode nextNonWhitespace = getNextNonWhitespaceNode(commaNode);\n        final ASTNode prevNonWhitespace = getPrevNonWhitespaceNode(commaNode);\n        final ASTNode last = nextNonWhitespace == null ? node.getNode().getLastChildNode() : nextNonWhitespace.getTreePrev();\n        final ASTNode first = prevNonWhitespace == null ? node.getNode().getFirstChildNode() : prevNonWhitespace.getTreeNext();\n        node.deleteChildRange(first.getPsi(), last.getPsi());\n      }\n    }\n  }","commit_id":"c478b45ddffd2e6fb30d1aabc27430ec76f81575","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * Finds closest comma before the node skipping any whitespaces in-between.\n   */\n  @Nullable\n  public static ASTNode getNextComma(@NotNull ASTNode node) {\n    final ASTNode nextNode = TreeUtil.skipElements(node, PyTokenTypes.WHITESPACE_OR_LINEBREAK);\n    return nextNode != null && nextNode.getElementType() == PyTokenTypes.COMMA ? nextNode : null;\n  }","id":13649,"modified_method":"/**\n   * Finds closest comma before the node skipping any whitespaces in-between.\n   */\n  @Nullable\n  public static ASTNode getNextComma(@NotNull ASTNode node) {\n    final ASTNode nextNode = getNextNonWhitespaceNode(node);\n    return nextNode != null && nextNode.getElementType() == PyTokenTypes.COMMA ? nextNode : null;\n  }","commit_id":"c478b45ddffd2e6fb30d1aabc27430ec76f81575","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void deleteChildInternal(@NotNull ASTNode child) {\n    if (child.getPsi() instanceof PyExpression) {\n      final ASTNode commaNode = PyPsiUtils.getAdjacentComma(child);\n      if (commaNode != null) {\n        super.deleteChildInternal(commaNode);\n      }\n    }\n    super.deleteChildInternal(child);\n  }","id":13650,"modified_method":"@Override\n  public void deleteChildInternal(@NotNull ASTNode child) {\n    PyPsiUtils.deleteAdjacentComma(this, child, getElements());\n    super.deleteChildInternal(child);\n  }","commit_id":"c478b45ddffd2e6fb30d1aabc27430ec76f81575","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public LogBuffer putLong( long l ) throws IOException\n    {\n        if ( byteBuffer == null || \n            (BUFFER_SIZE - byteBuffer.position()) < 8 )\n        {\n            getNewMappedBuffer();\n        }\n        byteBuffer.putLong( l );\n        return this;\n    }","id":13651,"modified_method":"public LogBuffer putLong( long l ) throws IOException\n    {\n        if ( byteBuffer == null || \n            (BUFFER_SIZE - byteBuffer.position()) < 8 )\n        {\n            getNewDirectBuffer();\n        }\n        byteBuffer.putLong( l );\n        return this;\n    }","commit_id":"849ea2d872479ec20cdaf549f18295e3e4ed0bc0","url":"https://github.com/neo4j/neo4j"},{"original_method":"public LogBuffer putInt( int i ) throws IOException\n    {\n        if ( byteBuffer == null || \n            (BUFFER_SIZE - byteBuffer.position()) < 4 )\n        {\n            getNewMappedBuffer();\n        }\n        byteBuffer.putInt( i );\n        return this;\n    }","id":13652,"modified_method":"public LogBuffer putInt( int i ) throws IOException\n    {\n        if ( byteBuffer == null || \n            (BUFFER_SIZE - byteBuffer.position()) < 4 )\n        {\n            getNewDirectBuffer();\n        }\n        byteBuffer.putInt( i );\n        return this;\n    }","commit_id":"849ea2d872479ec20cdaf549f18295e3e4ed0bc0","url":"https://github.com/neo4j/neo4j"},{"original_method":"public LogBuffer put( char[] chars ) throws IOException\n    {\n        if ( byteBuffer == null || \n            (BUFFER_SIZE - byteBuffer.position()) < (chars.length * 2) )\n        {\n            getNewMappedBuffer();\n        }\n        int oldPos = byteBuffer.position();\n        byteBuffer.asCharBuffer().put( chars );\n        byteBuffer.position( oldPos + chars.length * 2 );\n        return this;\n    }","id":13653,"modified_method":"public LogBuffer put( char[] chars ) throws IOException\n    {\n        put( chars, 0 );\n        return this;\n    }","commit_id":"849ea2d872479ec20cdaf549f18295e3e4ed0bc0","url":"https://github.com/neo4j/neo4j"},{"original_method":"public LogBuffer put( byte[] bytes ) throws IOException\n    {\n        if ( byteBuffer == null || \n            (BUFFER_SIZE - byteBuffer.position()) < bytes.length )\n        {\n            getNewMappedBuffer();\n        }\n        byteBuffer.put( bytes );\n        return this;\n    }","id":13654,"modified_method":"public LogBuffer put( byte[] bytes ) throws IOException\n    {\n        put( bytes, 0 );\n        return this;\n    }","commit_id":"849ea2d872479ec20cdaf549f18295e3e4ed0bc0","url":"https://github.com/neo4j/neo4j"},{"original_method":"public LogBuffer put( byte b ) throws IOException\n    {\n        if ( byteBuffer == null || \n            (BUFFER_SIZE - byteBuffer.position()) < 1 )\n        {\n            getNewMappedBuffer();\n        }\n        byteBuffer.put( b );\n        return this;\n    }","id":13655,"modified_method":"public LogBuffer put( byte b ) throws IOException\n    {\n        if ( byteBuffer == null || \n            (BUFFER_SIZE - byteBuffer.position()) < 1 )\n        {\n            getNewDirectBuffer();\n        }\n        byteBuffer.put( b );\n        return this;\n    }","commit_id":"849ea2d872479ec20cdaf549f18295e3e4ed0bc0","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void getNewMappedBuffer() throws IOException\n    {\n        byteBuffer.flip();\n        bufferStartPosition += fileChannel.write( byteBuffer, \n            bufferStartPosition );\n        byteBuffer.clear();\n    }","id":13656,"modified_method":"private void getNewDirectBuffer() throws IOException\n    {\n        byteBuffer.flip();\n        bufferStartPosition += fileChannel.write( byteBuffer, \n            bufferStartPosition );\n        byteBuffer.clear();\n    }","commit_id":"849ea2d872479ec20cdaf549f18295e3e4ed0bc0","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void force() throws IOException\n    {\n        getNewMappedBuffer();\n        fileChannel.force( false );\n    }","id":13657,"modified_method":"public void force() throws IOException\n    {\n        getNewDirectBuffer();\n        fileChannel.force( false );\n    }","commit_id":"849ea2d872479ec20cdaf549f18295e3e4ed0bc0","url":"https://github.com/neo4j/neo4j"},{"original_method":"DirectMappedLogBuffer( FileChannel fileChannel ) throws IOException\n    {\n        this.fileChannel = fileChannel;\n        bufferStartPosition = fileChannel.position();\n        byteBuffer = ByteBuffer.allocateDirect( BUFFER_SIZE );\n        getNewMappedBuffer();\n    }","id":13658,"modified_method":"DirectMappedLogBuffer( FileChannel fileChannel ) throws IOException\n    {\n        this.fileChannel = fileChannel;\n        bufferStartPosition = fileChannel.position();\n        byteBuffer = ByteBuffer.allocateDirect( BUFFER_SIZE );\n    }","commit_id":"849ea2d872479ec20cdaf549f18295e3e4ed0bc0","url":"https://github.com/neo4j/neo4j"},{"original_method":"/**\n     * Creates a new relationship type store contained in <CODE>fileName<\/CODE>\n     * If filename is <CODE>null<\/CODE> or the file already exists an \n     * <CODE>IOException<\/CODE> is thrown.\n     * \n     * @param fileName\n     *            File name of the new relationship type store\n     * @throws IOException\n     *             If unable to create store or name null\n     */\n    public static void createStore( String fileName )\n    {\n        createEmptyStore( fileName, VERSION );\n        DynamicStringStore.createStore( fileName + \".names\",\n            TYPE_STORE_BLOCK_SIZE );\n        RelationshipTypeStore store = new RelationshipTypeStore( fileName );\n        store.markAsReserved( store.nextId() );\n        store.markAsReserved( store.nextId() );\n        store.markAsReserved( store.nextId() );\n        store.close();\n    }","id":13659,"modified_method":"/**\n     * Creates a new relationship type store contained in <CODE>fileName<\/CODE>\n     * If filename is <CODE>null<\/CODE> or the file already exists an \n     * <CODE>IOException<\/CODE> is thrown.\n     * \n     * @param fileName\n     *            File name of the new relationship type store\n     * @throws IOException\n     *             If unable to create store or name null\n     */\n    public static void createStore( String fileName )\n    {\n        createEmptyStore( fileName, VERSION );\n        DynamicStringStore.createStore( fileName + \".names\",\n            TYPE_STORE_BLOCK_SIZE );\n        RelationshipTypeStore store = new RelationshipTypeStore( fileName );\n        store.close();\n    }","commit_id":"849ea2d872479ec20cdaf549f18295e3e4ed0bc0","url":"https://github.com/neo4j/neo4j"},{"original_method":"public synchronized String toString()\n    {\n        StringBuffer txString = new StringBuffer( \"Transaction[Status=\"\n            + txManager.getTxStatusAsString( status ) + \",ResourceList=\" );\n        Iterator<ResourceElement> itr = resourceList.iterator();\n        while ( itr.hasNext() )\n        {\n            txString.append( itr.next().toString() );\n            if ( itr.hasNext() )\n            {\n                txString.append( \",\" );\n            }\n        }\n        return txString.toString();\n    }","id":13660,"modified_method":"public synchronized String toString()\n    {\n        StringBuffer txString = new StringBuffer( \"Transaction(\" + \n            eventIdentifier + \")[\" + txManager.getTxStatusAsString( status ) + \n            \",Resources=\" + resourceList.size() + \"]\" );\n//        Iterator<ResourceElement> itr = resourceList.iterator();\n//        while ( itr.hasNext() )\n//        {\n//            txString.append( itr.next().toString() );\n//            if ( itr.hasNext() )\n//            {\n//                txString.append( \",\" );\n//            }\n//        }\n        return txString.toString();\n    }","commit_id":"849ea2d872479ec20cdaf549f18295e3e4ed0bc0","url":"https://github.com/neo4j/neo4j"},{"original_method":"DirectMappedLogBuffer( FileChannel fileChannel ) throws IOException\n    {\n        this.fileChannel = fileChannel;\n        bufferStartPosition = fileChannel.position();\n        byteBuffer = ByteBuffer.allocateDirect( BUFFER_SIZE );\n        getNewMappedBuffer();\n    }","id":13661,"modified_method":"DirectMappedLogBuffer( FileChannel fileChannel ) throws IOException\n    {\n        this.fileChannel = fileChannel;\n        bufferStartPosition = fileChannel.position();\n        byteBuffer = ByteBuffer.allocateDirect( BUFFER_SIZE );\n    }","commit_id":"abc1a79a2c6482f539fd560bef5901154b7c0540","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void force() throws IOException\n    {\n        getNewMappedBuffer();\n        fileChannel.force( false );\n    }","id":13662,"modified_method":"public void force() throws IOException\n    {\n        getNewDirectBuffer();\n        fileChannel.force( false );\n    }","commit_id":"abc1a79a2c6482f539fd560bef5901154b7c0540","url":"https://github.com/neo4j/neo4j"},{"original_method":"public LogBuffer put( char[] chars ) throws IOException\n    {\n        if ( byteBuffer == null || \n            (BUFFER_SIZE - byteBuffer.position()) < (chars.length * 2) )\n        {\n            getNewMappedBuffer();\n        }\n        int oldPos = byteBuffer.position();\n        byteBuffer.asCharBuffer().put( chars );\n        byteBuffer.position( oldPos + chars.length * 2 );\n        return this;\n    }","id":13663,"modified_method":"public LogBuffer put( char[] chars ) throws IOException\n    {\n        put( chars, 0 );\n        return this;\n    }","commit_id":"abc1a79a2c6482f539fd560bef5901154b7c0540","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void getNewMappedBuffer() throws IOException\n    {\n        byteBuffer.flip();\n        bufferStartPosition += fileChannel.write( byteBuffer, \n            bufferStartPosition );\n        byteBuffer.clear();\n    }","id":13664,"modified_method":"private void getNewDirectBuffer() throws IOException\n    {\n        byteBuffer.flip();\n        bufferStartPosition += fileChannel.write( byteBuffer, \n            bufferStartPosition );\n        byteBuffer.clear();\n    }","commit_id":"abc1a79a2c6482f539fd560bef5901154b7c0540","url":"https://github.com/neo4j/neo4j"},{"original_method":"public LogBuffer putInt( int i ) throws IOException\n    {\n        if ( byteBuffer == null || \n            (BUFFER_SIZE - byteBuffer.position()) < 4 )\n        {\n            getNewMappedBuffer();\n        }\n        byteBuffer.putInt( i );\n        return this;\n    }","id":13665,"modified_method":"public LogBuffer putInt( int i ) throws IOException\n    {\n        if ( byteBuffer == null || \n            (BUFFER_SIZE - byteBuffer.position()) < 4 )\n        {\n            getNewDirectBuffer();\n        }\n        byteBuffer.putInt( i );\n        return this;\n    }","commit_id":"abc1a79a2c6482f539fd560bef5901154b7c0540","url":"https://github.com/neo4j/neo4j"},{"original_method":"public LogBuffer put( byte b ) throws IOException\n    {\n        if ( byteBuffer == null || \n            (BUFFER_SIZE - byteBuffer.position()) < 1 )\n        {\n            getNewMappedBuffer();\n        }\n        byteBuffer.put( b );\n        return this;\n    }","id":13666,"modified_method":"public LogBuffer put( byte b ) throws IOException\n    {\n        if ( byteBuffer == null || \n            (BUFFER_SIZE - byteBuffer.position()) < 1 )\n        {\n            getNewDirectBuffer();\n        }\n        byteBuffer.put( b );\n        return this;\n    }","commit_id":"abc1a79a2c6482f539fd560bef5901154b7c0540","url":"https://github.com/neo4j/neo4j"},{"original_method":"public LogBuffer put( byte[] bytes ) throws IOException\n    {\n        if ( byteBuffer == null || \n            (BUFFER_SIZE - byteBuffer.position()) < bytes.length )\n        {\n            getNewMappedBuffer();\n        }\n        byteBuffer.put( bytes );\n        return this;\n    }","id":13667,"modified_method":"public LogBuffer put( byte[] bytes ) throws IOException\n    {\n        put( bytes, 0 );\n        return this;\n    }","commit_id":"abc1a79a2c6482f539fd560bef5901154b7c0540","url":"https://github.com/neo4j/neo4j"},{"original_method":"public LogBuffer putLong( long l ) throws IOException\n    {\n        if ( byteBuffer == null || \n            (BUFFER_SIZE - byteBuffer.position()) < 8 )\n        {\n            getNewMappedBuffer();\n        }\n        byteBuffer.putLong( l );\n        return this;\n    }","id":13668,"modified_method":"public LogBuffer putLong( long l ) throws IOException\n    {\n        if ( byteBuffer == null || \n            (BUFFER_SIZE - byteBuffer.position()) < 8 )\n        {\n            getNewDirectBuffer();\n        }\n        byteBuffer.putLong( l );\n        return this;\n    }","commit_id":"abc1a79a2c6482f539fd560bef5901154b7c0540","url":"https://github.com/neo4j/neo4j"},{"original_method":"/**\n     * Creates a new relationship type store contained in <CODE>fileName<\/CODE>\n     * If filename is <CODE>null<\/CODE> or the file already exists an \n     * <CODE>IOException<\/CODE> is thrown.\n     * \n     * @param fileName\n     *            File name of the new relationship type store\n     * @throws IOException\n     *             If unable to create store or name null\n     */\n    public static void createStore( String fileName )\n    {\n        createEmptyStore( fileName, VERSION );\n        DynamicStringStore.createStore( fileName + \".names\",\n            TYPE_STORE_BLOCK_SIZE );\n        RelationshipTypeStore store = new RelationshipTypeStore( fileName );\n        store.markAsReserved( store.nextId() );\n        store.markAsReserved( store.nextId() );\n        store.markAsReserved( store.nextId() );\n        store.close();\n    }","id":13669,"modified_method":"/**\n     * Creates a new relationship type store contained in <CODE>fileName<\/CODE>\n     * If filename is <CODE>null<\/CODE> or the file already exists an \n     * <CODE>IOException<\/CODE> is thrown.\n     * \n     * @param fileName\n     *            File name of the new relationship type store\n     * @throws IOException\n     *             If unable to create store or name null\n     */\n    public static void createStore( String fileName )\n    {\n        createEmptyStore( fileName, VERSION );\n        DynamicStringStore.createStore( fileName + \".names\",\n            TYPE_STORE_BLOCK_SIZE );\n        RelationshipTypeStore store = new RelationshipTypeStore( fileName );\n        store.close();\n    }","commit_id":"abc1a79a2c6482f539fd560bef5901154b7c0540","url":"https://github.com/neo4j/neo4j"},{"original_method":"public synchronized String toString()\n    {\n        StringBuffer txString = new StringBuffer( \"Transaction[Status=\"\n            + txManager.getTxStatusAsString( status ) + \",ResourceList=\" );\n        Iterator<ResourceElement> itr = resourceList.iterator();\n        while ( itr.hasNext() )\n        {\n            txString.append( itr.next().toString() );\n            if ( itr.hasNext() )\n            {\n                txString.append( \",\" );\n            }\n        }\n        return txString.toString();\n    }","id":13670,"modified_method":"public synchronized String toString()\n    {\n        StringBuffer txString = new StringBuffer( \"Transaction(\" + \n            eventIdentifier + \")[\" + txManager.getTxStatusAsString( status ) + \n            \",Resources=\" + resourceList.size() + \"]\" );\n//        Iterator<ResourceElement> itr = resourceList.iterator();\n//        while ( itr.hasNext() )\n//        {\n//            txString.append( itr.next().toString() );\n//            if ( itr.hasNext() )\n//            {\n//                txString.append( \",\" );\n//            }\n//        }\n        return txString.toString();\n    }","commit_id":"abc1a79a2c6482f539fd560bef5901154b7c0540","url":"https://github.com/neo4j/neo4j"},{"original_method":"public LogBuffer put( byte[] bytes ) throws IOException\n    {\n        if ( byteBuffer == null || \n            (BUFFER_SIZE - byteBuffer.position()) < bytes.length )\n        {\n            getNewMappedBuffer();\n        }\n        byteBuffer.put( bytes );\n        return this;\n    }","id":13671,"modified_method":"public LogBuffer put( byte[] bytes ) throws IOException\n    {\n        put( bytes, 0 );\n        return this;\n    }","commit_id":"ee75e43184edc92bb24cbc5c6e0c6dc476121b3d","url":"https://github.com/neo4j/neo4j"},{"original_method":"public LogBuffer put( byte b ) throws IOException\n    {\n        if ( byteBuffer == null || \n            (BUFFER_SIZE - byteBuffer.position()) < 1 )\n        {\n            getNewMappedBuffer();\n        }\n        byteBuffer.put( b );\n        return this;\n    }","id":13672,"modified_method":"public LogBuffer put( byte b ) throws IOException\n    {\n        if ( byteBuffer == null || \n            (BUFFER_SIZE - byteBuffer.position()) < 1 )\n        {\n            getNewDirectBuffer();\n        }\n        byteBuffer.put( b );\n        return this;\n    }","commit_id":"ee75e43184edc92bb24cbc5c6e0c6dc476121b3d","url":"https://github.com/neo4j/neo4j"},{"original_method":"public LogBuffer putInt( int i ) throws IOException\n    {\n        if ( byteBuffer == null || \n            (BUFFER_SIZE - byteBuffer.position()) < 4 )\n        {\n            getNewMappedBuffer();\n        }\n        byteBuffer.putInt( i );\n        return this;\n    }","id":13673,"modified_method":"public LogBuffer putInt( int i ) throws IOException\n    {\n        if ( byteBuffer == null || \n            (BUFFER_SIZE - byteBuffer.position()) < 4 )\n        {\n            getNewDirectBuffer();\n        }\n        byteBuffer.putInt( i );\n        return this;\n    }","commit_id":"ee75e43184edc92bb24cbc5c6e0c6dc476121b3d","url":"https://github.com/neo4j/neo4j"},{"original_method":"public LogBuffer put( char[] chars ) throws IOException\n    {\n        if ( byteBuffer == null || \n            (BUFFER_SIZE - byteBuffer.position()) < (chars.length * 2) )\n        {\n            getNewMappedBuffer();\n        }\n        int oldPos = byteBuffer.position();\n        byteBuffer.asCharBuffer().put( chars );\n        byteBuffer.position( oldPos + chars.length * 2 );\n        return this;\n    }","id":13674,"modified_method":"public LogBuffer put( char[] chars ) throws IOException\n    {\n        put( chars, 0 );\n        return this;\n    }","commit_id":"ee75e43184edc92bb24cbc5c6e0c6dc476121b3d","url":"https://github.com/neo4j/neo4j"},{"original_method":"public LogBuffer putLong( long l ) throws IOException\n    {\n        if ( byteBuffer == null || \n            (BUFFER_SIZE - byteBuffer.position()) < 8 )\n        {\n            getNewMappedBuffer();\n        }\n        byteBuffer.putLong( l );\n        return this;\n    }","id":13675,"modified_method":"public LogBuffer putLong( long l ) throws IOException\n    {\n        if ( byteBuffer == null || \n            (BUFFER_SIZE - byteBuffer.position()) < 8 )\n        {\n            getNewDirectBuffer();\n        }\n        byteBuffer.putLong( l );\n        return this;\n    }","commit_id":"ee75e43184edc92bb24cbc5c6e0c6dc476121b3d","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void force() throws IOException\n    {\n        getNewMappedBuffer();\n        fileChannel.force( false );\n    }","id":13676,"modified_method":"public void force() throws IOException\n    {\n        getNewDirectBuffer();\n        fileChannel.force( false );\n    }","commit_id":"ee75e43184edc92bb24cbc5c6e0c6dc476121b3d","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void getNewMappedBuffer() throws IOException\n    {\n        byteBuffer.flip();\n        bufferStartPosition += fileChannel.write( byteBuffer, \n            bufferStartPosition );\n        byteBuffer.clear();\n    }","id":13677,"modified_method":"private void getNewDirectBuffer() throws IOException\n    {\n        byteBuffer.flip();\n        bufferStartPosition += fileChannel.write( byteBuffer, \n            bufferStartPosition );\n        byteBuffer.clear();\n    }","commit_id":"ee75e43184edc92bb24cbc5c6e0c6dc476121b3d","url":"https://github.com/neo4j/neo4j"},{"original_method":"DirectMappedLogBuffer( FileChannel fileChannel ) throws IOException\n    {\n        this.fileChannel = fileChannel;\n        bufferStartPosition = fileChannel.position();\n        byteBuffer = ByteBuffer.allocateDirect( BUFFER_SIZE );\n        getNewMappedBuffer();\n    }","id":13678,"modified_method":"DirectMappedLogBuffer( FileChannel fileChannel ) throws IOException\n    {\n        this.fileChannel = fileChannel;\n        bufferStartPosition = fileChannel.position();\n        byteBuffer = ByteBuffer.allocateDirect( BUFFER_SIZE );\n    }","commit_id":"ee75e43184edc92bb24cbc5c6e0c6dc476121b3d","url":"https://github.com/neo4j/neo4j"},{"original_method":"/**\n     * Creates a new relationship type store contained in <CODE>fileName<\/CODE>\n     * If filename is <CODE>null<\/CODE> or the file already exists an \n     * <CODE>IOException<\/CODE> is thrown.\n     * \n     * @param fileName\n     *            File name of the new relationship type store\n     * @throws IOException\n     *             If unable to create store or name null\n     */\n    public static void createStore( String fileName )\n    {\n        createEmptyStore( fileName, VERSION );\n        DynamicStringStore.createStore( fileName + \".names\",\n            TYPE_STORE_BLOCK_SIZE );\n        RelationshipTypeStore store = new RelationshipTypeStore( fileName );\n        store.markAsReserved( store.nextId() );\n        store.markAsReserved( store.nextId() );\n        store.markAsReserved( store.nextId() );\n        store.close();\n    }","id":13679,"modified_method":"/**\n     * Creates a new relationship type store contained in <CODE>fileName<\/CODE>\n     * If filename is <CODE>null<\/CODE> or the file already exists an \n     * <CODE>IOException<\/CODE> is thrown.\n     * \n     * @param fileName\n     *            File name of the new relationship type store\n     * @throws IOException\n     *             If unable to create store or name null\n     */\n    public static void createStore( String fileName )\n    {\n        createEmptyStore( fileName, VERSION );\n        DynamicStringStore.createStore( fileName + \".names\",\n            TYPE_STORE_BLOCK_SIZE );\n        RelationshipTypeStore store = new RelationshipTypeStore( fileName );\n        store.close();\n    }","commit_id":"ee75e43184edc92bb24cbc5c6e0c6dc476121b3d","url":"https://github.com/neo4j/neo4j"},{"original_method":"public synchronized String toString()\n    {\n        StringBuffer txString = new StringBuffer( \"Transaction[Status=\"\n            + txManager.getTxStatusAsString( status ) + \",ResourceList=\" );\n        Iterator<ResourceElement> itr = resourceList.iterator();\n        while ( itr.hasNext() )\n        {\n            txString.append( itr.next().toString() );\n            if ( itr.hasNext() )\n            {\n                txString.append( \",\" );\n            }\n        }\n        return txString.toString();\n    }","id":13680,"modified_method":"public synchronized String toString()\n    {\n        StringBuffer txString = new StringBuffer( \"Transaction(\" + \n            eventIdentifier + \")[\" + txManager.getTxStatusAsString( status ) + \n            \",Resources=\" + resourceList.size() + \"]\" );\n//        Iterator<ResourceElement> itr = resourceList.iterator();\n//        while ( itr.hasNext() )\n//        {\n//            txString.append( itr.next().toString() );\n//            if ( itr.hasNext() )\n//            {\n//                txString.append( \",\" );\n//            }\n//        }\n        return txString.toString();\n    }","commit_id":"ee75e43184edc92bb24cbc5c6e0c6dc476121b3d","url":"https://github.com/neo4j/neo4j"},{"original_method":"private List<String> effectiveAllowOrigins(CrossOriginResourceSharing ann) {\n        if (ann != null) {\n            if (ann.allowOrigins() == null) {\n                return Collections.emptyList();\n            }\n            return Arrays.asList(ann.allowOrigins());\n        } else {\n            return allowOrigins;\n        }\n    }","id":13681,"modified_method":"private List<String> effectiveAllowOrigins(CrossOriginResourceSharing ann) {\n        List<String> actualOrigins = Collections.emptyList(); \n        if (ann != null && ann.allowOrigins() != null) {\n            actualOrigins = Arrays.asList(ann.allowOrigins());\n        } \n        \n        return actualOrigins.isEmpty() ? allowOrigins : actualOrigins;\n    }","commit_id":"9fe71223c121e365c47da43fc43c661404e2a8b7","url":"https://github.com/apache/cxf"},{"original_method":"private List<String> effectiveExposeHeaders(CrossOriginResourceSharing ann) {\n        if (ann != null) {\n            if (ann.exposeHeaders() == null) {\n                return Collections.emptyList();\n            }\n            return Arrays.asList(ann.exposeHeaders());\n        } else {\n            return exposeHeaders;\n        }\n    }","id":13682,"modified_method":"private List<String> effectiveExposeHeaders(CrossOriginResourceSharing ann) {\n        List<String> actualExposeHeaders = Collections.emptyList(); \n        if (ann != null && ann.exposeHeaders() != null) {\n            actualExposeHeaders = Arrays.asList(ann.exposeHeaders());\n        } \n        \n        return actualExposeHeaders.isEmpty() ? exposeHeaders : actualExposeHeaders;\n    }","commit_id":"9fe71223c121e365c47da43fc43c661404e2a8b7","url":"https://github.com/apache/cxf"},{"original_method":"private List<String> effectiveAllowHeaders(CrossOriginResourceSharing ann) {\n        if (ann != null) {\n            if (ann.allowHeaders() == null) {\n                return Collections.emptyList();\n            }\n            return Arrays.asList(ann.allowHeaders());\n        } else {\n            return allowHeaders;\n        }\n    }","id":13683,"modified_method":"private List<String> effectiveAllowHeaders(CrossOriginResourceSharing ann) {\n        List<String> actualHeaders = Collections.emptyList(); \n        if (ann != null && ann.allowHeaders() != null) {\n            actualHeaders = Arrays.asList(ann.allowHeaders());\n        } \n        \n        return actualHeaders.isEmpty() ? allowHeaders : actualHeaders;\n    }","commit_id":"9fe71223c121e365c47da43fc43c661404e2a8b7","url":"https://github.com/apache/cxf"},{"original_method":"@Override\n    public boolean checkTrigger(GameEvent event, Game game) {\n        if (event.getType().equals(GameEvent.EventType.UNTAPPED) && event.getTargetId().equals(this.getSourceId())) {\n            return true;\n        }\n        return false;\n    }","id":13684,"modified_method":"@Override\n    public boolean checkTrigger(GameEvent event, Game game) {\n        return event.getType().equals(GameEvent.EventType.UNTAPPED) && event.getTargetId().equals(this.getSourceId());\n    }","commit_id":"4e5a3ebaeebbbb8cebc237e5800be467d3bdaf98","url":"https://github.com/magefree/mage"},{"original_method":"public FuryCharm(UUID ownerId) {\r\n        super(ownerId, 100, \"Fury Charm\", Rarity.COMMON, new CardType[]{CardType.INSTANT}, \"{1}{R}\");\r\n        this.expansionSetCode = \"PLC\";\r\n\r\n        this.color.setRed(true);\r\n\r\n        // Choose one -\r\n        this.getSpellAbility().getModes().setMinModes(1);\r\n        this.getSpellAbility().getModes().setMaxModes(1);\r\n        // Destroy target artifact;\r\n        this.getSpellAbility().addEffect(new DestroyTargetEffect());\r\n        this.getSpellAbility().addTarget(new TargetArtifactPermanent());\r\n        // or target creature gets +1/+1 and gains trample until end of turn;\r\n        Mode mode = new Mode();\r\n        mode.getEffects().add(new BoostTargetEffect(1,1, Duration.EndOfTurn));\r\n        mode.getEffects().add(new GainAbilityTargetEffect(TrampleAbility.getInstance(),Duration.EndOfTurn));\r\n        mode.getTargets().add(new TargetCreaturePermanent());\r\n        this.getSpellAbility().getModes().addMode(mode);\r\n        // or remove two time counters from target permanent or suspended card.\r\n        mode = new Mode();\r\n        Choice targetChoice = new ChoiceImpl();\r\n        targetChoice.setMessage(\"Choose what to target\");\r\n        targetChoice.getChoices().add(\"Permanent\");\r\n        targetChoice.getChoices().add(\"Suspended Card\");\r\n        mode.getChoices().add(targetChoice);\r\n        mode.getEffects().add(new FuryCharmRemoveCounterEffect());\r\n        this.getSpellAbility().getModes().addMode(mode);\r\n\r\n\r\n\r\n    }","id":13685,"modified_method":"public FuryCharm(UUID ownerId) {\r\n        super(ownerId, 100, \"Fury Charm\", Rarity.COMMON, new CardType[]{CardType.INSTANT}, \"{1}{R}\");\r\n        this.expansionSetCode = \"PLC\";\r\n\r\n        this.color.setRed(true);\r\n\r\n        // Choose one -\r\n        this.getSpellAbility().getModes().setMinModes(1);\r\n        this.getSpellAbility().getModes().setMaxModes(1);\r\n        // Destroy target artifact;\r\n        this.getSpellAbility().addEffect(new DestroyTargetEffect());\r\n        this.getSpellAbility().addTarget(new TargetArtifactPermanent());\r\n        // or target creature gets +1/+1 and gains trample until end of turn;\r\n        Mode mode = new Mode();\r\n        Effect effect = new BoostTargetEffect(1,1, Duration.EndOfTurn);\r\n        effect.setText(\"target creature gets +1/+1\");\r\n        mode.getEffects().add(effect);\r\n        effect = new GainAbilityTargetEffect(TrampleAbility.getInstance(),Duration.EndOfTurn);\r\n        effect.setText(\"and gains trample until end of turn\");\r\n        mode.getEffects().add(effect);\r\n        mode.getTargets().add(new TargetCreaturePermanent());\r\n        this.getSpellAbility().getModes().addMode(mode);\r\n        // or remove two time counters from target permanent or suspended card.\r\n        mode = new Mode();\r\n        Choice targetChoice = new ChoiceImpl();\r\n        targetChoice.setMessage(\"Choose what to target\");\r\n        targetChoice.getChoices().add(\"Permanent\");\r\n        targetChoice.getChoices().add(\"Suspended Card\");\r\n        mode.getChoices().add(targetChoice);\r\n        mode.getEffects().add(new FuryCharmRemoveCounterEffect());\r\n        this.getSpellAbility().getModes().addMode(mode);\r\n\r\n\r\n\r\n    }","commit_id":"4e5a3ebaeebbbb8cebc237e5800be467d3bdaf98","url":"https://github.com/magefree/mage"},{"original_method":"public RainOfThorns(UUID ownerId) {\n        super(ownerId, 190, \"Rain of Thorns\", Rarity.UNCOMMON, new CardType[]{CardType.SORCERY}, \"{4}{G}{G}\");\n        this.expansionSetCode = \"AVR\";\n\n        this.color.setGreen(true);\n\n        // Choose one or more - Destroy target artifact; destroy target enchantment; and/or destroy target land.\n        this.getSpellAbility().addEffect(new DestroyTargetEffect());\n        this.getSpellAbility().addTarget(new TargetArtifactPermanent());\n\n        Mode mode1 = new Mode();\n        mode1.getEffects().add(new DestroyTargetEffect());\n        mode1.getTargets().add(new TargetPermanent(new FilterEnchantment()));\n        this.getSpellAbility().addMode(mode1);\n\n        Mode mode2 = new Mode();\n        mode2.getEffects().add(new DestroyTargetEffect());\n        mode2.getTargets().add(new TargetPermanent(new FilterLandPermanent()));\n        this.getSpellAbility().addMode(mode2);\n\n        Mode mode3 = new Mode();\n        mode3.getEffects().add(new DestroyTargetEffect(\"Destroy target artifact, then destroy target enchantment\"));\n        mode3.getTargets().add(new TargetArtifactPermanent());\n        mode3.getTargets().add(new TargetPermanent(new FilterEnchantment()));\n        this.getSpellAbility().addMode(mode3);\n\n        Mode mode4 = new Mode();\n        mode4.getEffects().add(new DestroyTargetEffect(\"Destroy target artifact, then destroy target land\"));\n        mode4.getTargets().add(new TargetArtifactPermanent());\n        mode4.getTargets().add(new TargetPermanent(new FilterLandPermanent()));\n        this.getSpellAbility().addMode(mode4);\n\n        Mode mode5 = new Mode();\n        mode5.getEffects().add(new DestroyTargetEffect(\"Destroy target enchantment, then destroy target land\"));\n        mode5.getTargets().add(new TargetPermanent(new FilterEnchantment()));\n        mode5.getTargets().add(new TargetPermanent(new FilterLandPermanent()));\n        this.getSpellAbility().addMode(mode5);\n    }","id":13686,"modified_method":"public RainOfThorns(UUID ownerId) {\n        super(ownerId, 190, \"Rain of Thorns\", Rarity.UNCOMMON, new CardType[]{CardType.SORCERY}, \"{4}{G}{G}\");\n        this.expansionSetCode = \"AVR\";\n\n        this.color.setGreen(true);\n\n        // Choose one or more - Destroy target artifact; destroy target enchantment; and/or destroy target land.\n        this.getSpellAbility().addEffect(new DestroyTargetEffect());\n        this.getSpellAbility().addTarget(new TargetArtifactPermanent());\n        this.getSpellAbility().getModes().setMaxModes(1);\n        this.getSpellAbility().getModes().setMaxModes(3);\n\n        Mode mode1 = new Mode();\n        mode1.getEffects().add(new DestroyTargetEffect());\n        mode1.getTargets().add(new TargetPermanent(new FilterEnchantment()));\n        this.getSpellAbility().addMode(mode1);\n\n        Mode mode2 = new Mode();\n        mode2.getEffects().add(new DestroyTargetEffect());\n        mode2.getTargets().add(new TargetPermanent(new FilterLandPermanent()));\n        this.getSpellAbility().addMode(mode2);\n    }","commit_id":"4e5a3ebaeebbbb8cebc237e5800be467d3bdaf98","url":"https://github.com/magefree/mage"},{"original_method":"public BranchingBolt(UUID ownerId) {\r\n        super(ownerId, 158, \"Branching Bolt\", Rarity.COMMON, new CardType[]{CardType.INSTANT}, \"{1}{R}{G}\");\r\n        this.expansionSetCode = \"ALA\";\r\n\r\n        this.color.setRed(true);\r\n        this.color.setGreen(true);\r\n\r\n        // Choose one or both - Branching Bolt deals 3 damage to target creature with flying;\r\n        this.getSpellAbility().addEffect(new DamageTargetEffect(3));\r\n        this.getSpellAbility().addTarget(new TargetCreaturePermanent(filterFlying));\r\n        // or Branching Bolt deals 3 damage to target creature without flying.\r\n        Mode mode = new Mode();\r\n        mode.getEffects().add(new DamageTargetEffect(3));\r\n        mode.getTargets().add(new TargetCreaturePermanent(filterNotFlying));\r\n        this.getSpellAbility().addMode(mode);\r\n        // both\r\n        mode = new Mode();\r\n        mode.getEffects().add(new DamageTargetEffect(3));\r\n        mode.getTargets().add(new TargetCreaturePermanent(filterFlying));\r\n        mode.getTargets().add(new TargetCreaturePermanent(filterNotFlying));\r\n        this.getSpellAbility().addMode(mode);\r\n    }","id":13687,"modified_method":"public BranchingBolt(UUID ownerId) {\r\n        super(ownerId, 158, \"Branching Bolt\", Rarity.COMMON, new CardType[]{CardType.INSTANT}, \"{1}{R}{G}\");\r\n        this.expansionSetCode = \"ALA\";\r\n\r\n        this.color.setRed(true);\r\n        this.color.setGreen(true);\r\n\r\n        // Choose one or both -\r\n        this.getSpellAbility().getModes().setMinModes(1);\r\n        this.getSpellAbility().getModes().setMaxModes(2);\r\n        // Branching Bolt deals 3 damage to target creature with flying;\r\n        this.getSpellAbility().addEffect(new DamageTargetEffect(3));\r\n        this.getSpellAbility().addTarget(new TargetCreaturePermanent(filterFlying));\r\n        // or Branching Bolt deals 3 damage to target creature without flying.\r\n        Mode mode = new Mode();\r\n        mode.getEffects().add(new DamageTargetEffect(3));\r\n        mode.getTargets().add(new TargetCreaturePermanent(filterNotFlying));\r\n        this.getSpellAbility().addMode(mode);\r\n    }","commit_id":"4d3d76e8e90d35bb08536c2b1fedbb9b55f49d99","url":"https://github.com/magefree/mage"},{"original_method":"public ClanDefiance(UUID ownerId) {\r\n        super(ownerId, 151, \"Clan Defiance\", Rarity.RARE, new CardType[]{CardType.SORCERY}, \"{X}{R}{G}\");\r\n        this.expansionSetCode = \"GTC\";\r\n\r\n        this.color.setRed(true);\r\n        this.color.setGreen(true);\r\n\r\n        // Choose one or more - Clan Defiance deals X damage to target creature with flying; Clan Defiance deals X damage to target creature without flying; and/or Clan Defiance deals X damage to target player.\r\n        this.getSpellAbility().addEffect(new DamageTargetEffect(new ManacostVariableValue()));\r\n        this.getSpellAbility().addTarget(new TargetCreaturePermanent(filter));\r\n\r\n        Mode mode1 = new Mode();\r\n        mode1.getEffects().add(new DamageTargetEffect(new ManacostVariableValue()));\r\n        mode1.getTargets().add(new TargetCreaturePermanent(filter2));\r\n        this.getSpellAbility().addMode(mode1);\r\n\r\n        Mode mode2 = new Mode();\r\n        mode2.getEffects().add(new DamageTargetEffect(new ManacostVariableValue()));\r\n        mode2.getTargets().add(new TargetPlayer());\r\n        this.getSpellAbility().addMode(mode2);\r\n\r\n        Mode mode3 = new Mode();\r\n        mode3.getEffects().add(new DamageTargetEffect(new ManacostVariableValue(), true, \"target creature with flying, then deals X damage to target creature without flying\"));\r\n        mode3.getTargets().add(new TargetCreaturePermanent(filter));\r\n        mode3.getTargets().add(new TargetCreaturePermanent(filter2));\r\n        this.getSpellAbility().addMode(mode3);\r\n\r\n        Mode mode4 = new Mode();\r\n        mode4.getEffects().add(new DamageTargetEffect(new ManacostVariableValue(), true, \"target creature with flying, then deals X damage to target player\"));\r\n        mode4.getTargets().add(new TargetCreaturePermanent(filter));\r\n        mode4.getTargets().add(new TargetPlayer());\r\n        this.getSpellAbility().addMode(mode4);\r\n\r\n        Mode mode5 = new Mode();\r\n        mode5.getEffects().add(new DamageTargetEffect(new ManacostVariableValue(), true, \"target creature without flying, then deals X damage to target player\"));\r\n        mode5.getTargets().add(new TargetCreaturePermanent(filter2));\r\n        mode5.getTargets().add(new TargetPlayer());\r\n        this.getSpellAbility().addMode(mode5);\r\n        \r\n        Mode mode6 = new Mode();\r\n        mode6.getEffects().add(new DamageTargetEffect(new ManacostVariableValue(), true, \"target creature with flying, then deals X damage to target creature without flying, then deals X damage to target player\"));\r\n        mode6.getTargets().add(new TargetCreaturePermanent(filter));\r\n        mode6.getTargets().add(new TargetCreaturePermanent(filter2));\r\n        mode6.getTargets().add(new TargetPlayer());\r\n        this.getSpellAbility().addMode(mode6);\r\n    }","id":13688,"modified_method":"public ClanDefiance(UUID ownerId) {\r\n        super(ownerId, 151, \"Clan Defiance\", Rarity.RARE, new CardType[]{CardType.SORCERY}, \"{X}{R}{G}\");\r\n        this.expansionSetCode = \"GTC\";\r\n\r\n        this.color.setRed(true);\r\n        this.color.setGreen(true);\r\n\r\n        // Choose one or more - \r\n        this.getSpellAbility().getModes().setMinModes(1);\r\n        this.getSpellAbility().getModes().setMaxModes(3);\r\n        // Clan Defiance deals X damage to target creature with flying;\r\n        this.getSpellAbility().addEffect(new DamageTargetEffect(new ManacostVariableValue()));\r\n        this.getSpellAbility().addTarget(new TargetCreaturePermanent(filter));\r\n        // Clan Defiance deals X damage to target creature without flying;\r\n        Mode mode1 = new Mode();\r\n        mode1.getEffects().add(new DamageTargetEffect(new ManacostVariableValue()));\r\n        mode1.getTargets().add(new TargetCreaturePermanent(filter2));\r\n        this.getSpellAbility().addMode(mode1);\r\n        // and/or Clan Defiance deals X damage to target player.\r\n        Mode mode2 = new Mode();\r\n        mode2.getEffects().add(new DamageTargetEffect(new ManacostVariableValue()));\r\n        mode2.getTargets().add(new TargetPlayer());\r\n        this.getSpellAbility().addMode(mode2);\r\n        \r\n    }","commit_id":"4d3d76e8e90d35bb08536c2b1fedbb9b55f49d99","url":"https://github.com/magefree/mage"},{"original_method":"public CrypticCommand(UUID ownerId) {\n        super(ownerId, 56, \"Cryptic Command\", Rarity.RARE, new CardType[]{CardType.INSTANT}, \"{1}{U}{U}{U}\");\n        this.expansionSetCode = \"LRW\";\n\n        this.color.setBlue(true);\n\n        // Choose two - Counter target spell; or return target permanent to its owner's hand; or tap all creatures your opponents control; or draw a card.\n        this.getSpellAbility().addTarget(new TargetCreaturePermanent());\n        this.getSpellAbility().addTarget(new TargetSpell());\n        this.getSpellAbility().addEffect(new ReturnToHandTargetEffect());\n        this.getSpellAbility().addEffect(new CounterSecondTargetEffect());\n\n        Mode mode1 = new Mode();\n        mode1.getTargets().add(new TargetSpell());\n        mode1.getEffects().add(new CounterTargetEffect());\n        mode1.getEffects().add(new CrypticCommandEffect());\n        this.getSpellAbility().addMode(mode1);\n\n        Mode mode2 = new Mode();\n        mode2.getTargets().add(new TargetSpell());\n        mode2.getEffects().add(new CounterTargetEffect());\n        mode2.getEffects().add(new DrawCardControllerEffect(1));\n        this.getSpellAbility().addMode(mode2);\n\n        Mode mode3 = new Mode();\n        mode3.getTargets().add(new TargetCreaturePermanent());\n        mode3.getEffects().add(new ReturnToHandTargetEffect());\n        mode3.getEffects().add(new CrypticCommandEffect());\n        this.getSpellAbility().addMode(mode3);\n\n        Mode mode4 = new Mode();\n        mode4.getTargets().add(new TargetCreaturePermanent());\n        mode4.getEffects().add(new ReturnToHandTargetEffect());\n        mode4.getEffects().add(new DrawCardControllerEffect(1));\n        this.getSpellAbility().addMode(mode4);\n\n        Mode mode5 = new Mode();\n        mode5.getTargets().add(new TargetPlayer());\n        mode5.getEffects().add(new CrypticCommandEffect());\n        mode5.getEffects().add(new DrawCardControllerEffect(1));\n        this.getSpellAbility().addMode(mode5);\n    }","id":13689,"modified_method":"public CrypticCommand(UUID ownerId) {\n        super(ownerId, 56, \"Cryptic Command\", Rarity.RARE, new CardType[]{CardType.INSTANT}, \"{1}{U}{U}{U}\");\n        this.expansionSetCode = \"LRW\";\n\n        this.color.setBlue(true);\n\n        // Choose two -\n        this.getSpellAbility().getModes().setMinModes(2);\n        this.getSpellAbility().getModes().setMaxModes(2);\n        // Counter target spell;\n        this.getSpellAbility().addEffect(new CounterTargetEffect());\n        this.getSpellAbility().addTarget(new TargetSpell());\n        // or return target permanent to its owner's hand;\n        Mode mode = new Mode();\n        mode.getEffects().add(new ReturnToHandTargetEffect());\n        mode.getTargets().add(new TargetCreaturePermanent());\n        this.getSpellAbility().getModes().addMode(mode);\n        // or tap all creatures your opponents control;\n        mode = new Mode();\n        mode.getEffects().add(new CrypticCommandEffect());\n        this.getSpellAbility().getModes().addMode(mode);\n        // or draw a card.\n        mode = new Mode();\n        mode.getEffects().add(new DrawCardControllerEffect(1));\n        this.getSpellAbility().getModes().addMode(mode);\n    }","commit_id":"4d3d76e8e90d35bb08536c2b1fedbb9b55f49d99","url":"https://github.com/magefree/mage"},{"original_method":"protected void attachRemotingAttachments(final InterceptorContext interceptorContext, final RemotingAttachments remotingAttachments) {\n        if (remotingAttachments == null) {\n            return;\n        }\n        // attach the RemotingAttachments\n        interceptorContext.putPrivateData(RemotingAttachments.class, remotingAttachments);\n        // we also attach the known individual keys so that the interceptors themselves don't have to\n        // dig into the RemotingAttachments to find them\n        for (RemotingAttachments.RemotingAttachment attachment : remotingAttachments) {\n            final int attachmentId = attachment.getKey();\n            switch (attachmentId) {\n                case 0x0000:\n                    final byte[] sessionIdBytes = attachment.getValue();\n                    final SessionID sessionID = SessionID.createSessionID(sessionIdBytes);\n                    // add it to the interceptor context\n                    interceptorContext.putPrivateData(SessionID.SESSION_ID_KEY, sessionID);\n                    break;\n                default:\n                    break;\n            }\n        }\n    }","id":13690,"modified_method":"protected void attachRemotingAttachments(final InterceptorContext interceptorContext, final Locator ejbLocator, final RemotingAttachments remotingAttachments) {\n        if (remotingAttachments != null) {\n            // attach the RemotingAttachments\n            interceptorContext.putPrivateData(RemotingAttachments.class, remotingAttachments);\n            // we also attach the known individual keys so that the interceptors themselves don't have to\n            // dig into the RemotingAttachments to find them\n            for (RemotingAttachments.RemotingAttachment attachment : remotingAttachments) {\n                final int attachmentId = attachment.getKey();\n                switch (attachmentId) {\n    //                case 0x0000:\n    //                    final byte[] sessionIdBytes = attachment.getValue();\n    //                    final SessionID sessionID = SessionID.createSessionID(sessionIdBytes);\n    //                    // add it to the interceptor context\n    //                    interceptorContext.putPrivateData(SessionID.SESSION_ID_KEY, sessionID);\n    //                    break;\n                    default:\n                        break;\n                }\n            }\n        }\n\n        // add the session id to the interceptor context, if it's a stateful ejb locator\n        if (ejbLocator instanceof StatefulEJBLocator) {\n            interceptorContext.putPrivateData(SessionID.SESSION_ID_KEY, ((StatefulEJBLocator) ejbLocator).getSessionId());\n        }\n    }","commit_id":"c42bf6558b9ad389f0c5c82a9c0065d1674f7c58","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Tests that invocations on a stateful session bean work after a session is created and the stateful\n     * session bean really acts as a stateful bean\n     *\n     * @throws Exception\n     */\n    @Test\n    public void testSFSBInvocation() throws Exception {\n        final Counter counter = EJBClient.getProxy(APP_NAME, MODULE_NAME, null, CounterBean.class.getSimpleName(), Counter.class);\n        Assert.assertNotNull(\"Received a null proxy\", counter);\n        // open a session for the SFSB\n        EJBClient.createSession(counter);\n        // invoke the bean\n        final int initialCount = counter.getCount();\n        logger.info(\"Got initial count \" + initialCount);\n        Assert.assertEquals(\"Unexpected initial count from stateful bean\", 0, initialCount);\n        final int NUM_TIMES = 25;\n        for (int i = 1; i <= NUM_TIMES; i++) {\n            final int count = counter.incrementAndGetCount();\n            logger.info(\"Got next count \" + count);\n            Assert.assertEquals(\"Unexpected count after increment\", i, count);\n        }\n        final int finalCount = counter.getCount();\n        logger.info(\"Got final count \" + finalCount);\n        Assert.assertEquals(\"Unexpected final count\", NUM_TIMES, finalCount);\n    }","id":13691,"modified_method":"/**\n     * Tests that invocations on a stateful session bean work after a session is created and the stateful\n     * session bean really acts as a stateful bean\n     *\n     * @throws Exception\n     */\n    @Test\n    //@Ignore\n    public void testSFSBInvocation() throws Exception {\n        // open a session for the SFSB\n        final SessionID sessionID = EJBClient.createSession(APP_NAME, MODULE_NAME, CounterBean.class.getSimpleName(), \"\");\n        final StatefulEJBLocator<Counter> locator = new StatefulEJBLocator<Counter>(Counter.class, APP_NAME, MODULE_NAME, CounterBean.class.getSimpleName(), \"\", sessionID);\n        final Counter counter = EJBClient.createProxy(locator);\n        Assert.assertNotNull(\"Received a null proxy\", counter);\n        // invoke the bean\n        final int initialCount = counter.getCount();\n        logger.info(\"Got initial count \" + initialCount);\n        Assert.assertEquals(\"Unexpected initial count from stateful bean\", 0, initialCount);\n        final int NUM_TIMES = 25;\n        for (int i = 1; i <= NUM_TIMES; i++) {\n            final int count = counter.incrementAndGetCount();\n            logger.info(\"Got next count \" + count);\n            Assert.assertEquals(\"Unexpected count after increment\", i, count);\n        }\n        final int finalCount = counter.getCount();\n        logger.info(\"Got final count \" + finalCount);\n        Assert.assertEquals(\"Unexpected final count\", NUM_TIMES, finalCount);\n    }","commit_id":"c42bf6558b9ad389f0c5c82a9c0065d1674f7c58","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Tests that a SLSB method which is marked as asynchronous and returns a {@link java.util.concurrent.Future}\n     * is invoked asynchronously and the client isn't blocked for the lifetime of the method\n     *\n     * @throws Exception\n     */\n    @Test\n    public void testAsyncFutureMethodOnSLSB() throws Exception {\n        final EchoRemote echoRemote = EJBClient.getProxy(APP_NAME, MODULE_NAME, null, EchoBean.class.getSimpleName(), EchoRemote.class);\n        Assert.assertNotNull(\"Received a null proxy\", echoRemote);\n        final String message = \"You are supposed to be an asynchronous method\";\n        final long DELAY = 5000;\n        final long start = System.currentTimeMillis();\n        // invoke the asynchronous method\n        final Future<String> futureEcho = echoRemote.asyncEcho(message, DELAY);\n        final long end = System.currentTimeMillis();\n        logger.info(\"Asynchronous invocation returned a Future: \" + futureEcho + \" in \" + (end - start) + \" milli seconds\");\n        // test that the invocation did not act like a synchronous invocation and instead returned \"immediately\"\n        Assert.assertFalse(\"Asynchronous invocation behaved like a synchronous invocation\", (end - start) >= DELAY);\n        Assert.assertNotNull(\"Future is null\", futureEcho);\n        // Check if the result is marked as complete (it shouldn't be this soon)\n        Assert.assertFalse(\"Future result is unexpectedly completed\", futureEcho.isDone());\n        // wait for the result\n        final String echo = futureEcho.get();\n        Assert.assertEquals(\"Unexpected echo message\", message, echo);\n    }","id":13692,"modified_method":"/**\n     * Tests that a SLSB method which is marked as asynchronous and returns a {@link java.util.concurrent.Future}\n     * is invoked asynchronously and the client isn't blocked for the lifetime of the method\n     *\n     * @throws Exception\n     */\n    @Test\n    public void testAsyncFutureMethodOnSLSB() throws Exception {\n        final StatelessEJBLocator<EchoRemote> locator = new StatelessEJBLocator<EchoRemote>(EchoRemote.class, APP_NAME, MODULE_NAME, EchoBean.class.getSimpleName(), \"\");\n        final EchoRemote echoRemote = EJBClient.createProxy(locator);\n        Assert.assertNotNull(\"Received a null proxy\", echoRemote);\n        final String message = \"You are supposed to be an asynchronous method\";\n        final long DELAY = 5000;\n        final long start = System.currentTimeMillis();\n        // invoke the asynchronous method\n        final Future<String> futureEcho = echoRemote.asyncEcho(message, DELAY);\n        final long end = System.currentTimeMillis();\n        logger.info(\"Asynchronous invocation returned a Future: \" + futureEcho + \" in \" + (end - start) + \" milli seconds\");\n        // test that the invocation did not act like a synchronous invocation and instead returned \"immediately\"\n        Assert.assertFalse(\"Asynchronous invocation behaved like a synchronous invocation\", (end - start) >= DELAY);\n        Assert.assertNotNull(\"Future is null\", futureEcho);\n        // Check if the result is marked as complete (it shouldn't be this soon)\n        Assert.assertFalse(\"Future result is unexpectedly completed\", futureEcho.isDone());\n        // wait for the result\n        final String echo = futureEcho.get();\n        Assert.assertEquals(\"Unexpected echo message\", message, echo);\n    }","commit_id":"c42bf6558b9ad389f0c5c82a9c0065d1674f7c58","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Tests that invocation on a stateful session bean fails, if a session hasn't been created\n     *\n     * @throws Exception\n     */\n    @Test\n    public void testSFSBAccessFailureWithoutSession() throws Exception {\n        final Counter counter = EJBClient.getProxy(APP_NAME, MODULE_NAME, null, CounterBean.class.getSimpleName(), Counter.class);\n        Assert.assertNotNull(\"Received a null proxy\", counter);\n        // invoke the bean without creating a session\n        try {\n            final int initialCount = counter.getCount();\n            Assert.fail(\"Expected a EJBException for calling a stateful session bean without creating a session\");\n        } catch (EJBException ejbe) {\n            // expected\n            logger.info(\"Received the expected exception\", ejbe);\n\n        }\n    }","id":13693,"modified_method":"/**\n     * Tests that invocation on a stateful session bean fails, if a session hasn't been created\n     *\n     * @throws Exception\n     */\n    @Test\n    @Ignore\n    public void testSFSBAccessFailureWithoutSession() throws Exception {\n        // create a locator without a session\n        final StatefulEJBLocator<Counter> locator = new StatefulEJBLocator<Counter>(Counter.class, APP_NAME, MODULE_NAME, CounterBean.class.getSimpleName(), \"\", null);\n        final Counter counter = EJBClient.createProxy(locator);\n        Assert.assertNotNull(\"Received a null proxy\", counter);\n        // invoke the bean without creating a session\n        try {\n            final int initialCount = counter.getCount();\n            Assert.fail(\"Expected a EJBException for calling a stateful session bean without creating a session\");\n        } catch (EJBException ejbe) {\n            // expected\n            logger.info(\"Received the expected exception\", ejbe);\n\n        }\n    }","commit_id":"c42bf6558b9ad389f0c5c82a9c0065d1674f7c58","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Tests that the invocation on a non-existent view of an (existing) EJB leads to a {@link NoSuchEJBException}\n     *\n     * @throws Exception\n     */\n    @Test\n    public void testNonExistentViewForEJB() throws Exception {\n        final NotAnEJBInterface nonExistentBean = EJBClient.getProxy(APP_NAME, MODULE_NAME, null, EchoBean.class.getSimpleName(), NotAnEJBInterface.class);\n        Assert.assertNotNull(\"Received a null proxy\", nonExistentBean);\n        // invoke on the (non-existent) view of a bean\n        try {\n            nonExistentBean.echo(\"Hello world to a non-existent view of a bean\");\n            Assert.fail(\"Expected a NoSuchEJBException\");\n        } catch (NoSuchEJBException nsee) {\n            // expected\n            logger.info(\"Received the expected exception\", nsee);\n        }\n    }","id":13694,"modified_method":"/**\n     * Tests that the invocation on a non-existent view of an (existing) EJB leads to a {@link NoSuchEJBException}\n     *\n     * @throws Exception\n     */\n    @Test\n    public void testNonExistentViewForEJB() throws Exception {\n        final StatelessEJBLocator<NotAnEJBInterface> locator = new StatelessEJBLocator<NotAnEJBInterface>(NotAnEJBInterface.class, APP_NAME, MODULE_NAME, EchoBean.class.getSimpleName(), \"\");\n        final NotAnEJBInterface nonExistentBean = EJBClient.createProxy(locator);\n        Assert.assertNotNull(\"Received a null proxy\", nonExistentBean);\n        // invoke on the (non-existent) view of a bean\n        try {\n            nonExistentBean.echo(\"Hello world to a non-existent view of a bean\");\n            Assert.fail(\"Expected a NoSuchEJBException\");\n        } catch (NoSuchEJBException nsee) {\n            // expected\n            logger.info(\"Received the expected exception\", nsee);\n        }\n    }","commit_id":"c42bf6558b9ad389f0c5c82a9c0065d1674f7c58","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Test a simple invocation on a remote view of a Stateless session bean method\n     *\n     * @throws Exception\n     */\n    @Test\n    public void testRemoteSLSBInvocation() throws Exception {\n        final EchoRemote proxy = EJBClient.getProxy(APP_NAME, MODULE_NAME, null, EchoBean.class.getSimpleName(), EchoRemote.class);\n        Assert.assertNotNull(\"Received a null proxy\", proxy);\n        final String message = \"Hello world from a really remote client\";\n        final String echo = proxy.echo(message);\n        Assert.assertEquals(\"Unexpected echo message\", message, echo);\n    }","id":13695,"modified_method":"/**\n     * Test a simple invocation on a remote view of a Stateless session bean method\n     *\n     * @throws Exception\n     */\n    @Test\n    public void testRemoteSLSBInvocation() throws Exception {\n        final StatelessEJBLocator<EchoRemote> locator = new StatelessEJBLocator(EchoRemote.class, APP_NAME, MODULE_NAME, EchoBean.class.getSimpleName(), \"\");\n        final EchoRemote proxy = EJBClient.createProxy(locator);\n        Assert.assertNotNull(\"Received a null proxy\", proxy);\n        final String message = \"Hello world from a really remote client\";\n        final String echo = proxy.echo(message);\n        Assert.assertEquals(\"Unexpected echo message\", message, echo);\n    }","commit_id":"c42bf6558b9ad389f0c5c82a9c0065d1674f7c58","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Tests that a system exception thrown from a SLSB method is conveyed back to the client\n     *\n     * @throws Exception\n     */\n    @Test\n    public void testSystemExceptionOnSLSBMethod() throws Exception {\n        final ExceptionThrowingRemote exceptionThrowingBean = EJBClient.getProxy(APP_NAME, MODULE_NAME, null, ExceptionThrowingBean.class.getSimpleName(), ExceptionThrowingRemote.class);\n        Assert.assertNotNull(\"Received a null proxy\", exceptionThrowingBean);\n        final String exceptionState = \"bafasfaj;l\";\n        try {\n            exceptionThrowingBean.alwaysThrowSystemException(exceptionState);\n            Assert.fail(\"Expected a \" + EJBException.class.getName() + \" exception\");\n        } catch (EJBException ejbe) {\n            // expected\n            logger.info(\"Received the expected exception\", ejbe);\n            final Throwable cause = ejbe.getCause();\n            Assert.assertTrue(\"Unexpected cause in EJBException\", cause instanceof RuntimeException);\n            Assert.assertEquals(\"Unexpected state in the system exception\", exceptionState, cause.getMessage());\n        }\n    }","id":13696,"modified_method":"/**\n     * Tests that a system exception thrown from a SLSB method is conveyed back to the client\n     *\n     * @throws Exception\n     */\n    @Test\n    public void testSystemExceptionOnSLSBMethod() throws Exception {\n        final StatelessEJBLocator<ExceptionThrowingRemote> locator = new StatelessEJBLocator<ExceptionThrowingRemote>(ExceptionThrowingRemote.class, APP_NAME, MODULE_NAME, ExceptionThrowingBean.class.getSimpleName(), \"\");\n        final ExceptionThrowingRemote exceptionThrowingBean = EJBClient.createProxy(locator);\n        Assert.assertNotNull(\"Received a null proxy\", exceptionThrowingBean);\n        final String exceptionState = \"bafasfaj;l\";\n        try {\n            exceptionThrowingBean.alwaysThrowSystemException(exceptionState);\n            Assert.fail(\"Expected a \" + EJBException.class.getName() + \" exception\");\n        } catch (EJBException ejbe) {\n            // expected\n            logger.info(\"Received the expected exception\", ejbe);\n            final Throwable cause = ejbe.getCause();\n            Assert.assertTrue(\"Unexpected cause in EJBException\", cause instanceof RuntimeException);\n            Assert.assertEquals(\"Unexpected state in the system exception\", exceptionState, cause.getMessage());\n        }\n    }","commit_id":"c42bf6558b9ad389f0c5c82a9c0065d1674f7c58","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Test a invocation on the remote view of a stateless bean which is configured for user interceptors\n     *\n     * @throws Exception\n     */\n    @Test\n    public void testRemoteSLSBWithInterceptors() throws Exception {\n        final EchoRemote proxy = EJBClient.getProxy(APP_NAME, MODULE_NAME, null, InterceptedEchoBean.class.getSimpleName(), EchoRemote.class);\n        Assert.assertNotNull(\"Received a null proxy\", proxy);\n        final String message = \"Hello world from a really remote client\";\n        final String echo = proxy.echo(message);\n        final String expectedEcho = message + InterceptorTwo.MESSAGE_SEPARATOR + InterceptorOne.class.getSimpleName() + InterceptorOne.MESSAGE_SEPARATOR + InterceptorTwo.class.getSimpleName();\n        Assert.assertEquals(\"Unexpected echo message\", expectedEcho, echo);\n    }","id":13697,"modified_method":"/**\n     * Test a invocation on the remote view of a stateless bean which is configured for user interceptors\n     *\n     * @throws Exception\n     */\n    @Test\n    public void testRemoteSLSBWithInterceptors() throws Exception {\n        final StatelessEJBLocator<EchoRemote> locator = new StatelessEJBLocator(EchoRemote.class, APP_NAME, MODULE_NAME, InterceptedEchoBean.class.getSimpleName(), \"\");\n        final EchoRemote proxy = EJBClient.createProxy(locator);\n        Assert.assertNotNull(\"Received a null proxy\", proxy);\n        final String message = \"Hello world from a really remote client\";\n        final String echo = proxy.echo(message);\n        final String expectedEcho = message + InterceptorTwo.MESSAGE_SEPARATOR + InterceptorOne.class.getSimpleName() + InterceptorOne.MESSAGE_SEPARATOR + InterceptorTwo.class.getSimpleName();\n        Assert.assertEquals(\"Unexpected echo message\", expectedEcho, echo);\n    }","commit_id":"c42bf6558b9ad389f0c5c82a9c0065d1674f7c58","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Tests that invoking a non-existent EJB leads to a {@link NoSuchEJBException}\n     *\n     * @throws Exception\n     */\n    @Test\n    public void testNonExistentEJBAccess() throws Exception {\n        final NotAnEJBInterface nonExistentBean = EJBClient.getProxy(\"non-existen-app-name\", MODULE_NAME, null, \"blah\", NotAnEJBInterface.class);\n        Assert.assertNotNull(\"Received a null proxy\", nonExistentBean);\n        // invoke on the (non-existent) bean\n        try {\n            nonExistentBean.echo(\"Hello world to a non-existent bean\");\n            Assert.fail(\"Expected a NoSuchEJBException\");\n        } catch (NoSuchEJBException nsee) {\n            // expected\n            logger.info(\"Received the expected exception\", nsee);\n        }\n    }","id":13698,"modified_method":"/**\n     * Tests that invoking a non-existent EJB leads to a {@link NoSuchEJBException}\n     *\n     * @throws Exception\n     */\n    @Test\n    public void testNonExistentEJBAccess() throws Exception {\n        final StatelessEJBLocator<NotAnEJBInterface> locator = new StatelessEJBLocator<NotAnEJBInterface>(NotAnEJBInterface.class, \"non-existen-app-name\", MODULE_NAME, \"blah\", \"\");\n        final NotAnEJBInterface nonExistentBean = EJBClient.createProxy(locator);\n        Assert.assertNotNull(\"Received a null proxy\", nonExistentBean);\n        // invoke on the (non-existent) bean\n        try {\n            nonExistentBean.echo(\"Hello world to a non-existent bean\");\n            Assert.fail(\"Expected a NoSuchEJBException\");\n        } catch (NoSuchEJBException nsee) {\n            // expected\n            logger.info(\"Received the expected exception\", nsee);\n        }\n    }","commit_id":"c42bf6558b9ad389f0c5c82a9c0065d1674f7c58","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Tests that an {@link javax.ejb.ApplicationException} thrown by a SLSB method is returned back to the\n     * client correctly\n     *\n     * @throws Exception\n     */\n    @Test\n    public void testApplicationExceptionOnSLSBMethod() throws Exception {\n        final ExceptionThrowingRemote exceptionThrowingBean = EJBClient.getProxy(APP_NAME, MODULE_NAME, null, ExceptionThrowingBean.class.getSimpleName(), ExceptionThrowingRemote.class);\n        Assert.assertNotNull(\"Received a null proxy\", exceptionThrowingBean);\n        final String exceptionState = \"2342348723Dsbjlfjal#\";\n        try {\n            exceptionThrowingBean.alwaysThrowApplicationException(exceptionState);\n            Assert.fail(\"Expected a \" + StatefulApplicationException.class.getName() + \" exception\");\n        } catch (StatefulApplicationException sae) {\n            // expected\n            logger.info(\"Received the expected exception\", sae);\n            Assert.assertEquals(\"Unexpected state in the application exception\", exceptionState, sae.getState());\n        }\n    }","id":13699,"modified_method":"/**\n     * Tests that an {@link javax.ejb.ApplicationException} thrown by a SLSB method is returned back to the\n     * client correctly\n     *\n     * @throws Exception\n     */\n    @Test\n    public void testApplicationExceptionOnSLSBMethod() throws Exception {\n        final StatelessEJBLocator<ExceptionThrowingRemote> locator = new StatelessEJBLocator<ExceptionThrowingRemote>(ExceptionThrowingRemote.class, APP_NAME, MODULE_NAME, ExceptionThrowingBean.class.getSimpleName(), \"\");\n        final ExceptionThrowingRemote exceptionThrowingBean = EJBClient.createProxy(locator);\n        Assert.assertNotNull(\"Received a null proxy\", exceptionThrowingBean);\n        final String exceptionState = \"2342348723Dsbjlfjal#\";\n        try {\n            exceptionThrowingBean.alwaysThrowApplicationException(exceptionState);\n            Assert.fail(\"Expected a \" + StatefulApplicationException.class.getName() + \" exception\");\n        } catch (StatefulApplicationException sae) {\n            // expected\n            logger.info(\"Received the expected exception\", sae);\n            Assert.assertEquals(\"Unexpected state in the application exception\", exceptionState, sae.getState());\n        }\n    }","commit_id":"c42bf6558b9ad389f0c5c82a9c0065d1674f7c58","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Test a invocation on a stateless bean method which accepts and returns custom objectss\n     *\n     * @throws Exception\n     */\n    @Test\n    public void testRemoteSLSBWithCustomObjects() throws Exception {\n        final EmployeeManager proxy = EJBClient.getProxy(APP_NAME, MODULE_NAME, null, EmployeeBean.class.getSimpleName(), EmployeeManager.class);\n        Assert.assertNotNull(\"Received a null proxy\", proxy);\n        final String[] nickNames = new String[]{\"java-programmer\", \"ruby-programmer\", \"php-programmer\"};\n        final Employee employee = new Employee(1, \"programmer\");\n        // invoke on the bean\n        final AliasedEmployee employeeWithNickNames = proxy.addNickNames(employee, nickNames);\n\n        // check the id of the returned employee\n        Assert.assertEquals(\"Unexpected employee id\", 1, employeeWithNickNames.getId());\n        // check the name of the returned employee\n        Assert.assertEquals(\"Unexpected employee name\", \"programmer\", employeeWithNickNames.getName());\n        // check the number of nicknames\n        Assert.assertEquals(\"Unexpected number of nick names\", nickNames.length, employeeWithNickNames.getNickNames().size());\n        // make sure the correct nick names are present\n        for (int i = 0; i < nickNames.length; i++) {\n            Assert.assertTrue(\"Employee was expected to have nick name: \" + nickNames[i], employeeWithNickNames.getNickNames().contains(nickNames[i]));\n        }\n    }","id":13700,"modified_method":"/**\n     * Test a invocation on a stateless bean method which accepts and returns custom objectss\n     *\n     * @throws Exception\n     */\n    @Test\n    public void testRemoteSLSBWithCustomObjects() throws Exception {\n        final StatelessEJBLocator<EmployeeManager> locator = new StatelessEJBLocator(EmployeeManager.class, APP_NAME, MODULE_NAME, EmployeeBean.class.getSimpleName(), \"\");\n        final EmployeeManager proxy = EJBClient.createProxy(locator);\n        Assert.assertNotNull(\"Received a null proxy\", proxy);\n        final String[] nickNames = new String[]{\"java-programmer\", \"ruby-programmer\", \"php-programmer\"};\n        final Employee employee = new Employee(1, \"programmer\");\n        // invoke on the bean\n        final AliasedEmployee employeeWithNickNames = proxy.addNickNames(employee, nickNames);\n\n        // check the id of the returned employee\n        Assert.assertEquals(\"Unexpected employee id\", 1, employeeWithNickNames.getId());\n        // check the name of the returned employee\n        Assert.assertEquals(\"Unexpected employee name\", \"programmer\", employeeWithNickNames.getName());\n        // check the number of nicknames\n        Assert.assertEquals(\"Unexpected number of nick names\", nickNames.length, employeeWithNickNames.getNickNames().size());\n        // make sure the correct nick names are present\n        for (int i = 0; i < nickNames.length; i++) {\n            Assert.assertTrue(\"Employee was expected to have nick name: \" + nickNames[i], employeeWithNickNames.getNickNames().contains(nickNames[i]));\n        }\n    }","commit_id":"c42bf6558b9ad389f0c5c82a9c0065d1674f7c58","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    protected void processInvocation(final EJBClientInvocationContext<Void> invocation, final EJBReceiverInvocationContext receiverContext) throws Exception {\n\n        final EjbDeploymentInformation ejb = findBean(invocation.getAppName(), invocation.getModuleName(), invocation.getDistinctName(), invocation.getBeanName());\n        final EJBComponent ejbComponent = ejb.getEjbComponent();\n\n        final Class<?> viewClass = invocation.getViewClass();\n        final ComponentView view = ejb.getView(viewClass.getName());\n        if (view == null) {\n            throw new RuntimeException(\"Could not find view \" + viewClass + \" for ejb \" + ejb.getEjbName());\n        }\n\n        //TODO: this is not very efficent\n        final Method method = view.getMethod(invocation.getInvokedMethod().getName(), DescriptorUtils.methodDescriptor(invocation.getInvokedMethod()));\n\n        final boolean async = view.isAsynchronous(method);\n\n        final Object[] parameters;\n        if (invocation.getParameters() == null) {\n            parameters = EMPTY_OBJECT_ARRAY;\n        } else {\n            parameters = new Object[invocation.getParameters().length];\n            for (int i = 0; i < parameters.length; ++i) {\n                parameters[i] = clone(method.getParameterTypes()[i], invocation.getParameters()[i], allowPassByReference);\n            }\n        }\n\n        final InterceptorContext context = new InterceptorContext();\n        context.setParameters(parameters);\n        context.setMethod(method);\n        context.setTarget(invocation.getInvokedProxy());\n        context.setContextData(new HashMap<String, Object>());\n        context.putPrivateData(Component.class, ejbComponent);\n        context.putPrivateData(ComponentView.class, view);\n\n        final SessionID sessionID = invocation.getProxyAttachment(SessionID.SESSION_ID_KEY);\n        if(sessionID != null) {\n            context.putPrivateData(SessionID.SESSION_ID_KEY, sessionID);\n        }\n\n        if (async) {\n            if (ejbComponent instanceof SessionBeanComponent) {\n                final SessionBeanComponent component = (SessionBeanComponent) ejbComponent;\n                final CancellationFlag flag = new CancellationFlag();\n                final AsyncInvocationTask task = new AsyncInvocationTask(flag) {\n\n                    @Override\n                    protected Object runInvocation() throws Exception {\n                        return view.invoke(context);\n                    }\n                };\n                context.putPrivateData(CancellationFlag.class, flag);\n                component.getAsynchronousExecutor().submit(task);\n                //TODO: we do not clone the result of an async task\n                receiverContext.resultReady(new ImmediateResultProducer(task));\n            } else {\n                throw new RuntimeException(\"Cannot perform asynchronous local invocation for component that is not a session bean\");\n            }\n        } else {\n            final Object result = view.invoke(context);\n            //we do not marshal the return type unless we have to, the spec only says we have to\n            //pass parameters by reference\n            //TODO: investigate the implications of this further\n            final Object clonedResult = clone(method.getReturnType(), result, true);\n            receiverContext.resultReady(new ImmediateResultProducer(clonedResult));\n        }\n    }","id":13701,"modified_method":"@Override\n    protected void processInvocation(final EJBClientInvocationContext<Void> invocation, final EJBReceiverInvocationContext receiverContext) throws Exception {\n        final Locator locator = invocation.getLocator();\n        final EjbDeploymentInformation ejb = findBean(locator.getAppName(), locator.getModuleName(), locator.getDistinctName(), locator.getBeanName());\n        final EJBComponent ejbComponent = ejb.getEjbComponent();\n\n        final Class<?> viewClass = invocation.getViewClass();\n        final ComponentView view = ejb.getView(viewClass.getName());\n        if (view == null) {\n            throw new RuntimeException(\"Could not find view \" + viewClass + \" for ejb \" + ejb.getEjbName());\n        }\n\n        //TODO: this is not very efficent\n        final Method method = view.getMethod(invocation.getInvokedMethod().getName(), DescriptorUtils.methodDescriptor(invocation.getInvokedMethod()));\n\n        final boolean async = view.isAsynchronous(method);\n\n        final Object[] parameters;\n        if (invocation.getParameters() == null) {\n            parameters = EMPTY_OBJECT_ARRAY;\n        } else {\n            parameters = new Object[invocation.getParameters().length];\n            for (int i = 0; i < parameters.length; ++i) {\n                parameters[i] = clone(method.getParameterTypes()[i], invocation.getParameters()[i], allowPassByReference);\n            }\n        }\n\n        final InterceptorContext context = new InterceptorContext();\n        context.setParameters(parameters);\n        context.setMethod(method);\n        context.setTarget(invocation.getInvokedProxy());\n        context.setContextData(new HashMap<String, Object>());\n        context.putPrivateData(Component.class, ejbComponent);\n        context.putPrivateData(ComponentView.class, view);\n\n        final SessionID sessionID = invocation.getProxyAttachment(SessionID.SESSION_ID_KEY);\n        if(sessionID != null) {\n            context.putPrivateData(SessionID.SESSION_ID_KEY, sessionID);\n        }\n\n        if (async) {\n            if (ejbComponent instanceof SessionBeanComponent) {\n                final SessionBeanComponent component = (SessionBeanComponent) ejbComponent;\n                final CancellationFlag flag = new CancellationFlag();\n                final AsyncInvocationTask task = new AsyncInvocationTask(flag) {\n\n                    @Override\n                    protected Object runInvocation() throws Exception {\n                        return view.invoke(context);\n                    }\n                };\n                context.putPrivateData(CancellationFlag.class, flag);\n                component.getAsynchronousExecutor().submit(task);\n                //TODO: we do not clone the result of an async task\n                receiverContext.resultReady(new ImmediateResultProducer(task));\n            } else {\n                throw new RuntimeException(\"Cannot perform asynchronous local invocation for component that is not a session bean\");\n            }\n        } else {\n            final Object result = view.invoke(context);\n            //we do not marshal the return type unless we have to, the spec only says we have to\n            //pass parameters by reference\n            //TODO: investigate the implications of this further\n            final Object clonedResult = clone(method.getReturnType(), result, true);\n            receiverContext.resultReady(new ImmediateResultProducer(clonedResult));\n        }\n    }","commit_id":"c42bf6558b9ad389f0c5c82a9c0065d1674f7c58","url":"https://github.com/wildfly/wildfly"},{"original_method":"JBossMarshaller(final String marshallerType) throws IOException {\n            final MarshallingConfiguration marshallingConfiguration = new MarshallingConfiguration();\n            marshallingConfiguration.setVersion(2);\n            org.jboss.marshalling.MarshallerFactory factory = Marshalling.getProvidedMarshallerFactory(marshallerType);\n            this.delegate = factory.createMarshaller(marshallingConfiguration);\n        }","id":13702,"modified_method":"JBossMarshaller(final String marshallerType) throws IOException {\n            final MarshallingConfiguration marshallingConfiguration = new MarshallingConfiguration();\n            marshallingConfiguration.setClassTable(new ProtocolV1ClassTable());\n            marshallingConfiguration.setVersion(2);\n            org.jboss.marshalling.MarshallerFactory factory = Marshalling.getProvidedMarshallerFactory(marshallerType);\n            this.delegate = factory.createMarshaller(marshallingConfiguration);\n        }","commit_id":"c42bf6558b9ad389f0c5c82a9c0065d1674f7c58","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n        public Object readObject() throws ClassNotFoundException, IOException {\n            final InputStream is = new InputStream() {\n                @Override\n                public int read() throws IOException {\n                    try {\n                        final int b = JavaSerialUnMarshaller.this.dataInput.readByte();\n                        return b & 0xff;\n                    } catch (EOFException eof) {\n                        return -1;\n                    }\n                }\n            };\n            final ObjectInputStream objectInputStream = new ObjectInputStream(is) {\n                @Override\n                protected Class resolveClass(final ObjectStreamClass desc) throws IOException, ClassNotFoundException {\n                    String name = desc.getName();\n                    try {\n                        // Use Class.forName instead of ClassLoader.loadClass to avoid issues with loading arrays\n                        return Class.forName(name, false, JavaSerialUnMarshaller.this.cl);\n                    } catch (ClassNotFoundException e) {\n                        return super.resolveClass(desc);\n                    }\n                }\n            };\n            return objectInputStream.readObject();\n        }","id":13703,"modified_method":"@Override\n        public Object readObject() throws ClassNotFoundException, IOException {\n            final InputStream is = new InputStream() {\n                @Override\n                public int read() throws IOException {\n                    try {\n                        final int b = JavaSerialUnMarshaller.this.dataInput.readByte();\n                        return b & 0xff;\n                    } catch (EOFException eof) {\n                        return -1;\n                    }\n                }\n            };\n            final ObjectInputStream objectInputStream = new ObjectInputStream(is) {\n                @Override\n                protected Class resolveClass(final ObjectStreamClass desc) throws IOException, ClassNotFoundException {\n                    String name = desc.getName();\n                    try {\n                        // Use Class.forName instead of ClassLoader.loadClass to avoid issues with loading arrays\n                        return Class.forName(name, false, JavaSerialUnMarshaller.this.classLoaderProvider.provideClassLoader());\n                    } catch (ClassNotFoundException e) {\n                        return super.resolveClass(desc);\n                    }\n                }\n            };\n            return objectInputStream.readObject();\n        }","commit_id":"c42bf6558b9ad389f0c5c82a9c0065d1674f7c58","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n        public void start(final DataInput input, final ClassLoader classLoader) throws IOException {\n            final MarshallingConfiguration marshallingConfiguration = new MarshallingConfiguration();\n            marshallingConfiguration.setVersion(2);\n            marshallingConfiguration.setClassResolver(new SimpleClassResolver(classLoader));\n            org.jboss.marshalling.MarshallerFactory factory = Marshalling.getProvidedMarshallerFactory(marshallerType);\n            this.delegate = factory.createUnmarshaller(marshallingConfiguration);\n            final InputStream is = new InputStream() {\n                @Override\n                public int read() throws IOException {\n                    try {\n\n                        final int b = input.readByte();\n                        return b & 0xff;\n                    } catch (EOFException eof) {\n                        return -1;\n                    }\n                }\n            };\n            final ByteInput byteInput = Marshalling.createByteInput(is);\n            this.delegate.start(byteInput);\n        }","id":13704,"modified_method":"@Override\n        public void start(final DataInput input, final ClassLoaderProvider classLoaderProvider) throws IOException {\n            final MarshallingConfiguration marshallingConfiguration = new MarshallingConfiguration();\n            marshallingConfiguration.setVersion(2);\n            marshallingConfiguration.setClassTable(new ProtocolV1ClassTable());\n            marshallingConfiguration.setClassResolver(new LazyClassLoaderClassResolver(classLoaderProvider));\n            org.jboss.marshalling.MarshallerFactory factory = Marshalling.getProvidedMarshallerFactory(marshallerType);\n            this.delegate = factory.createUnmarshaller(marshallingConfiguration);\n            final InputStream is = new InputStream() {\n                @Override\n                public int read() throws IOException {\n                    try {\n\n                        final int b = input.readByte();\n                        return b & 0xff;\n                    } catch (EOFException eof) {\n                        return -1;\n                    }\n                }\n            };\n            final ByteInput byteInput = Marshalling.createByteInput(is);\n            this.delegate.start(byteInput);\n        }","commit_id":"c42bf6558b9ad389f0c5c82a9c0065d1674f7c58","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n        public void start(final DataInput input, final ClassLoader classLoader) throws IOException {\n            this.cl = classLoader;\n            this.dataInput = input;\n        }","id":13705,"modified_method":"@Override\n        public void start(final DataInput input, final ClassLoaderProvider classLoaderProvider) throws IOException {\n            this.classLoaderProvider = classLoaderProvider;\n            this.dataInput = input;\n        }","commit_id":"c42bf6558b9ad389f0c5c82a9c0065d1674f7c58","url":"https://github.com/wildfly/wildfly"},{"original_method":"private Object invokeMethod(final ComponentView componentView, final Method method, final Object[] args, final RemotingAttachments attachments) throws Throwable {\n        final InterceptorContext interceptorContext = new InterceptorContext();\n        interceptorContext.setParameters(args);\n        interceptorContext.setMethod(method);\n        interceptorContext.setContextData(new HashMap<String, Object>());\n        interceptorContext.putPrivateData(Component.class, componentView.getComponent());\n        interceptorContext.putPrivateData(ComponentView.class, componentView);\n        // attach the remoting attachments\n        this.attachRemotingAttachments(interceptorContext, attachments);\n        if (componentView.isAsynchronous(method)) {\n            final Component component = componentView.getComponent();\n            if (!(component instanceof SessionBeanComponent)) {\n                logger.warn(\"Asynchronous invocations are only supported on session beans. Bean class \" + component.getComponentClass()\n                        + \" is not a session bean, invocation on method \" + method + \" will have no asynchronous semantics\");\n                // just invoke normally\n                return componentView.invoke(interceptorContext);\n            }\n            // it's really a async method invocation on a session bean. So treat it accordingly\n            final SessionBeanComponent sessionBeanComponent = (SessionBeanComponent) componentView.getComponent();\n            final CancellationFlag cancellationFlag = new CancellationFlag();\n            // add the cancellation flag to the interceptor context\n            interceptorContext.putPrivateData(CancellationFlag.class, cancellationFlag);\n\n            final AsyncInvocationTask asyncInvocationTask = new AsyncInvocationTask(cancellationFlag) {\n                @Override\n                protected Object runInvocation() throws Exception {\n                    return componentView.invoke(interceptorContext);\n                }\n            };\n            // invoke\n            sessionBeanComponent.getAsynchronousExecutor().submit(asyncInvocationTask);\n            // wait/block for the bean invocation to complete and get the real result to be returned to the client\n            return asyncInvocationTask.get();\n        } else {\n            return componentView.invoke(interceptorContext);\n        }\n    }","id":13706,"modified_method":"private Object invokeMethod(final ComponentView componentView, final Method method, final Object[] args, final Locator ejbLocator, final RemotingAttachments attachments) throws Throwable {\n        final InterceptorContext interceptorContext = new InterceptorContext();\n        interceptorContext.setParameters(args);\n        interceptorContext.setMethod(method);\n        interceptorContext.setContextData(new HashMap<String, Object>());\n        interceptorContext.putPrivateData(Component.class, componentView.getComponent());\n        interceptorContext.putPrivateData(ComponentView.class, componentView);\n        // attach the remoting attachments\n        this.attachRemotingAttachments(interceptorContext, ejbLocator, attachments);\n        if (componentView.isAsynchronous(method)) {\n            final Component component = componentView.getComponent();\n            if (!(component instanceof SessionBeanComponent)) {\n                logger.warn(\"Asynchronous invocations are only supported on session beans. Bean class \" + component.getComponentClass()\n                        + \" is not a session bean, invocation on method \" + method + \" will have no asynchronous semantics\");\n                // just invoke normally\n                return componentView.invoke(interceptorContext);\n            }\n            // it's really a async method invocation on a session bean. So treat it accordingly\n            final SessionBeanComponent sessionBeanComponent = (SessionBeanComponent) componentView.getComponent();\n            final CancellationFlag cancellationFlag = new CancellationFlag();\n            // add the cancellation flag to the interceptor context\n            interceptorContext.putPrivateData(CancellationFlag.class, cancellationFlag);\n\n            final AsyncInvocationTask asyncInvocationTask = new AsyncInvocationTask(cancellationFlag) {\n                @Override\n                protected Object runInvocation() throws Exception {\n                    return componentView.invoke(interceptorContext);\n                }\n            };\n            // invoke\n            sessionBeanComponent.getAsynchronousExecutor().submit(asyncInvocationTask);\n            // wait/block for the bean invocation to complete and get the real result to be returned to the client\n            return asyncInvocationTask.get();\n        } else {\n            return componentView.invoke(interceptorContext);\n        }\n    }","commit_id":"c42bf6558b9ad389f0c5c82a9c0065d1674f7c58","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public void processMessage(final Channel channel, final MessageInputStream messageInputStream) throws IOException {\n        final DataInputStream input = new DataInputStream(messageInputStream);\n        // read the invocation id\n        final short invocationId = input.readShort();\n        // read the ejb module info\n        final String appName = input.readUTF();\n        final String moduleName = input.readUTF();\n        final String distinctName = input.readUTF();\n        final String beanName = input.readUTF();\n        final String viewClassName = input.readUTF();\n\n        final EjbDeploymentInformation ejbDeploymentInformation = this.findEJB(appName, moduleName, distinctName, beanName);\n        if (ejbDeploymentInformation == null) {\n            this.writeNoSuchEJBFailureMessage(channel, invocationId, appName, moduleName, distinctName, beanName, viewClassName);\n            return;\n        }\n        if (!ejbDeploymentInformation.getViewNames().contains(viewClassName)) {\n            this.writeNoSuchEJBFailureMessage(channel, invocationId, appName, moduleName, distinctName, beanName, viewClassName);\n            return;\n        }\n        // TODO: Add a check for remote view\n        final ComponentView componentView = ejbDeploymentInformation.getView(viewClassName);\n        final String methodName = input.readUTF();\n        // method signature\n        String[] methodParamTypes = null;\n        final String signature = input.readUTF();\n        if (signature.isEmpty()) {\n            methodParamTypes = new String[0];\n        } else {\n            methodParamTypes = signature.split(String.valueOf(METHOD_PARAM_TYPE_SEPARATOR));\n        }\n        final Method invokedMethod = this.findMethod(componentView, methodName, methodParamTypes);\n        if (invokedMethod == null) {\n            this.writeNoSuchEJBMethodFailureMessage(channel, invocationId, appName, moduleName, distinctName, beanName, viewClassName, methodName, methodParamTypes);\n            return;\n        }\n        // read the attachments\n        final RemotingAttachments attachments = this.readAttachments(input);\n\n        final Object[] methodParams = new Object[methodParamTypes.length];\n        // un-marshall the method arguments\n        if (methodParamTypes.length > 0) {\n            final UnMarshaller unMarshaller = MarshallerFactory.createUnMarshaller(this.marshallingStrategy);\n            final ClassLoader beanClassLoader = ejbDeploymentInformation.getDeploymentClassLoader();\n\n            unMarshaller.start(input, beanClassLoader);\n            for (int i = 0; i < methodParamTypes.length; i++) {\n                try {\n                    methodParams[i] = unMarshaller.readObject();\n                } catch (ClassNotFoundException cnfe) {\n                    // TODO: Write out invocation failure to channel outstream\n                    //throw new RuntimeException(cnfe);\n                    return;\n                }\n            }\n            unMarshaller.finish();\n        }\n\n        // invoke the method and write out the response on a separate thread\n        executorService.submit(new Runnable() {\n\n            @Override\n            public void run() {\n                // check if it's async. If yes, then notify the client that's it's async method (so that\n                // it can unblock if necessary)\n                if (componentView.isAsynchronous(invokedMethod)) {\n                    try {\n                        MethodInvocationMessageHandler.this.writeAsyncMethodNotification(channel, invocationId);\n                    } catch (Throwable t) {\n                        // catch Throwable, so that we don't skip invoking the method, just because we\n                        // failed to send a notification to the client that the method is an async method\n                        logger.warn(\"Method \" + invokedMethod + \" was a async method but the client could not be informed about the same. This will mean that the client might block till the method completes\", t);\n                    }\n                }\n\n                // invoke the method\n                Object result = null;\n                try {\n                    result = invokeMethod(componentView, invokedMethod, methodParams, attachments);\n                } catch (Throwable throwable) {\n                    try {\n                        // write out the failure\n                        writeMethodInvocationFailure(channel, invocationId, throwable, attachments);\n                    } catch (IOException ioe) {\n                        // we couldn't write out a method invocation failure message. So let's atleast log the\n                        // actual method invocation exception, for debugging/reference\n                        logger.error(\"Error invoking method \" + invokedMethod + \" on bean named \" + beanName + \" in app: \" + appName + \" module: \" + moduleName +\n                                \" distinctname: \" + distinctName, throwable);\n                        // now log why we couldn't send back the method invocation failure message\n                        logger.error(\"Could not write method invocation failure for method \" + invokedMethod + \" on bean named \" + beanName + \" in app: \" + appName + \" module: \" + moduleName +\n                                \" distinctname: \" + distinctName + \" due to \", ioe);\n                        return;\n                    }\n                }\n                // write out the (successful) method invocation result to the channel output stream\n                try {\n                    writeMethodInvocationResponse(channel, invocationId, result, attachments);\n                } catch (IOException ioe) {\n                    logger.error(\"Could not write method invocation result for method \" + invokedMethod + \" on bean named \" + beanName + \" in app: \" + appName + \" module: \" + moduleName +\n                            \" distinctname: \" + distinctName + \" due to \", ioe);\n                    return;\n                }\n            }\n        });\n\n\n    }","id":13707,"modified_method":"@Override\n    public void processMessage(final Channel channel, final MessageInputStream messageInputStream) throws IOException {\n        final DataInputStream input = new DataInputStream(messageInputStream);\n        // read the invocation id\n        final short invocationId = input.readShort();\n\n        // read the method name\n        final String methodName = input.readUTF();\n        // method signature\n        String[] methodParamTypes = null;\n        final String signature = input.readUTF();\n        if (signature.isEmpty()) {\n            methodParamTypes = new String[0];\n        } else {\n            methodParamTypes = signature.split(String.valueOf(METHOD_PARAM_TYPE_SEPARATOR));\n        }\n        // read the attachments\n        final RemotingAttachments attachments = this.readAttachments(input);\n\n        // read the Locator\n        final UnMarshaller unMarshaller = MarshallerFactory.createUnMarshaller(this.marshallingStrategy);\n        final ClassLoaderSwitchingClassLoaderProvider classLoaderProvider = new ClassLoaderSwitchingClassLoaderProvider(Thread.currentThread().getContextClassLoader());\n        unMarshaller.start(input, classLoaderProvider);\n        // read the EJB info\n        final String appName;\n        final String moduleName;\n        final String distinctName;\n        final String beanName;\n        try {\n            appName = (String) unMarshaller.readObject();\n            moduleName = (String) unMarshaller.readObject();\n            distinctName = (String) unMarshaller.readObject();\n            beanName = (String) unMarshaller.readObject();\n        } catch (ClassNotFoundException e) {\n            throw new RuntimeException(e);\n        }\n        final EjbDeploymentInformation ejbDeploymentInformation = this.findEJB(appName, moduleName, distinctName, beanName);\n        if (ejbDeploymentInformation == null) {\n            this.writeNoSuchEJBFailureMessage(channel, invocationId, appName, moduleName, distinctName, beanName, null);\n            return;\n        }\n        // now switch the CL to the EJB deployment's CL so that the unmarshaller can use the\n        // correct CL for the rest of the unmarshalling of the stream\n        classLoaderProvider.switchClassLoader(ejbDeploymentInformation.getDeploymentClassLoader());\n        // read the Locator\n        final Locator locator;\n        try {\n            locator = (Locator) unMarshaller.readObject();\n        } catch (ClassNotFoundException e) {\n            throw new RuntimeException(e);\n        }\n        final String viewClassName = locator.getInterfaceType().getName();\n        if (!ejbDeploymentInformation.getViewNames().contains(viewClassName)) {\n            this.writeNoSuchEJBFailureMessage(channel, invocationId, appName, moduleName, distinctName, beanName, viewClassName);\n            return;\n        }\n        // TODO: Add a check for remote view\n        final ComponentView componentView = ejbDeploymentInformation.getView(viewClassName);\n        final Method invokedMethod = this.findMethod(componentView, methodName, methodParamTypes);\n        if (invokedMethod == null) {\n            this.writeNoSuchEJBMethodFailureMessage(channel, invocationId, appName, moduleName, distinctName, beanName, viewClassName, methodName, methodParamTypes);\n            return;\n        }\n\n        final Object[] methodParams = new Object[methodParamTypes.length];\n        // un-marshall the method arguments\n        if (methodParamTypes.length > 0) {\n            for (int i = 0; i < methodParamTypes.length; i++) {\n                try {\n                    methodParams[i] = unMarshaller.readObject();\n                } catch (ClassNotFoundException cnfe) {\n                    // TODO: Write out invocation failure to channel outstream\n                    throw new RuntimeException(cnfe);\n                }\n            }\n        }\n        unMarshaller.finish();\n        // invoke the method and write out the response on a separate thread\n        executorService.submit(new Runnable() {\n\n            @Override\n            public void run() {\n                // check if it's async. If yes, then notify the client that's it's async method (so that\n                // it can unblock if necessary)\n                if (componentView.isAsynchronous(invokedMethod)) {\n                    try {\n                        MethodInvocationMessageHandler.this.writeAsyncMethodNotification(channel, invocationId);\n                    } catch (Throwable t) {\n                        // catch Throwable, so that we don't skip invoking the method, just because we\n                        // failed to send a notification to the client that the method is an async method\n                        logger.warn(\"Method \" + invokedMethod + \" was a async method but the client could not be informed about the same. This will mean that the client might block till the method completes\", t);\n                    }\n                }\n\n                // invoke the method\n                Object result = null;\n                try {\n                    result = invokeMethod(componentView, invokedMethod, methodParams, locator, attachments);\n                } catch (Throwable throwable) {\n                    try {\n                        // write out the failure\n                        writeMethodInvocationFailure(channel, invocationId, throwable, attachments);\n                    } catch (IOException ioe) {\n                        // we couldn't write out a method invocation failure message. So let's atleast log the\n                        // actual method invocation exception, for debugging/reference\n                        logger.error(\"Error invoking method \" + invokedMethod + \" on bean named \" + beanName\n                                + \" for appname \" + appName + \" modulename \" + moduleName + \" distinctname \" + distinctName, throwable);\n                        // now log why we couldn't send back the method invocation failure message\n                        logger.error(\"Could not write method invocation failure for method \" + invokedMethod + \" on bean named \" + beanName\n                                + \" for appname \" + appName + \" modulename \" + moduleName + \" distinctname \" + distinctName + \" due to \", ioe);\n                        return;\n                    }\n                }\n                // write out the (successful) method invocation result to the channel output stream\n                try {\n                    writeMethodInvocationResponse(channel, invocationId, result, attachments);\n                } catch (IOException ioe) {\n                    logger.error(\"Could not write method invocation result for method \" + invokedMethod + \" on bean named \" + beanName\n                            + \" for appname \" + appName + \" modulename \" + moduleName + \" distinctname \" + distinctName + \" due to \", ioe);\n                    return;\n                }\n            }\n        });\n\n\n    }","commit_id":"c42bf6558b9ad389f0c5c82a9c0065d1674f7c58","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public ManagedReference getReference() {\n        final ClassLoader tccl = SecurityActions.getContextClassLoader();\n        final Class<?> viewClass;\n        try {\n            viewClass = Class.forName(this.viewClass, false, tccl);\n        } catch (ClassNotFoundException e) {\n            throw new RuntimeException(\"Could not load view class for ejb \" + beanName, e);\n        }\n\n        final Object proxy = EJBClient.getProxy(appName, moduleName, distinctName, beanName, viewClass);\n\n        if (stateful) {\n            EJBClient.createSession(proxy);\n        }\n        return new ValueManagedReference(new ImmediateValue<Object>(proxy));\n    }","id":13708,"modified_method":"@Override\n    public ManagedReference getReference() {\n        final ClassLoader tccl = SecurityActions.getContextClassLoader();\n        final Class<?> viewClass;\n        try {\n            viewClass = Class.forName(this.viewClass, false, tccl);\n        } catch (ClassNotFoundException e) {\n            throw new RuntimeException(\"Could not load view class for ejb \" + beanName, e);\n        }\n        Locator ejbLocator = null;\n        if (stateful) {\n            final SessionID sessionID;\n            try {\n                sessionID = EJBClient.createSession(appName, moduleName, beanName, distinctName);\n            } catch (Exception e) {\n                throw new RuntimeException(e);\n            }\n            ejbLocator = new StatefulEJBLocator(viewClass, appName, moduleName, beanName, distinctName, sessionID);\n        } else {\n            ejbLocator = new StatelessEJBLocator(viewClass, appName, moduleName, beanName, distinctName);\n        }\n        final Object proxy = EJBClient.createProxy(ejbLocator);\n\n        return new ValueManagedReference(new ImmediateValue<Object>(proxy));\n    }","commit_id":"c42bf6558b9ad389f0c5c82a9c0065d1674f7c58","url":"https://github.com/wildfly/wildfly"},{"original_method":"protected void printStatus(PrintStream out, AutoScaleStatus status) {\n        String format = \"%-40s %-14s %s\";\n        out.println(String.format(format, \"[auto scale profile]\", \"[status]\", \"[message]\"));\n        List<AutoScaleProfileStatus> profileStatuses = status.getProfileStatuses();\n        for (AutoScaleProfileStatus profile : profileStatuses) {\n            out.println(String.format(format,\n                    getStringOrBlank(profile.getProfile()),\n                    getStringOrBlank(profile.getStatus()),\n                    getStringOrBlank(profile.getMessage())));\n        }\n    }","id":13709,"modified_method":"protected void printStatus(PrintStream out, AutoScaleStatus status) {\n        TablePrinter table = new TablePrinter();\n        table.columns(\"auto scale profile\", \"status\", \"message\");\n        List<AutoScaleProfileStatus> profileStatuses = status.getProfileStatuses();\n        for (AutoScaleProfileStatus profile : profileStatuses) {\n            table.row(getStringOrBlank(profile.getProfile()),\n                    getStringOrBlank(profile.getStatus()),\n                    getStringOrBlank(profile.getMessage()));\n        }\n        table.print();\n    }","commit_id":"179994c0bc5e63ac0fc5d1f8c24c9f61bdc391e6","url":"https://github.com/fabric8io/fabric8"},{"original_method":"protected void printCluster(String dir, PrintStream out) throws Exception {\n        // do we have any clusters at all?\n        if (exists(getCurator(), dir) == null) {\n            return;\n        }\n        List<String> children = getAllChildren(getCurator(), dir);\n        Map<String, Map<String,ClusterNode>> clusters = new TreeMap<String, Map<String,ClusterNode>>();\n        for (String child : children) {\n            byte[] data = getCurator().getData().forPath(child);\n            if (data != null && data.length > 0) {\n                String text = new String(data).trim();\n                if (!text.isEmpty()) {\n                    String clusterName = getClusterName(dir, child);\n                    Map<String, ClusterNode> cluster = clusters.get(clusterName);\n                    if (cluster == null) {\n                        cluster = new TreeMap<String, ClusterNode>();\n                        clusters.put(clusterName, cluster);\n                    }\n\n                    ObjectMapper mapper = new ObjectMapper();\n                    Map<String, Object> map = null;\n                    try {\n                        map = mapper.readValue(data, HashMap.class);\n                    } catch (JsonParseException e){\n                        log.error(\"Error parsing JSON string: {}\", text);\n                        throw e;\n                    }\n\n                    ClusterNode node = null;\n\n                    Object id = value(map, \"id\", \"container\");\n                    if (id != null) {\n                        Object agent = value(map, \"container\", \"agent\");\n                        List services = (List) value(map, \"services\");\n\n                        node = cluster.get(id);\n                        if (node == null) {\n                            node = new ClusterNode();\n                            cluster.put(id.toString(), node);\n                        }\n\n                        if (services != null) {\n                            if (!services.isEmpty()) {\n                                for (Object service : services) {\n                                    node.services.add(getSubstitutedData(getCurator(), service.toString()));\n                                }\n\n                                node.masters.add(agent);\n                            } else {\n                                node.slaves.add(agent);\n                            }\n                        } else {\n                            node.slaves.add(agent);\n                        }\n                    }\n                }\n            }\n        }\n\n        out.println(String.format(\"%-30s %-30s %-30s %s\", \"[cluster]\", \"[masters]\", \"[slaves]\", \"[services]\"));\n\n        for (String clusterName : clusters.keySet()) {\n            Map<String, ClusterNode> nodes = clusters.get(clusterName);\n            out.println(String.format(\"%-30s %-30s %-30s %s\", clusterName, \"\", \"\", \"\", \"\"));\n            for (String nodeName : nodes.keySet()) {\n                ClusterNode node = nodes.get(nodeName);\n                out.println(String.format(\"%-30s %-30s %-30s %s\",\n                            \"   \"  + nodeName,\n                            printList(node.masters),\n                            printList(node.slaves),\n                            printList(node.services)));\n            }\n        }\n    }","id":13710,"modified_method":"protected void printCluster(String dir, PrintStream out) throws Exception {\n        // do we have any clusters at all?\n        if (exists(getCurator(), dir) == null) {\n            return;\n        }\n        List<String> children = getAllChildren(getCurator(), dir);\n        Map<String, Map<String,ClusterNode>> clusters = new TreeMap<String, Map<String,ClusterNode>>();\n        for (String child : children) {\n            byte[] data = getCurator().getData().forPath(child);\n            if (data != null && data.length > 0) {\n                String text = new String(data).trim();\n                if (!text.isEmpty()) {\n                    String clusterName = getClusterName(dir, child);\n                    Map<String, ClusterNode> cluster = clusters.get(clusterName);\n                    if (cluster == null) {\n                        cluster = new TreeMap<String, ClusterNode>();\n                        clusters.put(clusterName, cluster);\n                    }\n\n                    ObjectMapper mapper = new ObjectMapper();\n                    Map<String, Object> map = null;\n                    try {\n                        map = mapper.readValue(data, HashMap.class);\n                    } catch (JsonParseException e){\n                        log.error(\"Error parsing JSON string: {}\", text);\n                        throw e;\n                    }\n\n                    ClusterNode node = null;\n\n                    Object id = value(map, \"id\", \"container\");\n                    if (id != null) {\n                        Object agent = value(map, \"container\", \"agent\");\n                        List services = (List) value(map, \"services\");\n\n                        node = cluster.get(id);\n                        if (node == null) {\n                            node = new ClusterNode();\n                            cluster.put(id.toString(), node);\n                        }\n\n                        if (services != null) {\n                            if (!services.isEmpty()) {\n                                for (Object service : services) {\n                                    node.services.add(getSubstitutedData(getCurator(), service.toString()));\n                                }\n\n                                node.masters.add(agent);\n                            } else {\n                                node.slaves.add(agent);\n                            }\n                        } else {\n                            node.slaves.add(agent);\n                        }\n                    }\n                }\n            }\n        }\n\n        TablePrinter table = new TablePrinter();\n        table.columns(\"cluster\", \"masters\", \"slaves\", \"services\");\n\n        for (String clusterName : clusters.keySet()) {\n            Map<String, ClusterNode> nodes = clusters.get(clusterName);\n            table.row(clusterName, \"\", \"\", \"\", \"\");\n            for (String nodeName : nodes.keySet()) {\n                ClusterNode node = nodes.get(nodeName);\n                table.row(\"   \" + nodeName,\n                        printList(node.masters),\n                        printList(node.slaves),\n                        printList(node.services));\n            }\n        }\n        table.print();\n    }","commit_id":"179994c0bc5e63ac0fc5d1f8c24c9f61bdc391e6","url":"https://github.com/fabric8io/fabric8"},{"original_method":"private void printContainers(Container[] containers, Version version, PrintStream out) {\n        out.println(String.format(FORMAT, (Object[])HEADERS));\n        for (Container container : containers) {\n            if (CommandUtils.matchVersion(container, version)) {\n                String indent = \"\";\n                for (Container c = container; !c.isRoot(); c = c.getParent()) {\n                    indent+=\"  \";\n                }\n                //Mark local container with a star symbol\n                String marker = \"\";\n                if (container.getId().equals(fabricService.getCurrentContainer().getId())) {\n                    marker = \"*\";\n                }\n\n                List<String> assignedProfiles = dataStore.getContainerProfiles(container.getId());\n                String firstLine = String.format(FORMAT, indent + container.getId() + marker, container.getVersion().getId(), container.getType(),\n                        container.isAlive(), assignedProfiles.get(0), CommandUtils.status(container));\n                out.println(firstLine);\n\n                // we want multiple profiles to be displayed on next lines\n                for (int i = 1; i < assignedProfiles.size(); i++) {\n                    String nextLine = String.format(FORMAT, \"\", \"\", \"\", \"\", assignedProfiles.get(i), \"\");\n                    out.println(nextLine);\n                }\n            }\n        }\n    }","id":13711,"modified_method":"private void printContainers(Container[] containers, Version version, PrintStream out) {\n        TablePrinter table = new TablePrinter();\n        table.columns(\"id\", \"version\", \"type\", \"connected\", \"profiles\", \"provision status\");\n        for (Container container : containers) {\n            if (CommandUtils.matchVersion(container, version)) {\n                String indent = \"\";\n                for (Container c = container; !c.isRoot(); c = c.getParent()) {\n                    indent+=\"  \";\n                }\n                //Mark local container with a star symbol\n                String marker = \"\";\n                if (container.getId().equals(fabricService.getCurrentContainer().getId())) {\n                    marker = \"*\";\n                }\n\n                List<String> assignedProfiles = dataStore.getContainerProfiles(container.getId());\n                table.row(indent + container.getId() + marker, container.getVersion().getId(), container.getType(),\n                        aliveText(container), assignedProfiles.get(0), CommandUtils.status(container));\n\n                // we want multiple profiles to be displayed on next lines\n                for (int i = 1; i < assignedProfiles.size(); i++) {\n                    table.row(\"\", \"\", \"\", \"\", assignedProfiles.get(i), \"\");\n                }\n            }\n        }\n        table.print();\n    }","commit_id":"179994c0bc5e63ac0fc5d1f8c24c9f61bdc391e6","url":"https://github.com/fabric8io/fabric8"},{"original_method":"private void printContainersVerbose(Container[] containers, Version version, PrintStream out) {\n        String header = String.format(VERBOSE_FORMAT, (Object[])VERBOSE_HEADERS);\n\n        out.println(header);\n        for (Container container : containers) {\n            if (CommandUtils.matchVersion(container, version)) {\n                String indent = \"\";\n                for (Container c = container; !c.isRoot(); c = c.getParent()) {\n                    indent += \"  \";\n                }\n                //Mark local container with a star symbol\n                String marker = \"\";\n                if (container.getId().equals(fabricService.getCurrentContainer().getId())) {\n                    marker = \"*\";\n                }\n\n                String blueprintStatus = dataStore.getContainerAttribute(container.getId(), DataStore.ContainerAttribute.BlueprintStatus, \"\", false, false);\n                String springStatus = dataStore.getContainerAttribute(container.getId(), DataStore.ContainerAttribute.SpringStatus, \"\", false, false);\n                blueprintStatus = blueprintStatus.toLowerCase(Locale.ENGLISH);\n                springStatus = springStatus.toLowerCase(Locale.ENGLISH);\n\n                List<String> assignedProfiles = dataStore.getContainerProfiles(container.getId());\n                String firstLine = String.format(VERBOSE_FORMAT, indent + container.getId() + marker, container.getVersion().getId(), container.getType(),\n                        container.isAlive(), assignedProfiles.get(0), blueprintStatus, springStatus, CommandUtils.status(container));\n                out.println(firstLine);\n\n                // we want multiple profiles to be displayed on next lines\n                for (int i = 1; i < assignedProfiles.size(); i++) {\n                    String nextLine = String.format(VERBOSE_FORMAT, \"\", \"\", \"\", \"\", assignedProfiles.get(i), \"\", \"\", \"\");\n                    out.println(nextLine);\n                }\n            }\n        }\n    }","id":13712,"modified_method":"private void printContainersVerbose(Container[] containers, Version version, PrintStream out) {\n        TablePrinter table = new TablePrinter();\n        table.columns(\"id\", \"version\", \"type\", \"connected\", \"profiles\", \"blueprint\", \"spring\", \"provision status\");\n        for (Container container : containers) {\n            if (CommandUtils.matchVersion(container, version)) {\n                String indent = \"\";\n                for (Container c = container; !c.isRoot(); c = c.getParent()) {\n                    indent += \"  \";\n                }\n                //Mark local container with a star symbol\n                String marker = \"\";\n                if (container.getId().equals(fabricService.getCurrentContainer().getId())) {\n                    marker = \"*\";\n                }\n\n                String blueprintStatus = dataStore.getContainerAttribute(container.getId(), DataStore.ContainerAttribute.BlueprintStatus, \"\", false, false);\n                String springStatus = dataStore.getContainerAttribute(container.getId(), DataStore.ContainerAttribute.SpringStatus, \"\", false, false);\n                blueprintStatus = blueprintStatus.toLowerCase(Locale.ENGLISH);\n                springStatus = springStatus.toLowerCase(Locale.ENGLISH);\n\n                List<String> assignedProfiles = dataStore.getContainerProfiles(container.getId());\n                table.row(indent + container.getId() + marker, container.getVersion().getId(), container.getType(),\n                        aliveText(container), assignedProfiles.get(0), blueprintStatus, springStatus, CommandUtils.status(container));\n\n                // we want multiple profiles to be displayed on next lines\n                for (int i = 1; i < assignedProfiles.size(); i++) {\n                    table.row(\"\", \"\", \"\", \"\", assignedProfiles.get(i), \"\", \"\", \"\");\n                }\n            }\n        }\n        table.print();\n\n    }","commit_id":"179994c0bc5e63ac0fc5d1f8c24c9f61bdc391e6","url":"https://github.com/fabric8io/fabric8"},{"original_method":"@Override\n    protected Object doExecute() throws Exception {\n\n        if (containerIds == null || containerIds.isEmpty()) {\n            containerIds = new ArrayList<String>();\n            for (Container container : fabricService.getContainers()) {\n                containerIds.add(container.getId());\n            }\n        }\n        System.out.println(String.format(FORMAT, (Object[]) HEADERS));\n        for (String containerId : containerIds) {\n            Container container = fabricService.getContainer(containerId);\n            String localHostName = container.getLocalHostname();\n            String localIp = container.getLocalIp();\n            String publicHostName = container.getPublicHostname();\n            String publicIp = container.getPublicIp();\n            String manualIp = container.getManualIp();\n\n            localHostName = localHostName != null ? localHostName : \"\";\n            localIp = localIp != null ? localIp : \"\";\n            publicHostName = publicHostName != null ? publicHostName : \"\";\n            publicIp = publicIp != null ? publicIp : \"\";\n            manualIp = manualIp != null ? manualIp : \"\";\n\n            String resolver = container.getResolver();\n            System.out.println(String.format(FORMAT, containerId, resolver, localHostName, localIp, publicHostName, publicIp, manualIp));\n        }\n        return null;\n    }","id":13713,"modified_method":"@Override\n    protected Object doExecute() throws Exception {\n\n        if (containerIds == null || containerIds.isEmpty()) {\n            containerIds = new ArrayList<String>();\n            for (Container container : fabricService.getContainers()) {\n                containerIds.add(container.getId());\n            }\n        }\n        TablePrinter table = new TablePrinter();\n        table.columns(\"id\", \"resolver\", \"local hostname\", \"local ip\", \"public hostname\", \"public ip\", \"manual ip\");\n        for (String containerId : containerIds) {\n            Container container = fabricService.getContainer(containerId);\n            String localHostName = container.getLocalHostname();\n            String localIp = container.getLocalIp();\n            String publicHostName = container.getPublicHostname();\n            String publicIp = container.getPublicIp();\n            String manualIp = container.getManualIp();\n\n            localHostName = localHostName != null ? localHostName : \"\";\n            localIp = localIp != null ? localIp : \"\";\n            publicHostName = publicHostName != null ? publicHostName : \"\";\n            publicIp = publicIp != null ? publicIp : \"\";\n            manualIp = manualIp != null ? manualIp : \"\";\n\n            String resolver = container.getResolver();\n            table.row(containerId, resolver, localHostName, localIp, publicHostName, publicIp, manualIp);\n        }\n        table.print();\n        return null;\n    }","commit_id":"179994c0bc5e63ac0fc5d1f8c24c9f61bdc391e6","url":"https://github.com/fabric8io/fabric8"},{"original_method":"private void printContainers(PodListSchema pods, PrintStream out) {\n        out.println(String.format(FORMAT, (Object[]) HEADERS));\n        List<PodSchema> items = pods.getItems();\n        if (items == null) {\n            items = Collections.EMPTY_LIST;\n        }\n        Filter<PodSchema> filter = KubernetesHelpers.createFilter(filterText);\n        for (PodSchema item : items) {\n            if (filter.matches(item)) {\n                String id = item.getId();\n                CurrentState currentState = item.getCurrentState();\n                String status = \"\";\n                String host = \"\";\n                if (currentState != null) {\n                    status = currentState.getStatus();\n                    host = currentState.getHost();\n                }\n                Map<String, String> labelMap = item.getLabels();\n                String labels = KubernetesHelpers.toLabelsString(labelMap);\n                DesiredState desiredState = item.getDesiredState();\n                if (desiredState != null) {\n                    ManifestSchema manifest = desiredState.getManifest();\n                    if (manifest != null) {\n                        List<ManifestContainer> containers = manifest.getContainers();\n                        for (ManifestContainer container : containers) {\n                            String image = container.getImage();\n                            String firstLine = String.format(FORMAT, id, image, host, labels, status);\n                            out.println(firstLine);\n\n                            id = \"\";\n                            host = \"\";\n                            status = \"\";\n                            labels = \"\";\n                        }\n                    }\n                }\n            }\n        }\n    }","id":13714,"modified_method":"private void printContainers(PodListSchema pods, PrintStream out) {\n        TablePrinter table = new TablePrinter();\n        table.columns(\"id\", \"image(s)\", \"host\", \"labels\", \"status\");\n        List<PodSchema> items = pods.getItems();\n        if (items == null) {\n            items = Collections.EMPTY_LIST;\n        }\n        Filter<PodSchema> filter = KubernetesHelpers.createFilter(filterText);\n        for (PodSchema item : items) {\n            if (filter.matches(item)) {\n                String id = item.getId();\n                CurrentState currentState = item.getCurrentState();\n                String status = \"\";\n                String host = \"\";\n                if (currentState != null) {\n                    status = currentState.getStatus();\n                    host = currentState.getHost();\n                }\n                Map<String, String> labelMap = item.getLabels();\n                String labels = KubernetesHelpers.toLabelsString(labelMap);\n                DesiredState desiredState = item.getDesiredState();\n                if (desiredState != null) {\n                    ManifestSchema manifest = desiredState.getManifest();\n                    if (manifest != null) {\n                        List<ManifestContainer> containers = manifest.getContainers();\n                        for (ManifestContainer container : containers) {\n                            String image = container.getImage();\n                            table.row(id, image, host, labels, status);\n\n                            id = \"\";\n                            host = \"\";\n                            status = \"\";\n                            labels = \"\";\n                        }\n                    }\n                }\n            }\n        }\n        table.print();\n    }","commit_id":"179994c0bc5e63ac0fc5d1f8c24c9f61bdc391e6","url":"https://github.com/fabric8io/fabric8"},{"original_method":"protected void printProfiles(ProfileService profileService, List<Profile> profiles, PrintStream out) {\n        out.println(String.format(\"%-50s %-14s %s\", \"[id]\", \"[# containers]\", \"[parents]\"));\n        for (Profile profile : profiles) {\n        \tString versionId = profile.getVersion();\n        \tString profileId = profile.getId();\n            // skip profiles that do not exists (they may have been deleted)\n            if (profileService.hasProfile(versionId, profileId) && (hidden || !profile.isHidden())) {\n                int active = fabricService.getAssociatedContainers(versionId, profileId).length;\n                String parents = Strings.join(profile.getParentIds(), \" \");\n                out.println(String.format(\"%-50s %-14s %s\", profileId, active, parents));\n            }\n        }\n    }","id":13715,"modified_method":"protected void printProfiles(ProfileService profileService, List<Profile> profiles, PrintStream out) {\n        TablePrinter table = new TablePrinter();\n        table.columns(\"id\", \"# containers\", \"parents\");\n        for (Profile profile : profiles) {\n        \tString versionId = profile.getVersion();\n        \tString profileId = profile.getId();\n            // skip profiles that do not exists (they may have been deleted)\n            if (profileService.hasProfile(versionId, profileId) && (hidden || !profile.isHidden())) {\n                int active = fabricService.getAssociatedContainers(versionId, profileId).length;\n                String parents = Strings.join(profile.getParentIds(), \" \");\n                table.row(profileId, activeContainerCountText(active), parents);\n            }\n        }\n        table.print();\n    }","commit_id":"179994c0bc5e63ac0fc5d1f8c24c9f61bdc391e6","url":"https://github.com/fabric8io/fabric8"},{"original_method":"@Override\n    protected void printRequirements(PrintStream out, FabricRequirements requirements) {\n        out.println(String.format(\"%-40s %-14s %-14s %s\", \"[profile]\", \"[# minimum]\", \"[# maximum]\", \"[depends on]\"));\n        List<ProfileRequirements> profileRequirements = requirements.getProfileRequirements();\n        for (ProfileRequirements profile : profileRequirements) {\n            out.println(String.format(\"%-40s %-14s %-14s %s\", profile.getProfile(),\n                    getStringOrBlank(profile.getMinimumInstances()),\n                    getStringOrBlank(profile.getMaximumInstances()),\n                    getStringOrBlank(profile.getDependentProfiles())));\n        }\n    }","id":13716,"modified_method":"@Override\n    protected void printRequirements(PrintStream out, FabricRequirements requirements) {\n        TablePrinter table = new TablePrinter();\n        table.columns(\"profile\", \"# minimum\", \"# maximum\", \"depends on\");\n        List<ProfileRequirements> profileRequirements = requirements.getProfileRequirements();\n        for (ProfileRequirements profile : profileRequirements) {\n            table.row(profile.getProfile(),\n                    getStringOrBlank(profile.getMinimumInstances()),\n                    getStringOrBlank(profile.getMaximumInstances()),\n                    getStringOrBlank(profile.getDependentProfiles()));\n        }\n        table.print();\n    }","commit_id":"179994c0bc5e63ac0fc5d1f8c24c9f61bdc391e6","url":"https://github.com/fabric8io/fabric8"},{"original_method":"protected void printVersions(Container[] containers, List<String> versions, String defaultVersionId, PrintStream out) {\n        out.println(String.format(CONSOLE_FORMAT, \"[version]\", \"[default]\", \"[# containers]\", \"[description]\"));\n\n        // they are sorted in the correct order by default\n        for (String versionId : versions) {\n            boolean isDefault = versionId.equals(defaultVersionId);\n            Version version = profileService.getRequiredVersion(versionId);\n            int active = countContainersByVersion(containers, version);\n            String description = version.getAttributes().get(Version.DESCRIPTION);\n            out.println(String.format(CONSOLE_FORMAT, version.getId(), (isDefault ? \"true\" : \"false\"), active, (description != null ? description : \"\")));\n        }\n    }","id":13717,"modified_method":"protected void printVersions(Container[] containers, List<String> versions, String defaultVersionId, PrintStream out) {\n        TablePrinter table = new TablePrinter();\n        table.columns(\"version\", \"default\", \"# containers\", \"description\");\n\n        // they are sorted in the correct order by default\n        for (String versionId : versions) {\n            boolean isDefault = versionId.equals(defaultVersionId);\n            Version version = profileService.getRequiredVersion(versionId);\n            int active = countContainersByVersion(containers, version);\n            String description = version.getAttributes().get(Version.DESCRIPTION);\n            table.row(version.getId(), (isDefault ? \"true\" : \"\"), activeContainerCountText(active), description);\n        }\n        table.print();\n    }","commit_id":"179994c0bc5e63ac0fc5d1f8c24c9f61bdc391e6","url":"https://github.com/fabric8io/fabric8"},{"original_method":"@Override\n    protected Object doExecute() throws Exception {\n        if (verbose) {\n            System.out.println(String.format(VERBOSE_FORMAT, (Object[]) VERBOSE_HEADERS));\n        } else {\n            System.out.println(String.format(FORMAT, (Object[]) HEADERS));\n        }\n\n        for (Archetype archetype : archetypeService.listArchetypes()) {\n            String nextLine;\n            if (verbose) {\n                nextLine = String.format(VERBOSE_FORMAT, archetype.groupId, archetype.artifactId, archetype.version, archetype.description);\n            } else {\n                // only list artifact id in short format\n                nextLine = String.format(FORMAT, archetype.artifactId, archetype.description);\n            }\n            System.out.println(nextLine);\n        }\n\n        return null;\n    }","id":13718,"modified_method":"@Override\n    protected Object doExecute() throws Exception {\n\n        TablePrinter table = new TablePrinter();\n        if (verbose) {\n            table.columns(\"groupId\", \"artifactId\", \"version\", \"description\");\n        } else {\n            table.columns(\"artifactId\", \"description\");\n        }\n\n        for (Archetype archetype : archetypeService.listArchetypes()) {\n            if (verbose) {\n                table.row(archetype.groupId, archetype.artifactId, archetype.version, archetype.description);\n            } else {\n                // only list artifact id in short format\n                table.row(archetype.artifactId, archetype.description);\n            }\n        }\n        table.print();\n\n        return null;\n    }","commit_id":"3d7790eba0ca636a32748358947df2d7f31fea8c","url":"https://github.com/fabric8io/fabric8"},{"original_method":"/**\n     * Helper method to log an xwiki exception during rights checking process.\n     * \n     * @param e exception to log\n     * @param target the annotation target for which exception has occurred\n     * @param user the user name for which exception occurred on verification\n     */\n    private void logException(Exception e, String target, String user)\n    {\n        this.logger.warn(\"Couldn't get access rights for the target [{}] for user [{}]\",\n            new Object[] {target, user, e});\n    }","id":13719,"modified_method":"/**\n     * Helper method to log an xwiki exception during rights checking process.\n     * \n     * @param e exception to log\n     * @param target the annotation target for which exception has occurred\n     * @param user the user name for which exception occurred on verification\n     */\n    private void logException(Exception e, String target, String user)\n    {\n        this.logger.warn(\"Couldn't get access rights for the target [{}] for user [{}]\", target, user, e);\n    }","commit_id":"d2997f8cf9e4ddcc70c82b943efc80e70ad9c7fe","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Override\n    public boolean canEditAnnotation(String annotationId, String target, String userName)\n    {\n        // if the user has edit right on the document represented by the target, or is the author of the annotation\n        XWikiContext xwikiContext = getXWikiContext();\n        try {\n            boolean hasEditRight =\n                xwikiContext.getWiki().getRightService().hasAccessLevel(\"edit\", userName, getDocumentReference(target),\n                    xwikiContext);\n            if (hasEditRight) {\n                return true;\n            }\n            // check if it's the author of the annotation\n            Annotation ann = annotationsStorageService.getAnnotation(target, annotationId);\n            return ann != null && ann.getAuthor().equals(userName);\n        } catch (Exception e) {\n            logException(e, target, userName);\n            return false;\n        }\n    }","id":13720,"modified_method":"@Override\n    public boolean canEditAnnotation(String annotationId, String target, String userName)\n    {\n        // if the user has edit right on the document represented by the target, or is the author of the annotation\n        try {\n            boolean hasEditRight =\n                this.authorization.hasAccess(Right.EDIT, getUserReference(userName), getDocumentReference(target));\n            if (hasEditRight) {\n                return true;\n            }\n\n            // check if it's the author of the annotation\n            Annotation ann = annotationsStorageService.getAnnotation(target, annotationId);\n            return ann != null && ann.getAuthor().equals(userName);\n        } catch (Exception e) {\n            logException(e, target, userName);\n            return false;\n        }\n    }","commit_id":"d2997f8cf9e4ddcc70c82b943efc80e70ad9c7fe","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Helper method to parse the target as a reference and extract a serialized document reference from it: the\n     * document reference serialized if the target can be parsed as a typed reference, or the initial string itself\n     * otherwise.\n     * \n     * @param target the serialized reference to target to extract the document reference from\n     * @return the serialized reference to the document to which the target refers\n     */\n    private String getDocumentReference(String target)\n    {\n        EntityReference ref = referenceResolver.resolve(target, EntityType.DOCUMENT);\n        // get the document name from the parsed reference\n        String docName = target;\n        if (ref.getType() == EntityType.DOCUMENT || ref.getType() == EntityType.OBJECT_PROPERTY) {\n            docName = serializer.serialize(ref.extractReference(EntityType.DOCUMENT));\n        }\n\n        return docName;\n    }","id":13721,"modified_method":"/**\n     * Helper method to parse the target as a reference and extract a serialized document reference from it: the\n     * document reference serialized if the target can be parsed as a typed reference, or the initial string itself\n     * otherwise.\n     * \n     * @param target the serialized reference to target to extract the document reference from\n     * @return the serialized reference to the document to which the target refers\n     */\n    private EntityReference getDocumentReference(String target)\n    {\n        EntityReference ref = this.referenceResolver.resolve(target, EntityType.DOCUMENT);\n\n        return ref.extractReference(EntityType.DOCUMENT);\n    }","commit_id":"d2997f8cf9e4ddcc70c82b943efc80e70ad9c7fe","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Override\n    public boolean canAddAnnotation(String target, String userName)\n    {\n        // if the user has comment right on the document represented by the target\n        XWikiContext xwikiContext = getXWikiContext();\n        try {\n            return xwikiContext.getWiki().getRightService().hasAccessLevel(\"comment\", userName,\n                getDocumentReference(target), xwikiContext);\n        } catch (XWikiException e) {\n            logException(e, target, userName);\n            return false;\n        }\n    }","id":13722,"modified_method":"@Override\n    public boolean canAddAnnotation(String target, String userName)\n    {\n        // if the user has comment right on the document represented by the target\n        return this.authorization.hasAccess(Right.COMMENT, getUserReference(userName), getDocumentReference(target));\n    }","commit_id":"d2997f8cf9e4ddcc70c82b943efc80e70ad9c7fe","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Override\n    public boolean canViewAnnotations(String target, String userName)\n    {\n        // if user can view the target, it should be able to view annotations on it\n        XWikiContext xwikiContext = getXWikiContext();\n        try {\n            return xwikiContext.getWiki().getRightService().hasAccessLevel(\"view\", userName,\n                getDocumentReference(target), xwikiContext);\n        } catch (XWikiException e) {\n            logException(e, target, userName);\n            return false;\n        }\n    }","id":13723,"modified_method":"@Override\n    public boolean canViewAnnotations(String target, String userName)\n    {\n        // if user can view the target, it should be able to view annotations on it\n        return this.authorization.hasAccess(Right.VIEW, getUserReference(userName), getDocumentReference(target));\n    }","commit_id":"d2997f8cf9e4ddcc70c82b943efc80e70ad9c7fe","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@Override\n    public Builder<P> configure(OperationContext context, ModelNode model) throws OperationFailedException {\n        this.module = ModelNodes.asModuleIdentifier(MODULE.resolveModelAttribute(context, model));\n        String binding = ModelNodes.asString(SOCKET_BINDING.resolveModelAttribute(context, model));\n        if (binding != null) {\n            this.socketBinding = new InjectedValueDependency<>(CommonUnaryRequirement.SOCKET_BINDING.getServiceName(context, binding), SocketBinding.class);\n        }\n        String dataSource = ModelNodes.asString(DATA_SOURCE.resolveModelAttribute(context, model));\n        if (dataSource != null) {\n            this.dataSource = new InjectedValueDependency<>(CommonUnaryRequirement.DATA_SOURCE.getServiceName(context, dataSource), DataSource.class);\n        }\n        for (Property property : ModelNodes.asPropertyList(PROPERTIES.resolveModelAttribute(context, model))) {\n            this.properties.put(property.getName(), property.getValue().asString());\n        }\n        return this;\n    }","id":13724,"modified_method":"@Override\n    public Builder<P> configure(OperationContext context, ModelNode model) throws OperationFailedException {\n        this.module = ModelNodes.asModuleIdentifier(MODULE.resolveModelAttribute(context, model));\n        this.socketBinding = ModelNodes.optionalString(SOCKET_BINDING.resolveModelAttribute(context, model)).map(binding -> new InjectedValueDependency<>(CommonUnaryRequirement.SOCKET_BINDING.getServiceName(context, binding), SocketBinding.class)).orElse(null);\n        this.dataSource = ModelNodes.optionalString(DATA_SOURCE.resolveModelAttribute(context, model)).map(dataSource -> new InjectedValueDependency<>(CommonUnaryRequirement.DATA_SOURCE.getServiceName(context, dataSource), DataSource.class)).orElse(null);\n        ModelNodes.optionalPropertyList(PROPERTIES.resolveModelAttribute(context, model)).ifPresent(properties -> properties.forEach(property -> this.properties.put(property.getName(), property.getValue().asString())));\n        return this;\n    }","commit_id":"11abbb23193872eb2e71b2ec90ee1642d72bf6b2","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public Builder<BackupForConfiguration> configure(OperationContext context, ModelNode model) throws OperationFailedException {\n        String site = ModelNodes.asString(SITE.resolveModelAttribute(context, model));\n        if (site != null) {\n            this.builder.remoteSite(site).remoteCache(CACHE.resolveModelAttribute(context, model).asString());\n        }\n        return this;\n    }","id":13725,"modified_method":"@Override\n    public Builder<BackupForConfiguration> configure(OperationContext context, ModelNode model) throws OperationFailedException {\n        Optional<String> site = ModelNodes.optionalString(SITE.resolveModelAttribute(context, model));\n        if (site.isPresent()) {\n            this.builder.remoteSite(site.get()).remoteCache(CACHE.resolveModelAttribute(context, model).asString());\n        }\n        return this;\n    }","commit_id":"11abbb23193872eb2e71b2ec90ee1642d72bf6b2","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public CacheContainerBuilder configure(OperationContext context, ModelNode model) throws OperationFailedException {\n        List<String> aliases = ModelNodes.asStringList(ALIASES.resolveModelAttribute(context, model));\n        this.aliases.clear();\n        aliases.forEach(alias -> this.aliases.add(InfinispanRequirement.CONTAINER.getServiceName(context.getCapabilityServiceSupport(), alias)));\n        this.configuration = new InjectedValueDependency<>(InfinispanRequirement.CONFIGURATION.getServiceName(context, this.name), GlobalConfiguration.class);\n        this.defaultCache = ModelNodes.asString(DEFAULT_CACHE.resolveModelAttribute(context, model), BasicCacheContainer.DEFAULT_CACHE_NAME);\n        return this;\n    }","id":13726,"modified_method":"@Override\n    public CacheContainerBuilder configure(OperationContext context, ModelNode model) throws OperationFailedException {\n        this.aliases.clear();\n        ModelNodes.optionalList(ALIASES.resolveModelAttribute(context, model)).ifPresent(aliases -> {\n            aliases.stream().map(ModelNode::asString).forEach(alias -> this.aliases.add(InfinispanRequirement.CONTAINER.getServiceName(context.getCapabilityServiceSupport(), alias)));\n        });\n        this.configuration = new InjectedValueDependency<>(InfinispanRequirement.CONFIGURATION.getServiceName(context, this.name), GlobalConfiguration.class);\n        this.defaultCache = ModelNodes.optionalString(DEFAULT_CACHE.resolveModelAttribute(context, model)).orElse(BasicCacheContainer.DEFAULT_CACHE_NAME);\n        return this;\n    }","commit_id":"11abbb23193872eb2e71b2ec90ee1642d72bf6b2","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public void installServices(OperationContext context, ModelNode model) throws OperationFailedException {\n        PathAddress address = context.getCurrentAddress();\n        String name = context.getCurrentAddressValue();\n\n        // Handle case where ejb subsystem has already installed services for this cache-container\n        // This can happen if the ejb cache-container is added to a running server\n        if (context.getProcessType().isServer() && !context.isBooting() && name.equals(\"ejb\")) {\n            Resource rootResource = context.readResourceFromRoot(PathAddress.EMPTY_ADDRESS);\n            PathElement ejbPath = PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM, \"ejb3\");\n            if (rootResource.hasChild(ejbPath) && rootResource.getChild(ejbPath).hasChild(PathElement.pathElement(\"service\", \"remote\"))) {\n                // Following restart, these services will be installed by this handler, rather than the ejb remote handler\n                context.addStep(new OperationStepHandler() {\n                    @Override\n                    public void execute(final OperationContext context, final ModelNode operation) throws OperationFailedException {\n                        context.reloadRequired();\n                        context.completeStep(OperationContext.RollbackHandler.REVERT_RELOAD_REQUIRED_ROLLBACK_HANDLER);\n                    }\n                }, OperationContext.Stage.RUNTIME);\n                return;\n            }\n        }\n\n        ServiceTarget target = context.getServiceTarget();\n        CapabilityServiceSupport support = context.getCapabilityServiceSupport();\n\n        new ModuleBuilder(CacheContainerComponent.MODULE.getServiceName(address), MODULE).configure(context, model).build(target).install();\n        new GlobalConfigurationBuilder(address).configure(context, model).build(target).install();\n\n        CacheContainerBuilder containerBuilder = new CacheContainerBuilder(address).configure(context, model);\n        containerBuilder.build(target).install();\n\n        new KeyAffinityServiceFactoryBuilder(address).build(target).install();\n\n        String jndiName = ModelNodes.asString(CacheContainerResourceDefinition.Attribute.JNDI_NAME.resolveModelAttribute(context, model));\n        BinderServiceBuilder<?> bindingBuilder = new BinderServiceBuilder<>(InfinispanBindingFactory.createCacheContainerBinding(name), containerBuilder.getServiceName(), CacheContainer.class);\n        if (jndiName != null) {\n            bindingBuilder.alias(ContextNames.bindInfoFor(JndiNameFactory.parse(jndiName).getAbsoluteName()));\n        }\n        bindingBuilder.build(target).install();\n\n        String defaultCache = containerBuilder.getDefaultCache();\n        if (defaultCache != null) {\n            DEFAULT_CAPABILITIES.entrySet().forEach(entry -> new AliasServiceBuilder<>(entry.getValue().getServiceName(address), entry.getKey().getServiceName(context, name, defaultCache), entry.getKey().getType()).build(target).install());\n\n            if (!defaultCache.equals(JndiNameFactory.DEFAULT_LOCAL_NAME)) {\n                new BinderServiceBuilder<>(InfinispanBindingFactory.createCacheBinding(name, JndiNameFactory.DEFAULT_LOCAL_NAME), DEFAULT_CAPABILITIES.get(InfinispanCacheRequirement.CACHE).getServiceName(address), Cache.class).build(target).install();\n                new BinderServiceBuilder<>(InfinispanBindingFactory.createCacheConfigurationBinding(name, JndiNameFactory.DEFAULT_LOCAL_NAME), DEFAULT_CAPABILITIES.get(InfinispanCacheRequirement.CONFIGURATION).getServiceName(address), Configuration.class).build(target).install();\n\n                for (CacheGroupAliasBuilderProvider provider : ServiceLoader.load(CacheGroupAliasBuilderProvider.class, CacheGroupAliasBuilderProvider.class.getClassLoader())) {\n                    for (Builder<?> builder : provider.getBuilders(support, name, null, defaultCache)) {\n                        builder.build(target).install();\n                    }\n                }\n            }\n        }\n    }","id":13727,"modified_method":"@Override\n    public void installServices(OperationContext context, ModelNode model) throws OperationFailedException {\n        PathAddress address = context.getCurrentAddress();\n        String name = context.getCurrentAddressValue();\n\n        // Handle case where ejb subsystem has already installed services for this cache-container\n        // This can happen if the ejb cache-container is added to a running server\n        if (context.getProcessType().isServer() && !context.isBooting() && name.equals(\"ejb\")) {\n            Resource rootResource = context.readResourceFromRoot(PathAddress.EMPTY_ADDRESS);\n            PathElement ejbPath = PathElement.pathElement(ModelDescriptionConstants.SUBSYSTEM, \"ejb3\");\n            if (rootResource.hasChild(ejbPath) && rootResource.getChild(ejbPath).hasChild(PathElement.pathElement(\"service\", \"remote\"))) {\n                // Following restart, these services will be installed by this handler, rather than the ejb remote handler\n                context.addStep(new OperationStepHandler() {\n                    @Override\n                    public void execute(final OperationContext context, final ModelNode operation) throws OperationFailedException {\n                        context.reloadRequired();\n                        context.completeStep(OperationContext.RollbackHandler.REVERT_RELOAD_REQUIRED_ROLLBACK_HANDLER);\n                    }\n                }, OperationContext.Stage.RUNTIME);\n                return;\n            }\n        }\n\n        ServiceTarget target = context.getServiceTarget();\n        CapabilityServiceSupport support = context.getCapabilityServiceSupport();\n\n        new ModuleBuilder(CacheContainerComponent.MODULE.getServiceName(address), MODULE).configure(context, model).build(target).install();\n        new GlobalConfigurationBuilder(address).configure(context, model).build(target).install();\n\n        CacheContainerBuilder containerBuilder = new CacheContainerBuilder(address).configure(context, model);\n        containerBuilder.build(target).install();\n\n        new KeyAffinityServiceFactoryBuilder(address).build(target).install();\n\n        BinderServiceBuilder<?> bindingBuilder = new BinderServiceBuilder<>(InfinispanBindingFactory.createCacheContainerBinding(name), containerBuilder.getServiceName(), CacheContainer.class);\n        ModelNodes.optionalString(JNDI_NAME.resolveModelAttribute(context, model)).map(jndiName -> ContextNames.bindInfoFor(JndiNameFactory.parse(jndiName).getAbsoluteName())).ifPresent(aliasBinding -> bindingBuilder.alias(aliasBinding));\n        bindingBuilder.build(target).install();\n\n        String defaultCache = containerBuilder.getDefaultCache();\n        if (defaultCache != null) {\n            DEFAULT_CAPABILITIES.entrySet().forEach(entry -> new AliasServiceBuilder<>(entry.getValue().getServiceName(address), entry.getKey().getServiceName(context, name, defaultCache), entry.getKey().getType()).build(target).install());\n\n            if (!defaultCache.equals(JndiNameFactory.DEFAULT_LOCAL_NAME)) {\n                new BinderServiceBuilder<>(InfinispanBindingFactory.createCacheBinding(name, JndiNameFactory.DEFAULT_LOCAL_NAME), DEFAULT_CAPABILITIES.get(InfinispanCacheRequirement.CACHE).getServiceName(address), Cache.class).build(target).install();\n                new BinderServiceBuilder<>(InfinispanBindingFactory.createCacheConfigurationBinding(name, JndiNameFactory.DEFAULT_LOCAL_NAME), DEFAULT_CAPABILITIES.get(InfinispanCacheRequirement.CONFIGURATION).getServiceName(address), Configuration.class).build(target).install();\n\n                for (CacheGroupAliasBuilderProvider provider : ServiceLoader.load(CacheGroupAliasBuilderProvider.class, CacheGroupAliasBuilderProvider.class.getClassLoader())) {\n                    for (Builder<?> builder : provider.getBuilders(support, name, null, defaultCache)) {\n                        builder.build(target).install();\n                    }\n                }\n            }\n        }\n    }","commit_id":"11abbb23193872eb2e71b2ec90ee1642d72bf6b2","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public void removeServices(OperationContext context, ModelNode model) throws OperationFailedException {\n        PathAddress address = context.getCurrentAddress();\n        String name = context.getCurrentAddressValue();\n        CapabilityServiceSupport support = context.getCapabilityServiceSupport();\n\n        String defaultCache = ModelNodes.asString(DEFAULT_CACHE.resolveModelAttribute(context, model));\n        if (defaultCache != null) {\n            if (!defaultCache.equals(JndiNameFactory.DEFAULT_LOCAL_NAME)) {\n                for (CacheGroupAliasBuilderProvider provider : ServiceLoader.load(CacheGroupAliasBuilderProvider.class, CacheGroupAliasBuilderProvider.class.getClassLoader())) {\n                    for (Builder<?> builder : provider.getBuilders(support, name, null, defaultCache)) {\n                        context.removeService(builder.getServiceName());\n                    }\n                }\n\n                context.removeService(InfinispanBindingFactory.createCacheBinding(name, JndiNameFactory.DEFAULT_LOCAL_NAME).getBinderServiceName());\n                context.removeService(InfinispanBindingFactory.createCacheConfigurationBinding(name, JndiNameFactory.DEFAULT_LOCAL_NAME).getBinderServiceName());\n            }\n\n            DEFAULT_CAPABILITIES.values().forEach(capability -> context.removeService(capability.getServiceName(address)));\n        }\n\n        context.removeService(InfinispanBindingFactory.createCacheContainerBinding(name).getBinderServiceName());\n\n        EnumSet.allOf(CacheContainerResourceDefinition.Capability.class).stream().map(component -> component.getServiceName(address)).forEach(serviceName -> context.removeService(serviceName));\n    }","id":13728,"modified_method":"@Override\n    public void removeServices(OperationContext context, ModelNode model) throws OperationFailedException {\n        PathAddress address = context.getCurrentAddress();\n        String name = context.getCurrentAddressValue();\n        CapabilityServiceSupport support = context.getCapabilityServiceSupport();\n\n        ModelNodes.optionalString(DEFAULT_CACHE.resolveModelAttribute(context, model)).ifPresent(defaultCache -> {\n            if (!defaultCache.equals(JndiNameFactory.DEFAULT_LOCAL_NAME)) {\n                for (CacheGroupAliasBuilderProvider provider : ServiceLoader.load(CacheGroupAliasBuilderProvider.class, CacheGroupAliasBuilderProvider.class.getClassLoader())) {\n                    for (Builder<?> builder : provider.getBuilders(support, name, null, defaultCache)) {\n                        context.removeService(builder.getServiceName());\n                    }\n                }\n\n                context.removeService(InfinispanBindingFactory.createCacheBinding(name, JndiNameFactory.DEFAULT_LOCAL_NAME).getBinderServiceName());\n                context.removeService(InfinispanBindingFactory.createCacheConfigurationBinding(name, JndiNameFactory.DEFAULT_LOCAL_NAME).getBinderServiceName());\n            }\n\n            DEFAULT_CAPABILITIES.values().forEach(capability -> context.removeService(capability.getServiceName(address)));\n        });\n\n        context.removeService(InfinispanBindingFactory.createCacheContainerBinding(name).getBinderServiceName());\n\n        EnumSet.allOf(CacheContainerResourceDefinition.Capability.class).stream().map(component -> component.getServiceName(address)).forEach(serviceName -> context.removeService(serviceName));\n    }","commit_id":"11abbb23193872eb2e71b2ec90ee1642d72bf6b2","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public void installServices(OperationContext context, ModelNode model) throws OperationFailedException {\n        PathAddress cacheAddress = context.getCurrentAddress();\n        PathAddress containerAddress = cacheAddress.getParent();\n\n        String containerName = containerAddress.getLastElement().getValue();\n        String cacheName = cacheAddress.getLastElement().getValue();\n\n        ServiceTarget target = context.getServiceTarget();\n        CapabilityServiceSupport support = context.getCapabilityServiceSupport();\n\n        ServiceName moduleServiceName = CacheComponent.MODULE.getServiceName(cacheAddress);\n        if (model.hasDefined(MODULE.getName())) {\n            new ModuleBuilder(moduleServiceName, MODULE).configure(context, model).build(target).install();\n        } else {\n            new AliasServiceBuilder<>(moduleServiceName, CacheContainerComponent.MODULE.getServiceName(containerAddress), Module.class).build(target).install();\n        }\n\n        this.builderFactory.createBuilder(cacheAddress).configure(context, model).build(target).setInitialMode(ServiceController.Mode.PASSIVE).install();\n\n        new CacheBuilder<>(CACHE.getServiceName(cacheAddress), containerName, cacheName).configure(context).build(target).install();\n        new XAResourceRecoveryBuilder(cacheAddress).build(target).install();\n\n        new BinderServiceBuilder<>(InfinispanBindingFactory.createCacheConfigurationBinding(containerName, cacheName), CONFIGURATION.getServiceName(cacheAddress), Configuration.class).build(target).install();\n        BinderServiceBuilder<?> bindingBuilder = new BinderServiceBuilder<>(InfinispanBindingFactory.createCacheBinding(containerName, cacheName), CACHE.getServiceName(cacheAddress), Cache.class);\n        String jndiName = ModelNodes.asString(CacheResourceDefinition.Attribute.JNDI_NAME.resolveModelAttribute(context, model));\n        if (jndiName != null) {\n            bindingBuilder.alias(ContextNames.bindInfoFor(JndiNameFactory.parse(jndiName).getAbsoluteName()));\n        }\n        bindingBuilder.build(target).install();\n\n        for (CacheGroupBuilderProvider provider : ServiceLoader.load(this.providerClass, this.providerClass.getClassLoader())) {\n            for (Builder<?> builder : provider.getBuilders(support, containerName, cacheName)) {\n                builder.build(target).install();\n            }\n        }\n    }","id":13729,"modified_method":"@Override\n    public void installServices(OperationContext context, ModelNode model) throws OperationFailedException {\n        PathAddress cacheAddress = context.getCurrentAddress();\n        PathAddress containerAddress = cacheAddress.getParent();\n\n        String containerName = containerAddress.getLastElement().getValue();\n        String cacheName = cacheAddress.getLastElement().getValue();\n\n        ServiceTarget target = context.getServiceTarget();\n        CapabilityServiceSupport support = context.getCapabilityServiceSupport();\n\n        ServiceName moduleServiceName = CacheComponent.MODULE.getServiceName(cacheAddress);\n        if (model.hasDefined(MODULE.getName())) {\n            new ModuleBuilder(moduleServiceName, MODULE).configure(context, model).build(target).install();\n        } else {\n            new AliasServiceBuilder<>(moduleServiceName, CacheContainerComponent.MODULE.getServiceName(containerAddress), Module.class).build(target).install();\n        }\n\n        this.builderFactory.createBuilder(cacheAddress).configure(context, model).build(target).setInitialMode(ServiceController.Mode.PASSIVE).install();\n\n        new CacheBuilder<>(CACHE.getServiceName(cacheAddress), containerName, cacheName).configure(context).build(target).install();\n        new XAResourceRecoveryBuilder(cacheAddress).build(target).install();\n\n        new BinderServiceBuilder<>(InfinispanBindingFactory.createCacheConfigurationBinding(containerName, cacheName), CONFIGURATION.getServiceName(cacheAddress), Configuration.class).build(target).install();\n        BinderServiceBuilder<?> bindingBuilder = new BinderServiceBuilder<>(InfinispanBindingFactory.createCacheBinding(containerName, cacheName), CACHE.getServiceName(cacheAddress), Cache.class);\n        ModelNodes.optionalString(JNDI_NAME.resolveModelAttribute(context, model)).map(jndiName -> ContextNames.bindInfoFor(JndiNameFactory.parse(jndiName).getAbsoluteName())).ifPresent(aliasBinding -> bindingBuilder.alias(aliasBinding));\n        bindingBuilder.build(target).install();\n\n        for (CacheGroupBuilderProvider provider : ServiceLoader.load(this.providerClass, this.providerClass.getClassLoader())) {\n            for (Builder<?> builder : provider.getBuilders(support, containerName, cacheName)) {\n                builder.build(target).install();\n            }\n        }\n    }","commit_id":"11abbb23193872eb2e71b2ec90ee1642d72bf6b2","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public Builder<String> configure(OperationContext context, ModelNode model) throws OperationFailedException {\n        this.cluster = ModelNodes.asString(CLUSTER.resolveModelAttribute(context, model), this.name);\n        return this;\n    }","id":13730,"modified_method":"@Override\n    public Builder<String> configure(OperationContext context, ModelNode model) throws OperationFailedException {\n        this.cluster = ModelNodes.optionalString(CLUSTER.resolveModelAttribute(context, model)).orElse(this.name);\n        return this;\n    }","commit_id":"11abbb23193872eb2e71b2ec90ee1642d72bf6b2","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public void register(ManagementResourceRegistration parentRegistration) {\n        ManagementResourceRegistration registration = parentRegistration.registerSubModel(this);\n\n        ResourceDescriptor descriptor = new ResourceDescriptor(this.getResourceDescriptionResolver())\n                .addAttributes(Attribute.class)\n                .addCapabilities(Capability.class)\n                ;\n        ResourceServiceHandler handler = new ChannelServiceHandler();\n        new AddStepHandler(descriptor, handler) {\n            @SuppressWarnings(\"deprecation\")\n            @Override\n            protected void populateModel(OperationContext context, ModelNode operation, Resource resource) throws OperationFailedException {\n                // Handle recipe for version < 4.0 where stack was not required and the stack attribute would use default-stack for a default value\n                if (!operation.hasDefined(Attribute.STACK.getName())) {\n                    ModelNode parentModel = context.readResourceFromRoot(context.getCurrentAddress().getParent()).getModel();\n                    // If default-stack is not defined either, then recipe must be for version >= 4.0 and so this really is an invalid operation\n                    if (parentModel.hasDefined(JGroupsSubsystemResourceDefinition.Attribute.DEFAULT_STACK.getName())) {\n                        operation.get(Attribute.STACK.getName()).set(parentModel.get(JGroupsSubsystemResourceDefinition.Attribute.DEFAULT_STACK.getName()));\n                    }\n                }\n                super.populateModel(context, operation, resource);\n                // Register runtime resource children for channel protocols\n                if (ChannelResourceDefinition.this.allowRuntimeOnlyRegistration && (context.getRunningMode() == RunningMode.NORMAL)) {\n                    String name = context.getCurrentAddressValue();\n                    String stack = ModelNodes.asString(Attribute.STACK.resolveModelAttribute(context, resource.getModel()));\n\n                    PathAddress address = context.getCurrentAddress();\n                    PathAddress subsystemAddress = address.subAddress(0, address.size() - 1);\n                    // Lookup the name of the default stack if necessary\n                    PathAddress stackAddress = subsystemAddress.append(StackResourceDefinition.pathElement(stack));\n\n                    context.addStep(new ProtocolResourceRegistrationHandler(name, stackAddress), OperationContext.Stage.MODEL);\n                }\n            }\n        }.register(registration);\n        new RemoveStepHandler(descriptor, handler) {\n            @Override\n            protected void performRemove(OperationContext context, ModelNode operation, ModelNode model) throws OperationFailedException {\n                // Unregister runtime resource children for channel protocols\n                if (ChannelResourceDefinition.this.allowRuntimeOnlyRegistration && (context.getRunningMode() == RunningMode.NORMAL)) {\n                    Resource resource = context.readResource(PathAddress.EMPTY_ADDRESS);\n                    for (ResourceEntry entry: resource.getChildren(ProtocolResourceDefinition.WILDCARD_PATH.getKey())) {\n                        context.removeResource(PathAddress.pathAddress(entry.getPathElement()));\n                    }\n                    context.getResourceRegistrationForUpdate().unregisterOverrideModel(context.getCurrentAddressValue());\n                }\n                super.performRemove(context, operation, model);\n            }\n        }.register(registration);\n\n        if (this.allowRuntimeOnlyRegistration) {\n            new MetricHandler<>(new ChannelMetricExecutor(), ChannelMetric.class).register(registration);\n        }\n\n        new ForkResourceDefinition(this.allowRuntimeOnlyRegistration).register(registration);\n    }","id":13731,"modified_method":"@Override\n    public void register(ManagementResourceRegistration parentRegistration) {\n        ManagementResourceRegistration registration = parentRegistration.registerSubModel(this);\n\n        ResourceDescriptor descriptor = new ResourceDescriptor(this.getResourceDescriptionResolver())\n                .addAttributes(Attribute.class)\n                .addCapabilities(Capability.class)\n                ;\n        ResourceServiceHandler handler = new ChannelServiceHandler();\n        new AddStepHandler(descriptor, handler) {\n            @SuppressWarnings(\"deprecation\")\n            @Override\n            protected void populateModel(OperationContext context, ModelNode operation, Resource resource) throws OperationFailedException {\n                // Handle recipe for version < 4.0 where stack was not required and the stack attribute would use default-stack for a default value\n                if (!operation.hasDefined(Attribute.STACK.getName())) {\n                    ModelNode parentModel = context.readResourceFromRoot(context.getCurrentAddress().getParent()).getModel();\n                    // If default-stack is not defined either, then recipe must be for version >= 4.0 and so this really is an invalid operation\n                    if (parentModel.hasDefined(JGroupsSubsystemResourceDefinition.Attribute.DEFAULT_STACK.getName())) {\n                        operation.get(Attribute.STACK.getName()).set(parentModel.get(JGroupsSubsystemResourceDefinition.Attribute.DEFAULT_STACK.getName()));\n                    }\n                }\n                super.populateModel(context, operation, resource);\n                // Register runtime resource children for channel protocols\n                if (ChannelResourceDefinition.this.allowRuntimeOnlyRegistration && (context.getRunningMode() == RunningMode.NORMAL)) {\n                    String name = context.getCurrentAddressValue();\n                    String stack = Attribute.STACK.resolveModelAttribute(context, resource.getModel()).asString();\n\n                    PathAddress address = context.getCurrentAddress();\n                    PathAddress subsystemAddress = address.subAddress(0, address.size() - 1);\n                    PathAddress stackAddress = subsystemAddress.append(StackResourceDefinition.pathElement(stack));\n\n                    context.addStep(new ProtocolResourceRegistrationHandler(name, stackAddress), OperationContext.Stage.MODEL);\n                }\n            }\n        }.register(registration);\n        new RemoveStepHandler(descriptor, handler) {\n            @Override\n            protected void performRemove(OperationContext context, ModelNode operation, ModelNode model) throws OperationFailedException {\n                // Unregister runtime resource children for channel protocols\n                if (ChannelResourceDefinition.this.allowRuntimeOnlyRegistration && (context.getRunningMode() == RunningMode.NORMAL)) {\n                    Resource resource = context.readResource(PathAddress.EMPTY_ADDRESS);\n                    for (ResourceEntry entry: resource.getChildren(ProtocolResourceDefinition.WILDCARD_PATH.getKey())) {\n                        context.removeResource(PathAddress.pathAddress(entry.getPathElement()));\n                    }\n                    context.getResourceRegistrationForUpdate().unregisterOverrideModel(context.getCurrentAddressValue());\n                }\n                super.performRemove(context, operation, model);\n            }\n        }.register(registration);\n\n        if (this.allowRuntimeOnlyRegistration) {\n            new MetricHandler<>(new ChannelMetricExecutor(), ChannelMetric.class).register(registration);\n        }\n\n        new ForkResourceDefinition(this.allowRuntimeOnlyRegistration).register(registration);\n    }","commit_id":"11abbb23193872eb2e71b2ec90ee1642d72bf6b2","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public Builder<Configuration> configure(OperationContext context, ModelNode model) throws OperationFailedException {\n        Mode mode = ModelNodes.asEnum(ClusteredCacheResourceDefinition.Attribute.MODE.resolveModelAttribute(context, model), Mode.class);\n        ClusteringConfigurationBuilder builder = new ConfigurationBuilder().clustering().cacheMode(mode.apply(this.mode));\n\n        if (mode.isSynchronous()) {\n            builder.sync().replTimeout(REMOTE_TIMEOUT.resolveModelAttribute(context, model).asLong());\n        } else {\n            builder.async();\n        }\n        this.clustering = builder.create();\n\n        return super.configure(context, model);\n    }","id":13732,"modified_method":"@Override\n    public Builder<Configuration> configure(OperationContext context, ModelNode model) throws OperationFailedException {\n        Mode mode = ModelNodes.asEnum(MODE.resolveModelAttribute(context, model), Mode.class);\n        ClusteringConfigurationBuilder builder = new ConfigurationBuilder().clustering().cacheMode(mode.apply(this.mode));\n\n        if (mode.isSynchronous()) {\n            builder.sync().replTimeout(REMOTE_TIMEOUT.resolveModelAttribute(context, model).asLong());\n        } else {\n            builder.async();\n        }\n        this.clustering = builder.create();\n\n        return super.configure(context, model);\n    }","commit_id":"11abbb23193872eb2e71b2ec90ee1642d72bf6b2","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public Builder<SingletonElectionPolicy> configure(OperationContext context, ModelNode model) throws OperationFailedException {\n        this.preferences.clear();\n        this.dependencies.clear();\n        for (String bindingName : ModelNodes.asStringList(SOCKET_BINDING_PREFERENCES.resolveModelAttribute(context, model))) {\n            InjectedValueDependency<OutboundSocketBinding> binding = new InjectedValueDependency<>(CommonUnaryRequirement.OUTBOUND_SOCKET_BINDING.getServiceName(context, bindingName), OutboundSocketBinding.class);\n            this.preferences.add(new OutboundSocketBindingPreference(binding));\n            this.dependencies.add(binding);\n        }\n        for (String nodeName : ModelNodes.asStringList(NAME_PREFERENCES.resolveModelAttribute(context, model))) {\n            this.preferences.add(new NamePreference(nodeName));\n        }\n        return this;\n    }","id":13733,"modified_method":"@Override\n    public Builder<SingletonElectionPolicy> configure(OperationContext context, ModelNode model) throws OperationFailedException {\n        this.preferences.clear();\n        this.dependencies.clear();\n        ModelNodes.optionalList(SOCKET_BINDING_PREFERENCES.resolveModelAttribute(context, model)).ifPresent(bindings -> {\n            bindings.stream().map(ModelNode::asString).forEach(bindingName -> {\n                InjectedValueDependency<OutboundSocketBinding> binding = new InjectedValueDependency<>(CommonUnaryRequirement.OUTBOUND_SOCKET_BINDING.getServiceName(context, bindingName), OutboundSocketBinding.class);\n                this.preferences.add(new OutboundSocketBindingPreference(binding));\n                this.dependencies.add(binding);\n            });\n        });\n        ModelNodes.optionalList(NAME_PREFERENCES.resolveModelAttribute(context, model)).ifPresent(names -> {\n            names.stream().map(ModelNode::asString).forEach(name -> this.preferences.add(new NamePreference(name)));\n        });\n        return this;\n    }","commit_id":"11abbb23193872eb2e71b2ec90ee1642d72bf6b2","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    StoreConfigurationBuilder<?, ?> createStore(OperationContext context, ModelNode model) throws OperationFailedException {\n        String relativePath = ModelNodes.asString(RELATIVE_PATH.resolveModelAttribute(context, model));\n        if (relativePath != null) {\n            this.relativePath = relativePath;\n        }\n        this.relativeTo = RELATIVE_TO.resolveModelAttribute(context, model).asString();\n        this.builder = new ConfigurationBuilder().persistence().addSingleFileStore();\n        return this.builder;\n    }","id":13734,"modified_method":"@Override\n    StoreConfigurationBuilder<?, ?> createStore(OperationContext context, ModelNode model) throws OperationFailedException {\n        this.relativePath = ModelNodes.optionalString(RELATIVE_PATH.resolveModelAttribute(context, model)).orElse(InfinispanExtension.SUBSYSTEM_NAME + File.separatorChar + this.containerName);\n        this.relativeTo = RELATIVE_TO.resolveModelAttribute(context, model).asString();\n        this.builder = new ConfigurationBuilder().persistence().addSingleFileStore();\n        return this.builder;\n    }","commit_id":"11abbb23193872eb2e71b2ec90ee1642d72bf6b2","url":"https://github.com/wildfly/wildfly"},{"original_method":"FileStoreBuilder(PathAddress cacheAddress) {\n        super(cacheAddress);\n        this.relativePath = InfinispanExtension.SUBSYSTEM_NAME + File.separatorChar + cacheAddress.getParent().getLastElement().getValue();\n    }","id":13735,"modified_method":"FileStoreBuilder(PathAddress cacheAddress) {\n        super(cacheAddress);\n        this.containerName = cacheAddress.getParent().getLastElement().getValue();\n    }","commit_id":"11abbb23193872eb2e71b2ec90ee1642d72bf6b2","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    B createStore(OperationContext context, ModelNode model) throws OperationFailedException {\n        String dataSource = DATA_SOURCE.resolveModelAttribute(context, model).asString();\n        this.dataSourceDepencency = new InjectedValueDependency<>(CommonUnaryRequirement.DATA_SOURCE.getServiceName(context, dataSource), DataSource.class);\n        B storeBuilder = new ConfigurationBuilder().persistence().addStore(this.builderClass).dialect(ModelNodes.asEnum(DIALECT.resolveModelAttribute(context, model), DatabaseType.class));\n        storeBuilder.connectionFactory(DataSourceConnectionFactoryConfigurationBuilder.class).setDataSourceDependency(this.dataSourceDepencency);\n        return storeBuilder;\n    }","id":13736,"modified_method":"@Override\n    B createStore(OperationContext context, ModelNode model) throws OperationFailedException {\n        String dataSource = DATA_SOURCE.resolveModelAttribute(context, model).asString();\n        this.dataSourceDepencency = new InjectedValueDependency<>(CommonUnaryRequirement.DATA_SOURCE.getServiceName(context, dataSource), DataSource.class);\n        B storeBuilder = new ConfigurationBuilder().persistence().addStore(this.builderClass);\n        ModelNodes.optionalEnum(DIALECT.resolveModelAttribute(context, model), DatabaseType.class).ifPresent(dialect -> storeBuilder.dialect(dialect));\n        storeBuilder.connectionFactory(DataSourceConnectionFactoryConfigurationBuilder.class).setDataSourceDependency(this.dataSourceDepencency);\n        return storeBuilder;\n    }","commit_id":"11abbb23193872eb2e71b2ec90ee1642d72bf6b2","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public void removeServices(OperationContext context, ModelNode model) throws OperationFailedException {\n        PathAddress address = context.getCurrentAddress();\n        String defaultChannel = ModelNodes.asString(DEFAULT_CHANNEL.resolveModelAttribute(context, model));\n\n        if (defaultChannel != null) {\n            for (GroupAliasBuilderProvider provider : ServiceLoader.load(GroupAliasBuilderProvider.class, GroupAliasBuilderProvider.class.getClassLoader())) {\n                for (Builder<?> builder : provider.getBuilders(context.getCapabilityServiceSupport(), null, defaultChannel)) {\n                    context.removeService(builder.getServiceName());\n                }\n            }\n\n            if (!defaultChannel.equals(JndiNameFactory.DEFAULT_LOCAL_NAME)) {\n                context.removeService(JGroupsBindingFactory.createChannelFactoryBinding(JndiNameFactory.DEFAULT_LOCAL_NAME).getBinderServiceName());\n                context.removeService(JGroupsBindingFactory.createChannelBinding(JndiNameFactory.DEFAULT_LOCAL_NAME).getBinderServiceName());\n            }\n\n            CAPABILITIES.values().forEach(capability -> context.removeService(capability.getServiceName(address)));\n        }\n\n        context.removeService(ProtocolDefaultsBuilder.SERVICE_NAME);\n    }","id":13737,"modified_method":"@Override\n    public void removeServices(OperationContext context, ModelNode model) throws OperationFailedException {\n        PathAddress address = context.getCurrentAddress();\n        ModelNodes.optionalString(DEFAULT_CHANNEL.resolveModelAttribute(context, model)).ifPresent(defaultChannel -> {\n            for (GroupAliasBuilderProvider provider : ServiceLoader.load(GroupAliasBuilderProvider.class, GroupAliasBuilderProvider.class.getClassLoader())) {\n                for (Builder<?> builder : provider.getBuilders(context.getCapabilityServiceSupport(), null, defaultChannel)) {\n                    context.removeService(builder.getServiceName());\n                }\n            }\n\n            if (!defaultChannel.equals(JndiNameFactory.DEFAULT_LOCAL_NAME)) {\n                context.removeService(JGroupsBindingFactory.createChannelFactoryBinding(JndiNameFactory.DEFAULT_LOCAL_NAME).getBinderServiceName());\n                context.removeService(JGroupsBindingFactory.createChannelBinding(JndiNameFactory.DEFAULT_LOCAL_NAME).getBinderServiceName());\n            }\n\n            CAPABILITIES.values().forEach(capability -> context.removeService(capability.getServiceName(address)));\n        });\n\n        context.removeService(ProtocolDefaultsBuilder.SERVICE_NAME);\n    }","commit_id":"11abbb23193872eb2e71b2ec90ee1642d72bf6b2","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public void installServices(OperationContext context, ModelNode model) throws OperationFailedException {\n        ROOT_LOGGER.activatingSubsystem();\n\n        ServiceTarget target = context.getServiceTarget();\n        PathAddress address = context.getCurrentAddress();\n\n        new ProtocolDefaultsBuilder().build(target).install();\n\n        String defaultChannel = ModelNodes.asString(DEFAULT_CHANNEL.resolveModelAttribute(context, model));\n\n        if (defaultChannel != null) {\n            CAPABILITIES.entrySet().forEach(entry -> new AliasServiceBuilder<>(entry.getValue().getServiceName(address), entry.getKey().getServiceName(context, defaultChannel), entry.getKey().getType()).build(target).install());\n\n            if (!defaultChannel.equals(JndiNameFactory.DEFAULT_LOCAL_NAME)) {\n                new BinderServiceBuilder<>(JGroupsBindingFactory.createChannelBinding(JndiNameFactory.DEFAULT_LOCAL_NAME), JGroupsRequirement.CHANNEL.getServiceName(context, defaultChannel), JGroupsRequirement.CHANNEL.getType()).build(target).install();\n                new BinderServiceBuilder<>(JGroupsBindingFactory.createChannelFactoryBinding(JndiNameFactory.DEFAULT_LOCAL_NAME), JGroupsRequirement.CHANNEL_FACTORY.getServiceName(context, defaultChannel), JGroupsRequirement.CHANNEL_FACTORY.getType()).build(target).install();\n\n                for (GroupAliasBuilderProvider provider : ServiceLoader.load(GroupAliasBuilderProvider.class, GroupAliasBuilderProvider.class.getClassLoader())) {\n                    for (Builder<?> builder : provider.getBuilders(context.getCapabilityServiceSupport(), null, defaultChannel)) {\n                        builder.build(target).install();\n                    }\n                }\n            }\n        }\n    }","id":13738,"modified_method":"@Override\n    public void installServices(OperationContext context, ModelNode model) throws OperationFailedException {\n        ROOT_LOGGER.activatingSubsystem();\n\n        ServiceTarget target = context.getServiceTarget();\n        PathAddress address = context.getCurrentAddress();\n\n        new ProtocolDefaultsBuilder().build(target).install();\n\n        ModelNodes.optionalString(DEFAULT_CHANNEL.resolveModelAttribute(context, model)).ifPresent(defaultChannel -> {\n            CAPABILITIES.entrySet().forEach(entry -> new AliasServiceBuilder<>(entry.getValue().getServiceName(address), entry.getKey().getServiceName(context, defaultChannel), entry.getKey().getType()).build(target).install());\n\n            if (!defaultChannel.equals(JndiNameFactory.DEFAULT_LOCAL_NAME)) {\n                new BinderServiceBuilder<>(JGroupsBindingFactory.createChannelBinding(JndiNameFactory.DEFAULT_LOCAL_NAME), JGroupsRequirement.CHANNEL.getServiceName(context, defaultChannel), JGroupsRequirement.CHANNEL.getType()).build(target).install();\n                new BinderServiceBuilder<>(JGroupsBindingFactory.createChannelFactoryBinding(JndiNameFactory.DEFAULT_LOCAL_NAME), JGroupsRequirement.CHANNEL_FACTORY.getServiceName(context, defaultChannel), JGroupsRequirement.CHANNEL_FACTORY.getType()).build(target).install();\n\n                for (GroupAliasBuilderProvider provider : ServiceLoader.load(GroupAliasBuilderProvider.class, GroupAliasBuilderProvider.class.getClassLoader())) {\n                    for (Builder<?> builder : provider.getBuilders(context.getCapabilityServiceSupport(), null, defaultChannel)) {\n                        builder.build(target).install();\n                    }\n                }\n            }\n        });\n    }","commit_id":"11abbb23193872eb2e71b2ec90ee1642d72bf6b2","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public JGroupsTransportBuilder configure(OperationContext context, ModelNode model) throws OperationFailedException {\n        this.lockTimeout = LOCK_TIMEOUT.resolveModelAttribute(context, model).asLong();\n        this.channel = ModelNodes.asString(CHANNEL.resolveModelAttribute(context, model));\n        this.factory = new InjectedValueDependency<>(JGroupsRequirement.CHANNEL_FACTORY.getServiceName(context, this.channel), ChannelFactory.class);\n        return this;\n    }","id":13739,"modified_method":"@Override\n    public JGroupsTransportBuilder configure(OperationContext context, ModelNode model) throws OperationFailedException {\n        this.lockTimeout = LOCK_TIMEOUT.resolveModelAttribute(context, model).asLong();\n        this.channel = ModelNodes.optionalString(CHANNEL.resolveModelAttribute(context, model)).orElse(null);\n        this.factory = new InjectedValueDependency<>(JGroupsRequirement.CHANNEL_FACTORY.getServiceName(context, this.channel), ChannelFactory.class);\n        return this;\n    }","commit_id":"11abbb23193872eb2e71b2ec90ee1642d72bf6b2","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public void installServices(OperationContext context, ModelNode model) throws OperationFailedException {\n        PathAddress containerAddress = context.getCurrentAddress().getParent();\n        String name = containerAddress.getLastElement().getValue();\n        String channel = ModelNodes.asString(CHANNEL.resolveModelAttribute(context, model));\n        ServiceTarget target = context.getServiceTarget();\n\n        new JGroupsTransportBuilder(containerAddress).configure(context, model).build(target).setInitialMode(ServiceController.Mode.PASSIVE).install();\n\n        new SiteBuilder(containerAddress).configure(context, model).build(target).setInitialMode(ServiceController.Mode.PASSIVE).install();\n\n        for (GroupAliasBuilderProvider provider : ServiceLoader.load(GroupAliasBuilderProvider.class, GroupAliasBuilderProvider.class.getClassLoader())) {\n            for (Builder<?> builder : provider.getBuilders(context.getCapabilityServiceSupport(), name, channel)) {\n                builder.build(target).setInitialMode(ServiceController.Mode.ON_DEMAND).install();\n            }\n        }\n    }","id":13740,"modified_method":"@Override\n    public void installServices(OperationContext context, ModelNode model) throws OperationFailedException {\n        PathAddress containerAddress = context.getCurrentAddress().getParent();\n        String name = containerAddress.getLastElement().getValue();\n        String channel = ModelNodes.optionalString(CHANNEL.resolveModelAttribute(context, model)).orElse(null);\n        ServiceTarget target = context.getServiceTarget();\n\n        new JGroupsTransportBuilder(containerAddress).configure(context, model).build(target).setInitialMode(ServiceController.Mode.PASSIVE).install();\n\n        new SiteBuilder(containerAddress).configure(context, model).build(target).setInitialMode(ServiceController.Mode.PASSIVE).install();\n\n        for (GroupAliasBuilderProvider provider : ServiceLoader.load(GroupAliasBuilderProvider.class, GroupAliasBuilderProvider.class.getClassLoader())) {\n            for (Builder<?> builder : provider.getBuilders(context.getCapabilityServiceSupport(), name, channel)) {\n                builder.build(target).setInitialMode(ServiceController.Mode.ON_DEMAND).install();\n            }\n        }\n    }","commit_id":"11abbb23193872eb2e71b2ec90ee1642d72bf6b2","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public void removeServices(OperationContext context, ModelNode model) throws OperationFailedException {\n        PathAddress containerAddress = context.getCurrentAddress().getParent();\n        String name = containerAddress.getLastElement().getValue();\n        String channel = ModelNodes.asString(CHANNEL.resolveModelAttribute(context, model));\n\n        for (GroupAliasBuilderProvider provider : ServiceLoader.load(GroupAliasBuilderProvider.class, GroupAliasBuilderProvider.class.getClassLoader())) {\n            for (Builder<?> builder : provider.getBuilders(context.getCapabilityServiceSupport(), name, channel)) {\n                context.removeService(builder.getServiceName());\n            }\n        }\n\n        EnumSet.allOf(CacheContainerComponent.class).stream().map(component -> component.getServiceName(containerAddress)).forEach(serviceName -> context.removeService(serviceName));\n    }","id":13741,"modified_method":"@Override\n    public void removeServices(OperationContext context, ModelNode model) throws OperationFailedException {\n        PathAddress containerAddress = context.getCurrentAddress().getParent();\n        String name = containerAddress.getLastElement().getValue();\n        String channel = ModelNodes.optionalString(CHANNEL.resolveModelAttribute(context, model)).orElse(null);\n\n        for (GroupAliasBuilderProvider provider : ServiceLoader.load(GroupAliasBuilderProvider.class, GroupAliasBuilderProvider.class.getClassLoader())) {\n            for (Builder<?> builder : provider.getBuilders(context.getCapabilityServiceSupport(), name, channel)) {\n                context.removeService(builder.getServiceName());\n            }\n        }\n\n        EnumSet.allOf(CacheContainerComponent.class).stream().map(component -> component.getServiceName(containerAddress)).forEach(serviceName -> context.removeService(serviceName));\n    }","commit_id":"11abbb23193872eb2e71b2ec90ee1642d72bf6b2","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Returns the optional module identifier value of the specified {@link ModelNode}.\n     * @param value the model node\n     * @return an optional value\n     */\n    public static Optional<ModuleIdentifier> optionalModuleIdentifier(ModelNode value) {\n        return value.isDefined() ? Optional.of(ModuleIdentifier.fromString(value.asString())) : Optional.empty();\n    }","id":13742,"modified_method":"/**\n     * Returns the optional module identifier value of the specified {@link ModelNode}.\n     * @param value the model node\n     * @return an optional value\n     */\n    public static Optional<ModuleIdentifier> optionalModuleIdentifier(ModelNode value) {\n        return value.isDefined() ? Optional.of(asModuleIdentifier(value)) : Optional.empty();\n    }","commit_id":"11abbb23193872eb2e71b2ec90ee1642d72bf6b2","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Returns the value of the node as a module identifier, or null if the node is undefined.\n     * @param value a model node\n     * @return the value of the node as a module identifier, or null if the node is undefined.\n     */\n    public static ModuleIdentifier asModuleIdentifier(ModelNode value) {\n        return optionalModuleIdentifier(value).orElse(null);\n    }","id":13743,"modified_method":"/**\n     * Returns the value of the node as a module identifier.\n     * @param value a model node\n     * @return the value of the node as a module identifier.\n     */\n    public static ModuleIdentifier asModuleIdentifier(ModelNode value) {\n        return ModuleIdentifier.fromString(value.asString());\n    }","commit_id":"11abbb23193872eb2e71b2ec90ee1642d72bf6b2","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Returns the optional enum value of the specified {@link ModelNode}.\n     * @param value the model node\n     * @return an optional value\n     */\n    public static <E extends Enum<E>> Optional<E> optionalEnum(ModelNode value, Class<E> targetClass) {\n        return value.isDefined() ? Optional.of(Enum.valueOf(targetClass, value.asString())) : Optional.empty();\n    }","id":13744,"modified_method":"/**\n     * Returns the optional enum value of the specified {@link ModelNode}.\n     * @param value the model node\n     * @return an optional value\n     */\n    public static <E extends Enum<E>> Optional<E> optionalEnum(ModelNode value, Class<E> targetClass) {\n        return value.isDefined() ? Optional.of(asEnum(value, targetClass)) : Optional.empty();\n    }","commit_id":"11abbb23193872eb2e71b2ec90ee1642d72bf6b2","url":"https://github.com/wildfly/wildfly"},{"original_method":"/**\n     * Returns the value of the node as an Enum value, or null if the node is undefined.\n     * @param value a model node\n     * @return the value of the node as an Enum, or null if the node is undefined.\n     */\n    public static <E extends Enum<E>> E asEnum(ModelNode value, Class<E> targetClass) {\n        return optionalEnum(value, targetClass).orElse(null);\n    }","id":13745,"modified_method":"/**\n     * Returns the value of the node as an Enum value.\n     * @param value a model node\n     * @return the value of the node as an Enum.\n     */\n    public static <E extends Enum<E>> E asEnum(ModelNode value, Class<E> targetClass) {\n        return Enum.valueOf(targetClass, value.asString());\n    }","commit_id":"11abbb23193872eb2e71b2ec90ee1642d72bf6b2","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public Builder<SingletonPolicy> configure(OperationContext context, ModelNode model) throws OperationFailedException {\n        this.containerName = CACHE_CONTAINER.resolveModelAttribute(context, model).asString();\n        this.cacheName = ModelNodes.asString(CACHE.resolveModelAttribute(context, model));\n        this.quorum = QUORUM.resolveModelAttribute(context, model).asInt();\n        return this;\n    }","id":13746,"modified_method":"@Override\n    public Builder<SingletonPolicy> configure(OperationContext context, ModelNode model) throws OperationFailedException {\n        this.containerName = CACHE_CONTAINER.resolveModelAttribute(context, model).asString();\n        this.cacheName = ModelNodes.optionalString(CACHE.getDefinition().resolveModelAttribute(context, model)).orElse(null);\n        this.quorum = QUORUM.resolveModelAttribute(context, model).asInt();\n        return this;\n    }","commit_id":"11abbb23193872eb2e71b2ec90ee1642d72bf6b2","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public Builder<SiteConfiguration> configure(OperationContext context, ModelNode model) throws OperationFailedException {\n        String channel = ModelNodes.asString(CHANNEL.resolveModelAttribute(context, model));\n        this.factory = new InjectedValueDependency<>(JGroupsRequirement.CHANNEL_SOURCE.getServiceName(context, channel), ChannelFactory.class);\n        return this;\n    }","id":13747,"modified_method":"@Override\n    public Builder<SiteConfiguration> configure(OperationContext context, ModelNode model) throws OperationFailedException {\n        String channel = ModelNodes.optionalString(CHANNEL.resolveModelAttribute(context, model)).orElse(null);\n        this.factory = new InjectedValueDependency<>(JGroupsRequirement.CHANNEL_SOURCE.getServiceName(context, channel), ChannelFactory.class);\n        return this;\n    }","commit_id":"11abbb23193872eb2e71b2ec90ee1642d72bf6b2","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public Builder<PersistenceConfiguration> configure(OperationContext context, ModelNode model) throws OperationFailedException {\n        this.storeBuilder = this.createStore(context, model);\n        this.storeBuilder.persistence().passivation(PASSIVATION.resolveModelAttribute(context, model).asBoolean());\n        this.storeBuilder.fetchPersistentState(FETCH_STATE.resolveModelAttribute(context, model).asBoolean())\n                .preload(PRELOAD.resolveModelAttribute(context, model).asBoolean())\n                .purgeOnStartup(PURGE.resolveModelAttribute(context, model).asBoolean())\n                .shared(SHARED.resolveModelAttribute(context, model).asBoolean())\n                .singleton().enabled(SINGLETON.resolveModelAttribute(context, model).asBoolean())\n                .withProperties(ModelNodes.asProperties(PROPERTIES.resolveModelAttribute(context, model)))\n        ;\n        return this;\n    }","id":13748,"modified_method":"@Override\n    public Builder<PersistenceConfiguration> configure(OperationContext context, ModelNode model) throws OperationFailedException {\n        this.storeBuilder = this.createStore(context, model);\n        this.storeBuilder.persistence().passivation(PASSIVATION.resolveModelAttribute(context, model).asBoolean());\n        Properties properties = new Properties();\n        ModelNodes.optionalPropertyList(PROPERTIES.resolveModelAttribute(context, model)).ifPresent(list -> list.forEach(property -> properties.setProperty(property.getName(), property.getValue().asString())));\n        this.storeBuilder.fetchPersistentState(FETCH_STATE.resolveModelAttribute(context, model).asBoolean())\n                .preload(PRELOAD.resolveModelAttribute(context, model).asBoolean())\n                .purgeOnStartup(PURGE.resolveModelAttribute(context, model).asBoolean())\n                .shared(SHARED.resolveModelAttribute(context, model).asBoolean())\n                .singleton().enabled(SINGLETON.resolveModelAttribute(context, model).asBoolean())\n                .withProperties(properties)\n        ;\n        return this;\n    }","commit_id":"11abbb23193872eb2e71b2ec90ee1642d72bf6b2","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public Builder<TransportConfiguration> configure(OperationContext context, ModelNode transport) throws OperationFailedException {\n        final String machine = ModelNodes.asString(MACHINE.resolveModelAttribute(context, transport));\n        final String rack = ModelNodes.asString(RACK.resolveModelAttribute(context, transport));\n        final String site = ModelNodes.asString(SITE.resolveModelAttribute(context, transport));\n        if ((site != null) || (rack != null) || (machine != null)) {\n            this.topology = new Topology() {\n                @Override\n                public String getMachine() {\n                    return machine;\n                }\n\n                @Override\n                public String getRack() {\n                    return rack;\n                }\n\n                @Override\n                public String getSite() {\n                    return site;\n                }\n            };\n        }\n\n        String diagnosticsBinding = ModelNodes.asString(DIAGNOSTICS_SOCKET_BINDING.resolveModelAttribute(context, transport));\n        if (diagnosticsBinding != null) {\n            this.diagnosticsSocketBinding = new InjectedValueDependency<>(CommonUnaryRequirement.SOCKET_BINDING.getServiceName(context, diagnosticsBinding), SocketBinding.class);\n        }\n\n        for (ThreadPoolResourceDefinition pool : EnumSet.allOf(ThreadPoolResourceDefinition.class)) {\n            String prefix = pool.getPrefix();\n            ModelNode model = transport.get(pool.getPathElement().getKeyValuePair());\n\n            this.getProperties().put(prefix + \".min_threads\", pool.getMinThreads().resolveModelAttribute(context, model).asString());\n            this.getProperties().put(prefix + \".max_threads\", pool.getMaxThreads().resolveModelAttribute(context, model).asString());\n\n            int queueSize = pool.getQueueLength().resolveModelAttribute(context, model).asInt();\n            if (pool != ThreadPoolResourceDefinition.TIMER) {\n                this.getProperties().put(prefix + \".queue_enabled\", String.valueOf(queueSize > 0));\n            }\n            this.getProperties().put(prefix + \".queue_max_size\", String.valueOf(queueSize));\n\n            // keepalive_time in milliseconds\n            this.getProperties().put(prefix + \".keep_alive_time\", pool.getKeepAliveTime().resolveModelAttribute(context, model).asString());\n            this.getProperties().put(prefix + \".rejection_policy\", \"abort\");\n        }\n\n        return super.configure(context, transport);\n    }","id":13749,"modified_method":"@Override\n    public Builder<TransportConfiguration> configure(OperationContext context, ModelNode transport) throws OperationFailedException {\n        Optional<String> machine = ModelNodes.optionalString(MACHINE.resolveModelAttribute(context, transport));\n        Optional<String> rack = ModelNodes.optionalString(RACK.resolveModelAttribute(context, transport));\n        Optional<String> site = ModelNodes.optionalString(SITE.resolveModelAttribute(context, transport));\n        if (site.isPresent() || rack.isPresent() || machine.isPresent()) {\n            this.topology = new Topology() {\n                @Override\n                public String getMachine() {\n                    return machine.orElse(null);\n                }\n\n                @Override\n                public String getRack() {\n                    return rack.orElse(null);\n                }\n\n                @Override\n                public String getSite() {\n                    return site.orElse(null);\n                }\n            };\n        }\n\n        this.diagnosticsSocketBinding = ModelNodes.optionalString(DIAGNOSTICS_SOCKET_BINDING.resolveModelAttribute(context, transport)).map(diagnosticsBinding -> new InjectedValueDependency<>(CommonUnaryRequirement.SOCKET_BINDING.getServiceName(context, diagnosticsBinding), SocketBinding.class)).orElse(null);\n\n        for (ThreadPoolResourceDefinition pool : EnumSet.allOf(ThreadPoolResourceDefinition.class)) {\n            String prefix = pool.getPrefix();\n            ModelNode model = transport.get(pool.getPathElement().getKeyValuePair());\n\n            this.getProperties().put(prefix + \".min_threads\", pool.getMinThreads().resolveModelAttribute(context, model).asString());\n            this.getProperties().put(prefix + \".max_threads\", pool.getMaxThreads().resolveModelAttribute(context, model).asString());\n\n            int queueSize = pool.getQueueLength().resolveModelAttribute(context, model).asInt();\n            if (pool != ThreadPoolResourceDefinition.TIMER) {\n                this.getProperties().put(prefix + \".queue_enabled\", String.valueOf(queueSize > 0));\n            }\n            this.getProperties().put(prefix + \".queue_max_size\", String.valueOf(queueSize));\n\n            // keepalive_time in milliseconds\n            this.getProperties().put(prefix + \".keep_alive_time\", pool.getKeepAliveTime().resolveModelAttribute(context, model).asString());\n            this.getProperties().put(prefix + \".rejection_policy\", \"abort\");\n        }\n\n        return super.configure(context, transport);\n    }","commit_id":"11abbb23193872eb2e71b2ec90ee1642d72bf6b2","url":"https://github.com/wildfly/wildfly"},{"original_method":"public void flush() {\n            //return early\n            if (this.doc == null)\n                return;            \n            final int wordsCount = words[0].size() + words[1].size();\n            if (wordsCount == 0)\n                return;\n            \n            final ProgressIndicator progress = new ProgressIndicator(wordsCount, 100);\n            final short collectionId = this.doc.getCollection().getId();\n            OccurrenceList occurences;\n            int termCount;            \n            long previousGID;\n            long delta;\n            //TOUNDERSTAND -pb\n            int lenOffset;            \n            int freq;\n            Map.Entry entry;\n            String token;           \n            int count = 0;\n            for (byte currentSection = 0; currentSection <= ATTRIBUTE_SECTION; currentSection++) {\n                for (Iterator i = words[currentSection].entrySet().iterator(); i.hasNext(); count++) {\n                    entry = (Map.Entry) i.next();\n                    token = (String) entry.getKey();\n                    occurences = (OccurrenceList) entry.getValue();\n                    termCount = occurences.getTermCount();\n                    //Don't forget this one\n                    occurences.sort();                    \n                    os.clear();\n                    os.writeInt(this.doc.getDocId());\n                    switch (currentSection) {\n                        case TEXT_SECTION :\n                            os.writeByte(TEXT_SECTION);\n                            break;\n                        case ATTRIBUTE_SECTION :\n                            os.writeByte(ATTRIBUTE_SECTION);\n                            break;\n                        default :\n                            throw new IllegalArgumentException(\"Invalid inverted index\");\n                    }                    \n                    os.writeInt(termCount);\n                    lenOffset = os.position();\n                    os.writeFixedInt(0);\n                    previousGID = 0;\n                    for (int j = 0; j < occurences.getSize(); ) {\n                        delta = occurences.nodes[j] - previousGID;\n                        os.writeLong(delta);                                        \n                        freq = occurences.getOccurrences(j);\n                        os.writeInt(freq);\n                        for (int k = 0; k < freq; k++) {\n                            os.writeInt(occurences.offsets[j + k]);\n                        }  \n                        previousGID = occurences.nodes[j];        \n                        j += freq;                        \n                    }\n                    os.writeFixedInt(lenOffset, os.position() - lenOffset - 4);                    \n                    flushWord(collectionId, token, os.data());\n                    progress.setValue(count);\n                    if (progress.changed()) {\n                        setChanged();\n                        notifyObservers(progress);\n                    }\n                }\n                //TOUNDERSTAND : is this a flush ? \n                //If so, the ProgressIndicator should be reinitialized -pb\n                if (wordsCount > 100) {\n                    progress.finish();\n                    setChanged();\n                    notifyObservers(progress);\n                }\n                words[currentSection].clear();\n            }\n        }","id":13750,"modified_method":"public void flush() {\n            //return early\n            if (this.doc == null)\n                return;            \n            final int wordsCount = words[0].size() + words[1].size();\n            if (wordsCount == 0)\n                return;\n            final ProgressIndicator progress = new ProgressIndicator(wordsCount, 100);\n            final short collectionId = this.doc.getCollection().getId();\n            int count = 0;\n            for (byte currentSection = 0; currentSection <= ATTRIBUTE_SECTION; currentSection++) {\n                for (Iterator i = words[currentSection].entrySet().iterator(); i.hasNext(); count++) {\n                    Map.Entry entry = (Map.Entry) i.next();\n                    String token = (String) entry.getKey();\n                    OccurrenceList occurences = (OccurrenceList) entry.getValue();\n                    int termCount = occurences.getTermCount();\n                    //Don't forget this one\n                    occurences.sort();                    \n                    os.clear();\n                    os.writeInt(this.doc.getDocId());\n                    switch (currentSection) {\n                        case TEXT_SECTION :\n                            os.writeByte(TEXT_SECTION);\n                            break;\n                        case ATTRIBUTE_SECTION :\n                            os.writeByte(ATTRIBUTE_SECTION);\n                            break;\n                        default :\n                            throw new IllegalArgumentException(\"Invalid inverted index\");\n                    }                    \n                    os.writeInt(termCount);\n                    //TOUNDERSTAND -pb             \n                    int lenOffset = os.position();\n                    os.writeFixedInt(0);\n                    long previousGID = 0;\n                    for (int j = 0; j < occurences.getSize(); ) {\n                        long delta = occurences.nodes[j] - previousGID;\n                        os.writeLong(delta);                                        \n                        int freq = occurences.getOccurrences(j);\n                        os.writeInt(freq);\n                        for (int k = 0; k < freq; k++) {\n                            os.writeInt(occurences.offsets[j + k]);\n                        }  \n                        previousGID = occurences.nodes[j];        \n                        j += freq;                        \n                    }\n                    os.writeFixedInt(lenOffset, os.position() - lenOffset - 4);                    \n                    flushWord(collectionId, token, os.data());\n                    progress.setValue(count);\n                    if (progress.changed()) {\n                        setChanged();\n                        notifyObservers(progress);\n                    }\n                }\n                //TOUNDERSTAND : is this a flush ? \n                //If so, the ProgressIndicator should be reinitialized -pb\n                if (wordsCount > 100) {\n                    progress.finish();\n                    setChanged();\n                    notifyObservers(progress);\n                }\n                words[currentSection].clear();\n            }\n        }","commit_id":"9cd56baf00e1354157c2c96b9270bbc2a2e3c1ca","url":"https://github.com/eXist-db/exist"},{"original_method":"/** Get all nodes whose content exactly matches the give expression.\n\t * @param context\n\t * @param docs\n\t * @param contextSet\n\t * @param expr\n\t * @return\n\t * @throws TerminatedException\n\t */\n\tpublic NodeSet getNodesExact(XQueryContext context, DocumentSet docs, NodeSet contextSet, String expr) \n\t    throws TerminatedException {\n        //Return early\n\t\tif (expr == null)\n\t\t\treturn null;\n        //TODO : filter the expression *before* -pb\n\t\tif (stoplist.contains(expr))\n\t\t\treturn null;\n        \n        //TODO : case conversion should be handled by the tokenizer -pb\n        expr = expr.toLowerCase();\n        //TODO : use an indexSpec member in order to get rid of this or do the job *before* -pb\n        String token;        \n        if (stem)\n            token = stemmer.stem(expr);\n        else\n            token = expr;\n        \n        NodeSet result = new ExtArrayNodeSet(docs.getLength(), 250);\n        Value ref;\n        int storedDocId;\n        int storedSection;\n        int freq;\n        int gidsCount;\n        long storedGID;\n        long previousGID; \n        long delta;  \n        //TOUNDERSTAND -pb\n        int size;        \n        VariableByteInput is;\n        Collection collection;\n        short collectionId;        \n\t\tDocumentImpl storedDocument;\n        NodeProxy storedNode;\n        NodeProxy parent;\n\t\tint sizeHint;\n        Match match;\n\t\tfor (Iterator iter = docs.getCollectionIterator(); iter.hasNext();) {\n            //Compute a key for the node\n\t\t\tcollection = (Collection) iter.next();\n\t\t\tcollectionId = collection.getId();\n\t\t\tref = new WordRef(collectionId, token);\n\t\t\tLock lock = dbTokens.getLock();\n\t\t\ttry {\n\t\t\t\tlock.acquire();\n\t\t\t\tis = dbTokens.getAsStream(ref);\n                //Does the token already has data in the index ?\n\t\t\t\tif (is == null)\n\t\t\t\t\tcontinue;\t\t\t\t\n\t\t\t\twhile (is.available() > 0) {\n                    storedDocId = is.readInt();\n                    storedSection = is.readByte();\n                    gidsCount = is.readInt();\n                    size = is.readFixedInt();\n                    storedDocument = docs.getDoc(storedDocId);\n                    //Exit if the document is not concerned\n                    if (storedDocument == null) {\n                        is.skipBytes(size);\n                        continue;                        \n                    }                    \n\t\t\t\t\tif (contextSet != null) {\n                        //Exit if the document is not concerned\n                        if (!contextSet.containsDoc(storedDocument)) {                    \n                            is.skipBytes(size);\n                            continue;\n                        }                        \n\t\t\t\t\t}\n                    //Process the nodes\n                    previousGID = 0;\n\t\t\t\t\tfor (int j = 0; j < gidsCount; j++) {\n                        delta = is.readLong();\n                        storedGID = previousGID + delta;                        \n\t\t\t\t\t\tfreq = is.readInt();\n                        switch (storedSection) {\n                            case ATTRIBUTE_SECTION :\n                                storedNode = new NodeProxy(storedDocument, storedGID, Node.ATTRIBUTE_NODE);\n                                break;\n                            case TEXT_SECTION :\n                                storedNode = new NodeProxy(storedDocument, storedGID, Node.TEXT_NODE);\n                                break;\n                            default :\n                                throw new IllegalArgumentException(\"Invalid section type\");\n                        }\t\t\t\t\t\t\n\t\t\t\t\t\t// if a context set is specified, we can directly check if the\n\t\t\t\t\t\t// matching text node is a descendant of one of the nodes\n\t\t\t\t\t\t// in the context set.\n\t\t\t\t\t\tif (contextSet != null) {\n                            switch(storedSection) {\n                                case ATTRIBUTE_SECTION :\n                                    parent = contextSet.get(storedNode);\n                                    break;\n                                case TEXT_SECTION :\n                                    parent = contextSet.parentWithChild(storedNode, false, true, NodeProxy.UNKNOWN_NODE_LEVEL);\n                                    break;\n                                default :\n                                    throw new IllegalArgumentException(\"Invalid section type\");\n                            }                               \n\t\t\t\t\t\t\tif (parent != null) {\n\t\t\t\t\t\t\t\tmatch = new Match(storedGID, token, freq);\n                                readOccurrences(freq, is, match, token.length());\n                                parent.addMatch(match);\n                                sizeHint = contextSet.getSizeHint(storedDocument);\n\t\t\t\t\t\t\t\tresult.add(parent, sizeHint);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t    is.skip(freq);\n                            }\n\t\t\t\t\t\t// otherwise, we add all text nodes without check\n\t\t\t\t\t\t} else {\n                            match = new Match(storedGID, token, freq);\n                            readOccurrences(freq, is, match, token.length());\n                            storedNode.addMatch(match);\n\t\t\t\t\t\t\tresult.add(storedNode, -1);\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontext.proceed();\n                        previousGID = storedGID;                        \n\t\t\t\t\t}\n\t\t\t\t}\n            } catch (EOFException e) {\n                // EOF is expected here \n                //TODO : confirm this -pb\n            } catch (LockException e) {\n                LOG.warn(\"Failed to acquire lock for '\" + dbTokens.getFile().getName() + \"'\", e);              \n\t\t\t} catch (IOException e) {\n                LOG.error(e.getMessage(), e);\n                is = null;\n                //TODO : return ?\n\t\t\t} finally {\n\t\t\t\tlock.release();\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}","id":13751,"modified_method":"/** Get all nodes whose content exactly matches the give expression.\n\t * @param context\n\t * @param docs\n\t * @param contextSet\n\t * @param expr\n\t * @return\n\t * @throws TerminatedException\n\t */\n\tpublic NodeSet getNodesExact(XQueryContext context, DocumentSet docs, NodeSet contextSet, String expr) \n\t    throws TerminatedException {\n        //Return early\n\t\tif (expr == null)\n\t\t\treturn null;\n        //TODO : filter the expression *before* -pb\n\t\tif (stoplist.contains(expr))\n\t\t\treturn null;\n        \n        //TODO : case conversion should be handled by the tokenizer -pb\n        expr = expr.toLowerCase();\n        //TODO : use an indexSpec member in order to get rid of this or do the job *before* -pb\n        String token;        \n        if (stem)\n            token = stemmer.stem(expr);\n        else\n            token = expr;\n        final NodeSet result = new ExtArrayNodeSet(docs.getLength(), 250);         \n\t\tfor (Iterator iter = docs.getCollectionIterator(); iter.hasNext();) {\n            //Compute a key for the node\n            Collection collection = (Collection) iter.next();\n            short collectionId = collection.getId();\n            Value ref = new WordRef(collectionId, token);\n\t\t\tLock lock = dbTokens.getLock();\n\t\t\ttry {\n\t\t\t\tlock.acquire();\n                VariableByteInput is = dbTokens.getAsStream(ref);\n                //Does the token already has data in the index ?\n\t\t\t\tif (is == null)\n\t\t\t\t\tcontinue;\t\t\t\t\n\t\t\t\twhile (is.available() > 0) {\n                    int storedDocId = is.readInt();\n                    int storedSection = is.readByte();\n                    int gidsCount = is.readInt();\n                    //TOUNDERSTAND -pb       \n                    int size = is.readFixedInt();\n                    DocumentImpl storedDocument = docs.getDoc(storedDocId);\n                    //Exit if the document is not concerned\n                    if (storedDocument == null) {\n                        is.skipBytes(size);\n                        continue;                        \n                    }                    \n\t\t\t\t\tif (contextSet != null) {\n                        //Exit if the document is not concerned\n                        if (!contextSet.containsDoc(storedDocument)) {                    \n                            is.skipBytes(size);\n                            continue;\n                        }                        \n\t\t\t\t\t}\n                    //Process the nodes\n                    long previousGID = 0;\n\t\t\t\t\tfor (int j = 0; j < gidsCount; j++) {\n                        long delta = is.readLong();\n                        long storedGID = previousGID + delta;                        \n                        int freq = is.readInt();\n                        NodeProxy storedNode;\n                        switch (storedSection) {\n                            case ATTRIBUTE_SECTION :\n                                storedNode = new NodeProxy(storedDocument, storedGID, Node.ATTRIBUTE_NODE);\n                                break;\n                            case TEXT_SECTION :\n                                storedNode = new NodeProxy(storedDocument, storedGID, Node.TEXT_NODE);\n                                break;\n                            default :\n                                throw new IllegalArgumentException(\"Invalid section type\");\n                        }\t\t\t\t\t\t\n\t\t\t\t\t\t// if a context set is specified, we can directly check if the\n\t\t\t\t\t\t// matching text node is a descendant of one of the nodes\n\t\t\t\t\t\t// in the context set.\n\t\t\t\t\t\tif (contextSet != null) {\n                            NodeProxy parent;\n                            switch(storedSection) {\n                                case ATTRIBUTE_SECTION :\n                                    parent = contextSet.get(storedNode);\n                                    break;\n                                case TEXT_SECTION :\n                                    parent = contextSet.parentWithChild(storedNode, false, true, NodeProxy.UNKNOWN_NODE_LEVEL);\n                                    break;\n                                default :\n                                    throw new IllegalArgumentException(\"Invalid section type\");\n                            }                               \n\t\t\t\t\t\t\tif (parent != null) {\n                                Match match = new Match(storedGID, token, freq);\n                                readOccurrences(freq, is, match, token.length());\n                                parent.addMatch(match);\n                                int sizeHint = contextSet.getSizeHint(storedDocument);\n\t\t\t\t\t\t\t\tresult.add(parent, sizeHint);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t    is.skip(freq);\n                            }\n\t\t\t\t\t\t// otherwise, we add all text nodes without check\n\t\t\t\t\t\t} else {\n                            Match match = new Match(storedGID, token, freq);\n                            readOccurrences(freq, is, match, token.length());\n                            storedNode.addMatch(match);\n\t\t\t\t\t\t\tresult.add(storedNode, -1);\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontext.proceed();\n                        previousGID = storedGID;                        \n\t\t\t\t\t}\n\t\t\t\t}\n            } catch (EOFException e) {\n                // EOF is expected here \n                //TODO : confirm this -pb\n            } catch (LockException e) {\n                LOG.warn(\"Failed to acquire lock for '\" + dbTokens.getFile().getName() + \"'\", e);              \n\t\t\t} catch (IOException e) {\n                LOG.error(e.getMessage(), e);                \n                //TODO : return ?\n\t\t\t} finally {\n\t\t\t\tlock.release();\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}","commit_id":"9cd56baf00e1354157c2c96b9270bbc2a2e3c1ca","url":"https://github.com/eXist-db/exist"},{"original_method":"public boolean indexInfo(Value key, long pointer) throws TerminatedException {\n\t\t    if(context != null)\n\t\t        context.proceed();\t\t\t\n\t\t\ttry {\n                String word = new String(key.getData(), 2, key.getLength() - 2, \"UTF-8\");\n                if (matcher.matches(word))\n                    matches.add(word);\n                return true;\n\t\t\t} catch (UnsupportedEncodingException e) {\n                LOG.error(e.getMessage(), e);\n\t\t\t\t//word = new String(key.getData(), 2, key.getLength() - 2);\n                return true;\n\t\t\t} \n\t\t}","id":13752,"modified_method":"public boolean indexInfo(Value key, long pointer) throws TerminatedException {\n\t\t    if(context != null)\n\t\t        context.proceed();\t\t\t\n\t\t\ttry {\n                final String word = new String(key.getData(), 2, key.getLength() - 2, \"UTF-8\");\n                if (matcher.matches(word))\n                    matches.add(word);\n                return true;\n\t\t\t} catch (UnsupportedEncodingException e) {\n                LOG.error(e.getMessage(), e);\n\t\t\t\t//word = new String(key.getData(), 2, key.getLength() - 2);\n                return true;\n\t\t\t} \n\t\t}","commit_id":"9cd56baf00e1354157c2c96b9270bbc2a2e3c1ca","url":"https://github.com/eXist-db/exist"},{"original_method":"public NodeSet getNodes(XQueryContext context, DocumentSet docs, NodeSet contextSet,\n\t\t\tTermMatcher matcher, CharSequence startTerm) throws TerminatedException {;\n\t\tNodeSet result = new ExtArrayNodeSet();\n        final SearchCallback cb = new SearchCallback(context, matcher, result, contextSet, docs);        \n\t\tValue ref;\n\t\tCollection collection;\n\t\tshort collectionId;\n\t\tfinal Lock lock = dbTokens.getLock();\t\t\n\t\tfor (Iterator iter = docs.getCollectionIterator(); iter.hasNext();) {\n\t\t\tcollection = (Collection) iter.next();\n\t\t\tcollectionId = collection.getId();\n            //Compute a key for the token\n\t\t\tif (startTerm != null && startTerm.length() > 0)\n                //TODO : case conversion should be handled by the tokenizer -pb\n\t\t\t\tref = new WordRef(collectionId, startTerm.toString().toLowerCase());\n\t\t\telse\n\t\t\t\tref = new WordRef(collectionId);\n\t\t\tIndexQuery query = new IndexQuery(IndexQuery.TRUNC_RIGHT, ref);\n\t\t\ttry {\n\t\t\t\tlock.acquire();\t\n\t\t\t\tdbTokens.query(query, cb);\n\t\t\t} catch (LockException e) {\n                LOG.warn(\"Failed to acquire lock for '\" + dbTokens.getFile().getName() + \"'\", e);\n            } catch (BTreeException e) {\n                LOG.error(e.getMessage(), e);\n                //TODO return null ? rethrow ? -pb                \n            } catch (IOException e) {\n                LOG.error(e.getMessage(), e);   \n                //TODO return null ? rethrow ? -pb\n\t\t\t} finally {\n\t\t\t\tlock.release();\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}","id":13753,"modified_method":"public NodeSet getNodes(XQueryContext context, DocumentSet docs, NodeSet contextSet,\n\t\t\tTermMatcher matcher, CharSequence startTerm) throws TerminatedException {;\n\t\tfinal NodeSet result = new ExtArrayNodeSet();\n        final SearchCallback cb = new SearchCallback(context, matcher, result, contextSet, docs); \n\t\tfinal Lock lock = dbTokens.getLock();\t\t\n\t\tfor (Iterator iter = docs.getCollectionIterator(); iter.hasNext();) {\n            //Compute a key for the token\n            Collection collection = (Collection) iter.next();\n            short collectionId = collection.getId();            \n            Value ref;\n\t\t\tif (startTerm != null && startTerm.length() > 0)\n                //TODO : case conversion should be handled by the tokenizer -pb\n\t\t\t\tref = new WordRef(collectionId, startTerm.toString().toLowerCase());\n\t\t\telse\n\t\t\t\tref = new WordRef(collectionId);\n\t\t\tIndexQuery query = new IndexQuery(IndexQuery.TRUNC_RIGHT, ref);\n\t\t\ttry {\n\t\t\t\tlock.acquire();\t\n\t\t\t\tdbTokens.query(query, cb);\n\t\t\t} catch (LockException e) {\n                LOG.warn(\"Failed to acquire lock for '\" + dbTokens.getFile().getName() + \"'\", e);\n            } catch (BTreeException e) {\n                LOG.error(e.getMessage(), e);\n                //TODO return null ? rethrow ? -pb                \n            } catch (IOException e) {\n                LOG.error(e.getMessage(), e);   \n                //TODO return null ? rethrow ? -pb\n\t\t\t} finally {\n\t\t\t\tlock.release();\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}","commit_id":"9cd56baf00e1354157c2c96b9270bbc2a2e3c1ca","url":"https://github.com/eXist-db/exist"},{"original_method":"public Occurrences[] scanIndexTerms(DocumentSet docs, NodeSet contextSet, String start, String end) \n            throws PermissionDeniedException {\n        final IndexScanCallback cb = new IndexScanCallback(docs, contextSet);\n        Value startRef;\n        Value endRef;\n        IndexQuery query;\n        Collection collection;\n\t\tshort collectionId;\n        final Lock lock = dbTokens.getLock();\n\t\tfor (Iterator i = docs.getCollectionIterator(); i.hasNext();) {\n            collection = (Collection) i.next();\n\t\t\tcollectionId = collection.getId();\n            //Compute a key for the token            \n            if (end == null) {\n                startRef = new WordRef(collectionId, start.toLowerCase());\n                query = new IndexQuery(IndexQuery.TRUNC_RIGHT, startRef);\n            } else {\n                startRef = new WordRef(collectionId,  start.toLowerCase());\n                endRef = new WordRef(collectionId, end.toLowerCase());\n    \t\t\tquery = new IndexQuery(IndexQuery.BW, startRef, endRef);\n            }\n\t\t\ttry {\n\t\t\t\tlock.acquire();\n\t\t\t\tdbTokens.query(query, cb);\n\t\t\t} catch (LockException e) {\n                LOG.warn(\"Failed to acquire lock for '\" + dbTokens.getFile().getName() + \"'\", e);\n\t\t\t} catch (IOException e) {\n                LOG.error(e.getMessage(), e);\n\t\t\t} catch (BTreeException e) {\n                LOG.error(e.getMessage(), e);\n\t\t\t} catch (TerminatedException e) {\n                LOG.warn(e.getMessage(), e);\n            } finally {\n\t\t\t\tlock.release();\n\t\t\t}\n\t\t}\t\t\n\t\tOccurrences[] result = new Occurrences[cb.map.size()];\t\t\n\t\treturn (Occurrences[]) cb.map.values().toArray(result);\n\t}","id":13754,"modified_method":"public Occurrences[] scanIndexTerms(DocumentSet docs, NodeSet contextSet, String start, String end) \n            throws PermissionDeniedException {\n        final IndexScanCallback cb = new IndexScanCallback(docs, contextSet);\n        final Lock lock = dbTokens.getLock();\n\t\tfor (Iterator i = docs.getCollectionIterator(); i.hasNext();) {\n            //Compute a key for the token            \n            Collection collection = (Collection) i.next();\n            short collectionId = collection.getId();\n            Value startRef;\n            Value endRef;\n            IndexQuery query;\n            if (end == null) {\n                startRef = new WordRef(collectionId, start.toLowerCase());\n                query = new IndexQuery(IndexQuery.TRUNC_RIGHT, startRef);\n            } else {\n                startRef = new WordRef(collectionId,  start.toLowerCase());\n                endRef = new WordRef(collectionId, end.toLowerCase());\n    \t\t\tquery = new IndexQuery(IndexQuery.BW, startRef, endRef);\n            }\n\t\t\ttry {\n\t\t\t\tlock.acquire();\n\t\t\t\tdbTokens.query(query, cb);\n\t\t\t} catch (LockException e) {\n                LOG.warn(\"Failed to acquire lock for '\" + dbTokens.getFile().getName() + \"'\", e);\n\t\t\t} catch (IOException e) {\n                LOG.error(e.getMessage(), e);\n\t\t\t} catch (BTreeException e) {\n                LOG.error(e.getMessage(), e);\n\t\t\t} catch (TerminatedException e) {\n                LOG.warn(e.getMessage(), e);\n            } finally {\n\t\t\t\tlock.release();\n\t\t\t}\n\t\t}\t\t\n\t\tOccurrences[] result = new Occurrences[cb.map.size()];\t\t\n\t\treturn (Occurrences[]) cb.map.values().toArray(result);\n\t}","commit_id":"9cd56baf00e1354157c2c96b9270bbc2a2e3c1ca","url":"https://github.com/eXist-db/exist"},{"original_method":"public boolean indexInfo(Value key, long pointer) throws TerminatedException {\n            \n            String term;\n            try {\n                term = new String(key.getData(), 2, key.getLength() - 2, \"UTF-8\");\n            } catch (UnsupportedEncodingException e) {\n                LOG.error(e.getMessage(), e);\n                //term = new String(key.getData(), 2, key.getLength() - 2);\n                return true;\n            }\n            \n            VariableByteInput is;\n            try {\n                is = dbTokens.getAsStream(pointer);\n            } catch (IOException e) {\n                LOG.error(e.getMessage(), e);\n                return true;\n            }\n            \n            int storedDocId;\n            byte storedSection;\n            int termCount;\n            long storedGID;\n            long previousGID;\n            long delta;                    \n            int size;               \n            DocumentImpl storedDocument; \n            NodeProxy parentNode;\n            int freq;\n            boolean include;\n            boolean docAdded;\n\t\t\ttry {\n\t\t\t\twhile (is.available() > 0) {\n                    docAdded = false;                    \n                    storedDocId = is.readInt();\n                    storedSection = is.readByte();\n                    termCount = is.readInt();\n                    size = is.readFixedInt();\n                    storedDocument = docs.getDoc(storedDocId);\n                    //Exit if the document is not concerned\n\t\t\t\t\tif (storedDocument == null) {\n\t\t\t\t\t\tis.skipBytes(size);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\t\t\t\t\t\n                    previousGID = 0;\n\t\t\t\t\tfor (int j = 0; j < termCount; j++) {\n                        delta = is.readLong(); \n                        storedGID = previousGID + delta;\n\t\t\t\t\t\tfreq = is.readInt();\n                        is.skip(freq);\n\t\t\t\t\t\tif (contextSet != null) {\n\t\t\t\t\t\t\tinclude = false;\n                            parentNode = contextSet.parentWithChild(storedDocument, storedGID, false, true);                           \n                            switch (storedSection) {\n                                case TEXT_SECTION :\n                                    //TODO : also test on Node.TEXT_NODE like below ? -pb                                    \n                                    include = (parentNode != null);\n                                    break;\n                                case ATTRIBUTE_SECTION :\n                                    include = (parentNode != null && parentNode.getNodeType() == Node.ATTRIBUTE_NODE);\n                                    break;\n                                default :\n                                    throw new IllegalArgumentException(\"Invalid inverted index\");\n                            } \n                            if (include) {\n                                Occurrences oc = (Occurrences) map.get(term);\n                                if (oc == null) {\n                                    oc = new Occurrences(term);\n                                    map.put(term, oc);\n                                }\n                                if (!docAdded) {\n                                    oc.addDocument(storedDocument);\n                                    docAdded = true;\n                                }\n                                oc.addOccurrences(freq);\n                            }                            \n\t\t\t\t\t\t}\t\t\t\t\t\t\n                        previousGID = storedGID;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch(EOFException e) {\n                //EOFExceptions are expected \n\t\t\t} catch(IOException e) {\n                LOG.error(e.getMessage(), e);   \n                //TODO : return early -pb\n\t\t\t}\n\t\t\treturn true;\n\t\t}","id":13755,"modified_method":"public boolean indexInfo(Value key, long pointer) throws TerminatedException {\n            \n            String term;\n            try {\n                term = new String(key.getData(), 2, key.getLength() - 2, \"UTF-8\");\n            } catch (UnsupportedEncodingException e) {\n                LOG.error(e.getMessage(), e);\n                //term = new String(key.getData(), 2, key.getLength() - 2);\n                return true;\n            }\n            \n            VariableByteInput is;\n            try {\n                is = dbTokens.getAsStream(pointer);\n            } catch (IOException e) {\n                LOG.error(e.getMessage(), e);\n                return true;\n            } \n           \n\t\t\ttry {\n\t\t\t\twhile (is.available() > 0) {\n                    boolean docAdded = false;                    \n                    int storedDocId = is.readInt();\n                    byte storedSection = is.readByte();\n                    int termCount = is.readInt();\n                    //TOUNDERSTAND -pb\n                    int size = is.readFixedInt();\n                    DocumentImpl storedDocument = docs.getDoc(storedDocId);\n                    //Exit if the document is not concerned\n\t\t\t\t\tif (storedDocument == null) {\n\t\t\t\t\t\tis.skipBytes(size);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\t\t\t\t\t\n                    long previousGID = 0;\n\t\t\t\t\tfor (int j = 0; j < termCount; j++) {\n                        long delta = is.readLong(); \n                        long storedGID = previousGID + delta;\n                        int freq = is.readInt();\n                        //TODO : use variable\n                        is.skip(freq);\n\t\t\t\t\t\tif (contextSet != null) {\n                            boolean include = false;\n                            NodeProxy parentNode = contextSet.parentWithChild(storedDocument, storedGID, false, true);                           \n                            switch (storedSection) {\n                                case TEXT_SECTION :\n                                    //TODO : also test on Node.TEXT_NODE like below ? -pb                                    \n                                    include = (parentNode != null);\n                                    break;\n                                case ATTRIBUTE_SECTION :\n                                    include = (parentNode != null && parentNode.getNodeType() == Node.ATTRIBUTE_NODE);\n                                    break;\n                                default :\n                                    throw new IllegalArgumentException(\"Invalid inverted index\");\n                            } \n                            if (include) {\n                                Occurrences oc = (Occurrences) map.get(term);\n                                if (oc == null) {\n                                    oc = new Occurrences(term);\n                                    map.put(term, oc);\n                                }\n                                if (!docAdded) {\n                                    oc.addDocument(storedDocument);\n                                    docAdded = true;\n                                }\n                                oc.addOccurrences(freq);\n                            }                            \n\t\t\t\t\t\t}\t\t\t\t\t\t\n                        previousGID = storedGID;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch(EOFException e) {\n                //EOFExceptions are expected \n\t\t\t} catch(IOException e) {\n                LOG.error(e.getMessage(), e);   \n                //TODO : return early -pb\n\t\t\t}\n\t\t\treturn true;\n\t\t}","commit_id":"9cd56baf00e1354157c2c96b9270bbc2a2e3c1ca","url":"https://github.com/eXist-db/exist"},{"original_method":"/**\n     * Collect all words in a document to be removed\n     * \n     * @param words\n     *                Description of the Parameter\n     * @param domIterator\n     *                Description of the Parameter\n     */\n    //TODO : unify functionalities with storeText -pb\n    private void collect(Set words, Iterator domIterator) {\n        byte[] data = ((Value) domIterator.next()).getData();\n        short type = Signatures.getType(data[0]);\n        String word;\n        TextToken token;\n        switch (type) {\n            case Node.ELEMENT_NODE :\n                int children = ByteConversion.byteToInt(data, 1);\n                for (int i = 0; i < children; i++)\n                    collect(words, domIterator);\n                break;\n            case Node.TEXT_NODE :\n                String s;\n                try {\n                    s = new String(data, 1, data.length - 1, \"UTF-8\");\n                    tokenizer.setText(s);\n                    while (null != (token = tokenizer.nextToken())) {\n                        word = token.getText();\n                        if (stoplist.contains(word))\n                            continue;\n                        words.add(word.toLowerCase());\n                    }                    \n                } catch (UnsupportedEncodingException e) {\n                    //s = new String(data, 1, data.length - 1);\n                    LOG.error(e.getMessage(), e);\n                    s = null;\n                }                \n                break;\n            case Node.ATTRIBUTE_NODE :\n                byte idSizeType = (byte) (data[0] & 0x3);\n                String val;\n                try {\n                    val = new String(data,\n                        1 + Signatures.getLength(idSizeType), \n                        data.length - 1 - Signatures.getLength(idSizeType),\n                        \"UTF-8\");\n                    tokenizer.setText(val);\n                    while (null != (token = tokenizer.nextToken())) {\n                        word = token.getText().toString();\n                        if (stoplist.contains(word))\n                            continue;\n                        words.add(word.toLowerCase());\n                    }                    \n                } catch (UnsupportedEncodingException e) {\n                    //val = new String(data,\n                    //        1 + Signatures.getLength(idSizeType), data.length\n                    //                - 1 - Signatures.getLength(idSizeType));\n                    LOG.error(e.getMessage(), e);\n                    val = null;\n                }                \n                break;\n           default :\n               //Other types are ignored : some may be useful though -pb\n               //TOUNDERSTAND : it looks like other types (got : Node.PRCESSING_INSTRUCTION_NODE)\n               //are stored in the index ??? -pb\n        }\n    }","id":13756,"modified_method":"/**\n     * Collect all words in a document to be removed\n     * \n     * @param words\n     *                Description of the Parameter\n     * @param domIterator\n     *                Description of the Parameter\n     */\n    //TODO : unify functionalities with storeText -pb\n    private void collect(Set words, Iterator domIterator) {\n        byte[] data = ((Value) domIterator.next()).getData();\n        short type = Signatures.getType(data[0]);\n        switch (type) {\n            case Node.ELEMENT_NODE :\n                int children = ByteConversion.byteToInt(data, 1);\n                for (int i = 0; i < children; i++)\n                    collect(words, domIterator);\n                break;\n            case Node.TEXT_NODE :\n                String s;\n                try {\n                    s = new String(data, 1, data.length - 1, \"UTF-8\");\n                    tokenizer.setText(s);\n                    TextToken token;\n                    while (null != (token = tokenizer.nextToken())) {\n                        String word = token.getText();\n                        if (stoplist.contains(word))\n                            continue;\n                        words.add(word.toLowerCase());\n                    }                    \n                } catch (UnsupportedEncodingException e) {\n                    //s = new String(data, 1, data.length - 1);\n                    LOG.error(e.getMessage(), e);\n                    s = null;\n                }                \n                break;\n            case Node.ATTRIBUTE_NODE :\n                byte idSizeType = (byte) (data[0] & 0x3);\n                String val;\n                try {\n                    val = new String(data,\n                        1 + Signatures.getLength(idSizeType), \n                        data.length - 1 - Signatures.getLength(idSizeType),\n                        \"UTF-8\");\n                    tokenizer.setText(val);\n                    TextToken token;\n                    while (null != (token = tokenizer.nextToken())) {\n                        String word = token.getText().toString();\n                        if (stoplist.contains(word))\n                            continue;\n                        words.add(word.toLowerCase());\n                    }                    \n                } catch (UnsupportedEncodingException e) {\n                    //val = new String(data,\n                    //        1 + Signatures.getLength(idSizeType), data.length\n                    //                - 1 - Signatures.getLength(idSizeType));\n                    LOG.error(e.getMessage(), e);\n                    val = null;\n                }                \n                break;\n           default :\n               //Other types are ignored : some may be useful though -pb\n               //TOUNDERSTAND : it looks like other types (got : Node.PRCESSING_INSTRUCTION_NODE)\n               //are stored in the index ??? -pb\n        }\n    }","commit_id":"9cd56baf00e1354157c2c96b9270bbc2a2e3c1ca","url":"https://github.com/eXist-db/exist"},{"original_method":"public void reindex(DocumentImpl document, NodeImpl node) {\t\n            OccurrenceList storedOccurencesList;\n            int termCount;\n            long storedGID;\n            long previousGID;\n            long delta;\n\t\t    Map.Entry entry;\n\t\t    String token;\n            WordRef ref;\n            VariableByteInput is;\n\t\t    //TOUNDERSTAND -pb\n            int size;\n            int lenOffset;\n            int storedDocId;\n            byte storedSection;\n            int freq;\n            final short collectionId = document.getCollection().getId();\n\t\t    final Lock lock = dbTokens.getLock();\n            for (byte currentSection = 0; currentSection <= ATTRIBUTE_SECTION; currentSection++) {\n\t\t        for (Iterator i = words[currentSection].entrySet().iterator(); i.hasNext();) {\n                    //Compute a key for the token\n\t\t            entry = (Map.Entry) i.next();\n                    token = (String) entry.getKey();\n                    storedOccurencesList = (OccurrenceList) entry.getValue();\n\t\t            ref = new WordRef(collectionId, token);\n                    os.clear();\n\t\t            try {\n\t\t                lock.acquire(Lock.WRITE_LOCK);\n\t\t                is = dbTokens.getAsStream(ref);\t\n                        //Does the token already has data in the index ?\n\t\t                if (is != null) {\n\t\t                    //Add its data to the new list    \n\t\t                    try {\n\t\t                        while (is.available() > 0) {\n                                    storedDocId = is.readInt();\n                                    storedSection = is.readByte();\n                                    termCount = is.readInt();\n                                    size = is.readFixedInt();\n\t\t                            if (storedSection != currentSection || storedDocId != document.getDocId()) {\n                                        // data are related to another section or document:\n                                        // append them to any existing data\n\t\t                                os.writeInt(storedDocId);\n\t\t                                os.writeByte(storedSection);\n\t\t                                os.writeInt(termCount);\n\t\t                                os.writeFixedInt(size);\n\t\t                                is.copyRaw(os, size);\n\t\t                            } else {\n                                        // data are related to our section and document:\n                                        // feed the new list with the GIDs\n                                        previousGID = 0;\n\t\t                                for (int j = 0; j < termCount; j++) {\n                                            delta = is.readLong();\n                                            storedGID = previousGID + delta;\n\t\t                                    freq = is.readInt();\n\t\t                                    if (node == null) {\n\t\t                                        if (document.getTreeLevel(storedGID) < document.reindexRequired()) {\n                                                    for (int l = 0; l < freq; l++) {\n                                                        //Note that we use the existing list\n                                                        storedOccurencesList.add(storedGID, is.readInt());\n                                                    }\n                                                } else\n                                                    is.skip(freq);\n                                                \n\t\t                                    } else {\n\t\t                                        if (!XMLUtil.isDescendantOrSelf(\n                                                        document,\n                                                        node.getGID(),\n                                                        storedGID)) {\n                                                    for (int l = 0; l < freq; l++) {\n                                                        //Note that we use the existing list\n                                                        storedOccurencesList.add(storedGID, is.readInt());\n                                                    }\n                                                } else\n                                                    is.skip(freq);\n                                            }\n                                            previousGID = storedGID;\n\t\t                                }\n\t\t                            }\n\t\t                        }\n\t\t                    } catch (EOFException e) {\n\t\t                        //EOF is expected here\n\t\t                    }\n\t\t                }\n                        if (storedOccurencesList.getSize() > 0) {\n                            //append the data from the new list\n                            termCount = storedOccurencesList.getTermCount();\n                            storedOccurencesList.sort();                        \n    \t\t                os.writeInt(document.getDocId());\n                            switch (currentSection) {\n                                case TEXT_SECTION :\n                                    os.writeByte(TEXT_SECTION);\n                                    break;\n                                case ATTRIBUTE_SECTION :\n                                    os.writeByte(ATTRIBUTE_SECTION);\n                                    break;\n                                default :\n                                    throw new IllegalArgumentException(\"Invalid inverted index\");\n                            }         \n    \t\t                os.writeInt(termCount);\n                            lenOffset = os.position();\n    \t                    os.writeFixedInt(0);                            \n                            previousGID = 0;\n                            for (int m = 0; m < storedOccurencesList.getSize(); ) {\n                                delta = storedOccurencesList.nodes[m] - previousGID;\n                                os.writeLong(delta);                            \n                                freq = storedOccurencesList.getOccurrences(m);\n                                os.writeInt(freq);\n                                for (int n = 0; n < freq; n++) {\n                                    os.writeInt(storedOccurencesList.offsets[m + n]);\n                                }\n                                previousGID = storedOccurencesList.nodes[m];\n                                m += freq;\n                            }\t\t                \n    \t\t                os.writeFixedInt(lenOffset, os.position() - lenOffset - 4);\n                        }\n\t\t                //Store the data\t\t                \n\t                    if (is == null) {\n                            //TOUNDERSTAND : Should is be null, what will there be in os.data() ? -pb\n\t                        if (dbTokens.put(ref, os.data()) == BFile.UNKNOWN_ADDRESS) {\n                                LOG.error(\"Could not put index data for token '\" +  token + \"'\"); \n                            }\n\t                    }else {                            \n\t                        if (dbTokens.update(((BFile.PageInputStream) is).getAddress(), ref, os.data()) == BFile.UNKNOWN_ADDRESS) {\n                                LOG.error(\"Could not update index data for value '\" +  token + \"'\");  \n                            }\n\t                    }\t\t                \n\t\t            } catch (LockException e) {\n                        LOG.warn(\"Failed to acquire lock for '\" + dbTokens.getFile().getName() + \"'\", e);\n\t\t                is = null;\n                    } catch (ReadOnlyException e) {\n                        LOG.warn(\"Read-only error on '\" + dbTokens.getFile().getName() + \"'\", e);                        \n\t\t            } catch (IOException e) {\n\t\t                LOG.error(\"io error while reindexing word '\" + token  + \"'\");\n\t\t                is = null;\n\t\t            } finally {\n\t\t                lock.release(Lock.WRITE_LOCK);\n\t\t            }\n\t\t        }\n\t\t        words[currentSection].clear();\n\t\t    }\n\t\t}","id":13757,"modified_method":"public void reindex(DocumentImpl document, NodeImpl node) {\n            final short collectionId = document.getCollection().getId();\n\t\t    final Lock lock = dbTokens.getLock();\n            for (byte currentSection = 0; currentSection <= ATTRIBUTE_SECTION; currentSection++) {\n\t\t        for (Iterator i = words[currentSection].entrySet().iterator(); i.hasNext();) {                   \n                    //Compute a key for the token\n                    Map.Entry entry = (Map.Entry) i.next();\n                    String token = (String) entry.getKey();                    \n                    WordRef ref = new WordRef(collectionId, token);\n                    OccurrenceList storedOccurencesList = (OccurrenceList) entry.getValue();\n                    os.clear();                     \n\t\t            try {\n\t\t                lock.acquire(Lock.WRITE_LOCK);\n                        VariableByteInput is = dbTokens.getAsStream(ref);\t\n                        //Does the token already has data in the index ?\n\t\t                if (is != null) {\n\t\t                    //Add its data to the new list    \n\t\t                    try {\n\t\t                        while (is.available() > 0) {\n                                    int storedDocId = is.readInt();\n                                    byte storedSection = is.readByte();\n                                    int termCount = is.readInt();\n                                    //TOUNDERSTAND -pb         \n                                    int size = is.readFixedInt();\n\t\t                            if (storedSection != currentSection || storedDocId != document.getDocId()) {\n                                        // data are related to another section or document:\n                                        // append them to any existing data\n\t\t                                os.writeInt(storedDocId);\n\t\t                                os.writeByte(storedSection);\n\t\t                                os.writeInt(termCount);\n\t\t                                os.writeFixedInt(size);\n\t\t                                is.copyRaw(os, size);\n\t\t                            } else {\n                                        // data are related to our section and document:\n                                        // feed the new list with the GIDs\n                                        long previousGID = 0;\n\t\t                                for (int j = 0; j < termCount; j++) {\n                                            long delta = is.readLong();\n                                            long storedGID = previousGID + delta;\n                                            int freq = is.readInt();\n\t\t                                    if (node == null) {\n\t\t                                        if (document.getTreeLevel(storedGID) < document.reindexRequired()) {\n                                                    for (int l = 0; l < freq; l++) {\n                                                        //Note that we use the existing list\n                                                        storedOccurencesList.add(storedGID, is.readInt());\n                                                    }\n                                                } else\n                                                    is.skip(freq);\n                                                \n\t\t                                    } else {\n\t\t                                        if (!XMLUtil.isDescendantOrSelf(\n                                                        document,\n                                                        node.getGID(),\n                                                        storedGID)) {\n                                                    for (int l = 0; l < freq; l++) {\n                                                        //Note that we use the existing list\n                                                        storedOccurencesList.add(storedGID, is.readInt());\n                                                    }\n                                                } else\n                                                    is.skip(freq);\n                                            }\n                                            previousGID = storedGID;\n\t\t                                }\n\t\t                            }\n\t\t                        }\n\t\t                    } catch (EOFException e) {\n\t\t                        //EOF is expected here\n\t\t                    }\n\t\t                }\n                        if (storedOccurencesList.getSize() > 0) {\n                            //append the data from the new list\n                            int termCount = storedOccurencesList.getTermCount();\n                            storedOccurencesList.sort();                        \n    \t\t                os.writeInt(document.getDocId());\n                            switch (currentSection) {\n                                case TEXT_SECTION :\n                                    os.writeByte(TEXT_SECTION);\n                                    break;\n                                case ATTRIBUTE_SECTION :\n                                    os.writeByte(ATTRIBUTE_SECTION);\n                                    break;\n                                default :\n                                    throw new IllegalArgumentException(\"Invalid inverted index\");\n                            }         \n    \t\t                os.writeInt(termCount);\n                            //TOUNDERSTAND -pb         \n                            int lenOffset = os.position();\n    \t                    os.writeFixedInt(0);                            \n                            long previousGID = 0;\n                            for (int m = 0; m < storedOccurencesList.getSize(); ) {\n                                long delta = storedOccurencesList.nodes[m] - previousGID;\n                                os.writeLong(delta);                            \n                                int freq = storedOccurencesList.getOccurrences(m);\n                                os.writeInt(freq);\n                                for (int n = 0; n < freq; n++) {\n                                    os.writeInt(storedOccurencesList.offsets[m + n]);\n                                }\n                                previousGID = storedOccurencesList.nodes[m];\n                                m += freq;\n                            }\t\t                \n    \t\t                os.writeFixedInt(lenOffset, os.position() - lenOffset - 4);\n                        }\n\t\t                //Store the data\t\t                \n\t                    if (is == null) {\n                            //TOUNDERSTAND : Should is be null, what will there be in os.data() ? -pb\n\t                        if (dbTokens.put(ref, os.data()) == BFile.UNKNOWN_ADDRESS) {\n                                LOG.error(\"Could not put index data for token '\" +  token + \"'\"); \n                            }\n\t                    }else {                            \n\t                        if (dbTokens.update(((BFile.PageInputStream) is).getAddress(), ref, os.data()) == BFile.UNKNOWN_ADDRESS) {\n                                LOG.error(\"Could not update index data for value '\" +  token + \"'\");  \n                            }\n\t                    }\t\t                \n\t\t            } catch (LockException e) {\n                        LOG.warn(\"Failed to acquire lock for '\" + dbTokens.getFile().getName() + \"'\", e);\t\t               \n                    } catch (ReadOnlyException e) {\n                        LOG.warn(\"Read-only error on '\" + dbTokens.getFile().getName() + \"'\", e);                        \n\t\t            } catch (IOException e) {\n\t\t                LOG.error(\"io error while reindexing word '\" + token  + \"'\");\t\t               \n\t\t            } finally {\n\t\t                lock.release(Lock.WRITE_LOCK);\n\t\t            }\n\t\t        }\n\t\t        words[currentSection].clear();\n\t\t    }\n\t\t}","commit_id":"9cd56baf00e1354157c2c96b9270bbc2a2e3c1ca","url":"https://github.com/eXist-db/exist"},{"original_method":"public String[] getIndexTerms(DocumentSet docs, TermMatcher matcher) {\n        final IndexCallback cb = new IndexCallback(null, matcher);\n\t\tValue ref;\n        IndexQuery query;\n\t\tCollection collection;\n\t\tshort collectionId;\n\t\tfinal Lock lock = dbTokens.getLock();\t\t\n\t\tfor (Iterator iter = docs.getCollectionIterator(); iter.hasNext();) {\n\t\t\tcollection = (Collection) iter.next();\n\t\t\tcollectionId = collection.getId();\n            //Compute a key for the token\n\t\t\tref = new WordRef(collectionId);\n            query = new IndexQuery(IndexQuery.TRUNC_RIGHT, ref);\n\t\t\ttry {\n\t\t\t\tlock.acquire();\n\t\t\t\tdbTokens.query(query, cb);\n\t\t\t} catch (LockException e) {\n                LOG.warn(\"Failed to acquire lock for '\" + dbTokens.getFile().getName() + \"'\", e);\n            } catch (IOException e) {\n                LOG.error(e.getMessage(), e);\n            } catch (BTreeException e) {\n                LOG.error(e.getMessage(), e);\n            } catch (TerminatedException e) {\n                LOG.warn(e.getMessage(), e);                       \n\t\t\t} finally {\n\t\t\t\tlock.release();\n\t\t\t}\n\t\t}\n\t\treturn cb.getMatches();\n\t}","id":13758,"modified_method":"public String[] getIndexTerms(DocumentSet docs, TermMatcher matcher) {\n        final IndexCallback cb = new IndexCallback(null, matcher);\t\t\n\t\tfinal Lock lock = dbTokens.getLock();\t\t\n\t\tfor (Iterator iter = docs.getCollectionIterator(); iter.hasNext();) {\n            //Compute a key for the token\n            Collection collection = (Collection) iter.next();\n            short collectionId = collection.getId();           \n            Value ref = new WordRef(collectionId);\n            IndexQuery query = new IndexQuery(IndexQuery.TRUNC_RIGHT, ref);\n\t\t\ttry {\n\t\t\t\tlock.acquire();\n\t\t\t\tdbTokens.query(query, cb);\n\t\t\t} catch (LockException e) {\n                LOG.warn(\"Failed to acquire lock for '\" + dbTokens.getFile().getName() + \"'\", e);\n            } catch (IOException e) {\n                LOG.error(e.getMessage(), e);\n            } catch (BTreeException e) {\n                LOG.error(e.getMessage(), e);\n            } catch (TerminatedException e) {\n                LOG.warn(e.getMessage(), e);                       \n\t\t\t} finally {\n\t\t\t\tlock.release();\n\t\t\t}\n\t\t}\n\t\treturn cb.getMatches();\n\t}","commit_id":"9cd56baf00e1354157c2c96b9270bbc2a2e3c1ca","url":"https://github.com/eXist-db/exist"},{"original_method":"public void dropIndex(DocumentImpl document) {        \n        //Collect document's tokens\n        TreeSet tokens = new TreeSet();\n        NodeList children = document.getChildNodes();\n        NodeImpl node;\n        for (int i = 0; i < children.getLength(); i++) {\n            node = (NodeImpl) children.item(i);\n            Iterator j = broker.getDOMIterator(new NodeProxy(document, node.getGID(), node.getInternalAddress()));\n            collect(tokens, j);\n        }\n        \n        String token;        \n        WordRef ref;\n        int gidsCount;        \n        byte section;\n        //TOUNDERSTAND -pb\n        int size;        \n        VariableByteInput is; \n        int storedDocId;\n        boolean changed;\n        short collectionId = document.getCollection().getId();        \n        final Lock lock = dbTokens.getLock();\n        for (Iterator iter = tokens.iterator(); iter.hasNext();) {\n            token = (String) iter.next();\n            ref = new WordRef(collectionId, token);\n            try {\n                lock.acquire(Lock.WRITE_LOCK);\n                changed = false;                \n                os.clear();    \n                is = dbTokens.getAsStream(ref);\n                //Does the token already has data in the index ?\n                if (is == null)\n                    continue;            \n                try {\n                    while (is.available() > 0) {\n                        storedDocId = is.readInt();\n                        section = is.readByte();\n                        gidsCount = is.readInt();\n                        size = is.readFixedInt();\n                        if (storedDocId != document.getDocId()) {\n                            // data are related to another document:\n                            // copy them to any existing data\n                            os.writeInt(storedDocId);\n                            os.writeByte(section);\n                            os.writeInt(gidsCount);\n                            os.writeFixedInt(size);\n                            is.copyRaw(os, size);\n                        } else {\n                            // data are related to our document:\n                            // skip them      \n                            changed = true;                            \n                            is.skipBytes(size);\n                        }\n                    }\n                } catch (EOFException e) {\n                    //EOF is expected here \n                }\n                //Store new data, if relevant\n                if (changed) {\n                    //Well, nothing to store : remove the existing data\n                    if (os.data().size() == 0) {\n                        dbTokens.remove(ref);\n                    } else {                        \n                        if (dbTokens.put(ref, os.data()) == BFile.UNKNOWN_ADDRESS) {\n                            LOG.warn(\"Could not put index data for token '\" +  token + \"'\");\n                        }                    \n                    }\n                }\n            } catch (LockException e) {\n                LOG.warn(\"Failed to acquire lock for '\" + dbTokens.getFile().getName() + \"'\", e);                \n            } catch (IOException e) {\n                LOG.error(e.getMessage(), e);                \n            } catch (ReadOnlyException e) {\n                LOG.error(e.getMessage(), e);                       \n            } finally {\n                lock.release();\n            }\n        }        \n    }","id":13759,"modified_method":"public void dropIndex(DocumentImpl document) {        \n        //Collect document's tokens\n        final TreeSet tokens = new TreeSet();\n        final NodeList children = document.getChildNodes();        \n        for (int i = 0; i < children.getLength(); i++) {\n            NodeImpl node = (NodeImpl) children.item(i);\n            Iterator j = broker.getDOMIterator(new NodeProxy(document, node.getGID(), node.getInternalAddress()));\n            collect(tokens, j);\n        }\n        short collectionId = document.getCollection().getId();        \n        final Lock lock = dbTokens.getLock();\n        for (Iterator iter = tokens.iterator(); iter.hasNext();) {\n            String token = (String) iter.next();\n            WordRef ref = new WordRef(collectionId, token);\n            try {\n                lock.acquire(Lock.WRITE_LOCK);\n                boolean changed = false;                \n                os.clear();    \n                VariableByteInput is = dbTokens.getAsStream(ref);\n                //Does the token already has data in the index ?\n                if (is == null)\n                    continue;            \n                try {\n                    while (is.available() > 0) {\n                        int storedDocId = is.readInt();\n                        byte section = is.readByte();\n                        int gidsCount = is.readInt();\n                        //TOUNDERSTAND -pb        \n                        int size = is.readFixedInt();\n                        if (storedDocId != document.getDocId()) {\n                            // data are related to another document:\n                            // copy them to any existing data\n                            os.writeInt(storedDocId);\n                            os.writeByte(section);\n                            os.writeInt(gidsCount);\n                            os.writeFixedInt(size);\n                            is.copyRaw(os, size);\n                        } else {\n                            // data are related to our document:\n                            // skip them      \n                            changed = true;                            \n                            is.skipBytes(size);\n                        }\n                    }\n                } catch (EOFException e) {\n                    //EOF is expected here \n                }\n                //Store new data, if relevant\n                if (changed) {\n                    //Well, nothing to store : remove the existing data\n                    if (os.data().size() == 0) {\n                        dbTokens.remove(ref);\n                    } else {                        \n                        if (dbTokens.put(ref, os.data()) == BFile.UNKNOWN_ADDRESS) {\n                            LOG.warn(\"Could not put index data for token '\" +  token + \"'\");\n                        }                    \n                    }\n                }\n            } catch (LockException e) {\n                LOG.warn(\"Failed to acquire lock for '\" + dbTokens.getFile().getName() + \"'\", e);                \n            } catch (IOException e) {\n                LOG.error(e.getMessage(), e);                \n            } catch (ReadOnlyException e) {\n                LOG.error(e.getMessage(), e);                       \n            } finally {\n                lock.release();\n            }\n        }        \n    }","commit_id":"9cd56baf00e1354157c2c96b9270bbc2a2e3c1ca","url":"https://github.com/eXist-db/exist"},{"original_method":"private NodeSet getNodesRegexp(XQueryContext context, DocumentSet docs, NodeSet contextSet,\n            String expr, int type) throws TerminatedException {\n        //Return early\n        if (expr == null)\n            return null;\n        if (stoplist.contains(expr))\n            return null;\n        //TODO : case conversion should be handled by the tokenizer -pb\n        expr = expr.toLowerCase();\n\n        // if the regexp starts with a char sequence, we restrict the index scan to entries starting with\n        // the same sequence. Otherwise, we have to scan the whole index.\n        StringBuffer token = new StringBuffer();\n        for (int i = 0; i < expr.length(); i++) {\n            if (Character.isLetterOrDigit(expr.charAt(i)))\n                token.append(expr.charAt(i));\n            else\n                break;\n        }\n        try {\n            TermMatcher comparator = new RegexMatcher(expr, type, Pattern.CASE_INSENSITIVE | Pattern.UNICODE_CASE);\n            return getNodes(context, docs, contextSet, comparator, token);\n        } catch (EXistException e) {\n            return null;\n        }\n    }","id":13760,"modified_method":"private NodeSet getNodesRegexp(XQueryContext context, DocumentSet docs, NodeSet contextSet,\n            String expr, int type) throws TerminatedException {\n        //Return early\n        if (expr == null)\n            return null;\n        if (stoplist.contains(expr))\n            return null;\n        //TODO : case conversion should be handled by the tokenizer -pb\n        expr = expr.toLowerCase();\n\n        // if the regexp starts with a char sequence, we restrict the index scan to entries starting with\n        // the same sequence. Otherwise, we have to scan the whole index.\n        final StringBuffer token = new StringBuffer();\n        for (int i = 0; i < expr.length(); i++) {\n            if (Character.isLetterOrDigit(expr.charAt(i)))\n                token.append(expr.charAt(i));\n            else\n                break;\n        }\n        try {\n            TermMatcher comparator = new RegexMatcher(expr, type, Pattern.CASE_INSENSITIVE | Pattern.UNICODE_CASE);\n            return getNodes(context, docs, contextSet, comparator, token);\n        } catch (EXistException e) {\n            return null;\n        }\n    }","commit_id":"9cd56baf00e1354157c2c96b9270bbc2a2e3c1ca","url":"https://github.com/eXist-db/exist"},{"original_method":"/**\n     * Indexes the tokens contained in an attribute.\n     * \n     * @param attr The attribute to be indexed\n     */\n    //TODO : unify functionalities with storeText -pb\n    public void storeAttribute(FulltextIndexSpec indexSpec, AttrImpl attr) {\n        final DocumentImpl doc = (DocumentImpl) attr.getOwnerDocument();\n        final long gid = attr.getGID();\n        TextToken token;\n        //TODO : case conversion should be handled by the tokenizer -pb\n        tokenizer.setText(attr.getValue().toLowerCase());         \n        while (null != (token = tokenizer.nextToken())) {\n            if (token.length() > MAX_TOKEN_LENGTH) {\n                continue;\n            } \n            if (stoplist.contains(token)) {\n                continue;\n            }            \n            if (indexSpec != null) {  \n                //TODO : the tokenizer should strip unwanted token types itself -pb\n                if (!indexSpec.getIncludeAlphaNum() && !token.isAlpha()) {\n                    continue;\n                }\n            }\n            invertedIndex.setDocument(doc);\n            invertedIndex.addAttribute(token, gid);\n        }\n    }","id":13761,"modified_method":"/**\n     * Indexes the tokens contained in an attribute.\n     * \n     * @param attr The attribute to be indexed\n     */\n    //TODO : unify functionalities with storeText -pb\n    public void storeAttribute(FulltextIndexSpec indexSpec, AttrImpl attr) {\n        final DocumentImpl doc = (DocumentImpl) attr.getOwnerDocument();\n        final long gid = attr.getGID();        \n        //TODO : case conversion should be handled by the tokenizer -pb\n        tokenizer.setText(attr.getValue().toLowerCase());   \n        TextToken token;\n        while (null != (token = tokenizer.nextToken())) {\n            if (token.length() > MAX_TOKEN_LENGTH) {\n                continue;\n            } \n            if (stoplist.contains(token)) {\n                continue;\n            }            \n            if (indexSpec != null) {  \n                //TODO : the tokenizer should strip unwanted token types itself -pb\n                if (!indexSpec.getIncludeAlphaNum() && !token.isAlpha()) {\n                    continue;\n                }\n            }\n            invertedIndex.setDocument(doc);\n            invertedIndex.addAttribute(token, gid);\n        }\n    }","commit_id":"9cd56baf00e1354157c2c96b9270bbc2a2e3c1ca","url":"https://github.com/eXist-db/exist"},{"original_method":"public boolean indexInfo(Value key, long pointer) throws TerminatedException {            \n            VariableByteInput is;\n            try {\n                is = dbTokens.getAsStream(pointer);\n            } catch (IOException e) {\n                LOG.error(e.getMessage(), e);\n                return true; \n            }   \n            \n            word.reuse();\n            word = UTF8.decode(key.getData(), 2, key.getLength() - 2, word);\n\t\t\tif (matcher.matches(word)) {                \n                int storedDocId;\n                byte storedSection;\n                int termCount;\n                long storedGID;\n                long previousGID;\n                long delta;                    \n                int size;               \n                DocumentImpl storedDocument;        \n                NodeProxy storedNode;\n                NodeProxy parentNode;  \n                Match match;\n                int freq;\n                int sizeHint;\n\t\t\t\ttry {\n\t\t\t\t\twhile (is.available() > 0) {                        \n\t\t\t\t\t    if(context != null)\n\t\t\t\t\t        context.proceed();                        \n                        storedDocId = is.readInt();\n                        storedSection = is.readByte();\n                        termCount = is.readInt();\n                        size = is.readFixedInt();\n                        storedDocument = docs.getDoc(storedDocId);                        \n                        //Exit if the document is not concerned\n\t\t\t\t\t\tif (storedDocument == null) {\n\t\t\t\t\t\t\tis.skipBytes(size);\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}                        \n                        previousGID = 0;\n\t\t\t\t\t\tfor (int j = 0; j < termCount; j++) {\n                            delta = is.readLong();\n                            storedGID = previousGID + delta;\n\t\t\t\t\t\t\tfreq = is.readInt();\t\n                            switch (storedSection) {\n                                case TEXT_SECTION :\n                                    storedNode = new NodeProxy(storedDocument, storedGID, Node.TEXT_NODE);\n                                    break;\n                                case ATTRIBUTE_SECTION :\n                                    storedNode = new NodeProxy(storedDocument, storedGID, Node.ATTRIBUTE_NODE);\n                                    break;\n                                default :\n                                    throw new IllegalArgumentException(\"Invalid inverted index\");\n                            } \n\t\t\t\t\t\t\tif (contextSet != null) {\n                                switch (storedSection) {\n                                    case TEXT_SECTION :\n                                        parentNode = contextSet.parentWithChild(storedNode, false, true, NodeProxy.UNKNOWN_NODE_LEVEL);\n                                        break;\n                                    case ATTRIBUTE_SECTION :\n                                        parentNode = contextSet.get(storedNode);\n                                        break;\n                                    default :\n                                        throw new IllegalArgumentException(\"Invalid inverted index\");\n                                }\n\t\t\t\t\t\t\t\tif (parentNode != null) {\n                                    match = new Match(storedGID, word.toString(), freq);\n                                    readOccurrences(freq, is, match, word.length());\n                                    parentNode.addMatch(match);\n                                    sizeHint = contextSet.getSizeHint(storedDocument);\n\t\t\t\t\t\t\t\t\tresult.add(parentNode, sizeHint);\n\t\t\t\t\t\t\t\t} else\n                                    is.skip(freq);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t    match = new Match(storedGID, word.toString(), freq);\n\t\t\t\t\t\t\t    readOccurrences(freq, is, match, word.length());\n                                storedNode.addMatch(match);\n\t\t\t\t\t\t\t    result.add(storedNode, -1);\n                            }\n                            previousGID = storedGID;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (EOFException e) {\n\t\t\t\t\t// EOFExceptions are normal\n\t\t\t\t} catch (IOException e) {\n                    LOG.error(e.getMessage(), e);   \n                    //TODO : return early -pb\n\t\t\t\t}\n\t\t\t}\n            \n            //TOUNDERSTAND : why sort here ? -pb\n\t\t\tif (contextSet != null)\n\t\t\t\t((ExtArrayNodeSet) result).sort();\n            \n\t\t\treturn true;\n\t\t}","id":13762,"modified_method":"public boolean indexInfo(Value key, long pointer) throws TerminatedException {            \n            VariableByteInput is;\n            try {\n                is = dbTokens.getAsStream(pointer);\n            } catch (IOException e) {\n                LOG.error(e.getMessage(), e);\n                return true; \n            } \n            word.reuse();\n            word = UTF8.decode(key.getData(), 2, key.getLength() - 2, word);\n\t\t\tif (matcher.matches(word)) {                 \n\t\t\t\ttry {\n\t\t\t\t\twhile (is.available() > 0) {                        \n\t\t\t\t\t    if(context != null)\n\t\t\t\t\t        context.proceed();                        \n                        int storedDocId = is.readInt();\n                        byte storedSection = is.readByte();\n                        int termCount = is.readInt();\n                        //TOUNDERSTAND -pb\n                        int size = is.readFixedInt();\n                        DocumentImpl storedDocument = docs.getDoc(storedDocId);                        \n                        //Exit if the document is not concerned\n\t\t\t\t\t\tif (storedDocument == null) {\n\t\t\t\t\t\t\tis.skipBytes(size);\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}                        \n                        long previousGID = 0;\n\t\t\t\t\t\tfor (int j = 0; j < termCount; j++) {\n                            long delta = is.readLong();\n                            long storedGID = previousGID + delta;\n                            int freq = is.readInt();\n                            NodeProxy storedNode;\n                            switch (storedSection) {\n                                case TEXT_SECTION :\n                                    storedNode = new NodeProxy(storedDocument, storedGID, Node.TEXT_NODE);\n                                    break;\n                                case ATTRIBUTE_SECTION :\n                                    storedNode = new NodeProxy(storedDocument, storedGID, Node.ATTRIBUTE_NODE);\n                                    break;\n                                default :\n                                    throw new IllegalArgumentException(\"Invalid inverted index\");\n                            } \n\t\t\t\t\t\t\tif (contextSet != null) {\n                                NodeProxy parentNode;  \n                                switch (storedSection) {\n                                    case TEXT_SECTION :\n                                        parentNode = contextSet.parentWithChild(storedNode, false, true, NodeProxy.UNKNOWN_NODE_LEVEL);\n                                        break;\n                                    case ATTRIBUTE_SECTION :\n                                        parentNode = contextSet.get(storedNode);\n                                        break;\n                                    default :\n                                        throw new IllegalArgumentException(\"Invalid inverted index\");\n                                }\n\t\t\t\t\t\t\t\tif (parentNode != null) {\n                                    Match match = new Match(storedGID, word.toString(), freq);\n                                    readOccurrences(freq, is, match, word.length());\n                                    parentNode.addMatch(match);\n                                    int sizeHint = contextSet.getSizeHint(storedDocument);\n\t\t\t\t\t\t\t\t\tresult.add(parentNode, sizeHint);\n\t\t\t\t\t\t\t\t} else\n                                    is.skip(freq);\n\t\t\t\t\t\t\t} else {\n                                Match match = new Match(storedGID, word.toString(), freq);\n\t\t\t\t\t\t\t    readOccurrences(freq, is, match, word.length());\n                                storedNode.addMatch(match);\n\t\t\t\t\t\t\t    result.add(storedNode, -1);\n                            }\n                            previousGID = storedGID;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (EOFException e) {\n\t\t\t\t\t// EOFExceptions are normal\n\t\t\t\t} catch (IOException e) {\n                    LOG.error(e.getMessage(), e);   \n                    //TODO : return early -pb\n\t\t\t\t}\n\t\t\t}\n            \n            //TOUNDERSTAND : why sort here ? -pb\n\t\t\tif (contextSet != null)\n\t\t\t\t((ExtArrayNodeSet) result).sort();\n            \n\t\t\treturn true;\n\t\t}","commit_id":"9cd56baf00e1354157c2c96b9270bbc2a2e3c1ca","url":"https://github.com/eXist-db/exist"},{"original_method":"/**\n\t\t * Remove the entries in the current list from the index.\n\t\t */\n        //TODO: use VariableInputStream\n\t\tpublic void remove() {\n\t\t    //Return early\n\t\t\tif (doc == null)\n\t\t\t\treturn;\n            OccurrenceList storedOccurencesList;\n            OccurrenceList newOccurencesList;\t\t\t\n\t\t\tint termCount;  \n            long storedGID;\n            long previousGID; \n            long delta;\n            Map.Entry entry;\t\t\t\n\t\t\tString token;\n            WordRef ref;\n            Value value;            \n\t\t\tVariableByteArrayInput is;\n            //TOUNDERSTAND -pb\n            int size;\n            int lenOffset;\n            int storedDocId;\n            byte storedSection;\n            int freq;            \n            final short collectionId = this.doc.getCollection().getId();\n            final Lock lock = dbTokens.getLock();\n            for (byte currentSection = 0; currentSection <= ATTRIBUTE_SECTION; currentSection++) {\n\t\t\t\tfor (Iterator i = words[currentSection].entrySet().iterator(); i.hasNext();) {\n                    //Compute a key for the token\n                    entry = (Map.Entry) i.next();\n                    storedOccurencesList = (OccurrenceList) entry.getValue();\n                    token = (String) entry.getKey();                        \n                    ref = new WordRef(collectionId, token);\n                    newOccurencesList = new OccurrenceList();\n                    os.clear();\n                    try {\n                        lock.acquire(Lock.WRITE_LOCK);\n                        value = dbTokens.get(ref);\n                        //Does the token already has data in the index ?\n\t\t\t\t\t    if (value != null) {\n\t\t\t\t\t        //Add its data to the new list    \n\t\t\t\t\t        is = new VariableByteArrayInput(value.getData());\n                            try {\n    \t\t\t\t            while (is.available() > 0) {\n                                    storedDocId = is.readInt();\n                                    storedSection = is.readByte();\n                                    termCount = is.readInt();\n                                    size = is.readFixedInt();\n    \t\t\t\t                if (storedSection != currentSection || storedDocId != this.doc.getDocId()) {\n                                        // data are related to another section or document:\n                                        // append them to any existing data\n                                        os.writeInt(storedDocId);\n                                        os.writeByte(storedSection);\n                                        os.writeInt(termCount);\n                                        os.writeFixedInt(size);\n                                        is.copyRaw(os, size);\n                                    } else {    \n                                        // data are related to our section and document:\n                                        // feed the new list with the GIDs\n                                        previousGID = 0;\n    \t\t\t\t                    for (int j = 0; j < termCount; j++) {                                            \n                                            delta = is.readLong();\n                                            storedGID = previousGID + delta;\n    \t\t\t\t                        freq = is.readInt();\n    \t\t\t\t                        // add the node to the new list if it is not \n    \t\t\t\t                        // in the list of removed nodes\n    \t\t\t\t                        if (!storedOccurencesList.contains(storedGID)) {\n                                                for (int k = 0; k < freq; k++) {\n                                                    newOccurencesList.add(storedGID, is.readInt());\n                                                }\n    \t\t\t\t                        } else {\n                                                is.skip(freq);\n                                            }\n                                            previousGID = storedGID;\n    \t\t\t\t                    }\n    \t\t\t\t                }                                    \n    \t\t\t\t            }\n                            } catch (EOFException e) {\n                                //Is it expected ? -pb\n                                LOG.warn(e.getMessage(), e);                            \n                            }                                \n                            //append the data from the new list\n                            if(newOccurencesList.getSize() > 0) {\n                                termCount = newOccurencesList.getTermCount();\n                                //Don't forget this one\n                                newOccurencesList.sort();                                \n                                os.writeInt(this.doc.getDocId());                           \n                                switch (currentSection) {\n                                    case TEXT_SECTION :\n                                        os.writeByte(TEXT_SECTION);\n                                        break;\n                                    case ATTRIBUTE_SECTION :\n                                        os.writeByte(ATTRIBUTE_SECTION);\n                                        break;\n                                    default :\n                                        throw new IllegalArgumentException(\"Invalid inverted index\");\n                                }                                      \n                                os.writeInt(termCount);\n                                lenOffset = os.position();\n                                os.writeFixedInt(0);                                \n                                previousGID = 0;\n                                for (int m = 0; m < newOccurencesList.getSize(); ) {\n                                    delta = newOccurencesList.nodes[m] - previousGID;\n                                    os.writeLong(delta);                                \n                                    freq = newOccurencesList.getOccurrences(m);\n                                    os.writeInt(freq);\n                                    for (int n = 0; n < freq; n++) {\n                                        os.writeInt(newOccurencesList.offsets[m + n]);\n                                    }\n                                    previousGID = newOccurencesList.nodes[m];\n                                    m += freq;\n                                }\n                                os.writeFixedInt(lenOffset, os.position() - lenOffset - 4);\n                            }                            \n\t\t\t\t\t    }\n                        //Store the data\n\t\t\t\t\t    if(os.data().size() == 0) {\t\t\t\t    \t\n\t\t\t\t\t\t\tdbTokens.remove(ref);\t\t\t\t\t\t\t\n\t\t\t\t\t    } else {                           \n\t\t\t\t\t        if (value == null)\n                                //TOUNDERSTAND : is this ever called ? -pb\n\t\t\t\t\t            if (dbTokens.put(ref, os.data()) == BFile.UNKNOWN_ADDRESS) {\n                                    LOG.error(\"Could not put index data for token '\" +  token + \"'\");  \n                                }                    \n\t\t\t\t\t        else\n\t\t\t\t\t            if (dbTokens.update(value.getAddress(), ref, os.data()) == BFile.UNKNOWN_ADDRESS) {\n                                    LOG.error(\"Could not update index data for token '\" +  token + \"'\");  \n                                }                    \t\t\t\t\t\t    \n\t\t\t\t\t    }\n\t\t\t\t\t} catch (LockException e) {\n                        LOG.warn(\"Failed to acquire lock for '\" + dbTokens.getFile().getName() + \"'\", e);\n                    } catch (ReadOnlyException e) {\n                        LOG.warn(\"Read-only error on '\" + dbTokens.getFile().getName() + \"'\", e);\n                    } catch (IOException e) {\n                        LOG.error(e.getMessage(), e);\n                    } finally {\n\t\t\t\t\t    lock.release();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\twords[currentSection].clear();\n\t\t\t}\n\t\t}","id":13763,"modified_method":"/**\n\t\t * Remove the entries in the current list from the index.\n\t\t */\n        //TODO: use VariableInputStream\n\t\tpublic void remove() {\n\t\t    //Return early\n\t\t\tif (doc == null)\n\t\t\t\treturn;                    \n            final short collectionId = this.doc.getCollection().getId();\n            final Lock lock = dbTokens.getLock();\n            for (byte currentSection = 0; currentSection <= ATTRIBUTE_SECTION; currentSection++) {\n\t\t\t\tfor (Iterator i = words[currentSection].entrySet().iterator(); i.hasNext();) {\n                    //Compute a key for the token\n                    Map.Entry entry = (Map.Entry) i.next();\n                    OccurrenceList storedOccurencesList = (OccurrenceList) entry.getValue();\n                    String token = (String) entry.getKey();                        \n                    WordRef ref = new WordRef(collectionId, token);\n                    OccurrenceList newOccurencesList = new OccurrenceList();\n                    os.clear();\n                    try {\n                        lock.acquire(Lock.WRITE_LOCK);\n                        Value value = dbTokens.get(ref);\n                        //Does the token already has data in the index ?\n\t\t\t\t\t    if (value != null) {\n\t\t\t\t\t        //Add its data to the new list    \n                            VariableByteArrayInput is = new VariableByteArrayInput(value.getData());\n                            try {\n    \t\t\t\t            while (is.available() > 0) {\n                                    int storedDocId = is.readInt();\n                                    byte storedSection = is.readByte();\n                                    int termCount = is.readInt();\n                                    //TOUNDERSTAND -pb           \n                                    int size = is.readFixedInt();\n    \t\t\t\t                if (storedSection != currentSection || storedDocId != this.doc.getDocId()) {\n                                        // data are related to another section or document:\n                                        // append them to any existing data\n                                        os.writeInt(storedDocId);\n                                        os.writeByte(storedSection);\n                                        os.writeInt(termCount);\n                                        os.writeFixedInt(size);\n                                        is.copyRaw(os, size);\n                                    } else {    \n                                        // data are related to our section and document:\n                                        // feed the new list with the GIDs\n                                        long previousGID = 0;\n    \t\t\t\t                    for (int j = 0; j < termCount; j++) {                                            \n                                            long delta = is.readLong();\n                                            long storedGID = previousGID + delta;\n                                            int freq = is.readInt();\n    \t\t\t\t                        // add the node to the new list if it is not \n    \t\t\t\t                        // in the list of removed nodes\n    \t\t\t\t                        if (!storedOccurencesList.contains(storedGID)) {\n                                                for (int k = 0; k < freq; k++) {\n                                                    newOccurencesList.add(storedGID, is.readInt());\n                                                }\n    \t\t\t\t                        } else {\n                                                is.skip(freq);\n                                            }\n                                            previousGID = storedGID;\n    \t\t\t\t                    }\n    \t\t\t\t                }                                    \n    \t\t\t\t            }\n                            } catch (EOFException e) {\n                                //Is it expected ? -pb\n                                LOG.warn(e.getMessage(), e);                            \n                            }                                \n                            //append the data from the new list\n                            if(newOccurencesList.getSize() > 0) {\n                                int termCount = newOccurencesList.getTermCount();\n                                //Don't forget this one\n                                newOccurencesList.sort();                                \n                                os.writeInt(this.doc.getDocId());                           \n                                switch (currentSection) {\n                                    case TEXT_SECTION :\n                                        os.writeByte(TEXT_SECTION);\n                                        break;\n                                    case ATTRIBUTE_SECTION :\n                                        os.writeByte(ATTRIBUTE_SECTION);\n                                        break;\n                                    default :\n                                        throw new IllegalArgumentException(\"Invalid inverted index\");\n                                }                                      \n                                os.writeInt(termCount);\n                                //TOUNDERSTAND -pb           \n                                int lenOffset = os.position();\n                                os.writeFixedInt(0);                                \n                                long previousGID = 0;\n                                for (int m = 0; m < newOccurencesList.getSize(); ) {\n                                    long delta = newOccurencesList.nodes[m] - previousGID;\n                                    os.writeLong(delta);                                \n                                    int freq = newOccurencesList.getOccurrences(m);\n                                    os.writeInt(freq);\n                                    for (int n = 0; n < freq; n++) {\n                                        os.writeInt(newOccurencesList.offsets[m + n]);\n                                    }\n                                    previousGID = newOccurencesList.nodes[m];\n                                    m += freq;\n                                }\n                                os.writeFixedInt(lenOffset, os.position() - lenOffset - 4);\n                            }                            \n\t\t\t\t\t    }\n                        //Store the data\n\t\t\t\t\t    if(os.data().size() == 0) {\t\t\t\t    \t\n\t\t\t\t\t\t\tdbTokens.remove(ref);\t\t\t\t\t\t\t\n\t\t\t\t\t    } else {                           \n\t\t\t\t\t        if (value == null)\n                                //TOUNDERSTAND : is this ever called ? -pb\n\t\t\t\t\t            if (dbTokens.put(ref, os.data()) == BFile.UNKNOWN_ADDRESS) {\n                                    LOG.error(\"Could not put index data for token '\" +  token + \"'\");  \n                                }                    \n\t\t\t\t\t        else\n\t\t\t\t\t            if (dbTokens.update(value.getAddress(), ref, os.data()) == BFile.UNKNOWN_ADDRESS) {\n                                    LOG.error(\"Could not update index data for token '\" +  token + \"'\");  \n                                }                    \t\t\t\t\t\t    \n\t\t\t\t\t    }\n\t\t\t\t\t} catch (LockException e) {\n                        LOG.warn(\"Failed to acquire lock for '\" + dbTokens.getFile().getName() + \"'\", e);\n                    } catch (ReadOnlyException e) {\n                        LOG.warn(\"Read-only error on '\" + dbTokens.getFile().getName() + \"'\", e);\n                    } catch (IOException e) {\n                        LOG.error(e.getMessage(), e);\n                    } finally {\n\t\t\t\t\t    lock.release();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\twords[currentSection].clear();\n\t\t\t}\n\t\t}","commit_id":"9cd56baf00e1354157c2c96b9270bbc2a2e3c1ca","url":"https://github.com/eXist-db/exist"},{"original_method":"@NonNls\n    private static String removeParensFromParenthesizedExpression(\n            @NotNull PsiParenthesizedExpression parenthesizedExpression){\n        PsiExpression body = parenthesizedExpression.getExpression();\n        while(body instanceof PsiParenthesizedExpression){\n            final PsiParenthesizedExpression innerParenthesizedExpression =\n                    (PsiParenthesizedExpression)body;\n            body = innerParenthesizedExpression.getExpression();\n        }\n        if(!(parenthesizedExpression.getParent() instanceof PsiExpression)){\n            return removeParentheses(body);\n        }\n        final PsiExpression parentExpression =\n                (PsiExpression) parenthesizedExpression.getParent();\n        final int parentPrecedence = getPrecedence(parentExpression);\n        final int childPrecedence = getPrecedence(body);\n        if(parentPrecedence < childPrecedence){\n            return '(' + removeParentheses(body) + ')';\n        } else if(parentPrecedence == childPrecedence){\n            if(parentExpression instanceof PsiBinaryExpression &&\n               body instanceof PsiBinaryExpression){\n                final PsiBinaryExpression parentBinaryExpression =\n                        (PsiBinaryExpression)parentExpression;\n                final PsiJavaToken parentBinaryOperationSign =\n                        parentBinaryExpression.getOperationSign();\n                final IElementType parentOperator =\n                        parentBinaryOperationSign.getTokenType();\n                final PsiBinaryExpression bodyBinaryExpression =\n                        (PsiBinaryExpression)body;\n                final PsiJavaToken bodyBinaryOperationSign =\n                        bodyBinaryExpression.getOperationSign();\n                final IElementType bodyOperator =\n                        bodyBinaryOperationSign.getTokenType();\n                final PsiType parentType = parentBinaryExpression.getType();\n                final PsiType bodyType = body.getType();\n                if(parentType != null && parentType.equals(bodyType) &&\n                        parentOperator.equals(bodyOperator)) {\n                    final PsiExpression rhs =\n                            parentBinaryExpression.getROperand();\n                    if (!PsiTreeUtil.isAncestor(rhs, body, true) ||\n                            isCommutativeBinaryOperator(bodyOperator)) {\n                        return removeParentheses(body);\n                    }\n                }\n                return '(' + removeParentheses(body) + ')';\n            } else{\n                return removeParentheses(body);\n            }\n        } else{\n            return removeParentheses(body);\n        }\n    }","id":13764,"modified_method":"@NonNls\n    private static void removeParensFromParenthesizedExpression(\n            @NotNull PsiParenthesizedExpression parenthesizedExpression)\n            throws IncorrectOperationException {\n        PsiExpression body = parenthesizedExpression.getExpression();\n        while(body instanceof PsiParenthesizedExpression){\n            final PsiParenthesizedExpression innerParenthesizedExpression =\n                    (PsiParenthesizedExpression)body;\n            body = innerParenthesizedExpression.getExpression();\n        }\n        if (body == null) {\n            parenthesizedExpression.delete();\n            return;\n        }\n        final PsiElement parent = parenthesizedExpression.getParent();\n        if(!(parent instanceof PsiExpression)){\n            final PsiExpression newExpression =\n                    (PsiExpression) parenthesizedExpression.replace(body);\n            removeParentheses(newExpression);\n            return;\n        }\n        final PsiExpression parentExpression = (PsiExpression) parent;\n        final int parentPrecedence = getPrecedence(parentExpression);\n        final int childPrecedence = getPrecedence(body);\n        if(parentPrecedence < childPrecedence){\n            final PsiElement bodyParent = body.getParent();\n            final PsiParenthesizedExpression newParenthesizedExpression =\n                    (PsiParenthesizedExpression)\n                            parenthesizedExpression.replace(bodyParent);\n            final PsiExpression expression =\n                    newParenthesizedExpression.getExpression();\n            if (expression != null) {\n                removeParentheses(expression);\n            }\n        } else if(parentPrecedence == childPrecedence){\n            if(parentExpression instanceof PsiBinaryExpression &&\n               body instanceof PsiBinaryExpression){\n                final PsiBinaryExpression parentBinaryExpression =\n                        (PsiBinaryExpression)parentExpression;\n                final IElementType parentOperator =\n                        parentBinaryExpression.getOperationTokenType();\n                final PsiBinaryExpression bodyBinaryExpression =\n                        (PsiBinaryExpression)body;\n                final IElementType bodyOperator =\n                        bodyBinaryExpression.getOperationTokenType();\n                final PsiType parentType = parentBinaryExpression.getType();\n                final PsiType bodyType = body.getType();\n                if(parentType != null && parentType.equals(bodyType) &&\n                        parentOperator.equals(bodyOperator)) {\n                    final PsiExpression rhs =\n                            parentBinaryExpression.getROperand();\n                    if (!PsiTreeUtil.isAncestor(rhs, body, true) ||\n                            isCommutativeBinaryOperator(bodyOperator)) {\n                        //final PsiElementFactory factory =\n                        //        JavaPsiFacade.getInstance(\n                        //                parenthesizedExpression.getProject())\n                        //                .getElementFactory();\n                        // todo workaround automatic insertion of parentheses by psi here\n                        final PsiExpression newExpression =\n                                (PsiExpression)\n                                        parenthesizedExpression.replace(body);\n                        removeParentheses(newExpression);\n                        return;\n                    }\n                }\n                final PsiExpression newExpression =\n                        (PsiExpression) parenthesizedExpression.replace(body);\n                removeParentheses(newExpression);\n            } else{\n                final PsiExpression newExpression =\n                        (PsiExpression) parenthesizedExpression.replace(body);\n                removeParentheses(newExpression);\n            }\n        } else{\n            final PsiExpression newExpression =\n                    (PsiExpression) parenthesizedExpression.replace(body);\n            removeParentheses(newExpression);\n        }\n    }","commit_id":"d4823ed297d1569b1f3db6e86def95e4860e7a25","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NonNls\n    private static String removeParensFromPrefixExpression(\n            @NotNull PsiPrefixExpression prefixExpression){\n        final PsiExpression body = prefixExpression.getOperand();\n        final PsiJavaToken sign = prefixExpression.getOperationSign();\n        final String operand = sign.getText();\n        return operand + removeParentheses(body);\n    }","id":13765,"modified_method":"@NonNls\n    private static void removeParensFromPrefixExpression(\n            @NotNull PsiPrefixExpression prefixExpression)\n            throws IncorrectOperationException {\n        final PsiExpression operand = prefixExpression.getOperand();\n        if (operand != null) {\n            removeParentheses(operand);\n        }\n    }","commit_id":"d4823ed297d1569b1f3db6e86def95e4860e7a25","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NonNls\n    private static String removeParensFromConditionalExpression(\n            @NotNull PsiConditionalExpression conditionalExpression){\n        final PsiExpression condition = conditionalExpression.getCondition();\n        final PsiExpression thenBranch =\n                conditionalExpression.getThenExpression();\n        final PsiExpression elseBranch =\n                conditionalExpression.getElseExpression();\n        return removeParentheses(condition) + '?' +\n               removeParentheses(thenBranch) + ':' +\n               removeParentheses(elseBranch);\n    }","id":13766,"modified_method":"@NonNls\n    private static void removeParensFromConditionalExpression(\n            @NotNull PsiConditionalExpression conditionalExpression)\n            throws IncorrectOperationException {\n        final PsiExpression condition = conditionalExpression.getCondition();\n        removeParentheses(condition);\n        final PsiExpression thenBranch =\n                conditionalExpression.getThenExpression();\n        if (thenBranch != null) {\n            removeParentheses(thenBranch);\n        }\n        final PsiExpression elseBranch =\n                conditionalExpression.getElseExpression();\n        if (elseBranch != null) {\n            removeParentheses(elseBranch);\n        }\n    }","commit_id":"d4823ed297d1569b1f3db6e86def95e4860e7a25","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NonNls\n    private static String removeParensFromInstanceOfExpression(\n            @NotNull PsiInstanceOfExpression instanceofExpression){\n        final PsiExpression body = instanceofExpression.getOperand();\n        final PsiTypeElement type = instanceofExpression.getCheckType();\n        final String typeText;\n        if (type == null) {\n            typeText = \"\";\n        } else {\n            typeText = type.getText();\n        }\n        return removeParentheses(body) + ' ' + PsiKeyword.INSTANCEOF + ' ' +\n               typeText;\n    }","id":13767,"modified_method":"@NonNls\n    private static void removeParensFromInstanceOfExpression(\n            @NotNull PsiInstanceOfExpression instanceofExpression)\n            throws IncorrectOperationException {\n        final PsiExpression operand = instanceofExpression.getOperand();\n        removeParentheses(operand);\n    }","commit_id":"d4823ed297d1569b1f3db6e86def95e4860e7a25","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static String removeParentheses(@Nullable PsiExpression expression){\n        if (expression == null){\n            return \"\";\n        }\n        if(expression instanceof PsiMethodCallExpression){\n            final PsiMethodCallExpression methCall =\n                    (PsiMethodCallExpression)expression;\n            return removeParensFromMethodCallExpression(methCall);\n        }\n        if(expression instanceof PsiReferenceExpression){\n            final PsiReferenceExpression referenceExpression =\n                    (PsiReferenceExpression)expression;\n            return removeParensFromReferenceExpression(referenceExpression);\n        }\n        if(expression instanceof PsiNewExpression){\n            final PsiNewExpression newExpression = (PsiNewExpression)expression;\n            return removeParensFromNewExpression(newExpression);\n        }\n        if(expression instanceof PsiAssignmentExpression){\n            final PsiAssignmentExpression assignmentExpression =\n                    (PsiAssignmentExpression)expression;\n            return removeParensFromAssignmentExpression(assignmentExpression);\n        }\n        if(expression instanceof PsiArrayInitializerExpression){\n            final PsiArrayInitializerExpression arrayInitializerExpression =\n                    (PsiArrayInitializerExpression)expression;\n            return removeParensFromArrayInitializerExpression(\n                    arrayInitializerExpression);\n        }\n        if(expression instanceof PsiTypeCastExpression){\n            final PsiTypeCastExpression typeCastExpression =\n                    (PsiTypeCastExpression)expression;\n            return removeParensFromTypeCastExpression(typeCastExpression);\n        }\n        if(expression instanceof PsiArrayAccessExpression){\n            final PsiArrayAccessExpression arrayAccessExpression =\n                    (PsiArrayAccessExpression)expression;\n            return removeParensFromArrayAccessExpression(arrayAccessExpression);\n        }\n        if(expression instanceof PsiPrefixExpression){\n            final PsiPrefixExpression prefixExpression =\n                    (PsiPrefixExpression)expression;\n            return removeParensFromPrefixExpression(prefixExpression);\n        }\n        if(expression instanceof PsiPostfixExpression){\n            final PsiPostfixExpression postfixExpression =\n                    (PsiPostfixExpression)expression;\n            return removeParensFromPostfixExpression(postfixExpression);\n        }\n        if(expression instanceof PsiBinaryExpression){\n            final PsiBinaryExpression binaryExpression =\n                    (PsiBinaryExpression)expression;\n            return removeParensFromBinaryExpression(binaryExpression);\n        }\n        if(expression instanceof PsiInstanceOfExpression){\n            final PsiInstanceOfExpression instanceofExpression =\n                    (PsiInstanceOfExpression)expression;\n            return removeParensFromInstanceOfExpression(instanceofExpression);\n        }\n        if(expression instanceof PsiConditionalExpression){\n            final PsiConditionalExpression conditionalExpression =\n                    (PsiConditionalExpression)expression;\n            return removeParensFromConditionalExpression(conditionalExpression);\n        }\n        if(expression instanceof PsiParenthesizedExpression){\n            final PsiParenthesizedExpression parenthesizedExpression =\n                    (PsiParenthesizedExpression)expression;\n            return removeParensFromParenthesizedExpression(\n                    parenthesizedExpression);\n        }\n        return expression.getText();\n    }","id":13768,"modified_method":"public static void removeParentheses(@NotNull PsiExpression expression)\n            throws IncorrectOperationException {\n        if(expression instanceof PsiMethodCallExpression){\n            final PsiMethodCallExpression methodCall =\n                    (PsiMethodCallExpression)expression;\n            removeParensFromMethodCallExpression(methodCall);\n        }\n        if(expression instanceof PsiReferenceExpression){\n            final PsiReferenceExpression referenceExpression =\n                    (PsiReferenceExpression)expression;\n            removeParensFromReferenceExpression(referenceExpression);\n        }\n        if(expression instanceof PsiNewExpression){\n            final PsiNewExpression newExpression = (PsiNewExpression)expression;\n            removeParensFromNewExpression(newExpression);\n        }\n        if(expression instanceof PsiAssignmentExpression){\n            final PsiAssignmentExpression assignmentExpression =\n                    (PsiAssignmentExpression)expression;\n            removeParensFromAssignmentExpression(assignmentExpression);\n        }\n        if(expression instanceof PsiArrayInitializerExpression){\n            final PsiArrayInitializerExpression arrayInitializerExpression =\n                    (PsiArrayInitializerExpression)expression;\n            removeParensFromArrayInitializerExpression(\n                    arrayInitializerExpression);\n        }\n        if(expression instanceof PsiTypeCastExpression){\n            final PsiTypeCastExpression typeCastExpression =\n                    (PsiTypeCastExpression)expression;\n            removeParensFromTypeCastExpression(typeCastExpression);\n        }\n        if(expression instanceof PsiArrayAccessExpression){\n            final PsiArrayAccessExpression arrayAccessExpression =\n                    (PsiArrayAccessExpression)expression;\n            removeParensFromArrayAccessExpression(arrayAccessExpression);\n        }\n        if(expression instanceof PsiPrefixExpression){\n            final PsiPrefixExpression prefixExpression =\n                    (PsiPrefixExpression)expression;\n            removeParensFromPrefixExpression(prefixExpression);\n        }\n        if(expression instanceof PsiPostfixExpression){\n            final PsiPostfixExpression postfixExpression =\n                    (PsiPostfixExpression)expression;\n            removeParensFromPostfixExpression(postfixExpression);\n        }\n        if(expression instanceof PsiBinaryExpression){\n            final PsiBinaryExpression binaryExpression =\n                    (PsiBinaryExpression)expression;\n            removeParensFromBinaryExpression(binaryExpression);\n        }\n        if(expression instanceof PsiInstanceOfExpression){\n            final PsiInstanceOfExpression instanceofExpression =\n                    (PsiInstanceOfExpression)expression;\n            removeParensFromInstanceOfExpression(instanceofExpression);\n        }\n        if(expression instanceof PsiConditionalExpression){\n            final PsiConditionalExpression conditionalExpression =\n                    (PsiConditionalExpression)expression;\n            removeParensFromConditionalExpression(conditionalExpression);\n        }\n        if(expression instanceof PsiParenthesizedExpression){\n            final PsiParenthesizedExpression parenthesizedExpression =\n                    (PsiParenthesizedExpression)expression;\n            removeParensFromParenthesizedExpression(\n                    parenthesizedExpression);\n        }\n    }","commit_id":"d4823ed297d1569b1f3db6e86def95e4860e7a25","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NonNls\n    private static String removeParensFromAssignmentExpression(\n            @NotNull PsiAssignmentExpression assignment){\n        final PsiExpression lhs = assignment.getLExpression();\n        final PsiExpression rhs = assignment.getRExpression();\n        final PsiJavaToken sign = assignment.getOperationSign();\n        return removeParentheses(lhs) + ' ' + sign.getText() + ' ' +\n               removeParentheses(rhs);\n    }","id":13769,"modified_method":"@NonNls\n    private static void removeParensFromAssignmentExpression(\n            @NotNull PsiAssignmentExpression assignment)\n            throws IncorrectOperationException {\n        final PsiExpression lhs = assignment.getLExpression();\n        final PsiExpression rhs = assignment.getRExpression();\n        removeParentheses(lhs);\n        if (rhs != null) {\n            removeParentheses(rhs);\n        }\n    }","commit_id":"d4823ed297d1569b1f3db6e86def95e4860e7a25","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NonNls\n    private static String removeParensFromPostfixExpression(\n            @NotNull PsiPostfixExpression postfixExpression){\n        final PsiExpression body = postfixExpression.getOperand();\n        final PsiJavaToken sign = postfixExpression.getOperationSign();\n        final String operand = sign.getText();\n        return removeParentheses(body) + operand;\n    }","id":13770,"modified_method":"@NonNls\n    private static void removeParensFromPostfixExpression(\n            @NotNull PsiPostfixExpression postfixExpression)\n            throws IncorrectOperationException {\n        final PsiExpression operand = postfixExpression.getOperand();\n        removeParentheses(operand);\n    }","commit_id":"d4823ed297d1569b1f3db6e86def95e4860e7a25","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NonNls\n    private static String removeParensFromArrayAccessExpression(\n            @NotNull PsiArrayAccessExpression arrayAccessExpression){\n        final PsiExpression arrayExp =\n                arrayAccessExpression.getArrayExpression();\n        final PsiExpression indexExp =\n                arrayAccessExpression.getIndexExpression();\n        return removeParentheses(arrayExp) + '[' + removeParentheses(indexExp) +\n               ']';\n    }","id":13771,"modified_method":"@NonNls\n    private static void removeParensFromArrayAccessExpression(\n            @NotNull PsiArrayAccessExpression arrayAccessExpression)\n            throws IncorrectOperationException {\n        final PsiExpression arrayExpression =\n                arrayAccessExpression.getArrayExpression();\n        removeParentheses(arrayExpression);\n        final PsiExpression indexExpression =\n                arrayAccessExpression.getIndexExpression();\n        if (indexExpression != null) {\n            removeParentheses(indexExpression);\n        }\n    }","commit_id":"d4823ed297d1569b1f3db6e86def95e4860e7a25","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static String removeParensFromMethodCallExpression(\n            @NotNull PsiMethodCallExpression methodCallExpression){\n        final PsiReferenceExpression target =\n                methodCallExpression.getMethodExpression();\n        final PsiExpressionList argumentList =\n                methodCallExpression.getArgumentList();\n        final PsiExpression[] arguments = argumentList.getExpressions();\n        final String methodCallText = methodCallExpression.getText();\n        final int length = methodCallText.length();\n        @NonNls final StringBuilder out = new StringBuilder(length);\n        final String strippedTarget = removeParentheses(target);\n        out.append(strippedTarget);\n        out.append('(');\n        for(int i = 0; i < arguments.length; i++){\n            final PsiExpression argument = arguments[i];\n            if(i != 0){\n                out.append(',');\n            }\n            final String strippedArg = removeParentheses(argument);\n            out.append(strippedArg);\n        }\n        out.append(')');\n        return out.toString();\n    }","id":13772,"modified_method":"private static void removeParensFromMethodCallExpression(\n            @NotNull PsiMethodCallExpression methodCallExpression)\n            throws IncorrectOperationException {\n        final PsiReferenceExpression target =\n                methodCallExpression.getMethodExpression();\n        final PsiExpressionList argumentList =\n                methodCallExpression.getArgumentList();\n        final PsiExpression[] arguments = argumentList.getExpressions();\n        removeParentheses(target);\n        for (final PsiExpression argument : arguments) {\n            removeParentheses(argument);\n        }\n    }","commit_id":"d4823ed297d1569b1f3db6e86def95e4860e7a25","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NonNls\n    private static String removeParensFromReferenceExpression(\n            @NotNull PsiReferenceExpression referenceExpression){\n        final PsiExpression qualifier =\n                referenceExpression.getQualifierExpression();\n        if(qualifier != null){\n            final PsiType[] typeParameters =\n                    referenceExpression.getTypeParameters();\n            if (typeParameters.length > 0) {\n                @NonNls final StringBuilder result = new StringBuilder();\n                result.append(removeParentheses(qualifier));\n                result.append(\".<\");\n                result.append(typeParameters[0].getCanonicalText());\n                for (int i = 1; i < typeParameters.length; i++) {\n                    final PsiType typeParameter = typeParameters[i];\n                    result.append(',');\n                    result.append(typeParameter.getCanonicalText());\n                }\n                result.append('>');\n                result.append(referenceExpression.getReferenceName());\n                return result.toString();\n            } else {\n                return removeParentheses(qualifier) + '.' +\n                        referenceExpression.getReferenceName();\n            }\n        } else{\n            return referenceExpression.getText();\n        }\n    }","id":13773,"modified_method":"@NonNls\n    private static void removeParensFromReferenceExpression(\n            @NotNull PsiReferenceExpression referenceExpression)\n            throws IncorrectOperationException {\n        final PsiExpression qualifier =\n                referenceExpression.getQualifierExpression();\n        if(qualifier != null){\n            removeParentheses(qualifier);\n        }\n    }","commit_id":"d4823ed297d1569b1f3db6e86def95e4860e7a25","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NonNls\n    private static String removeParensFromTypeCastExpression(\n            @NotNull PsiTypeCastExpression typeCastExpression){\n        final PsiExpression body = typeCastExpression.getOperand();\n        final PsiTypeElement type = typeCastExpression.getCastType();\n        final String typeText;\n        if (type == null) {\n            typeText =  \"\";\n        } else {\n            typeText = type.getText();\n        }\n        return '(' + typeText + ')' + removeParentheses(body);\n    }","id":13774,"modified_method":"@NonNls\n    private static void removeParensFromTypeCastExpression(\n            @NotNull PsiTypeCastExpression typeCastExpression)\n            throws IncorrectOperationException {\n        final PsiExpression operand = typeCastExpression.getOperand();\n        if (operand != null) {\n            removeParentheses(operand);\n        }\n    }","commit_id":"d4823ed297d1569b1f3db6e86def95e4860e7a25","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static String removeParensFromArrayInitializerExpression(\n            @NotNull PsiArrayInitializerExpression arrayInitializerExpression){\n        final PsiExpression[] contents =\n                arrayInitializerExpression.getInitializers();\n        final String text = arrayInitializerExpression.getText();\n        final int textLength = text.length();\n        @NonNls final StringBuilder out = new StringBuilder(textLength);\n        out.append('{');\n        for(int i = 0; i < contents.length; i++){\n            final PsiExpression arg = contents[i];\n            if(i != 0){\n                out.append(',');\n            }\n            final String strippedArg = removeParentheses(arg);\n            out.append(strippedArg);\n        }\n        out.append('}');\n        return out.toString();\n    }","id":13775,"modified_method":"private static void removeParensFromArrayInitializerExpression(\n            @NotNull PsiArrayInitializerExpression arrayInitializerExpression)\n            throws IncorrectOperationException {\n        final PsiExpression[] initializers =\n                arrayInitializerExpression.getInitializers();\n        for (final PsiExpression initializer : initializers) {\n            removeParentheses(initializer);\n        }\n    }","commit_id":"d4823ed297d1569b1f3db6e86def95e4860e7a25","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static String removeParensFromNewExpression(\n            @NotNull PsiNewExpression newExpression){\n        final PsiExpression[] dimensions = newExpression.getArrayDimensions();\n        final String[] strippedDimensions = new String[dimensions.length];\n        for(int i = 0; i < dimensions.length; i++){\n            strippedDimensions[i] = removeParentheses(dimensions[i]);\n        }\n        final PsiExpression qualifier = newExpression.getQualifier();\n        final PsiExpression arrayInitializer =\n                newExpression.getArrayInitializer();\n        String strippedInitializer = null;\n        if(arrayInitializer != null){\n            strippedInitializer = removeParentheses(arrayInitializer);\n        }\n        final PsiExpressionList argumentList = newExpression.getArgumentList();\n        String[] strippedArgs = null;\n        if(argumentList != null){\n            final PsiExpression[] args = argumentList.getExpressions();\n            strippedArgs = new String[args.length];\n            for(int i = 0; i < args.length; i++){\n                strippedArgs[i] = removeParentheses(args[i]);\n            }\n        }\n        final String expressionText = newExpression.getText();\n        if(qualifier != null){\n            return expressionText;\n        }\n        final PsiElement[] children = newExpression.getChildren();\n        for(final PsiElement child : children){\n            if(child instanceof PsiAnonymousClass){\n                return expressionText;\n            }\n        }\n        final int length = expressionText.length();\n        @NonNls final StringBuilder out = new StringBuilder(length);\n        out.append(PsiKeyword.NEW + ' ');\n        final PsiJavaCodeReferenceElement classReference =\n                newExpression.getClassReference();\n        final PsiType type = newExpression.getType();\n        final String text;\n        if(classReference == null){\n            if (type != null) {\n                final PsiType componentType = type.getDeepComponentType();\n                text = componentType.getCanonicalText();\n            } else {\n                text = \"\";\n            }\n        } else {\n            text = classReference.getText();\n        }\n        out.append(text);\n        if(strippedArgs != null){\n            out.append('(');\n            for(int i = 0; i < strippedArgs.length; i++){\n                if(i != 0){\n                    out.append(',');\n                }\n                out.append(strippedArgs[i]);\n            }\n            out.append(')');\n        }\n        if(strippedDimensions.length > 0){\n            for(String strippedDimension : strippedDimensions){\n                out.append('[');\n                out.append(strippedDimension);\n                out.append(']');\n            }\n        } else if (type != null){\n            final int dimensionCount = type.getArrayDimensions();\n            for(int i = 0; i < dimensionCount; i++){\n                out.append(\"[]\");\n            }\n        }\n        if(strippedInitializer != null){\n            out.append(strippedInitializer);\n        }\n        return out.toString();\n    }","id":13776,"modified_method":"private static void removeParensFromNewExpression(\n            @NotNull PsiNewExpression newExpression)\n            throws IncorrectOperationException {\n        final PsiExpression[] dimensions = newExpression.getArrayDimensions();\n        for (PsiExpression dimension : dimensions) {\n            removeParentheses(dimension);\n        }\n        final PsiExpression qualifier = newExpression.getQualifier();\n        if(qualifier != null){\n            removeParentheses(qualifier);\n        }\n        final PsiExpression arrayInitializer =\n                newExpression.getArrayInitializer();\n        if(arrayInitializer != null){\n            removeParentheses(arrayInitializer);\n        }\n        final PsiExpressionList argumentList = newExpression.getArgumentList();\n        if(argumentList != null){\n            final PsiExpression[] args = argumentList.getExpressions();\n            for (PsiExpression arg : args) {\n                removeParentheses(arg);\n            }\n        }\n    }","commit_id":"d4823ed297d1569b1f3db6e86def95e4860e7a25","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NonNls\n    private static String removeParensFromBinaryExpression(\n            @NotNull PsiBinaryExpression binaryExpression){\n        final PsiExpression lhs = binaryExpression.getLOperand();\n        final PsiExpression rhs = binaryExpression.getROperand();\n        final PsiJavaToken sign = binaryExpression.getOperationSign();\n        return removeParentheses(lhs) + ' ' + sign.getText() + ' '\n               + removeParentheses(rhs);\n    }","id":13777,"modified_method":"@NonNls\n    private static void removeParensFromBinaryExpression(\n            @NotNull PsiBinaryExpression binaryExpression)\n            throws IncorrectOperationException {\n        final PsiExpression lhs = binaryExpression.getLOperand();\n        removeParentheses(lhs);\n        final PsiExpression rhs = binaryExpression.getROperand();\n        if (rhs != null) {\n            removeParentheses(rhs);\n        }\n    }","commit_id":"d4823ed297d1569b1f3db6e86def95e4860e7a25","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void doFix(Project project, ProblemDescriptor descriptor)\n                throws IncorrectOperationException {\n            final PsiExpression expression =\n                    (PsiExpression)descriptor.getPsiElement();\n            final PsiElement parent = expression.getParent();\n            if (parent instanceof PsiExpression) {\n                // the psi api will reinsert the parentheses we want to remove\n                // if the parent is an expression, this prevents that.\n                final PsiExpression parentExpression = (PsiExpression)parent;\n                final String newExpression =\n                        ParenthesesUtils.removeParentheses(parentExpression);\n                replaceExpression(parentExpression, newExpression);\n            } else {\n                final String newExpression =\n                        ParenthesesUtils.removeParentheses(expression);\n                replaceExpression(expression, newExpression);\n            }\n        }","id":13778,"modified_method":"@Override\n        public void doFix(Project project, ProblemDescriptor descriptor)\n                throws IncorrectOperationException {\n            final PsiExpression expression =\n                    (PsiExpression)descriptor.getPsiElement();\n            ParenthesesUtils.removeParentheses(expression);\n        }","commit_id":"d4823ed297d1569b1f3db6e86def95e4860e7a25","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static String removeParensFromInstanceOfExpression(\n            @NotNull PsiInstanceOfExpression instanceofExpression){\n        final PsiExpression body = instanceofExpression.getOperand();\n        final PsiTypeElement type = instanceofExpression.getCheckType();\n        final String typeText;\n        if (type == null) {\n            typeText = \"\";\n        } else {\n            typeText = type.getText();\n        }\n        return removeParentheses(body) + ' ' + PsiKeyword.INSTANCEOF + ' ' +\n               typeText;\n    }","id":13779,"modified_method":"private static void removeParensFromInstanceOfExpression(\n            @NotNull PsiInstanceOfExpression instanceofExpression)\n            throws IncorrectOperationException {\n        final PsiExpression operand = instanceofExpression.getOperand();\n        removeParentheses(operand);\n    }","commit_id":"350481f998aee786aa19908ce1940f126b0af642","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static String removeParensFromTypeCastExpression(\n            @NotNull PsiTypeCastExpression typeCastExpression){\n        final PsiExpression body = typeCastExpression.getOperand();\n        final PsiTypeElement type = typeCastExpression.getCastType();\n        final String typeText;\n        if (type == null) {\n            typeText =  \"\";\n        } else {\n            typeText = type.getText();\n        }\n        return '(' + typeText + ')' + removeParentheses(body);\n    }","id":13780,"modified_method":"private static void removeParensFromTypeCastExpression(\n            @NotNull PsiTypeCastExpression typeCastExpression)\n            throws IncorrectOperationException {\n        final PsiExpression operand = typeCastExpression.getOperand();\n        if (operand != null) {\n            removeParentheses(operand);\n        }\n    }","commit_id":"350481f998aee786aa19908ce1940f126b0af642","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static String removeParensFromParenthesizedExpression(\n            @NotNull PsiParenthesizedExpression parenthesizedExpression){\n        PsiExpression body = parenthesizedExpression.getExpression();\n        while(body instanceof PsiParenthesizedExpression){\n            final PsiParenthesizedExpression innerParenthesizedExpression =\n                    (PsiParenthesizedExpression)body;\n            body = innerParenthesizedExpression.getExpression();\n        }\n        if(!(parenthesizedExpression.getParent() instanceof PsiExpression)){\n            return removeParentheses(body);\n        }\n        final PsiExpression parentExpression =\n                (PsiExpression) parenthesizedExpression.getParent();\n        final int parentPrecedence = getPrecedence(parentExpression);\n        final int childPrecedence = getPrecedence(body);\n        if(parentPrecedence < childPrecedence){\n            return '(' + removeParentheses(body) + ')';\n        } else if(parentPrecedence == childPrecedence){\n            if(parentExpression instanceof PsiBinaryExpression &&\n               body instanceof PsiBinaryExpression){\n                final PsiBinaryExpression parentBinaryExpression =\n                        (PsiBinaryExpression)parentExpression;\n                final PsiJavaToken parentBinaryOperationSign =\n                        parentBinaryExpression.getOperationSign();\n                final IElementType parentOperator =\n                        parentBinaryOperationSign.getTokenType();\n                final PsiBinaryExpression bodyBinaryExpression =\n                        (PsiBinaryExpression)body;\n                final PsiJavaToken bodyBinaryOperationSign =\n                        bodyBinaryExpression.getOperationSign();\n                final IElementType bodyOperator =\n                        bodyBinaryOperationSign.getTokenType();\n                final PsiType parentType = parentBinaryExpression.getType();\n                final PsiType bodyType = body.getType();\n                if(parentType != null && parentType.equals(bodyType) &&\n                        parentOperator.equals(bodyOperator)) {\n                    final PsiExpression rhs =\n                            parentBinaryExpression.getROperand();\n                    if (!PsiTreeUtil.isAncestor(rhs, body, true) ||\n                            isCommutativeBinaryOperator(bodyOperator)) {\n                        return removeParentheses(body);\n                    }\n                }\n                return '(' + removeParentheses(body) + ')';\n            } else{\n                return removeParentheses(body);\n            }\n        } else{\n            return removeParentheses(body);\n        }\n    }","id":13781,"modified_method":"private static void removeParensFromParenthesizedExpression(\n            @NotNull PsiParenthesizedExpression parenthesizedExpression)\n            throws IncorrectOperationException {\n        PsiExpression body = parenthesizedExpression.getExpression();\n        while(body instanceof PsiParenthesizedExpression){\n            final PsiParenthesizedExpression innerParenthesizedExpression =\n                    (PsiParenthesizedExpression)body;\n            body = innerParenthesizedExpression.getExpression();\n        }\n        if (body == null) {\n            parenthesizedExpression.delete();\n            return;\n        }\n        final PsiElement parent = parenthesizedExpression.getParent();\n        if(!(parent instanceof PsiExpression)){\n            final PsiExpression newExpression =\n                    (PsiExpression) parenthesizedExpression.replace(body);\n            removeParentheses(newExpression);\n            return;\n        }\n        final PsiExpression parentExpression = (PsiExpression) parent;\n        final int parentPrecedence = getPrecedence(parentExpression);\n        final int childPrecedence = getPrecedence(body);\n        if(parentPrecedence < childPrecedence){\n            final PsiElement bodyParent = body.getParent();\n            final PsiParenthesizedExpression newParenthesizedExpression =\n                    (PsiParenthesizedExpression)\n                            parenthesizedExpression.replace(bodyParent);\n            final PsiExpression expression =\n                    newParenthesizedExpression.getExpression();\n            if (expression != null) {\n                removeParentheses(expression);\n            }\n        } else if(parentPrecedence == childPrecedence){\n            if(parentExpression instanceof PsiBinaryExpression &&\n               body instanceof PsiBinaryExpression){\n                final PsiBinaryExpression parentBinaryExpression =\n                        (PsiBinaryExpression)parentExpression;\n                final IElementType parentOperator =\n                        parentBinaryExpression.getOperationTokenType();\n                final PsiBinaryExpression bodyBinaryExpression =\n                        (PsiBinaryExpression)body;\n                final IElementType bodyOperator =\n                        bodyBinaryExpression.getOperationTokenType();\n                final PsiType parentType = parentBinaryExpression.getType();\n                final PsiType bodyType = body.getType();\n                if(parentType != null && parentType.equals(bodyType) &&\n                        parentOperator.equals(bodyOperator)) {\n                    final PsiExpression rhs =\n                            parentBinaryExpression.getROperand();\n                    if (!PsiTreeUtil.isAncestor(rhs, body, true) ||\n                            isCommutativeBinaryOperator(bodyOperator)) {\n                        // use addAfter() + delete() instead of replace() to\n                        // workaround automatic insertion of parentheses by psi\n                        final PsiExpression newExpression = (PsiExpression)\n                                parent.addAfter(body, parenthesizedExpression);\n                        parenthesizedExpression.delete();\n                        removeParentheses(newExpression);\n                        return;\n                    }\n                }\n                final PsiExpression newExpression =\n                        (PsiExpression) parenthesizedExpression.replace(body);\n                removeParentheses(newExpression);\n            } else{\n                final PsiExpression newExpression =\n                        (PsiExpression) parenthesizedExpression.replace(body);\n                removeParentheses(newExpression);\n            }\n        } else{\n            final PsiExpression newExpression =\n                    (PsiExpression) parenthesizedExpression.replace(body);\n            removeParentheses(newExpression);\n        }\n    }","commit_id":"350481f998aee786aa19908ce1940f126b0af642","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static String removeParensFromArrayInitializerExpression(\n            @NotNull PsiArrayInitializerExpression arrayInitializerExpression){\n        final PsiExpression[] contents =\n                arrayInitializerExpression.getInitializers();\n        final String text = arrayInitializerExpression.getText();\n        final int textLength = text.length();\n        final StringBuilder out = new StringBuilder(textLength);\n        out.append('{');\n        for(int i = 0; i < contents.length; i++){\n            final PsiExpression arg = contents[i];\n            if(i != 0){\n                out.append(',');\n            }\n            final String strippedArg = removeParentheses(arg);\n            out.append(strippedArg);\n        }\n        out.append('}');\n        return out.toString();\n    }","id":13782,"modified_method":"private static void removeParensFromArrayInitializerExpression(\n            @NotNull PsiArrayInitializerExpression arrayInitializerExpression)\n            throws IncorrectOperationException {\n        final PsiExpression[] initializers =\n                arrayInitializerExpression.getInitializers();\n        for (final PsiExpression initializer : initializers) {\n            removeParentheses(initializer);\n        }\n    }","commit_id":"350481f998aee786aa19908ce1940f126b0af642","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static String removeParensFromNewExpression(\n            @NotNull PsiNewExpression newExpression){\n        final PsiExpression[] dimensions = newExpression.getArrayDimensions();\n        final String[] strippedDimensions = new String[dimensions.length];\n        for(int i = 0; i < dimensions.length; i++){\n            strippedDimensions[i] = removeParentheses(dimensions[i]);\n        }\n        final PsiExpression qualifier = newExpression.getQualifier();\n        final PsiExpression arrayInitializer =\n                newExpression.getArrayInitializer();\n        String strippedInitializer = null;\n        if(arrayInitializer != null){\n            strippedInitializer = removeParentheses(arrayInitializer);\n        }\n        final PsiExpressionList argumentList = newExpression.getArgumentList();\n        String[] strippedArgs = null;\n        if(argumentList != null){\n            final PsiExpression[] args = argumentList.getExpressions();\n            strippedArgs = new String[args.length];\n            for(int i = 0; i < args.length; i++){\n                strippedArgs[i] = removeParentheses(args[i]);\n            }\n        }\n        final String expressionText = newExpression.getText();\n        if(qualifier != null){\n            return expressionText;\n        }\n        final PsiElement[] children = newExpression.getChildren();\n        for(final PsiElement child : children){\n            if(child instanceof PsiAnonymousClass){\n                return expressionText;\n            }\n        }\n        final int length = expressionText.length();\n        final StringBuilder out = new StringBuilder(length);\n        out.append(PsiKeyword.NEW + ' ');\n        final PsiJavaCodeReferenceElement classReference =\n                newExpression.getClassReference();\n        final PsiType type = newExpression.getType();\n        final String text;\n        if(classReference == null){\n            if (type != null) {\n                final PsiType componentType = type.getDeepComponentType();\n                text = componentType.getCanonicalText();\n            } else {\n                text = \"\";\n            }\n        } else {\n            text = classReference.getText();\n        }\n        out.append(text);\n        if(strippedArgs != null){\n            out.append('(');\n            for(int i = 0; i < strippedArgs.length; i++){\n                if(i != 0){\n                    out.append(',');\n                }\n                out.append(strippedArgs[i]);\n            }\n            out.append(')');\n        }\n        if(strippedDimensions.length > 0){\n            for(String strippedDimension : strippedDimensions){\n                out.append('[');\n                out.append(strippedDimension);\n                out.append(']');\n            }\n        } else if (type != null){\n            final int dimensionCount = type.getArrayDimensions();\n            for(int i = 0; i < dimensionCount; i++){\n                out.append(\"[]\");\n            }\n        }\n        if(strippedInitializer != null){\n            out.append(strippedInitializer);\n        }\n        return out.toString();\n    }","id":13783,"modified_method":"private static void removeParensFromNewExpression(\n            @NotNull PsiNewExpression newExpression)\n            throws IncorrectOperationException {\n        final PsiExpression[] dimensions = newExpression.getArrayDimensions();\n        for (PsiExpression dimension : dimensions) {\n            removeParentheses(dimension);\n        }\n        final PsiExpression qualifier = newExpression.getQualifier();\n        if(qualifier != null){\n            removeParentheses(qualifier);\n        }\n        final PsiExpression arrayInitializer =\n                newExpression.getArrayInitializer();\n        if(arrayInitializer != null){\n            removeParentheses(arrayInitializer);\n        }\n        final PsiExpressionList argumentList = newExpression.getArgumentList();\n        if(argumentList != null){\n            final PsiExpression[] args = argumentList.getExpressions();\n            for (PsiExpression arg : args) {\n                removeParentheses(arg);\n            }\n        }\n    }","commit_id":"350481f998aee786aa19908ce1940f126b0af642","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static String removeParensFromReferenceExpression(\n            @NotNull PsiReferenceExpression referenceExpression){\n        final PsiExpression qualifier =\n                referenceExpression.getQualifierExpression();\n        if(qualifier != null){\n            final PsiType[] typeParameters =\n                    referenceExpression.getTypeParameters();\n            if (typeParameters.length > 0) {\n                final StringBuilder result = new StringBuilder();\n                result.append(removeParentheses(qualifier));\n                result.append(\".<\");\n                result.append(typeParameters[0].getCanonicalText());\n                for (int i = 1; i < typeParameters.length; i++) {\n                    final PsiType typeParameter = typeParameters[i];\n                    result.append(',');\n                    result.append(typeParameter.getCanonicalText());\n                }\n                result.append('>');\n                result.append(referenceExpression.getReferenceName());\n                return result.toString();\n            } else {\n                return removeParentheses(qualifier) + '.' +\n                        referenceExpression.getReferenceName();\n            }\n        } else{\n            return referenceExpression.getText();\n        }\n    }","id":13784,"modified_method":"private static void removeParensFromReferenceExpression(\n            @NotNull PsiReferenceExpression referenceExpression)\n            throws IncorrectOperationException {\n        final PsiExpression qualifier =\n                referenceExpression.getQualifierExpression();\n        if(qualifier != null){\n            removeParentheses(qualifier);\n        }\n    }","commit_id":"350481f998aee786aa19908ce1940f126b0af642","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static String removeParentheses(@Nullable PsiExpression expression){\n        if (expression == null){\n            return \"\";\n        }\n        if(expression instanceof PsiMethodCallExpression){\n            final PsiMethodCallExpression methCall =\n                    (PsiMethodCallExpression)expression;\n            return removeParensFromMethodCallExpression(methCall);\n        }\n        if(expression instanceof PsiReferenceExpression){\n            final PsiReferenceExpression referenceExpression =\n                    (PsiReferenceExpression)expression;\n            return removeParensFromReferenceExpression(referenceExpression);\n        }\n        if(expression instanceof PsiNewExpression){\n            final PsiNewExpression newExpression = (PsiNewExpression)expression;\n            return removeParensFromNewExpression(newExpression);\n        }\n        if(expression instanceof PsiAssignmentExpression){\n            final PsiAssignmentExpression assignmentExpression =\n                    (PsiAssignmentExpression)expression;\n            return removeParensFromAssignmentExpression(assignmentExpression);\n        }\n        if(expression instanceof PsiArrayInitializerExpression){\n            final PsiArrayInitializerExpression arrayInitializerExpression =\n                    (PsiArrayInitializerExpression)expression;\n            return removeParensFromArrayInitializerExpression(\n                    arrayInitializerExpression);\n        }\n        if(expression instanceof PsiTypeCastExpression){\n            final PsiTypeCastExpression typeCastExpression =\n                    (PsiTypeCastExpression)expression;\n            return removeParensFromTypeCastExpression(typeCastExpression);\n        }\n        if(expression instanceof PsiArrayAccessExpression){\n            final PsiArrayAccessExpression arrayAccessExpression =\n                    (PsiArrayAccessExpression)expression;\n            return removeParensFromArrayAccessExpression(arrayAccessExpression);\n        }\n        if(expression instanceof PsiPrefixExpression){\n            final PsiPrefixExpression prefixExpression =\n                    (PsiPrefixExpression)expression;\n            return removeParensFromPrefixExpression(prefixExpression);\n        }\n        if(expression instanceof PsiPostfixExpression){\n            final PsiPostfixExpression postfixExpression =\n                    (PsiPostfixExpression)expression;\n            return removeParensFromPostfixExpression(postfixExpression);\n        }\n        if(expression instanceof PsiBinaryExpression){\n            final PsiBinaryExpression binaryExpression =\n                    (PsiBinaryExpression)expression;\n            return removeParensFromBinaryExpression(binaryExpression);\n        }\n        if(expression instanceof PsiInstanceOfExpression){\n            final PsiInstanceOfExpression instanceofExpression =\n                    (PsiInstanceOfExpression)expression;\n            return removeParensFromInstanceOfExpression(instanceofExpression);\n        }\n        if(expression instanceof PsiConditionalExpression){\n            final PsiConditionalExpression conditionalExpression =\n                    (PsiConditionalExpression)expression;\n            return removeParensFromConditionalExpression(conditionalExpression);\n        }\n        if(expression instanceof PsiParenthesizedExpression){\n            final PsiParenthesizedExpression parenthesizedExpression =\n                    (PsiParenthesizedExpression)expression;\n            return removeParensFromParenthesizedExpression(\n                    parenthesizedExpression);\n        }\n        return expression.getText();\n    }","id":13785,"modified_method":"public static void removeParentheses(@NotNull PsiExpression expression)\n            throws IncorrectOperationException {\n        if(expression instanceof PsiMethodCallExpression){\n            final PsiMethodCallExpression methodCall =\n                    (PsiMethodCallExpression)expression;\n            removeParensFromMethodCallExpression(methodCall);\n        }\n        if(expression instanceof PsiReferenceExpression){\n            final PsiReferenceExpression referenceExpression =\n                    (PsiReferenceExpression)expression;\n            removeParensFromReferenceExpression(referenceExpression);\n        }\n        if(expression instanceof PsiNewExpression){\n            final PsiNewExpression newExpression = (PsiNewExpression)expression;\n            removeParensFromNewExpression(newExpression);\n        }\n        if(expression instanceof PsiAssignmentExpression){\n            final PsiAssignmentExpression assignmentExpression =\n                    (PsiAssignmentExpression)expression;\n            removeParensFromAssignmentExpression(assignmentExpression);\n        }\n        if(expression instanceof PsiArrayInitializerExpression){\n            final PsiArrayInitializerExpression arrayInitializerExpression =\n                    (PsiArrayInitializerExpression)expression;\n            removeParensFromArrayInitializerExpression(\n                    arrayInitializerExpression);\n        }\n        if(expression instanceof PsiTypeCastExpression){\n            final PsiTypeCastExpression typeCastExpression =\n                    (PsiTypeCastExpression)expression;\n            removeParensFromTypeCastExpression(typeCastExpression);\n        }\n        if(expression instanceof PsiArrayAccessExpression){\n            final PsiArrayAccessExpression arrayAccessExpression =\n                    (PsiArrayAccessExpression)expression;\n            removeParensFromArrayAccessExpression(arrayAccessExpression);\n        }\n        if(expression instanceof PsiPrefixExpression){\n            final PsiPrefixExpression prefixExpression =\n                    (PsiPrefixExpression)expression;\n            removeParensFromPrefixExpression(prefixExpression);\n        }\n        if(expression instanceof PsiPostfixExpression){\n            final PsiPostfixExpression postfixExpression =\n                    (PsiPostfixExpression)expression;\n            removeParensFromPostfixExpression(postfixExpression);\n        }\n        if(expression instanceof PsiBinaryExpression){\n            final PsiBinaryExpression binaryExpression =\n                    (PsiBinaryExpression)expression;\n            removeParensFromBinaryExpression(binaryExpression);\n        }\n        if(expression instanceof PsiInstanceOfExpression){\n            final PsiInstanceOfExpression instanceofExpression =\n                    (PsiInstanceOfExpression)expression;\n            removeParensFromInstanceOfExpression(instanceofExpression);\n        }\n        if(expression instanceof PsiConditionalExpression){\n            final PsiConditionalExpression conditionalExpression =\n                    (PsiConditionalExpression)expression;\n            removeParensFromConditionalExpression(conditionalExpression);\n        }\n        if(expression instanceof PsiParenthesizedExpression){\n            final PsiParenthesizedExpression parenthesizedExpression =\n                    (PsiParenthesizedExpression)expression;\n            removeParensFromParenthesizedExpression(\n                    parenthesizedExpression);\n        }\n    }","commit_id":"350481f998aee786aa19908ce1940f126b0af642","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static String removeParensFromArrayAccessExpression(\n            @NotNull PsiArrayAccessExpression arrayAccessExpression){\n        final PsiExpression arrayExp =\n                arrayAccessExpression.getArrayExpression();\n        final PsiExpression indexExp =\n                arrayAccessExpression.getIndexExpression();\n        return removeParentheses(arrayExp) + '[' + removeParentheses(indexExp) +\n               ']';\n    }","id":13786,"modified_method":"private static void removeParensFromArrayAccessExpression(\n            @NotNull PsiArrayAccessExpression arrayAccessExpression)\n            throws IncorrectOperationException {\n        final PsiExpression arrayExpression =\n                arrayAccessExpression.getArrayExpression();\n        removeParentheses(arrayExpression);\n        final PsiExpression indexExpression =\n                arrayAccessExpression.getIndexExpression();\n        if (indexExpression != null) {\n            removeParentheses(indexExpression);\n        }\n    }","commit_id":"350481f998aee786aa19908ce1940f126b0af642","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static String removeParensFromBinaryExpression(\n            @NotNull PsiBinaryExpression binaryExpression){\n        final PsiExpression lhs = binaryExpression.getLOperand();\n        final PsiExpression rhs = binaryExpression.getROperand();\n        final PsiJavaToken sign = binaryExpression.getOperationSign();\n        return removeParentheses(lhs) + ' ' + sign.getText() + ' '\n               + removeParentheses(rhs);\n    }","id":13787,"modified_method":"private static void removeParensFromBinaryExpression(\n            @NotNull PsiBinaryExpression binaryExpression)\n            throws IncorrectOperationException {\n        final PsiExpression lhs = binaryExpression.getLOperand();\n        removeParentheses(lhs);\n        final PsiExpression rhs = binaryExpression.getROperand();\n        if (rhs != null) {\n            removeParentheses(rhs);\n        }\n    }","commit_id":"350481f998aee786aa19908ce1940f126b0af642","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static String removeParensFromPrefixExpression(\n            @NotNull PsiPrefixExpression prefixExpression){\n        final PsiExpression body = prefixExpression.getOperand();\n        final PsiJavaToken sign = prefixExpression.getOperationSign();\n        final String operand = sign.getText();\n        return operand + removeParentheses(body);\n    }","id":13788,"modified_method":"private static void removeParensFromPrefixExpression(\n            @NotNull PsiPrefixExpression prefixExpression)\n            throws IncorrectOperationException {\n        final PsiExpression operand = prefixExpression.getOperand();\n        if (operand != null) {\n            removeParentheses(operand);\n        }\n    }","commit_id":"350481f998aee786aa19908ce1940f126b0af642","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n    public static PsiExpression stripParentheses(\n            @Nullable PsiExpression expression){\n        PsiExpression parenthesized = expression;\n        while(parenthesized instanceof PsiParenthesizedExpression){\n            final PsiParenthesizedExpression parenthesizedExpression =\n                    (PsiParenthesizedExpression)parenthesized;\n            parenthesized = parenthesizedExpression.getExpression();\n        }\n        return parenthesized;\n    }","id":13789,"modified_method":"@Nullable\n    public static PsiExpression stripParentheses(\n            @Nullable PsiExpression expression){\n        while(expression instanceof PsiParenthesizedExpression){\n            final PsiParenthesizedExpression parenthesizedExpression =\n                    (PsiParenthesizedExpression)expression;\n            expression = parenthesizedExpression.getExpression();\n        }\n        return expression;\n    }","commit_id":"350481f998aee786aa19908ce1940f126b0af642","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static String removeParensFromPostfixExpression(\n            @NotNull PsiPostfixExpression postfixExpression){\n        final PsiExpression body = postfixExpression.getOperand();\n        final PsiJavaToken sign = postfixExpression.getOperationSign();\n        final String operand = sign.getText();\n        return removeParentheses(body) + operand;\n    }","id":13790,"modified_method":"private static void removeParensFromPostfixExpression(\n            @NotNull PsiPostfixExpression postfixExpression)\n            throws IncorrectOperationException {\n        final PsiExpression operand = postfixExpression.getOperand();\n        removeParentheses(operand);\n    }","commit_id":"350481f998aee786aa19908ce1940f126b0af642","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static String removeParensFromMethodCallExpression(\n            @NotNull PsiMethodCallExpression methodCallExpression){\n        final PsiReferenceExpression target =\n                methodCallExpression.getMethodExpression();\n        final PsiExpressionList argumentList =\n                methodCallExpression.getArgumentList();\n        final PsiExpression[] args = argumentList.getExpressions();\n        final String methodCallText = methodCallExpression.getText();\n        final int length = methodCallText.length();\n        final StringBuilder out = new StringBuilder(length);\n        final String strippedTarget = removeParentheses(target);\n        out.append(strippedTarget);\n        out.append('(');\n        for(int i = 0; i < args.length; i++){\n            final PsiExpression arg = args[i];\n            if(i != 0){\n                out.append(',');\n            }\n            final String strippedArg = removeParentheses(arg);\n            out.append(strippedArg);\n        }\n        out.append(')');\n        return out.toString();\n    }","id":13791,"modified_method":"private static void removeParensFromMethodCallExpression(\n            @NotNull PsiMethodCallExpression methodCallExpression)\n            throws IncorrectOperationException {\n        final PsiReferenceExpression target =\n                methodCallExpression.getMethodExpression();\n        final PsiExpressionList argumentList =\n                methodCallExpression.getArgumentList();\n        final PsiExpression[] arguments = argumentList.getExpressions();\n        removeParentheses(target);\n        for (final PsiExpression argument : arguments) {\n            removeParentheses(argument);\n        }\n    }","commit_id":"350481f998aee786aa19908ce1940f126b0af642","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static String removeParensFromConditionalExpression(\n            @NotNull PsiConditionalExpression conditionalExpression){\n        final PsiExpression condition = conditionalExpression.getCondition();\n        final PsiExpression thenBranch =\n                conditionalExpression.getThenExpression();\n        final PsiExpression elseBranch =\n                conditionalExpression.getElseExpression();\n        return removeParentheses(condition) + '?' +\n               removeParentheses(thenBranch) + ':' +\n               removeParentheses(elseBranch);\n    }","id":13792,"modified_method":"private static void removeParensFromConditionalExpression(\n            @NotNull PsiConditionalExpression conditionalExpression)\n            throws IncorrectOperationException {\n        final PsiExpression condition = conditionalExpression.getCondition();\n        removeParentheses(condition);\n        final PsiExpression thenBranch =\n                conditionalExpression.getThenExpression();\n        if (thenBranch != null) {\n            removeParentheses(thenBranch);\n        }\n        final PsiExpression elseBranch =\n                conditionalExpression.getElseExpression();\n        if (elseBranch != null) {\n            removeParentheses(elseBranch);\n        }\n    }","commit_id":"350481f998aee786aa19908ce1940f126b0af642","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static String removeParensFromAssignmentExpression(\n            @NotNull PsiAssignmentExpression assignment){\n        final PsiExpression lhs = assignment.getLExpression();\n        final PsiExpression rhs = assignment.getRExpression();\n        final PsiJavaToken sign = assignment.getOperationSign();\n        return removeParentheses(lhs) + ' ' + sign.getText() + ' ' +\n               removeParentheses(rhs);\n    }","id":13793,"modified_method":"private static void removeParensFromAssignmentExpression(\n            @NotNull PsiAssignmentExpression assignment)\n            throws IncorrectOperationException {\n        final PsiExpression lhs = assignment.getLExpression();\n        final PsiExpression rhs = assignment.getRExpression();\n        removeParentheses(lhs);\n        if (rhs != null) {\n            removeParentheses(rhs);\n        }\n    }","commit_id":"350481f998aee786aa19908ce1940f126b0af642","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void processIntention(PsiElement element)\n            throws IncorrectOperationException {\n        PsiExpression expression = (PsiExpression)element;\n        while (expression.getParent() instanceof PsiExpression) {\n            expression = (PsiExpression)expression.getParent();\n            assert expression != null;\n        }\n        final String newExpression =\n                ParenthesesUtils.removeParentheses(expression);\n        replaceExpression(newExpression, expression);\n    }","id":13794,"modified_method":"@Override\n    public void processIntention(@NotNull PsiElement element)\n            throws IncorrectOperationException {\n        PsiExpression expression = (PsiExpression)element;\n        while (expression.getParent() instanceof PsiExpression) {\n            expression = (PsiExpression)expression.getParent();\n            assert expression != null;\n        }\n        ParenthesesUtils.removeParentheses(expression);\n    }","commit_id":"350481f998aee786aa19908ce1940f126b0af642","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void doGenerateText(SNode node) {\n    if (getBuffer().hasPositionsSupport()) {\n      TraceInfoGenerationUtil.createPositionInfo(this, node);\n      TraceInfoGenerationUtil.createScopeInfo(this, node);\n    }\n    if ((AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf280165065d5424eL, 0xbb1b463a8781b786L, 0x4a3c146b7faeeb34L, \"jetbrains.mps.baseLanguage.javadoc.structure.MethodDocComment\"))) != null)) {\n      appendNode(AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf280165065d5424eL, 0xbb1b463a8781b786L, 0x4a3c146b7faeeb34L, \"jetbrains.mps.baseLanguage.javadoc.structure.MethodDocComment\"))));\n    }\n    this.indentBuffer();\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1fdL, \"returnType\")));\n    this.append(\" \");\n    this.append(SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\")));\n    this.append(\"()\");\n    if ((SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a6a17a27L, 0x505a7bf53e13af48L, \"defaultValue\")) != null)) {\n      this.append(\" default \");\n      appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a6a17a27L, 0x505a7bf53e13af48L, \"defaultValue\")));\n    }\n    this.append(\";\");\n    this.appendNewLine();\n    if (getBuffer().hasPositionsSupport()) {\n      {\n        String traceableProperty = \"\";\n        try {\n          traceableProperty = BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{});\n        } catch (Throwable t) {\n          if (LOG.isEnabledFor(Level.ERROR)) {\n            LOG.error(\"Can't calculate traceable prorerty for a node \" + node + \".\", t);\n          }\n        }\n        TraceInfoGenerationUtil.fillPositionInfo(this, node, traceableProperty);\n      }\n      {\n        List<SNode> scopeVariables = new ArrayList<SNode>();\n        try {\n          scopeVariables = BehaviorReflection.invokeVirtual((Class<List<SNode>>) ((Class) Object.class), SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a2L, \"jetbrains.mps.lang.traceable.structure.ScopeConcept\")), \"virtual_getScopeVariables_5067982036267369894\", new Object[]{});\n        } catch (Throwable t) {\n          if (LOG.isEnabledFor(Level.ERROR)) {\n            LOG.error(\"Can't calculate scope variables for a node \" + node + \".\", t);\n          }\n        }\n        TraceInfoGenerationUtil.fillScopeInfo(this, node, scopeVariables);\n      }\n    }\n  }","id":13795,"modified_method":"public void doGenerateText(SNode node) {\n    createPositionInfo(node);\n    createScopeInfo(node);\n    if ((AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf280165065d5424eL, 0xbb1b463a8781b786L, 0x4a3c146b7faeeb34L, \"jetbrains.mps.baseLanguage.javadoc.structure.MethodDocComment\"))) != null)) {\n      appendNode(AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf280165065d5424eL, 0xbb1b463a8781b786L, 0x4a3c146b7faeeb34L, \"jetbrains.mps.baseLanguage.javadoc.structure.MethodDocComment\"))));\n    }\n    this.indentBuffer();\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1fdL, \"returnType\")));\n    this.append(\" \");\n    this.append(SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\")));\n    this.append(\"()\");\n    if ((SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a6a17a27L, 0x505a7bf53e13af48L, \"defaultValue\")) != null)) {\n      this.append(\" default \");\n      appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x114a6a17a27L, 0x505a7bf53e13af48L, \"defaultValue\")));\n    }\n    this.append(\";\");\n    this.appendNewLine();\n    if (getBuffer().hasPositionsSupport()) {\n      fillPositionInfo(node, BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{}));\n      fillScopeInfo(node, BehaviorReflection.invokeVirtual((Class<List<SNode>>) ((Class) Object.class), SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a2L, \"jetbrains.mps.lang.traceable.structure.ScopeConcept\")), \"virtual_getScopeVariables_5067982036267369894\", new Object[]{}));\n    }\n  }","commit_id":"6dedeb220b768c18099aec98384a0780bad56d05","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doGenerateText(SNode node) {\n    if (getBuffer().hasPositionsSupport()) {\n      TraceInfoGenerationUtil.createUnitInfo(this, node);\n    }\n    if ((AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf280165065d5424eL, 0xbb1b463a8781b786L, 0x1cb65d9fe66a764cL, \"jetbrains.mps.baseLanguage.javadoc.structure.ClassifierDocComment\"))) != null)) {\n      appendNode(AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf280165065d5424eL, 0xbb1b463a8781b786L, 0x1cb65d9fe66a764cL, \"jetbrains.mps.baseLanguage.javadoc.structure.ClassifierDocComment\"))));\n    }\n    BaseLanguageTextGen.fileHeader(node, this);\n    BaseLanguageTextGen.annotations(node, this);\n    BaseLanguageTextGen.visibilityWithIndent(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112670d273fL, 0x112670d886aL, \"visibility\")), this);\n    this.append(\"@interface \");\n    this.append(SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\")));\n    this.append(\" \");\n    BaseClassConceptTextGen.membersWithBrackets(node, true, this);\n    this.appendNewLine();\n\n    if (getBuffer().hasPositionsSupport()) {\n      {\n        String unitName = null;\n        try {\n          unitName = BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a4L, \"jetbrains.mps.lang.traceable.structure.UnitConcept\")), \"virtual_getUnitName_5067982036267369911\", new Object[]{});\n        } catch (Throwable t) {\n          if (LOG.isEnabledFor(Level.ERROR)) {\n            LOG.error(\"Can't calculate unit name for a node \" + node + \".\", t);\n          }\n        }\n        TraceInfoGenerationUtil.fillUnitInfo(this, node, unitName);\n      }\n    }\n  }","id":13796,"modified_method":"public void doGenerateText(SNode node) {\n    createUnitInfo(node);\n    if ((AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf280165065d5424eL, 0xbb1b463a8781b786L, 0x1cb65d9fe66a764cL, \"jetbrains.mps.baseLanguage.javadoc.structure.ClassifierDocComment\"))) != null)) {\n      appendNode(AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf280165065d5424eL, 0xbb1b463a8781b786L, 0x1cb65d9fe66a764cL, \"jetbrains.mps.baseLanguage.javadoc.structure.ClassifierDocComment\"))));\n    }\n    BaseLanguageTextGen.fileHeader(node, this);\n    BaseLanguageTextGen.annotations(node, this);\n    BaseLanguageTextGen.visibilityWithIndent(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112670d273fL, 0x112670d886aL, \"visibility\")), this);\n    this.append(\"@interface \");\n    this.append(SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\")));\n    this.append(\" \");\n    BaseClassConceptTextGen.membersWithBrackets(node, true, this);\n    this.appendNewLine();\n\n    if (getBuffer().hasPositionsSupport()) {\n      fillUnitInfo(node, BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a4L, \"jetbrains.mps.lang.traceable.structure.UnitConcept\")), \"virtual_getUnitName_5067982036267369911\", new Object[]{}));\n    }\n  }","commit_id":"6dedeb220b768c18099aec98384a0780bad56d05","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doGenerateText(SNode node) {\n    if (getBuffer().hasPositionsSupport()) {\n      TraceInfoGenerationUtil.createUnitInfo(this, node);\n    }\n    BaseLanguageTextGen.blClassifierRef(SNodeOperations.getReference(node, MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1107e0cb103L, 0x1107e0fd2a0L, \"classifier\")), this);\n    if (ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1107e0cb103L, 0x117ac45a693L, \"typeParameter\"))).isNotEmpty()) {\n      this.append(\"<\");\n      {\n        Iterable<SNode> collection = SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1107e0cb103L, 0x117ac45a693L, \"typeParameter\"));\n        final SNode lastItem = Sequence.fromIterable(collection).last();\n        for (SNode item : collection) {\n          appendNode(item);\n          if (item != lastItem) {\n            append(\", \");\n          }\n        }\n      }\n      this.append(\">\");\n    }\n    if (ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1107e0cb103L, 0x1107e104a89L, \"parameter\"))).isNotEmpty()) {\n      this.append(\"(\");\n      {\n        Iterable<SNode> collection = SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1107e0cb103L, 0x1107e104a89L, \"parameter\"));\n        final SNode lastItem = Sequence.fromIterable(collection).last();\n        for (SNode item : collection) {\n          appendNode(item);\n          if (item != lastItem) {\n            append(\", \");\n          }\n        }\n      }\n      this.append(\")\");\n    } else {\n      this.append(\"(\");\n      {\n        Iterable<SNode> collection = SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11857355952L, 0xf8c78301aeL, \"actualArgument\"));\n        final SNode lastItem = Sequence.fromIterable(collection).last();\n        for (SNode item : collection) {\n          appendNode(item);\n          if (item != lastItem) {\n            append(\", \");\n          }\n        }\n      }\n      this.append(\")\");\n    }\n    this.append(\" \");\n    BaseClassConceptTextGen.membersWithBrackets(node, false, this);\n    if (getBuffer().hasPositionsSupport()) {\n      {\n        String unitName = null;\n        try {\n          unitName = BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a4L, \"jetbrains.mps.lang.traceable.structure.UnitConcept\")), \"virtual_getUnitName_5067982036267369911\", new Object[]{});\n        } catch (Throwable t) {\n          if (LOG.isEnabledFor(Level.ERROR)) {\n            LOG.error(\"Can't calculate unit name for a node \" + node + \".\", t);\n          }\n        }\n        TraceInfoGenerationUtil.fillUnitInfo(this, node, unitName);\n      }\n    }\n  }","id":13797,"modified_method":"public void doGenerateText(SNode node) {\n    createUnitInfo(node);\n    BaseLanguageTextGen.blClassifierRef(SNodeOperations.getReference(node, MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1107e0cb103L, 0x1107e0fd2a0L, \"classifier\")), this);\n    if (ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1107e0cb103L, 0x117ac45a693L, \"typeParameter\"))).isNotEmpty()) {\n      this.append(\"<\");\n      {\n        Iterable<SNode> collection = SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1107e0cb103L, 0x117ac45a693L, \"typeParameter\"));\n        final SNode lastItem = Sequence.fromIterable(collection).last();\n        for (SNode item : collection) {\n          appendNode(item);\n          if (item != lastItem) {\n            append(\", \");\n          }\n        }\n      }\n      this.append(\">\");\n    }\n    if (ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1107e0cb103L, 0x1107e104a89L, \"parameter\"))).isNotEmpty()) {\n      this.append(\"(\");\n      {\n        Iterable<SNode> collection = SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1107e0cb103L, 0x1107e104a89L, \"parameter\"));\n        final SNode lastItem = Sequence.fromIterable(collection).last();\n        for (SNode item : collection) {\n          appendNode(item);\n          if (item != lastItem) {\n            append(\", \");\n          }\n        }\n      }\n      this.append(\")\");\n    } else {\n      this.append(\"(\");\n      {\n        Iterable<SNode> collection = SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11857355952L, 0xf8c78301aeL, \"actualArgument\"));\n        final SNode lastItem = Sequence.fromIterable(collection).last();\n        for (SNode item : collection) {\n          appendNode(item);\n          if (item != lastItem) {\n            append(\", \");\n          }\n        }\n      }\n      this.append(\")\");\n    }\n    this.append(\" \");\n    BaseClassConceptTextGen.membersWithBrackets(node, false, this);\n    if (getBuffer().hasPositionsSupport()) {\n      fillUnitInfo(node, BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a4L, \"jetbrains.mps.lang.traceable.structure.UnitConcept\")), \"virtual_getUnitName_5067982036267369911\", new Object[]{}));\n    }\n  }","commit_id":"6dedeb220b768c18099aec98384a0780bad56d05","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doGenerateText(SNode node) {\n    if (getBuffer().hasPositionsSupport()) {\n      TraceInfoGenerationUtil.createPositionInfo(this, node);\n    }\n    this.appendNewLine();\n    this.indentBuffer();\n    this.append(\"assert \");\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10e50ecba3dL, 0x10e50ed44ceL, \"condition\")));\n    if ((SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10e50ecba3dL, 0x10e50ed92e0L, \"message\")) != null)) {\n      this.append(\" : \");\n      appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10e50ecba3dL, 0x10e50ed92e0L, \"message\")));\n    }\n    this.append(\";\");\n    if (getBuffer().hasPositionsSupport()) {\n      {\n        String traceableProperty = \"\";\n        try {\n          traceableProperty = BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{});\n        } catch (Throwable t) {\n          if (LOG.isEnabledFor(Level.ERROR)) {\n            LOG.error(\"Can't calculate traceable prorerty for a node \" + node + \".\", t);\n          }\n        }\n        TraceInfoGenerationUtil.fillPositionInfo(this, node, traceableProperty);\n      }\n    }\n  }","id":13798,"modified_method":"public void doGenerateText(SNode node) {\n    createPositionInfo(node);\n    this.appendNewLine();\n    this.indentBuffer();\n    this.append(\"assert \");\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10e50ecba3dL, 0x10e50ed44ceL, \"condition\")));\n    if ((SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10e50ecba3dL, 0x10e50ed92e0L, \"message\")) != null)) {\n      this.append(\" : \");\n      appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10e50ecba3dL, 0x10e50ed92e0L, \"message\")));\n    }\n    this.append(\";\");\n    if (getBuffer().hasPositionsSupport()) {\n      fillPositionInfo(node, BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{}));\n    }\n  }","commit_id":"6dedeb220b768c18099aec98384a0780bad56d05","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doGenerateText(SNode node) {\n    if (getBuffer().hasPositionsSupport()) {\n      TraceInfoGenerationUtil.createPositionInfo(this, node);\n    }\n    boolean needBrackets = false;\n    if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(node), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfc092b6b77L, \"jetbrains.mps.baseLanguage.structure.BlockStatement\")) || SNodeOperations.isInstanceOf(SNodeOperations.getParent(node), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L, \"jetbrains.mps.baseLanguage.structure.StatementList\"))) {\n      if ((SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfc092b6b77L, 0xfc092b6b78L, \"statements\")) != null)) {\n        for (SNode statement : SLinkOperations.getChildren(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfc092b6b77L, 0xfc092b6b78L, \"statements\")), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L, 0xf8cc6bf961L, \"statement\"))) {\n          if (SNodeOperations.isInstanceOf(statement, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc67c7f0L, \"jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement\"))) {\n            needBrackets = true;\n            break;\n          }\n        }\n      }\n    } else {\n      needBrackets = true;\n    }\n    if (needBrackets) {\n      if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(node), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b217L, \"jetbrains.mps.baseLanguage.structure.IfStatement\"))) {\n        this.append(\" {\");\n      } else {\n        this.appendNewLine();\n        this.appendWithIndent(\"{\");\n      }\n      this.increaseDepth();\n    }\n    if ((SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfc092b6b77L, 0xfc092b6b78L, \"statements\")) != null)) {\n      appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfc092b6b77L, 0xfc092b6b78L, \"statements\")));\n    }\n    if (needBrackets) {\n      this.decreaseDepth();\n      this.appendNewLine();\n      this.appendWithIndent(\"}\");\n    }\n    if (getBuffer().hasPositionsSupport()) {\n      {\n        String traceableProperty = \"\";\n        try {\n          traceableProperty = BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{});\n        } catch (Throwable t) {\n          if (LOG.isEnabledFor(Level.ERROR)) {\n            LOG.error(\"Can't calculate traceable prorerty for a node \" + node + \".\", t);\n          }\n        }\n        TraceInfoGenerationUtil.fillPositionInfo(this, node, traceableProperty);\n      }\n    }\n  }","id":13799,"modified_method":"public void doGenerateText(SNode node) {\n    createPositionInfo(node);\n    boolean needBrackets = false;\n    if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(node), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfc092b6b77L, \"jetbrains.mps.baseLanguage.structure.BlockStatement\")) || SNodeOperations.isInstanceOf(SNodeOperations.getParent(node), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L, \"jetbrains.mps.baseLanguage.structure.StatementList\"))) {\n      if ((SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfc092b6b77L, 0xfc092b6b78L, \"statements\")) != null)) {\n        for (SNode statement : SLinkOperations.getChildren(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfc092b6b77L, 0xfc092b6b78L, \"statements\")), MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L, 0xf8cc6bf961L, \"statement\"))) {\n          if (SNodeOperations.isInstanceOf(statement, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc67c7f0L, \"jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement\"))) {\n            needBrackets = true;\n            break;\n          }\n        }\n      }\n    } else {\n      needBrackets = true;\n    }\n    if (needBrackets) {\n      if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(node), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b217L, \"jetbrains.mps.baseLanguage.structure.IfStatement\"))) {\n        this.append(\" {\");\n      } else {\n        this.appendNewLine();\n        this.appendWithIndent(\"{\");\n      }\n      this.increaseDepth();\n    }\n    if ((SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfc092b6b77L, 0xfc092b6b78L, \"statements\")) != null)) {\n      appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfc092b6b77L, 0xfc092b6b78L, \"statements\")));\n    }\n    if (needBrackets) {\n      this.decreaseDepth();\n      this.appendNewLine();\n      this.appendWithIndent(\"}\");\n    }\n    if (getBuffer().hasPositionsSupport()) {\n      fillPositionInfo(node, BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{}));\n    }\n  }","commit_id":"6dedeb220b768c18099aec98384a0780bad56d05","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doGenerateText(SNode node) {\n    if (getBuffer().hasPositionsSupport()) {\n      TraceInfoGenerationUtil.createPositionInfo(this, node);\n    }\n    this.appendNewLine();\n    if ((SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfbe39a867fL, 0x7dae85d6eb42f8c4L, \"loopLabelReference\")) != null)) {\n      this.appendWithIndent(\"break \");\n      this.append(SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfbe39a867fL, 0x7dae85d6eb42f8c4L, \"loopLabelReference\")), MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x50c493bf9555129L, 0x50c493bf955512aL, \"loopLabel\")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\")));\n      this.append(\";\");\n    } else if (isNotEmptyString(SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfbe39a867fL, 0x11745bfb2d8L, \"label\")))) {\n      this.appendWithIndent(\"break \");\n      this.append(SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfbe39a867fL, 0x11745bfb2d8L, \"label\")));\n      this.append(\";\");\n    } else {\n      this.appendWithIndent(\"break;\");\n    }\n    if (getBuffer().hasPositionsSupport()) {\n      {\n        String traceableProperty = \"\";\n        try {\n          traceableProperty = BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{});\n        } catch (Throwable t) {\n          if (LOG.isEnabledFor(Level.ERROR)) {\n            LOG.error(\"Can't calculate traceable prorerty for a node \" + node + \".\", t);\n          }\n        }\n        TraceInfoGenerationUtil.fillPositionInfo(this, node, traceableProperty);\n      }\n    }\n  }","id":13800,"modified_method":"public void doGenerateText(SNode node) {\n    createPositionInfo(node);\n    this.appendNewLine();\n    if ((SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfbe39a867fL, 0x7dae85d6eb42f8c4L, \"loopLabelReference\")) != null)) {\n      this.appendWithIndent(\"break \");\n      this.append(SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfbe39a867fL, 0x7dae85d6eb42f8c4L, \"loopLabelReference\")), MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x50c493bf9555129L, 0x50c493bf955512aL, \"loopLabel\")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\")));\n      this.append(\";\");\n    } else if (isNotEmptyString(SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfbe39a867fL, 0x11745bfb2d8L, \"label\")))) {\n      this.appendWithIndent(\"break \");\n      this.append(SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfbe39a867fL, 0x11745bfb2d8L, \"label\")));\n      this.append(\";\");\n    } else {\n      this.appendWithIndent(\"break;\");\n    }\n    if (getBuffer().hasPositionsSupport()) {\n      fillPositionInfo(node, BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{}));\n    }\n  }","commit_id":"6dedeb220b768c18099aec98384a0780bad56d05","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doGenerateText(SNode node) {\n    if (getBuffer().hasPositionsSupport()) {\n      TraceInfoGenerationUtil.createScopeInfo(this, node);\n    }\n    this.appendWithIndent(\"} catch (\");\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10f39a56e2fL, 0x10f39a6a2f1L, \"throwable\")));\n    this.append(\") {\");\n    this.increaseDepth();\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10f39a56e2fL, 0x10f39a6a2f2L, \"catchBody\")));\n    this.decreaseDepth();\n    if (getBuffer().hasPositionsSupport()) {\n      {\n        List<SNode> scopeVariables = new ArrayList<SNode>();\n        try {\n          scopeVariables = BehaviorReflection.invokeVirtual((Class<List<SNode>>) ((Class) Object.class), SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a2L, \"jetbrains.mps.lang.traceable.structure.ScopeConcept\")), \"virtual_getScopeVariables_5067982036267369894\", new Object[]{});\n        } catch (Throwable t) {\n          if (LOG.isEnabledFor(Level.ERROR)) {\n            LOG.error(\"Can't calculate scope variables for a node \" + node + \".\", t);\n          }\n        }\n        TraceInfoGenerationUtil.fillScopeInfo(this, node, scopeVariables);\n      }\n    }\n  }","id":13801,"modified_method":"public void doGenerateText(SNode node) {\n    createScopeInfo(node);\n    this.appendWithIndent(\"} catch (\");\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10f39a56e2fL, 0x10f39a6a2f1L, \"throwable\")));\n    this.append(\") {\");\n    this.increaseDepth();\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10f39a56e2fL, 0x10f39a6a2f2L, \"catchBody\")));\n    this.decreaseDepth();\n    if (getBuffer().hasPositionsSupport()) {\n      fillScopeInfo(node, BehaviorReflection.invokeVirtual((Class<List<SNode>>) ((Class) Object.class), SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a2L, \"jetbrains.mps.lang.traceable.structure.ScopeConcept\")), \"virtual_getScopeVariables_5067982036267369894\", new Object[]{}));\n    }\n  }","commit_id":"6dedeb220b768c18099aec98384a0780bad56d05","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doGenerateText(SNode node) {\n    if (getBuffer().hasPositionsSupport()) {\n      TraceInfoGenerationUtil.createUnitInfo(this, node);\n    }\n    if ((AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf280165065d5424eL, 0xbb1b463a8781b786L, 0x1cb65d9fe66a764cL, \"jetbrains.mps.baseLanguage.javadoc.structure.ClassifierDocComment\"))) != null)) {\n      appendNode(AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf280165065d5424eL, 0xbb1b463a8781b786L, 0x1cb65d9fe66a764cL, \"jetbrains.mps.baseLanguage.javadoc.structure.ClassifierDocComment\"))));\n    }\n    BaseLanguageTextGen.fileHeader(node, this);\n    BaseLanguageTextGen.annotations(node, this);\n    BaseLanguageTextGen.visibilityWithIndent(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112670d273fL, 0x112670d886aL, \"visibility\")), this);\n    if (Classifier_Behavior.call_isInner_521412098689998677(node) && BehaviorReflection.invokeVirtual(Boolean.TYPE, node, \"virtual_isStatic_7405920559687241224\", new Object[]{})) {\n      this.append(\"static \");\n    }\n    if (SPropertyOperations.getBoolean(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L, 0xfa5cee6dfaL, \"abstractClass\"))) {\n      this.append(\"abstract \");\n    }\n    if (SPropertyOperations.getBoolean(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L, 0x11c6af4b284L, \"isFinal\"))) {\n      this.append(\"final \");\n    }\n    this.append(\"class \");\n    this.append(SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\")));\n    GenericDeclarationTextGen2.typeDeclarations(node, this);\n    if ((SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L, 0x10f6353296dL, \"superclass\")) != null)) {\n      this.append(\" extends \");\n      appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L, 0x10f6353296dL, \"superclass\")));\n    }\n    if (ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L, 0xff2ac0b419L, \"implementedInterface\"))).isNotEmpty()) {\n      this.append(\" implements \");\n      {\n        Iterable<SNode> collection = SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L, 0xff2ac0b419L, \"implementedInterface\"));\n        final SNode lastItem = Sequence.fromIterable(collection).last();\n        for (SNode item : collection) {\n          appendNode(item);\n          if (item != lastItem) {\n            append(\", \");\n          }\n        }\n      }\n    }\n    this.append(\" \");\n    BaseClassConceptTextGen.membersWithBrackets(node, true, this);\n    this.appendNewLine();\n    if (getBuffer().hasPositionsSupport()) {\n      {\n        String unitName = null;\n        try {\n          unitName = BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a4L, \"jetbrains.mps.lang.traceable.structure.UnitConcept\")), \"virtual_getUnitName_5067982036267369911\", new Object[]{});\n        } catch (Throwable t) {\n          if (LOG.isEnabledFor(Level.ERROR)) {\n            LOG.error(\"Can't calculate unit name for a node \" + node + \".\", t);\n          }\n        }\n        TraceInfoGenerationUtil.fillUnitInfo(this, node, unitName);\n      }\n    }\n  }","id":13802,"modified_method":"public void doGenerateText(SNode node) {\n    createUnitInfo(node);\n    if ((AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf280165065d5424eL, 0xbb1b463a8781b786L, 0x1cb65d9fe66a764cL, \"jetbrains.mps.baseLanguage.javadoc.structure.ClassifierDocComment\"))) != null)) {\n      appendNode(AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf280165065d5424eL, 0xbb1b463a8781b786L, 0x1cb65d9fe66a764cL, \"jetbrains.mps.baseLanguage.javadoc.structure.ClassifierDocComment\"))));\n    }\n    BaseLanguageTextGen.fileHeader(node, this);\n    BaseLanguageTextGen.annotations(node, this);\n    BaseLanguageTextGen.visibilityWithIndent(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112670d273fL, 0x112670d886aL, \"visibility\")), this);\n    if (Classifier_Behavior.call_isInner_521412098689998677(node) && BehaviorReflection.invokeVirtual(Boolean.TYPE, node, \"virtual_isStatic_7405920559687241224\", new Object[]{})) {\n      this.append(\"static \");\n    }\n    if (SPropertyOperations.getBoolean(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L, 0xfa5cee6dfaL, \"abstractClass\"))) {\n      this.append(\"abstract \");\n    }\n    if (SPropertyOperations.getBoolean(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L, 0x11c6af4b284L, \"isFinal\"))) {\n      this.append(\"final \");\n    }\n    this.append(\"class \");\n    this.append(SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\")));\n    GenericDeclarationTextGen2.typeDeclarations(node, this);\n    if ((SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L, 0x10f6353296dL, \"superclass\")) != null)) {\n      this.append(\" extends \");\n      appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L, 0x10f6353296dL, \"superclass\")));\n    }\n    if (ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L, 0xff2ac0b419L, \"implementedInterface\"))).isNotEmpty()) {\n      this.append(\" implements \");\n      {\n        Iterable<SNode> collection = SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L, 0xff2ac0b419L, \"implementedInterface\"));\n        final SNode lastItem = Sequence.fromIterable(collection).last();\n        for (SNode item : collection) {\n          appendNode(item);\n          if (item != lastItem) {\n            append(\", \");\n          }\n        }\n      }\n    }\n    this.append(\" \");\n    BaseClassConceptTextGen.membersWithBrackets(node, true, this);\n    this.appendNewLine();\n    if (getBuffer().hasPositionsSupport()) {\n      fillUnitInfo(node, BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a4L, \"jetbrains.mps.lang.traceable.structure.UnitConcept\")), \"virtual_getUnitName_5067982036267369911\", new Object[]{}));\n    }\n  }","commit_id":"6dedeb220b768c18099aec98384a0780bad56d05","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doGenerateText(SNode node) {\n    if (getBuffer().hasPositionsSupport()) {\n      TraceInfoGenerationUtil.createPositionInfo(this, node);\n    }\n    this.appendNewLine();\n    this.appendWithIndent(\"/*\");\n    this.increaseDepth();\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11ef4675fccL, 0x11ef467946eL, \"statement\")));\n    this.appendNewLine();\n    this.decreaseDepth();\n    this.appendWithIndent(\"*/\");\n    if (getBuffer().hasPositionsSupport()) {\n      {\n        String traceableProperty = \"\";\n        try {\n          traceableProperty = BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{});\n        } catch (Throwable t) {\n          if (LOG.isEnabledFor(Level.ERROR)) {\n            LOG.error(\"Can't calculate traceable prorerty for a node \" + node + \".\", t);\n          }\n        }\n        TraceInfoGenerationUtil.fillPositionInfo(this, node, traceableProperty);\n      }\n    }\n  }","id":13803,"modified_method":"public void doGenerateText(SNode node) {\n    createPositionInfo(node);\n    this.appendNewLine();\n    this.appendWithIndent(\"/*\");\n    this.increaseDepth();\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11ef4675fccL, 0x11ef467946eL, \"statement\")));\n    this.appendNewLine();\n    this.decreaseDepth();\n    this.appendWithIndent(\"*/\");\n    if (getBuffer().hasPositionsSupport()) {\n      fillPositionInfo(node, BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{}));\n    }\n  }","commit_id":"6dedeb220b768c18099aec98384a0780bad56d05","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doGenerateText(SNode node) {\n    if (getBuffer().hasPositionsSupport()) {\n      TraceInfoGenerationUtil.createPositionInfo(this, node);\n    }\n    this.appendNewLine();\n    this.appendWithIndent(\"/*\");\n    this.increaseDepth();\n    {\n      Iterable<SNode> collection = SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1121e2102fdL, 0x1121e2157e4L, \"statement\"));\n      for (SNode item : collection) {\n        appendNode(item);\n      }\n    }\n    this.decreaseDepth();\n    this.appendNewLine();\n    this.appendWithIndent(\"*/\");\n    if (getBuffer().hasPositionsSupport()) {\n      {\n        String traceableProperty = \"\";\n        try {\n          traceableProperty = BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{});\n        } catch (Throwable t) {\n          if (LOG.isEnabledFor(Level.ERROR)) {\n            LOG.error(\"Can't calculate traceable prorerty for a node \" + node + \".\", t);\n          }\n        }\n        TraceInfoGenerationUtil.fillPositionInfo(this, node, traceableProperty);\n      }\n    }\n  }","id":13804,"modified_method":"public void doGenerateText(SNode node) {\n    createPositionInfo(node);\n    this.appendNewLine();\n    this.appendWithIndent(\"/*\");\n    this.increaseDepth();\n    {\n      Iterable<SNode> collection = SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1121e2102fdL, 0x1121e2157e4L, \"statement\"));\n      for (SNode item : collection) {\n        appendNode(item);\n      }\n    }\n    this.decreaseDepth();\n    this.appendNewLine();\n    this.appendWithIndent(\"*/\");\n    if (getBuffer().hasPositionsSupport()) {\n      fillPositionInfo(node, BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{}));\n    }\n  }","commit_id":"6dedeb220b768c18099aec98384a0780bad56d05","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doGenerateText(SNode node) {\n    if (getBuffer().hasPositionsSupport()) {\n      TraceInfoGenerationUtil.createPositionInfo(this, node);\n      TraceInfoGenerationUtil.createScopeInfo(this, node);\n    }\n    if ((AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf280165065d5424eL, 0xbb1b463a8781b786L, 0x4a3c146b7faeeb34L, \"jetbrains.mps.baseLanguage.javadoc.structure.MethodDocComment\"))) != null)) {\n      appendNode(AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf280165065d5424eL, 0xbb1b463a8781b786L, 0x4a3c146b7faeeb34L, \"jetbrains.mps.baseLanguage.javadoc.structure.MethodDocComment\"))));\n    }\n    SNode declaringClass = SNodeOperations.cast(SNodeOperations.getParent(node), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L, \"jetbrains.mps.baseLanguage.structure.ClassConcept\"));\n    BaseLanguageTextGen.annotations(node, this);\n    if (!(SNodeOperations.isInstanceOf(declaringClass, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfc367070a5L, \"jetbrains.mps.baseLanguage.structure.EnumClass\")))) {\n      BaseLanguageTextGen.visibilityWithIndent(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112670d273fL, 0x112670d886aL, \"visibility\")), this);\n    } else {\n      this.indentBuffer();\n    }\n    GenericDeclarationTextGen2.typeDeclarations(node, this);\n    if (ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x102463b447aL, 0x102463bb98eL, \"typeVariableDeclaration\"))).isNotEmpty()) {\n      this.append(\" \");\n    }\n    assert declaringClass != null;\n    this.append(SPropertyOperations.getString(declaringClass, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\")));\n    this.append(\"(\");\n    {\n      Iterable<SNode> collection = SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1feL, \"parameter\"));\n      final SNode lastItem = Sequence.fromIterable(collection).last();\n      for (SNode item : collection) {\n        appendNode(item);\n        if (item != lastItem) {\n          append(\", \");\n        }\n      }\n    }\n    this.append(\")\");\n    if (ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0x10f383d6949L, \"throwsItem\"))).isNotEmpty()) {\n      this.append(\" throws \");\n      {\n        Iterable<SNode> collection = SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0x10f383d6949L, \"throwsItem\"));\n        final SNode lastItem = Sequence.fromIterable(collection).last();\n        for (SNode item : collection) {\n          appendNode(item);\n          if (item != lastItem) {\n            append(\", \");\n          }\n        }\n      }\n    }\n    this.append(\" {\");\n    this.increaseDepth();\n    if ((SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1ffL, \"body\")) != null)) {\n      appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1ffL, \"body\")));\n    }\n    this.decreaseDepth();\n    this.appendNewLine();\n    this.appendWithIndent(\"}\");\n    this.appendNewLine();\n    if (getBuffer().hasPositionsSupport()) {\n      {\n        String traceableProperty = \"\";\n        try {\n          traceableProperty = BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{});\n        } catch (Throwable t) {\n          if (LOG.isEnabledFor(Level.ERROR)) {\n            LOG.error(\"Can't calculate traceable prorerty for a node \" + node + \".\", t);\n          }\n        }\n        TraceInfoGenerationUtil.fillPositionInfo(this, node, traceableProperty);\n      }\n      {\n        List<SNode> scopeVariables = new ArrayList<SNode>();\n        try {\n          scopeVariables = BehaviorReflection.invokeVirtual((Class<List<SNode>>) ((Class) Object.class), SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a2L, \"jetbrains.mps.lang.traceable.structure.ScopeConcept\")), \"virtual_getScopeVariables_5067982036267369894\", new Object[]{});\n        } catch (Throwable t) {\n          if (LOG.isEnabledFor(Level.ERROR)) {\n            LOG.error(\"Can't calculate scope variables for a node \" + node + \".\", t);\n          }\n        }\n        TraceInfoGenerationUtil.fillScopeInfo(this, node, scopeVariables);\n      }\n    }\n  }","id":13805,"modified_method":"public void doGenerateText(SNode node) {\n    createPositionInfo(node);\n    createScopeInfo(node);\n    if ((AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf280165065d5424eL, 0xbb1b463a8781b786L, 0x4a3c146b7faeeb34L, \"jetbrains.mps.baseLanguage.javadoc.structure.MethodDocComment\"))) != null)) {\n      appendNode(AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf280165065d5424eL, 0xbb1b463a8781b786L, 0x4a3c146b7faeeb34L, \"jetbrains.mps.baseLanguage.javadoc.structure.MethodDocComment\"))));\n    }\n    SNode declaringClass = SNodeOperations.cast(SNodeOperations.getParent(node), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L, \"jetbrains.mps.baseLanguage.structure.ClassConcept\"));\n    BaseLanguageTextGen.annotations(node, this);\n    if (!(SNodeOperations.isInstanceOf(declaringClass, MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfc367070a5L, \"jetbrains.mps.baseLanguage.structure.EnumClass\")))) {\n      BaseLanguageTextGen.visibilityWithIndent(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112670d273fL, 0x112670d886aL, \"visibility\")), this);\n    } else {\n      this.indentBuffer();\n    }\n    GenericDeclarationTextGen2.typeDeclarations(node, this);\n    if (ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x102463b447aL, 0x102463bb98eL, \"typeVariableDeclaration\"))).isNotEmpty()) {\n      this.append(\" \");\n    }\n    assert declaringClass != null;\n    this.append(SPropertyOperations.getString(declaringClass, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\")));\n    this.append(\"(\");\n    {\n      Iterable<SNode> collection = SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1feL, \"parameter\"));\n      final SNode lastItem = Sequence.fromIterable(collection).last();\n      for (SNode item : collection) {\n        appendNode(item);\n        if (item != lastItem) {\n          append(\", \");\n        }\n      }\n    }\n    this.append(\")\");\n    if (ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0x10f383d6949L, \"throwsItem\"))).isNotEmpty()) {\n      this.append(\" throws \");\n      {\n        Iterable<SNode> collection = SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0x10f383d6949L, \"throwsItem\"));\n        final SNode lastItem = Sequence.fromIterable(collection).last();\n        for (SNode item : collection) {\n          appendNode(item);\n          if (item != lastItem) {\n            append(\", \");\n          }\n        }\n      }\n    }\n    this.append(\" {\");\n    this.increaseDepth();\n    if ((SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1ffL, \"body\")) != null)) {\n      appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1ffL, \"body\")));\n    }\n    this.decreaseDepth();\n    this.appendNewLine();\n    this.appendWithIndent(\"}\");\n    this.appendNewLine();\n    if (getBuffer().hasPositionsSupport()) {\n      fillPositionInfo(node, BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{}));\n      fillScopeInfo(node, BehaviorReflection.invokeVirtual((Class<List<SNode>>) ((Class) Object.class), SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a2L, \"jetbrains.mps.lang.traceable.structure.ScopeConcept\")), \"virtual_getScopeVariables_5067982036267369894\", new Object[]{}));\n    }\n  }","commit_id":"6dedeb220b768c18099aec98384a0780bad56d05","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doGenerateText(SNode node) {\n    if (getBuffer().hasPositionsSupport()) {\n      TraceInfoGenerationUtil.createPositionInfo(this, node);\n    }\n    this.appendNewLine();\n    if ((SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfbf3043726L, 0x7dae85d6eb43bbbdL, \"loopLabelReference\")) != null)) {\n      this.appendWithIndent(\"continue \");\n      this.append(SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfbf3043726L, 0x7dae85d6eb43bbbdL, \"loopLabelReference\")), MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x50c493bf9555129L, 0x50c493bf955512aL, \"loopLabel\")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\")));\n      this.append(\";\");\n    } else if (SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfbf3043726L, 0x11745fca58eL, \"label\")) != null) {\n      this.appendWithIndent(\"continue \");\n      this.append(SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfbf3043726L, 0x11745fca58eL, \"label\")));\n      this.append(\";\");\n    } else {\n      this.appendWithIndent(\"continue;\");\n    }\n    if (getBuffer().hasPositionsSupport()) {\n      {\n        String traceableProperty = \"\";\n        try {\n          traceableProperty = BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{});\n        } catch (Throwable t) {\n          if (LOG.isEnabledFor(Level.ERROR)) {\n            LOG.error(\"Can't calculate traceable prorerty for a node \" + node + \".\", t);\n          }\n        }\n        TraceInfoGenerationUtil.fillPositionInfo(this, node, traceableProperty);\n      }\n    }\n  }","id":13806,"modified_method":"public void doGenerateText(SNode node) {\n    createPositionInfo(node);\n    this.appendNewLine();\n    if ((SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfbf3043726L, 0x7dae85d6eb43bbbdL, \"loopLabelReference\")) != null)) {\n      this.appendWithIndent(\"continue \");\n      this.append(SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfbf3043726L, 0x7dae85d6eb43bbbdL, \"loopLabelReference\")), MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x50c493bf9555129L, 0x50c493bf955512aL, \"loopLabel\")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\")));\n      this.append(\";\");\n    } else if (SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfbf3043726L, 0x11745fca58eL, \"label\")) != null) {\n      this.appendWithIndent(\"continue \");\n      this.append(SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfbf3043726L, 0x11745fca58eL, \"label\")));\n      this.append(\";\");\n    } else {\n      this.appendWithIndent(\"continue;\");\n    }\n    if (getBuffer().hasPositionsSupport()) {\n      fillPositionInfo(node, BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{}));\n    }\n  }","commit_id":"6dedeb220b768c18099aec98384a0780bad56d05","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doGenerateText(SNode node) {\n    if (getBuffer().hasPositionsSupport()) {\n      TraceInfoGenerationUtil.createPositionInfo(this, node);\n    }\n    if (SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cb1ac5adeL, 0x50c493bf9555131L, \"loopLabel\")) != null) {\n      this.appendNewLine();\n      this.append(SPropertyOperations.getString(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cb1ac5adeL, 0x50c493bf9555131L, \"loopLabel\")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\")));\n      this.append(\":\");\n    } else if (SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cb1ac5adeL, 0x11745b5371dL, \"label\")) != null) {\n      this.appendNewLine();\n      this.append(SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cb1ac5adeL, 0x11745b5371dL, \"label\")));\n      this.append(\":\");\n    }\n    this.appendNewLine();\n    this.indentBuffer();\n    this.append(\"do {\");\n    this.increaseDepth();\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cb1ac5adeL, 0x10cb1ada6e8L, \"body\")));\n    this.decreaseDepth();\n    this.appendNewLine();\n    this.appendWithIndent(\"} while (\");\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11232674988L, 0x11232679422L, \"condition\")));\n    this.append(\");\");\n    if (getBuffer().hasPositionsSupport()) {\n      {\n        String traceableProperty = \"\";\n        try {\n          traceableProperty = BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{});\n        } catch (Throwable t) {\n          if (LOG.isEnabledFor(Level.ERROR)) {\n            LOG.error(\"Can't calculate traceable prorerty for a node \" + node + \".\", t);\n          }\n        }\n        TraceInfoGenerationUtil.fillPositionInfo(this, node, traceableProperty);\n      }\n    }\n  }","id":13807,"modified_method":"public void doGenerateText(SNode node) {\n    createPositionInfo(node);\n    if (SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cb1ac5adeL, 0x50c493bf9555131L, \"loopLabel\")) != null) {\n      this.appendNewLine();\n      this.append(SPropertyOperations.getString(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cb1ac5adeL, 0x50c493bf9555131L, \"loopLabel\")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\")));\n      this.append(\":\");\n    } else if (SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cb1ac5adeL, 0x11745b5371dL, \"label\")) != null) {\n      this.appendNewLine();\n      this.append(SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cb1ac5adeL, 0x11745b5371dL, \"label\")));\n      this.append(\":\");\n    }\n    this.appendNewLine();\n    this.indentBuffer();\n    this.append(\"do {\");\n    this.increaseDepth();\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cb1ac5adeL, 0x10cb1ada6e8L, \"body\")));\n    this.decreaseDepth();\n    this.appendNewLine();\n    this.appendWithIndent(\"} while (\");\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11232674988L, 0x11232679422L, \"condition\")));\n    this.append(\");\");\n    if (getBuffer().hasPositionsSupport()) {\n      fillPositionInfo(node, BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{}));\n    }\n  }","commit_id":"6dedeb220b768c18099aec98384a0780bad56d05","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doGenerateText(SNode node) {\n    if (getBuffer().hasPositionsSupport()) {\n      TraceInfoGenerationUtil.createUnitInfo(this, node);\n    }\n    BaseLanguageTextGen.fileHeader(node, this);\n    BaseLanguageTextGen.annotations(node, this);\n    BaseLanguageTextGen.visibilityWithIndent(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112670d273fL, 0x112670d886aL, \"visibility\")), this);\n    if ((AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf280165065d5424eL, 0xbb1b463a8781b786L, 0x1cb65d9fe66a764cL, \"jetbrains.mps.baseLanguage.javadoc.structure.ClassifierDocComment\"))) != null)) {\n      appendNode(AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf280165065d5424eL, 0xbb1b463a8781b786L, 0x1cb65d9fe66a764cL, \"jetbrains.mps.baseLanguage.javadoc.structure.ClassifierDocComment\"))));\n    }\n    if (!(SNodeOperations.isRoot(node))) {\n      this.append(\"static \");\n    }\n    this.appendWithIndent(\"enum \");\n    this.append(JavaNameUtil.shortName(SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\"))));\n    if (ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L, 0xff2ac0b419L, \"implementedInterface\"))).isNotEmpty()) {\n      this.append(\" implements \");\n      {\n        Iterable<SNode> collection = SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L, 0xff2ac0b419L, \"implementedInterface\"));\n        final SNode lastItem = Sequence.fromIterable(collection).last();\n        for (SNode item : collection) {\n          appendNode(item);\n          if (item != lastItem) {\n            append(\", \");\n          }\n        }\n      }\n    }\n    this.append(\" {\");\n    this.increaseDepth();\n    {\n      Iterable<SNode> collection = SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfc367070a5L, 0xfc367503acL, \"enumConstant\"));\n      final SNode lastItem = Sequence.fromIterable(collection).last();\n      for (SNode item : collection) {\n        appendNode(item);\n        if (item != lastItem) {\n          append(\",\");\n        }\n      }\n    }\n    this.append(\";\");\n    this.appendNewLine();\n    this.appendNewLine();\n    BaseClassConceptTextGen.members(node, this);\n    this.decreaseDepth();\n    this.appendWithIndent(\"}\");\n    this.appendNewLine();\n    if (getBuffer().hasPositionsSupport()) {\n      {\n        String unitName = null;\n        try {\n          unitName = BehaviorReflection.invokeVirtual(String.class, jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a4L, \"jetbrains.mps.lang.traceable.structure.UnitConcept\")), \"virtual_getUnitName_5067982036267369911\", new Object[]{});\n        } catch (Throwable t) {\n          if (LOG.isEnabledFor(Level.ERROR)) {\n            LOG.error(\"Can't calculate unit name for a node \" + node + \".\", t);\n          }\n        }\n        TraceInfoGenerationUtil.fillUnitInfo(this, node, unitName);\n      }\n    }\n  }","id":13808,"modified_method":"public void doGenerateText(SNode node) {\n    createUnitInfo(node);\n    BaseLanguageTextGen.fileHeader(node, this);\n    BaseLanguageTextGen.annotations(node, this);\n    BaseLanguageTextGen.visibilityWithIndent(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112670d273fL, 0x112670d886aL, \"visibility\")), this);\n    if ((AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf280165065d5424eL, 0xbb1b463a8781b786L, 0x1cb65d9fe66a764cL, \"jetbrains.mps.baseLanguage.javadoc.structure.ClassifierDocComment\"))) != null)) {\n      appendNode(AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf280165065d5424eL, 0xbb1b463a8781b786L, 0x1cb65d9fe66a764cL, \"jetbrains.mps.baseLanguage.javadoc.structure.ClassifierDocComment\"))));\n    }\n    if (!(SNodeOperations.isRoot(node))) {\n      this.append(\"static \");\n    }\n    this.appendWithIndent(\"enum \");\n    this.append(JavaNameUtil.shortName(SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\"))));\n    if (ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L, 0xff2ac0b419L, \"implementedInterface\"))).isNotEmpty()) {\n      this.append(\" implements \");\n      {\n        Iterable<SNode> collection = SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L, 0xff2ac0b419L, \"implementedInterface\"));\n        final SNode lastItem = Sequence.fromIterable(collection).last();\n        for (SNode item : collection) {\n          appendNode(item);\n          if (item != lastItem) {\n            append(\", \");\n          }\n        }\n      }\n    }\n    this.append(\" {\");\n    this.increaseDepth();\n    {\n      Iterable<SNode> collection = SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfc367070a5L, 0xfc367503acL, \"enumConstant\"));\n      final SNode lastItem = Sequence.fromIterable(collection).last();\n      for (SNode item : collection) {\n        appendNode(item);\n        if (item != lastItem) {\n          append(\",\");\n        }\n      }\n    }\n    this.append(\";\");\n    this.appendNewLine();\n    this.appendNewLine();\n    BaseClassConceptTextGen.members(node, this);\n    this.decreaseDepth();\n    this.appendWithIndent(\"}\");\n    this.appendNewLine();\n    if (getBuffer().hasPositionsSupport()) {\n      fillUnitInfo(node, BehaviorReflection.invokeVirtual(String.class, jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a4L, \"jetbrains.mps.lang.traceable.structure.UnitConcept\")), \"virtual_getUnitName_5067982036267369911\", new Object[]{}));\n    }\n  }","commit_id":"6dedeb220b768c18099aec98384a0780bad56d05","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doGenerateText(SNode node) {\n    if (getBuffer().hasPositionsSupport()) {\n      TraceInfoGenerationUtil.createPositionInfo(this, node);\n    }\n    this.appendNewLine();\n    this.indentBuffer();\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b213L, 0xf8cc56b214L, \"expression\")));\n    this.append(\";\");\n    if (getBuffer().hasPositionsSupport()) {\n      {\n        String traceableProperty = \"\";\n        try {\n          traceableProperty = BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{});\n        } catch (Throwable t) {\n          if (LOG.isEnabledFor(Level.ERROR)) {\n            LOG.error(\"Can't calculate traceable prorerty for a node \" + node + \".\", t);\n          }\n        }\n        TraceInfoGenerationUtil.fillPositionInfo(this, node, traceableProperty);\n      }\n    }\n  }","id":13809,"modified_method":"public void doGenerateText(SNode node) {\n    createPositionInfo(node);\n    this.appendNewLine();\n    this.indentBuffer();\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b213L, 0xf8cc56b214L, \"expression\")));\n    this.append(\";\");\n    if (getBuffer().hasPositionsSupport()) {\n      fillPositionInfo(node, BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{}));\n    }\n  }","commit_id":"6dedeb220b768c18099aec98384a0780bad56d05","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doGenerateText(SNode node) {\n    if (getBuffer().hasPositionsSupport()) {\n      TraceInfoGenerationUtil.createPositionInfo(this, node);\n    }\n    if ((AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf280165065d5424eL, 0xbb1b463a8781b786L, 0x5ed0d79d7dc44bf2L, \"jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment\"))) != null)) {\n      appendNode(AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf280165065d5424eL, 0xbb1b463a8781b786L, 0x5ed0d79d7dc44bf2L, \"jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment\"))));\n    }\n    BaseLanguageTextGen.annotations(node, this);\n    BaseLanguageTextGen.visibilityWithIndent(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112670d273fL, 0x112670d886aL, \"visibility\")), this);\n    if (SPropertyOperations.getBoolean(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca68L, 0x776fe644792f90adL, \"isTransient\"))) {\n      this.append(\"transient \");\n    }\n    if (SPropertyOperations.getBoolean(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca68L, 0x120c4a208a1L, \"isVolatile\"))) {\n      this.append(\"volatile \");\n    }\n    if (SPropertyOperations.getBoolean(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37a7f6eL, 0x111f9e9f00cL, \"isFinal\"))) {\n      this.append(\"final \");\n    }\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x450368d90ce15bc3L, 0x4ed4d318133c80ceL, \"type\")));\n    this.append(\" \");\n    this.append(SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\")));\n    if ((SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37a7f6eL, 0xf8c37f506eL, \"initializer\")) != null)) {\n      this.append(\" = \");\n      appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37a7f6eL, 0xf8c37f506eL, \"initializer\")));\n    }\n    this.append(\";\");\n    this.appendNewLine();\n    if (getBuffer().hasPositionsSupport()) {\n      {\n        String traceableProperty = \"\";\n        try {\n          traceableProperty = BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{});\n        } catch (Throwable t) {\n          if (LOG.isEnabledFor(Level.ERROR)) {\n            LOG.error(\"Can't calculate traceable prorerty for a node \" + node + \".\", t);\n          }\n        }\n        TraceInfoGenerationUtil.fillPositionInfo(this, node, traceableProperty);\n      }\n    }\n  }","id":13810,"modified_method":"public void doGenerateText(SNode node) {\n    createPositionInfo(node);\n    if ((AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf280165065d5424eL, 0xbb1b463a8781b786L, 0x5ed0d79d7dc44bf2L, \"jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment\"))) != null)) {\n      appendNode(AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf280165065d5424eL, 0xbb1b463a8781b786L, 0x5ed0d79d7dc44bf2L, \"jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment\"))));\n    }\n    BaseLanguageTextGen.annotations(node, this);\n    BaseLanguageTextGen.visibilityWithIndent(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112670d273fL, 0x112670d886aL, \"visibility\")), this);\n    if (SPropertyOperations.getBoolean(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca68L, 0x776fe644792f90adL, \"isTransient\"))) {\n      this.append(\"transient \");\n    }\n    if (SPropertyOperations.getBoolean(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca68L, 0x120c4a208a1L, \"isVolatile\"))) {\n      this.append(\"volatile \");\n    }\n    if (SPropertyOperations.getBoolean(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37a7f6eL, 0x111f9e9f00cL, \"isFinal\"))) {\n      this.append(\"final \");\n    }\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x450368d90ce15bc3L, 0x4ed4d318133c80ceL, \"type\")));\n    this.append(\" \");\n    this.append(SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\")));\n    if ((SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37a7f6eL, 0xf8c37f506eL, \"initializer\")) != null)) {\n      this.append(\" = \");\n      appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37a7f6eL, 0xf8c37f506eL, \"initializer\")));\n    }\n    this.append(\";\");\n    this.appendNewLine();\n    if (getBuffer().hasPositionsSupport()) {\n      fillPositionInfo(node, BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{}));\n    }\n  }","commit_id":"6dedeb220b768c18099aec98384a0780bad56d05","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doGenerateText(SNode node) {\n    if (getBuffer().hasPositionsSupport()) {\n      TraceInfoGenerationUtil.createPositionInfo(this, node);\n      TraceInfoGenerationUtil.createScopeInfo(this, node);\n    }\n    if (SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cb1ac5adeL, 0x50c493bf9555131L, \"loopLabel\")) != null) {\n      this.appendNewLine();\n      this.append(SPropertyOperations.getString(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cb1ac5adeL, 0x50c493bf9555131L, \"loopLabel\")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\")));\n      this.append(\":\");\n    } else if (SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cb1ac5adeL, 0x11745b5371dL, \"label\")) != null) {\n      this.appendNewLine();\n      this.append(SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cb1ac5adeL, 0x11745b5371dL, \"label\")));\n      this.append(\":\");\n    }\n    this.appendNewLine();\n    this.indentBuffer();\n    this.append(\"for (\");\n    if ((SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10a697996feL, 0x10a6979f36bL, \"variable\")) != null)) {\n      appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10a697996feL, 0x10a6979f36bL, \"variable\")));\n    }\n    for (SNode additionalVar : SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10a698082feL, 0xe5318742b9d1411L, \"additionalVar\"))) {\n      this.append(\", \");\n      appendNode(additionalVar);\n    }\n    this.append(\"; \");\n    if ((SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10a698082feL, 0x10a69819132L, \"condition\")) != null)) {\n      appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10a698082feL, 0x10a69819132L, \"condition\")));\n    }\n    this.append(\";\");\n    if (ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10a698082feL, 0x10a6981b2c5L, \"iteration\"))).isNotEmpty()) {\n      this.append(\" \");\n    }\n    {\n      Iterable<SNode> collection = SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10a698082feL, 0x10a6981b2c5L, \"iteration\"));\n      final SNode lastItem = Sequence.fromIterable(collection).last();\n      for (SNode item : collection) {\n        appendNode(item);\n        if (item != lastItem) {\n          append(\", \");\n        }\n      }\n    }\n    this.append(\") {\");\n    this.increaseDepth();\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cb1ac5adeL, 0x10cb1ada6e8L, \"body\")));\n    this.decreaseDepth();\n    this.appendNewLine();\n    this.appendWithIndent(\"}\");\n    if (getBuffer().hasPositionsSupport()) {\n      {\n        String traceableProperty = \"\";\n        try {\n          traceableProperty = BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{});\n        } catch (Throwable t) {\n          if (LOG.isEnabledFor(Level.ERROR)) {\n            LOG.error(\"Can't calculate traceable prorerty for a node \" + node + \".\", t);\n          }\n        }\n        TraceInfoGenerationUtil.fillPositionInfo(this, node, traceableProperty);\n      }\n      {\n        List<SNode> scopeVariables = new ArrayList<SNode>();\n        try {\n          scopeVariables = BehaviorReflection.invokeVirtual((Class<List<SNode>>) ((Class) Object.class), SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a2L, \"jetbrains.mps.lang.traceable.structure.ScopeConcept\")), \"virtual_getScopeVariables_5067982036267369894\", new Object[]{});\n        } catch (Throwable t) {\n          if (LOG.isEnabledFor(Level.ERROR)) {\n            LOG.error(\"Can't calculate scope variables for a node \" + node + \".\", t);\n          }\n        }\n        TraceInfoGenerationUtil.fillScopeInfo(this, node, scopeVariables);\n      }\n    }\n  }","id":13811,"modified_method":"public void doGenerateText(SNode node) {\n    createPositionInfo(node);\n    createScopeInfo(node);\n    if (SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cb1ac5adeL, 0x50c493bf9555131L, \"loopLabel\")) != null) {\n      this.appendNewLine();\n      this.append(SPropertyOperations.getString(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cb1ac5adeL, 0x50c493bf9555131L, \"loopLabel\")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\")));\n      this.append(\":\");\n    } else if (SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cb1ac5adeL, 0x11745b5371dL, \"label\")) != null) {\n      this.appendNewLine();\n      this.append(SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cb1ac5adeL, 0x11745b5371dL, \"label\")));\n      this.append(\":\");\n    }\n    this.appendNewLine();\n    this.indentBuffer();\n    this.append(\"for (\");\n    if ((SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10a697996feL, 0x10a6979f36bL, \"variable\")) != null)) {\n      appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10a697996feL, 0x10a6979f36bL, \"variable\")));\n    }\n    for (SNode additionalVar : SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10a698082feL, 0xe5318742b9d1411L, \"additionalVar\"))) {\n      this.append(\", \");\n      appendNode(additionalVar);\n    }\n    this.append(\"; \");\n    if ((SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10a698082feL, 0x10a69819132L, \"condition\")) != null)) {\n      appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10a698082feL, 0x10a69819132L, \"condition\")));\n    }\n    this.append(\";\");\n    if (ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10a698082feL, 0x10a6981b2c5L, \"iteration\"))).isNotEmpty()) {\n      this.append(\" \");\n    }\n    {\n      Iterable<SNode> collection = SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10a698082feL, 0x10a6981b2c5L, \"iteration\"));\n      final SNode lastItem = Sequence.fromIterable(collection).last();\n      for (SNode item : collection) {\n        appendNode(item);\n        if (item != lastItem) {\n          append(\", \");\n        }\n      }\n    }\n    this.append(\") {\");\n    this.increaseDepth();\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cb1ac5adeL, 0x10cb1ada6e8L, \"body\")));\n    this.decreaseDepth();\n    this.appendNewLine();\n    this.appendWithIndent(\"}\");\n    if (getBuffer().hasPositionsSupport()) {\n      fillPositionInfo(node, BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{}));\n      fillScopeInfo(node, BehaviorReflection.invokeVirtual((Class<List<SNode>>) ((Class) Object.class), SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a2L, \"jetbrains.mps.lang.traceable.structure.ScopeConcept\")), \"virtual_getScopeVariables_5067982036267369894\", new Object[]{}));\n    }\n  }","commit_id":"6dedeb220b768c18099aec98384a0780bad56d05","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doGenerateText(SNode node) {\n    if (getBuffer().hasPositionsSupport()) {\n      TraceInfoGenerationUtil.createPositionInfo(this, node);\n      TraceInfoGenerationUtil.createScopeInfo(this, node);\n    }\n    if (SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cb1ac5adeL, 0x50c493bf9555131L, \"loopLabel\")) != null) {\n      this.appendNewLine();\n      this.append(SPropertyOperations.getString(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cb1ac5adeL, 0x50c493bf9555131L, \"loopLabel\")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\")));\n      this.append(\":\");\n    } else if (SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cb1ac5adeL, 0x11745b5371dL, \"label\")) != null) {\n      this.appendNewLine();\n      this.append(SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cb1ac5adeL, 0x11745b5371dL, \"label\")));\n      this.append(\":\");\n    }\n    this.appendNewLine();\n    this.indentBuffer();\n    this.append(\"for (\");\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10a697996feL, 0x10a6979f36bL, \"variable\")));\n    this.append(\" : \");\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10a6933ce33L, 0x10a6934ab66L, \"iterable\")));\n    this.append(\") {\");\n    this.increaseDepth();\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cb1ac5adeL, 0x10cb1ada6e8L, \"body\")));\n    this.decreaseDepth();\n    this.appendNewLine();\n    this.appendWithIndent(\"}\");\n    if (getBuffer().hasPositionsSupport()) {\n      {\n        String traceableProperty = \"\";\n        try {\n          traceableProperty = BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{});\n        } catch (Throwable t) {\n          if (LOG.isEnabledFor(Level.ERROR)) {\n            LOG.error(\"Can't calculate traceable prorerty for a node \" + node + \".\", t);\n          }\n        }\n        TraceInfoGenerationUtil.fillPositionInfo(this, node, traceableProperty);\n      }\n      {\n        List<SNode> scopeVariables = new ArrayList<SNode>();\n        try {\n          scopeVariables = BehaviorReflection.invokeVirtual((Class<List<SNode>>) ((Class) Object.class), SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a2L, \"jetbrains.mps.lang.traceable.structure.ScopeConcept\")), \"virtual_getScopeVariables_5067982036267369894\", new Object[]{});\n        } catch (Throwable t) {\n          if (LOG.isEnabledFor(Level.ERROR)) {\n            LOG.error(\"Can't calculate scope variables for a node \" + node + \".\", t);\n          }\n        }\n        TraceInfoGenerationUtil.fillScopeInfo(this, node, scopeVariables);\n      }\n    }\n  }","id":13812,"modified_method":"public void doGenerateText(SNode node) {\n    createPositionInfo(node);\n    createScopeInfo(node);\n    if (SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cb1ac5adeL, 0x50c493bf9555131L, \"loopLabel\")) != null) {\n      this.appendNewLine();\n      this.append(SPropertyOperations.getString(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cb1ac5adeL, 0x50c493bf9555131L, \"loopLabel\")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\")));\n      this.append(\":\");\n    } else if (SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cb1ac5adeL, 0x11745b5371dL, \"label\")) != null) {\n      this.appendNewLine();\n      this.append(SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cb1ac5adeL, 0x11745b5371dL, \"label\")));\n      this.append(\":\");\n    }\n    this.appendNewLine();\n    this.indentBuffer();\n    this.append(\"for (\");\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10a697996feL, 0x10a6979f36bL, \"variable\")));\n    this.append(\" : \");\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10a6933ce33L, 0x10a6934ab66L, \"iterable\")));\n    this.append(\") {\");\n    this.increaseDepth();\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cb1ac5adeL, 0x10cb1ada6e8L, \"body\")));\n    this.decreaseDepth();\n    this.appendNewLine();\n    this.appendWithIndent(\"}\");\n    if (getBuffer().hasPositionsSupport()) {\n      fillPositionInfo(node, BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{}));\n      fillScopeInfo(node, BehaviorReflection.invokeVirtual((Class<List<SNode>>) ((Class) Object.class), SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a2L, \"jetbrains.mps.lang.traceable.structure.ScopeConcept\")), \"virtual_getScopeVariables_5067982036267369894\", new Object[]{}));\n    }\n  }","commit_id":"6dedeb220b768c18099aec98384a0780bad56d05","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doGenerateText(SNode node) {\n    if (getBuffer().hasPositionsSupport()) {\n      TraceInfoGenerationUtil.createPositionInfo(this, node);\n    }\n    this.appendNewLine();\n    this.indentBuffer();\n    this.append(\"if (\");\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b217L, 0xf8cc56b218L, \"condition\")));\n    this.append(\") {\");\n    this.increaseDepth();\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b217L, 0xf8cc56b219L, \"ifTrue\")));\n    this.decreaseDepth();\n    this.appendNewLine();\n    this.appendWithIndent(\"}\");\n    {\n      Iterable<SNode> collection = SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b217L, 0x118cecf1287L, \"elsifClauses\"));\n      for (SNode item : collection) {\n        appendNode(item);\n      }\n    }\n    if ((SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b217L, 0xfc092b6b76L, \"ifFalseStatement\")) != null)) {\n      this.append(\" else\");\n      appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b217L, 0xfc092b6b76L, \"ifFalseStatement\")));\n    }\n    if (getBuffer().hasPositionsSupport()) {\n      {\n        String traceableProperty = \"\";\n        try {\n          traceableProperty = BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{});\n        } catch (Throwable t) {\n          if (LOG.isEnabledFor(Level.ERROR)) {\n            LOG.error(\"Can't calculate traceable prorerty for a node \" + node + \".\", t);\n          }\n        }\n        TraceInfoGenerationUtil.fillPositionInfo(this, node, traceableProperty);\n      }\n    }\n  }","id":13813,"modified_method":"public void doGenerateText(SNode node) {\n    createPositionInfo(node);\n    this.appendNewLine();\n    this.indentBuffer();\n    this.append(\"if (\");\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b217L, 0xf8cc56b218L, \"condition\")));\n    this.append(\") {\");\n    this.increaseDepth();\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b217L, 0xf8cc56b219L, \"ifTrue\")));\n    this.decreaseDepth();\n    this.appendNewLine();\n    this.appendWithIndent(\"}\");\n    {\n      Iterable<SNode> collection = SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b217L, 0x118cecf1287L, \"elsifClauses\"));\n      for (SNode item : collection) {\n        appendNode(item);\n      }\n    }\n    if ((SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b217L, 0xfc092b6b76L, \"ifFalseStatement\")) != null)) {\n      this.append(\" else\");\n      appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b217L, 0xfc092b6b76L, \"ifFalseStatement\")));\n    }\n    if (getBuffer().hasPositionsSupport()) {\n      fillPositionInfo(node, BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{}));\n    }\n  }","commit_id":"6dedeb220b768c18099aec98384a0780bad56d05","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doGenerateText(SNode node) {\n    if (getBuffer().hasPositionsSupport()) {\n      TraceInfoGenerationUtil.createPositionInfo(this, node);\n      TraceInfoGenerationUtil.createScopeInfo(this, node);\n    }\n    if ((AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf280165065d5424eL, 0xbb1b463a8781b786L, 0x4a3c146b7faeeb34L, \"jetbrains.mps.baseLanguage.javadoc.structure.MethodDocComment\"))) != null)) {\n      appendNode(AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf280165065d5424eL, 0xbb1b463a8781b786L, 0x4a3c146b7faeeb34L, \"jetbrains.mps.baseLanguage.javadoc.structure.MethodDocComment\"))));\n    }\n    BaseLanguageTextGen.annotations(node, this);\n    BaseLanguageTextGen.visibilityWithIndent(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112670d273fL, 0x112670d886aL, \"visibility\")), this);\n    if (SPropertyOperations.getBoolean(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0x113294bffd2L, \"isFinal\"))) {\n      this.append(\"final \");\n    }\n    if (SPropertyOperations.getBoolean(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b21dL, 0x1126a8d157dL, \"isAbstract\")) && !(SNodeOperations.isInstanceOf(SNodeOperations.getParent(node), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101edd46144L, \"jetbrains.mps.baseLanguage.structure.Interface\")))) {\n      this.append(\"abstract \");\n    }\n    if (SPropertyOperations.getBoolean(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0x3b576cda23612c7aL, \"isSynchronized\"))) {\n      this.append(\"synchronized \");\n    }\n    if (SPropertyOperations.getBoolean(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x6c6b6a1e379f9408L, 0x73f30e3df95c0b73L, \"isNative\"))) {\n      this.append(\"native \");\n    }\n    GenericDeclarationTextGen2.typeDeclarations(node, this);\n    if (ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x102463b447aL, 0x102463bb98eL, \"typeVariableDeclaration\"))).isNotEmpty()) {\n      this.append(\" \");\n    }\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1fdL, \"returnType\")));\n    this.append(\" \");\n    this.append(SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\")));\n    this.append(\"(\");\n    {\n      Iterable<SNode> collection = SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1feL, \"parameter\"));\n      final SNode lastItem = Sequence.fromIterable(collection).last();\n      for (SNode item : collection) {\n        appendNode(item);\n        if (item != lastItem) {\n          append(\", \");\n        }\n      }\n    }\n    this.append(\")\");\n    if (ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0x10f383d6949L, \"throwsItem\"))).isNotEmpty()) {\n      this.append(\" throws \");\n      {\n        Iterable<SNode> collection = SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0x10f383d6949L, \"throwsItem\"));\n        final SNode lastItem = Sequence.fromIterable(collection).last();\n        for (SNode item : collection) {\n          appendNode(item);\n          if (item != lastItem) {\n            append(\", \");\n          }\n        }\n      }\n    }\n    if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(node), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101edd46144L, \"jetbrains.mps.baseLanguage.structure.Interface\")) || BehaviorReflection.invokeVirtual(Boolean.TYPE, node, \"virtual_isAbstract_1232982539764\", new Object[]{})) {\n      this.append(\";\");\n      this.appendNewLine();\n    } else {\n      this.append(\" {\");\n      this.increaseDepth();\n      if ((SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1ffL, \"body\")) != null)) {\n        appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1ffL, \"body\")));\n      } else {\n        this.appendNewLine();\n        this.appendWithIndent(\"throw new RuntimeException(\\\"NOT IMPLEMENTED\\\");\");\n      }\n      this.decreaseDepth();\n      this.appendNewLine();\n      this.appendWithIndent(\"}\");\n      this.appendNewLine();\n    }\n    if (getBuffer().hasPositionsSupport()) {\n      {\n        String traceableProperty = \"\";\n        try {\n          traceableProperty = BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{});\n        } catch (Throwable t) {\n          if (LOG.isEnabledFor(Level.ERROR)) {\n            LOG.error(\"Can't calculate traceable prorerty for a node \" + node + \".\", t);\n          }\n        }\n        TraceInfoGenerationUtil.fillPositionInfo(this, node, traceableProperty);\n      }\n      {\n        List<SNode> scopeVariables = new ArrayList<SNode>();\n        try {\n          scopeVariables = BehaviorReflection.invokeVirtual((Class<List<SNode>>) ((Class) Object.class), SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a2L, \"jetbrains.mps.lang.traceable.structure.ScopeConcept\")), \"virtual_getScopeVariables_5067982036267369894\", new Object[]{});\n        } catch (Throwable t) {\n          if (LOG.isEnabledFor(Level.ERROR)) {\n            LOG.error(\"Can't calculate scope variables for a node \" + node + \".\", t);\n          }\n        }\n        TraceInfoGenerationUtil.fillScopeInfo(this, node, scopeVariables);\n      }\n    }\n  }","id":13814,"modified_method":"public void doGenerateText(SNode node) {\n    createPositionInfo(node);\n    createScopeInfo(node);\n    if ((AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf280165065d5424eL, 0xbb1b463a8781b786L, 0x4a3c146b7faeeb34L, \"jetbrains.mps.baseLanguage.javadoc.structure.MethodDocComment\"))) != null)) {\n      appendNode(AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf280165065d5424eL, 0xbb1b463a8781b786L, 0x4a3c146b7faeeb34L, \"jetbrains.mps.baseLanguage.javadoc.structure.MethodDocComment\"))));\n    }\n    BaseLanguageTextGen.annotations(node, this);\n    BaseLanguageTextGen.visibilityWithIndent(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112670d273fL, 0x112670d886aL, \"visibility\")), this);\n    if (SPropertyOperations.getBoolean(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0x113294bffd2L, \"isFinal\"))) {\n      this.append(\"final \");\n    }\n    if (SPropertyOperations.getBoolean(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b21dL, 0x1126a8d157dL, \"isAbstract\")) && !(SNodeOperations.isInstanceOf(SNodeOperations.getParent(node), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101edd46144L, \"jetbrains.mps.baseLanguage.structure.Interface\")))) {\n      this.append(\"abstract \");\n    }\n    if (SPropertyOperations.getBoolean(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0x3b576cda23612c7aL, \"isSynchronized\"))) {\n      this.append(\"synchronized \");\n    }\n    if (SPropertyOperations.getBoolean(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x6c6b6a1e379f9408L, 0x73f30e3df95c0b73L, \"isNative\"))) {\n      this.append(\"native \");\n    }\n    GenericDeclarationTextGen2.typeDeclarations(node, this);\n    if (ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x102463b447aL, 0x102463bb98eL, \"typeVariableDeclaration\"))).isNotEmpty()) {\n      this.append(\" \");\n    }\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1fdL, \"returnType\")));\n    this.append(\" \");\n    this.append(SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\")));\n    this.append(\"(\");\n    {\n      Iterable<SNode> collection = SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1feL, \"parameter\"));\n      final SNode lastItem = Sequence.fromIterable(collection).last();\n      for (SNode item : collection) {\n        appendNode(item);\n        if (item != lastItem) {\n          append(\", \");\n        }\n      }\n    }\n    this.append(\")\");\n    if (ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0x10f383d6949L, \"throwsItem\"))).isNotEmpty()) {\n      this.append(\" throws \");\n      {\n        Iterable<SNode> collection = SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0x10f383d6949L, \"throwsItem\"));\n        final SNode lastItem = Sequence.fromIterable(collection).last();\n        for (SNode item : collection) {\n          appendNode(item);\n          if (item != lastItem) {\n            append(\", \");\n          }\n        }\n      }\n    }\n    if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(node), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101edd46144L, \"jetbrains.mps.baseLanguage.structure.Interface\")) || BehaviorReflection.invokeVirtual(Boolean.TYPE, node, \"virtual_isAbstract_1232982539764\", new Object[]{})) {\n      this.append(\";\");\n      this.appendNewLine();\n    } else {\n      this.append(\" {\");\n      this.increaseDepth();\n      if ((SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1ffL, \"body\")) != null)) {\n        appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1ffL, \"body\")));\n      } else {\n        this.appendNewLine();\n        this.appendWithIndent(\"throw new RuntimeException(\\\"NOT IMPLEMENTED\\\");\");\n      }\n      this.decreaseDepth();\n      this.appendNewLine();\n      this.appendWithIndent(\"}\");\n      this.appendNewLine();\n    }\n    if (getBuffer().hasPositionsSupport()) {\n      fillPositionInfo(node, BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{}));\n      fillScopeInfo(node, BehaviorReflection.invokeVirtual((Class<List<SNode>>) ((Class) Object.class), SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a2L, \"jetbrains.mps.lang.traceable.structure.ScopeConcept\")), \"virtual_getScopeVariables_5067982036267369894\", new Object[]{}));\n    }\n  }","commit_id":"6dedeb220b768c18099aec98384a0780bad56d05","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doGenerateText(SNode node) {\n    if (getBuffer().hasPositionsSupport()) {\n      TraceInfoGenerationUtil.createUnitInfo(this, node);\n    }\n    if ((AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf280165065d5424eL, 0xbb1b463a8781b786L, 0x1cb65d9fe66a764cL, \"jetbrains.mps.baseLanguage.javadoc.structure.ClassifierDocComment\"))) != null)) {\n      appendNode(AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf280165065d5424eL, 0xbb1b463a8781b786L, 0x1cb65d9fe66a764cL, \"jetbrains.mps.baseLanguage.javadoc.structure.ClassifierDocComment\"))));\n    }\n    BaseLanguageTextGen.fileHeader(node, this);\n    BaseLanguageTextGen.annotations(node, this);\n    BaseLanguageTextGen.visibilityWithIndent(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112670d273fL, 0x112670d886aL, \"visibility\")), this);\n    if (!(ListSequence.fromList(SModelOperations.roots(SNodeOperations.getModel(node), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101edd46144L, \"jetbrains.mps.baseLanguage.structure.Interface\"))).contains(node))) {\n      this.append(\"static \");\n    }\n    this.append(\"interface \");\n    this.append(JavaNameUtil.shortName(SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\"))));\n    GenericDeclarationTextGen2.typeDeclarations(node, this);\n    if (ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101edd46144L, 0x101eddadad7L, \"extendedInterface\"))).isNotEmpty()) {\n      this.append(\" extends \");\n      {\n        Iterable<SNode> collection = SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101edd46144L, 0x101eddadad7L, \"extendedInterface\"));\n        final SNode lastItem = Sequence.fromIterable(collection).last();\n        for (SNode item : collection) {\n          appendNode(item);\n          if (item != lastItem) {\n            append(\", \");\n          }\n        }\n      }\n    }\n    this.append(\" \");\n    BaseClassConceptTextGen.membersWithBrackets(node, true, this);\n    this.appendNewLine();\n    if (getBuffer().hasPositionsSupport()) {\n      {\n        String unitName = null;\n        try {\n          unitName = BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a4L, \"jetbrains.mps.lang.traceable.structure.UnitConcept\")), \"virtual_getUnitName_5067982036267369911\", new Object[]{});\n        } catch (Throwable t) {\n          if (LOG.isEnabledFor(Level.ERROR)) {\n            LOG.error(\"Can't calculate unit name for a node \" + node + \".\", t);\n          }\n        }\n        TraceInfoGenerationUtil.fillUnitInfo(this, node, unitName);\n      }\n    }\n  }","id":13815,"modified_method":"public void doGenerateText(SNode node) {\n    createUnitInfo(node);\n    if ((AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf280165065d5424eL, 0xbb1b463a8781b786L, 0x1cb65d9fe66a764cL, \"jetbrains.mps.baseLanguage.javadoc.structure.ClassifierDocComment\"))) != null)) {\n      appendNode(AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf280165065d5424eL, 0xbb1b463a8781b786L, 0x1cb65d9fe66a764cL, \"jetbrains.mps.baseLanguage.javadoc.structure.ClassifierDocComment\"))));\n    }\n    BaseLanguageTextGen.fileHeader(node, this);\n    BaseLanguageTextGen.annotations(node, this);\n    BaseLanguageTextGen.visibilityWithIndent(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112670d273fL, 0x112670d886aL, \"visibility\")), this);\n    if (!(ListSequence.fromList(SModelOperations.roots(SNodeOperations.getModel(node), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101edd46144L, \"jetbrains.mps.baseLanguage.structure.Interface\"))).contains(node))) {\n      this.append(\"static \");\n    }\n    this.append(\"interface \");\n    this.append(JavaNameUtil.shortName(SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\"))));\n    GenericDeclarationTextGen2.typeDeclarations(node, this);\n    if (ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101edd46144L, 0x101eddadad7L, \"extendedInterface\"))).isNotEmpty()) {\n      this.append(\" extends \");\n      {\n        Iterable<SNode> collection = SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101edd46144L, 0x101eddadad7L, \"extendedInterface\"));\n        final SNode lastItem = Sequence.fromIterable(collection).last();\n        for (SNode item : collection) {\n          appendNode(item);\n          if (item != lastItem) {\n            append(\", \");\n          }\n        }\n      }\n    }\n    this.append(\" \");\n    BaseClassConceptTextGen.membersWithBrackets(node, true, this);\n    this.appendNewLine();\n    if (getBuffer().hasPositionsSupport()) {\n      fillUnitInfo(node, BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a4L, \"jetbrains.mps.lang.traceable.structure.UnitConcept\")), \"virtual_getUnitName_5067982036267369911\", new Object[]{}));\n    }\n  }","commit_id":"6dedeb220b768c18099aec98384a0780bad56d05","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doGenerateText(SNode node) {\n    if (getBuffer().hasPositionsSupport()) {\n      TraceInfoGenerationUtil.createUnitInfo(this, node);\n    }\n    BaseLangInternal.className(SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xdf345b11b8c74213L, 0xac6648d2a9b75d88L, 0x2f7b79225e746809L, 0x2f7b79225e7468e5L, \"fqClassName\")), node, this);\n    if (ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xdf345b11b8c74213L, 0xac6648d2a9b75d88L, 0x2f7b79225e746809L, 0x2f7b79225e74680dL, \"typeParameter\"))).isNotEmpty()) {\n      this.append(\"<\");\n      {\n        Iterable<SNode> collection = SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xdf345b11b8c74213L, 0xac6648d2a9b75d88L, 0x2f7b79225e746809L, 0x2f7b79225e74680dL, \"typeParameter\"));\n        final SNode lastItem = Sequence.fromIterable(collection).last();\n        for (SNode item : collection) {\n          appendNode(item);\n          if (item != lastItem) {\n            append(\", \");\n          }\n        }\n      }\n      this.append(\">\");\n    }\n    this.append(\"(\");\n    {\n      Iterable<SNode> collection = SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xdf345b11b8c74213L, 0xac6648d2a9b75d88L, 0x2f7b79225e746809L, 0x2f7b79225e74680cL, \"constructorArgument\"));\n      final SNode lastItem = Sequence.fromIterable(collection).last();\n      for (SNode item : collection) {\n        appendNode(item);\n        if (item != lastItem) {\n          append(\", \");\n        }\n      }\n    }\n    this.append(\")\");\n    this.append(\" \");\n    BaseClassConceptTextGen.membersWithBrackets(node, false, this);\n    if (getBuffer().hasPositionsSupport()) {\n      {\n        String unitName = null;\n        try {\n          unitName = BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a4L, \"jetbrains.mps.lang.traceable.structure.UnitConcept\")), \"virtual_getUnitName_5067982036267369911\", new Object[]{});\n        } catch (Throwable t) {\n          if (LOG.isEnabledFor(Level.ERROR)) {\n            LOG.error(\"Can't calculate unit name for a node \" + node + \".\", t);\n          }\n        }\n        TraceInfoGenerationUtil.fillUnitInfo(this, node, unitName);\n      }\n    }\n  }","id":13816,"modified_method":"public void doGenerateText(SNode node) {\n    createUnitInfo(node);\n    BaseLangInternal.className(SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xdf345b11b8c74213L, 0xac6648d2a9b75d88L, 0x2f7b79225e746809L, 0x2f7b79225e7468e5L, \"fqClassName\")), node, this);\n    if (ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xdf345b11b8c74213L, 0xac6648d2a9b75d88L, 0x2f7b79225e746809L, 0x2f7b79225e74680dL, \"typeParameter\"))).isNotEmpty()) {\n      this.append(\"<\");\n      {\n        Iterable<SNode> collection = SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xdf345b11b8c74213L, 0xac6648d2a9b75d88L, 0x2f7b79225e746809L, 0x2f7b79225e74680dL, \"typeParameter\"));\n        final SNode lastItem = Sequence.fromIterable(collection).last();\n        for (SNode item : collection) {\n          appendNode(item);\n          if (item != lastItem) {\n            append(\", \");\n          }\n        }\n      }\n      this.append(\">\");\n    }\n    this.append(\"(\");\n    {\n      Iterable<SNode> collection = SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xdf345b11b8c74213L, 0xac6648d2a9b75d88L, 0x2f7b79225e746809L, 0x2f7b79225e74680cL, \"constructorArgument\"));\n      final SNode lastItem = Sequence.fromIterable(collection).last();\n      for (SNode item : collection) {\n        appendNode(item);\n        if (item != lastItem) {\n          append(\", \");\n        }\n      }\n    }\n    this.append(\")\");\n    this.append(\" \");\n    BaseClassConceptTextGen.membersWithBrackets(node, false, this);\n    if (getBuffer().hasPositionsSupport()) {\n      fillUnitInfo(node, BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a4L, \"jetbrains.mps.lang.traceable.structure.UnitConcept\")), \"virtual_getUnitName_5067982036267369911\", new Object[]{}));\n    }\n  }","commit_id":"6dedeb220b768c18099aec98384a0780bad56d05","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doGenerateText(SNode node) {\n    if (getBuffer().hasPositionsSupport()) {\n      TraceInfoGenerationUtil.createPositionInfo(this, node);\n    }\n    this.appendNewLine();\n    this.indentBuffer();\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc67c7f0L, 0xf8cc67c7f1L, \"localVariableDeclaration\")));\n    this.append(\";\");\n    if (getBuffer().hasPositionsSupport()) {\n      {\n        String traceableProperty = \"\";\n        try {\n          traceableProperty = BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{});\n        } catch (Throwable t) {\n          if (LOG.isEnabledFor(Level.ERROR)) {\n            LOG.error(\"Can't calculate traceable prorerty for a node \" + node + \".\", t);\n          }\n        }\n        TraceInfoGenerationUtil.fillPositionInfo(this, node, traceableProperty);\n      }\n    }\n  }","id":13817,"modified_method":"public void doGenerateText(SNode node) {\n    createPositionInfo(node);\n    this.appendNewLine();\n    this.indentBuffer();\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc67c7f0L, 0xf8cc67c7f1L, \"localVariableDeclaration\")));\n    this.append(\";\");\n    if (getBuffer().hasPositionsSupport()) {\n      fillPositionInfo(node, BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{}));\n    }\n  }","commit_id":"6dedeb220b768c18099aec98384a0780bad56d05","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doGenerateText(SNode node) {\n    if (getBuffer().hasPositionsSupport()) {\n      TraceInfoGenerationUtil.createUnitInfo(this, node);\n    }\n    getBuffer().putUserObject(TextGen.OUTPUT_ENCODING, \"ISO-8859-1\");\n    {\n      Iterable<SNode> collection = SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0x58f98fef90ad4b72L, 0xa390fad66ec7005aL, 0x36fb0dc9fd3a2754L, 0x36fb0dc9fd3a3ac3L, \"lines\"));\n      for (SNode item : collection) {\n        appendNode(item);\n      }\n    }\n    if (getBuffer().hasPositionsSupport()) {\n      {\n        String unitName = null;\n        try {\n          unitName = BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a4L, \"jetbrains.mps.lang.traceable.structure.UnitConcept\")), \"virtual_getUnitName_5067982036267369911\", new Object[]{});\n        } catch (Throwable t) {\n          if (LOG.isEnabledFor(Level.ERROR)) {\n            LOG.error(\"Can't calculate unit name for a node \" + node + \".\", t);\n          }\n        }\n        TraceInfoGenerationUtil.fillUnitInfo(this, node, unitName);\n      }\n    }\n  }","id":13818,"modified_method":"public void doGenerateText(SNode node) {\n    createUnitInfo(node);\n    setEncoding(\"ISO-8859-1\");\n    {\n      Iterable<SNode> collection = SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0x58f98fef90ad4b72L, 0xa390fad66ec7005aL, 0x36fb0dc9fd3a2754L, 0x36fb0dc9fd3a3ac3L, \"lines\"));\n      for (SNode item : collection) {\n        appendNode(item);\n      }\n    }\n    if (getBuffer().hasPositionsSupport()) {\n      fillUnitInfo(node, BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a4L, \"jetbrains.mps.lang.traceable.structure.UnitConcept\")), \"virtual_getUnitName_5067982036267369911\", new Object[]{}));\n    }\n  }","commit_id":"6dedeb220b768c18099aec98384a0780bad56d05","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doGenerateText(SNode node) {\n    if (getBuffer().hasPositionsSupport()) {\n      TraceInfoGenerationUtil.createPositionInfo(this, node);\n    }\n    if (SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1101757c8faL, 0x110175cdb2bL, \"value\")) != null) {\n      this.appendNewLine();\n      this.appendWithIndent(\"// \");\n      this.append(SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1101757c8faL, 0x110175cdb2bL, \"value\")));\n    } else {\n      this.appendNewLine();\n      this.appendWithIndent(\"// \");\n    }\n    if (getBuffer().hasPositionsSupport()) {\n      {\n        String traceableProperty = \"\";\n        try {\n          traceableProperty = BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{});\n        } catch (Throwable t) {\n          if (LOG.isEnabledFor(Level.ERROR)) {\n            LOG.error(\"Can't calculate traceable prorerty for a node \" + node + \".\", t);\n          }\n        }\n        TraceInfoGenerationUtil.fillPositionInfo(this, node, traceableProperty);\n      }\n    }\n  }","id":13819,"modified_method":"public void doGenerateText(SNode node) {\n    createPositionInfo(node);\n    if (SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1101757c8faL, 0x110175cdb2bL, \"value\")) != null) {\n      this.appendNewLine();\n      this.appendWithIndent(\"// \");\n      this.append(SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1101757c8faL, 0x110175cdb2bL, \"value\")));\n    } else {\n      this.appendNewLine();\n      this.appendWithIndent(\"// \");\n    }\n    if (getBuffer().hasPositionsSupport()) {\n      fillPositionInfo(node, BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{}));\n    }\n  }","commit_id":"6dedeb220b768c18099aec98384a0780bad56d05","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doGenerateText(SNode node) {\n    if (getBuffer().hasPositionsSupport()) {\n      TraceInfoGenerationUtil.createPositionInfo(this, node);\n    }\n    this.appendNewLine();\n    this.appendWithIndent(\"return\");\n    if ((SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc67c7feL, 0xf8cc6bf96cL, \"expression\")) != null)) {\n      this.append(\" \");\n      appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc67c7feL, 0xf8cc6bf96cL, \"expression\")));\n    }\n    this.append(\";\");\n    if (getBuffer().hasPositionsSupport()) {\n      {\n        String traceableProperty = \"\";\n        try {\n          traceableProperty = BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{});\n        } catch (Throwable t) {\n          if (LOG.isEnabledFor(Level.ERROR)) {\n            LOG.error(\"Can't calculate traceable prorerty for a node \" + node + \".\", t);\n          }\n        }\n        TraceInfoGenerationUtil.fillPositionInfo(this, node, traceableProperty);\n      }\n    }\n  }","id":13820,"modified_method":"public void doGenerateText(SNode node) {\n    createPositionInfo(node);\n    this.appendNewLine();\n    this.appendWithIndent(\"return\");\n    if ((SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc67c7feL, 0xf8cc6bf96cL, \"expression\")) != null)) {\n      this.append(\" \");\n      appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc67c7feL, 0xf8cc6bf96cL, \"expression\")));\n    }\n    this.append(\";\");\n    if (getBuffer().hasPositionsSupport()) {\n      fillPositionInfo(node, BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{}));\n    }\n  }","commit_id":"6dedeb220b768c18099aec98384a0780bad56d05","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doGenerateText(SNode node) {\n    if (getBuffer().hasPositionsSupport()) {\n      TraceInfoGenerationUtil.createPositionInfo(this, node);\n    }\n    this.appendNewLine();\n    this.indentBuffer();\n    this.append(\"// \");\n    for (SNode commentPart : SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x57d533a7af15ed3aL, 0x57d533a7af16ff73L, \"commentPart\"))) {\n      appendNode(commentPart);\n      this.append(\" \");\n    }\n    if (getBuffer().hasPositionsSupport()) {\n      {\n        String traceableProperty = \"\";\n        try {\n          traceableProperty = BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{});\n        } catch (Throwable t) {\n          if (LOG.isEnabledFor(Level.ERROR)) {\n            LOG.error(\"Can't calculate traceable prorerty for a node \" + node + \".\", t);\n          }\n        }\n        TraceInfoGenerationUtil.fillPositionInfo(this, node, traceableProperty);\n      }\n    }\n  }","id":13821,"modified_method":"public void doGenerateText(SNode node) {\n    createPositionInfo(node);\n    this.appendNewLine();\n    this.indentBuffer();\n    this.append(\"// \");\n    for (SNode commentPart : SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x57d533a7af15ed3aL, 0x57d533a7af16ff73L, \"commentPart\"))) {\n      appendNode(commentPart);\n      this.append(\" \");\n    }\n    if (getBuffer().hasPositionsSupport()) {\n      fillPositionInfo(node, BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{}));\n    }\n  }","commit_id":"6dedeb220b768c18099aec98384a0780bad56d05","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doGenerateText(SNode node) {\n    if (getBuffer().hasPositionsSupport()) {\n      TraceInfoGenerationUtil.createScopeInfo(this, node);\n    }\n    for (SNode stmt : ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L, 0xf8cc6bf961L, \"statement\")))) {\n      appendNode(stmt);\n    }\n    if (getBuffer().hasPositionsSupport()) {\n      {\n        List<SNode> scopeVariables = new ArrayList<SNode>();\n        try {\n          scopeVariables = BehaviorReflection.invokeVirtual((Class<List<SNode>>) ((Class) Object.class), SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a2L, \"jetbrains.mps.lang.traceable.structure.ScopeConcept\")), \"virtual_getScopeVariables_5067982036267369894\", new Object[]{});\n        } catch (Throwable t) {\n          if (LOG.isEnabledFor(Level.ERROR)) {\n            LOG.error(\"Can't calculate scope variables for a node \" + node + \".\", t);\n          }\n        }\n        TraceInfoGenerationUtil.fillScopeInfo(this, node, scopeVariables);\n      }\n    }\n  }","id":13822,"modified_method":"public void doGenerateText(SNode node) {\n    createScopeInfo(node);\n    for (SNode stmt : ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b200L, 0xf8cc6bf961L, \"statement\")))) {\n      appendNode(stmt);\n    }\n    if (getBuffer().hasPositionsSupport()) {\n      fillScopeInfo(node, BehaviorReflection.invokeVirtual((Class<List<SNode>>) ((Class) Object.class), SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a2L, \"jetbrains.mps.lang.traceable.structure.ScopeConcept\")), \"virtual_getScopeVariables_5067982036267369894\", new Object[]{}));\n    }\n  }","commit_id":"6dedeb220b768c18099aec98384a0780bad56d05","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doGenerateText(SNode node) {\n    if (getBuffer().hasPositionsSupport()) {\n      TraceInfoGenerationUtil.createPositionInfo(this, node);\n    }\n    if (SNodeOperations.getConcept(node) != MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L, \"jetbrains.mps.baseLanguage.structure.Statement\")) {\n      this.append(\"/* error: statement w/o textGen:\");\n      this.append(BehaviorReflection.invokeVirtual(String.class, node, \"virtual_getPresentation_1213877396640\", new Object[]{}));\n      this.append(\" */\");\n    } else {\n      this.appendNewLine();\n    }\n    if (getBuffer().hasPositionsSupport()) {\n      {\n        String traceableProperty = \"\";\n        try {\n          traceableProperty = BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{});\n        } catch (Throwable t) {\n          if (LOG.isEnabledFor(Level.ERROR)) {\n            LOG.error(\"Can't calculate traceable prorerty for a node \" + node + \".\", t);\n          }\n        }\n        TraceInfoGenerationUtil.fillPositionInfo(this, node, traceableProperty);\n      }\n    }\n  }","id":13823,"modified_method":"public void doGenerateText(SNode node) {\n    createPositionInfo(node);\n    if (SNodeOperations.getConcept(node) != MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b215L, \"jetbrains.mps.baseLanguage.structure.Statement\")) {\n      this.append(\"/* error: statement w/o textGen:\");\n      this.append(BehaviorReflection.invokeVirtual(String.class, node, \"virtual_getPresentation_1213877396640\", new Object[]{}));\n      this.append(\" */\");\n    } else {\n      this.appendNewLine();\n    }\n    if (getBuffer().hasPositionsSupport()) {\n      fillPositionInfo(node, BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{}));\n    }\n  }","commit_id":"6dedeb220b768c18099aec98384a0780bad56d05","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doGenerateText(SNode node) {\n    if (getBuffer().hasPositionsSupport()) {\n      TraceInfoGenerationUtil.createPositionInfo(this, node);\n    }\n    if ((AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf280165065d5424eL, 0xbb1b463a8781b786L, 0x5ed0d79d7dc44bf2L, \"jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment\"))) != null)) {\n      appendNode(AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf280165065d5424eL, 0xbb1b463a8781b786L, 0x5ed0d79d7dc44bf2L, \"jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment\"))));\n    }\n    BaseLanguageTextGen.annotations(node, this);\n    BaseLanguageTextGen.visibilityWithIndent(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112670d273fL, 0x112670d886aL, \"visibility\")), this);\n    this.append(\"static \");\n    if (SPropertyOperations.getBoolean(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37a7f6eL, 0x111f9e9f00cL, \"isFinal\"))) {\n      this.append(\"final \");\n    }\n    if (SPropertyOperations.getBoolean(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93c84351fL, 0x59c57f2ed491ae1aL, \"isTransient\"))) {\n      this.append(\"transient \");\n    }\n    if (SPropertyOperations.getBoolean(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93c84351fL, 0x59c57f2ed491b12fL, \"isVolatile\"))) {\n      this.append(\"volatile \");\n    }\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x450368d90ce15bc3L, 0x4ed4d318133c80ceL, \"type\")));\n    this.append(\" \");\n    this.append(SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\")));\n    if ((SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37a7f6eL, 0xf8c37f506eL, \"initializer\")) != null)) {\n      this.append(\" = \");\n      appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37a7f6eL, 0xf8c37f506eL, \"initializer\")));\n    }\n    this.append(\";\");\n    this.appendNewLine();\n    if (getBuffer().hasPositionsSupport()) {\n      {\n        String traceableProperty = \"\";\n        try {\n          traceableProperty = BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{});\n        } catch (Throwable t) {\n          if (LOG.isEnabledFor(Level.ERROR)) {\n            LOG.error(\"Can't calculate traceable prorerty for a node \" + node + \".\", t);\n          }\n        }\n        TraceInfoGenerationUtil.fillPositionInfo(this, node, traceableProperty);\n      }\n    }\n  }","id":13824,"modified_method":"public void doGenerateText(SNode node) {\n    createPositionInfo(node);\n    if ((AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf280165065d5424eL, 0xbb1b463a8781b786L, 0x5ed0d79d7dc44bf2L, \"jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment\"))) != null)) {\n      appendNode(AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf280165065d5424eL, 0xbb1b463a8781b786L, 0x5ed0d79d7dc44bf2L, \"jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment\"))));\n    }\n    BaseLanguageTextGen.annotations(node, this);\n    BaseLanguageTextGen.visibilityWithIndent(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112670d273fL, 0x112670d886aL, \"visibility\")), this);\n    this.append(\"static \");\n    if (SPropertyOperations.getBoolean(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37a7f6eL, 0x111f9e9f00cL, \"isFinal\"))) {\n      this.append(\"final \");\n    }\n    if (SPropertyOperations.getBoolean(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93c84351fL, 0x59c57f2ed491ae1aL, \"isTransient\"))) {\n      this.append(\"transient \");\n    }\n    if (SPropertyOperations.getBoolean(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf93c84351fL, 0x59c57f2ed491b12fL, \"isVolatile\"))) {\n      this.append(\"volatile \");\n    }\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x450368d90ce15bc3L, 0x4ed4d318133c80ceL, \"type\")));\n    this.append(\" \");\n    this.append(SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\")));\n    if ((SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37a7f6eL, 0xf8c37f506eL, \"initializer\")) != null)) {\n      this.append(\" = \");\n      appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37a7f6eL, 0xf8c37f506eL, \"initializer\")));\n    }\n    this.append(\";\");\n    this.appendNewLine();\n    if (getBuffer().hasPositionsSupport()) {\n      fillPositionInfo(node, BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{}));\n    }\n  }","commit_id":"6dedeb220b768c18099aec98384a0780bad56d05","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doGenerateText(SNode node) {\n    if (getBuffer().hasPositionsSupport()) {\n      TraceInfoGenerationUtil.createPositionInfo(this, node);\n      TraceInfoGenerationUtil.createScopeInfo(this, node);\n    }\n    if ((AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf280165065d5424eL, 0xbb1b463a8781b786L, 0x4a3c146b7faeeb34L, \"jetbrains.mps.baseLanguage.javadoc.structure.MethodDocComment\"))) != null)) {\n      appendNode(AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf280165065d5424eL, 0xbb1b463a8781b786L, 0x4a3c146b7faeeb34L, \"jetbrains.mps.baseLanguage.javadoc.structure.MethodDocComment\"))));\n    }\n    BaseLanguageTextGen.annotations(node, this);\n    BaseLanguageTextGen.visibilityWithIndent(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112670d273fL, 0x112670d886aL, \"visibility\")), this);\n    if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(node), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L, \"jetbrains.mps.baseLanguage.structure.ClassConcept\"))) {\n      this.append(\"static \");\n    }\n    if (SPropertyOperations.getBoolean(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0x3b576cda23612c7aL, \"isSynchronized\"))) {\n      this.append(\"synchronized \");\n    }\n    if (SPropertyOperations.getBoolean(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x6c6b6a1e379f9408L, 0x73f30e3df95c0b73L, \"isNative\"))) {\n      this.append(\"native \");\n    }\n    GenericDeclarationTextGen2.typeDeclarations(node, this);\n    if (ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x102463b447aL, 0x102463bb98eL, \"typeVariableDeclaration\"))).isNotEmpty()) {\n      this.append(\" \");\n    }\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1fdL, \"returnType\")));\n    this.append(\" \");\n    this.append(SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\")));\n    this.append(\"(\");\n    {\n      Iterable<SNode> collection = SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1feL, \"parameter\"));\n      final SNode lastItem = Sequence.fromIterable(collection).last();\n      for (SNode item : collection) {\n        appendNode(item);\n        if (item != lastItem) {\n          append(\", \");\n        }\n      }\n    }\n    this.append(\")\");\n    if (ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0x10f383d6949L, \"throwsItem\"))).isNotEmpty()) {\n      this.append(\" throws \");\n      {\n        Iterable<SNode> collection = SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0x10f383d6949L, \"throwsItem\"));\n        final SNode lastItem = Sequence.fromIterable(collection).last();\n        for (SNode item : collection) {\n          appendNode(item);\n          if (item != lastItem) {\n            append(\", \");\n          }\n        }\n      }\n    }\n    if (BehaviorReflection.invokeVirtual(Boolean.TYPE, node, \"virtual_isAbstract_1232982539764\", new Object[]{})) {\n      this.append(\";\");\n      this.appendNewLine();\n    } else {\n      this.append(\" {\");\n      this.increaseDepth();\n      if ((SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1ffL, \"body\")) != null)) {\n        appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1ffL, \"body\")));\n      } else {\n        this.appendNewLine();\n        this.appendWithIndent(\"throw new RuntimeException(\\\"NOT IMPLEMENTED\\\");\");\n      }\n      this.decreaseDepth();\n      this.appendNewLine();\n      this.appendWithIndent(\"}\");\n      this.appendNewLine();\n    }\n    if (getBuffer().hasPositionsSupport()) {\n      {\n        String traceableProperty = \"\";\n        try {\n          traceableProperty = BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{});\n        } catch (Throwable t) {\n          if (LOG.isEnabledFor(Level.ERROR)) {\n            LOG.error(\"Can't calculate traceable prorerty for a node \" + node + \".\", t);\n          }\n        }\n        TraceInfoGenerationUtil.fillPositionInfo(this, node, traceableProperty);\n      }\n      {\n        List<SNode> scopeVariables = new ArrayList<SNode>();\n        try {\n          scopeVariables = BehaviorReflection.invokeVirtual((Class<List<SNode>>) ((Class) Object.class), SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a2L, \"jetbrains.mps.lang.traceable.structure.ScopeConcept\")), \"virtual_getScopeVariables_5067982036267369894\", new Object[]{});\n        } catch (Throwable t) {\n          if (LOG.isEnabledFor(Level.ERROR)) {\n            LOG.error(\"Can't calculate scope variables for a node \" + node + \".\", t);\n          }\n        }\n        TraceInfoGenerationUtil.fillScopeInfo(this, node, scopeVariables);\n      }\n    }\n  }","id":13825,"modified_method":"public void doGenerateText(SNode node) {\n    createPositionInfo(node);\n    createScopeInfo(node);\n    if ((AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf280165065d5424eL, 0xbb1b463a8781b786L, 0x4a3c146b7faeeb34L, \"jetbrains.mps.baseLanguage.javadoc.structure.MethodDocComment\"))) != null)) {\n      appendNode(AttributeOperations.getAttribute(node, new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf280165065d5424eL, 0xbb1b463a8781b786L, 0x4a3c146b7faeeb34L, \"jetbrains.mps.baseLanguage.javadoc.structure.MethodDocComment\"))));\n    }\n    BaseLanguageTextGen.annotations(node, this);\n    BaseLanguageTextGen.visibilityWithIndent(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x112670d273fL, 0x112670d886aL, \"visibility\")), this);\n    if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(node), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c108ca66L, \"jetbrains.mps.baseLanguage.structure.ClassConcept\"))) {\n      this.append(\"static \");\n    }\n    if (SPropertyOperations.getBoolean(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0x3b576cda23612c7aL, \"isSynchronized\"))) {\n      this.append(\"synchronized \");\n    }\n    if (SPropertyOperations.getBoolean(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x6c6b6a1e379f9408L, 0x73f30e3df95c0b73L, \"isNative\"))) {\n      this.append(\"native \");\n    }\n    GenericDeclarationTextGen2.typeDeclarations(node, this);\n    if (ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x102463b447aL, 0x102463bb98eL, \"typeVariableDeclaration\"))).isNotEmpty()) {\n      this.append(\" \");\n    }\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1fdL, \"returnType\")));\n    this.append(\" \");\n    this.append(SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\")));\n    this.append(\"(\");\n    {\n      Iterable<SNode> collection = SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1feL, \"parameter\"));\n      final SNode lastItem = Sequence.fromIterable(collection).last();\n      for (SNode item : collection) {\n        appendNode(item);\n        if (item != lastItem) {\n          append(\", \");\n        }\n      }\n    }\n    this.append(\")\");\n    if (ListSequence.fromList(SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0x10f383d6949L, \"throwsItem\"))).isNotEmpty()) {\n      this.append(\" throws \");\n      {\n        Iterable<SNode> collection = SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0x10f383d6949L, \"throwsItem\"));\n        final SNode lastItem = Sequence.fromIterable(collection).last();\n        for (SNode item : collection) {\n          appendNode(item);\n          if (item != lastItem) {\n            append(\", \");\n          }\n        }\n      }\n    }\n    if (BehaviorReflection.invokeVirtual(Boolean.TYPE, node, \"virtual_isAbstract_1232982539764\", new Object[]{})) {\n      this.append(\";\");\n      this.appendNewLine();\n    } else {\n      this.append(\" {\");\n      this.increaseDepth();\n      if ((SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1ffL, \"body\")) != null)) {\n        appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8cc56b1fcL, 0xf8cc56b1ffL, \"body\")));\n      } else {\n        this.appendNewLine();\n        this.appendWithIndent(\"throw new RuntimeException(\\\"NOT IMPLEMENTED\\\");\");\n      }\n      this.decreaseDepth();\n      this.appendNewLine();\n      this.appendWithIndent(\"}\");\n      this.appendNewLine();\n    }\n    if (getBuffer().hasPositionsSupport()) {\n      fillPositionInfo(node, BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{}));\n      fillScopeInfo(node, BehaviorReflection.invokeVirtual((Class<List<SNode>>) ((Class) Object.class), SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a2L, \"jetbrains.mps.lang.traceable.structure.ScopeConcept\")), \"virtual_getScopeVariables_5067982036267369894\", new Object[]{}));\n    }\n  }","commit_id":"6dedeb220b768c18099aec98384a0780bad56d05","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doGenerateText(SNode node) {\n    if (getBuffer().hasPositionsSupport()) {\n      TraceInfoGenerationUtil.createPositionInfo(this, node);\n    }\n    this.appendNewLine();\n    this.indentBuffer();\n    this.append(\"super(\");\n    {\n      Iterable<SNode> collection = SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11857355952L, 0xf8c78301aeL, \"actualArgument\"));\n      final SNode lastItem = Sequence.fromIterable(collection).last();\n      for (SNode item : collection) {\n        appendNode(item);\n        if (item != lastItem) {\n          append(\", \");\n        }\n      }\n    }\n    this.append(\");\");\n    if (getBuffer().hasPositionsSupport()) {\n      {\n        String traceableProperty = \"\";\n        try {\n          traceableProperty = BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{});\n        } catch (Throwable t) {\n          if (LOG.isEnabledFor(Level.ERROR)) {\n            LOG.error(\"Can't calculate traceable prorerty for a node \" + node + \".\", t);\n          }\n        }\n        TraceInfoGenerationUtil.fillPositionInfo(this, node, traceableProperty);\n      }\n    }\n  }","id":13826,"modified_method":"public void doGenerateText(SNode node) {\n    createPositionInfo(node);\n    this.appendNewLine();\n    this.indentBuffer();\n    this.append(\"super(\");\n    {\n      Iterable<SNode> collection = SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11857355952L, 0xf8c78301aeL, \"actualArgument\"));\n      final SNode lastItem = Sequence.fromIterable(collection).last();\n      for (SNode item : collection) {\n        appendNode(item);\n        if (item != lastItem) {\n          append(\", \");\n        }\n      }\n    }\n    this.append(\");\");\n    if (getBuffer().hasPositionsSupport()) {\n      fillPositionInfo(node, BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{}));\n    }\n  }","commit_id":"6dedeb220b768c18099aec98384a0780bad56d05","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doGenerateText(SNode node) {\n    if (getBuffer().hasPositionsSupport()) {\n      TraceInfoGenerationUtil.createPositionInfo(this, node);\n    }\n    if ((SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10ef02a8c6aL, 0x4091554b655a230eL, \"switchLabel\")) != null)) {\n      this.appendNewLine();\n      this.append(SPropertyOperations.getString(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10ef02a8c6aL, 0x4091554b655a230eL, \"switchLabel\")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\")));\n      this.append(\":\");\n    } else if (SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10ef02a8c6aL, 0x117b7e94b9bL, \"label\")) != null) {\n      this.appendNewLine();\n      this.append(SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10ef02a8c6aL, 0x117b7e94b9bL, \"label\")));\n      this.append(\":\");\n    }\n    this.appendNewLine();\n    this.appendWithIndent(\"switch (\");\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10ef02a8c6aL, 0x10ef02ec241L, \"expression\")));\n    this.append(\") {\");\n    this.increaseDepth();\n    for (SNode sc : SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10ef02a8c6aL, 0x10ef02edcafL, \"case\"))) {\n      this.appendNewLine();\n      this.appendWithIndent(\"case \");\n      if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(sc, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10ef02cdd1bL, 0x10ef02d67cfL, \"expression\")), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfc37588bc8L, \"jetbrains.mps.baseLanguage.structure.EnumConstantReference\"))) {\n        SNode enumConstant = (SNode) SLinkOperations.getTarget(sc, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10ef02cdd1bL, 0x10ef02d67cfL, \"expression\"));\n        this.append(SPropertyOperations.getString(SLinkOperations.getTarget(enumConstant, MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfc37588bc8L, 0xfc37588bcaL, \"enumConstantDeclaration\")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\")));\n      } else {\n        appendNode(SLinkOperations.getTarget(sc, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10ef02cdd1bL, 0x10ef02d67cfL, \"expression\")));\n      }\n      this.append(\":\");\n      this.increaseDepth();\n      appendNode(SLinkOperations.getTarget(sc, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10ef02cdd1bL, 0x10ef02d8048L, \"body\")));\n      this.decreaseDepth();\n    }\n    this.appendNewLine();\n    this.appendWithIndent(\"default:\");\n    this.increaseDepth();\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10ef02a8c6aL, 0x10ef02c1b6eL, \"defaultBlock\")));\n    this.decreaseDepth();\n    this.decreaseDepth();\n    this.appendNewLine();\n    this.appendWithIndent(\"}\");\n    if (getBuffer().hasPositionsSupport()) {\n      {\n        String traceableProperty = \"\";\n        try {\n          traceableProperty = BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{});\n        } catch (Throwable t) {\n          if (LOG.isEnabledFor(Level.ERROR)) {\n            LOG.error(\"Can't calculate traceable prorerty for a node \" + node + \".\", t);\n          }\n        }\n        TraceInfoGenerationUtil.fillPositionInfo(this, node, traceableProperty);\n      }\n    }\n  }","id":13827,"modified_method":"public void doGenerateText(SNode node) {\n    createPositionInfo(node);\n    if ((SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10ef02a8c6aL, 0x4091554b655a230eL, \"switchLabel\")) != null)) {\n      this.appendNewLine();\n      this.append(SPropertyOperations.getString(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10ef02a8c6aL, 0x4091554b655a230eL, \"switchLabel\")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\")));\n      this.append(\":\");\n    } else if (SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10ef02a8c6aL, 0x117b7e94b9bL, \"label\")) != null) {\n      this.appendNewLine();\n      this.append(SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10ef02a8c6aL, 0x117b7e94b9bL, \"label\")));\n      this.append(\":\");\n    }\n    this.appendNewLine();\n    this.appendWithIndent(\"switch (\");\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10ef02a8c6aL, 0x10ef02ec241L, \"expression\")));\n    this.append(\") {\");\n    this.increaseDepth();\n    for (SNode sc : SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10ef02a8c6aL, 0x10ef02edcafL, \"case\"))) {\n      this.appendNewLine();\n      this.appendWithIndent(\"case \");\n      if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(sc, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10ef02cdd1bL, 0x10ef02d67cfL, \"expression\")), MetaAdapterFactory.getConcept(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfc37588bc8L, \"jetbrains.mps.baseLanguage.structure.EnumConstantReference\"))) {\n        SNode enumConstant = (SNode) SLinkOperations.getTarget(sc, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10ef02cdd1bL, 0x10ef02d67cfL, \"expression\"));\n        this.append(SPropertyOperations.getString(SLinkOperations.getTarget(enumConstant, MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfc37588bc8L, 0xfc37588bcaL, \"enumConstantDeclaration\")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\")));\n      } else {\n        appendNode(SLinkOperations.getTarget(sc, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10ef02cdd1bL, 0x10ef02d67cfL, \"expression\")));\n      }\n      this.append(\":\");\n      this.increaseDepth();\n      appendNode(SLinkOperations.getTarget(sc, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10ef02cdd1bL, 0x10ef02d8048L, \"body\")));\n      this.decreaseDepth();\n    }\n    this.appendNewLine();\n    this.appendWithIndent(\"default:\");\n    this.increaseDepth();\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10ef02a8c6aL, 0x10ef02c1b6eL, \"defaultBlock\")));\n    this.decreaseDepth();\n    this.decreaseDepth();\n    this.appendNewLine();\n    this.appendWithIndent(\"}\");\n    if (getBuffer().hasPositionsSupport()) {\n      fillPositionInfo(node, BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{}));\n    }\n  }","commit_id":"6dedeb220b768c18099aec98384a0780bad56d05","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doGenerateText(SNode node) {\n    if (getBuffer().hasPositionsSupport()) {\n      TraceInfoGenerationUtil.createPositionInfo(this, node);\n    }\n    this.appendNewLine();\n    this.indentBuffer();\n    this.append(\"synchronized (\");\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1106df1d8d8L, 0x1106df2b910L, \"expression\")));\n    this.append(\") {\");\n    this.increaseDepth();\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1106df1d8d8L, 0x1106df2d95cL, \"block\")));\n    this.decreaseDepth();\n    this.appendNewLine();\n    this.appendWithIndent(\"}\");\n    if (getBuffer().hasPositionsSupport()) {\n      {\n        String traceableProperty = \"\";\n        try {\n          traceableProperty = BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{});\n        } catch (Throwable t) {\n          if (LOG.isEnabledFor(Level.ERROR)) {\n            LOG.error(\"Can't calculate traceable prorerty for a node \" + node + \".\", t);\n          }\n        }\n        TraceInfoGenerationUtil.fillPositionInfo(this, node, traceableProperty);\n      }\n    }\n  }","id":13828,"modified_method":"public void doGenerateText(SNode node) {\n    createPositionInfo(node);\n    this.appendNewLine();\n    this.indentBuffer();\n    this.append(\"synchronized (\");\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1106df1d8d8L, 0x1106df2b910L, \"expression\")));\n    this.append(\") {\");\n    this.increaseDepth();\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x1106df1d8d8L, 0x1106df2d95cL, \"block\")));\n    this.decreaseDepth();\n    this.appendNewLine();\n    this.appendWithIndent(\"}\");\n    if (getBuffer().hasPositionsSupport()) {\n      fillPositionInfo(node, BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{}));\n    }\n  }","commit_id":"6dedeb220b768c18099aec98384a0780bad56d05","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doGenerateText(SNode node) {\n    if (getBuffer().hasPositionsSupport()) {\n      TraceInfoGenerationUtil.createPositionInfo(this, node);\n    }\n    this.appendNewLine();\n    this.indentBuffer();\n    this.append(\"this(\");\n    {\n      Iterable<SNode> collection = SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11857355952L, 0xf8c78301aeL, \"actualArgument\"));\n      final SNode lastItem = Sequence.fromIterable(collection).last();\n      for (SNode item : collection) {\n        appendNode(item);\n        if (item != lastItem) {\n          append(\", \");\n        }\n      }\n    }\n    this.append(\");\");\n    if (getBuffer().hasPositionsSupport()) {\n      {\n        String traceableProperty = \"\";\n        try {\n          traceableProperty = BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{});\n        } catch (Throwable t) {\n          if (LOG.isEnabledFor(Level.ERROR)) {\n            LOG.error(\"Can't calculate traceable prorerty for a node \" + node + \".\", t);\n          }\n        }\n        TraceInfoGenerationUtil.fillPositionInfo(this, node, traceableProperty);\n      }\n    }\n  }","id":13829,"modified_method":"public void doGenerateText(SNode node) {\n    createPositionInfo(node);\n    this.appendNewLine();\n    this.indentBuffer();\n    this.append(\"this(\");\n    {\n      Iterable<SNode> collection = SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x11857355952L, 0xf8c78301aeL, \"actualArgument\"));\n      final SNode lastItem = Sequence.fromIterable(collection).last();\n      for (SNode item : collection) {\n        appendNode(item);\n        if (item != lastItem) {\n          append(\", \");\n        }\n      }\n    }\n    this.append(\");\");\n    if (getBuffer().hasPositionsSupport()) {\n      fillPositionInfo(node, BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{}));\n    }\n  }","commit_id":"6dedeb220b768c18099aec98384a0780bad56d05","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doGenerateText(SNode node) {\n    if (getBuffer().hasPositionsSupport()) {\n      TraceInfoGenerationUtil.createPositionInfo(this, node);\n    }\n    this.appendNewLine();\n    this.appendWithIndent(\"throw \");\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10f3ee082d8L, 0x10f3ee0cd6fL, \"throwable\")));\n    this.append(\";\");\n    if (getBuffer().hasPositionsSupport()) {\n      {\n        String traceableProperty = \"\";\n        try {\n          traceableProperty = BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{});\n        } catch (Throwable t) {\n          if (LOG.isEnabledFor(Level.ERROR)) {\n            LOG.error(\"Can't calculate traceable prorerty for a node \" + node + \".\", t);\n          }\n        }\n        TraceInfoGenerationUtil.fillPositionInfo(this, node, traceableProperty);\n      }\n    }\n  }","id":13830,"modified_method":"public void doGenerateText(SNode node) {\n    createPositionInfo(node);\n    this.appendNewLine();\n    this.appendWithIndent(\"throw \");\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10f3ee082d8L, 0x10f3ee0cd6fL, \"throwable\")));\n    this.append(\";\");\n    if (getBuffer().hasPositionsSupport()) {\n      fillPositionInfo(node, BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{}));\n    }\n  }","commit_id":"6dedeb220b768c18099aec98384a0780bad56d05","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doGenerateText(SNode node) {\n    if (getBuffer().hasPositionsSupport()) {\n      TraceInfoGenerationUtil.createPositionInfo(this, node);\n    }\n    this.appendNewLine();\n    this.indentBuffer();\n    this.append(\"try {\");\n    this.increaseDepth();\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10f383e6771L, 0x10f383e83d4L, \"body\")));\n    this.decreaseDepth();\n    this.appendNewLine();\n    for (SNode clause : SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10f383e6771L, 0x10f39a8ba1fL, \"catchClause\"))) {\n      appendNode(clause);\n      this.appendNewLine();\n    }\n    this.appendWithIndent(\"}\");\n    if (getBuffer().hasPositionsSupport()) {\n      {\n        String traceableProperty = \"\";\n        try {\n          traceableProperty = BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{});\n        } catch (Throwable t) {\n          if (LOG.isEnabledFor(Level.ERROR)) {\n            LOG.error(\"Can't calculate traceable prorerty for a node \" + node + \".\", t);\n          }\n        }\n        TraceInfoGenerationUtil.fillPositionInfo(this, node, traceableProperty);\n      }\n    }\n  }","id":13831,"modified_method":"public void doGenerateText(SNode node) {\n    createPositionInfo(node);\n    this.appendNewLine();\n    this.indentBuffer();\n    this.append(\"try {\");\n    this.increaseDepth();\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10f383e6771L, 0x10f383e83d4L, \"body\")));\n    this.decreaseDepth();\n    this.appendNewLine();\n    for (SNode clause : SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10f383e6771L, 0x10f39a8ba1fL, \"catchClause\"))) {\n      appendNode(clause);\n      this.appendNewLine();\n    }\n    this.appendWithIndent(\"}\");\n    if (getBuffer().hasPositionsSupport()) {\n      fillPositionInfo(node, BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{}));\n    }\n  }","commit_id":"6dedeb220b768c18099aec98384a0780bad56d05","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doGenerateText(SNode node) {\n    if (getBuffer().hasPositionsSupport()) {\n      TraceInfoGenerationUtil.createPositionInfo(this, node);\n    }\n    this.appendNewLine();\n    this.indentBuffer();\n    this.append(\"try {\");\n    this.increaseDepth();\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cacebf556L, 0x10cacec83aeL, \"body\")));\n    this.decreaseDepth();\n    this.appendNewLine();\n    for (SNode clause : SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cacebf556L, 0x10f39abd97cL, \"catchClause\"))) {\n      appendNode(clause);\n      this.appendNewLine();\n    }\n    this.appendWithIndent(\"} finally {\");\n    this.increaseDepth();\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cacebf556L, 0x10cacecb713L, \"finallyBody\")));\n    this.decreaseDepth();\n    this.appendNewLine();\n    this.appendWithIndent(\"}\");\n    if (getBuffer().hasPositionsSupport()) {\n      {\n        String traceableProperty = \"\";\n        try {\n          traceableProperty = BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{});\n        } catch (Throwable t) {\n          if (LOG.isEnabledFor(Level.ERROR)) {\n            LOG.error(\"Can't calculate traceable prorerty for a node \" + node + \".\", t);\n          }\n        }\n        TraceInfoGenerationUtil.fillPositionInfo(this, node, traceableProperty);\n      }\n    }\n  }","id":13832,"modified_method":"public void doGenerateText(SNode node) {\n    createPositionInfo(node);\n    this.appendNewLine();\n    this.indentBuffer();\n    this.append(\"try {\");\n    this.increaseDepth();\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cacebf556L, 0x10cacec83aeL, \"body\")));\n    this.decreaseDepth();\n    this.appendNewLine();\n    for (SNode clause : SLinkOperations.getChildren(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cacebf556L, 0x10f39abd97cL, \"catchClause\"))) {\n      appendNode(clause);\n      this.appendNewLine();\n    }\n    this.appendWithIndent(\"} finally {\");\n    this.increaseDepth();\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cacebf556L, 0x10cacecb713L, \"finallyBody\")));\n    this.decreaseDepth();\n    this.appendNewLine();\n    this.appendWithIndent(\"}\");\n    if (getBuffer().hasPositionsSupport()) {\n      fillPositionInfo(node, BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{}));\n    }\n  }","commit_id":"6dedeb220b768c18099aec98384a0780bad56d05","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doGenerateText(SNode node) {\n    if (getBuffer().hasPositionsSupport()) {\n      TraceInfoGenerationUtil.createPositionInfo(this, node);\n    }\n    if (SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cb1ac5adeL, 0x50c493bf9555131L, \"loopLabel\")) != null) {\n      this.appendNewLine();\n      this.append(SPropertyOperations.getString(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cb1ac5adeL, 0x50c493bf9555131L, \"loopLabel\")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\")));\n      this.append(\":\");\n    } else if (SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cb1ac5adeL, 0x11745b5371dL, \"label\")) != null) {\n      this.appendNewLine();\n      this.append(SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cb1ac5adeL, 0x11745b5371dL, \"label\")));\n      this.append(\":\");\n    }\n    this.appendNewLine();\n    this.indentBuffer();\n    this.append(\"while (\");\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfaa4bf0f2fL, 0xfaa4bf0f30L, \"condition\")));\n    this.append(\") {\");\n    this.increaseDepth();\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cb1ac5adeL, 0x10cb1ada6e8L, \"body\")));\n    this.decreaseDepth();\n    this.appendNewLine();\n    this.appendWithIndent(\"}\");\n    if (getBuffer().hasPositionsSupport()) {\n      {\n        String traceableProperty = \"\";\n        try {\n          traceableProperty = BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{});\n        } catch (Throwable t) {\n          if (LOG.isEnabledFor(Level.ERROR)) {\n            LOG.error(\"Can't calculate traceable prorerty for a node \" + node + \".\", t);\n          }\n        }\n        TraceInfoGenerationUtil.fillPositionInfo(this, node, traceableProperty);\n      }\n    }\n  }","id":13833,"modified_method":"public void doGenerateText(SNode node) {\n    createPositionInfo(node);\n    if (SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cb1ac5adeL, 0x50c493bf9555131L, \"loopLabel\")) != null) {\n      this.appendNewLine();\n      this.append(SPropertyOperations.getString(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cb1ac5adeL, 0x50c493bf9555131L, \"loopLabel\")), MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, \"name\")));\n      this.append(\":\");\n    } else if (SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cb1ac5adeL, 0x11745b5371dL, \"label\")) != null) {\n      this.appendNewLine();\n      this.append(SPropertyOperations.getString(node, MetaAdapterFactory.getProperty(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cb1ac5adeL, 0x11745b5371dL, \"label\")));\n      this.append(\":\");\n    }\n    this.appendNewLine();\n    this.indentBuffer();\n    this.append(\"while (\");\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfaa4bf0f2fL, 0xfaa4bf0f30L, \"condition\")));\n    this.append(\") {\");\n    this.increaseDepth();\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10cb1ac5adeL, 0x10cb1ada6e8L, \"body\")));\n    this.decreaseDepth();\n    this.appendNewLine();\n    this.appendWithIndent(\"}\");\n    if (getBuffer().hasPositionsSupport()) {\n      fillPositionInfo(node, BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a3L, \"jetbrains.mps.lang.traceable.structure.TraceableConcept\")), \"virtual_getTraceableProperty_5067982036267369901\", new Object[]{}));\n    }\n  }","commit_id":"6dedeb220b768c18099aec98384a0780bad56d05","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void doGenerateText(SNode node) {\n    if (getBuffer().hasPositionsSupport()) {\n      TraceInfoGenerationUtil.createUnitInfo(this, node);\n    }\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x5c842a42c54c94c0L, 0x5c842a42c54c94c1L, \"document\")));\n    if (getBuffer().hasPositionsSupport()) {\n      {\n        String unitName = null;\n        try {\n          unitName = BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a4L, \"jetbrains.mps.lang.traceable.structure.UnitConcept\")), \"virtual_getUnitName_5067982036267369911\", new Object[]{});\n        } catch (Throwable t) {\n          if (LOG.isEnabledFor(Level.ERROR)) {\n            LOG.error(\"Can't calculate unit name for a node \" + node + \".\", t);\n          }\n        }\n        TraceInfoGenerationUtil.fillUnitInfo(this, node, unitName);\n      }\n    }\n  }","id":13834,"modified_method":"public void doGenerateText(SNode node) {\n    createUnitInfo(node);\n    appendNode(SLinkOperations.getTarget(node, MetaAdapterFactory.getContainmentLink(0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x5c842a42c54c94c0L, 0x5c842a42c54c94c1L, \"document\")));\n    if (getBuffer().hasPositionsSupport()) {\n      fillUnitInfo(node, BehaviorReflection.invokeVirtual(String.class, SNodeOperations.cast(node, MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L, 0xbfd948636cfe8bc3L, 0x465516cf87c705a4L, \"jetbrains.mps.lang.traceable.structure.UnitConcept\")), \"virtual_getUnitName_5067982036267369911\", new Object[]{}));\n    }\n  }","commit_id":"6dedeb220b768c18099aec98384a0780bad56d05","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n    public FormatInfo process(String templatePath, ImageFormat format, String templateName) throws InternalErrorException {\n        if (format != null) {\n            s_logger.debug(\"We currently don't handle conversion from \" + format + \" to VHD.\");\n            return null;\n        }\n\n        String vhdPath = templatePath + File.separator + templateName + \".\" + ImageFormat.VHD.getFileExtension();\n\n        if (!_storage.exists(vhdPath)) {\n            s_logger.debug(\"Unable to find the vhd file: \" + vhdPath);\n            return null;\n        }\n\n        FormatInfo info = new FormatInfo();\n        info.format = ImageFormat.VHD;\n        info.filename = templateName + \".\" + ImageFormat.VHD.getFileExtension();\n\n        File vhdFile = _storage.getFile(vhdPath);\n\n        info.size = _storage.getSize(vhdPath);\n        FileInputStream strm = null;\n        byte[] currentSize = new byte[8];\n        byte[] creatorApp = new byte[4];\n        try {\n            strm = new FileInputStream(vhdFile);\n            long skipped = strm.skip(info.size - vhdFooterSize + vhdFooterCreatorAppOffset);\n            if (skipped == -1) {\n                throw new InternalErrorException(\"Unexpected end-of-file\");\n            }\n            long read = strm.read(creatorApp);\n            if (read == -1) {\n                throw new InternalErrorException(\"Unexpected end-of-file\");\n            }\n            skipped = strm.skip(vhdFooterCurrentSizeOffset - vhdFooterCreatorVerOffset);\n            if (skipped == -1) {\n                throw new InternalErrorException(\"Unexpected end-of-file\");\n            }\n            read = strm.read(currentSize);\n            if (read == -1) {\n                throw new InternalErrorException(\"Unexpected end-of-file\");\n            }\n        } catch (IOException e) {\n            s_logger.warn(\"Unable to read vhd file \" + vhdPath, e);\n            throw new InternalErrorException(\"Unable to read vhd file \" + vhdPath + \": \" + e, e);\n        } finally {\n            if (strm != null) {\n                try {\n                    strm.close();\n                } catch (IOException e) {\n                }\n            }\n        }\n\n        //imageSignatureCheck(creatorApp);\n\n        long templateSize = NumbersUtil.bytesToLong(currentSize);\n        info.virtualSize = templateSize;\n\n        return info;\n    }","id":13835,"modified_method":"@Override\n    public FormatInfo process(String templatePath, ImageFormat format, String templateName) {\n        if (format != null) {\n            s_logger.debug(\"We currently don't handle conversion from \" + format + \" to VHD.\");\n            return null;\n        }\n\n        String vhdPath = templatePath + File.separator + templateName + \".\" + ImageFormat.VHD.getFileExtension();\n        if (!_storage.exists(vhdPath)) {\n            s_logger.debug(\"Unable to find the vhd file: \" + vhdPath);\n            return null;\n        }\n\n        File vhdFile = _storage.getFile(vhdPath);\n\n        FormatInfo info = new FormatInfo();\n        info.format = ImageFormat.VHD;\n        info.filename = templateName + \".\" + ImageFormat.VHD.getFileExtension();\n        info.size = _storage.getSize(vhdPath);\n\n        try {\n            info.virtualSize = getVirtualSize(vhdFile);\n        } catch (IOException e) {\n            s_logger.error(\"Unable to get the virtual size for \" + vhdPath);\n            return null;\n        }\n\n        return info;\n    }","commit_id":"22ad646acae35d6c1dcdae67071c5d9125c2d498","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public long getVirtualSize(File file) {\n        FileInputStream strm = null;\n        byte[] currentSize = new byte[8];\n        byte[] creatorApp = new byte[4];\n        try {\n            strm = new FileInputStream(file);\n            strm.skip(file.length() - vhdFooterSize + vhdFooterCreatorAppOffset);\n            strm.read(creatorApp);\n            strm.skip(vhdFooterCurrentSizeOffset - vhdFooterCreatorVerOffset);\n            strm.read(currentSize);\n        } catch (Exception e) {\n            s_logger.warn(\"Unable to read vhd file \" + file.getAbsolutePath(), e);\n            throw new CloudRuntimeException(\"Unable to read vhd file \" + file.getAbsolutePath() + \": \" + e);\n        } finally {\n            if (strm != null) {\n                try {\n                    strm.close();\n                } catch (IOException e) {\n                }\n            }\n        }\n\n        long templateSize = NumbersUtil.bytesToLong(currentSize);\n        return templateSize;\n    }","id":13836,"modified_method":"@Override\n    public long getVirtualSize(File file) throws IOException {\n        byte[] currentSize = new byte[8];\n        byte[] creatorApp = new byte[4];\n\n        try (FileInputStream strm = new FileInputStream(file)) {\n            long skipped = strm.skip(file.length() - vhdFooterSize + vhdFooterCreatorAppOffset);\n            if (skipped == -1) {\n                throw new IOException(\"Unexpected end-of-file\");\n            }\n            long read = strm.read(creatorApp);\n            if (read == -1) {\n                throw new IOException(\"Unexpected end-of-file\");\n            }\n            skipped = strm.skip(vhdFooterCurrentSizeOffset - vhdFooterCreatorVerOffset);\n            if (skipped == -1) {\n                throw new IOException(\"Unexpected end-of-file\");\n            }\n            read = strm.read(currentSize);\n            if (read == -1) {\n                throw new IOException(\"Unexpected end-of-file\");\n            }\n        }\n\n        return NumbersUtil.bytesToLong(currentSize);\n    }","commit_id":"22ad646acae35d6c1dcdae67071c5d9125c2d498","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public FormatInfo process(String templatePath, ImageFormat format, String templateName) throws InternalErrorException {\n        if (format != null) {\n            s_logger.debug(\"We currently don't handle conversion from \" + format + \" to VHD.\");\n            return null;\n        }\n\n        String vhdPath = templatePath + File.separator + templateName + \".\" + ImageFormat.VHD.getFileExtension();\n\n        if (!_storage.exists(vhdPath)) {\n            s_logger.debug(\"Unable to find the vhd file: \" + vhdPath);\n            return null;\n        }\n\n        FormatInfo info = new FormatInfo();\n        info.format = ImageFormat.VHD;\n        info.filename = templateName + \".\" + ImageFormat.VHD.getFileExtension();\n\n        File vhdFile = _storage.getFile(vhdPath);\n\n        info.size = _storage.getSize(vhdPath);\n        FileInputStream strm = null;\n        byte[] currentSize = new byte[8];\n        byte[] creatorApp = new byte[4];\n        try {\n            strm = new FileInputStream(vhdFile);\n            strm.skip(info.size - vhdFooterSize + vhdFooterCreatorAppOffset);\n            strm.read(creatorApp);\n            strm.skip(vhdFooterCurrentSizeOffset - vhdFooterCreatorVerOffset);\n            strm.read(currentSize);\n        } catch (Exception e) {\n            s_logger.warn(\"Unable to read vhd file \" + vhdPath, e);\n            throw new InternalErrorException(\"Unable to read vhd file \" + vhdPath + \": \" + e);\n        } finally {\n            if (strm != null) {\n                try {\n                    strm.close();\n                } catch (IOException e) {\n                }\n            }\n        }\n\n        //imageSignatureCheck(creatorApp);\n\n        long templateSize = NumbersUtil.bytesToLong(currentSize);\n        info.virtualSize = templateSize;\n\n        return info;\n    }","id":13837,"modified_method":"@Override\n    public FormatInfo process(String templatePath, ImageFormat format, String templateName) throws InternalErrorException {\n        if (format != null) {\n            s_logger.debug(\"We currently don't handle conversion from \" + format + \" to VHD.\");\n            return null;\n        }\n\n        String vhdPath = templatePath + File.separator + templateName + \".\" + ImageFormat.VHD.getFileExtension();\n\n        if (!_storage.exists(vhdPath)) {\n            s_logger.debug(\"Unable to find the vhd file: \" + vhdPath);\n            return null;\n        }\n\n        FormatInfo info = new FormatInfo();\n        info.format = ImageFormat.VHD;\n        info.filename = templateName + \".\" + ImageFormat.VHD.getFileExtension();\n\n        File vhdFile = _storage.getFile(vhdPath);\n\n        info.size = _storage.getSize(vhdPath);\n        FileInputStream strm = null;\n        byte[] currentSize = new byte[8];\n        byte[] creatorApp = new byte[4];\n        try {\n            strm = new FileInputStream(vhdFile);\n            long skipped = strm.skip(info.size - vhdFooterSize + vhdFooterCreatorAppOffset);\n            if (skipped == -1) {\n                throw new InternalErrorException(\"Unexpected end-of-file\");\n            }\n            long read = strm.read(creatorApp);\n            if (read == -1) {\n                throw new InternalErrorException(\"Unexpected end-of-file\");\n            }\n            skipped = strm.skip(vhdFooterCurrentSizeOffset - vhdFooterCreatorVerOffset);\n            if (skipped == -1) {\n                throw new InternalErrorException(\"Unexpected end-of-file\");\n            }\n            read = strm.read(currentSize);\n            if (read == -1) {\n                throw new InternalErrorException(\"Unexpected end-of-file\");\n            }\n        } catch (IOException e) {\n            s_logger.warn(\"Unable to read vhd file \" + vhdPath, e);\n            throw new InternalErrorException(\"Unable to read vhd file \" + vhdPath + \": \" + e, e);\n        } finally {\n            if (strm != null) {\n                try {\n                    strm.close();\n                } catch (IOException e) {\n                }\n            }\n        }\n\n        //imageSignatureCheck(creatorApp);\n\n        long templateSize = NumbersUtil.bytesToLong(currentSize);\n        info.virtualSize = templateSize;\n\n        return info;\n    }","commit_id":"4ad2734576481f09a3f5ded3d80e9e938dbac5f8","url":"https://github.com/apache/cloudstack"},{"original_method":"public void readPlugins() throws KettleException\n    {\n    \tLogWriter log = LogWriter.getInstance();\n        \n    \ttry {\n    \t\t// try reading plugins defined in JAR file META-INF/step_plugin.xml\n        \tEnumeration<URL> resources = getClass().getClassLoader().getResources(\"META-INF/step_plugin.xml\");\n        \twhile( resources.hasMoreElements() ) \n        \t{\n        \t\tURL url = resources.nextElement();\n        \t\tObject content = url.getContent();\n        \t\tif( content instanceof InputStream )\n        \t\t{\n        \t\t\treadPluginFromResource( (InputStream) content, null, null, StepPlugin.TYPE_NATIVE );\n        \t\t}\n        \t}\n    \t} catch (Exception e) {\n    \t\tthrow new KettleException(\"Unable to load plugins specified in 'META-INF/step_plugin.xml' files\", e);\n    \t}\n    \t\n    \ttry {\n    \t\t// try reading plugins defined in JAR file META-INF/kettle-partition-plugins.xml\n        \tEnumeration<URL> resources = getClass().getClassLoader().getResources(\"META-INF/kettle-partition-plugins.xml\");\n        \twhile( resources.hasMoreElements() ) \n        \t{\n        \t\tURL url = resources.nextElement();\n        \t\tObject content = url.getContent();\n        \t\tif( content instanceof InputStream )\n        \t\t{\n        \t\t\treadPluginFromResource( (InputStream) content, null, null, StepPlugin.TYPE_NATIVE );\n        \t\t}\n        \t}\n    \t\t// also look in /kettle-partition-plugins.xml\n        \tresources = getClass().getClassLoader().getResources(\"kettle-partition-plugins.xml\");\n        \twhile( resources.hasMoreElements() ) \n        \t{\n        \t\tURL url = resources.nextElement();\n        \t\tObject content = url.getContent();\n        \t\tif( content instanceof InputStream )\n        \t\t{\n        \t\t\treadPluginFromResource( (InputStream) content, null, null, StepPlugin.TYPE_NATIVE );\n        \t\t}\n        \t}\n    \t} catch (Exception e) {\n    \t\tthrow new KettleException(\"Unable to load plugins specified in 'META-INF/kettle-partition-plugins.xml' files\", e);\n    \t}\n    \t\n    \t//TODO: THis is what will move into the plubin loader class\n        for (int dirNr = 0;dirNr<pluginDirectory.length;dirNr++)\n        {\n            try\n            {\n\t            File f = new File(pluginDirectory[dirNr]);\n\t\t        if (f.isDirectory() && f.exists())\n\t\t        {\n                    log.logDetailed(Messages.getString(\"StepLoader.Log.StepLoader.Title\"), Messages.getString(\"StepLoader.Log.StepLoader.Description\")+pluginDirectory[dirNr]); //$NON-NLS-1$ //$NON-NLS-2$\n\t\n\t\t            String dirs[] = f.list();\n\t\t            for (int i = 0; i < dirs.length; i++)\n\t\t            {\n\t\t                String piDir = pluginDirectory[dirNr] + Const.FILE_SEPARATOR + dirs[i];\n\t\n\t\t                File pi = new File(piDir);\n\t\t                if (pi.isDirectory()) // Only consider directories here!\n\t\t                {\n\t                        String pixml = pi.toString() + Const.FILE_SEPARATOR + \"plugin.xml\"; //$NON-NLS-1$\n\t\t                    File fpixml = new File(pixml);\n\t\t\n\t\t                    if (fpixml.canRead()) // Yep, files exists...\n\t\t                    {\n\t\t                        /*\n\t\t                         * Now read the xml file containing the jars etc.\n\t\t                         */\n\n\t\t            \t\t\treadPluginFromResource( new FileInputStream(fpixml), pi.getPath(), dirs[i], StepPlugin.TYPE_PLUGIN );\n\t\t                    }\n\t\t                    else\n\t\t                    {\n\t\t    \t\t            log.logDetailed(Messages.getString(\"StepLoader.Log.StepLoader.Title\"), \"Plugin file [\"+fpixml+\"] is not readable.\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$\n\t\t                    }\n\t\t                }\n\t\t                else\n\t\t                {\n\t    \t\t            log.logDetailed(Messages.getString(\"StepLoader.Log.StepLoader.Title\"), \"Plugin directory [\"+piDir+\"] is not a directory.\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$\n\t\t                }\n\t\t            }\t\t           \n\t\t        }\n\t\t        else\n\t\t        {\n\t\t            log.logDebug(Messages.getString(\"StepLoader.Log.StepLoader.Title\"), \"Plugin directory not found, ignoring this: [\"+pluginDirectory[dirNr]+\"]\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$\n\t\t        }\n            }\n            catch(Exception e)\n            {\n                throw new KettleException(Messages.getString(\"StepLoader.RuntimeError.CouldNotFindDirectory.TRANS0002\",pluginDirectory[dirNr]), e); //$NON-NLS-1$\n            }\n        }\n    }","id":13838,"modified_method":"public void readPlugins() throws KettleException\n    {\n    \tLogWriter log = LogWriter.getInstance();\n        \n    \ttry {\n    \t\t// try reading plugins defined in JAR file META-INF/step_plugin.xml\r\n    \t\tInputStream content = getClass().getClassLoader().getResourceAsStream(\"META-INF/step_plugin.xml\");\r\n    \t\tif (content != null) readPluginFromResource(content, null, null, StepPlugin.TYPE_NATIVE );\r\n    \t} catch (Exception e) {\n    \t\tthrow new KettleException(\"Unable to load plugins specified in 'META-INF/step_plugin.xml' files\", e);\n    \t}\n    \t\n    \ttry {\n    \t\t// try reading plugins defined in JAR file META-INF/kettle-partition-plugins.xml\r\n    \t\tInputStream content = getClass().getClassLoader().getResourceAsStream(\"META-INF/kettle-partition-plugins.xml\");\r\n    \t\tif (content != null) readPluginFromResource(content, null, null, StepPlugin.TYPE_NATIVE );\r\n    \t\t// also look in /kettle-partition-plugins.xml\r\n    \t\tcontent = getClass().getClassLoader().getResourceAsStream(\"kettle-partition-plugins.xml\");\r\n    \t\tif (content != null) readPluginFromResource(content, null, null, StepPlugin.TYPE_NATIVE );\r\n    \t} catch (Exception e) {\n    \t\tthrow new KettleException(\"Unable to load plugins specified in 'META-INF/kettle-partition-plugins.xml' files\", e);\n    \t}\n    \t\n    \t//TODO: THis is what will move into the plugin loader class\n        for (int dirNr = 0;dirNr<pluginDirectory.length;dirNr++)\n        {\n            try\n            {\n\t            File f = new File(pluginDirectory[dirNr]);\n\t\t        if (f.isDirectory() && f.exists())\n\t\t        {\n                    log.logDetailed(Messages.getString(\"StepLoader.Log.StepLoader.Title\"), Messages.getString(\"StepLoader.Log.StepLoader.Description\")+pluginDirectory[dirNr]); //$NON-NLS-1$ //$NON-NLS-2$\n\t\n\t\t            String dirs[] = f.list();\n\t\t            for (int i = 0; i < dirs.length; i++)\n\t\t            {\n\t\t                String piDir = pluginDirectory[dirNr] + Const.FILE_SEPARATOR + dirs[i];\n\t\n\t\t                File pi = new File(piDir);\n\t\t                if (pi.isDirectory()) // Only consider directories here!\n\t\t                {\n\t                        String pixml = pi.toString() + Const.FILE_SEPARATOR + \"plugin.xml\"; //$NON-NLS-1$\n\t\t                    File fpixml = new File(pixml);\n\t\t\n\t\t                    if (fpixml.canRead()) // Yep, files exists...\n\t\t                    {\n\t\t                        /*\n\t\t                         * Now read the xml file containing the jars etc.\n\t\t                         */\n\n\t\t            \t\t\treadPluginFromResource( new FileInputStream(fpixml), pi.getPath(), dirs[i], StepPlugin.TYPE_PLUGIN );\n\t\t                    }\n\t\t                    else\n\t\t                    {\n\t\t    \t\t            log.logDetailed(Messages.getString(\"StepLoader.Log.StepLoader.Title\"), \"Plugin file [\"+fpixml+\"] is not readable.\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$\n\t\t                    }\n\t\t                }\n\t\t                else\n\t\t                {\n\t    \t\t            log.logDetailed(Messages.getString(\"StepLoader.Log.StepLoader.Title\"), \"Plugin directory [\"+piDir+\"] is not a directory.\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$\n\t\t                }\n\t\t            }\t\t           \n\t\t        }\n\t\t        else\n\t\t        {\n\t\t            log.logDebug(Messages.getString(\"StepLoader.Log.StepLoader.Title\"), \"Plugin directory not found, ignoring this: [\"+pluginDirectory[dirNr]+\"]\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$\n\t\t        }\n            }\n            catch(Exception e)\n            {\n                throw new KettleException(Messages.getString(\"StepLoader.RuntimeError.CouldNotFindDirectory.TRANS0002\",pluginDirectory[dirNr]), e); //$NON-NLS-1$\n            }\n        }\n    }","commit_id":"9662d1dce833b3248adea0fe90cb3a6e9f6e8024","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"protected void initializeAFMatrix(Map<String, BiallelicGenotypeLikelihoods> GLs) {\n        refCalls.clear();\n        AFMatrix.clear();\n\n        for ( BiallelicGenotypeLikelihoods GL : GLs.values() ) {\n            if ( isClearRefCall(GL) ) {\n                refCalls.add(GL);\n            } else {\n                AFMatrix.setLikelihoods(GL.getPosteriors(), GL.getSample());\n            }\n        }\n    }","id":13839,"modified_method":"protected void initializeAFMatrix(Map<String, BiallelicGenotypeLikelihoods> GLs) {\n        refCalls.clear();\n        AFMatrix.clear();\n\n        for ( BiallelicGenotypeLikelihoods GL : GLs.values() ) {\n            // todo - gdebug workaround for crash\n            if (false) { //isClearRefCall(GL) ) {\n                refCalls.add(GL);\n            } else {\n                AFMatrix.setLikelihoods(GL.getPosteriors(), GL.getSample());\n            }\n        }\n    }","commit_id":"ece694d0af6b384a816f818ebbd718eaff9d4ce4","url":"https://github.com/broadgsa/gatk"},{"original_method":"private Map<String,Object> annotateIndel(StratifiedAlignmentContext stratifiedContext, VariantContext vc) {\n        ReadBackedExtendedEventPileup pileup = stratifiedContext.getContext(StratifiedAlignmentContext.StratifiedContextType.COMPLETE).getExtendedEventPileup();\n        if ( pileup == null )\n            return null;\n\n        Integer[] counts = new Integer[2];\n\n        // TODO -- fix me\n        /*\n        for ( ExtendedEventPileupElement e : pileup.toExtendedIterable() ) {\n            if ( countsBySize.keySet().contains(e.getEventLength()) ) { // if proper length\n                if ( e.isDeletion() && vc.isDeletion() || e.isInsertion() && vc.isInsertion() ) {\n                    countsBySize.put(e.getEventLength(),countsBySize.get(e.getEventLength())+1);\n                }\n            }\n        }\n        */\n\n        Map<String,Object> map = new HashMap<String,Object>();\n        map.put(getKeyNames().get(0), counts);\n        return map;\n    }","id":13840,"modified_method":"private Map<String,Object> annotateIndel(StratifiedAlignmentContext stratifiedContext, VariantContext vc) {\n//        ReadBackedExtendedEventPileup pileup = stratifiedContext.getContext(StratifiedAlignmentContext.StratifiedContextType.COMPLETE).getExtendedEventPileup();\n        //ReadBackedPileup pileup = stratifiedContext.getContext(StratifiedAlignmentContext.StratifiedContextType.COMPLETE).getBasePileup();\n        //if ( pileup == null )\n            return null;\n\n        //Integer[] counts = new Integer[2];\n\n        // TODO -- fix me\n        /*\n        for ( ExtendedEventPileupElement e : pileup.toExtendedIterable() ) {\n            if ( countsBySize.keySet().contains(e.getEventLength()) ) { // if proper length\n                if ( e.isDeletion() && vc.isDeletion() || e.isInsertion() && vc.isInsertion() ) {\n                    countsBySize.put(e.getEventLength(),countsBySize.get(e.getEventLength())+1);\n                }\n            }\n        }\n        */\n\n        //Map<String,Object> map = new HashMap<String,Object>();\n        //map.put(getKeyNames().get(0), counts);\n        //return map;\n    }","commit_id":"ece694d0af6b384a816f818ebbd718eaff9d4ce4","url":"https://github.com/broadgsa/gatk"},{"original_method":"public Allele getLikelihoods(RefMetaDataTracker tracker,\n                                 ReferenceContext ref,\n                                 Map<String, StratifiedAlignmentContext> contexts,\n                                 StratifiedAlignmentContext.StratifiedContextType contextType,\n                                 GenotypePriors priors,\n                                 Map<String, BiallelicGenotypeLikelihoods> GLs) {\n        // TODO: check to make sure the priors instanceof a valid priors class\n\n        // TODO: create a single set of Alleles to be passed into each BiallelicGenotypeLikelihoods object to minimize memory consumption\n\n        for ( Map.Entry<String, StratifiedAlignmentContext> sample : contexts.entrySet() ) {\n            // TODO: fill me in\n\n            //GLs.put(sample.getKey(), new BiallelicGenotypeLikelihoods(sample.getKey(), refAllele, altAllele, ...));\n        }\n\n        // TODO: return the reference Allele\n        return null;\n    }","id":13841,"modified_method":"public Allele getLikelihoods(RefMetaDataTracker tracker,\n                                 ReferenceContext ref,\n                                 Map<String, StratifiedAlignmentContext> contexts,\n                                 StratifiedAlignmentContext.StratifiedContextType contextType,\n                                 GenotypePriors priors,\n                                 Map<String, BiallelicGenotypeLikelihoods> GLs) {\n\n        if ( tracker == null )\n            return null;\n\n\n        VariantContext vc = tracker.getVariantContext(ref, \"indels\", null, ref.getLocus(), true);\n        // ignore places where we don't have a variant\n        if ( vc == null )\n            return null;\n\n\n        if (!vc.isIndel())\n            return null;\n\n        if ( !(priors instanceof DiploidIndelGenotypePriors) )\n             throw new StingException(\"Only diploid-based Indel priors are supported in the DINDEL GL model\");\n\n        int eventLength = vc.getReference().getBaseString().length() - vc.getAlternateAllele(0).getBaseString().length();\n        // assume only one alt allele for now\n        if (eventLength<0)\n            eventLength = - eventLength;\n\n        int currentHaplotypeSize = HAPLOTYPE_SIZE;\n        List<Haplotype> haplotypesInVC = new ArrayList<Haplotype>();\n        int minHaplotypeSize = Haplotype.LEFT_WINDOW_SIZE + eventLength + 2; // to be safe\n\n        // int numSamples = getNSamples(contexts);\n        haplotypesInVC = Haplotype.makeHaplotypeListFromVariantContextAlleles( vc, ref, currentHaplotypeSize);\n        // For each sample, get genotype likelihoods based on pileup\n        // compute prior likelihoods on haplotypes, and initialize haplotype likelihood matrix with them.\n        // initialize the GenotypeLikelihoods\n        GLs.clear();\n\n        double[][] haplotypeLikehoodMatrix;\n\n        if (useFlatPriors) {\n            priors = new DiploidIndelGenotypePriors();\n        }\n        else\n            priors = new DiploidIndelGenotypePriors(indelHeterozygosity,eventLength,currentHaplotypeSize);\n\n        //double[] priorLikelihoods = priors.getPriors();\n\n        for ( Map.Entry<String, StratifiedAlignmentContext> sample : contexts.entrySet() ) {\n            AlignmentContext context = sample.getValue().getContext(StratifiedAlignmentContext.StratifiedContextType.COMPLETE);\n\n            ReadBackedPileup pileup = null;\n            if (context.hasExtendedEventPileup())\n                pileup = context.getExtendedEventPileup();\n            else if (context.hasBasePileup())\n                pileup = context.getBasePileup();\n\n            if (pileup != null ) {\n                haplotypeLikehoodMatrix = model.computeReadHaplotypeLikelihoods( pileup, haplotypesInVC, vc, eventLength);\n\n\n                double[] genotypeLikelihoods = HaplotypeIndelErrorModel.getPosteriorProbabilitesFromHaplotypeLikelihoods( haplotypeLikehoodMatrix);\n\n                GLs.put(sample.getKey(), new BiallelicGenotypeLikelihoods(sample.getKey(),vc.getReference(),\n                        vc.getAlternateAllele(0),\n                        Math.log10(genotypeLikelihoods[0]),Math.log10(genotypeLikelihoods[1]), Math.log10(genotypeLikelihoods[2])));\n\n            }\n        }\n\n        return vc.getReference();\n    }","commit_id":"ece694d0af6b384a816f818ebbd718eaff9d4ce4","url":"https://github.com/broadgsa/gatk"},{"original_method":"protected DindelGenotypeLikelihoodsCalculationModel(UnifiedArgumentCollection UAC, Logger logger) {\n        super(UAC, logger);\n    }","id":13842,"modified_method":"protected DindelGenotypeLikelihoodsCalculationModel(UnifiedArgumentCollection UAC, Logger logger) {\n        super(UAC, logger);\n        model = new HaplotypeIndelErrorModel(maxReadDeletionLength, insertionStartProbability,\n                insertionEndProbability, alphaDeletionProbability, HAPLOTYPE_SIZE, false, DEBUGOUT);\n    }","commit_id":"ece694d0af6b384a816f818ebbd718eaff9d4ce4","url":"https://github.com/broadgsa/gatk"},{"original_method":"private double[] updateAFEstimate(Map<String, BiallelicGenotypeLikelihoods> GLs, double[] alleleFrequencyPriors) {\n\n        int numSamples = GLs.size();\n        int numChr = 2*numSamples;\n\n        double[][] YMatrix = new double[1+numSamples][1+numChr];\n        YMatrix[0][0] = 1.0;\n        int j=0;\n\n        for ( String sample : GLs.keySet() ) {\n            j++;\n\n            double[] genotypeLikelihoods = MathUtils.normalizeFromLog10(GLs.get(sample).getLikelihoods());\n            double sum = 0.0;\n            double den = 2.0*j*(2.0*j-1);\n\n            for (int k=0; k <= 2*j; k++ ) {\n                double tmp = (2.0*j-k)*(2.0*j-k-1)*YMatrix[j-1][k] * genotypeLikelihoods[2];\n                if (k > 0)\n                    tmp += (2.0*k)*(2.0*j-k)*YMatrix[j-1][k-1]*genotypeLikelihoods[1];\n                if (k > 1)\n                    tmp += k*(k-1)*YMatrix[j-1][k-2]*genotypeLikelihoods[0];\n\n                YMatrix[j][k] = tmp/den;\n\n                sum += YMatrix[j][k];\n            }\n            // renormalize row\n            for (int k=0; k <= 2*j; k++ )\n                YMatrix[j][k] /= sum;\n\n        }\n        double sum = 0.0;\n        double[] newAF = new double[alleleFrequencyPriors.length];\n\n        for (int k=0; k <= numChr; k++) {\n            double prod = YMatrix[j][numChr-k] * alleleFrequencyPriors[k];\n            newAF[k] = prod;\n            sum += prod;\n        }\n        //renormalize now\n        for (int k=0; k < newAF.length; k++)\n            newAF[k] /= sum;\n\n        return newAF;\n\n\n    }","id":13843,"modified_method":"private double[] updateAFEstimate(Map<String, BiallelicGenotypeLikelihoods> GLs, double[] alleleFrequencyPriors) {\n\n        int numSamples = GLs.size();\n        int numChr = 2*numSamples;\n\n        double[][] YMatrix = new double[1+numSamples][1+numChr];\n        YMatrix[0][0] = 1.0;\n        int j=0;\n\n        for ( String sample : GLs.keySet() ) {\n            j++;\n\n            double[] genotypeLikelihoods = MathUtils.normalizeFromLog10(GLs.get(sample).getLikelihoods());\n            double sum = 0.0;\n            double den = 2.0*j*(2.0*j-1);\n\n            for (int k=0; k <= 2*j; k++ ) {\n                double tmp = (2.0*j-k)*(2.0*j-k-1)*YMatrix[j-1][k] * genotypeLikelihoods[GenotypeType.AA.ordinal()];\n                if (k > 0)\n                    tmp += (2.0*k)*(2.0*j-k)*YMatrix[j-1][k-1]*genotypeLikelihoods[GenotypeType.AB.ordinal()];\n                if (k > 1)\n                    tmp += k*(k-1)*YMatrix[j-1][k-2]*genotypeLikelihoods[GenotypeType.BB.ordinal()];\n\n                YMatrix[j][k] = tmp/den;\n\n                sum += YMatrix[j][k];\n            }\n            // renormalize row\n            for (int k=0; k <= 2*j; k++ )\n                YMatrix[j][k] /= sum;\n\n        }\n        double sum = 0.0;\n        double[] newAF = new double[alleleFrequencyPriors.length];\n\n        for (int k=0; k <= numChr; k++) {\n            double prod = YMatrix[j][k] * alleleFrequencyPriors[k];\n            newAF[k] = prod;\n            sum += prod;\n        }\n        //renormalize now\n        for (int k=0; k < newAF.length; k++)\n            newAF[k] /= sum;\n\n        return newAF;\n\n\n    }","commit_id":"ece694d0af6b384a816f818ebbd718eaff9d4ce4","url":"https://github.com/broadgsa/gatk"},{"original_method":"public void getLog10PNonRef(RefMetaDataTracker tracker,\n                                ReferenceContext ref,\n                                Map<String, BiallelicGenotypeLikelihoods> GLs,\n                                double[] log10AlleleFrequencyPriors,\n                                double[] log10AlleleFrequencyPosteriors) {\n\n        // Math requires linear math to make efficient updates.\n        double[] alleleFrequencyPosteriors = MathUtils.normalizeFromLog10(log10AlleleFrequencyPriors);\n\n        // now that we have genotype likelihoods for each sample, we can start refining allele frequency estimate\n        double meanAF = computeMeanAF(alleleFrequencyPosteriors);\n        if (DEBUGOUT)\n            System.out.format(\"Initial Mean AF: %5.6f\\n\", meanAF);\n\n\n        for (int numIterations=0; numIterations < maxNumIterations; numIterations++) {\n            double oldMeanAF = meanAF;\n            alleleFrequencyPosteriors = updateAFEstimate(GLs, alleleFrequencyPosteriors);\n            meanAF = computeMeanAF(alleleFrequencyPosteriors);\n\n            if (DEBUGOUT)\n                System.out.format(\"Mean AF: %5.4f. PVariant: %5.5f\\n\", meanAF,1.0-alleleFrequencyPosteriors[0]);\n\n            if (Math.abs(meanAF-oldMeanAF) < tol)\n                break;\n\n        }\n\n        for (int k=0; k < alleleFrequencyPosteriors.length; k++)\n            log10AlleleFrequencyPosteriors[k] = Math.log10(alleleFrequencyPosteriors[k]);\n\n    }","id":13844,"modified_method":"public void getLog10PNonRef(RefMetaDataTracker tracker,\n                                ReferenceContext ref,\n                                Map<String, BiallelicGenotypeLikelihoods> GLs,\n                                double[] log10AlleleFrequencyPriors,\n                                double[] log10AlleleFrequencyPosteriors) {\n\n        // Math requires linear math to make efficient updates.\n        double[] alleleFrequencyPriors = MathUtils.normalizeFromLog10(log10AlleleFrequencyPriors);\n        double[] alleleFrequencyPosteriors;\n \n\n        alleleFrequencyPosteriors = updateAFEstimate(GLs, alleleFrequencyPriors);\n        double meanAF = computeMeanAF(alleleFrequencyPosteriors);\n\n        if (DEBUGOUT)\n            System.out.format(\"Mean AF: %5.4f. PVariant: %5.5f\\n\", meanAF,1.0-alleleFrequencyPosteriors[0]);\n\n\n\n        for (int k=0; k < alleleFrequencyPosteriors.length; k++) {\n            log10AlleleFrequencyPosteriors[k] = Math.log10(alleleFrequencyPosteriors[k]);\n        }\n    }","commit_id":"ece694d0af6b384a816f818ebbd718eaff9d4ce4","url":"https://github.com/broadgsa/gatk"},{"original_method":"public Map<String, Object> annotate(RefMetaDataTracker tracker, ReferenceContext ref, Map<String, StratifiedAlignmentContext> stratifiedContexts, VariantContext vc) {\n        if ( stratifiedContexts.size() == 0 )\n            return null;\n\n        int mq0 = 0;\n        for ( Map.Entry<String, StratifiedAlignmentContext> sample : stratifiedContexts.entrySet() ) {\n            ReadBackedPileup pileup = sample.getValue().getContext(StratifiedAlignmentContext.StratifiedContextType.COMPLETE).getBasePileup();\n            for (PileupElement p : pileup ) {\n                if ( p.getMappingQual() == 0 )\n                    mq0++;\n            }\n        }\n        Map<String, Object> map = new HashMap<String, Object>();\n        map.put(getKeyNames().get(0), String.format(\"%d\", mq0));\n        return map;\n    }","id":13845,"modified_method":"public Map<String, Object> annotate(RefMetaDataTracker tracker, ReferenceContext ref, Map<String, StratifiedAlignmentContext> stratifiedContexts, VariantContext vc) {\n        if ( stratifiedContexts.size() == 0 )\n            return null;\n\n        int mq0 = 0;\n        for ( Map.Entry<String, StratifiedAlignmentContext> sample : stratifiedContexts.entrySet() ) {\n            AlignmentContext context = sample.getValue().getContext(StratifiedAlignmentContext.StratifiedContextType.COMPLETE);\n            ReadBackedPileup pileup = null;\n            if (context.hasExtendedEventPileup())\n                pileup = context.getExtendedEventPileup();\n            else if (context.hasBasePileup())\n                pileup = context.getBasePileup();\n\n            if (pileup != null) {\n                for (PileupElement p : pileup ) {\n                    if ( p.getMappingQual() == 0 )\n                        mq0++;\n                }\n            }\n        }\n        Map<String, Object> map = new HashMap<String, Object>();\n        map.put(getKeyNames().get(0), String.format(\"%d\", mq0));\n        return map;\n    }","commit_id":"ece694d0af6b384a816f818ebbd718eaff9d4ce4","url":"https://github.com/broadgsa/gatk"},{"original_method":"public Map<String, Object> annotate(RefMetaDataTracker tracker, ReferenceContext ref, Map<String, StratifiedAlignmentContext> stratifiedContexts, VariantContext vc) {\n        if ( stratifiedContexts.size() == 0 )\n            return null;\n\n        ArrayList<Integer> qualities = new ArrayList<Integer>();\n        for ( Map.Entry<String, StratifiedAlignmentContext> sample : stratifiedContexts.entrySet() ) {\n            ReadBackedPileup pileup = sample.getValue().getContext(StratifiedAlignmentContext.StratifiedContextType.COMPLETE).getBasePileup();\n            for (PileupElement p : pileup )\n                qualities.add(p.getRead().getMappingQuality());\n        }\n        int[] quals = new int[qualities.size()];\n        int index = 0;\n        for ( Integer i : qualities )\n            quals[index++] = i;\n        double rms = MathUtils.rms(quals);\n        Map<String, Object> map = new HashMap<String, Object>();\n        map.put(getKeyNames().get(0), String.format(\"%.2f\", rms));\n        return map;\n    }","id":13846,"modified_method":"public Map<String, Object> annotate(RefMetaDataTracker tracker, ReferenceContext ref, Map<String, StratifiedAlignmentContext> stratifiedContexts, VariantContext vc) {\n        if ( stratifiedContexts.size() == 0 )\n            return null;\n\n        ArrayList<Integer> qualities = new ArrayList<Integer>();\n        for ( Map.Entry<String, StratifiedAlignmentContext> sample : stratifiedContexts.entrySet() ) {\n            AlignmentContext context = sample.getValue().getContext(StratifiedAlignmentContext.StratifiedContextType.COMPLETE);\n            ReadBackedPileup pileup = null;\n            if (context.hasExtendedEventPileup())\n                pileup = context.getExtendedEventPileup();\n            else if (context.hasBasePileup())\n                pileup = context.getBasePileup();\n\n            if (pileup != null) {\n                for (PileupElement p : pileup )\n                    qualities.add(p.getRead().getMappingQuality());\n            }\n        }\n        int[] quals = new int[qualities.size()];\n        int index = 0;\n        for ( Integer i : qualities )\n            quals[index++] = i;\n        double rms = MathUtils.rms(quals);\n        Map<String, Object> map = new HashMap<String, Object>();\n        map.put(getKeyNames().get(0), String.format(\"%.2f\", rms));\n        return map;\n    }","commit_id":"ece694d0af6b384a816f818ebbd718eaff9d4ce4","url":"https://github.com/broadgsa/gatk"},{"original_method":"public Map<String, Object> annotate(RefMetaDataTracker tracker, ReferenceContext ref, Map<String, StratifiedAlignmentContext> stratifiedContexts, VariantContext vc) {\n        if ( stratifiedContexts.size() == 0 )\n            return null;\n\n        int deletions = 0;\n        int depth = 0;\n        for ( Map.Entry<String, StratifiedAlignmentContext> sample : stratifiedContexts.entrySet() ) {\n            ReadBackedPileup pileup = sample.getValue().getContext(StratifiedAlignmentContext.StratifiedContextType.COMPLETE).getBasePileup();\n            deletions += pileup.getNumberOfDeletions();\n            depth += pileup.size();\n        }\n        Map<String, Object> map = new HashMap<String, Object>();\n        map.put(getKeyNames().get(0), String.format(\"%.2f\", depth == 0 ? 0.0 : (double)deletions/(double)depth));\n        return map;\n    }","id":13847,"modified_method":"public Map<String, Object> annotate(RefMetaDataTracker tracker, ReferenceContext ref, Map<String, StratifiedAlignmentContext> stratifiedContexts, VariantContext vc) {\n        if ( stratifiedContexts.size() == 0 )\n            return null;\n\n        int deletions = 0;\n        int depth = 0;\n        for ( Map.Entry<String, StratifiedAlignmentContext> sample : stratifiedContexts.entrySet() ) {\n            AlignmentContext context = sample.getValue().getContext(StratifiedAlignmentContext.StratifiedContextType.COMPLETE);\n            ReadBackedPileup pileup = null;\n            if (context.hasExtendedEventPileup())\n                pileup = context.getExtendedEventPileup();\n            else if (context.hasBasePileup())\n                pileup = context.getBasePileup();\n\n            if (pileup != null) {\n                deletions += pileup.getNumberOfDeletions();\n                depth += pileup.size();\n            }\n        }\n        Map<String, Object> map = new HashMap<String, Object>();\n        map.put(getKeyNames().get(0), String.format(\"%.2f\", depth == 0 ? 0.0 : (double)deletions/(double)depth));\n        return map;\n    }","commit_id":"ece694d0af6b384a816f818ebbd718eaff9d4ce4","url":"https://github.com/broadgsa/gatk"},{"original_method":"/**\n     * Compute at a given locus.\n     *\n     * @param tracker    the meta data tracker\n     * @param refContext the reference base\n     * @param rawContext contextual information around the locus\n     * @return the VariantCallContext object\n     */\n    public VariantCallContext runGenotyper(RefMetaDataTracker tracker, ReferenceContext refContext, AlignmentContext rawContext) {\n\n        // initialize the GenotypeCalculationModel for this thread if that hasn't been done yet\n        if ( glcm.get() == null ) {\n            glcm.set(getGenotypeLikelihoodsCalculationObject(logger, UAC));\n            log10AlleleFrequencyPosteriors.set(new double[N+1]);\n            afcm.set(getAlleleFrequencyCalculationObject(N, logger, verboseWriter, UAC));\n        }\n\n        BadReadPileupFilter badReadPileupFilter = new BadReadPileupFilter(refContext);\n        Map<String, StratifiedAlignmentContext> stratifiedContexts = getFilteredAndStratifiedContexts(UAC, refContext, rawContext, badReadPileupFilter);\n        if ( stratifiedContexts == null )\n            return null;\n\n        Map<String, BiallelicGenotypeLikelihoods> GLs = new HashMap<String, BiallelicGenotypeLikelihoods>();\n        Allele refAllele = glcm.get().getLikelihoods(tracker, refContext, stratifiedContexts, StratifiedAlignmentContext.StratifiedContextType.COMPLETE, genotypePriors, GLs);\n\n        // estimate our confidence in a reference call and return\n        if ( GLs.size() == 0 )\n            return estimateReferenceConfidence(stratifiedContexts, genotypePriors.getHeterozygosity(), false);\n\n        // reset the optimization value and determine the p(AF>0)\n        // TODO: get rid of this optimization, it is wrong!\n        afcm.get().setMinAlleleFrequencyToTest(0);\n\n        // 'zero' out the AFs (so that we don't have to worry if not all samples have reads at this position)\n        clearAFarray(log10AlleleFrequencyPosteriors.get());\n        afcm.get().getLog10PNonRef(tracker, refContext, GLs, log10AlleleFrequencyPriors, log10AlleleFrequencyPosteriors.get());\n\n        // find the most likely frequency\n        int bestAFguess = MathUtils.maxElementIndex(log10AlleleFrequencyPosteriors.get());\n\n        // calculate p(f>0)\n        double[] normalizedPosteriors = MathUtils.normalizeFromLog10(log10AlleleFrequencyPosteriors.get());\n        double sum = 0.0;\n        for (int i = 1; i <= N; i++)\n            sum += normalizedPosteriors[i];\n        double PofF = Math.min(sum, 1.0); // deal with precision errors\n\n        double phredScaledConfidence;\n        if ( bestAFguess != 0 ) {\n            phredScaledConfidence = QualityUtils.phredScaleErrorRate(normalizedPosteriors[0]);\n            if ( Double.isInfinite(phredScaledConfidence) )\n                phredScaledConfidence = -10.0 * log10AlleleFrequencyPosteriors.get()[0];\n        } else {\n            phredScaledConfidence = QualityUtils.phredScaleErrorRate(PofF);\n            if ( Double.isInfinite(phredScaledConfidence) ) {\n                sum = 0.0;\n                for (int i = 1; i <= N; i++) {\n                    if ( log10AlleleFrequencyPosteriors.get()[i] == AlleleFrequencyCalculationModel.VALUE_NOT_CALCULATED )\n                        break;\n                    sum += log10AlleleFrequencyPosteriors.get()[i];\n                }\n                phredScaledConfidence = (MathUtils.compareDoubles(sum, 0.0) == 0 ? 0 : -10.0 * sum);\n            }\n        }\n\n        // did we trigger on the provided track?\n        boolean atTriggerTrack = tracker.getReferenceMetaData(TRIGGER_TRACK_NAME, false).size() > 0;\n\n        // return a null call if we don't pass the confidence cutoff or the most likely allele frequency is zero\n        if ( !UAC.ALL_BASES_MODE && !passesEmitThreshold(phredScaledConfidence, bestAFguess, atTriggerTrack) ) {\n            // technically, at this point our confidence in a reference call isn't accurately estimated\n            //  because it didn't take into account samples with no data, so let's get a better estimate\n            return estimateReferenceConfidence(stratifiedContexts, genotypePriors.getHeterozygosity(), true);\n        }\n\n        // create the genotypes\n        Map<String, Genotype> genotypes = afcm.get().assignGenotypes(stratifiedContexts, GLs, log10AlleleFrequencyPosteriors.get(), bestAFguess);\n\n        // next, get the variant context data (alleles, attributes, etc.)\n        HashSet<Allele> alleles = new HashSet<Allele>();\n        alleles.add(refAllele);\n        for ( Genotype g : genotypes.values() )\n            alleles.addAll(g.getAlleles());\n\n        // *** note that calculating strand bias involves overwriting data structures, so we do that last\n        HashMap<String, Object> attributes = new HashMap<String, Object>();\n\n        DbSNPFeature dbsnp = getDbSNP(tracker);\n        if ( dbsnp != null )\n            attributes.put(VariantContext.ID_KEY, dbsnp.getRsID());\n\n        // if the site was downsampled, record that fact\n        if ( rawContext.hasPileupBeenDownsampled() )\n            attributes.put(VCFConstants.DOWNSAMPLED_KEY, true);\n\n\n        if ( !UAC.NO_SLOD ) {\n\n            // TODO: implement me\n\n            //Map<String, BiallelicGenotypeLikelihoods> forwardGLs = glcm.get().getLikelihoods(tracker, refContext, stratifiedContexts, StratifiedAlignmentContext.StratifiedContextType.FORWARD, genotypePriors);\n            //Map<String, BiallelicGenotypeLikelihoods> reverseGLs = glcm.get().getLikelihoods(tracker, refContext, stratifiedContexts, StratifiedAlignmentContext.StratifiedContextType.REVERSE, genotypePriors);\n\n\n\n\n\n\n        }\n\n        GenomeLoc loc = refContext.getLocus();\n        VariantContext vc = new VariantContext(\"UG_call\", loc.getContig(), loc.getStart(), loc.getStop(), alleles, genotypes, phredScaledConfidence/10.0, passesCallThreshold(phredScaledConfidence, atTriggerTrack) ? null : filter, attributes);\n\n        if ( annotationEngine != null ) {\n            // first off, we want to use the *unfiltered* context for the annotations\n            stratifiedContexts = StratifiedAlignmentContext.splitContextBySample(rawContext.getBasePileup(), UAC.ASSUME_SINGLE_SAMPLE);\n\n            Collection<VariantContext> variantContexts = annotationEngine.annotateContext(tracker, refContext, stratifiedContexts, vc);\n            vc = variantContexts.iterator().next(); //We know the collection will always have exactly 1 element.\n        }\n\n        // print out stats if we have a writer\n        if ( verboseWriter != null )\n            printVerboseData(vc, PofF, phredScaledConfidence, normalizedPosteriors);\n\n        VariantCallContext call = new VariantCallContext(vc, passesCallThreshold(phredScaledConfidence, atTriggerTrack));\n        call.setRefBase(refContext.getBase());\n        return call;\n    }","id":13848,"modified_method":"/**\n     * Compute at a given locus.\n     *\n     * @param tracker    the meta data tracker\n     * @param refContext the reference base\n     * @param rawContext contextual information around the locus\n     * @return the VariantCallContext object\n     */\n    public VariantCallContext runGenotyper(RefMetaDataTracker tracker, ReferenceContext refContext, AlignmentContext rawContext) {\n\n        // initialize the GenotypeCalculationModel for this thread if that hasn't been done yet\n        if ( glcm.get() == null ) {\n            glcm.set(getGenotypeLikelihoodsCalculationObject(logger, UAC));\n            log10AlleleFrequencyPosteriors.set(new double[N+1]);\n            afcm.set(getAlleleFrequencyCalculationObject(N, logger, verboseWriter, UAC));\n        }\n\n        BadReadPileupFilter badReadPileupFilter = new BadReadPileupFilter(refContext);\n        Map<String, StratifiedAlignmentContext> stratifiedContexts = getFilteredAndStratifiedContexts(UAC, refContext, rawContext, badReadPileupFilter);\n        if ( stratifiedContexts == null )\n            return null;\n\n        Map<String, BiallelicGenotypeLikelihoods> GLs = new HashMap<String, BiallelicGenotypeLikelihoods>();\n        Allele refAllele = glcm.get().getLikelihoods(tracker, refContext, stratifiedContexts, StratifiedAlignmentContext.StratifiedContextType.COMPLETE, genotypePriors, GLs);\n\n        // estimate our confidence in a reference call and return\n        if ( GLs.size() == 0 )\n            return estimateReferenceConfidence(stratifiedContexts, genotypePriors.getHeterozygosity(), false);\n\n        // reset the optimization value and determine the p(AF>0)\n        // TODO: get rid of this optimization, it is wrong!\n        afcm.get().setMinAlleleFrequencyToTest(0);\n\n        // 'zero' out the AFs (so that we don't have to worry if not all samples have reads at this position)\n        clearAFarray(log10AlleleFrequencyPosteriors.get());\n        afcm.get().getLog10PNonRef(tracker, refContext, GLs, log10AlleleFrequencyPriors, log10AlleleFrequencyPosteriors.get());\n\n        // find the most likely frequency\n        int bestAFguess = MathUtils.maxElementIndex(log10AlleleFrequencyPosteriors.get());\n\n        // calculate p(f>0)\n        double[] normalizedPosteriors = MathUtils.normalizeFromLog10(log10AlleleFrequencyPosteriors.get());\n        double sum = 0.0;\n        for (int i = 1; i <= N; i++)\n            sum += normalizedPosteriors[i];\n        double PofF = Math.min(sum, 1.0); // deal with precision errors\n\n        double phredScaledConfidence;\n        if ( bestAFguess != 0 ) {\n            phredScaledConfidence = QualityUtils.phredScaleErrorRate(normalizedPosteriors[0]);\n            if ( Double.isInfinite(phredScaledConfidence) )\n                // todo - verify this is OK\n                phredScaledConfidence = (double)QualityUtils.MAX_QUAL_SCORE;\n                //phredScaledConfidence = -10.0 * log10AlleleFrequencyPosteriors.get()[0];\n        } else {\n            phredScaledConfidence = QualityUtils.phredScaleErrorRate(PofF);\n            if ( Double.isInfinite(phredScaledConfidence) ) {\n                sum = 0.0;\n                for (int i = 1; i <= N; i++) {\n                    if ( log10AlleleFrequencyPosteriors.get()[i] == AlleleFrequencyCalculationModel.VALUE_NOT_CALCULATED )\n                        break;\n                    sum += log10AlleleFrequencyPosteriors.get()[i];\n                }\n                phredScaledConfidence = (MathUtils.compareDoubles(sum, 0.0) == 0 ? 0 : -10.0 * sum);\n            }\n        }\n\n        // did we trigger on the provided track?\n        boolean atTriggerTrack = tracker.getReferenceMetaData(TRIGGER_TRACK_NAME, false).size() > 0;\n\n        // return a null call if we don't pass the confidence cutoff or the most likely allele frequency is zero\n        if ( !UAC.ALL_BASES_MODE && !passesEmitThreshold(phredScaledConfidence, bestAFguess, atTriggerTrack) ) {\n            // technically, at this point our confidence in a reference call isn't accurately estimated\n            //  because it didn't take into account samples with no data, so let's get a better estimate\n            return estimateReferenceConfidence(stratifiedContexts, genotypePriors.getHeterozygosity(), true);\n        }\n\n        // create the genotypes\n        Map<String, Genotype> genotypes = afcm.get().assignGenotypes(stratifiedContexts, GLs, log10AlleleFrequencyPosteriors.get(), bestAFguess);\n\n        // next, get the variant context data (alleles, attributes, etc.)\n        HashSet<Allele> alleles = new HashSet<Allele>();\n        alleles.add(refAllele);\n        for ( Genotype g : genotypes.values() )\n            alleles.addAll(g.getAlleles());\n\n        // *** note that calculating strand bias involves overwriting data structures, so we do that last\n        HashMap<String, Object> attributes = new HashMap<String, Object>();\n\n        DbSNPFeature dbsnp = getDbSNP(tracker);\n        if ( dbsnp != null )\n            attributes.put(VariantContext.ID_KEY, dbsnp.getRsID());\n\n        // if the site was downsampled, record that fact\n        if ( rawContext.hasPileupBeenDownsampled() )\n            attributes.put(VCFConstants.DOWNSAMPLED_KEY, true);\n\n\n        if ( !UAC.NO_SLOD ) {\n\n            // TODO: implement me\n\n            //Map<String, BiallelicGenotypeLikelihoods> forwardGLs = glcm.get().getLikelihoods(tracker, refContext, stratifiedContexts, StratifiedAlignmentContext.StratifiedContextType.FORWARD, genotypePriors);\n            //Map<String, BiallelicGenotypeLikelihoods> reverseGLs = glcm.get().getLikelihoods(tracker, refContext, stratifiedContexts, StratifiedAlignmentContext.StratifiedContextType.REVERSE, genotypePriors);\n\n\n\n\n\n\n        }\n\n        GenomeLoc loc = refContext.getLocus();\n\n        // todo - temp fix until we can deal with extended events properly\n        //VariantContext vc = new VariantContext(\"UG_call\", loc.getContig(), loc.getStart(), loc.getStop(), alleles, genotypes, phredScaledConfidence/10.0, passesCallThreshold(phredScaledConfidence, atTriggerTrack) ? null : filter, attributes);\n        VariantContext vc = new VariantContext(\"UG_call\", loc.getContig(), loc.getStart(),\n                loc.getStart()+refAllele.length(), alleles, genotypes, phredScaledConfidence/10.0, passesCallThreshold(phredScaledConfidence, atTriggerTrack) ? null : filter, attributes);\n\n\n        if ( annotationEngine != null ) {\n            // first off, we want to use the *unfiltered* context for the annotations\n            ReadBackedPileup pileup = null;\n            if (rawContext.hasExtendedEventPileup())\n                pileup = rawContext.getExtendedEventPileup();\n            else if (rawContext.hasBasePileup())\n                pileup = rawContext.getBasePileup();\n\n            stratifiedContexts = StratifiedAlignmentContext.splitContextBySample(pileup, UAC.ASSUME_SINGLE_SAMPLE);\n\n            Collection<VariantContext> variantContexts = annotationEngine.annotateContext(tracker, refContext, stratifiedContexts, vc);\n            vc = variantContexts.iterator().next(); //We know the collection will always have exactly 1 element.\n        }\n\n        // print out stats if we have a writer\n        if ( verboseWriter != null )\n            printVerboseData(vc, PofF, phredScaledConfidence, normalizedPosteriors);\n\n        VariantCallContext call = new VariantCallContext(vc, passesCallThreshold(phredScaledConfidence, atTriggerTrack));\n        call.setRefBase(refContext.getBase());\n        return call;\n    }","commit_id":"ece694d0af6b384a816f818ebbd718eaff9d4ce4","url":"https://github.com/broadgsa/gatk"},{"original_method":"private static GenotypePriors createGenotypePriors(UnifiedArgumentCollection UAC) {\n        GenotypePriors priors;\n        switch ( UAC.GLmodel ) {\n            case SNP:\n                // use flat priors for GLs\n                priors = new DiploidSNPGenotypePriors();\n                break;\n            case DINDEL:\n                // TODO: create indel priors object\n                priors = null;\n                break;\n            default: throw new IllegalArgumentException(\"Unexpected GenotypeCalculationModel \" + UAC.GLmodel);\n        }\n\n        return priors;\n    }","id":13849,"modified_method":"private static GenotypePriors createGenotypePriors(UnifiedArgumentCollection UAC) {\n        GenotypePriors priors;\n        switch ( UAC.GLmodel ) {\n            case SNP:\n                // use flat priors for GLs\n                priors = new DiploidSNPGenotypePriors();\n                break;\n            case DINDEL:\n                // create flat priors for Indels, actual priors will depend on event length to be genotyped\n                priors = new DiploidIndelGenotypePriors();\n                break;\n            default: throw new IllegalArgumentException(\"Unexpected GenotypeCalculationModel \" + UAC.GLmodel);\n        }\n\n        return priors;\n    }","commit_id":"ece694d0af6b384a816f818ebbd718eaff9d4ce4","url":"https://github.com/broadgsa/gatk"},{"original_method":"/**\n\t * Includes the given key in this filter.\n\t * \n\t * @param key the key to include\n\t * @param existingFilter the existing filter to use for this key\n\t * @return the next filter\n\t */\n\tpublic ERXKeyFilter include(ERXKey key, ERXKeyFilter existingFilter) {\n\t\tERXKeyFilter filter;\n\t\tString keyPath = key.key();\n\t\tint dotIndex = keyPath.indexOf('.');\n\t\tif (dotIndex == -1) {\n\t\t\tif (existingFilter != null) {\n\t\t\t\t_includes.put(key, existingFilter);\n\t\t\t\t_excludes.removeObject(key);\n\t\t\t\tfilter = existingFilter;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfilter = _includes.get(key);\n\t\t\t\tif (filter == null) {\n\t\t\t\t\tfilter = new ERXKeyFilter(_nextBase);\n\t\t\t\t\tfilter.setDelegate(_delegate);\n\t\t\t\t\tfilter.setNextBase(_nextBase);\n\t\t\t\t\tfilter.setDeduplicationEnabled(_deduplicationEnabled);\n\t\t\t\t\t_includes.put(key, filter);\n\t\t\t\t\t_excludes.removeObject(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tERXKeyFilter subFilter = include(new ERXKey(keyPath.substring(0, dotIndex)), null);\n\t\t\tfilter = subFilter.include(new ERXKey(keyPath.substring(dotIndex + 1)), existingFilter);\n\t\t}\n\t\treturn filter;\n\t}","id":13850,"modified_method":"/**\n\t * Includes the given key in this filter.\n\t * \n\t * @param key the key to include\n\t * @param existingFilter the existing filter to use for this key\n\t * @return the next filter\n\t */\n\tpublic ERXKeyFilter include(ERXKey key, ERXKeyFilter existingFilter) {\n\t\tERXKeyFilter filter;\n\t\tString keyPath = key.key();\n\t\tint dotIndex = keyPath.indexOf('.');\n\t\tif (dotIndex == -1) {\n\t\t\tif (existingFilter != null) {\n\t\t\t\t_includes.put(key, existingFilter);\n\t\t\t\t_excludes.removeObject(key);\n\t\t\t\tfilter = existingFilter;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfilter = _includes.get(key);\n\t\t\t\tif (filter == null) {\n\t\t\t\t\tfilter = new ERXKeyFilter(_nextBase);\n\t\t\t\t\tfilter.setDelegate(_delegate);\n\t\t\t\t\tfilter.setNextBase(_nextBase);\n\t\t\t\t\tfilter.setDeduplicationEnabled(_deduplicationEnabled);\n\t\t\t\t\tfilter.setAnonymousUpdateEnabled(_anonymousUpdateEnabled);\n\t\t\t\t\t_includes.put(key, filter);\n\t\t\t\t\t_excludes.removeObject(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tERXKeyFilter subFilter = include(new ERXKey(keyPath.substring(0, dotIndex)), null);\n\t\t\tfilter = subFilter.include(new ERXKey(keyPath.substring(dotIndex + 1)), existingFilter);\n\t\t}\n\t\treturn filter;\n\t}","commit_id":"fd3e45d77f270917f1476ee0a48ab3b341c94973","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n\t * Creates a new ERXKeyFilter.\n\t * \n\t * @param base the base rule to apply\n\t * @param nextBase the next base rule to apply\n\t */\n\tpublic ERXKeyFilter(ERXKeyFilter.Base base, ERXKeyFilter.Base nextBase) {\n\t\t_base = base;\n\t\t_nextBase = nextBase;\n\t\t_includes = new LinkedHashMap<ERXKey, ERXKeyFilter>();\n\t\t_excludes = new NSMutableSet<ERXKey>();\n\t\t_lockedRelationships = new NSMutableSet<ERXKey>();\n\t\t_map = new NSMutableDictionary<ERXKey, ERXKey>();\n\t\t_deduplicationEnabled = true;\n\t}","id":13851,"modified_method":"/**\n\t * Creates a new ERXKeyFilter.\n\t * \n\t * @param base the base rule to apply\n\t * @param nextBase the next base rule to apply\n\t */\n\tpublic ERXKeyFilter(ERXKeyFilter.Base base, ERXKeyFilter.Base nextBase) {\n\t\t_base = base;\n\t\t_nextBase = nextBase;\n\t\t_includes = new LinkedHashMap<ERXKey, ERXKeyFilter>();\n\t\t_excludes = new NSMutableSet<ERXKey>();\n\t\t_lockedRelationships = new NSMutableSet<ERXKey>();\n\t\t_map = new NSMutableDictionary<ERXKey, ERXKey>();\n\t\t_deduplicationEnabled = true;\n\t\t_anonymousUpdateEnabled = false;\n\t}","commit_id":"fd3e45d77f270917f1476ee0a48ab3b341c94973","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n\t * Returns the filter for the given key, or creates a \"nextBase\" filter\n\t * if there isn't one.  This should usually only be called when you \n\t * know exactly what you're doing, as this doesn't fully interpret \n\t * include/exclude rules.\n\t * \n\t * @param key the key to lookup\n\t * @return the key filter\n\t */\n\tpublic ERXKeyFilter _filterForKey(ERXKey key) {\n\t\tERXKeyFilter filter = _includes.get(key);\n\t\tif (filter == null) {\n\t\t\tfilter = new ERXKeyFilter(_nextBase);\n\t\t\tfilter.setDelegate(_delegate);\n\t\t\tfilter.setNextBase(_nextBase);\n\t\t\tfilter.setDeduplicationEnabled(_deduplicationEnabled);\n\t\t}\n\t\treturn filter;\n\t}","id":13852,"modified_method":"/**\n\t * Returns the filter for the given key, or creates a \"nextBase\" filter\n\t * if there isn't one.  This should usually only be called when you \n\t * know exactly what you're doing, as this doesn't fully interpret \n\t * include/exclude rules.\n\t * \n\t * @param key the key to lookup\n\t * @return the key filter\n\t */\n\tpublic ERXKeyFilter _filterForKey(ERXKey key) {\n\t\tERXKeyFilter filter = _includes.get(key);\n\t\tif (filter == null) {\n\t\t\tfilter = new ERXKeyFilter(_nextBase);\n\t\t\tfilter.setDelegate(_delegate);\n\t\t\tfilter.setNextBase(_nextBase);\n\t\t\tfilter.setDeduplicationEnabled(_deduplicationEnabled);\n\t\t\tfilter.setAnonymousUpdateEnabled(_anonymousUpdateEnabled);\n\t\t}\n\t\treturn filter;\n\t}","commit_id":"fd3e45d77f270917f1476ee0a48ab3b341c94973","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n\t * Updates the given object based on this request node.\n\t * \n\t * @param obj\n\t *            the object to update\n\t * @param keyFilter\n\t *            the filter to use to determine how to update\n\t * @param delegate\n\t *            the delegate\n\t */\n\tpublic void updateObjectWithFilter(Object obj, ERXKeyFilter keyFilter, IERXRestDelegate delegate) {\n\t\tif (obj == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tEOClassDescription classDescription = ERXRestClassDescriptionFactory.classDescriptionForObject(obj);\n\t\tfor (Map.Entry<String, Object> attribute : _attributes.entrySet()) {\n\t\t\tERXKey<Object> key = keyFilter.keyMap(new ERXKey<Object>(attribute.getKey()));\n\t\t\tString keyName = key.key();\n\t\t\tif (keyFilter.matches(key, ERXKey.Type.Attribute) && isClassProperty(classDescription, keyName)) {\n\t\t\t\tObject value = ERXRestUtils.coerceValueToAttributeType(attribute.getValue(), null, obj, keyName);\n\t\t\t\tif (value instanceof NSKeyValueCoding.Null) {\n\t\t\t\t\tvalue = null;\n\t\t\t\t}\n\t\t\t\t_safeWillTakeValueForKey(keyFilter, obj, value, keyName);\n\t\t\t\tkey.takeValueInObject(value, obj);\n\t\t\t\t_safeDidTakeValueForKey(keyFilter, obj, value, keyName);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_safeDidSkipValueForKey(keyFilter, obj, attribute.getValue(), keyName); // MS: we didn't coerce the\n\t\t\t\t// value .. i think that's ok\n\t\t\t}\n\t\t}\n\n\t\tfor (ERXRestRequestNode childNode : _children) {\n\t\t\tERXKey<Object> key = keyFilter.keyMap(new ERXKey<Object>(childNode.name()));\n\t\t\tString keyName = key.key();\n\t\t\tif (isClassProperty(classDescription, keyName)) {\n\t\t\t\tNSKeyValueCoding._KeyBinding binding = NSKeyValueCoding.DefaultImplementation._keyGetBindingForKey(obj, keyName);\n\t\t\t\tClass valueType = binding.valueType();\n\n\t\t\t\tif (List.class.isAssignableFrom(valueType) && keyFilter.matches(key, ERXKey.Type.ToManyRelationship)) {\n\t\t\t\t\tEOClassDescription destinationEntity;\n\t\t\t\t\t// this is sort of expensive, but we want to support non-eomodel to-many relationships on EO's, so\n\t\t\t\t\t// we fallback and lookup the class entity ...\n\t\t\t\t\tif (!classDescription.toManyRelationshipKeys().containsObject(keyName) && classDescription instanceof EOEntityClassDescription) {\n\t\t\t\t\t\tEOClassDescription nonModelClassDescription = ERXRestClassDescriptionFactory.classDescriptionForClass(obj.getClass(), true);\n\t\t\t\t\t\tif (!nonModelClassDescription.toManyRelationshipKeys().containsObject(keyName)) {\n\t\t\t\t\t\t\tthrow new IllegalArgumentException(\"There is no to-many relationship named '\" + key.key() + \"' on '\" + classDescription.entityName() + \"'.\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdestinationEntity = classDescription.classDescriptionForDestinationKey(keyName);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tdestinationEntity = classDescription.classDescriptionForDestinationKey(keyName);\n\t\t\t\t\t}\n\t\t\t\t\tboolean lockedRelationship = keyFilter.lockedRelationship(key);\n\n\t\t\t\t\t@SuppressWarnings(\"unchecked\")\n\t\t\t\t\tList<Object> existingValues = (List<Object>) NSKeyValueCoding.DefaultImplementation.valueForKey(obj, keyName);\n\n\t\t\t\t\tSet<Object> removedValues = new HashSet<Object>(existingValues);\n\t\t\t\t\tList<Object> newValues = new LinkedList<Object>();\n\t\t\t\t\tList<Object> allValues = new LinkedList<Object>();\n\t\t\t\t\tfor (ERXRestRequestNode toManyNode : childNode.children()) {\n\t\t\t\t\t\tObject id = toManyNode.id();\n\n\t\t\t\t\t\tObject childObj;\n\t\t\t\t\t\tif (id == null) {\n\t\t\t\t\t\t\tif (lockedRelationship) {\n\t\t\t\t\t\t\t\tchildObj = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tchildObj = delegate.createObjectOfEntityWithID(destinationEntity, null);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tchildObj = delegate.objectOfEntityWithID(destinationEntity, id);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (childObj != null) {\n\t\t\t\t\t\t\tboolean newMemberOfRelationship = !existingValues.contains(childObj);\n\t\t\t\t\t\t\tif (newMemberOfRelationship) {\n\t\t\t\t\t\t\t\tif (!lockedRelationship) {\n\t\t\t\t\t\t\t\t\ttoManyNode.updateObjectWithFilter(childObj, keyFilter._filterForKey(key), delegate);\n\t\t\t\t\t\t\t\t\tnewValues.add(childObj);\n\t\t\t\t\t\t\t\t\tallValues.add(childObj);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\ttoManyNode.updateObjectWithFilter(childObj, keyFilter._filterForKey(key), delegate);\n\t\t\t\t\t\t\t\tallValues.add(childObj);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tremovedValues.remove(childObj);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!lockedRelationship) {\n\t\t\t\t\t\t_safeWillTakeValueForKey(keyFilter, obj, allValues, keyName);\n\t\t\t\t\t\tif (obj instanceof EOEnterpriseObject) {\n\t\t\t\t\t\t\tfor (Object removedValue : removedValues) {\n\t\t\t\t\t\t\t\t((EOEnterpriseObject) obj).removeObjectFromBothSidesOfRelationshipWithKey((EOEnterpriseObject) removedValue, keyName);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfor (Object newValue : newValues) {\n\t\t\t\t\t\t\t\t((EOEnterpriseObject) obj).addObjectToBothSidesOfRelationshipWithKey((EOEnterpriseObject) newValue, keyName);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tkey.takeValueInObject(allValues, obj);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t_safeDidTakeValueForKey(keyFilter, obj, allValues, keyName);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t_safeDidSkipValueForKey(keyFilter, obj, allValues, keyName);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (!ERXRestUtils.isPrimitive(valueType) && keyFilter.matches(key, ERXKey.Type.ToOneRelationship)) {\n\t\t\t\t\tEOClassDescription destinationClassDescription;\n\t\t\t\t\t// this is sort of expensive, but we want to support non-eomodel to-one relationships on EO's, so\n\t\t\t\t\t// we fallback and lookup the class entity ...\n\t\t\t\t\tif (!classDescription.toOneRelationshipKeys().containsObject(keyName) && classDescription instanceof EOEntityClassDescription) {\n\t\t\t\t\t\tEOClassDescription nonModelClassDescription = ERXRestClassDescriptionFactory.classDescriptionForClass(obj.getClass(), true);\n\t\t\t\t\t\tif (!nonModelClassDescription.toManyRelationshipKeys().containsObject(keyName)) {\n\t\t\t\t\t\t\tthrow new IllegalArgumentException(\"There is no to-one relationship named '\" + key.key() + \"' on '\" + classDescription.entityName() + \"'.\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdestinationClassDescription = nonModelClassDescription.classDescriptionForDestinationKey(keyName);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tdestinationClassDescription = classDescription.classDescriptionForDestinationKey(keyName);\n\t\t\t\t\t}\n\t\t\t\t\tboolean lockedRelationship = keyFilter.lockedRelationship(key);\n\n\t\t\t\t\tif (childNode.isArray()) {\n\t\t\t\t\t\tthrow new IllegalArgumentException(\"You attempted to pass an array of values for the key '\" + key + \"'.\");\n\t\t\t\t\t}\n\n\t\t\t\t\tif (childNode.isNull()) {\n\t\t\t\t\t\tObject previousChildObj = NSKeyValueCoding.DefaultImplementation.valueForKey(obj, keyName);\n\t\t\t\t\t\tif (previousChildObj != null && !lockedRelationship) {\n\t\t\t\t\t\t\t_safeWillTakeValueForKey(keyFilter, obj, null, keyName);\n\t\t\t\t\t\t\tif (obj instanceof EOEnterpriseObject && previousChildObj instanceof EOEnterpriseObject) {\n\t\t\t\t\t\t\t\t((EOEnterpriseObject) obj).removeObjectFromBothSidesOfRelationshipWithKey((EOEnterpriseObject) previousChildObj, keyName);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tkey.takeValueInObject(null, obj);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t_safeDidTakeValueForKey(keyFilter, obj, null, keyName);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (lockedRelationship) {\n\t\t\t\t\t\t\t_safeDidSkipValueForKey(keyFilter, obj, null, keyName);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tObject id = childNode.id();\n\n\t\t\t\t\t\tObject childObj;\n\t\t\t\t\t\tif (id == null) {\n\t\t\t\t\t\t\tif (lockedRelationship) {\n\t\t\t\t\t\t\t\tchildObj = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tchildObj = delegate.createObjectOfEntityWithID(destinationClassDescription, null);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tchildObj = delegate.objectOfEntityWithID(destinationClassDescription, id);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tboolean updateChildObj;\n\t\t\t\t\t\tif (childObj == null) {\n\t\t\t\t\t\t\tupdateChildObj = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (lockedRelationship) {\n\t\t\t\t\t\t\tObject previousChildObj = NSKeyValueCoding.DefaultImplementation.valueForKey(obj, keyName);\n\t\t\t\t\t\t\tupdateChildObj = previousChildObj != null && previousChildObj.equals(childObj);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tupdateChildObj = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (updateChildObj) {\n\t\t\t\t\t\t\tchildNode.updateObjectWithFilter(childObj, keyFilter._filterForKey(key), delegate);\n\t\t\t\t\t\t\tif (!lockedRelationship) {\n\t\t\t\t\t\t\t\t_safeWillTakeValueForKey(keyFilter, obj, childObj, keyName);\n\t\t\t\t\t\t\t\tif (obj instanceof EOEnterpriseObject && childObj instanceof EOEnterpriseObject) {\n\t\t\t\t\t\t\t\t\t((EOEnterpriseObject) obj).addObjectToBothSidesOfRelationshipWithKey((EOEnterpriseObject) childObj, keyName);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tkey.takeValueInObject(childObj, obj);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t_safeDidTakeValueForKey(keyFilter, obj, childObj, keyName);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t_safeDidSkipValueForKey(keyFilter, obj, childObj, keyName);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (/* entity.attributeNamed(keyName) != null && */ERXRestUtils.isPrimitive(valueType) && keyFilter.matches(key, ERXKey.Type.Attribute)) {\n\t\t\t\t\tObject value = childNode.value();\n\t\t\t\t\tif (value instanceof String) {\n\t\t\t\t\t\tvalue = ERXRestUtils.coerceValueToAttributeType(value, null, obj, keyName);\n\t\t\t\t\t}\n\t\t\t\t\tif (value instanceof NSKeyValueCoding.Null) {\n\t\t\t\t\t\tvalue = null;\n\t\t\t\t\t}\n\t\t\t\t\t_safeWillTakeValueForKey(keyFilter, obj, value, keyName);\n\t\t\t\t\tkey.takeValueInObject(value, obj);\n\t\t\t\t\t_safeDidTakeValueForKey(keyFilter, obj, value, keyName);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// ignore key\n\t\t\t\t\t_safeDidSkipValueForKey(keyFilter, obj, childNode, keyName); // MS: what is the value here? i'm just\n\t\t\t\t\t// hanging in the node ...\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","id":13853,"modified_method":"/**\n\t * Updates the given object based on this request node.\n\t * \n\t * @param obj\n\t *            the object to update\n\t * @param keyFilter\n\t *            the filter to use to determine how to update\n\t * @param delegate\n\t *            the delegate\n\t */\n\tpublic void updateObjectWithFilter(Object obj, ERXKeyFilter keyFilter, IERXRestDelegate delegate) {\n\t\tif (obj == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tEOClassDescription classDescription = ERXRestClassDescriptionFactory.classDescriptionForObject(obj);\n\t\tfor (Map.Entry<String, Object> attribute : _attributes.entrySet()) {\n\t\t\tERXKey<Object> key = keyFilter.keyMap(new ERXKey<Object>(attribute.getKey()));\n\t\t\tString keyName = key.key();\n\t\t\tif (keyFilter.matches(key, ERXKey.Type.Attribute) && isClassProperty(classDescription, keyName)) {\n\t\t\t\tObject value = ERXRestUtils.coerceValueToAttributeType(attribute.getValue(), null, obj, keyName);\n\t\t\t\tif (value instanceof NSKeyValueCoding.Null) {\n\t\t\t\t\tvalue = null;\n\t\t\t\t}\n\t\t\t\t_safeWillTakeValueForKey(keyFilter, obj, value, keyName);\n\t\t\t\tkey.takeValueInObject(value, obj);\n\t\t\t\t_safeDidTakeValueForKey(keyFilter, obj, value, keyName);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_safeDidSkipValueForKey(keyFilter, obj, attribute.getValue(), keyName); // MS: we didn't coerce the\n\t\t\t\t// value .. i think that's ok\n\t\t\t}\n\t\t}\n\n\t\tfor (ERXRestRequestNode childNode : _children) {\n\t\t\tERXKey<Object> key = keyFilter.keyMap(new ERXKey<Object>(childNode.name()));\n\t\t\tString keyName = key.key();\n\t\t\tif (isClassProperty(classDescription, keyName)) {\n\t\t\t\tNSKeyValueCoding._KeyBinding binding = NSKeyValueCoding.DefaultImplementation._keyGetBindingForKey(obj, keyName);\n\t\t\t\tClass valueType = binding.valueType();\n\n\t\t\t\tif (List.class.isAssignableFrom(valueType) && keyFilter.matches(key, ERXKey.Type.ToManyRelationship)) {\n\t\t\t\t\tEOClassDescription destinationEntity;\n\t\t\t\t\t// this is sort of expensive, but we want to support non-eomodel to-many relationships on EO's, so\n\t\t\t\t\t// we fallback and lookup the class entity ...\n\t\t\t\t\tif (!classDescription.toManyRelationshipKeys().containsObject(keyName) && classDescription instanceof EOEntityClassDescription) {\n\t\t\t\t\t\tEOClassDescription nonModelClassDescription = ERXRestClassDescriptionFactory.classDescriptionForClass(obj.getClass(), true);\n\t\t\t\t\t\tif (!nonModelClassDescription.toManyRelationshipKeys().containsObject(keyName)) {\n\t\t\t\t\t\t\tthrow new IllegalArgumentException(\"There is no to-many relationship named '\" + key.key() + \"' on '\" + classDescription.entityName() + \"'.\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdestinationEntity = classDescription.classDescriptionForDestinationKey(keyName);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tdestinationEntity = classDescription.classDescriptionForDestinationKey(keyName);\n\t\t\t\t\t}\n\t\t\t\t\tboolean lockedRelationship = keyFilter.lockedRelationship(key);\n\n\t\t\t\t\t@SuppressWarnings(\"unchecked\")\n\t\t\t\t\tList<Object> existingValues = (List<Object>) NSKeyValueCoding.DefaultImplementation.valueForKey(obj, keyName);\n\n\t\t\t\t\tSet<Object> removedValues = new HashSet<Object>(existingValues);\n\t\t\t\t\tList<Object> newValues = new LinkedList<Object>();\n\t\t\t\t\tList<Object> allValues = new LinkedList<Object>();\n\t\t\t\t\tfor (ERXRestRequestNode toManyNode : childNode.children()) {\n\t\t\t\t\t\tObject id = toManyNode.id();\n\n\t\t\t\t\t\tObject childObj;\n\t\t\t\t\t\tif (id == null) {\n\t\t\t\t\t\t\tif (lockedRelationship) {\n\t\t\t\t\t\t\t\tchildObj = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tchildObj = delegate.createObjectOfEntityWithID(destinationEntity, null);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tchildObj = delegate.objectOfEntityWithID(destinationEntity, id);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (childObj != null) {\n\t\t\t\t\t\t\tboolean newMemberOfRelationship = !existingValues.contains(childObj);\n\t\t\t\t\t\t\tif (newMemberOfRelationship) {\n\t\t\t\t\t\t\t\tif (!lockedRelationship) {\n\t\t\t\t\t\t\t\t\ttoManyNode.updateObjectWithFilter(childObj, keyFilter._filterForKey(key), delegate);\n\t\t\t\t\t\t\t\t\tnewValues.add(childObj);\n\t\t\t\t\t\t\t\t\tallValues.add(childObj);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\ttoManyNode.updateObjectWithFilter(childObj, keyFilter._filterForKey(key), delegate);\n\t\t\t\t\t\t\t\tallValues.add(childObj);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tremovedValues.remove(childObj);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!lockedRelationship) {\n\t\t\t\t\t\t_safeWillTakeValueForKey(keyFilter, obj, allValues, keyName);\n\t\t\t\t\t\tif (obj instanceof EOEnterpriseObject) {\n\t\t\t\t\t\t\tfor (Object removedValue : removedValues) {\n\t\t\t\t\t\t\t\t((EOEnterpriseObject) obj).removeObjectFromBothSidesOfRelationshipWithKey((EOEnterpriseObject) removedValue, keyName);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfor (Object newValue : newValues) {\n\t\t\t\t\t\t\t\t((EOEnterpriseObject) obj).addObjectToBothSidesOfRelationshipWithKey((EOEnterpriseObject) newValue, keyName);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tkey.takeValueInObject(allValues, obj);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t_safeDidTakeValueForKey(keyFilter, obj, allValues, keyName);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t_safeDidSkipValueForKey(keyFilter, obj, allValues, keyName);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (!ERXRestUtils.isPrimitive(valueType) && keyFilter.matches(key, ERXKey.Type.ToOneRelationship)) {\n\t\t\t\t\tEOClassDescription destinationClassDescription;\n\t\t\t\t\t// this is sort of expensive, but we want to support non-eomodel to-one relationships on EO's, so\n\t\t\t\t\t// we fallback and lookup the class entity ...\n\t\t\t\t\tif (!classDescription.toOneRelationshipKeys().containsObject(keyName) && classDescription instanceof EOEntityClassDescription) {\n\t\t\t\t\t\tEOClassDescription nonModelClassDescription = ERXRestClassDescriptionFactory.classDescriptionForClass(obj.getClass(), true);\n\t\t\t\t\t\tif (!nonModelClassDescription.toManyRelationshipKeys().containsObject(keyName)) {\n\t\t\t\t\t\t\tthrow new IllegalArgumentException(\"There is no to-one relationship named '\" + key.key() + \"' on '\" + classDescription.entityName() + \"'.\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdestinationClassDescription = nonModelClassDescription.classDescriptionForDestinationKey(keyName);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tdestinationClassDescription = classDescription.classDescriptionForDestinationKey(keyName);\n\t\t\t\t\t}\n\t\t\t\t\tboolean lockedRelationship = keyFilter.lockedRelationship(key);\n\n\t\t\t\t\tif (childNode.isArray()) {\n\t\t\t\t\t\tthrow new IllegalArgumentException(\"You attempted to pass an array of values for the key '\" + key + \"'.\");\n\t\t\t\t\t}\n\n\t\t\t\t\tif (childNode.isNull()) {\n\t\t\t\t\t\tObject previousChildObj = NSKeyValueCoding.DefaultImplementation.valueForKey(obj, keyName);\n\t\t\t\t\t\tif (previousChildObj != null && !lockedRelationship) {\n\t\t\t\t\t\t\t_safeWillTakeValueForKey(keyFilter, obj, null, keyName);\n\t\t\t\t\t\t\tif (obj instanceof EOEnterpriseObject && previousChildObj instanceof EOEnterpriseObject) {\n\t\t\t\t\t\t\t\t((EOEnterpriseObject) obj).removeObjectFromBothSidesOfRelationshipWithKey((EOEnterpriseObject) previousChildObj, keyName);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tkey.takeValueInObject(null, obj);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t_safeDidTakeValueForKey(keyFilter, obj, null, keyName);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (lockedRelationship) {\n\t\t\t\t\t\t\t_safeDidSkipValueForKey(keyFilter, obj, null, keyName);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tObject id = childNode.id();\n\n\t\t\t\t\t\tERXKeyFilter childKeyFilter = keyFilter._filterForKey(key);\n\t\t\t\t\t\tObject childObj;\n\t\t\t\t\t\tif (id == null) {\n\t\t\t\t\t\t\tif (lockedRelationship) {\n\t\t\t\t\t\t\t\tchildObj = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (childKeyFilter.isAnonymousUpdateEnabled()) {\n\t\t\t\t\t\t\t\tchildObj = NSKeyValueCoding.DefaultImplementation.valueForKey(obj, keyName);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tchildObj = delegate.createObjectOfEntityWithID(destinationClassDescription, null);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (\"_\".equals(id)) {\n\t\t\t\t\t\t\tchildObj = NSKeyValueCoding.DefaultImplementation.valueForKey(obj, keyName);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tchildObj = delegate.objectOfEntityWithID(destinationClassDescription, id);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tboolean updateChildObj;\n\t\t\t\t\t\tif (childObj == null) {\n\t\t\t\t\t\t\tupdateChildObj = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (lockedRelationship) {\n\t\t\t\t\t\t\tObject previousChildObj = NSKeyValueCoding.DefaultImplementation.valueForKey(obj, keyName);\n\t\t\t\t\t\t\tupdateChildObj = previousChildObj != null && previousChildObj.equals(childObj);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tupdateChildObj = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (updateChildObj) {\n\t\t\t\t\t\t\tchildNode.updateObjectWithFilter(childObj, childKeyFilter, delegate);\n\t\t\t\t\t\t\tif (!lockedRelationship) {\n\t\t\t\t\t\t\t\t_safeWillTakeValueForKey(keyFilter, obj, childObj, keyName);\n\t\t\t\t\t\t\t\tif (obj instanceof EOEnterpriseObject && childObj instanceof EOEnterpriseObject) {\n\t\t\t\t\t\t\t\t\t((EOEnterpriseObject) obj).addObjectToBothSidesOfRelationshipWithKey((EOEnterpriseObject) childObj, keyName);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tkey.takeValueInObject(childObj, obj);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t_safeDidTakeValueForKey(keyFilter, obj, childObj, keyName);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t_safeDidSkipValueForKey(keyFilter, obj, childObj, keyName);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (/* entity.attributeNamed(keyName) != null && */ERXRestUtils.isPrimitive(valueType) && keyFilter.matches(key, ERXKey.Type.Attribute)) {\n\t\t\t\t\tObject value = childNode.value();\n\t\t\t\t\tif (value instanceof String) {\n\t\t\t\t\t\tvalue = ERXRestUtils.coerceValueToAttributeType(value, null, obj, keyName);\n\t\t\t\t\t}\n\t\t\t\t\tif (value instanceof NSKeyValueCoding.Null) {\n\t\t\t\t\t\tvalue = null;\n\t\t\t\t\t}\n\t\t\t\t\t_safeWillTakeValueForKey(keyFilter, obj, value, keyName);\n\t\t\t\t\tkey.takeValueInObject(value, obj);\n\t\t\t\t\t_safeDidTakeValueForKey(keyFilter, obj, value, keyName);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// ignore key\n\t\t\t\t\t_safeDidSkipValueForKey(keyFilter, obj, childNode, keyName); // MS: what is the value here? i'm just\n\t\t\t\t\t// hanging in the node ...\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","commit_id":"fd3e45d77f270917f1476ee0a48ab3b341c94973","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n\t * Includes the given key in this filter.\n\t * \n\t * @param key the key to include\n\t * @param existingFilter the existing filter to use for this key\n\t * @return the next filter\n\t */\n\tpublic ERXKeyFilter include(ERXKey key, ERXKeyFilter existingFilter) {\n\t\tERXKeyFilter filter;\n\t\tString keyPath = key.key();\n\t\tint dotIndex = keyPath.indexOf('.');\n\t\tif (dotIndex == -1) {\n\t\t\tif (existingFilter != null) {\n\t\t\t\t_includes.put(key, existingFilter);\n\t\t\t\t_excludes.removeObject(key);\n\t\t\t\tfilter = existingFilter;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfilter = _includes.get(key);\n\t\t\t\tif (filter == null) {\n\t\t\t\t\tfilter = new ERXKeyFilter(_nextBase);\n\t\t\t\t\tfilter.setDelegate(_delegate);\n\t\t\t\t\tfilter.setNextBase(_nextBase);\n\t\t\t\t\tfilter.setDeduplicationEnabled(_deduplicationEnabled);\n\t\t\t\t\t_includes.put(key, filter);\n\t\t\t\t\t_excludes.removeObject(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tERXKeyFilter subFilter = include(new ERXKey(keyPath.substring(0, dotIndex)), null);\n\t\t\tfilter = subFilter.include(new ERXKey(keyPath.substring(dotIndex + 1)), existingFilter);\n\t\t}\n\t\treturn filter;\n\t}","id":13854,"modified_method":"/**\n\t * Includes the given key in this filter.\n\t * \n\t * @param key the key to include\n\t * @param existingFilter the existing filter to use for this key\n\t * @return the next filter\n\t */\n\tpublic ERXKeyFilter include(ERXKey key, ERXKeyFilter existingFilter) {\n\t\tERXKeyFilter filter;\n\t\tString keyPath = key.key();\n\t\tint dotIndex = keyPath.indexOf('.');\n\t\tif (dotIndex == -1) {\n\t\t\tif (existingFilter != null) {\n\t\t\t\t_includes.put(key, existingFilter);\n\t\t\t\t_excludes.removeObject(key);\n\t\t\t\tfilter = existingFilter;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfilter = _includes.get(key);\n\t\t\t\tif (filter == null) {\n\t\t\t\t\tfilter = new ERXKeyFilter(_nextBase);\n\t\t\t\t\tfilter.setDelegate(_delegate);\n\t\t\t\t\tfilter.setNextBase(_nextBase);\n\t\t\t\t\tfilter.setDeduplicationEnabled(_deduplicationEnabled);\n\t\t\t\t\tfilter.setAnonymousUpdateEnabled(_anonymousUpdateEnabled);\n\t\t\t\t\t_includes.put(key, filter);\n\t\t\t\t\t_excludes.removeObject(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tERXKeyFilter subFilter = include(new ERXKey(keyPath.substring(0, dotIndex)), null);\n\t\t\tfilter = subFilter.include(new ERXKey(keyPath.substring(dotIndex + 1)), existingFilter);\n\t\t}\n\t\treturn filter;\n\t}","commit_id":"c61e75010c595a4f7fa9d07d144489b49aa6dd4d","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n\t * Returns the filter for the given key, or creates a \"nextBase\" filter\n\t * if there isn't one.  This should usually only be called when you \n\t * know exactly what you're doing, as this doesn't fully interpret \n\t * include/exclude rules.\n\t * \n\t * @param key the key to lookup\n\t * @return the key filter\n\t */\n\tpublic ERXKeyFilter _filterForKey(ERXKey key) {\n\t\tERXKeyFilter filter = _includes.get(key);\n\t\tif (filter == null) {\n\t\t\tfilter = new ERXKeyFilter(_nextBase);\n\t\t\tfilter.setDelegate(_delegate);\n\t\t\tfilter.setNextBase(_nextBase);\n\t\t\tfilter.setDeduplicationEnabled(_deduplicationEnabled);\n\t\t}\n\t\treturn filter;\n\t}","id":13855,"modified_method":"/**\n\t * Returns the filter for the given key, or creates a \"nextBase\" filter\n\t * if there isn't one.  This should usually only be called when you \n\t * know exactly what you're doing, as this doesn't fully interpret \n\t * include/exclude rules.\n\t * \n\t * @param key the key to lookup\n\t * @return the key filter\n\t */\n\tpublic ERXKeyFilter _filterForKey(ERXKey key) {\n\t\tERXKeyFilter filter = _includes.get(key);\n\t\tif (filter == null) {\n\t\t\tfilter = new ERXKeyFilter(_nextBase);\n\t\t\tfilter.setDelegate(_delegate);\n\t\t\tfilter.setNextBase(_nextBase);\n\t\t\tfilter.setDeduplicationEnabled(_deduplicationEnabled);\n\t\t\tfilter.setAnonymousUpdateEnabled(_anonymousUpdateEnabled);\n\t\t}\n\t\treturn filter;\n\t}","commit_id":"c61e75010c595a4f7fa9d07d144489b49aa6dd4d","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n\t * Creates a new ERXKeyFilter.\n\t * \n\t * @param base the base rule to apply\n\t * @param nextBase the next base rule to apply\n\t */\n\tpublic ERXKeyFilter(ERXKeyFilter.Base base, ERXKeyFilter.Base nextBase) {\n\t\t_base = base;\n\t\t_nextBase = nextBase;\n\t\t_includes = new LinkedHashMap<ERXKey, ERXKeyFilter>();\n\t\t_excludes = new NSMutableSet<ERXKey>();\n\t\t_lockedRelationships = new NSMutableSet<ERXKey>();\n\t\t_map = new NSMutableDictionary<ERXKey, ERXKey>();\n\t\t_deduplicationEnabled = true;\n\t}","id":13856,"modified_method":"/**\n\t * Creates a new ERXKeyFilter.\n\t * \n\t * @param base the base rule to apply\n\t * @param nextBase the next base rule to apply\n\t */\n\tpublic ERXKeyFilter(ERXKeyFilter.Base base, ERXKeyFilter.Base nextBase) {\n\t\t_base = base;\n\t\t_nextBase = nextBase;\n\t\t_includes = new LinkedHashMap<ERXKey, ERXKeyFilter>();\n\t\t_excludes = new NSMutableSet<ERXKey>();\n\t\t_lockedRelationships = new NSMutableSet<ERXKey>();\n\t\t_map = new NSMutableDictionary<ERXKey, ERXKey>();\n\t\t_deduplicationEnabled = true;\n\t\t_anonymousUpdateEnabled = false;\n\t}","commit_id":"c61e75010c595a4f7fa9d07d144489b49aa6dd4d","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n\t * Updates the given object based on this request node.\n\t * \n\t * @param obj\n\t *            the object to update\n\t * @param keyFilter\n\t *            the filter to use to determine how to update\n\t * @param delegate\n\t *            the delegate\n\t */\n\tpublic void updateObjectWithFilter(Object obj, ERXKeyFilter keyFilter, IERXRestDelegate delegate) {\n\t\tif (obj == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tEOClassDescription classDescription = ERXRestClassDescriptionFactory.classDescriptionForObject(obj);\n\t\tfor (Map.Entry<String, Object> attribute : _attributes.entrySet()) {\n\t\t\tERXKey<Object> key = keyFilter.keyMap(new ERXKey<Object>(attribute.getKey()));\n\t\t\tString keyName = key.key();\n\t\t\tif (keyFilter.matches(key, ERXKey.Type.Attribute) && isClassProperty(classDescription, keyName)) {\n\t\t\t\tObject value = ERXRestUtils.coerceValueToAttributeType(attribute.getValue(), null, obj, keyName);\n\t\t\t\tif (value instanceof NSKeyValueCoding.Null) {\n\t\t\t\t\tvalue = null;\n\t\t\t\t}\n\t\t\t\t_safeWillTakeValueForKey(keyFilter, obj, value, keyName);\n\t\t\t\tkey.takeValueInObject(value, obj);\n\t\t\t\t_safeDidTakeValueForKey(keyFilter, obj, value, keyName);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_safeDidSkipValueForKey(keyFilter, obj, attribute.getValue(), keyName); // MS: we didn't coerce the\n\t\t\t\t// value .. i think that's ok\n\t\t\t}\n\t\t}\n\n\t\tfor (ERXRestRequestNode childNode : _children) {\n\t\t\tERXKey<Object> key = keyFilter.keyMap(new ERXKey<Object>(childNode.name()));\n\t\t\tString keyName = key.key();\n\t\t\tif (isClassProperty(classDescription, keyName)) {\n\t\t\t\tNSKeyValueCoding._KeyBinding binding = NSKeyValueCoding.DefaultImplementation._keyGetBindingForKey(obj, keyName);\n\t\t\t\tClass valueType = binding.valueType();\n\n\t\t\t\tif (List.class.isAssignableFrom(valueType) && keyFilter.matches(key, ERXKey.Type.ToManyRelationship)) {\n\t\t\t\t\tEOClassDescription destinationEntity;\n\t\t\t\t\t// this is sort of expensive, but we want to support non-eomodel to-many relationships on EO's, so\n\t\t\t\t\t// we fallback and lookup the class entity ...\n\t\t\t\t\tif (!classDescription.toManyRelationshipKeys().containsObject(keyName) && classDescription instanceof EOEntityClassDescription) {\n\t\t\t\t\t\tEOClassDescription nonModelClassDescription = ERXRestClassDescriptionFactory.classDescriptionForClass(obj.getClass(), true);\n\t\t\t\t\t\tif (!nonModelClassDescription.toManyRelationshipKeys().containsObject(keyName)) {\n\t\t\t\t\t\t\tthrow new IllegalArgumentException(\"There is no to-many relationship named '\" + key.key() + \"' on '\" + classDescription.entityName() + \"'.\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdestinationEntity = classDescription.classDescriptionForDestinationKey(keyName);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tdestinationEntity = classDescription.classDescriptionForDestinationKey(keyName);\n\t\t\t\t\t}\n\t\t\t\t\tboolean lockedRelationship = keyFilter.lockedRelationship(key);\n\n\t\t\t\t\t@SuppressWarnings(\"unchecked\")\n\t\t\t\t\tList<Object> existingValues = (List<Object>) NSKeyValueCoding.DefaultImplementation.valueForKey(obj, keyName);\n\n\t\t\t\t\tSet<Object> removedValues = new HashSet<Object>(existingValues);\n\t\t\t\t\tList<Object> newValues = new LinkedList<Object>();\n\t\t\t\t\tList<Object> allValues = new LinkedList<Object>();\n\t\t\t\t\tfor (ERXRestRequestNode toManyNode : childNode.children()) {\n\t\t\t\t\t\tObject id = toManyNode.id();\n\n\t\t\t\t\t\tObject childObj;\n\t\t\t\t\t\tif (id == null) {\n\t\t\t\t\t\t\tif (lockedRelationship) {\n\t\t\t\t\t\t\t\tchildObj = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tchildObj = delegate.createObjectOfEntityWithID(destinationEntity, null);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tchildObj = delegate.objectOfEntityWithID(destinationEntity, id);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (childObj != null) {\n\t\t\t\t\t\t\tboolean newMemberOfRelationship = !existingValues.contains(childObj);\n\t\t\t\t\t\t\tif (newMemberOfRelationship) {\n\t\t\t\t\t\t\t\tif (!lockedRelationship) {\n\t\t\t\t\t\t\t\t\ttoManyNode.updateObjectWithFilter(childObj, keyFilter._filterForKey(key), delegate);\n\t\t\t\t\t\t\t\t\tnewValues.add(childObj);\n\t\t\t\t\t\t\t\t\tallValues.add(childObj);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\ttoManyNode.updateObjectWithFilter(childObj, keyFilter._filterForKey(key), delegate);\n\t\t\t\t\t\t\t\tallValues.add(childObj);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tremovedValues.remove(childObj);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!lockedRelationship) {\n\t\t\t\t\t\t_safeWillTakeValueForKey(keyFilter, obj, allValues, keyName);\n\t\t\t\t\t\tif (obj instanceof EOEnterpriseObject) {\n\t\t\t\t\t\t\tfor (Object removedValue : removedValues) {\n\t\t\t\t\t\t\t\t((EOEnterpriseObject) obj).removeObjectFromBothSidesOfRelationshipWithKey((EOEnterpriseObject) removedValue, keyName);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfor (Object newValue : newValues) {\n\t\t\t\t\t\t\t\t((EOEnterpriseObject) obj).addObjectToBothSidesOfRelationshipWithKey((EOEnterpriseObject) newValue, keyName);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tkey.takeValueInObject(allValues, obj);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t_safeDidTakeValueForKey(keyFilter, obj, allValues, keyName);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t_safeDidSkipValueForKey(keyFilter, obj, allValues, keyName);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (!ERXRestUtils.isPrimitive(valueType) && keyFilter.matches(key, ERXKey.Type.ToOneRelationship)) {\n\t\t\t\t\tEOClassDescription destinationClassDescription;\n\t\t\t\t\t// this is sort of expensive, but we want to support non-eomodel to-one relationships on EO's, so\n\t\t\t\t\t// we fallback and lookup the class entity ...\n\t\t\t\t\tif (!classDescription.toOneRelationshipKeys().containsObject(keyName) && classDescription instanceof EOEntityClassDescription) {\n\t\t\t\t\t\tEOClassDescription nonModelClassDescription = ERXRestClassDescriptionFactory.classDescriptionForClass(obj.getClass(), true);\n\t\t\t\t\t\tif (!nonModelClassDescription.toManyRelationshipKeys().containsObject(keyName)) {\n\t\t\t\t\t\t\tthrow new IllegalArgumentException(\"There is no to-one relationship named '\" + key.key() + \"' on '\" + classDescription.entityName() + \"'.\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdestinationClassDescription = nonModelClassDescription.classDescriptionForDestinationKey(keyName);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tdestinationClassDescription = classDescription.classDescriptionForDestinationKey(keyName);\n\t\t\t\t\t}\n\t\t\t\t\tboolean lockedRelationship = keyFilter.lockedRelationship(key);\n\n\t\t\t\t\tif (childNode.isArray()) {\n\t\t\t\t\t\tthrow new IllegalArgumentException(\"You attempted to pass an array of values for the key '\" + key + \"'.\");\n\t\t\t\t\t}\n\n\t\t\t\t\tif (childNode.isNull()) {\n\t\t\t\t\t\tObject previousChildObj = NSKeyValueCoding.DefaultImplementation.valueForKey(obj, keyName);\n\t\t\t\t\t\tif (previousChildObj != null && !lockedRelationship) {\n\t\t\t\t\t\t\t_safeWillTakeValueForKey(keyFilter, obj, null, keyName);\n\t\t\t\t\t\t\tif (obj instanceof EOEnterpriseObject && previousChildObj instanceof EOEnterpriseObject) {\n\t\t\t\t\t\t\t\t((EOEnterpriseObject) obj).removeObjectFromBothSidesOfRelationshipWithKey((EOEnterpriseObject) previousChildObj, keyName);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tkey.takeValueInObject(null, obj);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t_safeDidTakeValueForKey(keyFilter, obj, null, keyName);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (lockedRelationship) {\n\t\t\t\t\t\t\t_safeDidSkipValueForKey(keyFilter, obj, null, keyName);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tObject id = childNode.id();\n\n\t\t\t\t\t\tObject childObj;\n\t\t\t\t\t\tif (id == null) {\n\t\t\t\t\t\t\tif (lockedRelationship) {\n\t\t\t\t\t\t\t\tchildObj = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tchildObj = delegate.createObjectOfEntityWithID(destinationClassDescription, null);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tchildObj = delegate.objectOfEntityWithID(destinationClassDescription, id);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tboolean updateChildObj;\n\t\t\t\t\t\tif (childObj == null) {\n\t\t\t\t\t\t\tupdateChildObj = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (lockedRelationship) {\n\t\t\t\t\t\t\tObject previousChildObj = NSKeyValueCoding.DefaultImplementation.valueForKey(obj, keyName);\n\t\t\t\t\t\t\tupdateChildObj = previousChildObj != null && previousChildObj.equals(childObj);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tupdateChildObj = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (updateChildObj) {\n\t\t\t\t\t\t\tchildNode.updateObjectWithFilter(childObj, keyFilter._filterForKey(key), delegate);\n\t\t\t\t\t\t\tif (!lockedRelationship) {\n\t\t\t\t\t\t\t\t_safeWillTakeValueForKey(keyFilter, obj, childObj, keyName);\n\t\t\t\t\t\t\t\tif (obj instanceof EOEnterpriseObject && childObj instanceof EOEnterpriseObject) {\n\t\t\t\t\t\t\t\t\t((EOEnterpriseObject) obj).addObjectToBothSidesOfRelationshipWithKey((EOEnterpriseObject) childObj, keyName);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tkey.takeValueInObject(childObj, obj);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t_safeDidTakeValueForKey(keyFilter, obj, childObj, keyName);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t_safeDidSkipValueForKey(keyFilter, obj, childObj, keyName);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (/* entity.attributeNamed(keyName) != null && */ERXRestUtils.isPrimitive(valueType) && keyFilter.matches(key, ERXKey.Type.Attribute)) {\n\t\t\t\t\tObject value = childNode.value();\n\t\t\t\t\tif (value instanceof String) {\n\t\t\t\t\t\tvalue = ERXRestUtils.coerceValueToAttributeType(value, null, obj, keyName);\n\t\t\t\t\t}\n\t\t\t\t\tif (value instanceof NSKeyValueCoding.Null) {\n\t\t\t\t\t\tvalue = null;\n\t\t\t\t\t}\n\t\t\t\t\t_safeWillTakeValueForKey(keyFilter, obj, value, keyName);\n\t\t\t\t\tkey.takeValueInObject(value, obj);\n\t\t\t\t\t_safeDidTakeValueForKey(keyFilter, obj, value, keyName);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// ignore key\n\t\t\t\t\t_safeDidSkipValueForKey(keyFilter, obj, childNode, keyName); // MS: what is the value here? i'm just\n\t\t\t\t\t// hanging in the node ...\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","id":13857,"modified_method":"/**\n\t * Updates the given object based on this request node.\n\t * \n\t * @param obj\n\t *            the object to update\n\t * @param keyFilter\n\t *            the filter to use to determine how to update\n\t * @param delegate\n\t *            the delegate\n\t */\n\tpublic void updateObjectWithFilter(Object obj, ERXKeyFilter keyFilter, IERXRestDelegate delegate) {\n\t\tif (obj == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tEOClassDescription classDescription = ERXRestClassDescriptionFactory.classDescriptionForObject(obj);\n\t\tfor (Map.Entry<String, Object> attribute : _attributes.entrySet()) {\n\t\t\tERXKey<Object> key = keyFilter.keyMap(new ERXKey<Object>(attribute.getKey()));\n\t\t\tString keyName = key.key();\n\t\t\tif (keyFilter.matches(key, ERXKey.Type.Attribute) && isClassProperty(classDescription, keyName)) {\n\t\t\t\tObject value = ERXRestUtils.coerceValueToAttributeType(attribute.getValue(), null, obj, keyName);\n\t\t\t\tif (value instanceof NSKeyValueCoding.Null) {\n\t\t\t\t\tvalue = null;\n\t\t\t\t}\n\t\t\t\t_safeWillTakeValueForKey(keyFilter, obj, value, keyName);\n\t\t\t\tkey.takeValueInObject(value, obj);\n\t\t\t\t_safeDidTakeValueForKey(keyFilter, obj, value, keyName);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_safeDidSkipValueForKey(keyFilter, obj, attribute.getValue(), keyName); // MS: we didn't coerce the\n\t\t\t\t// value .. i think that's ok\n\t\t\t}\n\t\t}\n\n\t\tfor (ERXRestRequestNode childNode : _children) {\n\t\t\tERXKey<Object> key = keyFilter.keyMap(new ERXKey<Object>(childNode.name()));\n\t\t\tString keyName = key.key();\n\t\t\tif (isClassProperty(classDescription, keyName)) {\n\t\t\t\tNSKeyValueCoding._KeyBinding binding = NSKeyValueCoding.DefaultImplementation._keyGetBindingForKey(obj, keyName);\n\t\t\t\tClass valueType = binding.valueType();\n\n\t\t\t\tif (List.class.isAssignableFrom(valueType) && keyFilter.matches(key, ERXKey.Type.ToManyRelationship)) {\n\t\t\t\t\tEOClassDescription destinationEntity;\n\t\t\t\t\t// this is sort of expensive, but we want to support non-eomodel to-many relationships on EO's, so\n\t\t\t\t\t// we fallback and lookup the class entity ...\n\t\t\t\t\tif (!classDescription.toManyRelationshipKeys().containsObject(keyName) && classDescription instanceof EOEntityClassDescription) {\n\t\t\t\t\t\tEOClassDescription nonModelClassDescription = ERXRestClassDescriptionFactory.classDescriptionForClass(obj.getClass(), true);\n\t\t\t\t\t\tif (!nonModelClassDescription.toManyRelationshipKeys().containsObject(keyName)) {\n\t\t\t\t\t\t\tthrow new IllegalArgumentException(\"There is no to-many relationship named '\" + key.key() + \"' on '\" + classDescription.entityName() + \"'.\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdestinationEntity = classDescription.classDescriptionForDestinationKey(keyName);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tdestinationEntity = classDescription.classDescriptionForDestinationKey(keyName);\n\t\t\t\t\t}\n\t\t\t\t\tboolean lockedRelationship = keyFilter.lockedRelationship(key);\n\n\t\t\t\t\t@SuppressWarnings(\"unchecked\")\n\t\t\t\t\tList<Object> existingValues = (List<Object>) NSKeyValueCoding.DefaultImplementation.valueForKey(obj, keyName);\n\n\t\t\t\t\tSet<Object> removedValues = new HashSet<Object>(existingValues);\n\t\t\t\t\tList<Object> newValues = new LinkedList<Object>();\n\t\t\t\t\tList<Object> allValues = new LinkedList<Object>();\n\t\t\t\t\tfor (ERXRestRequestNode toManyNode : childNode.children()) {\n\t\t\t\t\t\tObject id = toManyNode.id();\n\n\t\t\t\t\t\tObject childObj;\n\t\t\t\t\t\tif (id == null) {\n\t\t\t\t\t\t\tif (lockedRelationship) {\n\t\t\t\t\t\t\t\tchildObj = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tchildObj = delegate.createObjectOfEntityWithID(destinationEntity, null);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tchildObj = delegate.objectOfEntityWithID(destinationEntity, id);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (childObj != null) {\n\t\t\t\t\t\t\tboolean newMemberOfRelationship = !existingValues.contains(childObj);\n\t\t\t\t\t\t\tif (newMemberOfRelationship) {\n\t\t\t\t\t\t\t\tif (!lockedRelationship) {\n\t\t\t\t\t\t\t\t\ttoManyNode.updateObjectWithFilter(childObj, keyFilter._filterForKey(key), delegate);\n\t\t\t\t\t\t\t\t\tnewValues.add(childObj);\n\t\t\t\t\t\t\t\t\tallValues.add(childObj);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\ttoManyNode.updateObjectWithFilter(childObj, keyFilter._filterForKey(key), delegate);\n\t\t\t\t\t\t\t\tallValues.add(childObj);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tremovedValues.remove(childObj);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!lockedRelationship) {\n\t\t\t\t\t\t_safeWillTakeValueForKey(keyFilter, obj, allValues, keyName);\n\t\t\t\t\t\tif (obj instanceof EOEnterpriseObject) {\n\t\t\t\t\t\t\tfor (Object removedValue : removedValues) {\n\t\t\t\t\t\t\t\t((EOEnterpriseObject) obj).removeObjectFromBothSidesOfRelationshipWithKey((EOEnterpriseObject) removedValue, keyName);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfor (Object newValue : newValues) {\n\t\t\t\t\t\t\t\t((EOEnterpriseObject) obj).addObjectToBothSidesOfRelationshipWithKey((EOEnterpriseObject) newValue, keyName);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tkey.takeValueInObject(allValues, obj);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t_safeDidTakeValueForKey(keyFilter, obj, allValues, keyName);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t_safeDidSkipValueForKey(keyFilter, obj, allValues, keyName);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (!ERXRestUtils.isPrimitive(valueType) && keyFilter.matches(key, ERXKey.Type.ToOneRelationship)) {\n\t\t\t\t\tEOClassDescription destinationClassDescription;\n\t\t\t\t\t// this is sort of expensive, but we want to support non-eomodel to-one relationships on EO's, so\n\t\t\t\t\t// we fallback and lookup the class entity ...\n\t\t\t\t\tif (!classDescription.toOneRelationshipKeys().containsObject(keyName) && classDescription instanceof EOEntityClassDescription) {\n\t\t\t\t\t\tEOClassDescription nonModelClassDescription = ERXRestClassDescriptionFactory.classDescriptionForClass(obj.getClass(), true);\n\t\t\t\t\t\tif (!nonModelClassDescription.toManyRelationshipKeys().containsObject(keyName)) {\n\t\t\t\t\t\t\tthrow new IllegalArgumentException(\"There is no to-one relationship named '\" + key.key() + \"' on '\" + classDescription.entityName() + \"'.\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdestinationClassDescription = nonModelClassDescription.classDescriptionForDestinationKey(keyName);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tdestinationClassDescription = classDescription.classDescriptionForDestinationKey(keyName);\n\t\t\t\t\t}\n\t\t\t\t\tboolean lockedRelationship = keyFilter.lockedRelationship(key);\n\n\t\t\t\t\tif (childNode.isArray()) {\n\t\t\t\t\t\tthrow new IllegalArgumentException(\"You attempted to pass an array of values for the key '\" + key + \"'.\");\n\t\t\t\t\t}\n\n\t\t\t\t\tif (childNode.isNull()) {\n\t\t\t\t\t\tObject previousChildObj = NSKeyValueCoding.DefaultImplementation.valueForKey(obj, keyName);\n\t\t\t\t\t\tif (previousChildObj != null && !lockedRelationship) {\n\t\t\t\t\t\t\t_safeWillTakeValueForKey(keyFilter, obj, null, keyName);\n\t\t\t\t\t\t\tif (obj instanceof EOEnterpriseObject && previousChildObj instanceof EOEnterpriseObject) {\n\t\t\t\t\t\t\t\t((EOEnterpriseObject) obj).removeObjectFromBothSidesOfRelationshipWithKey((EOEnterpriseObject) previousChildObj, keyName);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tkey.takeValueInObject(null, obj);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t_safeDidTakeValueForKey(keyFilter, obj, null, keyName);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (lockedRelationship) {\n\t\t\t\t\t\t\t_safeDidSkipValueForKey(keyFilter, obj, null, keyName);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tObject id = childNode.id();\n\n\t\t\t\t\t\tERXKeyFilter childKeyFilter = keyFilter._filterForKey(key);\n\t\t\t\t\t\tObject childObj;\n\t\t\t\t\t\tif (id == null) {\n\t\t\t\t\t\t\tif (lockedRelationship) {\n\t\t\t\t\t\t\t\tchildObj = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (childKeyFilter.isAnonymousUpdateEnabled()) {\n\t\t\t\t\t\t\t\tchildObj = NSKeyValueCoding.DefaultImplementation.valueForKey(obj, keyName);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tchildObj = delegate.createObjectOfEntityWithID(destinationClassDescription, null);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (\"_\".equals(id)) {\n\t\t\t\t\t\t\tchildObj = NSKeyValueCoding.DefaultImplementation.valueForKey(obj, keyName);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tchildObj = delegate.objectOfEntityWithID(destinationClassDescription, id);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tboolean updateChildObj;\n\t\t\t\t\t\tif (childObj == null) {\n\t\t\t\t\t\t\tupdateChildObj = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (lockedRelationship) {\n\t\t\t\t\t\t\tObject previousChildObj = NSKeyValueCoding.DefaultImplementation.valueForKey(obj, keyName);\n\t\t\t\t\t\t\tupdateChildObj = previousChildObj != null && previousChildObj.equals(childObj);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tupdateChildObj = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (updateChildObj) {\n\t\t\t\t\t\t\tchildNode.updateObjectWithFilter(childObj, childKeyFilter, delegate);\n\t\t\t\t\t\t\tif (!lockedRelationship) {\n\t\t\t\t\t\t\t\t_safeWillTakeValueForKey(keyFilter, obj, childObj, keyName);\n\t\t\t\t\t\t\t\tif (obj instanceof EOEnterpriseObject && childObj instanceof EOEnterpriseObject) {\n\t\t\t\t\t\t\t\t\t((EOEnterpriseObject) obj).addObjectToBothSidesOfRelationshipWithKey((EOEnterpriseObject) childObj, keyName);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tkey.takeValueInObject(childObj, obj);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t_safeDidTakeValueForKey(keyFilter, obj, childObj, keyName);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t_safeDidSkipValueForKey(keyFilter, obj, childObj, keyName);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (/* entity.attributeNamed(keyName) != null && */ERXRestUtils.isPrimitive(valueType) && keyFilter.matches(key, ERXKey.Type.Attribute)) {\n\t\t\t\t\tObject value = childNode.value();\n\t\t\t\t\tif (value instanceof String) {\n\t\t\t\t\t\tvalue = ERXRestUtils.coerceValueToAttributeType(value, null, obj, keyName);\n\t\t\t\t\t}\n\t\t\t\t\tif (value instanceof NSKeyValueCoding.Null) {\n\t\t\t\t\t\tvalue = null;\n\t\t\t\t\t}\n\t\t\t\t\t_safeWillTakeValueForKey(keyFilter, obj, value, keyName);\n\t\t\t\t\tkey.takeValueInObject(value, obj);\n\t\t\t\t\t_safeDidTakeValueForKey(keyFilter, obj, value, keyName);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// ignore key\n\t\t\t\t\t_safeDidSkipValueForKey(keyFilter, obj, childNode, keyName); // MS: what is the value here? i'm just\n\t\t\t\t\t// hanging in the node ...\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","commit_id":"c61e75010c595a4f7fa9d07d144489b49aa6dd4d","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n\t * Includes the given key in this filter.\n\t * \n\t * @param key the key to include\n\t * @param existingFilter the existing filter to use for this key\n\t * @return the next filter\n\t */\n\tpublic ERXKeyFilter include(ERXKey key, ERXKeyFilter existingFilter) {\n\t\tERXKeyFilter filter;\n\t\tString keyPath = key.key();\n\t\tint dotIndex = keyPath.indexOf('.');\n\t\tif (dotIndex == -1) {\n\t\t\tif (existingFilter != null) {\n\t\t\t\t_includes.put(key, existingFilter);\n\t\t\t\t_excludes.removeObject(key);\n\t\t\t\tfilter = existingFilter;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfilter = _includes.get(key);\n\t\t\t\tif (filter == null) {\n\t\t\t\t\tfilter = new ERXKeyFilter(_nextBase);\n\t\t\t\t\tfilter.setDelegate(_delegate);\n\t\t\t\t\tfilter.setNextBase(_nextBase);\n\t\t\t\t\tfilter.setDeduplicationEnabled(_deduplicationEnabled);\n\t\t\t\t\t_includes.put(key, filter);\n\t\t\t\t\t_excludes.removeObject(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tERXKeyFilter subFilter = include(new ERXKey(keyPath.substring(0, dotIndex)), null);\n\t\t\tfilter = subFilter.include(new ERXKey(keyPath.substring(dotIndex + 1)), existingFilter);\n\t\t}\n\t\treturn filter;\n\t}","id":13858,"modified_method":"/**\n\t * Includes the given key in this filter.\n\t * \n\t * @param key the key to include\n\t * @param existingFilter the existing filter to use for this key\n\t * @return the next filter\n\t */\n\tpublic ERXKeyFilter include(ERXKey key, ERXKeyFilter existingFilter) {\n\t\tERXKeyFilter filter;\n\t\tString keyPath = key.key();\n\t\tint dotIndex = keyPath.indexOf('.');\n\t\tif (dotIndex == -1) {\n\t\t\tif (existingFilter != null) {\n\t\t\t\t_includes.put(key, existingFilter);\n\t\t\t\t_excludes.removeObject(key);\n\t\t\t\tfilter = existingFilter;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfilter = _includes.get(key);\n\t\t\t\tif (filter == null) {\n\t\t\t\t\tfilter = new ERXKeyFilter(_nextBase);\n\t\t\t\t\tfilter.setDelegate(_delegate);\n\t\t\t\t\tfilter.setNextBase(_nextBase);\n\t\t\t\t\tfilter.setDeduplicationEnabled(_deduplicationEnabled);\n\t\t\t\t\tfilter.setAnonymousUpdateEnabled(_anonymousUpdateEnabled);\n\t\t\t\t\t_includes.put(key, filter);\n\t\t\t\t\t_excludes.removeObject(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tERXKeyFilter subFilter = include(new ERXKey(keyPath.substring(0, dotIndex)), null);\n\t\t\tfilter = subFilter.include(new ERXKey(keyPath.substring(dotIndex + 1)), existingFilter);\n\t\t}\n\t\treturn filter;\n\t}","commit_id":"1e80ec14f4a7fb3683a12480e75f3706cbe40e02","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n\t * Creates a new ERXKeyFilter.\n\t * \n\t * @param base the base rule to apply\n\t * @param nextBase the next base rule to apply\n\t */\n\tpublic ERXKeyFilter(ERXKeyFilter.Base base, ERXKeyFilter.Base nextBase) {\n\t\t_base = base;\n\t\t_nextBase = nextBase;\n\t\t_includes = new LinkedHashMap<ERXKey, ERXKeyFilter>();\n\t\t_excludes = new NSMutableSet<ERXKey>();\n\t\t_lockedRelationships = new NSMutableSet<ERXKey>();\n\t\t_map = new NSMutableDictionary<ERXKey, ERXKey>();\n\t\t_deduplicationEnabled = true;\n\t}","id":13859,"modified_method":"/**\n\t * Creates a new ERXKeyFilter.\n\t * \n\t * @param base the base rule to apply\n\t * @param nextBase the next base rule to apply\n\t */\n\tpublic ERXKeyFilter(ERXKeyFilter.Base base, ERXKeyFilter.Base nextBase) {\n\t\t_base = base;\n\t\t_nextBase = nextBase;\n\t\t_includes = new LinkedHashMap<ERXKey, ERXKeyFilter>();\n\t\t_excludes = new NSMutableSet<ERXKey>();\n\t\t_lockedRelationships = new NSMutableSet<ERXKey>();\n\t\t_map = new NSMutableDictionary<ERXKey, ERXKey>();\n\t\t_deduplicationEnabled = true;\n\t\t_anonymousUpdateEnabled = false;\n\t}","commit_id":"1e80ec14f4a7fb3683a12480e75f3706cbe40e02","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n\t * Returns the filter for the given key, or creates a \"nextBase\" filter\n\t * if there isn't one.  This should usually only be called when you \n\t * know exactly what you're doing, as this doesn't fully interpret \n\t * include/exclude rules.\n\t * \n\t * @param key the key to lookup\n\t * @return the key filter\n\t */\n\tpublic ERXKeyFilter _filterForKey(ERXKey key) {\n\t\tERXKeyFilter filter = _includes.get(key);\n\t\tif (filter == null) {\n\t\t\tfilter = new ERXKeyFilter(_nextBase);\n\t\t\tfilter.setDelegate(_delegate);\n\t\t\tfilter.setNextBase(_nextBase);\n\t\t\tfilter.setDeduplicationEnabled(_deduplicationEnabled);\n\t\t}\n\t\treturn filter;\n\t}","id":13860,"modified_method":"/**\n\t * Returns the filter for the given key, or creates a \"nextBase\" filter\n\t * if there isn't one.  This should usually only be called when you \n\t * know exactly what you're doing, as this doesn't fully interpret \n\t * include/exclude rules.\n\t * \n\t * @param key the key to lookup\n\t * @return the key filter\n\t */\n\tpublic ERXKeyFilter _filterForKey(ERXKey key) {\n\t\tERXKeyFilter filter = _includes.get(key);\n\t\tif (filter == null) {\n\t\t\tfilter = new ERXKeyFilter(_nextBase);\n\t\t\tfilter.setDelegate(_delegate);\n\t\t\tfilter.setNextBase(_nextBase);\n\t\t\tfilter.setDeduplicationEnabled(_deduplicationEnabled);\n\t\t\tfilter.setAnonymousUpdateEnabled(_anonymousUpdateEnabled);\n\t\t}\n\t\treturn filter;\n\t}","commit_id":"1e80ec14f4a7fb3683a12480e75f3706cbe40e02","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n\t * Updates the given object based on this request node.\n\t * \n\t * @param obj\n\t *            the object to update\n\t * @param keyFilter\n\t *            the filter to use to determine how to update\n\t * @param delegate\n\t *            the delegate\n\t */\n\tpublic void updateObjectWithFilter(Object obj, ERXKeyFilter keyFilter, IERXRestDelegate delegate) {\n\t\tif (obj == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tEOClassDescription classDescription = ERXRestClassDescriptionFactory.classDescriptionForObject(obj);\n\t\tfor (Map.Entry<String, Object> attribute : _attributes.entrySet()) {\n\t\t\tERXKey<Object> key = keyFilter.keyMap(new ERXKey<Object>(attribute.getKey()));\n\t\t\tString keyName = key.key();\n\t\t\tif (keyFilter.matches(key, ERXKey.Type.Attribute) && isClassProperty(classDescription, keyName)) {\n\t\t\t\tObject value = ERXRestUtils.coerceValueToAttributeType(attribute.getValue(), null, obj, keyName);\n\t\t\t\tif (value instanceof NSKeyValueCoding.Null) {\n\t\t\t\t\tvalue = null;\n\t\t\t\t}\n\t\t\t\t_safeWillTakeValueForKey(keyFilter, obj, value, keyName);\n\t\t\t\tkey.takeValueInObject(value, obj);\n\t\t\t\t_safeDidTakeValueForKey(keyFilter, obj, value, keyName);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_safeDidSkipValueForKey(keyFilter, obj, attribute.getValue(), keyName); // MS: we didn't coerce the\n\t\t\t\t// value .. i think that's ok\n\t\t\t}\n\t\t}\n\n\t\tfor (ERXRestRequestNode childNode : _children) {\n\t\t\tERXKey<Object> key = keyFilter.keyMap(new ERXKey<Object>(childNode.name()));\n\t\t\tString keyName = key.key();\n\t\t\tif (isClassProperty(classDescription, keyName)) {\n\t\t\t\tNSKeyValueCoding._KeyBinding binding = NSKeyValueCoding.DefaultImplementation._keyGetBindingForKey(obj, keyName);\n\t\t\t\tClass valueType = binding.valueType();\n\n\t\t\t\tif (List.class.isAssignableFrom(valueType) && keyFilter.matches(key, ERXKey.Type.ToManyRelationship)) {\n\t\t\t\t\tEOClassDescription destinationEntity;\n\t\t\t\t\t// this is sort of expensive, but we want to support non-eomodel to-many relationships on EO's, so\n\t\t\t\t\t// we fallback and lookup the class entity ...\n\t\t\t\t\tif (!classDescription.toManyRelationshipKeys().containsObject(keyName) && classDescription instanceof EOEntityClassDescription) {\n\t\t\t\t\t\tEOClassDescription nonModelClassDescription = ERXRestClassDescriptionFactory.classDescriptionForClass(obj.getClass(), true);\n\t\t\t\t\t\tif (!nonModelClassDescription.toManyRelationshipKeys().containsObject(keyName)) {\n\t\t\t\t\t\t\tthrow new IllegalArgumentException(\"There is no to-many relationship named '\" + key.key() + \"' on '\" + classDescription.entityName() + \"'.\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdestinationEntity = classDescription.classDescriptionForDestinationKey(keyName);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tdestinationEntity = classDescription.classDescriptionForDestinationKey(keyName);\n\t\t\t\t\t}\n\t\t\t\t\tboolean lockedRelationship = keyFilter.lockedRelationship(key);\n\n\t\t\t\t\t@SuppressWarnings(\"unchecked\")\n\t\t\t\t\tList<Object> existingValues = (List<Object>) NSKeyValueCoding.DefaultImplementation.valueForKey(obj, keyName);\n\n\t\t\t\t\tSet<Object> removedValues = new HashSet<Object>(existingValues);\n\t\t\t\t\tList<Object> newValues = new LinkedList<Object>();\n\t\t\t\t\tList<Object> allValues = new LinkedList<Object>();\n\t\t\t\t\tfor (ERXRestRequestNode toManyNode : childNode.children()) {\n\t\t\t\t\t\tObject id = toManyNode.id();\n\n\t\t\t\t\t\tObject childObj;\n\t\t\t\t\t\tif (id == null) {\n\t\t\t\t\t\t\tif (lockedRelationship) {\n\t\t\t\t\t\t\t\tchildObj = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tchildObj = delegate.createObjectOfEntityWithID(destinationEntity, null);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tchildObj = delegate.objectOfEntityWithID(destinationEntity, id);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (childObj != null) {\n\t\t\t\t\t\t\tboolean newMemberOfRelationship = !existingValues.contains(childObj);\n\t\t\t\t\t\t\tif (newMemberOfRelationship) {\n\t\t\t\t\t\t\t\tif (!lockedRelationship) {\n\t\t\t\t\t\t\t\t\ttoManyNode.updateObjectWithFilter(childObj, keyFilter._filterForKey(key), delegate);\n\t\t\t\t\t\t\t\t\tnewValues.add(childObj);\n\t\t\t\t\t\t\t\t\tallValues.add(childObj);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\ttoManyNode.updateObjectWithFilter(childObj, keyFilter._filterForKey(key), delegate);\n\t\t\t\t\t\t\t\tallValues.add(childObj);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tremovedValues.remove(childObj);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!lockedRelationship) {\n\t\t\t\t\t\t_safeWillTakeValueForKey(keyFilter, obj, allValues, keyName);\n\t\t\t\t\t\tif (obj instanceof EOEnterpriseObject) {\n\t\t\t\t\t\t\tfor (Object removedValue : removedValues) {\n\t\t\t\t\t\t\t\t((EOEnterpriseObject) obj).removeObjectFromBothSidesOfRelationshipWithKey((EOEnterpriseObject) removedValue, keyName);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfor (Object newValue : newValues) {\n\t\t\t\t\t\t\t\t((EOEnterpriseObject) obj).addObjectToBothSidesOfRelationshipWithKey((EOEnterpriseObject) newValue, keyName);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tkey.takeValueInObject(allValues, obj);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t_safeDidTakeValueForKey(keyFilter, obj, allValues, keyName);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t_safeDidSkipValueForKey(keyFilter, obj, allValues, keyName);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (!ERXRestUtils.isPrimitive(valueType) && keyFilter.matches(key, ERXKey.Type.ToOneRelationship)) {\n\t\t\t\t\tEOClassDescription destinationClassDescription;\n\t\t\t\t\t// this is sort of expensive, but we want to support non-eomodel to-one relationships on EO's, so\n\t\t\t\t\t// we fallback and lookup the class entity ...\n\t\t\t\t\tif (!classDescription.toOneRelationshipKeys().containsObject(keyName) && classDescription instanceof EOEntityClassDescription) {\n\t\t\t\t\t\tEOClassDescription nonModelClassDescription = ERXRestClassDescriptionFactory.classDescriptionForClass(obj.getClass(), true);\n\t\t\t\t\t\tif (!nonModelClassDescription.toManyRelationshipKeys().containsObject(keyName)) {\n\t\t\t\t\t\t\tthrow new IllegalArgumentException(\"There is no to-one relationship named '\" + key.key() + \"' on '\" + classDescription.entityName() + \"'.\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdestinationClassDescription = nonModelClassDescription.classDescriptionForDestinationKey(keyName);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tdestinationClassDescription = classDescription.classDescriptionForDestinationKey(keyName);\n\t\t\t\t\t}\n\t\t\t\t\tboolean lockedRelationship = keyFilter.lockedRelationship(key);\n\n\t\t\t\t\tif (childNode.isArray()) {\n\t\t\t\t\t\tthrow new IllegalArgumentException(\"You attempted to pass an array of values for the key '\" + key + \"'.\");\n\t\t\t\t\t}\n\n\t\t\t\t\tif (childNode.isNull()) {\n\t\t\t\t\t\tObject previousChildObj = NSKeyValueCoding.DefaultImplementation.valueForKey(obj, keyName);\n\t\t\t\t\t\tif (previousChildObj != null && !lockedRelationship) {\n\t\t\t\t\t\t\t_safeWillTakeValueForKey(keyFilter, obj, null, keyName);\n\t\t\t\t\t\t\tif (obj instanceof EOEnterpriseObject && previousChildObj instanceof EOEnterpriseObject) {\n\t\t\t\t\t\t\t\t((EOEnterpriseObject) obj).removeObjectFromBothSidesOfRelationshipWithKey((EOEnterpriseObject) previousChildObj, keyName);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tkey.takeValueInObject(null, obj);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t_safeDidTakeValueForKey(keyFilter, obj, null, keyName);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (lockedRelationship) {\n\t\t\t\t\t\t\t_safeDidSkipValueForKey(keyFilter, obj, null, keyName);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tObject id = childNode.id();\n\n\t\t\t\t\t\tObject childObj;\n\t\t\t\t\t\tif (id == null) {\n\t\t\t\t\t\t\tif (lockedRelationship) {\n\t\t\t\t\t\t\t\tchildObj = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tchildObj = delegate.createObjectOfEntityWithID(destinationClassDescription, null);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tchildObj = delegate.objectOfEntityWithID(destinationClassDescription, id);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tboolean updateChildObj;\n\t\t\t\t\t\tif (childObj == null) {\n\t\t\t\t\t\t\tupdateChildObj = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (lockedRelationship) {\n\t\t\t\t\t\t\tObject previousChildObj = NSKeyValueCoding.DefaultImplementation.valueForKey(obj, keyName);\n\t\t\t\t\t\t\tupdateChildObj = previousChildObj != null && previousChildObj.equals(childObj);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tupdateChildObj = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (updateChildObj) {\n\t\t\t\t\t\t\tchildNode.updateObjectWithFilter(childObj, keyFilter._filterForKey(key), delegate);\n\t\t\t\t\t\t\tif (!lockedRelationship) {\n\t\t\t\t\t\t\t\t_safeWillTakeValueForKey(keyFilter, obj, childObj, keyName);\n\t\t\t\t\t\t\t\tif (obj instanceof EOEnterpriseObject && childObj instanceof EOEnterpriseObject) {\n\t\t\t\t\t\t\t\t\t((EOEnterpriseObject) obj).addObjectToBothSidesOfRelationshipWithKey((EOEnterpriseObject) childObj, keyName);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tkey.takeValueInObject(childObj, obj);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t_safeDidTakeValueForKey(keyFilter, obj, childObj, keyName);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t_safeDidSkipValueForKey(keyFilter, obj, childObj, keyName);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (/* entity.attributeNamed(keyName) != null && */ERXRestUtils.isPrimitive(valueType) && keyFilter.matches(key, ERXKey.Type.Attribute)) {\n\t\t\t\t\tObject value = childNode.value();\n\t\t\t\t\tif (value instanceof String) {\n\t\t\t\t\t\tvalue = ERXRestUtils.coerceValueToAttributeType(value, null, obj, keyName);\n\t\t\t\t\t}\n\t\t\t\t\tif (value instanceof NSKeyValueCoding.Null) {\n\t\t\t\t\t\tvalue = null;\n\t\t\t\t\t}\n\t\t\t\t\t_safeWillTakeValueForKey(keyFilter, obj, value, keyName);\n\t\t\t\t\tkey.takeValueInObject(value, obj);\n\t\t\t\t\t_safeDidTakeValueForKey(keyFilter, obj, value, keyName);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// ignore key\n\t\t\t\t\t_safeDidSkipValueForKey(keyFilter, obj, childNode, keyName); // MS: what is the value here? i'm just\n\t\t\t\t\t// hanging in the node ...\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","id":13861,"modified_method":"/**\n\t * Updates the given object based on this request node.\n\t * \n\t * @param obj\n\t *            the object to update\n\t * @param keyFilter\n\t *            the filter to use to determine how to update\n\t * @param delegate\n\t *            the delegate\n\t */\n\tpublic void updateObjectWithFilter(Object obj, ERXKeyFilter keyFilter, IERXRestDelegate delegate) {\n\t\tif (obj == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tEOClassDescription classDescription = ERXRestClassDescriptionFactory.classDescriptionForObject(obj);\n\t\tfor (Map.Entry<String, Object> attribute : _attributes.entrySet()) {\n\t\t\tERXKey<Object> key = keyFilter.keyMap(new ERXKey<Object>(attribute.getKey()));\n\t\t\tString keyName = key.key();\n\t\t\tif (keyFilter.matches(key, ERXKey.Type.Attribute) && isClassProperty(classDescription, keyName)) {\n\t\t\t\tObject value = ERXRestUtils.coerceValueToAttributeType(attribute.getValue(), null, obj, keyName);\n\t\t\t\tif (value instanceof NSKeyValueCoding.Null) {\n\t\t\t\t\tvalue = null;\n\t\t\t\t}\n\t\t\t\t_safeWillTakeValueForKey(keyFilter, obj, value, keyName);\n\t\t\t\tkey.takeValueInObject(value, obj);\n\t\t\t\t_safeDidTakeValueForKey(keyFilter, obj, value, keyName);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_safeDidSkipValueForKey(keyFilter, obj, attribute.getValue(), keyName); // MS: we didn't coerce the\n\t\t\t\t// value .. i think that's ok\n\t\t\t}\n\t\t}\n\n\t\tfor (ERXRestRequestNode childNode : _children) {\n\t\t\tERXKey<Object> key = keyFilter.keyMap(new ERXKey<Object>(childNode.name()));\n\t\t\tString keyName = key.key();\n\t\t\tif (isClassProperty(classDescription, keyName)) {\n\t\t\t\tNSKeyValueCoding._KeyBinding binding = NSKeyValueCoding.DefaultImplementation._keyGetBindingForKey(obj, keyName);\n\t\t\t\tClass valueType = binding.valueType();\n\n\t\t\t\tif (List.class.isAssignableFrom(valueType) && keyFilter.matches(key, ERXKey.Type.ToManyRelationship)) {\n\t\t\t\t\tEOClassDescription destinationEntity;\n\t\t\t\t\t// this is sort of expensive, but we want to support non-eomodel to-many relationships on EO's, so\n\t\t\t\t\t// we fallback and lookup the class entity ...\n\t\t\t\t\tif (!classDescription.toManyRelationshipKeys().containsObject(keyName) && classDescription instanceof EOEntityClassDescription) {\n\t\t\t\t\t\tEOClassDescription nonModelClassDescription = ERXRestClassDescriptionFactory.classDescriptionForClass(obj.getClass(), true);\n\t\t\t\t\t\tif (!nonModelClassDescription.toManyRelationshipKeys().containsObject(keyName)) {\n\t\t\t\t\t\t\tthrow new IllegalArgumentException(\"There is no to-many relationship named '\" + key.key() + \"' on '\" + classDescription.entityName() + \"'.\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdestinationEntity = classDescription.classDescriptionForDestinationKey(keyName);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tdestinationEntity = classDescription.classDescriptionForDestinationKey(keyName);\n\t\t\t\t\t}\n\t\t\t\t\tboolean lockedRelationship = keyFilter.lockedRelationship(key);\n\n\t\t\t\t\t@SuppressWarnings(\"unchecked\")\n\t\t\t\t\tList<Object> existingValues = (List<Object>) NSKeyValueCoding.DefaultImplementation.valueForKey(obj, keyName);\n\n\t\t\t\t\tSet<Object> removedValues = new HashSet<Object>(existingValues);\n\t\t\t\t\tList<Object> newValues = new LinkedList<Object>();\n\t\t\t\t\tList<Object> allValues = new LinkedList<Object>();\n\t\t\t\t\tfor (ERXRestRequestNode toManyNode : childNode.children()) {\n\t\t\t\t\t\tObject id = toManyNode.id();\n\n\t\t\t\t\t\tObject childObj;\n\t\t\t\t\t\tif (id == null) {\n\t\t\t\t\t\t\tif (lockedRelationship) {\n\t\t\t\t\t\t\t\tchildObj = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tchildObj = delegate.createObjectOfEntityWithID(destinationEntity, null);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tchildObj = delegate.objectOfEntityWithID(destinationEntity, id);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (childObj != null) {\n\t\t\t\t\t\t\tboolean newMemberOfRelationship = !existingValues.contains(childObj);\n\t\t\t\t\t\t\tif (newMemberOfRelationship) {\n\t\t\t\t\t\t\t\tif (!lockedRelationship) {\n\t\t\t\t\t\t\t\t\ttoManyNode.updateObjectWithFilter(childObj, keyFilter._filterForKey(key), delegate);\n\t\t\t\t\t\t\t\t\tnewValues.add(childObj);\n\t\t\t\t\t\t\t\t\tallValues.add(childObj);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\ttoManyNode.updateObjectWithFilter(childObj, keyFilter._filterForKey(key), delegate);\n\t\t\t\t\t\t\t\tallValues.add(childObj);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tremovedValues.remove(childObj);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!lockedRelationship) {\n\t\t\t\t\t\t_safeWillTakeValueForKey(keyFilter, obj, allValues, keyName);\n\t\t\t\t\t\tif (obj instanceof EOEnterpriseObject) {\n\t\t\t\t\t\t\tfor (Object removedValue : removedValues) {\n\t\t\t\t\t\t\t\t((EOEnterpriseObject) obj).removeObjectFromBothSidesOfRelationshipWithKey((EOEnterpriseObject) removedValue, keyName);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfor (Object newValue : newValues) {\n\t\t\t\t\t\t\t\t((EOEnterpriseObject) obj).addObjectToBothSidesOfRelationshipWithKey((EOEnterpriseObject) newValue, keyName);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tkey.takeValueInObject(allValues, obj);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t_safeDidTakeValueForKey(keyFilter, obj, allValues, keyName);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t_safeDidSkipValueForKey(keyFilter, obj, allValues, keyName);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (!ERXRestUtils.isPrimitive(valueType) && keyFilter.matches(key, ERXKey.Type.ToOneRelationship)) {\n\t\t\t\t\tEOClassDescription destinationClassDescription;\n\t\t\t\t\t// this is sort of expensive, but we want to support non-eomodel to-one relationships on EO's, so\n\t\t\t\t\t// we fallback and lookup the class entity ...\n\t\t\t\t\tif (!classDescription.toOneRelationshipKeys().containsObject(keyName) && classDescription instanceof EOEntityClassDescription) {\n\t\t\t\t\t\tEOClassDescription nonModelClassDescription = ERXRestClassDescriptionFactory.classDescriptionForClass(obj.getClass(), true);\n\t\t\t\t\t\tif (!nonModelClassDescription.toManyRelationshipKeys().containsObject(keyName)) {\n\t\t\t\t\t\t\tthrow new IllegalArgumentException(\"There is no to-one relationship named '\" + key.key() + \"' on '\" + classDescription.entityName() + \"'.\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdestinationClassDescription = nonModelClassDescription.classDescriptionForDestinationKey(keyName);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tdestinationClassDescription = classDescription.classDescriptionForDestinationKey(keyName);\n\t\t\t\t\t}\n\t\t\t\t\tboolean lockedRelationship = keyFilter.lockedRelationship(key);\n\n\t\t\t\t\tif (childNode.isArray()) {\n\t\t\t\t\t\tthrow new IllegalArgumentException(\"You attempted to pass an array of values for the key '\" + key + \"'.\");\n\t\t\t\t\t}\n\n\t\t\t\t\tif (childNode.isNull()) {\n\t\t\t\t\t\tObject previousChildObj = NSKeyValueCoding.DefaultImplementation.valueForKey(obj, keyName);\n\t\t\t\t\t\tif (previousChildObj != null && !lockedRelationship) {\n\t\t\t\t\t\t\t_safeWillTakeValueForKey(keyFilter, obj, null, keyName);\n\t\t\t\t\t\t\tif (obj instanceof EOEnterpriseObject && previousChildObj instanceof EOEnterpriseObject) {\n\t\t\t\t\t\t\t\t((EOEnterpriseObject) obj).removeObjectFromBothSidesOfRelationshipWithKey((EOEnterpriseObject) previousChildObj, keyName);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tkey.takeValueInObject(null, obj);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t_safeDidTakeValueForKey(keyFilter, obj, null, keyName);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (lockedRelationship) {\n\t\t\t\t\t\t\t_safeDidSkipValueForKey(keyFilter, obj, null, keyName);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tObject id = childNode.id();\n\n\t\t\t\t\t\tERXKeyFilter childKeyFilter = keyFilter._filterForKey(key);\n\t\t\t\t\t\tObject childObj;\n\t\t\t\t\t\tif (id == null) {\n\t\t\t\t\t\t\tif (lockedRelationship) {\n\t\t\t\t\t\t\t\tchildObj = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (childKeyFilter.isAnonymousUpdateEnabled()) {\n\t\t\t\t\t\t\t\tchildObj = NSKeyValueCoding.DefaultImplementation.valueForKey(obj, keyName);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tchildObj = delegate.createObjectOfEntityWithID(destinationClassDescription, null);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (\"_\".equals(id)) {\n\t\t\t\t\t\t\tchildObj = NSKeyValueCoding.DefaultImplementation.valueForKey(obj, keyName);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tchildObj = delegate.objectOfEntityWithID(destinationClassDescription, id);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tboolean updateChildObj;\n\t\t\t\t\t\tif (childObj == null) {\n\t\t\t\t\t\t\tupdateChildObj = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (lockedRelationship) {\n\t\t\t\t\t\t\tObject previousChildObj = NSKeyValueCoding.DefaultImplementation.valueForKey(obj, keyName);\n\t\t\t\t\t\t\tupdateChildObj = previousChildObj != null && previousChildObj.equals(childObj);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tupdateChildObj = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (updateChildObj) {\n\t\t\t\t\t\t\tchildNode.updateObjectWithFilter(childObj, childKeyFilter, delegate);\n\t\t\t\t\t\t\tif (!lockedRelationship) {\n\t\t\t\t\t\t\t\t_safeWillTakeValueForKey(keyFilter, obj, childObj, keyName);\n\t\t\t\t\t\t\t\tif (obj instanceof EOEnterpriseObject && childObj instanceof EOEnterpriseObject) {\n\t\t\t\t\t\t\t\t\t((EOEnterpriseObject) obj).addObjectToBothSidesOfRelationshipWithKey((EOEnterpriseObject) childObj, keyName);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tkey.takeValueInObject(childObj, obj);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t_safeDidTakeValueForKey(keyFilter, obj, childObj, keyName);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t_safeDidSkipValueForKey(keyFilter, obj, childObj, keyName);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (/* entity.attributeNamed(keyName) != null && */ERXRestUtils.isPrimitive(valueType) && keyFilter.matches(key, ERXKey.Type.Attribute)) {\n\t\t\t\t\tObject value = childNode.value();\n\t\t\t\t\tif (value instanceof String) {\n\t\t\t\t\t\tvalue = ERXRestUtils.coerceValueToAttributeType(value, null, obj, keyName);\n\t\t\t\t\t}\n\t\t\t\t\tif (value instanceof NSKeyValueCoding.Null) {\n\t\t\t\t\t\tvalue = null;\n\t\t\t\t\t}\n\t\t\t\t\t_safeWillTakeValueForKey(keyFilter, obj, value, keyName);\n\t\t\t\t\tkey.takeValueInObject(value, obj);\n\t\t\t\t\t_safeDidTakeValueForKey(keyFilter, obj, value, keyName);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// ignore key\n\t\t\t\t\t_safeDidSkipValueForKey(keyFilter, obj, childNode, keyName); // MS: what is the value here? i'm just\n\t\t\t\t\t// hanging in the node ...\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","commit_id":"1e80ec14f4a7fb3683a12480e75f3706cbe40e02","url":"https://github.com/wocommunity/wonder"},{"original_method":"/**\n\t * Load values of relevance to a key manager. Most importantly, loads default\n\t * key locator information\n\t * @return true if successful, false on error\n\t * @throws ConfigurationException\n\t */\n\tprotected boolean loadValuesFromConfiguration(KeyStoreInfo keyStoreInfo) throws ConfigurationException {\n\t\t// Load key locator information. Might be in two places -- system property/environment variable,\n\t\t// or configuration file. Start with just system property, first round just specify\n\t\t// name, not publisher.\n\t\t// Starting step -- read a key name (no publisher) key locator just for our default\n\t\t// key from an environment variable/system property.\n\t\tString defaultKeyLocatorName = UserConfiguration.defaultKeyLocator();\n\t\t// Doesn't even support publisher specifications yet.\n\t\tif (null != defaultKeyLocatorName) {\n\t\t\ttry {\n\t\t\t\tContentName locatorName = ContentName.fromNative(defaultKeyLocatorName);\n\t\t\t\tsetKeyLocator(getDefaultKeyID(), new KeyLocator(locatorName));\n\t\t\t} catch (MalformedContentNameStringException e) {\n\t\t\t\tgenerateConfigurationException(\"Cannot parse key locator name {0}!\", e);\n\t\t\t}\n\t\t}\n\n\t\t// TODO fill in the rest\n\t\t// Load values from our configuration file, which should be read in UserConfiguration.\n\t\t\n\t\t// Currently have saved data override command line, which might be bad...\n\t\t// also use that to preconfigure things like keystores and such\n\t\t// for right now, just as a super-fast trick, use java serialization to get out minmal data necessary\n\t\tif ((null == _keyStoreDirectory) || (null == _configurationFileName))  {\n\t\t\tif (Log.isLoggable(Level.INFO)) {\n\t\t\t\tLog.info(\"loadValuesFromConfiguration: No configuration directory/file set, not loading.\");\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\tFile configurationFile = new File(_keyStoreDirectory, _configurationFileName);\n\t\tif (Log.isLoggable(Level.INFO)) {\n\t\t\tLog.info(\"loadValuesFromConfiguration: attempting to load configuration from {0}\", configurationFile.getAbsolutePath());\n\t\t}\n\t\tif (configurationFile.exists()) {\n\t\t\ttry {\n\t\t\t\tObjectInputStream input = new ObjectInputStream(new FileInputStream(configurationFile));\n\t\t\t\t\n\t\t\t\tHashMap<PublisherPublicKeyDigest, KeyLocator> savedKeyLocators = readObject(input);\n\t\t\t\t_currentKeyLocators.putAll(savedKeyLocators);\n\t\t\t\t\n\t\t\t\tkeyStoreInfo.setConfigurationFileURI(configurationFile.toURI().toString());\n\t\t\t\t\n\t\t\t\tif (Log.isLoggable(Level.INFO)) {\n\t\t\t\t\tLog.info(\"Loaded configuration data from file {0}, got {1} key locator values.\", \n\t\t\t\t\t\t\tconfigurationFile.getAbsolutePath(), savedKeyLocators.size());\n\t\t\t\t}\n\n\t\t\t} catch (FileNotFoundException e) {\n\t\t\t\tthrow new ConfigurationException(\"Cannot read configuration file even though it claims to exist: \" + configurationFile.getAbsolutePath(), e);\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new ConfigurationException(\"I/O error reading configuration file: \" + configurationFile.getAbsolutePath(), e);\n\t\t\t} catch (ClassNotFoundException e) {\n\t\t\t\tthrow new ConfigurationException(\"ClassNotFoundException deserializing configuration file: \" + configurationFile.getAbsolutePath(), e);\n\t\t\t}\n\t\t} else {\n\t\t\tif (Log.isLoggable(Level.INFO)) {\n\t\t\t\tLog.info(\"loadValuesFromConfiguration: configuration file {0} does not exist.\", configurationFile.getAbsolutePath());\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn true;\n\t}","id":13862,"modified_method":"/**\n\t * Load values of relevance to a key manager. Most importantly, loads default\n\t * key locator information\n\t * @return true if successful, false on error\n\t * @throws ConfigurationException\n\t */\n\tprotected boolean loadValuesFromConfiguration(KeyStoreInfo keyStoreInfo) throws ConfigurationException {\n\t\t// Load key locator information. Might be in two places -- system property/environment variable,\n\t\t// or configuration file. Start with just system property, first round just specify\n\t\t// name, not publisher.\n\t\t// Starting step -- read a key name (no publisher) key locator just for our default\n\t\t// key from an environment variable/system property.\n\t\tString defaultKeyLocatorName = UserConfiguration.defaultKeyLocator();\n\t\t// Doesn't even support publisher specifications yet.\n\t\tif (null != defaultKeyLocatorName) {\n\t\t\ttry {\n\t\t\t\tContentName locatorName = ContentName.fromNative(defaultKeyLocatorName);\n\t\t\t\tsetKeyLocator(getDefaultKeyID(), new KeyLocator(locatorName));\n\t\t\t} catch (MalformedContentNameStringException e) {\n\t\t\t\tgenerateConfigurationException(\"Cannot parse key locator name {0}!\", e);\n\t\t\t}\n\t\t}\n\n\t\t// TODO fill in the rest\n\t\t// Load values from our configuration file, which should be read in UserConfiguration.\n\t\t\n\t\t// Currently have saved data override command line, which might be bad...\n\t\t// also use that to preconfigure things like keystores and such\n\t\t// for right now, just as a super-fast trick, use java serialization to get out minmal data necessary\n\t\tif ((null == _keyStoreDirectory) || (null == _configurationFileName))  {\n\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.INFO)) {\n\t\t\t\tLog.info(Log.FAC_KEYS, \"loadValuesFromConfiguration: No configuration directory/file set, not loading.\");\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\tFile configurationFile = new File(_keyStoreDirectory, _configurationFileName);\n\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.INFO)) {\n\t\t\tLog.info(Log.FAC_KEYS, \"loadValuesFromConfiguration: attempting to load configuration from {0}\", configurationFile.getAbsolutePath());\n\t\t}\n\t\tif (configurationFile.exists()) {\n\t\t\ttry {\n\t\t\t\tObjectInputStream input = new ObjectInputStream(new FileInputStream(configurationFile));\n\t\t\t\t\n\t\t\t\tHashMap<PublisherPublicKeyDigest, KeyLocator> savedKeyLocators = readObject(input);\n\t\t\t\t_currentKeyLocators.putAll(savedKeyLocators);\n\t\t\t\t\n\t\t\t\tkeyStoreInfo.setConfigurationFileURI(configurationFile.toURI().toString());\n\t\t\t\t\n\t\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.INFO)) {\n\t\t\t\t\tLog.info(Log.FAC_KEYS, \"Loaded configuration data from file {0}, got {1} key locator values.\", \n\t\t\t\t\t\t\tconfigurationFile.getAbsolutePath(), savedKeyLocators.size());\n\t\t\t\t}\n\n\t\t\t} catch (FileNotFoundException e) {\n\t\t\t\tthrow new ConfigurationException(\"Cannot read configuration file even though it claims to exist: \" + configurationFile.getAbsolutePath(), e);\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new ConfigurationException(\"I/O error reading configuration file: \" + configurationFile.getAbsolutePath(), e);\n\t\t\t} catch (ClassNotFoundException e) {\n\t\t\t\tthrow new ConfigurationException(\"ClassNotFoundException deserializing configuration file: \" + configurationFile.getAbsolutePath(), e);\n\t\t\t}\n\t\t} else {\n\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.INFO)) {\n\t\t\t\tLog.info(Log.FAC_KEYS, \"loadValuesFromConfiguration: configuration file {0} does not exist.\", configurationFile.getAbsolutePath());\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn true;\n\t}","commit_id":"94eaf6df75f20f79aba9b158c86d76d9f047bddd","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"/**\n\t * Get public key for a publisher, given a key locator.\n\t * Times out after timeout amount of time elapsed \n\t * @param publisherID publisher public key digest\n\t * @param keyLocator key locator\n\t * @param timeout timeout value\n\t * @return public key\n\t */\n\t@Override\n\tpublic PublicKey getPublicKey(\n\t\t\tPublisherPublicKeyDigest desiredKeyID, KeyLocator keyLocator, \n\t\t\tlong timeout) throws IOException {\t\t\n\t\t\n\t\tif (Log.isLoggable(Level.FINER))\n\t\t\tLog.finer(\"getPublicKey: retrieving key: \" + desiredKeyID + \" located at: \" + keyLocator);\n\t\t// this will try local caches, the locator itself, and if it \n\t\t// has to, will go to the network. The result will be stored in the cache.\n\t\t// All this tells us is that the key matches the publisher. For whether\n\t\t// or not we should trust it for some reason, we have to get fancy.\n\t\treturn getPublicKeyCache().getPublicKey(desiredKeyID, keyLocator, timeout, handle());\n\t}","id":13863,"modified_method":"/**\n\t * Get public key for a publisher, given a key locator.\n\t * Times out after timeout amount of time elapsed \n\t * @param publisherID publisher public key digest\n\t * @param keyLocator key locator\n\t * @param timeout timeout value\n\t * @return public key\n\t */\n\t@Override\n\tpublic PublicKey getPublicKey(\n\t\t\tPublisherPublicKeyDigest desiredKeyID, KeyLocator keyLocator, \n\t\t\tlong timeout) throws IOException {\t\t\n\t\t\n\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.FINER))\n\t\t\tLog.finer(Log.FAC_KEYS, \"getPublicKey: retrieving key: \" + desiredKeyID + \" located at: \" + keyLocator);\n\t\t// this will try local caches, the locator itself, and if it \n\t\t// has to, will go to the network. The result will be stored in the cache.\n\t\t// All this tells us is that the key matches the publisher. For whether\n\t\t// or not we should trust it for some reason, we have to get fancy.\n\t\treturn getPublicKeyCache().getPublicKey(desiredKeyID, keyLocator, timeout, handle());\n\t}","commit_id":"94eaf6df75f20f79aba9b158c86d76d9f047bddd","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"/**\n\t * Read data from a newly opened, or newly created keystore.\n\t * @param keyStore\n\t * @throws ConfigurationException \n\t */\n\tprotected boolean loadValuesFromKeystore(KeyStoreInfo keyStoreInfo) throws ConfigurationException {\n\t\tKeyStore.PrivateKeyEntry entry = null;\n\t\ttry {\n\t\t\tif (Log.isLoggable(Level.INFO))\n\t\t\t\tLog.info(\"Loading key store {0} version {1} version component {2} millis {3}\", keyStoreInfo.getKeyStoreURI(), keyStoreInfo.getVersion().toString(), \n\t\t\t\t\t\tVersioningProfile.printAsVersionComponent(keyStoreInfo.getVersion()), keyStoreInfo.getVersion().getTime());\n\t\t\t// Default alias should be a PrivateKeyEntry\n\t\t\tentry = (KeyStore.PrivateKeyEntry)keyStoreInfo.getKeyStore().getEntry(_defaultAlias, new KeyStore.PasswordProtection(_password));\n\t\t\tif (null == entry) {\n\t\t\t\tLog.warning(\"Cannot get default key entry: \" + _defaultAlias);\n\t\t\t\tgenerateConfigurationException(\"Cannot retrieve default user keystore entry.\", null);\n\t\t\t}\n\t\t    X509Certificate certificate = (X509Certificate)entry.getCertificate();\n\t\t    if (null == certificate) {\n\t\t\t\tLog.warning(\"Cannot get certificate for default key entry: \" + _defaultAlias);\n\t\t\t\tgenerateConfigurationException(\"Cannot retrieve certificate for default user keystore entry.\", null);\t\t    \t\n\t\t    }\n\t\t    _defaultKeyID = new PublisherPublicKeyDigest(certificate.getPublicKey());\n\t\t\tif (Log.isLoggable(Level.INFO))\n\t\t\t\tLog.info(\"Default key ID for user \" + _userName + \": \" + _defaultKeyID);\n\t\t\t\n\t\t\t_privateKeyCache.loadKeyStore(keyStoreInfo, _password, _publicKeyCache);\n\n\t\t} catch (Exception e) {\n\t\t\tgenerateConfigurationException(\"Cannot retrieve default user keystore entry.\", e);\n\t\t}    \n\t\treturn true;\n\t}","id":13864,"modified_method":"/**\n\t * Read data from a newly opened, or newly created keystore.\n\t * @param keyStore\n\t * @throws ConfigurationException \n\t */\n\tprotected boolean loadValuesFromKeystore(KeyStoreInfo keyStoreInfo) throws ConfigurationException {\n\t\tKeyStore.PrivateKeyEntry entry = null;\n\t\ttry {\n\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.INFO))\n\t\t\t\tLog.info(Log.FAC_KEYS, \"Loading key store {0} version {1} version component {2} millis {3}\", keyStoreInfo.getKeyStoreURI(), keyStoreInfo.getVersion().toString(), \n\t\t\t\t\t\tVersioningProfile.printAsVersionComponent(keyStoreInfo.getVersion()), keyStoreInfo.getVersion().getTime());\n\t\t\t// Default alias should be a PrivateKeyEntry\n\t\t\tentry = (KeyStore.PrivateKeyEntry)keyStoreInfo.getKeyStore().getEntry(_defaultAlias, new KeyStore.PasswordProtection(_password));\n\t\t\tif (null == entry) {\n\t\t\t\tLog.warning(\"Cannot get default key entry: \" + _defaultAlias);\n\t\t\t\tgenerateConfigurationException(\"Cannot retrieve default user keystore entry.\", null);\n\t\t\t}\n\t\t    X509Certificate certificate = (X509Certificate)entry.getCertificate();\n\t\t    if (null == certificate) {\n\t\t\t\tLog.warning(\"Cannot get certificate for default key entry: \" + _defaultAlias);\n\t\t\t\tgenerateConfigurationException(\"Cannot retrieve certificate for default user keystore entry.\", null);\t\t    \t\n\t\t    }\n\t\t    _defaultKeyID = new PublisherPublicKeyDigest(certificate.getPublicKey());\n\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.INFO))\n\t\t\t\tLog.info(Log.FAC_KEYS, \"Default key ID for user \" + _userName + \": \" + _defaultKeyID);\n\t\t\t\n\t\t\t_privateKeyCache.loadKeyStore(keyStoreInfo, _password, _publicKeyCache);\n\n\t\t} catch (Exception e) {\n\t\t\tgenerateConfigurationException(\"Cannot retrieve default user keystore entry.\", e);\n\t\t}    \n\t\treturn true;\n\t}","commit_id":"94eaf6df75f20f79aba9b158c86d76d9f047bddd","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"/**\n\t * Creates a key store file\n\t * @throws ConfigurationException\n\t */\n\tprotected Tuple<KeyStoreInfo, OutputStream> createKeyStoreWriteStream() throws ConfigurationException, IOException {\n\t\t\n\t\tFile keyStoreDir = new File(_keyStoreDirectory);\n\t\tif (!keyStoreDir.exists()) {\n\t\t\tif (!keyStoreDir.mkdirs()) {\n\t\t\t\tthrow new ConfigurationException(\"Cannot create keystore directory: \" + keyStoreDir.getAbsolutePath(), null);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Alas, until 1.6, we can't set permissions on the file or directory...\n\t\t// TODO DKS when switch to 1.6, add permission settings.\n\t\tFile keyStoreFile  = new File(keyStoreDir, _keyStoreFileName);\n\t\tif (keyStoreFile.exists()) {\n\t\t\tLog.warning(\"Key store file {0} already exists (length {1}), overrwriting.\", keyStoreFile.getAbsolutePath(), keyStoreFile.length());\n\t\t}\n\n\t    FileOutputStream out = null;\n\t\ttry {\n\t\t\tif (Log.isLoggable(Level.FINEST))\n\t\t\t\tLog.finest(\"Creating FileOutputStream to write keystore to file \" + keyStoreFile.getAbsolutePath());\n\t\t\tout = new FileOutputStream(keyStoreFile);\n\t\t} catch (FileNotFoundException e) {\n\t\t\tgenerateConfigurationException(\"Cannot create keystore file: \" + keyStoreFile.getAbsolutePath(), e);\n\t\t} \n\t\t\n\t\tKeyStoreInfo storeInfo = new KeyStoreInfo(keyStoreFile.toURI().toString(), null, new CCNTime(keyStoreFile.lastModified()));\n\t    return new Tuple<KeyStoreInfo, OutputStream>(storeInfo, out);   \n\t}","id":13865,"modified_method":"/**\n\t * Creates a key store file\n\t * @throws ConfigurationException\n\t */\n\tprotected Tuple<KeyStoreInfo, OutputStream> createKeyStoreWriteStream() throws ConfigurationException, IOException {\n\t\t\n\t\tFile keyStoreDir = new File(_keyStoreDirectory);\n\t\tif (!keyStoreDir.exists()) {\n\t\t\tif (!keyStoreDir.mkdirs()) {\n\t\t\t\tthrow new ConfigurationException(\"Cannot create keystore directory: \" + keyStoreDir.getAbsolutePath(), null);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Alas, until 1.6, we can't set permissions on the file or directory...\n\t\t// TODO DKS when switch to 1.6, add permission settings.\n\t\tFile keyStoreFile  = new File(keyStoreDir, _keyStoreFileName);\n\t\tif (keyStoreFile.exists()) {\n\t\t\tLog.warning(\"Key store file {0} already exists (length {1}), overrwriting.\", keyStoreFile.getAbsolutePath(), keyStoreFile.length());\n\t\t}\n\n\t    FileOutputStream out = null;\n\t\ttry {\n\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.FINEST))\n\t\t\t\tLog.finest(Log.FAC_KEYS, \"Creating FileOutputStream to write keystore to file \" + keyStoreFile.getAbsolutePath());\n\t\t\tout = new FileOutputStream(keyStoreFile);\n\t\t} catch (FileNotFoundException e) {\n\t\t\tgenerateConfigurationException(\"Cannot create keystore file: \" + keyStoreFile.getAbsolutePath(), e);\n\t\t} \n\t\t\n\t\tKeyStoreInfo storeInfo = new KeyStoreInfo(keyStoreFile.toURI().toString(), null, new CCNTime(keyStoreFile.lastModified()));\n\t    return new Tuple<KeyStoreInfo, OutputStream>(storeInfo, out);   \n\t}","commit_id":"94eaf6df75f20f79aba9b158c86d76d9f047bddd","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"/**\n\t * Generates a key pair and a certificate, and stores them to the key store\n\t * @throws ConfigurationException\n\t */\n\tsynchronized protected KeyStore createKeyStore(OutputStream out) throws ConfigurationException {\n\n\t\tKeyStore ks = null;\n\t    try {\n\t\t\tif (Log.isLoggable(Level.FINEST))\n\t\t\t\tLog.finest(\"createKeyStore: getting instance of keystore type \" + _keyStoreType);\n\t\t\tks = KeyStore.getInstance(_keyStoreType);\n\t\t\tif (Log.isLoggable(Level.FINEST))\n\t\t\t\tLog.finest(\"createKeyStore: loading key store.\");\n\t\t\tks.load(null, _password);\n\t\t\tif (Log.isLoggable(Level.FINEST))\n\t\t\t\tLog.finest(\"createKeyStore: key store loaded.\");\n\t\t} catch (NoSuchAlgorithmException e) {\n\t\t\tgenerateConfigurationException(\"Cannot load empty default keystore.\", e);\n\t\t} catch (CertificateException e) {\n\t\t\tgenerateConfigurationException(\"Cannot load empty default keystore with no certificates.\", e);\n\t\t} catch (KeyStoreException e) {\n\t\t\tgenerateConfigurationException(\"Cannot create instance of default key store type.\", e);\n\t\t} catch (IOException e) {\n\t\t\tgenerateConfigurationException(\"Cannot initialize instance of default key store type.\", e);\n\t\t}\n\n\t\tKeyPairGenerator kpg = null;\n\t\ttry {\n\t\t\tkpg = KeyPairGenerator.getInstance(UserConfiguration.defaultKeyAlgorithm());\n\t\t} catch (NoSuchAlgorithmException e) {\n\t\t\tgenerateConfigurationException(\"Cannot generate key using default algorithm: \" + UserConfiguration.defaultKeyAlgorithm(), e);\n\t\t}\n\t\tkpg.initialize(UserConfiguration.defaultKeyLength());\n\t\t\n\t\tif (Log.isLoggable(Level.FINEST))\n\t\t\tLog.finest(\"createKeyStore: generating \" + UserConfiguration.defaultKeyLength() + \"-bit \" + UserConfiguration.defaultKeyAlgorithm() + \" key.\");\n\t\tKeyPair userKeyPair = kpg.generateKeyPair();\n\t\tif (Log.isLoggable(Level.FINEST))\n\t\t\tLog.finest(\"createKeyStore: key generated, generating certificate for user \" + _userName);\n\t\t\n\t\t// Generate a self-signed certificate.\n\t\tString subjectDN = \"CN=\" + _userName;\n\t\tX509Certificate ssCert = null;\n\t\ttry {\n\t\t\t ssCert = \n\t\t\t\t MinimalCertificateGenerator.GenerateUserCertificate(userKeyPair, subjectDN, \n\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t\t MinimalCertificateGenerator.MSEC_IN_YEAR);\n\t\t\tif (Log.isLoggable(Level.FINEST))\n\t\t\t\tLog.finest(\"createKeyStore: certificate generated.\");\n\t\t\t \n\t\t} catch (Exception e) {\n\t\t\tgenerateConfigurationException(\"InvalidKeyException generating user internal certificate.\", e);\n\t\t} \n\n\t\tKeyStore.PrivateKeyEntry entry =\n\t        new KeyStore.PrivateKeyEntry(userKeyPair.getPrivate(), new X509Certificate[]{ssCert});\n\n\t    try {\n\t\t\tif (Log.isLoggable(Level.FINEST))\n\t\t\t\tLog.finest(\"createKeyStore: setting private key entry.\");\n\t\t    ks.setEntry(_defaultAlias, entry, \n\t\t\t        new KeyStore.PasswordProtection(_password));\n\t\t    \n\t\t\tif (Log.isLoggable(Level.FINEST))\n\t\t\t\tLog.finest(\"createKeyStore: storing key store.\");\n\t        ks.store(out, _password);\n\t\t\tif (Log.isLoggable(Level.FINEST))\n\t\t\t\tLog.finest(\"createKeyStore: wrote key store.\");\n\n\t\t} catch (NoSuchAlgorithmException e) {\n\t\t\tgenerateConfigurationException(\"Cannot save default keystore.\", e);\n\t\t} catch (CertificateException e) {\n\t\t\tgenerateConfigurationException(\"Cannot save default keystore with no certificates.\", e);\n\t    } catch (KeyStoreException e) {\n\t    \tgenerateConfigurationException(\"Cannot set private key entry for user default key\", e);\n\t\t} catch (IOException e) {\n\t\t\tgenerateConfigurationException(\"Cannot write keystore file: \" + _keyStoreFileName, e);\n\t\t} finally {\n\t        if (out != null) {\n\t            try {\n\t\t\t\t\tout.close();\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tLog.warning(\"IOException closing key store file after load.\");\n\t\t\t\t\tLog.warningStackTrace(e);\n\t\t\t\t}\n\t        }\n\t    }\n\t\treturn ks;\n\t}","id":13866,"modified_method":"/**\n\t * Generates a key pair and a certificate, and stores them to the key store\n\t * @throws ConfigurationException\n\t */\n\tsynchronized protected KeyStore createKeyStore(OutputStream out) throws ConfigurationException {\n\n\t\tKeyStore ks = null;\n\t    try {\n\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.FINEST))\n\t\t\t\tLog.finest(Log.FAC_KEYS, \"createKeyStore: getting instance of keystore type \" + _keyStoreType);\n\t\t\tks = KeyStore.getInstance(_keyStoreType);\n\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.FINEST))\n\t\t\t\tLog.finest(Log.FAC_KEYS, \"createKeyStore: loading key store.\");\n\t\t\tks.load(null, _password);\n\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.FINEST))\n\t\t\t\tLog.finest(Log.FAC_KEYS, \"createKeyStore: key store loaded.\");\n\t\t} catch (NoSuchAlgorithmException e) {\n\t\t\tgenerateConfigurationException(\"Cannot load empty default keystore.\", e);\n\t\t} catch (CertificateException e) {\n\t\t\tgenerateConfigurationException(\"Cannot load empty default keystore with no certificates.\", e);\n\t\t} catch (KeyStoreException e) {\n\t\t\tgenerateConfigurationException(\"Cannot create instance of default key store type.\", e);\n\t\t} catch (IOException e) {\n\t\t\tgenerateConfigurationException(\"Cannot initialize instance of default key store type.\", e);\n\t\t}\n\n\t\tKeyPairGenerator kpg = null;\n\t\ttry {\n\t\t\tkpg = KeyPairGenerator.getInstance(UserConfiguration.defaultKeyAlgorithm());\n\t\t} catch (NoSuchAlgorithmException e) {\n\t\t\tgenerateConfigurationException(\"Cannot generate key using default algorithm: \" + UserConfiguration.defaultKeyAlgorithm(), e);\n\t\t}\n\t\tkpg.initialize(UserConfiguration.defaultKeyLength());\n\t\t\n\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.FINEST))\n\t\t\tLog.finest(Log.FAC_KEYS, \"createKeyStore: generating \" + UserConfiguration.defaultKeyLength() + \"-bit \" + UserConfiguration.defaultKeyAlgorithm() + \" key.\");\n\t\tKeyPair userKeyPair = kpg.generateKeyPair();\n\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.FINEST))\n\t\t\tLog.finest(Log.FAC_KEYS, \"createKeyStore: key generated, generating certificate for user \" + _userName);\n\t\t\n\t\t// Generate a self-signed certificate.\n\t\tString subjectDN = \"CN=\" + _userName;\n\t\tX509Certificate ssCert = null;\n\t\ttry {\n\t\t\t ssCert = \n\t\t\t\t MinimalCertificateGenerator.GenerateUserCertificate(userKeyPair, subjectDN, \n\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t\t MinimalCertificateGenerator.MSEC_IN_YEAR);\n\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.FINEST))\n\t\t\t\tLog.finest(Log.FAC_KEYS, \"createKeyStore: certificate generated.\");\n\t\t\t \n\t\t} catch (Exception e) {\n\t\t\tgenerateConfigurationException(\"InvalidKeyException generating user internal certificate.\", e);\n\t\t} \n\n\t\tKeyStore.PrivateKeyEntry entry =\n\t        new KeyStore.PrivateKeyEntry(userKeyPair.getPrivate(), new X509Certificate[]{ssCert});\n\n\t    try {\n\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.FINEST))\n\t\t\t\tLog.finest(Log.FAC_KEYS, \"createKeyStore: setting private key entry.\");\n\t\t    ks.setEntry(_defaultAlias, entry, \n\t\t\t        new KeyStore.PasswordProtection(_password));\n\t\t    \n\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.FINEST))\n\t\t\t\tLog.finest(Log.FAC_KEYS, \"createKeyStore: storing key store.\");\n\t        ks.store(out, _password);\n\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.FINEST))\n\t\t\t\tLog.finest(Log.FAC_KEYS, \"createKeyStore: wrote key store.\");\n\n\t\t} catch (NoSuchAlgorithmException e) {\n\t\t\tgenerateConfigurationException(\"Cannot save default keystore.\", e);\n\t\t} catch (CertificateException e) {\n\t\t\tgenerateConfigurationException(\"Cannot save default keystore with no certificates.\", e);\n\t    } catch (KeyStoreException e) {\n\t    \tgenerateConfigurationException(\"Cannot set private key entry for user default key\", e);\n\t\t} catch (IOException e) {\n\t\t\tgenerateConfigurationException(\"Cannot write keystore file: \" + _keyStoreFileName, e);\n\t\t} finally {\n\t        if (out != null) {\n\t            try {\n\t\t\t\t\tout.close();\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tLog.warning(\"IOException closing key store file after load.\");\n\t\t\t\t\tLog.warningStackTrace(e);\n\t\t\t\t}\n\t        }\n\t    }\n\t\treturn ks;\n\t}","commit_id":"94eaf6df75f20f79aba9b158c86d76d9f047bddd","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"/**\n\t * If a key store file exists, reads in the key; \n\t * otherwise, create a key store file and a key pair.\n\t * @param keyStoreFileName the file containing the keystore, if null\n\t * \tuses default in user's home directory.\n\t * @throws ConfigurationException\n\t */\n\tprotected KeyStoreInfo loadKeyStore() throws ConfigurationException, IOException {\n\t\t\n\t\tFile keyStoreFile = new File(_keyStoreDirectory, _keyStoreFileName);\n\t\t\n\t\tKeyStoreInfo keyStoreInfo = null;\n\t\tif (!keyStoreFile.exists() || (0 == keyStoreFile.length())) {\n\t\t\t// If the BC configuration is screwed up, sometimes a 0-length keystore\n\t\t\t// gets created. If so, blow it away and make a new one.\n\t\t\tLog.info(\"Creating new CCN key store...\" + keyStoreFile.getAbsolutePath());\n\t\t\tkeyStoreInfo = createKeyStore();\n\t\t\tLog.info(\"...created key store. Version: {0} ({1} ms) Last modified: {2}. Will now load normally.\", \n\t\t\t\t\tkeyStoreInfo.getVersion(), keyStoreInfo.getVersion().getTime(), keyStoreFile.lastModified());\n\t\t\t\n\t\t\t// For some reason, if we just go from here, sometimes we end up with very slightly\n\t\t\t// different stat times on the file. This causes havoc with versioning. So,\n\t\t\t// read the file back in from scratch.\n\t\t\tkeyStoreInfo = null;\n\t\t}\n\t\tif (null == keyStoreInfo) {\n\t\t\tFileInputStream in = null;\n\t\t\tKeyStore keyStore = null;\n\t\t\tif (Log.isLoggable(Level.INFO))\n\t\t\t\tLog.info(\"Loading CCN key store from \" + keyStoreFile.getAbsolutePath() + \"...last modified \" + keyStoreFile.lastModified() + \"(ms).\");\n\t\t\ttry {\n\t\t\t\tin = new FileInputStream(keyStoreFile);\n\t\t\t\tkeyStore = readKeyStore(in);\n\t\t\t\tkeyStoreInfo = new KeyStoreInfo(keyStoreFile.toURI().toString(), keyStore, new CCNTime(keyStoreFile.lastModified()));\n\t\t\t\tif (Log.isLoggable(Level.INFO))\n\t\t\t\t\tLog.info(\"Loaded CCN key store from \" + keyStoreFile.getAbsolutePath() + \"...version \" + keyStoreInfo.getVersion() + \" ms: \" + keyStoreInfo.getVersion().getTime());\n\t\t\t} catch (FileNotFoundException e) {\n\t\t\t\tLog.warning(\"Cannot open existing key store file: \" + _keyStoreFileName);\n\t\t\t\tthrow e;\n\t\t\t} \n\t\t}\n\t\treturn keyStoreInfo;\n\t}","id":13867,"modified_method":"/**\n\t * If a key store file exists, reads in the key; \n\t * otherwise, create a key store file and a key pair.\n\t * @param keyStoreFileName the file containing the keystore, if null\n\t * \tuses default in user's home directory.\n\t * @throws ConfigurationException\n\t */\n\tprotected KeyStoreInfo loadKeyStore() throws ConfigurationException, IOException {\n\t\t\n\t\tFile keyStoreFile = new File(_keyStoreDirectory, _keyStoreFileName);\n\t\t\n\t\tKeyStoreInfo keyStoreInfo = null;\n\t\tif (!keyStoreFile.exists() || (0 == keyStoreFile.length())) {\n\t\t\t// If the BC configuration is screwed up, sometimes a 0-length keystore\n\t\t\t// gets created. If so, blow it away and make a new one.\n\t\t\tLog.info(Log.FAC_KEYS, \"Creating new CCN key store...\" + keyStoreFile.getAbsolutePath());\n\t\t\tkeyStoreInfo = createKeyStore();\n\t\t\tLog.info(Log.FAC_KEYS, \"...created key store. Version: {0} ({1} ms) Last modified: {2}. Will now load normally.\", \n\t\t\t\t\tkeyStoreInfo.getVersion(), keyStoreInfo.getVersion().getTime(), keyStoreFile.lastModified());\n\t\t\t\n\t\t\t// For some reason, if we just go from here, sometimes we end up with very slightly\n\t\t\t// different stat times on the file. This causes havoc with versioning. So,\n\t\t\t// read the file back in from scratch.\n\t\t\tkeyStoreInfo = null;\n\t\t}\n\t\tif (null == keyStoreInfo) {\n\t\t\tFileInputStream in = null;\n\t\t\tKeyStore keyStore = null;\n\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.INFO))\n\t\t\t\tLog.info(Log.FAC_KEYS, \"Loading CCN key store from \" + keyStoreFile.getAbsolutePath() + \"...last modified \" + keyStoreFile.lastModified() + \"(ms).\");\n\t\t\ttry {\n\t\t\t\tin = new FileInputStream(keyStoreFile);\n\t\t\t\tkeyStore = readKeyStore(in);\n\t\t\t\tkeyStoreInfo = new KeyStoreInfo(keyStoreFile.toURI().toString(), keyStore, new CCNTime(keyStoreFile.lastModified()));\n\t\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.INFO))\n\t\t\t\t\tLog.info(Log.FAC_KEYS, \"Loaded CCN key store from \" + keyStoreFile.getAbsolutePath() + \"...version \" + keyStoreInfo.getVersion() + \" ms: \" + keyStoreInfo.getVersion().getTime());\n\t\t\t} catch (FileNotFoundException e) {\n\t\t\t\tLog.warning(\"Cannot open existing key store file: \" + _keyStoreFileName);\n\t\t\t\tthrow e;\n\t\t\t} \n\t\t}\n\t\treturn keyStoreInfo;\n\t}","commit_id":"94eaf6df75f20f79aba9b158c86d76d9f047bddd","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"/**\n\t * Reads in a user's private/public keys and certificate from a key store\n\t * Must have set _password.\n\t * @param in input stream\n\t * @throws ConfigurationException\n\t */\n\tprotected KeyStore readKeyStore(InputStream in) throws ConfigurationException {\n\t\tKeyStore keyStore = null;\n\t\ttry {\n\t\t\tif (Log.isLoggable(Level.INFO))\n\t\t\t\tLog.info(\"Loading CCN key store...\");\n\t\t\tkeyStore = KeyStore.getInstance(_keyStoreType);\n\t\t\tkeyStore.load(in, _password);\n\t\t} catch (NoSuchAlgorithmException e) {\n\t\t\tLog.warning(\"Cannot load keystore: \" + e);\n\t\t\tthrow new ConfigurationException(\"Cannot load default keystore: \" + e);\n\t\t} catch (CertificateException e) {\n\t\t\tLog.warning(\"Cannot load keystore with no certificates.\");\n\t\t\tthrow new ConfigurationException(\"Cannot load keystore with no certificates.\");\n\t\t} catch (IOException e) {\n\t\t\tLog.warning(\"Cannot open existing key store: \" + e);\n\t\t\ttry {\n\t\t\t\tin.reset();\n\t\t\t\tjava.io.FileOutputStream bais = new java.io.FileOutputStream(\"KeyDump.p12\");\n\t\t\t\tbyte [] tmp = new byte[2048];\n\t\t\t\tint read = in.read(tmp);\n\t\t\t\twhile (read > 0) {\n\t\t\t\t\tbais.write(tmp, 0, read);\n\t\t\t\t\tread = in.read(tmp);\n\t\t\t\t}\n\t\t\t\tbais.flush();\n\t\t\t\tbais.close();\n\t\t\t} catch (IOException e1) {\n\t\t\t\tLog.info(\"Another exception: \" + e1);\n\t\t\t}\n\t\t\tthrow new ConfigurationException(e);\n\t\t} catch (KeyStoreException e) {\n\t\t\tLog.warning(\"Cannot create instance of preferred key store type: \" + _keyStoreType + \" \" + e.getMessage());\n\t\t\tLog.warningStackTrace(e);\n\t\t\tthrow new ConfigurationException(\"Cannot create instance of default key store type: \" + _keyStoreType + \" \" + e.getMessage());\n\t\t} finally {\n\t\t\tif (null != in)\n\t\t\t\ttry {\n\t\t\t\t\tin.close();\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tLog.warning(\"IOException closing key store file after load.\");\n\t\t\t\t\tLog.warningStackTrace(e);\n\t\t\t\t}\n\t\t}\n\t\treturn keyStore;\n\t}","id":13868,"modified_method":"/**\n\t * Reads in a user's private/public keys and certificate from a key store\n\t * Must have set _password.\n\t * @param in input stream\n\t * @throws ConfigurationException\n\t */\n\tprotected KeyStore readKeyStore(InputStream in) throws ConfigurationException {\n\t\tKeyStore keyStore = null;\n\t\ttry {\n\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.INFO))\n\t\t\t\tLog.info(Log.FAC_KEYS, \"Loading CCN key store...\");\n\t\t\tkeyStore = KeyStore.getInstance(_keyStoreType);\n\t\t\tkeyStore.load(in, _password);\n\t\t} catch (NoSuchAlgorithmException e) {\n\t\t\tLog.warning(\"Cannot load keystore: \" + e);\n\t\t\tthrow new ConfigurationException(\"Cannot load default keystore: \" + e);\n\t\t} catch (CertificateException e) {\n\t\t\tLog.warning(\"Cannot load keystore with no certificates.\");\n\t\t\tthrow new ConfigurationException(\"Cannot load keystore with no certificates.\");\n\t\t} catch (IOException e) {\n\t\t\tLog.warning(\"Cannot open existing key store: \" + e);\n\t\t\ttry {\n\t\t\t\tin.reset();\n\t\t\t\tjava.io.FileOutputStream bais = new java.io.FileOutputStream(\"KeyDump.p12\");\n\t\t\t\tbyte [] tmp = new byte[2048];\n\t\t\t\tint read = in.read(tmp);\n\t\t\t\twhile (read > 0) {\n\t\t\t\t\tbais.write(tmp, 0, read);\n\t\t\t\t\tread = in.read(tmp);\n\t\t\t\t}\n\t\t\t\tbais.flush();\n\t\t\t\tbais.close();\n\t\t\t} catch (IOException e1) {\n\t\t\t\tLog.info(Log.FAC_KEYS, \"Another exception: \" + e1);\n\t\t\t}\n\t\t\tthrow new ConfigurationException(e);\n\t\t} catch (KeyStoreException e) {\n\t\t\tLog.warning(\"Cannot create instance of preferred key store type: \" + _keyStoreType + \" \" + e.getMessage());\n\t\t\tLog.warningStackTrace(e);\n\t\t\tthrow new ConfigurationException(\"Cannot create instance of default key store type: \" + _keyStoreType + \" \" + e.getMessage());\n\t\t} finally {\n\t\t\tif (null != in)\n\t\t\t\ttry {\n\t\t\t\t\tin.close();\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tLog.warning(\"IOException closing key store file after load.\");\n\t\t\t\t\tLog.warningStackTrace(e);\n\t\t\t\t}\n\t\t}\n\t\treturn keyStore;\n\t}","commit_id":"94eaf6df75f20f79aba9b158c86d76d9f047bddd","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"@Override\n\tpublic PublicKeyObject publishKey(ContentName keyName, \n\t\t\t\t\t\t   PublicKey keyToPublish,\n\t\t\t\t\t\t   PublisherPublicKeyDigest signingKeyID,\n\t\t\t\t\t\t   KeyLocator signingKeyLocator) throws InvalidKeyException, IOException {\n\t\tif (null == keyToPublish) {\n\t\t\tkeyToPublish = getDefaultPublicKey();\n\t\t} \n\t\tPublisherPublicKeyDigest keyDigest = new PublisherPublicKeyDigest(keyToPublish);\n\t\t\n\t\tif (null == keyName) {\n\t\t\tkeyName = getDefaultKeyName(keyDigest);\n\t\t}\n\n\t\tif (Log.isLoggable(Level.INFO))\n\t\t\tLog.info(\"publishKey: publishing key {0} under specified key name {1}\", keyDigest, keyName);\n\n\t\tPublicKeyObject keyObject =  \n\t\t\t_keyServer.serveKey(keyName, keyToPublish, signingKeyID, signingKeyLocator);\n\t\t\n\t\tif (!haveStoredKeyLocator(keyDigest) && (null != keyObject)) {\n\t\t\t// So once we publish self-signed key object, we store a pointer to that\n\t\t\t// to use. Don't override any manually specified values.\n\t\t\tKeyLocator newKeyLocator = new KeyLocator(keyObject.getVersionedName(), keyObject.getContentPublisher());\n\t\t\tsetKeyLocator(keyDigest, newKeyLocator);\n\t\t\tif (Log.isLoggable(Level.INFO))\n\t\t\t\tLog.info(\"publishKey: storing key locator {0} for key {1}\", keyDigest, newKeyLocator);\n\t\t}\n\t\treturn keyObject;\n\t}","id":13869,"modified_method":"@Override\n\tpublic PublicKeyObject publishKey(ContentName keyName, \n\t\t\t\t\t\t   PublicKey keyToPublish,\n\t\t\t\t\t\t   PublisherPublicKeyDigest signingKeyID,\n\t\t\t\t\t\t   KeyLocator signingKeyLocator) throws InvalidKeyException, IOException {\n\t\tif (null == keyToPublish) {\n\t\t\tkeyToPublish = getDefaultPublicKey();\n\t\t} \n\t\tPublisherPublicKeyDigest keyDigest = new PublisherPublicKeyDigest(keyToPublish);\n\t\t\n\t\tif (null == keyName) {\n\t\t\tkeyName = getDefaultKeyName(keyDigest);\n\t\t}\n\n\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.INFO))\n\t\t\tLog.info(Log.FAC_KEYS, \"publishKey: publishing key {0} under specified key name {1}\", keyDigest, keyName);\n\n\t\tPublicKeyObject keyObject =  \n\t\t\t_keyServer.serveKey(keyName, keyToPublish, signingKeyID, signingKeyLocator);\n\t\t\n\t\tif (!haveStoredKeyLocator(keyDigest) && (null != keyObject)) {\n\t\t\t// So once we publish self-signed key object, we store a pointer to that\n\t\t\t// to use. Don't override any manually specified values.\n\t\t\tKeyLocator newKeyLocator = new KeyLocator(keyObject.getVersionedName(), keyObject.getContentPublisher());\n\t\t\tsetKeyLocator(keyDigest, newKeyLocator);\n\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.INFO))\n\t\t\t\tLog.info(Log.FAC_KEYS, \"publishKey: storing key locator {0} for key {1}\", keyDigest, newKeyLocator);\n\t\t}\n\t\treturn keyObject;\n\t}","commit_id":"94eaf6df75f20f79aba9b158c86d76d9f047bddd","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"/**\n\t * Get private signing key for a publisher. \n\t * If I am the publisher, return signing key;\n\t * otherwise, return null.\n\t * @param publisher publisher public key digest\n\t * @return private signing key or null\n\t */\r\n\t@Override\r\n\tpublic PrivateKey getSigningKey(PublisherPublicKeyDigest publisher) {\r\n\t\tif( Log.isLoggable(Level.FINER) )\n\t\t\tLog.finer(\"getSigningKey: retrieving key: \" + publisher);\n\t\tif (null == publisher)\n\t\t\treturn null;\n\t\treturn _privateKeyCache.getPrivateKey(publisher.digest());\r\n\t}","id":13870,"modified_method":"/**\n\t * Get private signing key for a publisher. \n\t * If I am the publisher, return signing key;\n\t * otherwise, return null.\n\t * @param publisher publisher public key digest\n\t * @return private signing key or null\n\t */\r\n\t@Override\r\n\tpublic PrivateKey getSigningKey(PublisherPublicKeyDigest publisher) {\r\n\t\tif( Log.isLoggable(Log.FAC_KEYS, Level.FINER) )\n\t\t\tLog.finer(Log.FAC_KEYS, \"getSigningKey: retrieving key: \" + publisher);\n\t\tif (null == publisher)\n\t\t\treturn null;\n\t\treturn _privateKeyCache.getPrivateKey(publisher.digest());\r\n\t}","commit_id":"94eaf6df75f20f79aba9b158c86d76d9f047bddd","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"/**\n\t * Need a way to clear this programmatically. Call this before initialize().\n\t */\n\t@Override \n\tpublic void clearSavedConfigurationState() throws FileNotFoundException, IOException {\n\t\tFile configurationFile = new File(_keyStoreDirectory, _configurationFileName); \n\t\tif (configurationFile.exists()) {\n\t\t\tif (Log.isLoggable(Level.INFO)) {\n\t\t\t\tLog.info(\"Deleting configuration state file {0}.\", configurationFile.getAbsolutePath());\n\t\t\t}\n\t\t\tif (!configurationFile.delete()) {\n\t\t\t\tLog.warning(\"Unable to delete configuration state file {0}.\", configurationFile.getAbsolutePath());\n\t\t\t}\n\t\t}\n\t}","id":13871,"modified_method":"/**\n\t * Need a way to clear this programmatically. Call this before initialize().\n\t */\n\t@Override \n\tpublic void clearSavedConfigurationState() throws FileNotFoundException, IOException {\n\t\tFile configurationFile = new File(_keyStoreDirectory, _configurationFileName); \n\t\tif (configurationFile.exists()) {\n\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.INFO)) {\n\t\t\t\tLog.info(Log.FAC_KEYS, \"Deleting configuration state file {0}.\", configurationFile.getAbsolutePath());\n\t\t\t}\n\t\t\tif (!configurationFile.delete()) {\n\t\t\t\tLog.warning(\"Unable to delete configuration state file {0}.\", configurationFile.getAbsolutePath());\n\t\t\t}\n\t\t}\n\t}","commit_id":"94eaf6df75f20f79aba9b158c86d76d9f047bddd","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"/**\n\t * Get a public key object for this key locator and publisher, if there is one.\n\t * This is less general than the method above, which retrieves keys we have cached\n\t * but which have never been published -- our keys, keys listed explicitly in locators,\n\t * etc.\n\t * @param desiredKeyID\n\t * @param locator\n\t * @param timeout\n\t * @return\n\t * @throws IOException\n\t */\n\t@Override \n\tpublic PublicKeyObject getPublicKeyObject(\n\t\t\tPublisherPublicKeyDigest desiredKeyID, KeyLocator locator, \n\t\t\tlong timeout) throws IOException {\n\t\t\n\t\tif( Log.isLoggable(Level.FINER) )\n\t\t\tLog.finer(\"getPublicKey: retrieving key: \" + desiredKeyID + \" located at: \" + locator);\n\t\t// this will try local caches, the locator itself, and if it \n\t\t// has to, will go to the network. The result will be stored in the cache.\n\t\t// All this tells us is that the key matches the publisher. For whether\n\t\t// or not we should trust it for some reason, we have to get fancy.\n\t\treturn getPublicKeyCache().getPublicKeyObject(desiredKeyID, locator, timeout, handle());\n\t}","id":13872,"modified_method":"/**\n\t * Get a public key object for this key locator and publisher, if there is one.\n\t * This is less general than the method above, which retrieves keys we have cached\n\t * but which have never been published -- our keys, keys listed explicitly in locators,\n\t * etc.\n\t * @param desiredKeyID\n\t * @param locator\n\t * @param timeout\n\t * @return\n\t * @throws IOException\n\t */\n\t@Override \n\tpublic PublicKeyObject getPublicKeyObject(\n\t\t\tPublisherPublicKeyDigest desiredKeyID, KeyLocator locator, \n\t\t\tlong timeout) throws IOException {\n\t\t\n\t\tif( Log.isLoggable(Log.FAC_KEYS, Level.FINER) )\n\t\t\tLog.finer(Log.FAC_KEYS, \"getPublicKey: retrieving key: \" + desiredKeyID + \" located at: \" + locator);\n\t\t// this will try local caches, the locator itself, and if it \n\t\t// has to, will go to the network. The result will be stored in the cache.\n\t\t// All this tells us is that the key matches the publisher. For whether\n\t\t// or not we should trust it for some reason, we have to get fancy.\n\t\treturn getPublicKeyCache().getPublicKeyObject(desiredKeyID, locator, timeout, handle());\n\t}","commit_id":"94eaf6df75f20f79aba9b158c86d76d9f047bddd","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"/**\n\t * Get the key locator to use for a given key. If a value has been stored\n\t * by calling setKeyLocator, that value will be used. Such values can\n\t * also be initialized using command-line properties, environment variables,\n\t * or configuration files. Usually it refers to content already published.\n\t * As we don't know where the key might be published, if no value is\n\t * specified, we return a locator of type KEY. We have deprecated the\n\t * previous behavior of trying to look at objects we have published\n\t * containing this key; this does not allow the user enough control over\n\t * what key locator will be used.\n\t * @return key locator\n\t */\n\t@Override\n\tpublic KeyLocator getKeyLocator(PublisherPublicKeyDigest keyID) {\n\t\tif (null == keyID) {\n\t\t\tkeyID = getDefaultKeyID();\n\t\t}\n\t\tKeyLocator keyLocator = getStoredKeyLocator(keyID);\n\t\tif (null == keyLocator) {\n\t\t\tkeyLocator = getKeyTypeKeyLocator(keyID);\n\t\t}\n\t\tif (Log.isLoggable(Level.INFO))\n\t\t\tLog.info(\"getKeyLocator: returning locator {0} for key {1}\", keyLocator, keyID);\n\t\treturn keyLocator;\n\t}","id":13873,"modified_method":"/**\n\t * Get the key locator to use for a given key. If a value has been stored\n\t * by calling setKeyLocator, that value will be used. Such values can\n\t * also be initialized using command-line properties, environment variables,\n\t * or configuration files. Usually it refers to content already published.\n\t * As we don't know where the key might be published, if no value is\n\t * specified, we return a locator of type KEY. We have deprecated the\n\t * previous behavior of trying to look at objects we have published\n\t * containing this key; this does not allow the user enough control over\n\t * what key locator will be used.\n\t * @return key locator\n\t */\n\t@Override\n\tpublic KeyLocator getKeyLocator(PublisherPublicKeyDigest keyID) {\n\t\tif (null == keyID) {\n\t\t\tkeyID = getDefaultKeyID();\n\t\t}\n\t\tKeyLocator keyLocator = getStoredKeyLocator(keyID);\n\t\tif (null == keyLocator) {\n\t\t\tkeyLocator = getKeyTypeKeyLocator(keyID);\n\t\t}\n\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.INFO))\n\t\t\tLog.info(Log.FAC_KEYS, \"getKeyLocator: returning locator {0} for key {1}\", keyLocator, keyID);\n\t\treturn keyLocator;\n\t}","commit_id":"94eaf6df75f20f79aba9b158c86d76d9f047bddd","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"/**\n\t * Return the key's content name for a given key id, given\n\t * a specified prefix and version. \n\t * The default key name is the publisher ID itself,\n\t * under the user's key collection. \n\t * @param keyID[] publisher ID\n\t * @return content name\n\t */\n\tpublic ContentName getDefaultKeyName(ContentName keyPrefix, PublisherPublicKeyDigest keyID, CCNTime keyVersion) {\n\t\tif (null == keyPrefix) {\n\t\t\tkeyPrefix = getDefaultKeyNamePrefix();\n\t\t\tLog.info(\"Got default key name prefix: {0}\", keyPrefix);\n\t\t}\n\t\tContentName keyName = KeyProfile.keyName(keyPrefix, keyID);\n\t\tif (null != keyVersion) {\n\t\t\treturn VersioningProfile.addVersion(keyName, keyVersion);\n\t\t}\n\t\treturn keyName;\n\t}","id":13874,"modified_method":"/**\n\t * Return the key's content name for a given key id, given\n\t * a specified prefix and version. \n\t * The default key name is the publisher ID itself,\n\t * under the user's key collection. \n\t * @param keyID[] publisher ID\n\t * @return content name\n\t */\n\tpublic ContentName getDefaultKeyName(ContentName keyPrefix, PublisherPublicKeyDigest keyID, CCNTime keyVersion) {\n\t\tif (null == keyPrefix) {\n\t\t\tkeyPrefix = getDefaultKeyNamePrefix();\n\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.INFO)) { \n\t\t\t\tLog.info(Log.FAC_KEYS, \"Got default key name prefix: {0}\", keyPrefix);\n\t\t\t}\n\t\t}\n\t\tContentName keyName = KeyProfile.keyName(keyPrefix, keyID);\n\t\tif (null != keyVersion) {\n\t\t\treturn VersioningProfile.addVersion(keyName, keyVersion);\n\t\t}\n\t\treturn keyName;\n\t}","commit_id":"94eaf6df75f20f79aba9b158c86d76d9f047bddd","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"/**\n\t * Load the BouncyCastle and other necessary providers, should be called once for initialization. \n\t * Currently this is done by CCNHandle.\n\t */\r\n\tpublic static void initializeProvider() {\r\n\t\tsynchronized(KeyManager.class) {\r\n\t\t\tif (null == BC_PROVIDER) {\n\t\t\t\tBC_PROVIDER = Security.getProvider(\"BC\");\n\t\t\t\tif (null == BC_PROVIDER) {\n\t\t\t\t\tProvider bc = new BouncyCastleProvider();\r\n\t\t\t\t\tint result = Security.addProvider(bc);\n\t\t\t\t\tBC_PROVIDER = bc;\n\t\t\t\t\tif (null != BC_PROVIDER) {\n\t\t\t\t\t\tif (result > 0) {\n\t\t\t\t\t\t\tLog.info(\"KeyManager: Successfully initialized BouncyCastle provider at position \" + result);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tLog.info(\"KeyManager: BouncyCastle provider already installed.\");\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tLog.severe(\"ERROR: NULL default provider! Cannot load BouncyCastle! Result of addProvider: \" + result);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tLog.info(\"KeyManager: BouncyCastle provider installed by default.\");\n\t\t\t\t}\n\t\t\t\tProvider checkProvider = Security.getProvider(\"BC\");\n\t\t\t\tif (null == checkProvider) {\n\t\t\t\t\tLog.severe(\"Could not load BouncyCastle provider back in!\");\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}","id":13875,"modified_method":"/**\n\t * Load the BouncyCastle and other necessary providers, should be called once for initialization. \n\t * Currently this is done by CCNHandle.\n\t */\r\n\tpublic static void initializeProvider() {\r\n\t\tsynchronized(KeyManager.class) {\r\n\t\t\tif (null == BC_PROVIDER) {\n\t\t\t\tBC_PROVIDER = Security.getProvider(\"BC\");\n\t\t\t\tif (null == BC_PROVIDER) {\n\t\t\t\t\tProvider bc = new BouncyCastleProvider();\r\n\t\t\t\t\tint result = Security.addProvider(bc);\n\t\t\t\t\tBC_PROVIDER = bc;\n\t\t\t\t\tif (null != BC_PROVIDER) {\n\t\t\t\t\t\tif (result > 0) {\n\t\t\t\t\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.INFO)) { \n\t\t\t\t\t\t\t\tLog.info(Log.FAC_KEYS, \"KeyManager: Successfully initialized BouncyCastle provider at position \" + result);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.INFO)) { \n\t\t\t\t\t\t\t\tLog.info(Log.FAC_KEYS, \"KeyManager: BouncyCastle provider already installed.\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tLog.severe(\"ERROR: NULL default provider! Cannot load BouncyCastle! Result of addProvider: \" + result);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.INFO)) { \n\t\t\t\t\t\tLog.info(Log.FAC_KEYS, \"KeyManager: BouncyCastle provider installed by default.\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tProvider checkProvider = Security.getProvider(\"BC\");\n\t\t\t\tif (null == checkProvider) {\n\t\t\t\t\tLog.severe(\"Could not load BouncyCastle provider back in!\");\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}","commit_id":"94eaf6df75f20f79aba9b158c86d76d9f047bddd","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"/**\n\t * Accessor to retrieve default key manager instance, or create it if necessary.\n\t * @return the KeyManager\n\t * @throws ConfigurationException if there is a problem with the user or system configuration that\n\t * \t\trequires intervention to resolve, or we have a significant problem starting up the key manager.\n\t */\r\n\tpublic static synchronized KeyManager getDefaultKeyManager() {\n\t\t// could print a stack trace\n\t\tif (Log.isLoggable(Level.FINER)) {\n\t\t\tLog.finer(\"NOTICE: retrieving default key manager. Do you really want to do this?\");\n\t\t\ttry {\n\t\t\t\tthrow new ConfigurationException(\"THIS IS NOT AN ERROR: tracking stack trace to find use of default key manager.\");\n\t\t\t} catch (ConfigurationException e) {\n\t\t\t\tLog.logStackTrace(Level.FINER, e);\n\t\t\t}\n\t\t}\r\n\t\tif (null != _defaultKeyManager) \r\n\t\t\treturn _defaultKeyManager;\r\n\t\ttry {\r\n\t\t\treturn createDefaultKeyManager();\r\n\t\t} catch (IOException io) {\r\n\t\t\tLog.warning(\"IOException attempting to get KeyManager: \" + io.getClass().getName() + \":\" + io.getMessage());\n\t\t\tLog.warningStackTrace(io);\n\t\t\tthrow new RuntimeException(\"Error in system configuration. Cannot get KeyManager.\",io);\n\t\t} catch (InvalidKeyException io) {\n\t\t\tLog.warning(\"InvalidKeyException attempting to get KeyManager: \" + io.getClass().getName() + \":\" + io.getMessage());\n\t\t\tLog.warningStackTrace(io);\n\t\t\tthrow new RuntimeException(\"Error in system configuration. Cannot get KeyManager.\",io);\n\t\t} catch (ConfigurationException e) {\n\t\t\tLog.warning(\"Configuration exception attempting to get KeyManager: \" + e.getMessage());\n\t\t\tLog.warningStackTrace(e);\n\t\t\tthrow new RuntimeException(\"Error in system configuration. Cannot get KeyManager.\",e);\n\t\t}\r\n\t}","id":13876,"modified_method":"/**\n\t * Accessor to retrieve default key manager instance, or create it if necessary.\n\t * @return the KeyManager\n\t * @throws ConfigurationException if there is a problem with the user or system configuration that\n\t * \t\trequires intervention to resolve, or we have a significant problem starting up the key manager.\n\t */\r\n\tpublic static synchronized KeyManager getDefaultKeyManager() {\n\t\t// could print a stack trace\n\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.FINER)) {\n\t\t\tLog.finer(Log.FAC_KEYS, \"NOTICE: retrieving default key manager. Do you really want to do this?\");\n\t\t\ttry {\n\t\t\t\tthrow new ConfigurationException(\"THIS IS NOT AN ERROR: tracking stack trace to find use of default key manager.\");\n\t\t\t} catch (ConfigurationException e) {\n\t\t\t\tLog.logStackTrace(Level.FINER, e);\n\t\t\t}\n\t\t}\r\n\t\tif (null != _defaultKeyManager) \r\n\t\t\treturn _defaultKeyManager;\r\n\t\ttry {\r\n\t\t\treturn createDefaultKeyManager();\r\n\t\t} catch (IOException io) {\r\n\t\t\tLog.warning(\"IOException attempting to get KeyManager: \" + io.getClass().getName() + \":\" + io.getMessage());\n\t\t\tLog.warningStackTrace(io);\n\t\t\tthrow new RuntimeException(\"Error in system configuration. Cannot get KeyManager.\",io);\n\t\t} catch (InvalidKeyException io) {\n\t\t\tLog.warning(\"InvalidKeyException attempting to get KeyManager: \" + io.getClass().getName() + \":\" + io.getMessage());\n\t\t\tLog.warningStackTrace(io);\n\t\t\tthrow new RuntimeException(\"Error in system configuration. Cannot get KeyManager.\",io);\n\t\t} catch (ConfigurationException e) {\n\t\t\tLog.warning(\"Configuration exception attempting to get KeyManager: \" + e.getMessage());\n\t\t\tLog.warningStackTrace(e);\n\t\t\tthrow new RuntimeException(\"Error in system configuration. Cannot get KeyManager.\",e);\n\t\t}\r\n\t}","commit_id":"94eaf6df75f20f79aba9b158c86d76d9f047bddd","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"/**\n\t * Publish a public key to repository, if it isn't already there.\n\t * @param keyName content name of the public key to publish under (adds a version)\n\t * @param keyToPublish the key to publish\n\t * @param signingKeyID the key to sign with\n\t * @param signingKeyLocator the key locator to use\n\t * @param timeToWaitForPreexisting how long to wait to see if it has already been published\n\t * (avoid re-publishing). If 0, we don't even try to find preexisting content.\n\t * @param requirePublisherMatch check to see if we match the specified publisher. Key locator\n\t * match too complex to check, make caller do that one.\n\t * @param handle the handle to use to publish it with\n\t * @return the published information about this key, whether we published it or someone else had\n\t * @throws IOException \n\t */\n\tpublic static PublicKeyObject publishKeyToRepository(\n\t\t\tContentName keyName, \n\t\t\tPublicKey keyToPublish,\n\t\t\tPublisherPublicKeyDigest signingKeyID, \n\t\t\tKeyLocator signingKeyLocator,\n\t\t\tlong timeToWaitForPreexisting,\n\t\t\tboolean requirePublisherMatch,\n\t\t\tCCNHandle handle) throws IOException {\n\n\n\t\t// To avoid repeating work, we first see if this content is available on the network, then\n\t\t// if it's in a repository. That's because if it's not in a repository, we need to know if\n\t\t// it's on the network, and this way we save doing that work twice (as the repo-checking code\n\t\t// also needs to know if it's on the network).\n\t\tPublisherPublicKeyDigest keyDigest = new PublisherPublicKeyDigest(keyToPublish);\n\t\t\n\t\t// Returns immediately if timeToWaitForPreexisting is 0.\n\t\tContentObject availableContent = \n\t\t\tCCNReader.isVersionedContentAvailable(keyName, ContentType.KEY, keyDigest.digest(), \n\t\t\t\t\t(requirePublisherMatch ? signingKeyID : null), null, timeToWaitForPreexisting, handle);\n\t\t\n\t\t// If we want it self-signed...\n\t\tif (SELF_SIGNED_KEY_LOCATOR == signingKeyLocator) {\n\t\t\t// do mean == here....\n\t\t\t// have already verified that keyDigest is the digest of the content of availableContent\n\t\t\tif (!PublicKeyObject.isSelfSigned(SegmentationProfile.segmentRoot(availableContent.name()), \n\t\t\t\t\tkeyDigest, availableContent.signedInfo().getKeyLocator())) {\n\t\t\t\t// it would be perfect, but it's not self-signed\n\t\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.INFO)) {\n\t\t\t\t\tLog.info(Log.FAC_KEYS, \"Found our key published under desired name {0}, but not self-signed as required - key locator is {1}.\",\n\t\t\t\t\t\t\tavailableContent.name(), availableContent.signedInfo().getKeyLocator());\n\t\t\t\t}\n\t\t\t\tavailableContent = null;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (null != availableContent) {\n\t\t\t\n\t\t\t// See if some repository has this key already\n\t\t\tif (null != CCNReader.isContentInRepository(availableContent, timeToWaitForPreexisting, handle)) {\n\t\t\t\tLog.info(\"publishKeyToRepository: key {0} is already in a repository; not re-publishing.\", keyName);\n\t\t\t} else {\n\n\t\t\t\t// Otherwise, we just need to trick the repo into pulling it.\n\t\t\t\tContentName streamName = SegmentationProfile.segmentRoot(availableContent.name());\n\t\t\t\tRepositoryFlowControl rfc = new RepositoryFlowControl(streamName, handle);\n\t\t\t\t// This will throw an IOException if there is no repository there to read it.\n\t\t\t\trfc.startWrite(streamName, Shape.STREAM);\n\t\t\t\t// OK, once we've emitted the interest, we don't actually need that flow controller anymore.\n\t\t\t\tLog.info(\"Key {0} published to repository.\", keyName);\n\t\t\t\trfc.close();\n\t\t\t}\n\t\t\treturn new PublicKeyObject(availableContent, handle);\n\t\t\t\n\t\t} else {\t\t\n\t\t\t// We need to write this content ourselves, nobody else has it. We know we really want to \n\t\t\t// write it, no point in checking again to see if it's there.\n\t\t\treturn publishKey(keyName, keyToPublish, signingKeyID, signingKeyLocator, \n\t\t\t\t\t\t\t  null, SaveType.REPOSITORY, handle, handle.keyManager());\n\t\t}\n\t}","id":13877,"modified_method":"/**\n\t * Publish a public key to repository, if it isn't already there.\n\t * @param keyName content name of the public key to publish under (adds a version)\n\t * @param keyToPublish the key to publish\n\t * @param signingKeyID the key to sign with\n\t * @param signingKeyLocator the key locator to use\n\t * @param timeToWaitForPreexisting how long to wait to see if it has already been published\n\t * (avoid re-publishing). If 0, we don't even try to find preexisting content.\n\t * @param requirePublisherMatch check to see if we match the specified publisher. Key locator\n\t * match too complex to check, make caller do that one.\n\t * @param handle the handle to use to publish it with\n\t * @return the published information about this key, whether we published it or someone else had\n\t * @throws IOException \n\t */\n\tpublic static PublicKeyObject publishKeyToRepository(\n\t\t\tContentName keyName, \n\t\t\tPublicKey keyToPublish,\n\t\t\tPublisherPublicKeyDigest signingKeyID, \n\t\t\tKeyLocator signingKeyLocator,\n\t\t\tlong timeToWaitForPreexisting,\n\t\t\tboolean requirePublisherMatch,\n\t\t\tCCNHandle handle) throws IOException {\n\n\n\t\t// To avoid repeating work, we first see if this content is available on the network, then\n\t\t// if it's in a repository. That's because if it's not in a repository, we need to know if\n\t\t// it's on the network, and this way we save doing that work twice (as the repo-checking code\n\t\t// also needs to know if it's on the network).\n\t\tPublisherPublicKeyDigest keyDigest = new PublisherPublicKeyDigest(keyToPublish);\n\t\t\n\t\t// Returns immediately if timeToWaitForPreexisting is 0.\n\t\tContentObject availableContent = \n\t\t\tCCNReader.isVersionedContentAvailable(keyName, ContentType.KEY, keyDigest.digest(), \n\t\t\t\t\t(requirePublisherMatch ? signingKeyID : null), null, timeToWaitForPreexisting, handle);\n\t\t\n\t\t// If we want it self-signed...\n\t\tif (SELF_SIGNED_KEY_LOCATOR == signingKeyLocator) {\n\t\t\t// do mean == here....\n\t\t\t// have already verified that keyDigest is the digest of the content of availableContent\n\t\t\tif (!PublicKeyObject.isSelfSigned(SegmentationProfile.segmentRoot(availableContent.name()), \n\t\t\t\t\tkeyDigest, availableContent.signedInfo().getKeyLocator())) {\n\t\t\t\t// it would be perfect, but it's not self-signed\n\t\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.INFO)) {\n\t\t\t\t\tLog.info(Log.FAC_KEYS, \"Found our key published under desired name {0}, but not self-signed as required - key locator is {1}.\",\n\t\t\t\t\t\t\tavailableContent.name(), availableContent.signedInfo().getKeyLocator());\n\t\t\t\t}\n\t\t\t\tavailableContent = null;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (null != availableContent) {\n\t\t\t\n\t\t\t// See if some repository has this key already\n\t\t\tif (null != CCNReader.isContentInRepository(availableContent, timeToWaitForPreexisting, handle)) {\n\t\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.INFO)) { \n\t\t\t\t\tLog.info(Log.FAC_KEYS, \"publishKeyToRepository: key {0} is already in a repository; not re-publishing.\", keyName);\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// Otherwise, we just need to trick the repo into pulling it.\n\t\t\t\tContentName streamName = SegmentationProfile.segmentRoot(availableContent.name());\n\t\t\t\tRepositoryFlowControl rfc = new RepositoryFlowControl(streamName, handle);\n\t\t\t\t// This will throw an IOException if there is no repository there to read it.\n\t\t\t\trfc.startWrite(streamName, Shape.STREAM);\n\t\t\t\t// OK, once we've emitted the interest, we don't actually need that flow controller anymore.\n\t\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.INFO)) { \n\t\t\t\t\tLog.info(Log.FAC_KEYS, \"Key {0} published to repository.\", keyName);\n\t\t\t\t}\n\t\t\t\trfc.close();\n\t\t\t}\n\t\t\treturn new PublicKeyObject(availableContent, handle);\n\t\t\t\n\t\t} else {\t\t\n\t\t\t// We need to write this content ourselves, nobody else has it. We know we really want to \n\t\t\t// write it, no point in checking again to see if it's there.\n\t\t\treturn publishKey(keyName, keyToPublish, signingKeyID, signingKeyLocator, \n\t\t\t\t\t\t\t  null, SaveType.REPOSITORY, handle, handle.keyManager());\n\t\t}\n\t}","commit_id":"94eaf6df75f20f79aba9b158c86d76d9f047bddd","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"/**\n\t * Note: this is the lowest level interface to key publication; there are many higher-level\n\t * interfaces that are probably what you want. This needs to be public to get across\n\t * package constraints.\n\t * Publish a signed record for this key. We've already decided we need to publish,\n\t * and how; no more checks are made to see if the key already exists.\n\t * \n\t * @param keyName the key's content name. Will add a version when saving if it doesn't\n\t * \thave one already. If it does have a version, will use that one (see below for effect\n\t * \tof version on the key locator). (Note that this is not\n\t * \t\tstandard behavior for savable network content, which needs its version explicitly\n\t * \t\tset.)\n\t * @param keyToPublish the public key to publish\n\t * @param keyID the publisher id\n\t * @param signingKeyID the key id of the key pair to sign with\n\t * @param signingKeyLocator the key locator to use if we save this key (if it is not already published).\n\t * \tIf not specified, we look for the default locator for the signing key. If there is none,\n\t * \tand we are signing with the same key we are publishing, we build a\n\t * \tself-referential key locator, using the name passed in (versioned or not).\n\t * @param flowController flow controller to use. If non-null, saveType is ignored.\n\t * @param saveType -- if we don't want to hand in a special-purpose flow controller, set saveType to RAW\n\t *   or REPO to get standard publishing behavior.\n\t * @param handle the handle to use if we haven't specified a flow controller. Makes a flow controller\n\t * \tof the type specified by saveType. \n\t * @param keyManager the key manager to use to pull additional signing information (default keys\n\t *   and locators if not specified). If null, taken from handle. Also publish key added to its cache.\n\t * @return the published information about this key, whether we published it or someone else had\n\t * @throws IOException\n\t */\n\tpublic static PublicKeyObject publishKey(\n\t\t\tContentName keyName, PublicKey keyToPublish,\n\t\t\tPublisherPublicKeyDigest signingKeyID, KeyLocator signingKeyLocator,\n\t\t\tCCNFlowControl flowController,\n\t\t\tSaveType saveType, \n\t\t\tCCNHandle handle,\n\t\t\tKeyManager keyManager) \n\n\tthrows IOException {\n\n\t\tif ((null == keyManager) && (null != handle)) {\n\t\t\tkeyManager = handle.keyManager();\n\t\t}\n\t\t\n\t\tif ((null == keyManager) || ((null == flowController) && (null == handle)) || \n\t\t\t\t((null == flowController) && (null == saveType))) {\n\t\t\t\n\t\t\t// TODO DKS not quite right type...\n\t\t\tthrow new ErrorStateException(\"Must provide a flow controller or a handle and a save type, and a key manager!\");\n\t\t}\n\t\t\n\t\t// Now, finally; it's not published, so make an object to write it\n\t\t// with. We've already tried to pull it, so don't try here. Will\n\t\t// set publisher info below.\n\t\t\n\t\t// Need a key locator to stick in data entry for\n\t\t// locator. Could use key itself, but then would have\n\t\t// key both in the content for this item and in the\n\t\t// key locator, which is redundant. Use naming form\n\t\t// that allows for self-referential key names -- the\n\t\t// CCN equivalent of a \"self-signed cert\". Means that\n\t\t// we will refer to only the base key name and the publisher ID.\n\t\tif (null == signingKeyID) {\n\t\t\tsigningKeyID = keyManager.getDefaultKeyID();\n\t\t}\n\n\t\t// Reallly do want == here\n\t\tif ((null == signingKeyLocator) || (SELF_SIGNED_KEY_LOCATOR == signingKeyLocator)) {\n\t\t\t\n\t\t\tKeyLocator existingLocator = keyManager.getKeyLocator(signingKeyID);\n\t\t\t\n\t\t\t// If we've asked for this to be self-signed, or we have made the default KEY\n\t\t\t// type key locator, make this a self-signed key.\n\t\t\tif ((SELF_SIGNED_KEY_LOCATOR == signingKeyLocator) || \n\t\t\t\t\t(existingLocator.type() == KeyLocatorType.KEY)) {\n\t\t\t\tPublisherPublicKeyDigest keyDigest = new PublisherPublicKeyDigest(keyToPublish);\n\t\t\t\tif (signingKeyID.equals(keyDigest)) {\n\t\t\t\t\t// Make a self-referential key locator. For now do not include the\n\t\t\t\t\t// version.\n\t\t\t\t\texistingLocator = new KeyLocator(new KeyName(keyName, signingKeyID));\n\t\t\t\t\tLog.finer(\"Overriding constructed key locator of type KEY, making self-referential locator {0}\", existingLocator);\n\t\t\t\t}\n\t\t\t}\n\t\t\tsigningKeyLocator = existingLocator;\n\t\t}\t\n\t\t\n\t\t// Here is where we get tricky. We might really want the key to be of a particular\n\t\t// version. In general, as we use the network objects to write versioned versioned stuff,\n\t\t// we might not be able to take the last component of a name, if versioned, as the version\n\t\t// to use to save -- might really want <name>/<version1>/<version2>. So unless we want to \n\t\t// make that impossible to achieve, we need to not have the network objects take the \n\t\t// name <name>/<version1> and save to <version1> (though they read from <version1> just\n\t\t// fine given the same). You always want to save to a new version, unless someone tells you\n\t\t// something different from the outside. \n\t\t// Come up with a contorted option. If you want to publish <version>/<version> stuff, you\n\t\t// need to pass in the second version...\n\t\t\n\t\tCCNTime keyVersion = null; // do we force a version?\n\t\tTuple<ContentName, byte []> nameAndVersion = VersioningProfile.cutTerminalVersion(keyName);\n\n\t\tPublicKeyObject keyObject = null;\n\t\tif (null != flowController) {\n\t\t\t// If a flow controller was specified, use that\n\t\t\tkeyObject = new PublicKeyObject(nameAndVersion.first(), keyToPublish, \n\t\t\t\t\t\t\t\t\t\t\tsigningKeyID, signingKeyLocator, flowController);\n\t\t} else {\n\t\t\t// No flow controller given, use specified saveType.\n\t\t\tkeyObject = new PublicKeyObject(nameAndVersion.first(), keyToPublish, saveType,\n\t\t\t\t\t\t\t\t\t\t\tsigningKeyID, signingKeyLocator, handle);\n\t\t}\n\t\t\n\t\tif (null != nameAndVersion.second()) {\n\t\t\tkeyVersion = VersioningProfile.getVersionComponentAsTimestamp(nameAndVersion.second());\n\t\t}\n\t\tLog.info(\"publishKey: key not previously published, making new key object {0} with version {1} displayed as {2}\", \n\t\t\t\tkeyObject.getVersionedName(), keyVersion, \n\t\t\t\t((null != nameAndVersion.second()) ? ContentName.componentPrintURI(nameAndVersion.second()) : \"<no version>\"));\n\n\t\t// Eventually may want to find something already published and link to it, but be simple here.\n\n\t\tif (!keyObject.save(keyVersion)) {\n\t\t\tLog.info(\"Not saving key when we thought we needed to: desired key value {0}, have key value {1}, \" +\n\t\t\t\t\tkeyToPublish, new PublisherPublicKeyDigest(keyObject.publicKey()));\n\t\t} else {\n\t\t\tLog.info(\"Published key {0} to name {1} with key locator {2}.\", keyToPublish, keyObject.getVersionedName(), signingKeyLocator);\n\t\t}\n\t\tkeyManager.getPublicKeyCache().remember(keyObject);\n\t\treturn keyObject;\n\t}","id":13878,"modified_method":"/**\n\t * Note: this is the lowest level interface to key publication; there are many higher-level\n\t * interfaces that are probably what you want. This needs to be public to get across\n\t * package constraints.\n\t * Publish a signed record for this key. We've already decided we need to publish,\n\t * and how; no more checks are made to see if the key already exists.\n\t * \n\t * @param keyName the key's content name. Will add a version when saving if it doesn't\n\t * \thave one already. If it does have a version, will use that one (see below for effect\n\t * \tof version on the key locator). (Note that this is not\n\t * \t\tstandard behavior for savable network content, which needs its version explicitly\n\t * \t\tset.)\n\t * @param keyToPublish the public key to publish\n\t * @param keyID the publisher id\n\t * @param signingKeyID the key id of the key pair to sign with\n\t * @param signingKeyLocator the key locator to use if we save this key (if it is not already published).\n\t * \tIf not specified, we look for the default locator for the signing key. If there is none,\n\t * \tand we are signing with the same key we are publishing, we build a\n\t * \tself-referential key locator, using the name passed in (versioned or not).\n\t * @param flowController flow controller to use. If non-null, saveType is ignored.\n\t * @param saveType -- if we don't want to hand in a special-purpose flow controller, set saveType to RAW\n\t *   or REPO to get standard publishing behavior.\n\t * @param handle the handle to use if we haven't specified a flow controller. Makes a flow controller\n\t * \tof the type specified by saveType. \n\t * @param keyManager the key manager to use to pull additional signing information (default keys\n\t *   and locators if not specified). If null, taken from handle. Also publish key added to its cache.\n\t * @return the published information about this key, whether we published it or someone else had\n\t * @throws IOException\n\t */\n\tpublic static PublicKeyObject publishKey(\n\t\t\tContentName keyName, PublicKey keyToPublish,\n\t\t\tPublisherPublicKeyDigest signingKeyID, KeyLocator signingKeyLocator,\n\t\t\tCCNFlowControl flowController,\n\t\t\tSaveType saveType, \n\t\t\tCCNHandle handle,\n\t\t\tKeyManager keyManager) \n\n\tthrows IOException {\n\n\t\tif ((null == keyManager) && (null != handle)) {\n\t\t\tkeyManager = handle.keyManager();\n\t\t}\n\t\t\n\t\tif ((null == keyManager) || ((null == flowController) && (null == handle)) || \n\t\t\t\t((null == flowController) && (null == saveType))) {\n\t\t\t\n\t\t\t// TODO DKS not quite right type...\n\t\t\tthrow new ErrorStateException(\"Must provide a flow controller or a handle and a save type, and a key manager!\");\n\t\t}\n\t\t\n\t\t// Now, finally; it's not published, so make an object to write it\n\t\t// with. We've already tried to pull it, so don't try here. Will\n\t\t// set publisher info below.\n\t\t\n\t\t// Need a key locator to stick in data entry for\n\t\t// locator. Could use key itself, but then would have\n\t\t// key both in the content for this item and in the\n\t\t// key locator, which is redundant. Use naming form\n\t\t// that allows for self-referential key names -- the\n\t\t// CCN equivalent of a \"self-signed cert\". Means that\n\t\t// we will refer to only the base key name and the publisher ID.\n\t\tif (null == signingKeyID) {\n\t\t\tsigningKeyID = keyManager.getDefaultKeyID();\n\t\t}\n\n\t\t// Reallly do want == here\n\t\tif ((null == signingKeyLocator) || (SELF_SIGNED_KEY_LOCATOR == signingKeyLocator)) {\n\t\t\t\n\t\t\tKeyLocator existingLocator = keyManager.getKeyLocator(signingKeyID);\n\t\t\t\n\t\t\t// If we've asked for this to be self-signed, or we have made the default KEY\n\t\t\t// type key locator, make this a self-signed key.\n\t\t\tif ((SELF_SIGNED_KEY_LOCATOR == signingKeyLocator) || \n\t\t\t\t\t(existingLocator.type() == KeyLocatorType.KEY)) {\n\t\t\t\tPublisherPublicKeyDigest keyDigest = new PublisherPublicKeyDigest(keyToPublish);\n\t\t\t\tif (signingKeyID.equals(keyDigest)) {\n\t\t\t\t\t// Make a self-referential key locator. For now do not include the\n\t\t\t\t\t// version.\n\t\t\t\t\texistingLocator = new KeyLocator(new KeyName(keyName, signingKeyID));\n\t\t\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.FINER)) {\n\t\t\t\t\t\tLog.finer(Log.FAC_KEYS, \"Overriding constructed key locator of type KEY, making self-referential locator {0}\", existingLocator);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tsigningKeyLocator = existingLocator;\n\t\t}\t\n\t\t\n\t\t// Here is where we get tricky. We might really want the key to be of a particular\n\t\t// version. In general, as we use the network objects to write versioned versioned stuff,\n\t\t// we might not be able to take the last component of a name, if versioned, as the version\n\t\t// to use to save -- might really want <name>/<version1>/<version2>. So unless we want to \n\t\t// make that impossible to achieve, we need to not have the network objects take the \n\t\t// name <name>/<version1> and save to <version1> (though they read from <version1> just\n\t\t// fine given the same). You always want to save to a new version, unless someone tells you\n\t\t// something different from the outside. \n\t\t// Come up with a contorted option. If you want to publish <version>/<version> stuff, you\n\t\t// need to pass in the second version...\n\t\t\n\t\tCCNTime keyVersion = null; // do we force a version?\n\t\tTuple<ContentName, byte []> nameAndVersion = VersioningProfile.cutTerminalVersion(keyName);\n\n\t\tPublicKeyObject keyObject = null;\n\t\tif (null != flowController) {\n\t\t\t// If a flow controller was specified, use that\n\t\t\tkeyObject = new PublicKeyObject(nameAndVersion.first(), keyToPublish, \n\t\t\t\t\t\t\t\t\t\t\tsigningKeyID, signingKeyLocator, flowController);\n\t\t} else {\n\t\t\t// No flow controller given, use specified saveType.\n\t\t\tkeyObject = new PublicKeyObject(nameAndVersion.first(), keyToPublish, saveType,\n\t\t\t\t\t\t\t\t\t\t\tsigningKeyID, signingKeyLocator, handle);\n\t\t}\n\t\t\n\t\tif (null != nameAndVersion.second()) {\n\t\t\tkeyVersion = VersioningProfile.getVersionComponentAsTimestamp(nameAndVersion.second());\n\t\t}\n\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.INFO)) { \n\t\t\tLog.info(Log.FAC_KEYS, \"publishKey: key not previously published, making new key object {0} with version {1} displayed as {2}\", \n\t\t\t\tkeyObject.getVersionedName(), keyVersion, \n\t\t\t\t((null != nameAndVersion.second()) ? ContentName.componentPrintURI(nameAndVersion.second()) : \"<no version>\"));\n\t\t}\n\t\t\n\t\t// Eventually may want to find something already published and link to it, but be simple here.\n\n\t\tif (!keyObject.save(keyVersion)) {\n\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.INFO)) { \n\t\t\t\tLog.info(Log.FAC_KEYS, \"Not saving key when we thought we needed to: desired key value {0}, have key value {1}, \" +\n\t\t\t\t\tkeyToPublish, new PublisherPublicKeyDigest(keyObject.publicKey()));\n\t\t\t}\n\t\t} else {\n\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.INFO)) { \n\t\t\t\tLog.info(Log.FAC_KEYS, \"Published key {0} to name {1} with key locator {2}.\", keyToPublish, keyObject.getVersionedName(), signingKeyLocator);\n\t\t\t}\n\t\t}\n\t\tkeyManager.getPublicKeyCache().remember(keyObject);\n\t\treturn keyObject;\n\t}","commit_id":"94eaf6df75f20f79aba9b158c86d76d9f047bddd","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"/**\n\t * Set the default key manager to one of our choice. If you do this, be careful on \n\t * calling close().\n\t */\n\tpublic static synchronized void setDefaultKeyManager(KeyManager keyManager) {\n\t\tif (null == keyManager) {\n\t\t\tLog.warning(\"Setting default key manager to NULL. Default user key manager will be loaded on next request for default key manager.\");\n\t\t}\n\t\tcloseDefaultKeyManager();\n\t\tLog.info(\"Setting default key manager: new KeyManager {0}\", keyManager.getClass().getName());\n\t\t_defaultKeyManager = keyManager;\n\t}","id":13879,"modified_method":"/**\n\t * Set the default key manager to one of our choice. If you do this, be careful on \n\t * calling close().\n\t */\n\tpublic static synchronized void setDefaultKeyManager(KeyManager keyManager) {\n\t\tif (null == keyManager) {\n\t\t\tLog.warning(\"Setting default key manager to NULL. Default user key manager will be loaded on next request for default key manager.\");\n\t\t}\n\t\tcloseDefaultKeyManager();\n\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.INFO)) { \n\t\t\tLog.info(Log.FAC_KEYS, \"Setting default key manager: new KeyManager {0}\", keyManager.getClass().getName());\n\t\t}\n\t\t_defaultKeyManager = keyManager;\n\t}","commit_id":"94eaf6df75f20f79aba9b158c86d76d9f047bddd","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"/**\n\t * Read data from a newly opened, or newly created keystore.\n\t * @param keyStore\n\t * @throws ConfigurationException \n\t */\n\tprotected boolean loadValuesFromKeystore(KeyStoreInfo keyStoreInfo) throws ConfigurationException {\n\t\tKeyStore.PrivateKeyEntry entry = null;\n\t\ttry {\n\t\t\tif (Log.isLoggable(Level.INFO))\n\t\t\t\tLog.info(\"Loading key store {0} version {1} version component {2} millis {3}\", keyStoreInfo.getKeyStoreURI(), keyStoreInfo.getVersion().toString(), \n\t\t\t\t\t\tVersioningProfile.printAsVersionComponent(keyStoreInfo.getVersion()), keyStoreInfo.getVersion().getTime());\n\t\t\t// Default alias should be a PrivateKeyEntry\n\t\t\tentry = (KeyStore.PrivateKeyEntry)keyStoreInfo.getKeyStore().getEntry(_defaultAlias, new KeyStore.PasswordProtection(_password));\n\t\t\tif (null == entry) {\n\t\t\t\tLog.warning(\"Cannot get default key entry: \" + _defaultAlias);\n\t\t\t\tgenerateConfigurationException(\"Cannot retrieve default user keystore entry.\", null);\n\t\t\t}\n\t\t    X509Certificate certificate = (X509Certificate)entry.getCertificate();\n\t\t    if (null == certificate) {\n\t\t\t\tLog.warning(\"Cannot get certificate for default key entry: \" + _defaultAlias);\n\t\t\t\tgenerateConfigurationException(\"Cannot retrieve certificate for default user keystore entry.\", null);\t\t    \t\n\t\t    }\n\t\t    _defaultKeyID = new PublisherPublicKeyDigest(certificate.getPublicKey());\n\t\t\tif (Log.isLoggable(Level.INFO))\n\t\t\t\tLog.info(\"Default key ID for user \" + _userName + \": \" + _defaultKeyID);\n\t\t\t\n\t\t\t_privateKeyCache.loadKeyStore(keyStoreInfo, _password, _publicKeyCache);\n\n\t\t} catch (Exception e) {\n\t\t\tgenerateConfigurationException(\"Cannot retrieve default user keystore entry.\", e);\n\t\t}    \n\t\treturn true;\n\t}","id":13880,"modified_method":"/**\n\t * Read data from a newly opened, or newly created keystore.\n\t * @param keyStore\n\t * @throws ConfigurationException \n\t */\n\tprotected boolean loadValuesFromKeystore(KeyStoreInfo keyStoreInfo) throws ConfigurationException {\n\t\tKeyStore.PrivateKeyEntry entry = null;\n\t\ttry {\n\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.INFO))\n\t\t\t\tLog.info(Log.FAC_KEYS, \"Loading key store {0} version {1} version component {2} millis {3}\", keyStoreInfo.getKeyStoreURI(), keyStoreInfo.getVersion().toString(), \n\t\t\t\t\t\tVersioningProfile.printAsVersionComponent(keyStoreInfo.getVersion()), keyStoreInfo.getVersion().getTime());\n\t\t\t// Default alias should be a PrivateKeyEntry\n\t\t\tentry = (KeyStore.PrivateKeyEntry)keyStoreInfo.getKeyStore().getEntry(_defaultAlias, new KeyStore.PasswordProtection(_password));\n\t\t\tif (null == entry) {\n\t\t\t\tLog.warning(\"Cannot get default key entry: \" + _defaultAlias);\n\t\t\t\tgenerateConfigurationException(\"Cannot retrieve default user keystore entry.\", null);\n\t\t\t}\n\t\t    X509Certificate certificate = (X509Certificate)entry.getCertificate();\n\t\t    if (null == certificate) {\n\t\t\t\tLog.warning(\"Cannot get certificate for default key entry: \" + _defaultAlias);\n\t\t\t\tgenerateConfigurationException(\"Cannot retrieve certificate for default user keystore entry.\", null);\t\t    \t\n\t\t    }\n\t\t    _defaultKeyID = new PublisherPublicKeyDigest(certificate.getPublicKey());\n\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.INFO))\n\t\t\t\tLog.info(Log.FAC_KEYS, \"Default key ID for user \" + _userName + \": \" + _defaultKeyID);\n\t\t\t\n\t\t\t_privateKeyCache.loadKeyStore(keyStoreInfo, _password, _publicKeyCache);\n\n\t\t} catch (Exception e) {\n\t\t\tgenerateConfigurationException(\"Cannot retrieve default user keystore entry.\", e);\n\t\t}    \n\t\treturn true;\n\t}","commit_id":"a72df47ac7ea091fd61a3a10685bec939a059304","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"/**\n\t * Get public key for a publisher, given a key locator.\n\t * Times out after timeout amount of time elapsed \n\t * @param publisherID publisher public key digest\n\t * @param keyLocator key locator\n\t * @param timeout timeout value\n\t * @return public key\n\t */\n\t@Override\n\tpublic PublicKey getPublicKey(\n\t\t\tPublisherPublicKeyDigest desiredKeyID, KeyLocator keyLocator, \n\t\t\tlong timeout) throws IOException {\t\t\n\t\t\n\t\tif (Log.isLoggable(Level.FINER))\n\t\t\tLog.finer(\"getPublicKey: retrieving key: \" + desiredKeyID + \" located at: \" + keyLocator);\n\t\t// this will try local caches, the locator itself, and if it \n\t\t// has to, will go to the network. The result will be stored in the cache.\n\t\t// All this tells us is that the key matches the publisher. For whether\n\t\t// or not we should trust it for some reason, we have to get fancy.\n\t\treturn getPublicKeyCache().getPublicKey(desiredKeyID, keyLocator, timeout, handle());\n\t}","id":13881,"modified_method":"/**\n\t * Get public key for a publisher, given a key locator.\n\t * Times out after timeout amount of time elapsed \n\t * @param publisherID publisher public key digest\n\t * @param keyLocator key locator\n\t * @param timeout timeout value\n\t * @return public key\n\t */\n\t@Override\n\tpublic PublicKey getPublicKey(\n\t\t\tPublisherPublicKeyDigest desiredKeyID, KeyLocator keyLocator, \n\t\t\tlong timeout) throws IOException {\t\t\n\t\t\n\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.FINER))\n\t\t\tLog.finer(Log.FAC_KEYS, \"getPublicKey: retrieving key: \" + desiredKeyID + \" located at: \" + keyLocator);\n\t\t// this will try local caches, the locator itself, and if it \n\t\t// has to, will go to the network. The result will be stored in the cache.\n\t\t// All this tells us is that the key matches the publisher. For whether\n\t\t// or not we should trust it for some reason, we have to get fancy.\n\t\treturn getPublicKeyCache().getPublicKey(desiredKeyID, keyLocator, timeout, handle());\n\t}","commit_id":"a72df47ac7ea091fd61a3a10685bec939a059304","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"/**\n\t * Creates a key store file\n\t * @throws ConfigurationException\n\t */\n\tprotected Tuple<KeyStoreInfo, OutputStream> createKeyStoreWriteStream() throws ConfigurationException, IOException {\n\t\t\n\t\tFile keyStoreDir = new File(_keyStoreDirectory);\n\t\tif (!keyStoreDir.exists()) {\n\t\t\tif (!keyStoreDir.mkdirs()) {\n\t\t\t\tthrow new ConfigurationException(\"Cannot create keystore directory: \" + keyStoreDir.getAbsolutePath(), null);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Alas, until 1.6, we can't set permissions on the file or directory...\n\t\t// TODO DKS when switch to 1.6, add permission settings.\n\t\tFile keyStoreFile  = new File(keyStoreDir, _keyStoreFileName);\n\t\tif (keyStoreFile.exists()) {\n\t\t\tLog.warning(\"Key store file {0} already exists (length {1}), overrwriting.\", keyStoreFile.getAbsolutePath(), keyStoreFile.length());\n\t\t}\n\n\t    FileOutputStream out = null;\n\t\ttry {\n\t\t\tif (Log.isLoggable(Level.FINEST))\n\t\t\t\tLog.finest(\"Creating FileOutputStream to write keystore to file \" + keyStoreFile.getAbsolutePath());\n\t\t\tout = new FileOutputStream(keyStoreFile);\n\t\t} catch (FileNotFoundException e) {\n\t\t\tgenerateConfigurationException(\"Cannot create keystore file: \" + keyStoreFile.getAbsolutePath(), e);\n\t\t} \n\t\t\n\t\tKeyStoreInfo storeInfo = new KeyStoreInfo(keyStoreFile.toURI().toString(), null, new CCNTime(keyStoreFile.lastModified()));\n\t    return new Tuple<KeyStoreInfo, OutputStream>(storeInfo, out);   \n\t}","id":13882,"modified_method":"/**\n\t * Creates a key store file\n\t * @throws ConfigurationException\n\t */\n\tprotected Tuple<KeyStoreInfo, OutputStream> createKeyStoreWriteStream() throws ConfigurationException, IOException {\n\t\t\n\t\tFile keyStoreDir = new File(_keyStoreDirectory);\n\t\tif (!keyStoreDir.exists()) {\n\t\t\tif (!keyStoreDir.mkdirs()) {\n\t\t\t\tthrow new ConfigurationException(\"Cannot create keystore directory: \" + keyStoreDir.getAbsolutePath(), null);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Alas, until 1.6, we can't set permissions on the file or directory...\n\t\t// TODO DKS when switch to 1.6, add permission settings.\n\t\tFile keyStoreFile  = new File(keyStoreDir, _keyStoreFileName);\n\t\tif (keyStoreFile.exists()) {\n\t\t\tLog.warning(\"Key store file {0} already exists (length {1}), overrwriting.\", keyStoreFile.getAbsolutePath(), keyStoreFile.length());\n\t\t}\n\n\t    FileOutputStream out = null;\n\t\ttry {\n\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.FINEST))\n\t\t\t\tLog.finest(Log.FAC_KEYS, \"Creating FileOutputStream to write keystore to file \" + keyStoreFile.getAbsolutePath());\n\t\t\tout = new FileOutputStream(keyStoreFile);\n\t\t} catch (FileNotFoundException e) {\n\t\t\tgenerateConfigurationException(\"Cannot create keystore file: \" + keyStoreFile.getAbsolutePath(), e);\n\t\t} \n\t\t\n\t\tKeyStoreInfo storeInfo = new KeyStoreInfo(keyStoreFile.toURI().toString(), null, new CCNTime(keyStoreFile.lastModified()));\n\t    return new Tuple<KeyStoreInfo, OutputStream>(storeInfo, out);   \n\t}","commit_id":"a72df47ac7ea091fd61a3a10685bec939a059304","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"/**\n\t * Load values of relevance to a key manager. Most importantly, loads default\n\t * key locator information\n\t * @return true if successful, false on error\n\t * @throws ConfigurationException\n\t */\n\tprotected boolean loadValuesFromConfiguration(KeyStoreInfo keyStoreInfo) throws ConfigurationException {\n\t\t// Load key locator information. Might be in two places -- system property/environment variable,\n\t\t// or configuration file. Start with just system property, first round just specify\n\t\t// name, not publisher.\n\t\t// Starting step -- read a key name (no publisher) key locator just for our default\n\t\t// key from an environment variable/system property.\n\t\tString defaultKeyLocatorName = UserConfiguration.defaultKeyLocator();\n\t\t// Doesn't even support publisher specifications yet.\n\t\tif (null != defaultKeyLocatorName) {\n\t\t\ttry {\n\t\t\t\tContentName locatorName = ContentName.fromNative(defaultKeyLocatorName);\n\t\t\t\tsetKeyLocator(getDefaultKeyID(), new KeyLocator(locatorName));\n\t\t\t} catch (MalformedContentNameStringException e) {\n\t\t\t\tgenerateConfigurationException(\"Cannot parse key locator name {0}!\", e);\n\t\t\t}\n\t\t}\n\n\t\t// TODO fill in the rest\n\t\t// Load values from our configuration file, which should be read in UserConfiguration.\n\t\t\n\t\t// Currently have saved data override command line, which might be bad...\n\t\t// also use that to preconfigure things like keystores and such\n\t\t// for right now, just as a super-fast trick, use java serialization to get out minmal data necessary\n\t\tif ((null == _keyStoreDirectory) || (null == _configurationFileName))  {\n\t\t\tif (Log.isLoggable(Level.INFO)) {\n\t\t\t\tLog.info(\"loadValuesFromConfiguration: No configuration directory/file set, not loading.\");\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\tFile configurationFile = new File(_keyStoreDirectory, _configurationFileName);\n\t\tif (Log.isLoggable(Level.INFO)) {\n\t\t\tLog.info(\"loadValuesFromConfiguration: attempting to load configuration from {0}\", configurationFile.getAbsolutePath());\n\t\t}\n\t\tif (configurationFile.exists()) {\n\t\t\ttry {\n\t\t\t\tObjectInputStream input = new ObjectInputStream(new FileInputStream(configurationFile));\n\t\t\t\t\n\t\t\t\tHashMap<PublisherPublicKeyDigest, KeyLocator> savedKeyLocators = readObject(input);\n\t\t\t\t_currentKeyLocators.putAll(savedKeyLocators);\n\t\t\t\t\n\t\t\t\tkeyStoreInfo.setConfigurationFileURI(configurationFile.toURI().toString());\n\t\t\t\t\n\t\t\t\tif (Log.isLoggable(Level.INFO)) {\n\t\t\t\t\tLog.info(\"Loaded configuration data from file {0}, got {1} key locator values.\", \n\t\t\t\t\t\t\tconfigurationFile.getAbsolutePath(), savedKeyLocators.size());\n\t\t\t\t}\n\n\t\t\t} catch (FileNotFoundException e) {\n\t\t\t\tthrow new ConfigurationException(\"Cannot read configuration file even though it claims to exist: \" + configurationFile.getAbsolutePath(), e);\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new ConfigurationException(\"I/O error reading configuration file: \" + configurationFile.getAbsolutePath(), e);\n\t\t\t} catch (ClassNotFoundException e) {\n\t\t\t\tthrow new ConfigurationException(\"ClassNotFoundException deserializing configuration file: \" + configurationFile.getAbsolutePath(), e);\n\t\t\t}\n\t\t} else {\n\t\t\tif (Log.isLoggable(Level.INFO)) {\n\t\t\t\tLog.info(\"loadValuesFromConfiguration: configuration file {0} does not exist.\", configurationFile.getAbsolutePath());\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn true;\n\t}","id":13883,"modified_method":"/**\n\t * Load values of relevance to a key manager. Most importantly, loads default\n\t * key locator information\n\t * @return true if successful, false on error\n\t * @throws ConfigurationException\n\t */\n\tprotected boolean loadValuesFromConfiguration(KeyStoreInfo keyStoreInfo) throws ConfigurationException {\n\t\t// Load key locator information. Might be in two places -- system property/environment variable,\n\t\t// or configuration file. Start with just system property, first round just specify\n\t\t// name, not publisher.\n\t\t// Starting step -- read a key name (no publisher) key locator just for our default\n\t\t// key from an environment variable/system property.\n\t\tString defaultKeyLocatorName = UserConfiguration.defaultKeyLocator();\n\t\t// Doesn't even support publisher specifications yet.\n\t\tif (null != defaultKeyLocatorName) {\n\t\t\ttry {\n\t\t\t\tContentName locatorName = ContentName.fromNative(defaultKeyLocatorName);\n\t\t\t\tsetKeyLocator(getDefaultKeyID(), new KeyLocator(locatorName));\n\t\t\t} catch (MalformedContentNameStringException e) {\n\t\t\t\tgenerateConfigurationException(\"Cannot parse key locator name {0}!\", e);\n\t\t\t}\n\t\t}\n\n\t\t// TODO fill in the rest\n\t\t// Load values from our configuration file, which should be read in UserConfiguration.\n\t\t\n\t\t// Currently have saved data override command line, which might be bad...\n\t\t// also use that to preconfigure things like keystores and such\n\t\t// for right now, just as a super-fast trick, use java serialization to get out minmal data necessary\n\t\tif ((null == _keyStoreDirectory) || (null == _configurationFileName))  {\n\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.INFO)) {\n\t\t\t\tLog.info(Log.FAC_KEYS, \"loadValuesFromConfiguration: No configuration directory/file set, not loading.\");\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\tFile configurationFile = new File(_keyStoreDirectory, _configurationFileName);\n\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.INFO)) {\n\t\t\tLog.info(Log.FAC_KEYS, \"loadValuesFromConfiguration: attempting to load configuration from {0}\", configurationFile.getAbsolutePath());\n\t\t}\n\t\tif (configurationFile.exists()) {\n\t\t\ttry {\n\t\t\t\tObjectInputStream input = new ObjectInputStream(new FileInputStream(configurationFile));\n\t\t\t\t\n\t\t\t\tHashMap<PublisherPublicKeyDigest, KeyLocator> savedKeyLocators = readObject(input);\n\t\t\t\t_currentKeyLocators.putAll(savedKeyLocators);\n\t\t\t\t\n\t\t\t\tkeyStoreInfo.setConfigurationFileURI(configurationFile.toURI().toString());\n\t\t\t\t\n\t\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.INFO)) {\n\t\t\t\t\tLog.info(Log.FAC_KEYS, \"Loaded configuration data from file {0}, got {1} key locator values.\", \n\t\t\t\t\t\t\tconfigurationFile.getAbsolutePath(), savedKeyLocators.size());\n\t\t\t\t}\n\n\t\t\t} catch (FileNotFoundException e) {\n\t\t\t\tthrow new ConfigurationException(\"Cannot read configuration file even though it claims to exist: \" + configurationFile.getAbsolutePath(), e);\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new ConfigurationException(\"I/O error reading configuration file: \" + configurationFile.getAbsolutePath(), e);\n\t\t\t} catch (ClassNotFoundException e) {\n\t\t\t\tthrow new ConfigurationException(\"ClassNotFoundException deserializing configuration file: \" + configurationFile.getAbsolutePath(), e);\n\t\t\t}\n\t\t} else {\n\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.INFO)) {\n\t\t\t\tLog.info(Log.FAC_KEYS, \"loadValuesFromConfiguration: configuration file {0} does not exist.\", configurationFile.getAbsolutePath());\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn true;\n\t}","commit_id":"a72df47ac7ea091fd61a3a10685bec939a059304","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"/**\n\t * If a key store file exists, reads in the key; \n\t * otherwise, create a key store file and a key pair.\n\t * @param keyStoreFileName the file containing the keystore, if null\n\t * \tuses default in user's home directory.\n\t * @throws ConfigurationException\n\t */\n\tprotected KeyStoreInfo loadKeyStore() throws ConfigurationException, IOException {\n\t\t\n\t\tFile keyStoreFile = new File(_keyStoreDirectory, _keyStoreFileName);\n\t\t\n\t\tKeyStoreInfo keyStoreInfo = null;\n\t\tif (!keyStoreFile.exists() || (0 == keyStoreFile.length())) {\n\t\t\t// If the BC configuration is screwed up, sometimes a 0-length keystore\n\t\t\t// gets created. If so, blow it away and make a new one.\n\t\t\tLog.info(\"Creating new CCN key store...\" + keyStoreFile.getAbsolutePath());\n\t\t\tkeyStoreInfo = createKeyStore();\n\t\t\tLog.info(\"...created key store. Version: {0} ({1} ms) Last modified: {2}. Will now load normally.\", \n\t\t\t\t\tkeyStoreInfo.getVersion(), keyStoreInfo.getVersion().getTime(), keyStoreFile.lastModified());\n\t\t\t\n\t\t\t// For some reason, if we just go from here, sometimes we end up with very slightly\n\t\t\t// different stat times on the file. This causes havoc with versioning. So,\n\t\t\t// read the file back in from scratch.\n\t\t\tkeyStoreInfo = null;\n\t\t}\n\t\tif (null == keyStoreInfo) {\n\t\t\tFileInputStream in = null;\n\t\t\tKeyStore keyStore = null;\n\t\t\tif (Log.isLoggable(Level.INFO))\n\t\t\t\tLog.info(\"Loading CCN key store from \" + keyStoreFile.getAbsolutePath() + \"...last modified \" + keyStoreFile.lastModified() + \"(ms).\");\n\t\t\ttry {\n\t\t\t\tin = new FileInputStream(keyStoreFile);\n\t\t\t\tkeyStore = readKeyStore(in);\n\t\t\t\tkeyStoreInfo = new KeyStoreInfo(keyStoreFile.toURI().toString(), keyStore, new CCNTime(keyStoreFile.lastModified()));\n\t\t\t\tif (Log.isLoggable(Level.INFO))\n\t\t\t\t\tLog.info(\"Loaded CCN key store from \" + keyStoreFile.getAbsolutePath() + \"...version \" + keyStoreInfo.getVersion() + \" ms: \" + keyStoreInfo.getVersion().getTime());\n\t\t\t} catch (FileNotFoundException e) {\n\t\t\t\tLog.warning(\"Cannot open existing key store file: \" + _keyStoreFileName);\n\t\t\t\tthrow e;\n\t\t\t} \n\t\t}\n\t\treturn keyStoreInfo;\n\t}","id":13884,"modified_method":"/**\n\t * If a key store file exists, reads in the key; \n\t * otherwise, create a key store file and a key pair.\n\t * @param keyStoreFileName the file containing the keystore, if null\n\t * \tuses default in user's home directory.\n\t * @throws ConfigurationException\n\t */\n\tprotected KeyStoreInfo loadKeyStore() throws ConfigurationException, IOException {\n\t\t\n\t\tFile keyStoreFile = new File(_keyStoreDirectory, _keyStoreFileName);\n\t\t\n\t\tKeyStoreInfo keyStoreInfo = null;\n\t\tif (!keyStoreFile.exists() || (0 == keyStoreFile.length())) {\n\t\t\t// If the BC configuration is screwed up, sometimes a 0-length keystore\n\t\t\t// gets created. If so, blow it away and make a new one.\n\t\t\tLog.info(Log.FAC_KEYS, \"Creating new CCN key store...\" + keyStoreFile.getAbsolutePath());\n\t\t\tkeyStoreInfo = createKeyStore();\n\t\t\tLog.info(Log.FAC_KEYS, \"...created key store. Version: {0} ({1} ms) Last modified: {2}. Will now load normally.\", \n\t\t\t\t\tkeyStoreInfo.getVersion(), keyStoreInfo.getVersion().getTime(), keyStoreFile.lastModified());\n\t\t\t\n\t\t\t// For some reason, if we just go from here, sometimes we end up with very slightly\n\t\t\t// different stat times on the file. This causes havoc with versioning. So,\n\t\t\t// read the file back in from scratch.\n\t\t\tkeyStoreInfo = null;\n\t\t}\n\t\tif (null == keyStoreInfo) {\n\t\t\tFileInputStream in = null;\n\t\t\tKeyStore keyStore = null;\n\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.INFO))\n\t\t\t\tLog.info(Log.FAC_KEYS, \"Loading CCN key store from \" + keyStoreFile.getAbsolutePath() + \"...last modified \" + keyStoreFile.lastModified() + \"(ms).\");\n\t\t\ttry {\n\t\t\t\tin = new FileInputStream(keyStoreFile);\n\t\t\t\tkeyStore = readKeyStore(in);\n\t\t\t\tkeyStoreInfo = new KeyStoreInfo(keyStoreFile.toURI().toString(), keyStore, new CCNTime(keyStoreFile.lastModified()));\n\t\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.INFO))\n\t\t\t\t\tLog.info(Log.FAC_KEYS, \"Loaded CCN key store from \" + keyStoreFile.getAbsolutePath() + \"...version \" + keyStoreInfo.getVersion() + \" ms: \" + keyStoreInfo.getVersion().getTime());\n\t\t\t} catch (FileNotFoundException e) {\n\t\t\t\tLog.warning(\"Cannot open existing key store file: \" + _keyStoreFileName);\n\t\t\t\tthrow e;\n\t\t\t} \n\t\t}\n\t\treturn keyStoreInfo;\n\t}","commit_id":"a72df47ac7ea091fd61a3a10685bec939a059304","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"/**\n\t * Get a public key object for this key locator and publisher, if there is one.\n\t * This is less general than the method above, which retrieves keys we have cached\n\t * but which have never been published -- our keys, keys listed explicitly in locators,\n\t * etc.\n\t * @param desiredKeyID\n\t * @param locator\n\t * @param timeout\n\t * @return\n\t * @throws IOException\n\t */\n\t@Override \n\tpublic PublicKeyObject getPublicKeyObject(\n\t\t\tPublisherPublicKeyDigest desiredKeyID, KeyLocator locator, \n\t\t\tlong timeout) throws IOException {\n\t\t\n\t\tif( Log.isLoggable(Level.FINER) )\n\t\t\tLog.finer(\"getPublicKey: retrieving key: \" + desiredKeyID + \" located at: \" + locator);\n\t\t// this will try local caches, the locator itself, and if it \n\t\t// has to, will go to the network. The result will be stored in the cache.\n\t\t// All this tells us is that the key matches the publisher. For whether\n\t\t// or not we should trust it for some reason, we have to get fancy.\n\t\treturn getPublicKeyCache().getPublicKeyObject(desiredKeyID, locator, timeout, handle());\n\t}","id":13885,"modified_method":"/**\n\t * Get a public key object for this key locator and publisher, if there is one.\n\t * This is less general than the method above, which retrieves keys we have cached\n\t * but which have never been published -- our keys, keys listed explicitly in locators,\n\t * etc.\n\t * @param desiredKeyID\n\t * @param locator\n\t * @param timeout\n\t * @return\n\t * @throws IOException\n\t */\n\t@Override \n\tpublic PublicKeyObject getPublicKeyObject(\n\t\t\tPublisherPublicKeyDigest desiredKeyID, KeyLocator locator, \n\t\t\tlong timeout) throws IOException {\n\t\t\n\t\tif( Log.isLoggable(Log.FAC_KEYS, Level.FINER) )\n\t\t\tLog.finer(Log.FAC_KEYS, \"getPublicKey: retrieving key: \" + desiredKeyID + \" located at: \" + locator);\n\t\t// this will try local caches, the locator itself, and if it \n\t\t// has to, will go to the network. The result will be stored in the cache.\n\t\t// All this tells us is that the key matches the publisher. For whether\n\t\t// or not we should trust it for some reason, we have to get fancy.\n\t\treturn getPublicKeyCache().getPublicKeyObject(desiredKeyID, locator, timeout, handle());\n\t}","commit_id":"a72df47ac7ea091fd61a3a10685bec939a059304","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"@Override\n\tpublic PublicKeyObject publishKey(ContentName keyName, \n\t\t\t\t\t\t   PublicKey keyToPublish,\n\t\t\t\t\t\t   PublisherPublicKeyDigest signingKeyID,\n\t\t\t\t\t\t   KeyLocator signingKeyLocator) throws InvalidKeyException, IOException {\n\t\tif (null == keyToPublish) {\n\t\t\tkeyToPublish = getDefaultPublicKey();\n\t\t} \n\t\tPublisherPublicKeyDigest keyDigest = new PublisherPublicKeyDigest(keyToPublish);\n\t\t\n\t\tif (null == keyName) {\n\t\t\tkeyName = getDefaultKeyName(keyDigest);\n\t\t}\n\n\t\tif (Log.isLoggable(Level.INFO))\n\t\t\tLog.info(\"publishKey: publishing key {0} under specified key name {1}\", keyDigest, keyName);\n\n\t\tPublicKeyObject keyObject =  \n\t\t\t_keyServer.serveKey(keyName, keyToPublish, signingKeyID, signingKeyLocator);\n\t\t\n\t\tif (!haveStoredKeyLocator(keyDigest) && (null != keyObject)) {\n\t\t\t// So once we publish self-signed key object, we store a pointer to that\n\t\t\t// to use. Don't override any manually specified values.\n\t\t\tKeyLocator newKeyLocator = new KeyLocator(keyObject.getVersionedName(), keyObject.getContentPublisher());\n\t\t\tsetKeyLocator(keyDigest, newKeyLocator);\n\t\t\tif (Log.isLoggable(Level.INFO))\n\t\t\t\tLog.info(\"publishKey: storing key locator {0} for key {1}\", keyDigest, newKeyLocator);\n\t\t}\n\t\treturn keyObject;\n\t}","id":13886,"modified_method":"@Override\n\tpublic PublicKeyObject publishKey(ContentName keyName, \n\t\t\t\t\t\t   PublicKey keyToPublish,\n\t\t\t\t\t\t   PublisherPublicKeyDigest signingKeyID,\n\t\t\t\t\t\t   KeyLocator signingKeyLocator) throws InvalidKeyException, IOException {\n\t\tif (null == keyToPublish) {\n\t\t\tkeyToPublish = getDefaultPublicKey();\n\t\t} \n\t\tPublisherPublicKeyDigest keyDigest = new PublisherPublicKeyDigest(keyToPublish);\n\t\t\n\t\tif (null == keyName) {\n\t\t\tkeyName = getDefaultKeyName(keyDigest);\n\t\t}\n\n\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.INFO))\n\t\t\tLog.info(Log.FAC_KEYS, \"publishKey: publishing key {0} under specified key name {1}\", keyDigest, keyName);\n\n\t\tPublicKeyObject keyObject =  \n\t\t\t_keyServer.serveKey(keyName, keyToPublish, signingKeyID, signingKeyLocator);\n\t\t\n\t\tif (!haveStoredKeyLocator(keyDigest) && (null != keyObject)) {\n\t\t\t// So once we publish self-signed key object, we store a pointer to that\n\t\t\t// to use. Don't override any manually specified values.\n\t\t\tKeyLocator newKeyLocator = new KeyLocator(keyObject.getVersionedName(), keyObject.getContentPublisher());\n\t\t\tsetKeyLocator(keyDigest, newKeyLocator);\n\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.INFO))\n\t\t\t\tLog.info(Log.FAC_KEYS, \"publishKey: storing key locator {0} for key {1}\", keyDigest, newKeyLocator);\n\t\t}\n\t\treturn keyObject;\n\t}","commit_id":"a72df47ac7ea091fd61a3a10685bec939a059304","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"/**\n\t * Generates a key pair and a certificate, and stores them to the key store\n\t * @throws ConfigurationException\n\t */\n\tsynchronized protected KeyStore createKeyStore(OutputStream out) throws ConfigurationException {\n\n\t\tKeyStore ks = null;\n\t    try {\n\t\t\tif (Log.isLoggable(Level.FINEST))\n\t\t\t\tLog.finest(\"createKeyStore: getting instance of keystore type \" + _keyStoreType);\n\t\t\tks = KeyStore.getInstance(_keyStoreType);\n\t\t\tif (Log.isLoggable(Level.FINEST))\n\t\t\t\tLog.finest(\"createKeyStore: loading key store.\");\n\t\t\tks.load(null, _password);\n\t\t\tif (Log.isLoggable(Level.FINEST))\n\t\t\t\tLog.finest(\"createKeyStore: key store loaded.\");\n\t\t} catch (NoSuchAlgorithmException e) {\n\t\t\tgenerateConfigurationException(\"Cannot load empty default keystore.\", e);\n\t\t} catch (CertificateException e) {\n\t\t\tgenerateConfigurationException(\"Cannot load empty default keystore with no certificates.\", e);\n\t\t} catch (KeyStoreException e) {\n\t\t\tgenerateConfigurationException(\"Cannot create instance of default key store type.\", e);\n\t\t} catch (IOException e) {\n\t\t\tgenerateConfigurationException(\"Cannot initialize instance of default key store type.\", e);\n\t\t}\n\n\t\tKeyPairGenerator kpg = null;\n\t\ttry {\n\t\t\tkpg = KeyPairGenerator.getInstance(UserConfiguration.defaultKeyAlgorithm());\n\t\t} catch (NoSuchAlgorithmException e) {\n\t\t\tgenerateConfigurationException(\"Cannot generate key using default algorithm: \" + UserConfiguration.defaultKeyAlgorithm(), e);\n\t\t}\n\t\tkpg.initialize(UserConfiguration.defaultKeyLength());\n\t\t\n\t\tif (Log.isLoggable(Level.FINEST))\n\t\t\tLog.finest(\"createKeyStore: generating \" + UserConfiguration.defaultKeyLength() + \"-bit \" + UserConfiguration.defaultKeyAlgorithm() + \" key.\");\n\t\tKeyPair userKeyPair = kpg.generateKeyPair();\n\t\tif (Log.isLoggable(Level.FINEST))\n\t\t\tLog.finest(\"createKeyStore: key generated, generating certificate for user \" + _userName);\n\t\t\n\t\t// Generate a self-signed certificate.\n\t\tString subjectDN = \"CN=\" + _userName;\n\t\tX509Certificate ssCert = null;\n\t\ttry {\n\t\t\t ssCert = \n\t\t\t\t MinimalCertificateGenerator.GenerateUserCertificate(userKeyPair, subjectDN, \n\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t\t MinimalCertificateGenerator.MSEC_IN_YEAR);\n\t\t\tif (Log.isLoggable(Level.FINEST))\n\t\t\t\tLog.finest(\"createKeyStore: certificate generated.\");\n\t\t\t \n\t\t} catch (Exception e) {\n\t\t\tgenerateConfigurationException(\"InvalidKeyException generating user internal certificate.\", e);\n\t\t} \n\n\t\tKeyStore.PrivateKeyEntry entry =\n\t        new KeyStore.PrivateKeyEntry(userKeyPair.getPrivate(), new X509Certificate[]{ssCert});\n\n\t    try {\n\t\t\tif (Log.isLoggable(Level.FINEST))\n\t\t\t\tLog.finest(\"createKeyStore: setting private key entry.\");\n\t\t    ks.setEntry(_defaultAlias, entry, \n\t\t\t        new KeyStore.PasswordProtection(_password));\n\t\t    \n\t\t\tif (Log.isLoggable(Level.FINEST))\n\t\t\t\tLog.finest(\"createKeyStore: storing key store.\");\n\t        ks.store(out, _password);\n\t\t\tif (Log.isLoggable(Level.FINEST))\n\t\t\t\tLog.finest(\"createKeyStore: wrote key store.\");\n\n\t\t} catch (NoSuchAlgorithmException e) {\n\t\t\tgenerateConfigurationException(\"Cannot save default keystore.\", e);\n\t\t} catch (CertificateException e) {\n\t\t\tgenerateConfigurationException(\"Cannot save default keystore with no certificates.\", e);\n\t    } catch (KeyStoreException e) {\n\t    \tgenerateConfigurationException(\"Cannot set private key entry for user default key\", e);\n\t\t} catch (IOException e) {\n\t\t\tgenerateConfigurationException(\"Cannot write keystore file: \" + _keyStoreFileName, e);\n\t\t} finally {\n\t        if (out != null) {\n\t            try {\n\t\t\t\t\tout.close();\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tLog.warning(\"IOException closing key store file after load.\");\n\t\t\t\t\tLog.warningStackTrace(e);\n\t\t\t\t}\n\t        }\n\t    }\n\t\treturn ks;\n\t}","id":13887,"modified_method":"/**\n\t * Generates a key pair and a certificate, and stores them to the key store\n\t * @throws ConfigurationException\n\t */\n\tsynchronized protected KeyStore createKeyStore(OutputStream out) throws ConfigurationException {\n\n\t\tKeyStore ks = null;\n\t    try {\n\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.FINEST))\n\t\t\t\tLog.finest(Log.FAC_KEYS, \"createKeyStore: getting instance of keystore type \" + _keyStoreType);\n\t\t\tks = KeyStore.getInstance(_keyStoreType);\n\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.FINEST))\n\t\t\t\tLog.finest(Log.FAC_KEYS, \"createKeyStore: loading key store.\");\n\t\t\tks.load(null, _password);\n\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.FINEST))\n\t\t\t\tLog.finest(Log.FAC_KEYS, \"createKeyStore: key store loaded.\");\n\t\t} catch (NoSuchAlgorithmException e) {\n\t\t\tgenerateConfigurationException(\"Cannot load empty default keystore.\", e);\n\t\t} catch (CertificateException e) {\n\t\t\tgenerateConfigurationException(\"Cannot load empty default keystore with no certificates.\", e);\n\t\t} catch (KeyStoreException e) {\n\t\t\tgenerateConfigurationException(\"Cannot create instance of default key store type.\", e);\n\t\t} catch (IOException e) {\n\t\t\tgenerateConfigurationException(\"Cannot initialize instance of default key store type.\", e);\n\t\t}\n\n\t\tKeyPairGenerator kpg = null;\n\t\ttry {\n\t\t\tkpg = KeyPairGenerator.getInstance(UserConfiguration.defaultKeyAlgorithm());\n\t\t} catch (NoSuchAlgorithmException e) {\n\t\t\tgenerateConfigurationException(\"Cannot generate key using default algorithm: \" + UserConfiguration.defaultKeyAlgorithm(), e);\n\t\t}\n\t\tkpg.initialize(UserConfiguration.defaultKeyLength());\n\t\t\n\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.FINEST))\n\t\t\tLog.finest(Log.FAC_KEYS, \"createKeyStore: generating \" + UserConfiguration.defaultKeyLength() + \"-bit \" + UserConfiguration.defaultKeyAlgorithm() + \" key.\");\n\t\tKeyPair userKeyPair = kpg.generateKeyPair();\n\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.FINEST))\n\t\t\tLog.finest(Log.FAC_KEYS, \"createKeyStore: key generated, generating certificate for user \" + _userName);\n\t\t\n\t\t// Generate a self-signed certificate.\n\t\tString subjectDN = \"CN=\" + _userName;\n\t\tX509Certificate ssCert = null;\n\t\ttry {\n\t\t\t ssCert = \n\t\t\t\t MinimalCertificateGenerator.GenerateUserCertificate(userKeyPair, subjectDN, \n\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t\t MinimalCertificateGenerator.MSEC_IN_YEAR);\n\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.FINEST))\n\t\t\t\tLog.finest(Log.FAC_KEYS, \"createKeyStore: certificate generated.\");\n\t\t\t \n\t\t} catch (Exception e) {\n\t\t\tgenerateConfigurationException(\"InvalidKeyException generating user internal certificate.\", e);\n\t\t} \n\n\t\tKeyStore.PrivateKeyEntry entry =\n\t        new KeyStore.PrivateKeyEntry(userKeyPair.getPrivate(), new X509Certificate[]{ssCert});\n\n\t    try {\n\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.FINEST))\n\t\t\t\tLog.finest(Log.FAC_KEYS, \"createKeyStore: setting private key entry.\");\n\t\t    ks.setEntry(_defaultAlias, entry, \n\t\t\t        new KeyStore.PasswordProtection(_password));\n\t\t    \n\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.FINEST))\n\t\t\t\tLog.finest(Log.FAC_KEYS, \"createKeyStore: storing key store.\");\n\t        ks.store(out, _password);\n\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.FINEST))\n\t\t\t\tLog.finest(Log.FAC_KEYS, \"createKeyStore: wrote key store.\");\n\n\t\t} catch (NoSuchAlgorithmException e) {\n\t\t\tgenerateConfigurationException(\"Cannot save default keystore.\", e);\n\t\t} catch (CertificateException e) {\n\t\t\tgenerateConfigurationException(\"Cannot save default keystore with no certificates.\", e);\n\t    } catch (KeyStoreException e) {\n\t    \tgenerateConfigurationException(\"Cannot set private key entry for user default key\", e);\n\t\t} catch (IOException e) {\n\t\t\tgenerateConfigurationException(\"Cannot write keystore file: \" + _keyStoreFileName, e);\n\t\t} finally {\n\t        if (out != null) {\n\t            try {\n\t\t\t\t\tout.close();\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tLog.warning(\"IOException closing key store file after load.\");\n\t\t\t\t\tLog.warningStackTrace(e);\n\t\t\t\t}\n\t        }\n\t    }\n\t\treturn ks;\n\t}","commit_id":"a72df47ac7ea091fd61a3a10685bec939a059304","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"/**\n\t * Get private signing key for a publisher. \n\t * If I am the publisher, return signing key;\n\t * otherwise, return null.\n\t * @param publisher publisher public key digest\n\t * @return private signing key or null\n\t */\r\n\t@Override\r\n\tpublic PrivateKey getSigningKey(PublisherPublicKeyDigest publisher) {\r\n\t\tif( Log.isLoggable(Level.FINER) )\n\t\t\tLog.finer(\"getSigningKey: retrieving key: \" + publisher);\n\t\tif (null == publisher)\n\t\t\treturn null;\n\t\treturn _privateKeyCache.getPrivateKey(publisher.digest());\r\n\t}","id":13888,"modified_method":"/**\n\t * Get private signing key for a publisher. \n\t * If I am the publisher, return signing key;\n\t * otherwise, return null.\n\t * @param publisher publisher public key digest\n\t * @return private signing key or null\n\t */\r\n\t@Override\r\n\tpublic PrivateKey getSigningKey(PublisherPublicKeyDigest publisher) {\r\n\t\tif( Log.isLoggable(Log.FAC_KEYS, Level.FINER) )\n\t\t\tLog.finer(Log.FAC_KEYS, \"getSigningKey: retrieving key: \" + publisher);\n\t\tif (null == publisher)\n\t\t\treturn null;\n\t\treturn _privateKeyCache.getPrivateKey(publisher.digest());\r\n\t}","commit_id":"a72df47ac7ea091fd61a3a10685bec939a059304","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"/**\n\t * Get the key locator to use for a given key. If a value has been stored\n\t * by calling setKeyLocator, that value will be used. Such values can\n\t * also be initialized using command-line properties, environment variables,\n\t * or configuration files. Usually it refers to content already published.\n\t * As we don't know where the key might be published, if no value is\n\t * specified, we return a locator of type KEY. We have deprecated the\n\t * previous behavior of trying to look at objects we have published\n\t * containing this key; this does not allow the user enough control over\n\t * what key locator will be used.\n\t * @return key locator\n\t */\n\t@Override\n\tpublic KeyLocator getKeyLocator(PublisherPublicKeyDigest keyID) {\n\t\tif (null == keyID) {\n\t\t\tkeyID = getDefaultKeyID();\n\t\t}\n\t\tKeyLocator keyLocator = getStoredKeyLocator(keyID);\n\t\tif (null == keyLocator) {\n\t\t\tkeyLocator = getKeyTypeKeyLocator(keyID);\n\t\t}\n\t\tif (Log.isLoggable(Level.INFO))\n\t\t\tLog.info(\"getKeyLocator: returning locator {0} for key {1}\", keyLocator, keyID);\n\t\treturn keyLocator;\n\t}","id":13889,"modified_method":"/**\n\t * Get the key locator to use for a given key. If a value has been stored\n\t * by calling setKeyLocator, that value will be used. Such values can\n\t * also be initialized using command-line properties, environment variables,\n\t * or configuration files. Usually it refers to content already published.\n\t * As we don't know where the key might be published, if no value is\n\t * specified, we return a locator of type KEY. We have deprecated the\n\t * previous behavior of trying to look at objects we have published\n\t * containing this key; this does not allow the user enough control over\n\t * what key locator will be used.\n\t * @return key locator\n\t */\n\t@Override\n\tpublic KeyLocator getKeyLocator(PublisherPublicKeyDigest keyID) {\n\t\tif (null == keyID) {\n\t\t\tkeyID = getDefaultKeyID();\n\t\t}\n\t\tKeyLocator keyLocator = getStoredKeyLocator(keyID);\n\t\tif (null == keyLocator) {\n\t\t\tkeyLocator = getKeyTypeKeyLocator(keyID);\n\t\t}\n\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.INFO))\n\t\t\tLog.info(Log.FAC_KEYS, \"getKeyLocator: returning locator {0} for key {1}\", keyLocator, keyID);\n\t\treturn keyLocator;\n\t}","commit_id":"a72df47ac7ea091fd61a3a10685bec939a059304","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"/**\n\t * Need a way to clear this programmatically. Call this before initialize().\n\t */\n\t@Override \n\tpublic void clearSavedConfigurationState() throws FileNotFoundException, IOException {\n\t\tFile configurationFile = new File(_keyStoreDirectory, _configurationFileName); \n\t\tif (configurationFile.exists()) {\n\t\t\tif (Log.isLoggable(Level.INFO)) {\n\t\t\t\tLog.info(\"Deleting configuration state file {0}.\", configurationFile.getAbsolutePath());\n\t\t\t}\n\t\t\tif (!configurationFile.delete()) {\n\t\t\t\tLog.warning(\"Unable to delete configuration state file {0}.\", configurationFile.getAbsolutePath());\n\t\t\t}\n\t\t}\n\t}","id":13890,"modified_method":"/**\n\t * Need a way to clear this programmatically. Call this before initialize().\n\t */\n\t@Override \n\tpublic void clearSavedConfigurationState() throws FileNotFoundException, IOException {\n\t\tFile configurationFile = new File(_keyStoreDirectory, _configurationFileName); \n\t\tif (configurationFile.exists()) {\n\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.INFO)) {\n\t\t\t\tLog.info(Log.FAC_KEYS, \"Deleting configuration state file {0}.\", configurationFile.getAbsolutePath());\n\t\t\t}\n\t\t\tif (!configurationFile.delete()) {\n\t\t\t\tLog.warning(\"Unable to delete configuration state file {0}.\", configurationFile.getAbsolutePath());\n\t\t\t}\n\t\t}\n\t}","commit_id":"a72df47ac7ea091fd61a3a10685bec939a059304","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"/**\n\t * Reads in a user's private/public keys and certificate from a key store\n\t * Must have set _password.\n\t * @param in input stream\n\t * @throws ConfigurationException\n\t */\n\tprotected KeyStore readKeyStore(InputStream in) throws ConfigurationException {\n\t\tKeyStore keyStore = null;\n\t\ttry {\n\t\t\tif (Log.isLoggable(Level.INFO))\n\t\t\t\tLog.info(\"Loading CCN key store...\");\n\t\t\tkeyStore = KeyStore.getInstance(_keyStoreType);\n\t\t\tkeyStore.load(in, _password);\n\t\t} catch (NoSuchAlgorithmException e) {\n\t\t\tLog.warning(\"Cannot load keystore: \" + e);\n\t\t\tthrow new ConfigurationException(\"Cannot load default keystore: \" + e);\n\t\t} catch (CertificateException e) {\n\t\t\tLog.warning(\"Cannot load keystore with no certificates.\");\n\t\t\tthrow new ConfigurationException(\"Cannot load keystore with no certificates.\");\n\t\t} catch (IOException e) {\n\t\t\tLog.warning(\"Cannot open existing key store: \" + e);\n\t\t\ttry {\n\t\t\t\tin.reset();\n\t\t\t\tjava.io.FileOutputStream bais = new java.io.FileOutputStream(\"KeyDump.p12\");\n\t\t\t\tbyte [] tmp = new byte[2048];\n\t\t\t\tint read = in.read(tmp);\n\t\t\t\twhile (read > 0) {\n\t\t\t\t\tbais.write(tmp, 0, read);\n\t\t\t\t\tread = in.read(tmp);\n\t\t\t\t}\n\t\t\t\tbais.flush();\n\t\t\t\tbais.close();\n\t\t\t} catch (IOException e1) {\n\t\t\t\tLog.info(\"Another exception: \" + e1);\n\t\t\t}\n\t\t\tthrow new ConfigurationException(e);\n\t\t} catch (KeyStoreException e) {\n\t\t\tLog.warning(\"Cannot create instance of preferred key store type: \" + _keyStoreType + \" \" + e.getMessage());\n\t\t\tLog.warningStackTrace(e);\n\t\t\tthrow new ConfigurationException(\"Cannot create instance of default key store type: \" + _keyStoreType + \" \" + e.getMessage());\n\t\t} finally {\n\t\t\tif (null != in)\n\t\t\t\ttry {\n\t\t\t\t\tin.close();\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tLog.warning(\"IOException closing key store file after load.\");\n\t\t\t\t\tLog.warningStackTrace(e);\n\t\t\t\t}\n\t\t}\n\t\treturn keyStore;\n\t}","id":13891,"modified_method":"/**\n\t * Reads in a user's private/public keys and certificate from a key store\n\t * Must have set _password.\n\t * @param in input stream\n\t * @throws ConfigurationException\n\t */\n\tprotected KeyStore readKeyStore(InputStream in) throws ConfigurationException {\n\t\tKeyStore keyStore = null;\n\t\ttry {\n\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.INFO))\n\t\t\t\tLog.info(Log.FAC_KEYS, \"Loading CCN key store...\");\n\t\t\tkeyStore = KeyStore.getInstance(_keyStoreType);\n\t\t\tkeyStore.load(in, _password);\n\t\t} catch (NoSuchAlgorithmException e) {\n\t\t\tLog.warning(\"Cannot load keystore: \" + e);\n\t\t\tthrow new ConfigurationException(\"Cannot load default keystore: \" + e);\n\t\t} catch (CertificateException e) {\n\t\t\tLog.warning(\"Cannot load keystore with no certificates.\");\n\t\t\tthrow new ConfigurationException(\"Cannot load keystore with no certificates.\");\n\t\t} catch (IOException e) {\n\t\t\tLog.warning(\"Cannot open existing key store: \" + e);\n\t\t\ttry {\n\t\t\t\tin.reset();\n\t\t\t\tjava.io.FileOutputStream bais = new java.io.FileOutputStream(\"KeyDump.p12\");\n\t\t\t\tbyte [] tmp = new byte[2048];\n\t\t\t\tint read = in.read(tmp);\n\t\t\t\twhile (read > 0) {\n\t\t\t\t\tbais.write(tmp, 0, read);\n\t\t\t\t\tread = in.read(tmp);\n\t\t\t\t}\n\t\t\t\tbais.flush();\n\t\t\t\tbais.close();\n\t\t\t} catch (IOException e1) {\n\t\t\t\tLog.info(Log.FAC_KEYS, \"Another exception: \" + e1);\n\t\t\t}\n\t\t\tthrow new ConfigurationException(e);\n\t\t} catch (KeyStoreException e) {\n\t\t\tLog.warning(\"Cannot create instance of preferred key store type: \" + _keyStoreType + \" \" + e.getMessage());\n\t\t\tLog.warningStackTrace(e);\n\t\t\tthrow new ConfigurationException(\"Cannot create instance of default key store type: \" + _keyStoreType + \" \" + e.getMessage());\n\t\t} finally {\n\t\t\tif (null != in)\n\t\t\t\ttry {\n\t\t\t\t\tin.close();\n\t\t\t\t} catch (IOException e) {\n\t\t\t\t\tLog.warning(\"IOException closing key store file after load.\");\n\t\t\t\t\tLog.warningStackTrace(e);\n\t\t\t\t}\n\t\t}\n\t\treturn keyStore;\n\t}","commit_id":"a72df47ac7ea091fd61a3a10685bec939a059304","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"/**\n\t * Return the key's content name for a given key id, given\n\t * a specified prefix and version. \n\t * The default key name is the publisher ID itself,\n\t * under the user's key collection. \n\t * @param keyID[] publisher ID\n\t * @return content name\n\t */\n\tpublic ContentName getDefaultKeyName(ContentName keyPrefix, PublisherPublicKeyDigest keyID, CCNTime keyVersion) {\n\t\tif (null == keyPrefix) {\n\t\t\tkeyPrefix = getDefaultKeyNamePrefix();\n\t\t\tLog.info(\"Got default key name prefix: {0}\", keyPrefix);\n\t\t}\n\t\tContentName keyName = KeyProfile.keyName(keyPrefix, keyID);\n\t\tif (null != keyVersion) {\n\t\t\treturn VersioningProfile.addVersion(keyName, keyVersion);\n\t\t}\n\t\treturn keyName;\n\t}","id":13892,"modified_method":"/**\n\t * Return the key's content name for a given key id, given\n\t * a specified prefix and version. \n\t * The default key name is the publisher ID itself,\n\t * under the user's key collection. \n\t * @param keyID[] publisher ID\n\t * @return content name\n\t */\n\tpublic ContentName getDefaultKeyName(ContentName keyPrefix, PublisherPublicKeyDigest keyID, CCNTime keyVersion) {\n\t\tif (null == keyPrefix) {\n\t\t\tkeyPrefix = getDefaultKeyNamePrefix();\n\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.INFO)) { \n\t\t\t\tLog.info(Log.FAC_KEYS, \"Got default key name prefix: {0}\", keyPrefix);\n\t\t\t}\n\t\t}\n\t\tContentName keyName = KeyProfile.keyName(keyPrefix, keyID);\n\t\tif (null != keyVersion) {\n\t\t\treturn VersioningProfile.addVersion(keyName, keyVersion);\n\t\t}\n\t\treturn keyName;\n\t}","commit_id":"a72df47ac7ea091fd61a3a10685bec939a059304","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"/**\n\t * Set the default key manager to one of our choice. If you do this, be careful on \n\t * calling close().\n\t */\n\tpublic static synchronized void setDefaultKeyManager(KeyManager keyManager) {\n\t\tif (null == keyManager) {\n\t\t\tLog.warning(\"Setting default key manager to NULL. Default user key manager will be loaded on next request for default key manager.\");\n\t\t}\n\t\tcloseDefaultKeyManager();\n\t\tLog.info(\"Setting default key manager: new KeyManager {0}\", keyManager.getClass().getName());\n\t\t_defaultKeyManager = keyManager;\n\t}","id":13893,"modified_method":"/**\n\t * Set the default key manager to one of our choice. If you do this, be careful on \n\t * calling close().\n\t */\n\tpublic static synchronized void setDefaultKeyManager(KeyManager keyManager) {\n\t\tif (null == keyManager) {\n\t\t\tLog.warning(\"Setting default key manager to NULL. Default user key manager will be loaded on next request for default key manager.\");\n\t\t}\n\t\tcloseDefaultKeyManager();\n\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.INFO)) { \n\t\t\tLog.info(Log.FAC_KEYS, \"Setting default key manager: new KeyManager {0}\", keyManager.getClass().getName());\n\t\t}\n\t\t_defaultKeyManager = keyManager;\n\t}","commit_id":"a72df47ac7ea091fd61a3a10685bec939a059304","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"/**\n\t * Load the BouncyCastle and other necessary providers, should be called once for initialization. \n\t * Currently this is done by CCNHandle.\n\t */\r\n\tpublic static void initializeProvider() {\r\n\t\tsynchronized(KeyManager.class) {\r\n\t\t\tif (null == BC_PROVIDER) {\n\t\t\t\tBC_PROVIDER = Security.getProvider(\"BC\");\n\t\t\t\tif (null == BC_PROVIDER) {\n\t\t\t\t\tProvider bc = new BouncyCastleProvider();\r\n\t\t\t\t\tint result = Security.addProvider(bc);\n\t\t\t\t\tBC_PROVIDER = bc;\n\t\t\t\t\tif (null != BC_PROVIDER) {\n\t\t\t\t\t\tif (result > 0) {\n\t\t\t\t\t\t\tLog.info(\"KeyManager: Successfully initialized BouncyCastle provider at position \" + result);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tLog.info(\"KeyManager: BouncyCastle provider already installed.\");\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tLog.severe(\"ERROR: NULL default provider! Cannot load BouncyCastle! Result of addProvider: \" + result);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tLog.info(\"KeyManager: BouncyCastle provider installed by default.\");\n\t\t\t\t}\n\t\t\t\tProvider checkProvider = Security.getProvider(\"BC\");\n\t\t\t\tif (null == checkProvider) {\n\t\t\t\t\tLog.severe(\"Could not load BouncyCastle provider back in!\");\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}","id":13894,"modified_method":"/**\n\t * Load the BouncyCastle and other necessary providers, should be called once for initialization. \n\t * Currently this is done by CCNHandle.\n\t */\r\n\tpublic static void initializeProvider() {\r\n\t\tsynchronized(KeyManager.class) {\r\n\t\t\tif (null == BC_PROVIDER) {\n\t\t\t\tBC_PROVIDER = Security.getProvider(\"BC\");\n\t\t\t\tif (null == BC_PROVIDER) {\n\t\t\t\t\tProvider bc = new BouncyCastleProvider();\r\n\t\t\t\t\tint result = Security.addProvider(bc);\n\t\t\t\t\tBC_PROVIDER = bc;\n\t\t\t\t\tif (null != BC_PROVIDER) {\n\t\t\t\t\t\tif (result > 0) {\n\t\t\t\t\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.INFO)) { \n\t\t\t\t\t\t\t\tLog.info(Log.FAC_KEYS, \"KeyManager: Successfully initialized BouncyCastle provider at position \" + result);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.INFO)) { \n\t\t\t\t\t\t\t\tLog.info(Log.FAC_KEYS, \"KeyManager: BouncyCastle provider already installed.\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tLog.severe(\"ERROR: NULL default provider! Cannot load BouncyCastle! Result of addProvider: \" + result);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.INFO)) { \n\t\t\t\t\t\tLog.info(Log.FAC_KEYS, \"KeyManager: BouncyCastle provider installed by default.\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tProvider checkProvider = Security.getProvider(\"BC\");\n\t\t\t\tif (null == checkProvider) {\n\t\t\t\t\tLog.severe(\"Could not load BouncyCastle provider back in!\");\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}","commit_id":"a72df47ac7ea091fd61a3a10685bec939a059304","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"/**\n\t * Accessor to retrieve default key manager instance, or create it if necessary.\n\t * @return the KeyManager\n\t * @throws ConfigurationException if there is a problem with the user or system configuration that\n\t * \t\trequires intervention to resolve, or we have a significant problem starting up the key manager.\n\t */\r\n\tpublic static synchronized KeyManager getDefaultKeyManager() {\n\t\t// could print a stack trace\n\t\tif (Log.isLoggable(Level.FINER)) {\n\t\t\tLog.finer(\"NOTICE: retrieving default key manager. Do you really want to do this?\");\n\t\t\ttry {\n\t\t\t\tthrow new ConfigurationException(\"THIS IS NOT AN ERROR: tracking stack trace to find use of default key manager.\");\n\t\t\t} catch (ConfigurationException e) {\n\t\t\t\tLog.logStackTrace(Level.FINER, e);\n\t\t\t}\n\t\t}\r\n\t\tif (null != _defaultKeyManager) \r\n\t\t\treturn _defaultKeyManager;\r\n\t\ttry {\r\n\t\t\treturn createDefaultKeyManager();\r\n\t\t} catch (IOException io) {\r\n\t\t\tLog.warning(\"IOException attempting to get KeyManager: \" + io.getClass().getName() + \":\" + io.getMessage());\n\t\t\tLog.warningStackTrace(io);\n\t\t\tthrow new RuntimeException(\"Error in system configuration. Cannot get KeyManager.\",io);\n\t\t} catch (InvalidKeyException io) {\n\t\t\tLog.warning(\"InvalidKeyException attempting to get KeyManager: \" + io.getClass().getName() + \":\" + io.getMessage());\n\t\t\tLog.warningStackTrace(io);\n\t\t\tthrow new RuntimeException(\"Error in system configuration. Cannot get KeyManager.\",io);\n\t\t} catch (ConfigurationException e) {\n\t\t\tLog.warning(\"Configuration exception attempting to get KeyManager: \" + e.getMessage());\n\t\t\tLog.warningStackTrace(e);\n\t\t\tthrow new RuntimeException(\"Error in system configuration. Cannot get KeyManager.\",e);\n\t\t}\r\n\t}","id":13895,"modified_method":"/**\n\t * Accessor to retrieve default key manager instance, or create it if necessary.\n\t * @return the KeyManager\n\t * @throws ConfigurationException if there is a problem with the user or system configuration that\n\t * \t\trequires intervention to resolve, or we have a significant problem starting up the key manager.\n\t */\r\n\tpublic static synchronized KeyManager getDefaultKeyManager() {\n\t\t// could print a stack trace\n\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.FINER)) {\n\t\t\tLog.finer(Log.FAC_KEYS, \"NOTICE: retrieving default key manager. Do you really want to do this?\");\n\t\t\ttry {\n\t\t\t\tthrow new ConfigurationException(\"THIS IS NOT AN ERROR: tracking stack trace to find use of default key manager.\");\n\t\t\t} catch (ConfigurationException e) {\n\t\t\t\tLog.logStackTrace(Level.FINER, e);\n\t\t\t}\n\t\t}\r\n\t\tif (null != _defaultKeyManager) \r\n\t\t\treturn _defaultKeyManager;\r\n\t\ttry {\r\n\t\t\treturn createDefaultKeyManager();\r\n\t\t} catch (IOException io) {\r\n\t\t\tLog.warning(\"IOException attempting to get KeyManager: \" + io.getClass().getName() + \":\" + io.getMessage());\n\t\t\tLog.warningStackTrace(io);\n\t\t\tthrow new RuntimeException(\"Error in system configuration. Cannot get KeyManager.\",io);\n\t\t} catch (InvalidKeyException io) {\n\t\t\tLog.warning(\"InvalidKeyException attempting to get KeyManager: \" + io.getClass().getName() + \":\" + io.getMessage());\n\t\t\tLog.warningStackTrace(io);\n\t\t\tthrow new RuntimeException(\"Error in system configuration. Cannot get KeyManager.\",io);\n\t\t} catch (ConfigurationException e) {\n\t\t\tLog.warning(\"Configuration exception attempting to get KeyManager: \" + e.getMessage());\n\t\t\tLog.warningStackTrace(e);\n\t\t\tthrow new RuntimeException(\"Error in system configuration. Cannot get KeyManager.\",e);\n\t\t}\r\n\t}","commit_id":"a72df47ac7ea091fd61a3a10685bec939a059304","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"/**\n\t * Publish a public key to repository, if it isn't already there.\n\t * @param keyName content name of the public key to publish under (adds a version)\n\t * @param keyToPublish the key to publish\n\t * @param signingKeyID the key to sign with\n\t * @param signingKeyLocator the key locator to use\n\t * @param timeToWaitForPreexisting how long to wait to see if it has already been published\n\t * (avoid re-publishing). If 0, we don't even try to find preexisting content.\n\t * @param requirePublisherMatch check to see if we match the specified publisher. Key locator\n\t * match too complex to check, make caller do that one.\n\t * @param handle the handle to use to publish it with\n\t * @return the published information about this key, whether we published it or someone else had\n\t * @throws IOException \n\t */\n\tpublic static PublicKeyObject publishKeyToRepository(\n\t\t\tContentName keyName, \n\t\t\tPublicKey keyToPublish,\n\t\t\tPublisherPublicKeyDigest signingKeyID, \n\t\t\tKeyLocator signingKeyLocator,\n\t\t\tlong timeToWaitForPreexisting,\n\t\t\tboolean requirePublisherMatch,\n\t\t\tCCNHandle handle) throws IOException {\n\n\n\t\t// To avoid repeating work, we first see if this content is available on the network, then\n\t\t// if it's in a repository. That's because if it's not in a repository, we need to know if\n\t\t// it's on the network, and this way we save doing that work twice (as the repo-checking code\n\t\t// also needs to know if it's on the network).\n\t\tPublisherPublicKeyDigest keyDigest = new PublisherPublicKeyDigest(keyToPublish);\n\t\t\n\t\t// Returns immediately if timeToWaitForPreexisting is 0.\n\t\tContentObject availableContent = \n\t\t\tCCNReader.isVersionedContentAvailable(keyName, ContentType.KEY, keyDigest.digest(), \n\t\t\t\t\t(requirePublisherMatch ? signingKeyID : null), null, timeToWaitForPreexisting, handle);\n\t\t\n\t\t// If we want it self-signed...\n\t\tif (SELF_SIGNED_KEY_LOCATOR == signingKeyLocator) {\n\t\t\t// do mean == here....\n\t\t\t// have already verified that keyDigest is the digest of the content of availableContent\n\t\t\tif (!PublicKeyObject.isSelfSigned(SegmentationProfile.segmentRoot(availableContent.name()), \n\t\t\t\t\tkeyDigest, availableContent.signedInfo().getKeyLocator())) {\n\t\t\t\t// it would be perfect, but it's not self-signed\n\t\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.INFO)) {\n\t\t\t\t\tLog.info(Log.FAC_KEYS, \"Found our key published under desired name {0}, but not self-signed as required - key locator is {1}.\",\n\t\t\t\t\t\t\tavailableContent.name(), availableContent.signedInfo().getKeyLocator());\n\t\t\t\t}\n\t\t\t\tavailableContent = null;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (null != availableContent) {\n\t\t\t\n\t\t\t// See if some repository has this key already\n\t\t\tif (null != CCNReader.isContentInRepository(availableContent, timeToWaitForPreexisting, handle)) {\n\t\t\t\tLog.info(\"publishKeyToRepository: key {0} is already in a repository; not re-publishing.\", keyName);\n\t\t\t} else {\n\n\t\t\t\t// Otherwise, we just need to trick the repo into pulling it.\n\t\t\t\tContentName streamName = SegmentationProfile.segmentRoot(availableContent.name());\n\t\t\t\tRepositoryFlowControl rfc = new RepositoryFlowControl(streamName, handle);\n\t\t\t\t// This will throw an IOException if there is no repository there to read it.\n\t\t\t\trfc.startWrite(streamName, Shape.STREAM);\n\t\t\t\t// OK, once we've emitted the interest, we don't actually need that flow controller anymore.\n\t\t\t\tLog.info(\"Key {0} published to repository.\", keyName);\n\t\t\t\trfc.close();\n\t\t\t}\n\t\t\treturn new PublicKeyObject(availableContent, handle);\n\t\t\t\n\t\t} else {\t\t\n\t\t\t// We need to write this content ourselves, nobody else has it. We know we really want to \n\t\t\t// write it, no point in checking again to see if it's there.\n\t\t\treturn publishKey(keyName, keyToPublish, signingKeyID, signingKeyLocator, \n\t\t\t\t\t\t\t  null, SaveType.REPOSITORY, handle, handle.keyManager());\n\t\t}\n\t}","id":13896,"modified_method":"/**\n\t * Publish a public key to repository, if it isn't already there.\n\t * @param keyName content name of the public key to publish under (adds a version)\n\t * @param keyToPublish the key to publish\n\t * @param signingKeyID the key to sign with\n\t * @param signingKeyLocator the key locator to use\n\t * @param timeToWaitForPreexisting how long to wait to see if it has already been published\n\t * (avoid re-publishing). If 0, we don't even try to find preexisting content.\n\t * @param requirePublisherMatch check to see if we match the specified publisher. Key locator\n\t * match too complex to check, make caller do that one.\n\t * @param handle the handle to use to publish it with\n\t * @return the published information about this key, whether we published it or someone else had\n\t * @throws IOException \n\t */\n\tpublic static PublicKeyObject publishKeyToRepository(\n\t\t\tContentName keyName, \n\t\t\tPublicKey keyToPublish,\n\t\t\tPublisherPublicKeyDigest signingKeyID, \n\t\t\tKeyLocator signingKeyLocator,\n\t\t\tlong timeToWaitForPreexisting,\n\t\t\tboolean requirePublisherMatch,\n\t\t\tCCNHandle handle) throws IOException {\n\n\n\t\t// To avoid repeating work, we first see if this content is available on the network, then\n\t\t// if it's in a repository. That's because if it's not in a repository, we need to know if\n\t\t// it's on the network, and this way we save doing that work twice (as the repo-checking code\n\t\t// also needs to know if it's on the network).\n\t\tPublisherPublicKeyDigest keyDigest = new PublisherPublicKeyDigest(keyToPublish);\n\t\t\n\t\t// Returns immediately if timeToWaitForPreexisting is 0.\n\t\tContentObject availableContent = \n\t\t\tCCNReader.isVersionedContentAvailable(keyName, ContentType.KEY, keyDigest.digest(), \n\t\t\t\t\t(requirePublisherMatch ? signingKeyID : null), null, timeToWaitForPreexisting, handle);\n\t\t\n\t\t// If we want it self-signed...\n\t\tif (SELF_SIGNED_KEY_LOCATOR == signingKeyLocator) {\n\t\t\t// do mean == here....\n\t\t\t// have already verified that keyDigest is the digest of the content of availableContent\n\t\t\tif (!PublicKeyObject.isSelfSigned(SegmentationProfile.segmentRoot(availableContent.name()), \n\t\t\t\t\tkeyDigest, availableContent.signedInfo().getKeyLocator())) {\n\t\t\t\t// it would be perfect, but it's not self-signed\n\t\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.INFO)) {\n\t\t\t\t\tLog.info(Log.FAC_KEYS, \"Found our key published under desired name {0}, but not self-signed as required - key locator is {1}.\",\n\t\t\t\t\t\t\tavailableContent.name(), availableContent.signedInfo().getKeyLocator());\n\t\t\t\t}\n\t\t\t\tavailableContent = null;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (null != availableContent) {\n\t\t\t\n\t\t\t// See if some repository has this key already\n\t\t\tif (null != CCNReader.isContentInRepository(availableContent, timeToWaitForPreexisting, handle)) {\n\t\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.INFO)) { \n\t\t\t\t\tLog.info(Log.FAC_KEYS, \"publishKeyToRepository: key {0} is already in a repository; not re-publishing.\", keyName);\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// Otherwise, we just need to trick the repo into pulling it.\n\t\t\t\tContentName streamName = SegmentationProfile.segmentRoot(availableContent.name());\n\t\t\t\tRepositoryFlowControl rfc = new RepositoryFlowControl(streamName, handle);\n\t\t\t\t// This will throw an IOException if there is no repository there to read it.\n\t\t\t\trfc.startWrite(streamName, Shape.STREAM);\n\t\t\t\t// OK, once we've emitted the interest, we don't actually need that flow controller anymore.\n\t\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.INFO)) { \n\t\t\t\t\tLog.info(Log.FAC_KEYS, \"Key {0} published to repository.\", keyName);\n\t\t\t\t}\n\t\t\t\trfc.close();\n\t\t\t}\n\t\t\treturn new PublicKeyObject(availableContent, handle);\n\t\t\t\n\t\t} else {\t\t\n\t\t\t// We need to write this content ourselves, nobody else has it. We know we really want to \n\t\t\t// write it, no point in checking again to see if it's there.\n\t\t\treturn publishKey(keyName, keyToPublish, signingKeyID, signingKeyLocator, \n\t\t\t\t\t\t\t  null, SaveType.REPOSITORY, handle, handle.keyManager());\n\t\t}\n\t}","commit_id":"a72df47ac7ea091fd61a3a10685bec939a059304","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"/**\n\t * Note: this is the lowest level interface to key publication; there are many higher-level\n\t * interfaces that are probably what you want. This needs to be public to get across\n\t * package constraints.\n\t * Publish a signed record for this key. We've already decided we need to publish,\n\t * and how; no more checks are made to see if the key already exists.\n\t * \n\t * @param keyName the key's content name. Will add a version when saving if it doesn't\n\t * \thave one already. If it does have a version, will use that one (see below for effect\n\t * \tof version on the key locator). (Note that this is not\n\t * \t\tstandard behavior for savable network content, which needs its version explicitly\n\t * \t\tset.)\n\t * @param keyToPublish the public key to publish\n\t * @param keyID the publisher id\n\t * @param signingKeyID the key id of the key pair to sign with\n\t * @param signingKeyLocator the key locator to use if we save this key (if it is not already published).\n\t * \tIf not specified, we look for the default locator for the signing key. If there is none,\n\t * \tand we are signing with the same key we are publishing, we build a\n\t * \tself-referential key locator, using the name passed in (versioned or not).\n\t * @param flowController flow controller to use. If non-null, saveType is ignored.\n\t * @param saveType -- if we don't want to hand in a special-purpose flow controller, set saveType to RAW\n\t *   or REPO to get standard publishing behavior.\n\t * @param handle the handle to use if we haven't specified a flow controller. Makes a flow controller\n\t * \tof the type specified by saveType. \n\t * @param keyManager the key manager to use to pull additional signing information (default keys\n\t *   and locators if not specified). If null, taken from handle. Also publish key added to its cache.\n\t * @return the published information about this key, whether we published it or someone else had\n\t * @throws IOException\n\t */\n\tpublic static PublicKeyObject publishKey(\n\t\t\tContentName keyName, PublicKey keyToPublish,\n\t\t\tPublisherPublicKeyDigest signingKeyID, KeyLocator signingKeyLocator,\n\t\t\tCCNFlowControl flowController,\n\t\t\tSaveType saveType, \n\t\t\tCCNHandle handle,\n\t\t\tKeyManager keyManager) \n\n\tthrows IOException {\n\n\t\tif ((null == keyManager) && (null != handle)) {\n\t\t\tkeyManager = handle.keyManager();\n\t\t}\n\t\t\n\t\tif ((null == keyManager) || ((null == flowController) && (null == handle)) || \n\t\t\t\t((null == flowController) && (null == saveType))) {\n\t\t\t\n\t\t\t// TODO DKS not quite right type...\n\t\t\tthrow new ErrorStateException(\"Must provide a flow controller or a handle and a save type, and a key manager!\");\n\t\t}\n\t\t\n\t\t// Now, finally; it's not published, so make an object to write it\n\t\t// with. We've already tried to pull it, so don't try here. Will\n\t\t// set publisher info below.\n\t\t\n\t\t// Need a key locator to stick in data entry for\n\t\t// locator. Could use key itself, but then would have\n\t\t// key both in the content for this item and in the\n\t\t// key locator, which is redundant. Use naming form\n\t\t// that allows for self-referential key names -- the\n\t\t// CCN equivalent of a \"self-signed cert\". Means that\n\t\t// we will refer to only the base key name and the publisher ID.\n\t\tif (null == signingKeyID) {\n\t\t\tsigningKeyID = keyManager.getDefaultKeyID();\n\t\t}\n\n\t\t// Reallly do want == here\n\t\tif ((null == signingKeyLocator) || (SELF_SIGNED_KEY_LOCATOR == signingKeyLocator)) {\n\t\t\t\n\t\t\tKeyLocator existingLocator = keyManager.getKeyLocator(signingKeyID);\n\t\t\t\n\t\t\t// If we've asked for this to be self-signed, or we have made the default KEY\n\t\t\t// type key locator, make this a self-signed key.\n\t\t\tif ((SELF_SIGNED_KEY_LOCATOR == signingKeyLocator) || \n\t\t\t\t\t(existingLocator.type() == KeyLocatorType.KEY)) {\n\t\t\t\tPublisherPublicKeyDigest keyDigest = new PublisherPublicKeyDigest(keyToPublish);\n\t\t\t\tif (signingKeyID.equals(keyDigest)) {\n\t\t\t\t\t// Make a self-referential key locator. For now do not include the\n\t\t\t\t\t// version.\n\t\t\t\t\texistingLocator = new KeyLocator(new KeyName(keyName, signingKeyID));\n\t\t\t\t\tLog.finer(\"Overriding constructed key locator of type KEY, making self-referential locator {0}\", existingLocator);\n\t\t\t\t}\n\t\t\t}\n\t\t\tsigningKeyLocator = existingLocator;\n\t\t}\t\n\t\t\n\t\t// Here is where we get tricky. We might really want the key to be of a particular\n\t\t// version. In general, as we use the network objects to write versioned versioned stuff,\n\t\t// we might not be able to take the last component of a name, if versioned, as the version\n\t\t// to use to save -- might really want <name>/<version1>/<version2>. So unless we want to \n\t\t// make that impossible to achieve, we need to not have the network objects take the \n\t\t// name <name>/<version1> and save to <version1> (though they read from <version1> just\n\t\t// fine given the same). You always want to save to a new version, unless someone tells you\n\t\t// something different from the outside. \n\t\t// Come up with a contorted option. If you want to publish <version>/<version> stuff, you\n\t\t// need to pass in the second version...\n\t\t\n\t\tCCNTime keyVersion = null; // do we force a version?\n\t\tTuple<ContentName, byte []> nameAndVersion = VersioningProfile.cutTerminalVersion(keyName);\n\n\t\tPublicKeyObject keyObject = null;\n\t\tif (null != flowController) {\n\t\t\t// If a flow controller was specified, use that\n\t\t\tkeyObject = new PublicKeyObject(nameAndVersion.first(), keyToPublish, \n\t\t\t\t\t\t\t\t\t\t\tsigningKeyID, signingKeyLocator, flowController);\n\t\t} else {\n\t\t\t// No flow controller given, use specified saveType.\n\t\t\tkeyObject = new PublicKeyObject(nameAndVersion.first(), keyToPublish, saveType,\n\t\t\t\t\t\t\t\t\t\t\tsigningKeyID, signingKeyLocator, handle);\n\t\t}\n\t\t\n\t\tif (null != nameAndVersion.second()) {\n\t\t\tkeyVersion = VersioningProfile.getVersionComponentAsTimestamp(nameAndVersion.second());\n\t\t}\n\t\tLog.info(\"publishKey: key not previously published, making new key object {0} with version {1} displayed as {2}\", \n\t\t\t\tkeyObject.getVersionedName(), keyVersion, \n\t\t\t\t((null != nameAndVersion.second()) ? ContentName.componentPrintURI(nameAndVersion.second()) : \"<no version>\"));\n\n\t\t// Eventually may want to find something already published and link to it, but be simple here.\n\n\t\tif (!keyObject.save(keyVersion)) {\n\t\t\tLog.info(\"Not saving key when we thought we needed to: desired key value {0}, have key value {1}, \" +\n\t\t\t\t\tkeyToPublish, new PublisherPublicKeyDigest(keyObject.publicKey()));\n\t\t} else {\n\t\t\tLog.info(\"Published key {0} to name {1} with key locator {2}.\", keyToPublish, keyObject.getVersionedName(), signingKeyLocator);\n\t\t}\n\t\tkeyManager.getPublicKeyCache().remember(keyObject);\n\t\treturn keyObject;\n\t}","id":13897,"modified_method":"/**\n\t * Note: this is the lowest level interface to key publication; there are many higher-level\n\t * interfaces that are probably what you want. This needs to be public to get across\n\t * package constraints.\n\t * Publish a signed record for this key. We've already decided we need to publish,\n\t * and how; no more checks are made to see if the key already exists.\n\t * \n\t * @param keyName the key's content name. Will add a version when saving if it doesn't\n\t * \thave one already. If it does have a version, will use that one (see below for effect\n\t * \tof version on the key locator). (Note that this is not\n\t * \t\tstandard behavior for savable network content, which needs its version explicitly\n\t * \t\tset.)\n\t * @param keyToPublish the public key to publish\n\t * @param keyID the publisher id\n\t * @param signingKeyID the key id of the key pair to sign with\n\t * @param signingKeyLocator the key locator to use if we save this key (if it is not already published).\n\t * \tIf not specified, we look for the default locator for the signing key. If there is none,\n\t * \tand we are signing with the same key we are publishing, we build a\n\t * \tself-referential key locator, using the name passed in (versioned or not).\n\t * @param flowController flow controller to use. If non-null, saveType is ignored.\n\t * @param saveType -- if we don't want to hand in a special-purpose flow controller, set saveType to RAW\n\t *   or REPO to get standard publishing behavior.\n\t * @param handle the handle to use if we haven't specified a flow controller. Makes a flow controller\n\t * \tof the type specified by saveType. \n\t * @param keyManager the key manager to use to pull additional signing information (default keys\n\t *   and locators if not specified). If null, taken from handle. Also publish key added to its cache.\n\t * @return the published information about this key, whether we published it or someone else had\n\t * @throws IOException\n\t */\n\tpublic static PublicKeyObject publishKey(\n\t\t\tContentName keyName, PublicKey keyToPublish,\n\t\t\tPublisherPublicKeyDigest signingKeyID, KeyLocator signingKeyLocator,\n\t\t\tCCNFlowControl flowController,\n\t\t\tSaveType saveType, \n\t\t\tCCNHandle handle,\n\t\t\tKeyManager keyManager) \n\n\tthrows IOException {\n\n\t\tif ((null == keyManager) && (null != handle)) {\n\t\t\tkeyManager = handle.keyManager();\n\t\t}\n\t\t\n\t\tif ((null == keyManager) || ((null == flowController) && (null == handle)) || \n\t\t\t\t((null == flowController) && (null == saveType))) {\n\t\t\t\n\t\t\t// TODO DKS not quite right type...\n\t\t\tthrow new ErrorStateException(\"Must provide a flow controller or a handle and a save type, and a key manager!\");\n\t\t}\n\t\t\n\t\t// Now, finally; it's not published, so make an object to write it\n\t\t// with. We've already tried to pull it, so don't try here. Will\n\t\t// set publisher info below.\n\t\t\n\t\t// Need a key locator to stick in data entry for\n\t\t// locator. Could use key itself, but then would have\n\t\t// key both in the content for this item and in the\n\t\t// key locator, which is redundant. Use naming form\n\t\t// that allows for self-referential key names -- the\n\t\t// CCN equivalent of a \"self-signed cert\". Means that\n\t\t// we will refer to only the base key name and the publisher ID.\n\t\tif (null == signingKeyID) {\n\t\t\tsigningKeyID = keyManager.getDefaultKeyID();\n\t\t}\n\n\t\t// Reallly do want == here\n\t\tif ((null == signingKeyLocator) || (SELF_SIGNED_KEY_LOCATOR == signingKeyLocator)) {\n\t\t\t\n\t\t\tKeyLocator existingLocator = keyManager.getKeyLocator(signingKeyID);\n\t\t\t\n\t\t\t// If we've asked for this to be self-signed, or we have made the default KEY\n\t\t\t// type key locator, make this a self-signed key.\n\t\t\tif ((SELF_SIGNED_KEY_LOCATOR == signingKeyLocator) || \n\t\t\t\t\t(existingLocator.type() == KeyLocatorType.KEY)) {\n\t\t\t\tPublisherPublicKeyDigest keyDigest = new PublisherPublicKeyDigest(keyToPublish);\n\t\t\t\tif (signingKeyID.equals(keyDigest)) {\n\t\t\t\t\t// Make a self-referential key locator. For now do not include the\n\t\t\t\t\t// version.\n\t\t\t\t\texistingLocator = new KeyLocator(new KeyName(keyName, signingKeyID));\n\t\t\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.FINER)) {\n\t\t\t\t\t\tLog.finer(Log.FAC_KEYS, \"Overriding constructed key locator of type KEY, making self-referential locator {0}\", existingLocator);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tsigningKeyLocator = existingLocator;\n\t\t}\t\n\t\t\n\t\t// Here is where we get tricky. We might really want the key to be of a particular\n\t\t// version. In general, as we use the network objects to write versioned versioned stuff,\n\t\t// we might not be able to take the last component of a name, if versioned, as the version\n\t\t// to use to save -- might really want <name>/<version1>/<version2>. So unless we want to \n\t\t// make that impossible to achieve, we need to not have the network objects take the \n\t\t// name <name>/<version1> and save to <version1> (though they read from <version1> just\n\t\t// fine given the same). You always want to save to a new version, unless someone tells you\n\t\t// something different from the outside. \n\t\t// Come up with a contorted option. If you want to publish <version>/<version> stuff, you\n\t\t// need to pass in the second version...\n\t\t\n\t\tCCNTime keyVersion = null; // do we force a version?\n\t\tTuple<ContentName, byte []> nameAndVersion = VersioningProfile.cutTerminalVersion(keyName);\n\n\t\tPublicKeyObject keyObject = null;\n\t\tif (null != flowController) {\n\t\t\t// If a flow controller was specified, use that\n\t\t\tkeyObject = new PublicKeyObject(nameAndVersion.first(), keyToPublish, \n\t\t\t\t\t\t\t\t\t\t\tsigningKeyID, signingKeyLocator, flowController);\n\t\t} else {\n\t\t\t// No flow controller given, use specified saveType.\n\t\t\tkeyObject = new PublicKeyObject(nameAndVersion.first(), keyToPublish, saveType,\n\t\t\t\t\t\t\t\t\t\t\tsigningKeyID, signingKeyLocator, handle);\n\t\t}\n\t\t\n\t\tif (null != nameAndVersion.second()) {\n\t\t\tkeyVersion = VersioningProfile.getVersionComponentAsTimestamp(nameAndVersion.second());\n\t\t}\n\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.INFO)) { \n\t\t\tLog.info(Log.FAC_KEYS, \"publishKey: key not previously published, making new key object {0} with version {1} displayed as {2}\", \n\t\t\t\tkeyObject.getVersionedName(), keyVersion, \n\t\t\t\t((null != nameAndVersion.second()) ? ContentName.componentPrintURI(nameAndVersion.second()) : \"<no version>\"));\n\t\t}\n\t\t\n\t\t// Eventually may want to find something already published and link to it, but be simple here.\n\n\t\tif (!keyObject.save(keyVersion)) {\n\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.INFO)) { \n\t\t\t\tLog.info(Log.FAC_KEYS, \"Not saving key when we thought we needed to: desired key value {0}, have key value {1}, \" +\n\t\t\t\t\tkeyToPublish, new PublisherPublicKeyDigest(keyObject.publicKey()));\n\t\t\t}\n\t\t} else {\n\t\t\tif (Log.isLoggable(Log.FAC_KEYS, Level.INFO)) { \n\t\t\t\tLog.info(Log.FAC_KEYS, \"Published key {0} to name {1} with key locator {2}.\", keyToPublish, keyObject.getVersionedName(), signingKeyLocator);\n\t\t\t}\n\t\t}\n\t\tkeyManager.getPublicKeyCache().remember(keyObject);\n\t\treturn keyObject;\n\t}","commit_id":"a72df47ac7ea091fd61a3a10685bec939a059304","url":"https://github.com/ProjectCCNx/ccnx"},{"original_method":"public static String showVersion()\n    {\n        final String ls = System.getProperty( \"line.separator\" );\n        Properties properties = getBuildProperties();\n        StringBuilder version = new StringBuilder( 256 );\n        version.append( ansi().bold().a( createMavenVersionString( properties ) ).reset() ).append( ls );\n        version.append( reduce(\n            properties.getProperty( \"distributionShortName\" ) + \" home: \" + System.getProperty( \"maven.home\",\n                                                                                                \"<unknown Maven \"\n                                                                                                    + \"home>\" ) ) )\n            .append(\n            ls );\n        version.append( \"Java version: \" ).append(\n            System.getProperty( \"java.version\", \"<unknown Java version>\" ) ).append( \", vendor: \" ).append(\n            System.getProperty( \"java.vendor\", \"<unknown vendor>\" ) ).append( ls );\n        version.append( \"Java home: \" ).append( System.getProperty( \"java.home\", \"<unknown Java home>\" ) ).append( ls );\n        version.append( \"Default locale: \" ).append( Locale.getDefault() ).append( \", platform encoding: \" ).append(\n            System.getProperty( \"file.encoding\", \"<unknown encoding>\" ) ).append( ls );\n        version.append( \"OS name: \\\"\" ).append( SystemUtils.OS_NAME ).\n            append( \"\\\", version: \\\"\" ).append( SystemUtils.OS_VERSION ).\n            append( \"\\\", arch: \\\"\" ).append( SystemUtils.OS_ARCH );\n        String osFamily = \"<unknown family>\";\n        if ( SystemUtils.IS_OS_WINDOWS )\n        {\n            osFamily = \"Windows\";\n        }\n        else if ( SystemUtils.IS_OS_UNIX )\n        {\n            osFamily = \"Unix\";\n        }\n        version.append( \"\\\", family: \\\"\" ).append( osFamily ).append( '\\\"' );\n        return version.toString();\n    }","id":13898,"modified_method":"public static String showVersion()\n    {\n        final String ls = System.getProperty( \"line.separator\" );\n        Properties properties = getBuildProperties();\n        StringBuilder version = new StringBuilder( 256 );\n        version.append( ansi().strong( createMavenVersionString( properties ) ) ).append( ls );\n        version.append( reduce(\n            properties.getProperty( \"distributionShortName\" ) + \" home: \" + System.getProperty( \"maven.home\",\n                                                                                                \"<unknown Maven \"\n                                                                                                    + \"home>\" ) ) )\n            .append(\n            ls );\n        version.append( \"Java version: \" ).append(\n            System.getProperty( \"java.version\", \"<unknown Java version>\" ) ).append( \", vendor: \" ).append(\n            System.getProperty( \"java.vendor\", \"<unknown vendor>\" ) ).append( ls );\n        version.append( \"Java home: \" ).append( System.getProperty( \"java.home\", \"<unknown Java home>\" ) ).append( ls );\n        version.append( \"Default locale: \" ).append( Locale.getDefault() ).append( \", platform encoding: \" ).append(\n            System.getProperty( \"file.encoding\", \"<unknown encoding>\" ) ).append( ls );\n        version.append( \"OS name: \\\"\" ).append( SystemUtils.OS_NAME ).\n            append( \"\\\", version: \\\"\" ).append( SystemUtils.OS_VERSION ).\n            append( \"\\\", arch: \\\"\" ).append( SystemUtils.OS_ARCH );\n        String osFamily = \"<unknown family>\";\n        if ( SystemUtils.IS_OS_WINDOWS )\n        {\n            osFamily = \"Windows\";\n        }\n        else if ( SystemUtils.IS_OS_UNIX )\n        {\n            osFamily = \"Unix\";\n        }\n        version.append( \"\\\", family: \\\"\" ).append( osFamily ).append( '\\\"' );\n        return version.toString();\n    }","commit_id":"402ce4c3cd1e970d2d4186aa6fc3e10c612241fb","url":"https://github.com/apache/maven"},{"original_method":"@Override\n    protected void renderName( final Event event, final StringBuilder buff, final boolean shortName )\n    {\n        StringBuilder tmp = new StringBuilder();\n        super.renderName( event, tmp, shortName );\n        buff.append( ansi().fgGreen().a( tmp ).reset() );\n    }","id":13899,"modified_method":"@Override\n    protected void renderName( final Event event, final StringBuilder buff, final boolean shortName )\n    {\n        StringBuilder tmp = new StringBuilder();\n        super.renderName( event, tmp, shortName );\n        buff.append( ansi().success( tmp ) );\n    }","commit_id":"402ce4c3cd1e970d2d4186aa6fc3e10c612241fb","url":"https://github.com/apache/maven"},{"original_method":"@Override\n    protected void renderCause( final Event event, final StringBuilder buff )\n    {\n        assert event != null;\n        assert buff != null;\n\n        Throwable cause = event.getCause();\n        if ( cause == null )\n        {\n            return;\n        }\n\n        buff.append( ansi().bold().fgRed().a( cause.getClass().getName() ).reset() );\n        if ( cause.getMessage() != null )\n        {\n            buff.append( \": \" );\n            buff.append( ansi().bold().fgRed().a( cause.getMessage() ).reset() );\n        }\n        renderNewLine( buff );\n\n        while ( cause != null )\n        {\n            for ( StackTraceElement e : cause.getStackTrace() )\n            {\n                buff.append( \"    \" );\n                buff.append( ansi().bold().a( \"at\" ).reset().a( \" \" )\n                        .a( e.getClassName() ).a( \".\" ).a( e.getMethodName() ) );\n                buff.append( ansi().a( \" (\" ).bold().a( getLocation( e ) ).reset().a( \")\" ) );\n                renderNewLine( buff );\n            }\n\n            cause = cause.getCause();\n            if ( cause != null )\n            {\n                buff.append( ansi().bold().a( \"Caused by\" ).reset().a( \": \" )\n                        .a( cause.getClass().getName() ) );\n                if ( cause.getMessage() != null )\n                {\n                    buff.append( \": \" );\n                    buff.append( ansi().bold().fgRed().a( cause.getMessage() ).reset() );\n                }\n                renderNewLine( buff );\n            }\n        }\n    }","id":13900,"modified_method":"@Override\n    protected void renderCause( final Event event, final StringBuilder buff )\n    {\n        assert event != null;\n        assert buff != null;\n\n        Throwable cause = event.getCause();\n        if ( cause == null )\n        {\n            return;\n        }\n\n        buff.append( ansi().failure( cause.getClass().getName() ) );\n        if ( cause.getMessage() != null )\n        {\n            buff.append( \": \" );\n            buff.append( ansi().failure( cause.getMessage() ) );\n        }\n        renderNewLine( buff );\n\n        while ( cause != null )\n        {\n            for ( StackTraceElement e : cause.getStackTrace() )\n            {\n                buff.append( \"    \" );\n                buff.append( ansi().strong( \"at\" ).a( \" \" ).a( e.getClassName() ).a( \".\" ).a( e.getMethodName() ) );\n                buff.append( ansi().a( \" (\" ).strong( getLocation( e ) ).a( \")\" ) );\n                renderNewLine( buff );\n            }\n\n            cause = cause.getCause();\n            if ( cause != null )\n            {\n                buff.append( ansi().strong( \"Caused by\" ).a( \": \" ).a( cause.getClass().getName() ) );\n                if ( cause.getMessage() != null )\n                {\n                    buff.append( \": \" );\n                    buff.append( ansi().failure( cause.getMessage() ) );\n                }\n                renderNewLine( buff );\n            }\n        }\n    }","commit_id":"402ce4c3cd1e970d2d4186aa6fc3e10c612241fb","url":"https://github.com/apache/maven"},{"original_method":"@Override\n    protected void renderLevel( final Event event, final StringBuilder buff )\n    {\n        assert event != null;\n        assert buff != null;\n\n        Level level = event.getLevel();\n        switch ( level )\n        {\n            case TRACE:\n            case DEBUG:\n                buff.append( ansi().bold().fgCyan().a( level.name() ).reset() );\n                break;\n\n            case INFO:\n                buff.append( ansi().bold().fgBlue().a( level.name() ).reset() );\n                break;\n\n            case WARN:\n                // Maven uses WARNING instead of WARN\n                buff.append( ansi().bold().fgYellow().a( WARNING ).reset() );\n                break;\n\n            case ERROR:\n                buff.append( ansi().bold().fgRed().a( level.name() ).reset() );\n                break;\n\n            default:\n                throw new InternalError();\n        }\n    }","id":13901,"modified_method":"@Override\n    protected void renderLevel( final Event event, final StringBuilder buff )\n    {\n        assert event != null;\n        assert buff != null;\n\n        Level level = event.getLevel();\n        switch ( level )\n        {\n            case TRACE:\n            case DEBUG:\n                buff.append( ansi().debug().a( level.name() ).reset() );\n                break;\n\n            case INFO:\n                buff.append( ansi().info().a( level.name() ).reset() );\n                break;\n\n            case WARN:\n                // Maven uses WARNING instead of WARN\n                buff.append( ansi().warning().a( WARNING ).reset() );\n                break;\n\n            case ERROR:\n                buff.append( ansi().error().a( level.name() ).reset() );\n                break;\n\n            default:\n                throw new InternalError();\n        }\n    }","commit_id":"402ce4c3cd1e970d2d4186aa6fc3e10c612241fb","url":"https://github.com/apache/maven"},{"original_method":"private void append( Ansi ansi, MavenProject project )\n    {\n        ansi.a( \" @ \" ).fgCyan().a( project.getArtifactId() ).reset();\n    }","id":13902,"modified_method":"private void append( AnsiUtils ansi, MavenProject project )\n    {\n        ansi.a( \" @ \" ).project( project.getArtifactId() );\n    }","commit_id":"402ce4c3cd1e970d2d4186aa6fc3e10c612241fb","url":"https://github.com/apache/maven"},{"original_method":"private void appendForkInfo( Ansi ansi, MojoDescriptor md )\n    {\n        ansi.bold();\n        if ( StringUtils.isNotEmpty( md.getExecutePhase() ) )\n        {\n            // forked phase\n            if ( StringUtils.isNotEmpty( md.getExecuteLifecycle() ) )\n            {\n                ansi.a( '[' );\n                ansi.a( md.getExecuteLifecycle() );\n                ansi.a( ']' );\n            }\n            ansi.a( md.getExecutePhase() );\n        }\n        else\n        {\n            // forked goal\n            ansi.a( ':' );\n            ansi.a( md.getExecuteGoal() );\n        }\n        ansi.reset();\n    }","id":13903,"modified_method":"private void appendForkInfo( AnsiUtils ansi, MojoDescriptor md )\n    {\n        ansi.strong();\n        if ( StringUtils.isNotEmpty( md.getExecutePhase() ) )\n        {\n            // forked phase\n            if ( StringUtils.isNotEmpty( md.getExecuteLifecycle() ) )\n            {\n                ansi.a( '[' );\n                ansi.a( md.getExecuteLifecycle() );\n                ansi.a( ']' );\n            }\n            ansi.a( md.getExecutePhase() );\n        }\n        else\n        {\n            // forked goal\n            ansi.a( ':' );\n            ansi.a( md.getExecuteGoal() );\n        }\n        ansi.reset();\n    }","commit_id":"402ce4c3cd1e970d2d4186aa6fc3e10c612241fb","url":"https://github.com/apache/maven"},{"original_method":"/**\n     * <pre>--- mojo-artifactId:version:goal (mojo-executionId) @ project-artifactId ---<\/pre>\n     */\n    @Override\n    public void mojoStarted( ExecutionEvent event )\n    {\n        if ( logger.isInfoEnabled() )\n        {\n            logger.info( \"\" );\n\n            Ansi ansi = ansi().bold().a( \"--- \" ).reset();\n            append( ansi, event.getMojoExecution() );\n            append( ansi, event.getProject() );\n            ansi.bold().a( \" ---\" ).reset();\n\n            logger.info( ansi.toString() );\n        }\n    }","id":13904,"modified_method":"/**\n     * <pre>--- mojo-artifactId:version:goal (mojo-executionId) @ project-artifactId ---<\/pre>\n     */\n    @Override\n    public void mojoStarted( ExecutionEvent event )\n    {\n        if ( logger.isInfoEnabled() )\n        {\n            logger.info( \"\" );\n\n            AnsiUtils ansi = ansi().strong( \"--- \" );\n            append( ansi, event.getMojoExecution() );\n            append( ansi, event.getProject() );\n            ansi.strong( \" ---\" );\n\n            logger.info( ansi.toString() );\n        }\n    }","commit_id":"402ce4c3cd1e970d2d4186aa6fc3e10c612241fb","url":"https://github.com/apache/maven"},{"original_method":"private void logReactorSummary( MavenSession session )\n    {\n        infoLine( '-' );\n\n        infoMain( \"Reactor Summary:\" );\n\n        logger.info( \"\" );\n\n        MavenExecutionResult result = session.getResult();\n\n        for ( MavenProject project : session.getProjects() )\n        {\n            StringBuilder buffer = new StringBuilder( 128 );\n\n            buffer.append( project.getName() );\n            buffer.append( ' ' );\n\n            if ( buffer.length() <= MAX_PROJECT_NAME_LENGTH )\n            {\n                while ( buffer.length() < MAX_PROJECT_NAME_LENGTH )\n                {\n                    buffer.append( '.' );\n                }\n                buffer.append( ' ' );\n            }\n\n            BuildSummary buildSummary = result.getBuildSummary( project );\n\n            if ( buildSummary == null )\n            {\n                buffer.append( ansi().bold().fgYellow().a( \"SKIPPED\" ).reset() );\n            }\n            else if ( buildSummary instanceof BuildSuccess )\n            {\n                buffer.append( ansi().bold().fgGreen().a( \"SUCCESS\" ).reset() );\n                buffer.append( \" [\" );\n                String buildTimeDuration = formatDuration( buildSummary.getTime() );\n                int padSize = MAX_PADDED_BUILD_TIME_DURATION_LENGTH - buildTimeDuration.length();\n                if ( padSize > 0 )\n                {\n                    buffer.append( chars( ' ', padSize ) );\n                }\n                buffer.append( buildTimeDuration );\n                buffer.append( ']' );\n            }\n            else if ( buildSummary instanceof BuildFailure )\n            {\n                buffer.append( ansi().bold().fgRed().a( \"FAILURE\" ).reset() );\n                buffer.append( \" [\" );\n                String buildTimeDuration = formatDuration( buildSummary.getTime() );\n                int padSize = MAX_PADDED_BUILD_TIME_DURATION_LENGTH - buildTimeDuration.length();\n                if ( padSize > 0 )\n                {\n                    buffer.append( chars( ' ', padSize ) );\n                }\n                buffer.append( buildTimeDuration );\n                buffer.append( ']' );\n            }\n\n            logger.info( buffer.toString() );\n        }\n    }","id":13905,"modified_method":"private void logReactorSummary( MavenSession session )\n    {\n        infoLine( '-' );\n\n        infoMain( \"Reactor Summary:\" );\n\n        logger.info( \"\" );\n\n        MavenExecutionResult result = session.getResult();\n\n        for ( MavenProject project : session.getProjects() )\n        {\n            StringBuilder buffer = new StringBuilder( 128 );\n\n            buffer.append( project.getName() );\n            buffer.append( ' ' );\n\n            if ( buffer.length() <= MAX_PROJECT_NAME_LENGTH )\n            {\n                while ( buffer.length() < MAX_PROJECT_NAME_LENGTH )\n                {\n                    buffer.append( '.' );\n                }\n                buffer.append( ' ' );\n            }\n\n            BuildSummary buildSummary = result.getBuildSummary( project );\n\n            if ( buildSummary == null )\n            {\n                buffer.append( ansi().warning( \"SKIPPED\" ) );\n            }\n            else if ( buildSummary instanceof BuildSuccess )\n            {\n                buffer.append( ansi().success( \"SUCCESS\" ) );\n                buffer.append( \" [\" );\n                String buildTimeDuration = formatDuration( buildSummary.getTime() );\n                int padSize = MAX_PADDED_BUILD_TIME_DURATION_LENGTH - buildTimeDuration.length();\n                if ( padSize > 0 )\n                {\n                    buffer.append( chars( ' ', padSize ) );\n                }\n                buffer.append( buildTimeDuration );\n                buffer.append( ']' );\n            }\n            else if ( buildSummary instanceof BuildFailure )\n            {\n                buffer.append( ansi().failure( \"FAILURE\" ) );\n                buffer.append( \" [\" );\n                String buildTimeDuration = formatDuration( buildSummary.getTime() );\n                int padSize = MAX_PADDED_BUILD_TIME_DURATION_LENGTH - buildTimeDuration.length();\n                if ( padSize > 0 )\n                {\n                    buffer.append( chars( ' ', padSize ) );\n                }\n                buffer.append( buildTimeDuration );\n                buffer.append( ']' );\n            }\n\n            logger.info( buffer.toString() );\n        }\n    }","commit_id":"402ce4c3cd1e970d2d4186aa6fc3e10c612241fb","url":"https://github.com/apache/maven"},{"original_method":"private void append( Ansi ansi, MojoExecution me )\n    {\n        ansi.fgGreen().a( me.getArtifactId() ).a( ':' ).a( me.getVersion() );\n        ansi.a( ':' ).a( me.getGoal() ).reset();\n        if ( me.getExecutionId() != null )\n        {\n            ansi.bold().a( \" (\" ).a( me.getExecutionId() ).a( ')' ).reset();\n        }\n    }","id":13906,"modified_method":"private void append( AnsiUtils ansi, MojoExecution me )\n    {\n        ansi.mojo().a( me.getArtifactId() ).a( ':' ).a( me.getVersion() );\n        ansi.a( ':' ).a( me.getGoal() ).reset();\n        if ( me.getExecutionId() != null )\n        {\n            ansi.strong( \" (\" ).a( me.getExecutionId() ).a( ')' );\n        }\n    }","commit_id":"402ce4c3cd1e970d2d4186aa6fc3e10c612241fb","url":"https://github.com/apache/maven"},{"original_method":"/**\n     * <pre>>>> mojo-artifactId:version:goal (mojo-executionId) > :forked-goal @ project-artifactId >>><\/pre>\n     * <pre>>>> mojo-artifactId:version:goal (mojo-executionId) > [lifecycle]phase @ project-artifactId >>><\/pre>\n     */\n    @Override\n    public void forkStarted( ExecutionEvent event )\n    {\n        if ( logger.isInfoEnabled() )\n        {\n            logger.info( \"\" );\n\n            Ansi ansi = ansi().bold().a( \">>> \" ).reset();\n            append( ansi, event.getMojoExecution() );\n            ansi.bold().a( \" > \" ).reset();\n            appendForkInfo( ansi, event.getMojoExecution().getMojoDescriptor() );\n            append( ansi, event.getProject() );\n            ansi.bold().a( \" >>>\" ).reset();\n\n            logger.info( ansi.toString() );\n        }\n    }","id":13907,"modified_method":"/**\n     * <pre>>>> mojo-artifactId:version:goal (mojo-executionId) > :forked-goal @ project-artifactId >>><\/pre>\n     * <pre>>>> mojo-artifactId:version:goal (mojo-executionId) > [lifecycle]phase @ project-artifactId >>><\/pre>\n     */\n    @Override\n    public void forkStarted( ExecutionEvent event )\n    {\n        if ( logger.isInfoEnabled() )\n        {\n            logger.info( \"\" );\n\n            AnsiUtils ansi = ansi().strong( \">>> \" );\n            append( ansi, event.getMojoExecution() );\n            ansi.strong( \" > \" );\n            appendForkInfo( ansi, event.getMojoExecution().getMojoDescriptor() );\n            append( ansi, event.getProject() );\n            ansi.strong( \" >>>\" );\n\n            logger.info( ansi.toString() );\n        }\n    }","commit_id":"402ce4c3cd1e970d2d4186aa6fc3e10c612241fb","url":"https://github.com/apache/maven"},{"original_method":"private void logResult( MavenSession session )\n    {\n        infoLine( '-' );\n        Ansi ansi = ansi().bold();\n\n        if ( session.getResult().hasExceptions() )\n        {\n            ansi.fgRed().a( \"BUILD FAILURE\" );\n        }\n        else\n        {\n            ansi.fgGreen().a( \"BUILD SUCCESS\" );\n        }\n        logger.info( ansi.reset().toString() );\n    }","id":13908,"modified_method":"private void logResult( MavenSession session )\n    {\n        infoLine( '-' );\n        AnsiUtils ansi = ansi();\n\n        if ( session.getResult().hasExceptions() )\n        {\n            ansi.failure( \"BUILD FAILURE\" );\n        }\n        else\n        {\n            ansi.success( \"BUILD SUCCESS\" );\n        }\n        logger.info( ansi.toString() );\n    }","commit_id":"402ce4c3cd1e970d2d4186aa6fc3e10c612241fb","url":"https://github.com/apache/maven"},{"original_method":"/**\n     * <pre>&lt;&lt;&lt; mojo-artifactId:version:goal (mojo-executionId) &lt; :forked-goal @ project-artifactId &lt;&lt;&lt;<\/pre>\n     * <pre>&lt;&lt;&lt; mojo-artifactId:version:goal (mojo-executionId) &lt; [lifecycle]phase @ project-artifactId &lt;&lt;&lt;<\/pre>\n     */\n    // CHECKSTYLE_ON: LineLength\n    @Override\n    public void forkSucceeded( ExecutionEvent event )\n    {\n        if ( logger.isInfoEnabled() )\n        {\n            logger.info( \"\" );\n\n            Ansi ansi = ansi().bold().a( \"<<< \" ).reset();\n            append( ansi, event.getMojoExecution() );\n            ansi.bold().a( \" < \" ).reset();\n            appendForkInfo( ansi, event.getMojoExecution().getMojoDescriptor() );\n            append( ansi, event.getProject() );\n            ansi.bold().a( \" <<<\" ).reset();\n\n            logger.info( ansi.toString() );\n        }\n    }","id":13909,"modified_method":"/**\n     * <pre>&lt;&lt;&lt; mojo-artifactId:version:goal (mojo-executionId) &lt; :forked-goal @ project-artifactId &lt;&lt;&lt;<\/pre>\n     * <pre>&lt;&lt;&lt; mojo-artifactId:version:goal (mojo-executionId) &lt; [lifecycle]phase @ project-artifactId &lt;&lt;&lt;<\/pre>\n     */\n    // CHECKSTYLE_ON: LineLength\n    @Override\n    public void forkSucceeded( ExecutionEvent event )\n    {\n        if ( logger.isInfoEnabled() )\n        {\n            logger.info( \"\" );\n\n            AnsiUtils ansi = ansi().strong( \"<<< \" );\n            append( ansi, event.getMojoExecution() );\n            ansi.strong( \" < \" );\n            appendForkInfo( ansi, event.getMojoExecution().getMojoDescriptor() );\n            append( ansi, event.getProject() );\n            ansi.strong( \" <<<\" );\n\n            logger.info( ansi.toString() );\n        }\n    }","commit_id":"402ce4c3cd1e970d2d4186aa6fc3e10c612241fb","url":"https://github.com/apache/maven"},{"original_method":"private void infoMain( String msg )\n    {\n        logger.info( ansi().bold().a( msg ).reset().toString() );\n    }","id":13910,"modified_method":"private void infoMain( String msg )\n    {\n        logger.info( ansi().strong( msg ).toString() );\n    }","commit_id":"402ce4c3cd1e970d2d4186aa6fc3e10c612241fb","url":"https://github.com/apache/maven"},{"original_method":"private static String createMessage( MojoExecution execution, MavenProject project, Throwable cause )\n    {\n        Ansi buffer = ansi( /*256*/ );\n\n        buffer.a( \"Failed to execute goal\" ).reset();\n\n        if ( execution != null )\n        {\n            buffer.a( ' ' ).a( execution.getGroupId() ).a( ':' ).fgGreen().a( execution.getArtifactId() );\n            buffer.a( ':' ).a( execution.getVersion() ).a( ':' ).a( execution.getGoal() ).reset();\n            buffer.bold().a( \" (\" ).a( execution.getExecutionId() ).a( ')' ).reset();\n        }\n\n        if ( project != null )\n        {\n            buffer.a( \" on project \" );\n            buffer.fgCyan().a( project.getArtifactId() ).reset();\n        }\n\n        if ( cause != null )\n        {\n            buffer.a( \": \" ).bold().fgRed().a( cause.getMessage() ).reset();\n        }\n\n        return buffer.toString();\n    }","id":13911,"modified_method":"private static String createMessage( MojoExecution execution, MavenProject project, Throwable cause )\n    {\n        AnsiUtils buffer = ansi( 256 );\n\n        buffer.a( \"Failed to execute goal\" );\n\n        if ( execution != null )\n        {\n            buffer.a( ' ' ).a( execution.getGroupId() ).a( ':' );\n            buffer.mojo().a( execution.getArtifactId() ).a( ':' );\n            buffer.a( execution.getVersion() ).a( ':' ).a( execution.getGoal() ).reset();\n            buffer.strong().a( \" (\" ).a( execution.getExecutionId() ).a( ')' ).reset();\n        }\n\n        if ( project != null )\n        {\n            buffer.a( \" on project \" );\n            buffer.project( project.getArtifactId() );\n        }\n\n        if ( cause != null )\n        {\n            buffer.a( \": \" ).failure( cause.getMessage() );\n        }\n\n        return buffer.toString();\n    }","commit_id":"402ce4c3cd1e970d2d4186aa6fc3e10c612241fb","url":"https://github.com/apache/maven"},{"original_method":"/**\n     * configure logging\n     */\n    private void logging( CliRequest cliRequest )\n    {\n        cliRequest.debug = cliRequest.commandLine.hasOption( CLIManager.DEBUG );\n        cliRequest.quiet = !cliRequest.debug && cliRequest.commandLine.hasOption( CLIManager.QUIET );\n        cliRequest.showErrors = cliRequest.debug || cliRequest.commandLine.hasOption( CLIManager.ERRORS );\n\n        slf4jLoggerFactory = LoggerFactory.getILoggerFactory();\n        Slf4jConfiguration slf4jConfiguration = Slf4jConfigurationFactory.getConfiguration( slf4jLoggerFactory );\n\n        if ( cliRequest.debug )\n        {\n            cliRequest.request.setLoggingLevel( MavenExecutionRequest.LOGGING_LEVEL_DEBUG );\n            slf4jConfiguration.setRootLoggerLevel( Slf4jConfiguration.Level.DEBUG );\n        }\n        else if ( cliRequest.quiet )\n        {\n            cliRequest.request.setLoggingLevel( MavenExecutionRequest.LOGGING_LEVEL_ERROR );\n            slf4jConfiguration.setRootLoggerLevel( Slf4jConfiguration.Level.ERROR );\n        }\n        // else fall back to default log level specified in conf\n        // see https://issues.apache.org/jira/browse/MNG-2570\n\n        if ( cliRequest.commandLine.hasOption( CLIManager.BATCH_MODE ) )\n        {\n            Ansi.setEnabled( false );\n        }\n\n        if ( cliRequest.commandLine.hasOption( CLIManager.LOG_FILE ) )\n        {\n            File logFile = new File( cliRequest.commandLine.getOptionValue( CLIManager.LOG_FILE ) );\n            logFile = resolveFile( logFile, cliRequest.workingDirectory );\n\n            Ansi.setEnabled( false );\n\n            // redirect stdout and stderr to file\n            try\n            {\n                PrintStream ps = new PrintStream( new FileOutputStream( logFile ) );\n                System.setOut( ps );\n                System.setErr( ps );\n            }\n            catch ( FileNotFoundException e )\n            {\n                //\n                // Ignore\n                //\n            }\n        }\n\n        slf4jConfiguration.activate();\n\n        plexusLoggerManager = new Slf4jLoggerManager();\n        slf4jLogger = slf4jLoggerFactory.getLogger( this.getClass().getName() );\n    }","id":13912,"modified_method":"/**\n     * configure logging\n     */\n    private void logging( CliRequest cliRequest )\n    {\n        cliRequest.debug = cliRequest.commandLine.hasOption( CLIManager.DEBUG );\n        cliRequest.quiet = !cliRequest.debug && cliRequest.commandLine.hasOption( CLIManager.QUIET );\n        cliRequest.showErrors = cliRequest.debug || cliRequest.commandLine.hasOption( CLIManager.ERRORS );\n\n        slf4jLoggerFactory = LoggerFactory.getILoggerFactory();\n        Slf4jConfiguration slf4jConfiguration = Slf4jConfigurationFactory.getConfiguration( slf4jLoggerFactory );\n\n        if ( cliRequest.debug )\n        {\n            cliRequest.request.setLoggingLevel( MavenExecutionRequest.LOGGING_LEVEL_DEBUG );\n            slf4jConfiguration.setRootLoggerLevel( Slf4jConfiguration.Level.DEBUG );\n        }\n        else if ( cliRequest.quiet )\n        {\n            cliRequest.request.setLoggingLevel( MavenExecutionRequest.LOGGING_LEVEL_ERROR );\n            slf4jConfiguration.setRootLoggerLevel( Slf4jConfiguration.Level.ERROR );\n        }\n        // else fall back to default log level specified in conf\n        // see https://issues.apache.org/jira/browse/MNG-2570\n\n        if ( cliRequest.commandLine.hasOption( CLIManager.BATCH_MODE ) )\n        {\n            AnsiUtils.setEnabled( false );\n        }\n\n        if ( cliRequest.commandLine.hasOption( CLIManager.LOG_FILE ) )\n        {\n            File logFile = new File( cliRequest.commandLine.getOptionValue( CLIManager.LOG_FILE ) );\n            logFile = resolveFile( logFile, cliRequest.workingDirectory );\n\n            AnsiUtils.setEnabled( false );\n\n            // redirect stdout and stderr to file\n            try\n            {\n                PrintStream ps = new PrintStream( new FileOutputStream( logFile ) );\n                System.setOut( ps );\n                System.setErr( ps );\n            }\n            catch ( FileNotFoundException e )\n            {\n                //\n                // Ignore\n                //\n            }\n        }\n\n        slf4jConfiguration.activate();\n\n        plexusLoggerManager = new Slf4jLoggerManager();\n        slf4jLogger = slf4jLoggerFactory.getLogger( this.getClass().getName() );\n    }","commit_id":"402ce4c3cd1e970d2d4186aa6fc3e10c612241fb","url":"https://github.com/apache/maven"},{"original_method":"private int execute( CliRequest cliRequest )\n        throws MavenExecutionRequestPopulationException\n    {\n        MavenExecutionRequest request = executionRequestPopulator.populateDefaults( cliRequest.request );\n\n        eventSpyDispatcher.onEvent( request );\n\n        MavenExecutionResult result = maven.execute( request );\n\n        eventSpyDispatcher.onEvent( result );\n\n        eventSpyDispatcher.close();\n\n        if ( result.hasExceptions() )\n        {\n            ExceptionHandler handler = new DefaultExceptionHandler();\n\n            Map<String, String> references = new LinkedHashMap<>();\n\n            MavenProject project = null;\n\n            for ( Throwable exception : result.getExceptions() )\n            {\n                ExceptionSummary summary = handler.handleException( exception );\n\n                logSummary( summary, references, \"\", cliRequest.showErrors );\n\n                if ( project == null && exception instanceof LifecycleExecutionException )\n                {\n                    project = ( (LifecycleExecutionException) exception ).getProject();\n                }\n            }\n\n            slf4jLogger.error( \"\" );\n\n            if ( !cliRequest.showErrors )\n            {\n                slf4jLogger.error( \"To see the full stack trace of the errors, re-run Maven with the \"\n                    + ansi().bold().a( \"-e\" ).reset() + \" switch.\" );\n            }\n            if ( !slf4jLogger.isDebugEnabled() )\n            {\n                slf4jLogger.error( \"Re-run Maven using the \" + ansi().bold().a( \"-X\" ).reset()\n                    + \" switch to enable full debug logging.\" );\n            }\n\n            if ( !references.isEmpty() )\n            {\n                slf4jLogger.error( \"\" );\n                slf4jLogger.error( \"For more information about the errors and possible solutions\"\n                                       + \", please read the following articles:\" );\n\n                for ( Map.Entry<String, String> entry : references.entrySet() )\n                {\n                    slf4jLogger.error( ansi().bold().a( entry.getValue() ).reset() + \" \" + entry.getKey() );\n                }\n            }\n\n            if ( project != null && !project.equals( result.getTopologicallySortedProjects().get( 0 ) ) )\n            {\n                slf4jLogger.error( \"\" );\n                slf4jLogger.error( \"After correcting the problems, you can resume the build with the command\" );\n                slf4jLogger.error( ansi().bold().a( \"  mvn <goals> -rf :\" )\n                                   .a( project.getArtifactId() ).reset().toString() );\n            }\n\n            if ( MavenExecutionRequest.REACTOR_FAIL_NEVER.equals( cliRequest.request.getReactorFailureBehavior() ) )\n            {\n                slf4jLogger.info( \"Build failures were ignored.\" );\n\n                return 0;\n            }\n            else\n            {\n                return 1;\n            }\n        }\n        else\n        {\n            return 0;\n        }\n    }","id":13913,"modified_method":"private int execute( CliRequest cliRequest )\n        throws MavenExecutionRequestPopulationException\n    {\n        MavenExecutionRequest request = executionRequestPopulator.populateDefaults( cliRequest.request );\n\n        eventSpyDispatcher.onEvent( request );\n\n        MavenExecutionResult result = maven.execute( request );\n\n        eventSpyDispatcher.onEvent( result );\n\n        eventSpyDispatcher.close();\n\n        if ( result.hasExceptions() )\n        {\n            ExceptionHandler handler = new DefaultExceptionHandler();\n\n            Map<String, String> references = new LinkedHashMap<>();\n\n            MavenProject project = null;\n\n            for ( Throwable exception : result.getExceptions() )\n            {\n                ExceptionSummary summary = handler.handleException( exception );\n\n                logSummary( summary, references, \"\", cliRequest.showErrors );\n\n                if ( project == null && exception instanceof LifecycleExecutionException )\n                {\n                    project = ( (LifecycleExecutionException) exception ).getProject();\n                }\n            }\n\n            slf4jLogger.error( \"\" );\n\n            if ( !cliRequest.showErrors )\n            {\n                slf4jLogger.error( \"To see the full stack trace of the errors, re-run Maven with the \"\n                    + ansi().strong( \"-e\" ) + \" switch.\" );\n            }\n            if ( !slf4jLogger.isDebugEnabled() )\n            {\n                slf4jLogger.error( \"Re-run Maven using the \" + ansi().strong( \"-X\" )\n                    + \" switch to enable full debug logging.\" );\n            }\n\n            if ( !references.isEmpty() )\n            {\n                slf4jLogger.error( \"\" );\n                slf4jLogger.error( \"For more information about the errors and possible solutions\"\n                                       + \", please read the following articles:\" );\n\n                for ( Map.Entry<String, String> entry : references.entrySet() )\n                {\n                    slf4jLogger.error( ansi().strong( entry.getValue() ) + \" \" + entry.getKey() );\n                }\n            }\n\n            if ( project != null && !project.equals( result.getTopologicallySortedProjects().get( 0 ) ) )\n            {\n                slf4jLogger.error( \"\" );\n                slf4jLogger.error( \"After correcting the problems, you can resume the build with the command\" );\n                slf4jLogger.error( ansi().strong().a( \"  mvn <goals> -rf :\" )\n                                   .a( project.getArtifactId() ).reset().toString() );\n            }\n\n            if ( MavenExecutionRequest.REACTOR_FAIL_NEVER.equals( cliRequest.request.getReactorFailureBehavior() ) )\n            {\n                slf4jLogger.info( \"Build failures were ignored.\" );\n\n                return 0;\n            }\n            else\n            {\n                return 1;\n            }\n        }\n        else\n        {\n            return 0;\n        }\n    }","commit_id":"402ce4c3cd1e970d2d4186aa6fc3e10c612241fb","url":"https://github.com/apache/maven"},{"original_method":"/**\n     * @noinspection ConfusingMainMethod\n     */\n    public static int main( String[] args, ClassWorld classWorld )\n    {\n        MavenCli cli = new MavenCli();\n\n        AnsiConsole.systemInstall();\n        int result = cli.doMain( new CliRequest( args, classWorld ) );\n        AnsiConsole.systemUninstall();\n\n        return result;\n    }","id":13914,"modified_method":"/**\n     * @noinspection ConfusingMainMethod\n     */\n    public static int main( String[] args, ClassWorld classWorld )\n    {\n        MavenCli cli = new MavenCli();\n\n        AnsiUtils.systemInstall();\n        int result = cli.doMain( new CliRequest( args, classWorld ) );\n        AnsiUtils.systemUninstall();\n\n        return result;\n    }","commit_id":"402ce4c3cd1e970d2d4186aa6fc3e10c612241fb","url":"https://github.com/apache/maven"},{"original_method":"@Test\n  public void testGlobalPermissionList() throws Exception {\n    HTable acl = new HTable(conf, AccessControlLists.ACL_TABLE_NAME);\n    BlockingRpcChannel service = acl.coprocessorService(HConstants.EMPTY_START_ROW);\n    AccessControlService.BlockingInterface protocol =\n      AccessControlService.newBlockingStub(service);\n    List<UserPermission> perms = ProtobufUtil.getUserPermissions(protocol, null);\n    UserPermission adminPerm = new UserPermission(Bytes.toBytes(USER_ADMIN.getShortName()),\n      AccessControlLists.ACL_TABLE_NAME, null, null, Bytes.toBytes(\"ACRW\"));\n    assertTrue(\"Only user admin has permission on table _acl_ per setup\",\n      perms.size() == 1 && hasFoundUserPermission(adminPerm, perms));\n  }","id":13915,"modified_method":"@Test\n  public void testGlobalPermissionList() throws Exception {\n    List<UserPermission> perms;\n    HTable acl = new HTable(conf, AccessControlLists.ACL_TABLE_NAME);\n    try {\n      BlockingRpcChannel service = acl.coprocessorService(HConstants.EMPTY_START_ROW);\n      AccessControlService.BlockingInterface protocol =\n        AccessControlService.newBlockingStub(service);\n      perms = ProtobufUtil.getUserPermissions(protocol, null);\n    } finally {\n      acl.close();\n    }\n    UserPermission adminPerm = new UserPermission(Bytes.toBytes(USER_ADMIN.getShortName()),\n      AccessControlLists.ACL_TABLE_NAME, null, null, Bytes.toBytes(\"ACRW\"));\n    assertTrue(\"Only user admin has permission on table _acl_ per setup\",\n      perms.size() == 1 && hasFoundUserPermission(adminPerm, perms));\n  }","commit_id":"d82b07dc6db0f1c693f6a56e80a0f965bace2cbd","url":"https://github.com/apache/hbase"},{"original_method":"@Test\n  public void testMove() throws Exception {\n    HTable table = new HTable(TEST_UTIL.getConfiguration(), TEST_TABLE);\n    Map<HRegionInfo, ServerName> regions = table.getRegionLocations();\n    final Map.Entry<HRegionInfo, ServerName> firstRegion = regions.entrySet().iterator().next();\n    final ServerName server = TEST_UTIL.getHBaseCluster().getRegionServer(0).getServerName();\n    PrivilegedExceptionAction action = new PrivilegedExceptionAction() {\n      public Object run() throws Exception {\n        ACCESS_CONTROLLER.preMove(ObserverContext.createAndPrepare(CP_ENV, null),\n          firstRegion.getKey(), server, server);\n        return null;\n      }\n    };\n\n    verifyAllowed(action, SUPERUSER, USER_ADMIN, USER_OWNER);\n    verifyDenied(action, USER_CREATE, USER_RW, USER_RO, USER_NONE);\n  }","id":13916,"modified_method":"@Test\n  public void testMove() throws Exception {\n    Map<HRegionInfo, ServerName> regions;\n    HTable table = new HTable(TEST_UTIL.getConfiguration(), TEST_TABLE);\n    try {\n      regions = table.getRegionLocations();\n    } finally {\n      table.close();\n    }\n    final Map.Entry<HRegionInfo, ServerName> firstRegion = regions.entrySet().iterator().next();\n    final ServerName server = TEST_UTIL.getHBaseCluster().getRegionServer(0).getServerName();\n    PrivilegedExceptionAction action = new PrivilegedExceptionAction() {\n      public Object run() throws Exception {\n        ACCESS_CONTROLLER.preMove(ObserverContext.createAndPrepare(CP_ENV, null),\n          firstRegion.getKey(), server, server);\n        return null;\n      }\n    };\n\n    verifyAllowed(action, SUPERUSER, USER_ADMIN, USER_OWNER);\n    verifyDenied(action, USER_CREATE, USER_RW, USER_RO, USER_NONE);\n  }","commit_id":"d82b07dc6db0f1c693f6a56e80a0f965bace2cbd","url":"https://github.com/apache/hbase"},{"original_method":"@Test\n  public void testAppend() throws Exception {\n\n    PrivilegedExceptionAction appendAction = new PrivilegedExceptionAction() {\n      public Object run() throws Exception {\n        byte[] row = Bytes.toBytes(\"random_row\");\n        byte[] qualifier = Bytes.toBytes(\"q\");\n        HTable t = new HTable(conf, TEST_TABLE);\n        Put put = new Put(row);\n        put.add(TEST_FAMILY, qualifier, Bytes.toBytes(1));\n        t.put(put);\n        Append append = new Append(row);\n        append.add(TEST_FAMILY, qualifier, Bytes.toBytes(2));\n        t.append(append);\n        return null;\n      }\n    };\n\n    verifyAllowed(appendAction, SUPERUSER, USER_ADMIN, USER_OWNER, USER_RW);\n    verifyDenied(appendAction, USER_CREATE, USER_RO, USER_NONE);\n  }","id":13917,"modified_method":"@Test\n  public void testAppend() throws Exception {\n\n    PrivilegedExceptionAction appendAction = new PrivilegedExceptionAction() {\n      public Object run() throws Exception {\n        byte[] row = Bytes.toBytes(\"random_row\");\n        byte[] qualifier = Bytes.toBytes(\"q\");\n        Put put = new Put(row);\n        put.add(TEST_FAMILY, qualifier, Bytes.toBytes(1));\n        Append append = new Append(row);\n        append.add(TEST_FAMILY, qualifier, Bytes.toBytes(2));\n        HTable t = new HTable(conf, TEST_TABLE);\n        try {\n          t.put(put);\n          t.append(append);\n        } finally {\n          t.close();\n        }\n        return null;\n      }\n    };\n\n    verifyAllowed(appendAction, SUPERUSER, USER_ADMIN, USER_OWNER, USER_RW);\n    verifyDenied(appendAction, USER_CREATE, USER_RO, USER_NONE);\n  }","commit_id":"d82b07dc6db0f1c693f6a56e80a0f965bace2cbd","url":"https://github.com/apache/hbase"},{"original_method":"@Test\n  public void testRead() throws Exception {\n    // get action\n    PrivilegedExceptionAction getAction = new PrivilegedExceptionAction() {\n      public Object run() throws Exception {\n        Get g = new Get(Bytes.toBytes(\"random_row\"));\n        g.addFamily(TEST_FAMILY);\n        HTable t = new HTable(conf, TEST_TABLE);\n        t.get(g);\n        return null;\n      }\n    };\n    verifyRead(getAction);\n\n    // action for scanning\n    PrivilegedExceptionAction scanAction = new PrivilegedExceptionAction() {\n      public Object run() throws Exception {\n        Scan s = new Scan();\n        s.addFamily(TEST_FAMILY);\n\n        HTable table = new HTable(conf, TEST_TABLE);\n        ResultScanner scanner = table.getScanner(s);\n        try {\n          for (Result r = scanner.next(); r != null; r = scanner.next()) {\n            // do nothing\n          }\n        } catch (IOException e) {\n        } finally {\n          scanner.close();\n        }\n        return null;\n      }\n    };\n    verifyRead(scanAction);\n  }","id":13918,"modified_method":"@Test\n  public void testRead() throws Exception {\n    // get action\n    PrivilegedExceptionAction getAction = new PrivilegedExceptionAction() {\n      public Object run() throws Exception {\n        Get g = new Get(Bytes.toBytes(\"random_row\"));\n        g.addFamily(TEST_FAMILY);\n        HTable t = new HTable(conf, TEST_TABLE);\n        try {\n          t.get(g);\n        } finally {\n          t.close();\n        }\n        return null;\n      }\n    };\n    verifyRead(getAction);\n\n    // action for scanning\n    PrivilegedExceptionAction scanAction = new PrivilegedExceptionAction() {\n      public Object run() throws Exception {\n        Scan s = new Scan();\n        s.addFamily(TEST_FAMILY);\n\n        HTable table = new HTable(conf, TEST_TABLE);\n        try {\n          ResultScanner scanner = table.getScanner(s);\n          try {\n            for (Result r = scanner.next(); r != null; r = scanner.next()) {\n              // do nothing\n            }\n          } catch (IOException e) {\n          } finally {\n            scanner.close();\n          }\n        } finally {\n          table.close();\n        }\n        return null;\n      }\n    };\n    verifyRead(scanAction);\n  }","commit_id":"d82b07dc6db0f1c693f6a56e80a0f965bace2cbd","url":"https://github.com/apache/hbase"},{"original_method":"@Test\n  public void testGrantRevoke() throws Exception {\n\n    PrivilegedExceptionAction grantAction = new PrivilegedExceptionAction() {\n      public Object run() throws Exception {\n        HTable acl = new HTable(conf, AccessControlLists.ACL_TABLE_NAME);\n        BlockingRpcChannel service = acl.coprocessorService(TEST_TABLE);\n        AccessControlService.BlockingInterface protocol =\n          AccessControlService.newBlockingStub(service);\n        ProtobufUtil.grant(protocol, USER_RO.getShortName(), TEST_TABLE,\n          TEST_FAMILY, null, Action.READ);\n        return null;\n      }\n    };\n\n    PrivilegedExceptionAction revokeAction = new PrivilegedExceptionAction() {\n      public Object run() throws Exception {\n        HTable acl = new HTable(conf, AccessControlLists.ACL_TABLE_NAME);\n        BlockingRpcChannel service = acl.coprocessorService(TEST_TABLE);\n        AccessControlService.BlockingInterface protocol =\n          AccessControlService.newBlockingStub(service);\n        ProtobufUtil.revoke(protocol, USER_RO.getShortName(), TEST_TABLE,\n          TEST_FAMILY, null, Action.READ);\n        return null;\n      }\n    };\n\n    PrivilegedExceptionAction getPermissionsAction = new PrivilegedExceptionAction() {\n      public Object run() throws Exception {\n        HTable acl = new HTable(conf, AccessControlLists.ACL_TABLE_NAME);\n        BlockingRpcChannel service = acl.coprocessorService(TEST_TABLE);\n        AccessControlService.BlockingInterface protocol =\n          AccessControlService.newBlockingStub(service);\n        ProtobufUtil.getUserPermissions(protocol, TEST_TABLE);\n        return null;\n      }\n    };\n\n    verifyAllowed(grantAction, SUPERUSER, USER_ADMIN, USER_OWNER);\n    verifyDenied(grantAction, USER_CREATE, USER_RW, USER_RO, USER_NONE);\n\n    verifyAllowed(revokeAction, SUPERUSER, USER_ADMIN, USER_OWNER);\n    verifyDenied(revokeAction, USER_CREATE, USER_RW, USER_RO, USER_NONE);\n\n    verifyAllowed(getPermissionsAction, SUPERUSER, USER_ADMIN, USER_OWNER);\n    verifyDenied(getPermissionsAction, USER_CREATE, USER_RW, USER_RO, USER_NONE);\n  }","id":13919,"modified_method":"@Test\n  public void testGrantRevoke() throws Exception {\n\n    PrivilegedExceptionAction grantAction = new PrivilegedExceptionAction() {\n      public Object run() throws Exception {\n        HTable acl = new HTable(conf, AccessControlLists.ACL_TABLE_NAME);\n        try {\n          BlockingRpcChannel service = acl.coprocessorService(TEST_TABLE);\n          AccessControlService.BlockingInterface protocol =\n            AccessControlService.newBlockingStub(service);\n          ProtobufUtil.grant(protocol, USER_RO.getShortName(), TEST_TABLE,\n            TEST_FAMILY, null, Action.READ);\n        } finally {\n          acl.close();\n        }\n        return null;\n      }\n    };\n\n    PrivilegedExceptionAction revokeAction = new PrivilegedExceptionAction() {\n      public Object run() throws Exception {\n        HTable acl = new HTable(conf, AccessControlLists.ACL_TABLE_NAME);\n        try {\n          BlockingRpcChannel service = acl.coprocessorService(TEST_TABLE);\n          AccessControlService.BlockingInterface protocol =\n            AccessControlService.newBlockingStub(service);\n          ProtobufUtil.revoke(protocol, USER_RO.getShortName(), TEST_TABLE,\n            TEST_FAMILY, null, Action.READ);\n        } finally {\n          acl.close();\n        }\n        return null;\n      }\n    };\n\n    PrivilegedExceptionAction getPermissionsAction = new PrivilegedExceptionAction() {\n      public Object run() throws Exception {\n        HTable acl = new HTable(conf, AccessControlLists.ACL_TABLE_NAME);\n        try {\n          BlockingRpcChannel service = acl.coprocessorService(TEST_TABLE);\n          AccessControlService.BlockingInterface protocol =\n            AccessControlService.newBlockingStub(service);\n          ProtobufUtil.getUserPermissions(protocol, TEST_TABLE);\n        } finally {\n          acl.close();\n        }\n        return null;\n      }\n    };\n\n    verifyAllowed(grantAction, SUPERUSER, USER_ADMIN, USER_OWNER);\n    verifyDenied(grantAction, USER_CREATE, USER_RW, USER_RO, USER_NONE);\n\n    verifyAllowed(revokeAction, SUPERUSER, USER_ADMIN, USER_OWNER);\n    verifyDenied(revokeAction, USER_CREATE, USER_RW, USER_RO, USER_NONE);\n\n    verifyAllowed(getPermissionsAction, SUPERUSER, USER_ADMIN, USER_OWNER);\n    verifyDenied(getPermissionsAction, USER_CREATE, USER_RW, USER_RO, USER_NONE);\n  }","commit_id":"d82b07dc6db0f1c693f6a56e80a0f965bace2cbd","url":"https://github.com/apache/hbase"},{"original_method":"@Test\n  public void testPermissionList() throws Exception {\n    final byte[] tableName = Bytes.toBytes(\"testPermissionList\");\n    final byte[] family1 = Bytes.toBytes(\"f1\");\n    final byte[] family2 = Bytes.toBytes(\"f2\");\n    final byte[] qualifier = Bytes.toBytes(\"q\");\n\n    // create table\n    HBaseAdmin admin = TEST_UTIL.getHBaseAdmin();\n    if (admin.tableExists(tableName)) {\n      admin.disableTable(tableName);\n      admin.deleteTable(tableName);\n    }\n    HTableDescriptor htd = new HTableDescriptor(tableName);\n    htd.addFamily(new HColumnDescriptor(family1));\n    htd.addFamily(new HColumnDescriptor(family2));\n    htd.setOwner(USER_OWNER);\n    admin.createTable(htd);\n\n    HTable acl = new HTable(conf, AccessControlLists.ACL_TABLE_NAME);\n    BlockingRpcChannel service = acl.coprocessorService(tableName);\n    AccessControlService.BlockingInterface protocol =\n      AccessControlService.newBlockingStub(service);\n\n    List<UserPermission> perms = ProtobufUtil.getUserPermissions(protocol, tableName);\n\n    UserPermission ownerperm = new UserPermission(\n      Bytes.toBytes(USER_OWNER.getName()), tableName, null, Action.values());\n    assertTrue(\"Owner should have all permissions on table\",\n      hasFoundUserPermission(ownerperm, perms));\n\n    User user = User.createUserForTesting(TEST_UTIL.getConfiguration(), \"user\", new String[0]);\n    byte[] userName = Bytes.toBytes(user.getShortName());\n\n    UserPermission up = new UserPermission(userName,\n      tableName, family1, qualifier, Permission.Action.READ);\n    assertFalse(\"User should not be granted permission: \" + up.toString(),\n      hasFoundUserPermission(up, perms));\n\n    // grant read permission\n    ProtobufUtil.grant(protocol, user.getShortName(),\n      tableName, family1, qualifier, Permission.Action.READ);\n    perms = ProtobufUtil.getUserPermissions(protocol, tableName);\n\n    UserPermission upToVerify = new UserPermission(\n      userName, tableName, family1, qualifier, Permission.Action.READ);\n    assertTrue(\"User should be granted permission: \" + upToVerify.toString(),\n      hasFoundUserPermission(upToVerify, perms));\n\n    upToVerify = new UserPermission(\n      userName, tableName, family1, qualifier, Permission.Action.WRITE);\n    assertFalse(\"User should not be granted permission: \" + upToVerify.toString(),\n      hasFoundUserPermission(upToVerify, perms));\n\n    // grant read+write\n    ProtobufUtil.grant(protocol, user.getShortName(),\n      tableName, family1, qualifier,\n        Permission.Action.WRITE, Permission.Action.READ);\n    perms = ProtobufUtil.getUserPermissions(protocol, tableName);\n\n    upToVerify = new UserPermission(userName, tableName, family1,\n      qualifier, Permission.Action.WRITE, Permission.Action.READ);\n    assertTrue(\"User should be granted permission: \" + upToVerify.toString(),\n      hasFoundUserPermission(upToVerify, perms));\n\n    ProtobufUtil.revoke(protocol, user.getShortName(), tableName, family1, qualifier,\n      Permission.Action.WRITE, Permission.Action.READ);\n    perms = ProtobufUtil.getUserPermissions(protocol, tableName);\n    assertFalse(\"User should not be granted permission: \" + upToVerify.toString(),\n      hasFoundUserPermission(upToVerify, perms));\n\n    // disable table before modification\n    admin.disableTable(tableName);\n\n    User newOwner = User.createUserForTesting(conf, \"new_owner\", new String[] {});\n    htd.setOwner(newOwner);\n    admin.modifyTable(tableName, htd);\n    perms = ProtobufUtil.getUserPermissions(protocol, tableName);\n    UserPermission newOwnerperm = new UserPermission(\n      Bytes.toBytes(newOwner.getName()), tableName, null, Action.values());\n    assertTrue(\"New owner should have all permissions on table\",\n      hasFoundUserPermission(newOwnerperm, perms));\n\n    // delete table\n    admin.deleteTable(tableName);\n  }","id":13920,"modified_method":"@Test\n  public void testPermissionList() throws Exception {\n    final byte[] tableName = Bytes.toBytes(\"testPermissionList\");\n    final byte[] family1 = Bytes.toBytes(\"f1\");\n    final byte[] family2 = Bytes.toBytes(\"f2\");\n    final byte[] qualifier = Bytes.toBytes(\"q\");\n\n    // create table\n    HBaseAdmin admin = TEST_UTIL.getHBaseAdmin();\n    if (admin.tableExists(tableName)) {\n      admin.disableTable(tableName);\n      admin.deleteTable(tableName);\n    }\n    HTableDescriptor htd = new HTableDescriptor(tableName);\n    htd.addFamily(new HColumnDescriptor(family1));\n    htd.addFamily(new HColumnDescriptor(family2));\n    htd.setOwner(USER_OWNER);\n    admin.createTable(htd);\n\n    List<UserPermission> perms;\n\n    HTable acl = new HTable(conf, AccessControlLists.ACL_TABLE_NAME);\n    try {\n      BlockingRpcChannel service = acl.coprocessorService(tableName);\n      AccessControlService.BlockingInterface protocol =\n        AccessControlService.newBlockingStub(service);\n      perms = ProtobufUtil.getUserPermissions(protocol, tableName);\n    } finally {\n      acl.close();\n    }\n\n    UserPermission ownerperm = new UserPermission(\n      Bytes.toBytes(USER_OWNER.getName()), tableName, null, Action.values());\n    assertTrue(\"Owner should have all permissions on table\",\n      hasFoundUserPermission(ownerperm, perms));\n\n    User user = User.createUserForTesting(TEST_UTIL.getConfiguration(), \"user\", new String[0]);\n    byte[] userName = Bytes.toBytes(user.getShortName());\n\n    UserPermission up = new UserPermission(userName,\n      tableName, family1, qualifier, Permission.Action.READ);\n    assertFalse(\"User should not be granted permission: \" + up.toString(),\n      hasFoundUserPermission(up, perms));\n\n    // grant read permission\n    acl = new HTable(conf, AccessControlLists.ACL_TABLE_NAME);\n    try {\n      BlockingRpcChannel service = acl.coprocessorService(tableName);\n      AccessControlService.BlockingInterface protocol =\n        AccessControlService.newBlockingStub(service);\n      ProtobufUtil.grant(protocol, user.getShortName(),\n        tableName, family1, qualifier, Permission.Action.READ);\n      perms = ProtobufUtil.getUserPermissions(protocol, tableName);\n    } finally {\n      acl.close();\n    }\n\n    UserPermission upToVerify = new UserPermission(\n      userName, tableName, family1, qualifier, Permission.Action.READ);\n    assertTrue(\"User should be granted permission: \" + upToVerify.toString(),\n      hasFoundUserPermission(upToVerify, perms));\n\n    upToVerify = new UserPermission(\n      userName, tableName, family1, qualifier, Permission.Action.WRITE);\n    assertFalse(\"User should not be granted permission: \" + upToVerify.toString(),\n      hasFoundUserPermission(upToVerify, perms));\n\n    // grant read+write\n    acl = new HTable(conf, AccessControlLists.ACL_TABLE_NAME);\n    try {\n      BlockingRpcChannel service = acl.coprocessorService(tableName);\n      AccessControlService.BlockingInterface protocol =\n        AccessControlService.newBlockingStub(service);\n      ProtobufUtil.grant(protocol, user.getShortName(),\n        tableName, family1, qualifier,\n          Permission.Action.WRITE, Permission.Action.READ);\n      perms = ProtobufUtil.getUserPermissions(protocol, tableName);\n    } finally {\n      acl.close();\n    }\n\n    upToVerify = new UserPermission(userName, tableName, family1,\n      qualifier, Permission.Action.WRITE, Permission.Action.READ);\n    assertTrue(\"User should be granted permission: \" + upToVerify.toString(),\n      hasFoundUserPermission(upToVerify, perms));\n\n    acl = new HTable(conf, AccessControlLists.ACL_TABLE_NAME);\n    try {\n      BlockingRpcChannel service = acl.coprocessorService(tableName);\n      AccessControlService.BlockingInterface protocol =\n        AccessControlService.newBlockingStub(service);\n      ProtobufUtil.revoke(protocol, user.getShortName(), tableName, family1, qualifier,\n        Permission.Action.WRITE, Permission.Action.READ);\n      perms = ProtobufUtil.getUserPermissions(protocol, tableName);\n    } finally {\n      acl.close();\n    }\n\n    assertFalse(\"User should not be granted permission: \" + upToVerify.toString(),\n      hasFoundUserPermission(upToVerify, perms));\n\n    // disable table before modification\n    admin.disableTable(tableName);\n\n    User newOwner = User.createUserForTesting(conf, \"new_owner\", new String[] {});\n    htd.setOwner(newOwner);\n    admin.modifyTable(tableName, htd);\n\n    acl = new HTable(conf, AccessControlLists.ACL_TABLE_NAME);\n    try {\n      BlockingRpcChannel service = acl.coprocessorService(tableName);\n      AccessControlService.BlockingInterface protocol =\n        AccessControlService.newBlockingStub(service);\n      perms = ProtobufUtil.getUserPermissions(protocol, tableName);\n    } finally {\n      acl.close();\n    }\n\n    UserPermission newOwnerperm = new UserPermission(\n      Bytes.toBytes(newOwner.getName()), tableName, null, Action.values());\n    assertTrue(\"New owner should have all permissions on table\",\n      hasFoundUserPermission(newOwnerperm, perms));\n\n    // delete table\n    admin.deleteTable(tableName);\n  }","commit_id":"d82b07dc6db0f1c693f6a56e80a0f965bace2cbd","url":"https://github.com/apache/hbase"},{"original_method":"@Test\n  public void testAssign() throws Exception {\n    HTable table = new HTable(TEST_UTIL.getConfiguration(), TEST_TABLE);\n    Map<HRegionInfo, ServerName> regions = table.getRegionLocations();\n    final Map.Entry<HRegionInfo, ServerName> firstRegion = regions.entrySet().iterator().next();\n\n    PrivilegedExceptionAction action = new PrivilegedExceptionAction() {\n      public Object run() throws Exception {\n        ACCESS_CONTROLLER.preAssign(ObserverContext.createAndPrepare(CP_ENV, null),\n          firstRegion.getKey());\n        return null;\n      }\n    };\n\n    verifyAllowed(action, SUPERUSER, USER_ADMIN, USER_OWNER);\n    verifyDenied(action, USER_CREATE, USER_RW, USER_RO, USER_NONE);\n  }","id":13921,"modified_method":"@Test\n  public void testAssign() throws Exception {\n    Map<HRegionInfo, ServerName> regions;\n    HTable table = new HTable(TEST_UTIL.getConfiguration(), TEST_TABLE);\n    try {\n      regions = table.getRegionLocations();\n    } finally {\n      table.close();\n    }\n    final Map.Entry<HRegionInfo, ServerName> firstRegion = regions.entrySet().iterator().next();\n\n    PrivilegedExceptionAction action = new PrivilegedExceptionAction() {\n      public Object run() throws Exception {\n        ACCESS_CONTROLLER.preAssign(ObserverContext.createAndPrepare(CP_ENV, null),\n          firstRegion.getKey());\n        return null;\n      }\n    };\n\n    verifyAllowed(action, SUPERUSER, USER_ADMIN, USER_OWNER);\n    verifyDenied(action, USER_CREATE, USER_RW, USER_RO, USER_NONE);\n  }","commit_id":"d82b07dc6db0f1c693f6a56e80a0f965bace2cbd","url":"https://github.com/apache/hbase"},{"original_method":"@Test\n  public void testReadWrite() throws Exception {\n    // action for checkAndDelete\n    PrivilegedExceptionAction checkAndDeleteAction = new PrivilegedExceptionAction() {\n      public Object run() throws Exception {\n        Delete d = new Delete(Bytes.toBytes(\"random_row\"));\n        d.deleteFamily(TEST_FAMILY);\n\n        HTable t = new HTable(conf, TEST_TABLE);\n        t.checkAndDelete(Bytes.toBytes(\"random_row\"), TEST_FAMILY, Bytes.toBytes(\"q\"),\n          Bytes.toBytes(\"test_value\"), d);\n        return null;\n      }\n    };\n    verifyReadWrite(checkAndDeleteAction);\n\n    // action for checkAndPut()\n    PrivilegedExceptionAction checkAndPut = new PrivilegedExceptionAction() {\n      public Object run() throws Exception {\n        HTable t = new HTable(conf, TEST_TABLE);\n        Put p = new Put(Bytes.toBytes(\"random_row\"));\n        p.add(TEST_FAMILY, Bytes.toBytes(\"Qualifier\"), Bytes.toBytes(1));\n        t.checkAndPut(Bytes.toBytes(\"random_row\"), TEST_FAMILY, Bytes.toBytes(\"q\"),\n          Bytes.toBytes(\"test_value\"), p);\n        return null;\n      }\n    };\n    verifyReadWrite(checkAndPut);\n  }","id":13922,"modified_method":"@Test\n  public void testReadWrite() throws Exception {\n    // action for checkAndDelete\n    PrivilegedExceptionAction checkAndDeleteAction = new PrivilegedExceptionAction() {\n      public Object run() throws Exception {\n        Delete d = new Delete(Bytes.toBytes(\"random_row\"));\n        d.deleteFamily(TEST_FAMILY);\n        HTable t = new HTable(conf, TEST_TABLE);\n        try {\n          t.checkAndDelete(Bytes.toBytes(\"random_row\"), TEST_FAMILY, Bytes.toBytes(\"q\"),\n            Bytes.toBytes(\"test_value\"), d);\n        } finally {\n          t.close();\n        }\n        return null;\n      }\n    };\n    verifyReadWrite(checkAndDeleteAction);\n\n    // action for checkAndPut()\n    PrivilegedExceptionAction checkAndPut = new PrivilegedExceptionAction() {\n      public Object run() throws Exception {\n        Put p = new Put(Bytes.toBytes(\"random_row\"));\n        p.add(TEST_FAMILY, Bytes.toBytes(\"Qualifier\"), Bytes.toBytes(1));\n        HTable t = new HTable(conf, TEST_TABLE);\n        try {\n          t.checkAndPut(Bytes.toBytes(\"random_row\"), TEST_FAMILY, Bytes.toBytes(\"q\"),\n           Bytes.toBytes(\"test_value\"), p);\n        } finally {\n          t.close();\n        }\n        return null;\n      }\n    };\n    verifyReadWrite(checkAndPut);\n  }","commit_id":"d82b07dc6db0f1c693f6a56e80a0f965bace2cbd","url":"https://github.com/apache/hbase"},{"original_method":"@Test\n  public void testPostGrantRevoke() throws Exception {\n    final byte[] tableName = Bytes.toBytes(\"TempTable\");\n    final byte[] family1 = Bytes.toBytes(\"f1\");\n    final byte[] family2 = Bytes.toBytes(\"f2\");\n    final byte[] qualifier = Bytes.toBytes(\"q\");\n\n    // create table\n    HBaseAdmin admin = TEST_UTIL.getHBaseAdmin();\n    if (admin.tableExists(tableName)) {\n      admin.disableTable(tableName);\n      admin.deleteTable(tableName);\n    }\n    HTableDescriptor htd = new HTableDescriptor(tableName);\n    htd.addFamily(new HColumnDescriptor(family1));\n    htd.addFamily(new HColumnDescriptor(family2));\n    admin.createTable(htd);\n\n    // create temp users\n    User tblUser = User\n        .createUserForTesting(TEST_UTIL.getConfiguration(), \"tbluser\", new String[0]);\n    User gblUser = User\n        .createUserForTesting(TEST_UTIL.getConfiguration(), \"gbluser\", new String[0]);\n\n    // perms only stored against the first region\n    HTable acl = new HTable(conf, AccessControlLists.ACL_TABLE_NAME);\n    BlockingRpcChannel service = acl.coprocessorService(tableName);\n    AccessControlService.BlockingInterface protocol =\n      AccessControlService.newBlockingStub(service);\n\n    // prepare actions:\n    PrivilegedExceptionAction putActionAll = new PrivilegedExceptionAction() {\n      public Object run() throws Exception {\n        Put p = new Put(Bytes.toBytes(\"a\"));\n        p.add(family1, qualifier, Bytes.toBytes(\"v1\"));\n        p.add(family2, qualifier, Bytes.toBytes(\"v2\"));\n        HTable t = new HTable(conf, tableName);\n        t.put(p);\n        return null;\n      }\n    };\n    PrivilegedExceptionAction putAction1 = new PrivilegedExceptionAction() {\n      public Object run() throws Exception {\n        Put p = new Put(Bytes.toBytes(\"a\"));\n        p.add(family1, qualifier, Bytes.toBytes(\"v1\"));\n        HTable t = new HTable(conf, tableName);\n        t.put(p);\n        return null;\n      }\n    };\n    PrivilegedExceptionAction putAction2 = new PrivilegedExceptionAction() {\n      public Object run() throws Exception {\n        Put p = new Put(Bytes.toBytes(\"a\"));\n        p.add(family2, qualifier, Bytes.toBytes(\"v2\"));\n        HTable t = new HTable(conf, tableName);\n        t.put(p);\n        return null;\n      }\n    };\n    PrivilegedExceptionAction getActionAll = new PrivilegedExceptionAction() {\n      public Object run() throws Exception {\n        Get g = new Get(Bytes.toBytes(\"random_row\"));\n        g.addFamily(family1);\n        g.addFamily(family2);\n        HTable t = new HTable(conf, tableName);\n        t.get(g);\n        return null;\n      }\n    };\n    PrivilegedExceptionAction getAction1 = new PrivilegedExceptionAction() {\n      public Object run() throws Exception {\n        Get g = new Get(Bytes.toBytes(\"random_row\"));\n        g.addFamily(family1);\n        HTable t = new HTable(conf, tableName);\n        t.get(g);\n        return null;\n      }\n    };\n    PrivilegedExceptionAction getAction2 = new PrivilegedExceptionAction() {\n      public Object run() throws Exception {\n        Get g = new Get(Bytes.toBytes(\"random_row\"));\n        g.addFamily(family2);\n        HTable t = new HTable(conf, tableName);\n        t.get(g);\n        return null;\n      }\n    };\n    PrivilegedExceptionAction deleteActionAll = new PrivilegedExceptionAction() {\n      public Object run() throws Exception {\n        Delete d = new Delete(Bytes.toBytes(\"random_row\"));\n        d.deleteFamily(family1);\n        d.deleteFamily(family2);\n        HTable t = new HTable(conf, tableName);\n        t.delete(d);\n        return null;\n      }\n    };\n    PrivilegedExceptionAction deleteAction1 = new PrivilegedExceptionAction() {\n      public Object run() throws Exception {\n        Delete d = new Delete(Bytes.toBytes(\"random_row\"));\n        d.deleteFamily(family1);\n        HTable t = new HTable(conf, tableName);\n        t.delete(d);\n        return null;\n      }\n    };\n    PrivilegedExceptionAction deleteAction2 = new PrivilegedExceptionAction() {\n      public Object run() throws Exception {\n        Delete d = new Delete(Bytes.toBytes(\"random_row\"));\n        d.deleteFamily(family2);\n        HTable t = new HTable(conf, tableName);\n        t.delete(d);\n        return null;\n      }\n    };\n\n    // initial check:\n    verifyDenied(tblUser, getActionAll, getAction1, getAction2);\n    verifyDenied(tblUser, putActionAll, putAction1, putAction2);\n    verifyDenied(tblUser, deleteActionAll, deleteAction1, deleteAction2);\n\n    verifyDenied(gblUser, getActionAll, getAction1, getAction2);\n    verifyDenied(gblUser, putActionAll, putAction1, putAction2);\n    verifyDenied(gblUser, deleteActionAll, deleteAction1, deleteAction2);\n\n    // grant table read permission\n    ProtobufUtil.grant(protocol, tblUser.getShortName(),\n      tableName, null, null, Permission.Action.READ);\n    ProtobufUtil.grant(protocol, gblUser.getShortName(),\n      null, null, null, Permission.Action.READ);\n\n    Thread.sleep(100);\n    // check\n    verifyAllowed(tblUser, getActionAll, getAction1, getAction2);\n    verifyDenied(tblUser, putActionAll, putAction1, putAction2);\n    verifyDenied(tblUser, deleteActionAll, deleteAction1, deleteAction2);\n\n    verifyAllowed(gblUser, getActionAll, getAction1, getAction2);\n    verifyDenied(gblUser, putActionAll, putAction1, putAction2);\n    verifyDenied(gblUser, deleteActionAll, deleteAction1, deleteAction2);\n\n    // grant table write permission\n    ProtobufUtil.grant(protocol, tblUser.getShortName(),\n      tableName, null, null, Permission.Action.WRITE);\n    ProtobufUtil.grant(protocol, gblUser.getShortName(),\n      null, null, null, Permission.Action.WRITE);\n    Thread.sleep(100);\n\n    verifyDenied(tblUser, getActionAll, getAction1, getAction2);\n    verifyAllowed(tblUser, putActionAll, putAction1, putAction2);\n    verifyAllowed(tblUser, deleteActionAll, deleteAction1, deleteAction2);\n\n    verifyDenied(gblUser, getActionAll, getAction1, getAction2);\n    verifyAllowed(gblUser, putActionAll, putAction1, putAction2);\n    verifyAllowed(gblUser, deleteActionAll, deleteAction1, deleteAction2);\n\n    // revoke table permission\n    ProtobufUtil.grant(protocol, tblUser.getShortName(), tableName, null, null,\n      Permission.Action.READ, Permission.Action.WRITE);\n    ProtobufUtil.revoke(protocol, tblUser.getShortName(), tableName, null, null);\n    ProtobufUtil.revoke(protocol, gblUser.getShortName(), null, null, null);\n    Thread.sleep(100);\n\n    verifyDenied(tblUser, getActionAll, getAction1, getAction2);\n    verifyDenied(tblUser, putActionAll, putAction1, putAction2);\n    verifyDenied(tblUser, deleteActionAll, deleteAction1, deleteAction2);\n\n    verifyDenied(gblUser, getActionAll, getAction1, getAction2);\n    verifyDenied(gblUser, putActionAll, putAction1, putAction2);\n    verifyDenied(gblUser, deleteActionAll, deleteAction1, deleteAction2);\n\n    // grant column family read permission\n    ProtobufUtil.grant(protocol, tblUser.getShortName(),\n      tableName, family1, null, Permission.Action.READ);\n    ProtobufUtil.grant(protocol, gblUser.getShortName(),\n      null, null, null, Permission.Action.READ);\n\n    Thread.sleep(100);\n\n    // Access should be denied for family2\n    verifyAllowed(tblUser, getActionAll, getAction1);\n    verifyDenied(tblUser, getAction2);\n    verifyDenied(tblUser, putActionAll, putAction1, putAction2);\n    verifyDenied(tblUser, deleteActionAll, deleteAction1, deleteAction2);\n\n    verifyAllowed(gblUser, getActionAll, getAction1, getAction2);\n    verifyDenied(gblUser, putActionAll, putAction1, putAction2);\n    verifyDenied(gblUser, deleteActionAll, deleteAction1, deleteAction2);\n\n    // grant column family write permission\n    ProtobufUtil.grant(protocol, tblUser.getShortName(),\n      tableName, family2, null, Permission.Action.WRITE);\n    ProtobufUtil.grant(protocol, gblUser.getShortName(),\n      null, null, null, Permission.Action.WRITE);\n    Thread.sleep(100);\n\n    // READ from family1, WRITE to family2 are allowed\n    verifyAllowed(tblUser, getActionAll, getAction1);\n    verifyAllowed(tblUser, putAction2, deleteAction2);\n    verifyDenied(tblUser, getAction2);\n    verifyDenied(tblUser, putActionAll, putAction1);\n    verifyDenied(tblUser, deleteActionAll, deleteAction1);\n\n    verifyDenied(gblUser, getActionAll, getAction1, getAction2);\n    verifyAllowed(gblUser, putActionAll, putAction1, putAction2);\n    verifyAllowed(gblUser, deleteActionAll, deleteAction1, deleteAction2);\n\n    // revoke column family permission\n    ProtobufUtil.revoke(protocol, tblUser.getShortName(), tableName, family2, null);\n    ProtobufUtil.revoke(protocol, gblUser.getShortName(), null, null, null);\n\n    Thread.sleep(100);\n\n    // Revoke on family2 should not have impact on family1 permissions\n    verifyAllowed(tblUser, getActionAll, getAction1);\n    verifyDenied(tblUser, getAction2);\n    verifyDenied(tblUser, putActionAll, putAction1, putAction2);\n    verifyDenied(tblUser, deleteActionAll, deleteAction1, deleteAction2);\n\n    // Should not have access as global permissions are completely revoked\n    verifyDenied(gblUser, getActionAll, getAction1, getAction2);\n    verifyDenied(gblUser, putActionAll, putAction1, putAction2);\n    verifyDenied(gblUser, deleteActionAll, deleteAction1, deleteAction2);\n\n    // delete table\n    admin.disableTable(tableName);\n    admin.deleteTable(tableName);\n  }","id":13923,"modified_method":"@Test\n  public void testPostGrantRevoke() throws Exception {\n    final byte[] tableName = Bytes.toBytes(\"TempTable\");\n    final byte[] family1 = Bytes.toBytes(\"f1\");\n    final byte[] family2 = Bytes.toBytes(\"f2\");\n    final byte[] qualifier = Bytes.toBytes(\"q\");\n\n    // create table\n    HBaseAdmin admin = TEST_UTIL.getHBaseAdmin();\n    if (admin.tableExists(tableName)) {\n      admin.disableTable(tableName);\n      admin.deleteTable(tableName);\n    }\n    HTableDescriptor htd = new HTableDescriptor(tableName);\n    htd.addFamily(new HColumnDescriptor(family1));\n    htd.addFamily(new HColumnDescriptor(family2));\n    admin.createTable(htd);\n\n    // create temp users\n    User tblUser = User\n        .createUserForTesting(TEST_UTIL.getConfiguration(), \"tbluser\", new String[0]);\n    User gblUser = User\n        .createUserForTesting(TEST_UTIL.getConfiguration(), \"gbluser\", new String[0]);\n\n    // prepare actions:\n    PrivilegedExceptionAction putActionAll = new PrivilegedExceptionAction() {\n      public Object run() throws Exception {\n        Put p = new Put(Bytes.toBytes(\"a\"));\n        p.add(family1, qualifier, Bytes.toBytes(\"v1\"));\n        p.add(family2, qualifier, Bytes.toBytes(\"v2\"));\n        HTable t = new HTable(conf, tableName);\n        try {\n          t.put(p);\n        } finally {\n          t.close();\n        }\n        return null;\n      }\n    };\n    PrivilegedExceptionAction putAction1 = new PrivilegedExceptionAction() {\n      public Object run() throws Exception {\n        Put p = new Put(Bytes.toBytes(\"a\"));\n        p.add(family1, qualifier, Bytes.toBytes(\"v1\"));\n        HTable t = new HTable(conf, tableName);\n        try {\n          t.put(p);\n        } finally {\n          t.close();\n        }\n        return null;\n      }\n    };\n    PrivilegedExceptionAction putAction2 = new PrivilegedExceptionAction() {\n      public Object run() throws Exception {\n        Put p = new Put(Bytes.toBytes(\"a\"));\n        p.add(family2, qualifier, Bytes.toBytes(\"v2\"));\n        HTable t = new HTable(conf, tableName);\n        try {\n          t.put(p);\n        } finally {\n          t.close();\n        }\n        return null;\n      }\n    };\n    PrivilegedExceptionAction getActionAll = new PrivilegedExceptionAction() {\n      public Object run() throws Exception {\n        Get g = new Get(Bytes.toBytes(\"random_row\"));\n        g.addFamily(family1);\n        g.addFamily(family2);\n        HTable t = new HTable(conf, tableName);\n        try {\n          t.get(g);\n        } finally {\n          t.close();\n        }\n        return null;\n      }\n    };\n    PrivilegedExceptionAction getAction1 = new PrivilegedExceptionAction() {\n      public Object run() throws Exception {\n        Get g = new Get(Bytes.toBytes(\"random_row\"));\n        g.addFamily(family1);\n        HTable t = new HTable(conf, tableName);\n        try {\n          t.get(g);\n        } finally {\n          t.close();\n        }\n        return null;\n      }\n    };\n    PrivilegedExceptionAction getAction2 = new PrivilegedExceptionAction() {\n      public Object run() throws Exception {\n        Get g = new Get(Bytes.toBytes(\"random_row\"));\n        g.addFamily(family2);\n        HTable t = new HTable(conf, tableName);\n        try {\n          t.get(g);\n        } finally {\n          t.close();\n        }\n        return null;\n      }\n    };\n    PrivilegedExceptionAction deleteActionAll = new PrivilegedExceptionAction() {\n      public Object run() throws Exception {\n        Delete d = new Delete(Bytes.toBytes(\"random_row\"));\n        d.deleteFamily(family1);\n        d.deleteFamily(family2);\n        HTable t = new HTable(conf, tableName);\n        try {\n          t.delete(d);\n        } finally {\n          t.close();\n        }\n        return null;\n      }\n    };\n    PrivilegedExceptionAction deleteAction1 = new PrivilegedExceptionAction() {\n      public Object run() throws Exception {\n        Delete d = new Delete(Bytes.toBytes(\"random_row\"));\n        d.deleteFamily(family1);\n        HTable t = new HTable(conf, tableName);\n        try {\n          t.delete(d);\n        } finally {\n          t.close();\n        }\n        return null;\n      }\n    };\n    PrivilegedExceptionAction deleteAction2 = new PrivilegedExceptionAction() {\n      public Object run() throws Exception {\n        Delete d = new Delete(Bytes.toBytes(\"random_row\"));\n        d.deleteFamily(family2);\n        HTable t = new HTable(conf, tableName);\n        try {\n          t.delete(d);\n        } finally {\n          t.close();\n        }\n        return null;\n      }\n    };\n\n    // initial check:\n    verifyDenied(tblUser, getActionAll, getAction1, getAction2);\n    verifyDenied(tblUser, putActionAll, putAction1, putAction2);\n    verifyDenied(tblUser, deleteActionAll, deleteAction1, deleteAction2);\n\n    verifyDenied(gblUser, getActionAll, getAction1, getAction2);\n    verifyDenied(gblUser, putActionAll, putAction1, putAction2);\n    verifyDenied(gblUser, deleteActionAll, deleteAction1, deleteAction2);\n\n    // grant table read permission\n    HTable acl = new HTable(conf, AccessControlLists.ACL_TABLE_NAME);\n    try {\n      BlockingRpcChannel service = acl.coprocessorService(tableName);\n      AccessControlService.BlockingInterface protocol =\n        AccessControlService.newBlockingStub(service);\n      ProtobufUtil.grant(protocol, tblUser.getShortName(),\n        tableName, null, null, Permission.Action.READ);\n      ProtobufUtil.grant(protocol, gblUser.getShortName(),\n        null, null, null, Permission.Action.READ);\n    } finally {\n      acl.close();\n    }\n\n    Thread.sleep(100);\n    // check\n    verifyAllowed(tblUser, getActionAll, getAction1, getAction2);\n    verifyDenied(tblUser, putActionAll, putAction1, putAction2);\n    verifyDenied(tblUser, deleteActionAll, deleteAction1, deleteAction2);\n\n    verifyAllowed(gblUser, getActionAll, getAction1, getAction2);\n    verifyDenied(gblUser, putActionAll, putAction1, putAction2);\n    verifyDenied(gblUser, deleteActionAll, deleteAction1, deleteAction2);\n\n    // grant table write permission\n    acl = new HTable(conf, AccessControlLists.ACL_TABLE_NAME);\n    try {\n      BlockingRpcChannel service = acl.coprocessorService(tableName);\n      AccessControlService.BlockingInterface protocol =\n        AccessControlService.newBlockingStub(service);\n      ProtobufUtil.grant(protocol, tblUser.getShortName(),\n        tableName, null, null, Permission.Action.WRITE);\n      ProtobufUtil.grant(protocol, gblUser.getShortName(),\n        null, null, null, Permission.Action.WRITE);\n    } finally {\n      acl.close();\n    }\n\n    Thread.sleep(100);\n\n    verifyDenied(tblUser, getActionAll, getAction1, getAction2);\n    verifyAllowed(tblUser, putActionAll, putAction1, putAction2);\n    verifyAllowed(tblUser, deleteActionAll, deleteAction1, deleteAction2);\n\n    verifyDenied(gblUser, getActionAll, getAction1, getAction2);\n    verifyAllowed(gblUser, putActionAll, putAction1, putAction2);\n    verifyAllowed(gblUser, deleteActionAll, deleteAction1, deleteAction2);\n\n    // revoke table permission\n    acl = new HTable(conf, AccessControlLists.ACL_TABLE_NAME);\n    try {\n      BlockingRpcChannel service = acl.coprocessorService(tableName);\n      AccessControlService.BlockingInterface protocol =\n        AccessControlService.newBlockingStub(service);\n      ProtobufUtil.grant(protocol, tblUser.getShortName(), tableName, null, null,\n        Permission.Action.READ, Permission.Action.WRITE);\n      ProtobufUtil.revoke(protocol, tblUser.getShortName(), tableName, null, null);\n      ProtobufUtil.revoke(protocol, gblUser.getShortName(), null, null, null);\n    } finally {\n      acl.close();\n    }\n\n    Thread.sleep(100);\n\n    verifyDenied(tblUser, getActionAll, getAction1, getAction2);\n    verifyDenied(tblUser, putActionAll, putAction1, putAction2);\n    verifyDenied(tblUser, deleteActionAll, deleteAction1, deleteAction2);\n\n    verifyDenied(gblUser, getActionAll, getAction1, getAction2);\n    verifyDenied(gblUser, putActionAll, putAction1, putAction2);\n    verifyDenied(gblUser, deleteActionAll, deleteAction1, deleteAction2);\n\n    // grant column family read permission\n    acl = new HTable(conf, AccessControlLists.ACL_TABLE_NAME);\n    try {\n      BlockingRpcChannel service = acl.coprocessorService(tableName);\n      AccessControlService.BlockingInterface protocol =\n        AccessControlService.newBlockingStub(service);\n      ProtobufUtil.grant(protocol, tblUser.getShortName(),\n        tableName, family1, null, Permission.Action.READ);\n      ProtobufUtil.grant(protocol, gblUser.getShortName(),\n        null, null, null, Permission.Action.READ);\n    } finally {\n      acl.close();\n    }\n\n    Thread.sleep(100);\n\n    // Access should be denied for family2\n    verifyAllowed(tblUser, getActionAll, getAction1);\n    verifyDenied(tblUser, getAction2);\n    verifyDenied(tblUser, putActionAll, putAction1, putAction2);\n    verifyDenied(tblUser, deleteActionAll, deleteAction1, deleteAction2);\n\n    verifyAllowed(gblUser, getActionAll, getAction1, getAction2);\n    verifyDenied(gblUser, putActionAll, putAction1, putAction2);\n    verifyDenied(gblUser, deleteActionAll, deleteAction1, deleteAction2);\n\n    // grant column family write permission\n    acl = new HTable(conf, AccessControlLists.ACL_TABLE_NAME);\n    try {\n      BlockingRpcChannel service = acl.coprocessorService(tableName);\n      AccessControlService.BlockingInterface protocol =\n        AccessControlService.newBlockingStub(service);\n      ProtobufUtil.grant(protocol, tblUser.getShortName(),\n        tableName, family2, null, Permission.Action.WRITE);\n      ProtobufUtil.grant(protocol, gblUser.getShortName(),\n        null, null, null, Permission.Action.WRITE);\n    } finally {\n      acl.close();\n    }\n\n    Thread.sleep(100);\n\n    // READ from family1, WRITE to family2 are allowed\n    verifyAllowed(tblUser, getActionAll, getAction1);\n    verifyAllowed(tblUser, putAction2, deleteAction2);\n    verifyDenied(tblUser, getAction2);\n    verifyDenied(tblUser, putActionAll, putAction1);\n    verifyDenied(tblUser, deleteActionAll, deleteAction1);\n\n    verifyDenied(gblUser, getActionAll, getAction1, getAction2);\n    verifyAllowed(gblUser, putActionAll, putAction1, putAction2);\n    verifyAllowed(gblUser, deleteActionAll, deleteAction1, deleteAction2);\n\n    // revoke column family permission\n    acl = new HTable(conf, AccessControlLists.ACL_TABLE_NAME);\n    try {\n      BlockingRpcChannel service = acl.coprocessorService(tableName);\n      AccessControlService.BlockingInterface protocol =\n        AccessControlService.newBlockingStub(service);\n      ProtobufUtil.revoke(protocol, tblUser.getShortName(), tableName, family2, null);\n      ProtobufUtil.revoke(protocol, gblUser.getShortName(), null, null, null);\n    } finally {\n      acl.close();\n    }\n\n    Thread.sleep(100);\n\n    // Revoke on family2 should not have impact on family1 permissions\n    verifyAllowed(tblUser, getActionAll, getAction1);\n    verifyDenied(tblUser, getAction2);\n    verifyDenied(tblUser, putActionAll, putAction1, putAction2);\n    verifyDenied(tblUser, deleteActionAll, deleteAction1, deleteAction2);\n\n    // Should not have access as global permissions are completely revoked\n    verifyDenied(gblUser, getActionAll, getAction1, getAction2);\n    verifyDenied(gblUser, putActionAll, putAction1, putAction2);\n    verifyDenied(gblUser, deleteActionAll, deleteAction1, deleteAction2);\n\n    // delete table\n    admin.disableTable(tableName);\n    admin.deleteTable(tableName);\n  }","commit_id":"d82b07dc6db0f1c693f6a56e80a0f965bace2cbd","url":"https://github.com/apache/hbase"},{"original_method":"@Test\n  public void testUnassign() throws Exception {\n    HTable table = new HTable(TEST_UTIL.getConfiguration(), TEST_TABLE);\n    Map<HRegionInfo, ServerName> regions = table.getRegionLocations();\n    final Map.Entry<HRegionInfo, ServerName> firstRegion = regions.entrySet().iterator().next();\n\n    PrivilegedExceptionAction action = new PrivilegedExceptionAction() {\n      public Object run() throws Exception {\n        ACCESS_CONTROLLER.preUnassign(ObserverContext.createAndPrepare(CP_ENV, null),\n          firstRegion.getKey(), false);\n        return null;\n      }\n    };\n\n    verifyAllowed(action, SUPERUSER, USER_ADMIN, USER_OWNER);\n    verifyDenied(action, USER_CREATE, USER_RW, USER_RO, USER_NONE);\n  }","id":13924,"modified_method":"@Test\n  public void testUnassign() throws Exception {\n    Map<HRegionInfo, ServerName> regions;\n    HTable table = new HTable(TEST_UTIL.getConfiguration(), TEST_TABLE);\n    try {\n      regions = table.getRegionLocations();\n    } finally {\n      table.close();\n    }\n    final Map.Entry<HRegionInfo, ServerName> firstRegion = regions.entrySet().iterator().next();\n\n    PrivilegedExceptionAction action = new PrivilegedExceptionAction() {\n      public Object run() throws Exception {\n        ACCESS_CONTROLLER.preUnassign(ObserverContext.createAndPrepare(CP_ENV, null),\n          firstRegion.getKey(), false);\n        return null;\n      }\n    };\n\n    verifyAllowed(action, SUPERUSER, USER_ADMIN, USER_OWNER);\n    verifyDenied(action, USER_CREATE, USER_RW, USER_RO, USER_NONE);\n  }","commit_id":"d82b07dc6db0f1c693f6a56e80a0f965bace2cbd","url":"https://github.com/apache/hbase"},{"original_method":"public void checkTablePerms(byte[] table, Permission... perms) throws IOException {\n    HTable acl = new HTable(conf, table);\n    AccessControlService.BlockingInterface protocol =\n        AccessControlService.newBlockingStub(acl.coprocessorService(new byte[0]));\n    CheckPermissionsRequest.Builder request = CheckPermissionsRequest.newBuilder();\n    for (Permission p : perms) {\n      request.addPermission(ProtobufUtil.toPermission(p));\n    }\n    try {\n      protocol.checkPermissions(null, request.build());\n    } catch (ServiceException se) {\n      ProtobufUtil.toIOException(se);\n    }\n  }","id":13925,"modified_method":"public void checkTablePerms(byte[] table, Permission... perms) throws IOException {\n    CheckPermissionsRequest.Builder request = CheckPermissionsRequest.newBuilder();\n    for (Permission p : perms) {\n      request.addPermission(ProtobufUtil.toPermission(p));\n    }\n    HTable acl = new HTable(conf, table);\n    try {\n      AccessControlService.BlockingInterface protocol =\n        AccessControlService.newBlockingStub(acl.coprocessorService(new byte[0]));\n      try {\n        protocol.checkPermissions(null, request.build());\n      } catch (ServiceException se) {\n        ProtobufUtil.toIOException(se);\n      }\n    } finally {\n      acl.close();\n    }\n  }","commit_id":"d82b07dc6db0f1c693f6a56e80a0f965bace2cbd","url":"https://github.com/apache/hbase"},{"original_method":"@Test\n  public void testCheckPermissions() throws Exception {\n    final HTable acl = new HTable(conf, AccessControlLists.ACL_TABLE_NAME);\n    BlockingRpcChannel channel = acl.coprocessorService(new byte[0]);\n    AccessControlService.BlockingInterface protocol =\n        AccessControlService.newBlockingStub(channel);\n\n    // --------------------------------------\n    // test global permissions\n    PrivilegedExceptionAction<Void> globalAdmin = new PrivilegedExceptionAction<Void>() {\n      @Override\n      public Void run() throws Exception {\n        checkGlobalPerms(Permission.Action.ADMIN);\n        return null;\n      }\n    };\n    // verify that only superuser can admin\n    verifyGlobal(globalAdmin);\n\n    // --------------------------------------\n    // test multiple permissions\n    PrivilegedExceptionAction<Void> globalReadWrite = new PrivilegedExceptionAction<Void>() {\n      @Override\n      public Void run() throws Exception {\n        checkGlobalPerms(Permission.Action.READ, Permission.Action.WRITE);\n        return null;\n      }\n    };\n\n    verifyGlobal(globalReadWrite);\n\n    // --------------------------------------\n    // table/column/qualifier level permissions\n    final byte[] TEST_Q1 = Bytes.toBytes(\"q1\");\n    final byte[] TEST_Q2 = Bytes.toBytes(\"q2\");\n\n    User userTable = User.createUserForTesting(conf, \"user_check_perms_table\", new String[0]);\n    User userColumn = User.createUserForTesting(conf, \"user_check_perms_family\", new String[0]);\n    User userQualifier = User.createUserForTesting(conf, \"user_check_perms_q\", new String[0]);\n\n    ProtobufUtil.grant(protocol, userTable.getShortName(),\n      TEST_TABLE, null, null, Permission.Action.READ);\n    ProtobufUtil.grant(protocol, userColumn.getShortName(),\n      TEST_TABLE, TEST_FAMILY, null, Permission.Action.READ);\n    ProtobufUtil.grant(protocol, userQualifier.getShortName(),\n      TEST_TABLE, TEST_FAMILY, TEST_Q1, Permission.Action.READ);\n\n    PrivilegedExceptionAction<Void> tableRead = new PrivilegedExceptionAction<Void>() {\n      @Override\n      public Void run() throws Exception {\n        checkTablePerms(TEST_TABLE, null, null, Permission.Action.READ);\n        return null;\n      }\n    };\n\n    PrivilegedExceptionAction<Void> columnRead = new PrivilegedExceptionAction<Void>() {\n      @Override\n      public Void run() throws Exception {\n        checkTablePerms(TEST_TABLE, TEST_FAMILY, null, Permission.Action.READ);\n        return null;\n      }\n    };\n\n    PrivilegedExceptionAction<Void> qualifierRead = new PrivilegedExceptionAction<Void>() {\n      @Override\n      public Void run() throws Exception {\n        checkTablePerms(TEST_TABLE, TEST_FAMILY, TEST_Q1, Permission.Action.READ);\n        return null;\n      }\n    };\n\n    PrivilegedExceptionAction<Void> multiQualifierRead = new PrivilegedExceptionAction<Void>() {\n      @Override\n      public Void run() throws Exception {\n        checkTablePerms(TEST_TABLE, new Permission[] {\n            new TablePermission(TEST_TABLE, TEST_FAMILY, TEST_Q1, Permission.Action.READ),\n            new TablePermission(TEST_TABLE, TEST_FAMILY, TEST_Q2, Permission.Action.READ), });\n        return null;\n      }\n    };\n\n    PrivilegedExceptionAction<Void> globalAndTableRead = new PrivilegedExceptionAction<Void>() {\n      @Override\n      public Void run() throws Exception {\n        checkTablePerms(TEST_TABLE, new Permission[] { new Permission(Permission.Action.READ),\n            new TablePermission(TEST_TABLE, null, (byte[]) null, Permission.Action.READ), });\n        return null;\n      }\n    };\n\n    PrivilegedExceptionAction<Void> noCheck = new PrivilegedExceptionAction<Void>() {\n      @Override\n      public Void run() throws Exception {\n        checkTablePerms(TEST_TABLE, new Permission[0]);\n        return null;\n      }\n    };\n\n    verifyAllowed(tableRead, SUPERUSER, userTable);\n    verifyDenied(tableRead, userColumn, userQualifier);\n\n    verifyAllowed(columnRead, SUPERUSER, userTable, userColumn);\n    verifyDenied(columnRead, userQualifier);\n\n    verifyAllowed(qualifierRead, SUPERUSER, userTable, userColumn, userQualifier);\n\n    verifyAllowed(multiQualifierRead, SUPERUSER, userTable, userColumn);\n    verifyDenied(multiQualifierRead, userQualifier);\n\n    verifyAllowed(globalAndTableRead, SUPERUSER);\n    verifyDenied(globalAndTableRead, userTable, userColumn, userQualifier);\n\n    verifyAllowed(noCheck, SUPERUSER, userTable, userColumn, userQualifier);\n\n    // --------------------------------------\n    // test family level multiple permissions\n    PrivilegedExceptionAction<Void> familyReadWrite = new PrivilegedExceptionAction<Void>() {\n      @Override\n      public Void run() throws Exception {\n        checkTablePerms(TEST_TABLE, TEST_FAMILY, null, Permission.Action.READ,\n          Permission.Action.WRITE);\n        return null;\n      }\n    };\n\n    verifyAllowed(familyReadWrite, SUPERUSER, USER_OWNER, USER_RW);\n    verifyDenied(familyReadWrite, USER_NONE, USER_CREATE, USER_RO);\n\n    // --------------------------------------\n    // check for wrong table region\n    try {\n      CheckPermissionsRequest checkRequest =\n          CheckPermissionsRequest.newBuilder().addPermission(\n              AccessControlProtos.Permission.newBuilder()\n                  .setTable(ByteString.copyFrom(TEST_TABLE)).addAction(AccessControlProtos.Permission.Action.CREATE)\n          ).build();\n      // but ask for TablePermissions for TEST_TABLE\n      protocol.checkPermissions(null, checkRequest);\n      fail(\"this should have thrown CoprocessorException\");\n    } catch (ServiceException ex) {\n      // expected\n    }\n\n  }","id":13926,"modified_method":"@Test\n  public void testCheckPermissions() throws Exception {\n    // --------------------------------------\n    // test global permissions\n    PrivilegedExceptionAction<Void> globalAdmin = new PrivilegedExceptionAction<Void>() {\n      @Override\n      public Void run() throws Exception {\n        checkGlobalPerms(Permission.Action.ADMIN);\n        return null;\n      }\n    };\n    // verify that only superuser can admin\n    verifyGlobal(globalAdmin);\n\n    // --------------------------------------\n    // test multiple permissions\n    PrivilegedExceptionAction<Void> globalReadWrite = new PrivilegedExceptionAction<Void>() {\n      @Override\n      public Void run() throws Exception {\n        checkGlobalPerms(Permission.Action.READ, Permission.Action.WRITE);\n        return null;\n      }\n    };\n\n    verifyGlobal(globalReadWrite);\n\n    // --------------------------------------\n    // table/column/qualifier level permissions\n    final byte[] TEST_Q1 = Bytes.toBytes(\"q1\");\n    final byte[] TEST_Q2 = Bytes.toBytes(\"q2\");\n\n    User userTable = User.createUserForTesting(conf, \"user_check_perms_table\", new String[0]);\n    User userColumn = User.createUserForTesting(conf, \"user_check_perms_family\", new String[0]);\n    User userQualifier = User.createUserForTesting(conf, \"user_check_perms_q\", new String[0]);\n\n    HTable acl = new HTable(conf, AccessControlLists.ACL_TABLE_NAME);\n    try {\n      BlockingRpcChannel channel = acl.coprocessorService(new byte[0]);\n      AccessControlService.BlockingInterface protocol =\n        AccessControlService.newBlockingStub(channel);\n      ProtobufUtil.grant(protocol, userTable.getShortName(),\n        TEST_TABLE, null, null, Permission.Action.READ);\n      ProtobufUtil.grant(protocol, userColumn.getShortName(),\n        TEST_TABLE, TEST_FAMILY, null, Permission.Action.READ);\n      ProtobufUtil.grant(protocol, userQualifier.getShortName(),\n        TEST_TABLE, TEST_FAMILY, TEST_Q1, Permission.Action.READ);\n    } finally {\n      acl.close();\n    }\n\n    PrivilegedExceptionAction<Void> tableRead = new PrivilegedExceptionAction<Void>() {\n      @Override\n      public Void run() throws Exception {\n        checkTablePerms(TEST_TABLE, null, null, Permission.Action.READ);\n        return null;\n      }\n    };\n\n    PrivilegedExceptionAction<Void> columnRead = new PrivilegedExceptionAction<Void>() {\n      @Override\n      public Void run() throws Exception {\n        checkTablePerms(TEST_TABLE, TEST_FAMILY, null, Permission.Action.READ);\n        return null;\n      }\n    };\n\n    PrivilegedExceptionAction<Void> qualifierRead = new PrivilegedExceptionAction<Void>() {\n      @Override\n      public Void run() throws Exception {\n        checkTablePerms(TEST_TABLE, TEST_FAMILY, TEST_Q1, Permission.Action.READ);\n        return null;\n      }\n    };\n\n    PrivilegedExceptionAction<Void> multiQualifierRead = new PrivilegedExceptionAction<Void>() {\n      @Override\n      public Void run() throws Exception {\n        checkTablePerms(TEST_TABLE, new Permission[] {\n            new TablePermission(TEST_TABLE, TEST_FAMILY, TEST_Q1, Permission.Action.READ),\n            new TablePermission(TEST_TABLE, TEST_FAMILY, TEST_Q2, Permission.Action.READ), });\n        return null;\n      }\n    };\n\n    PrivilegedExceptionAction<Void> globalAndTableRead = new PrivilegedExceptionAction<Void>() {\n      @Override\n      public Void run() throws Exception {\n        checkTablePerms(TEST_TABLE, new Permission[] { new Permission(Permission.Action.READ),\n            new TablePermission(TEST_TABLE, null, (byte[]) null, Permission.Action.READ), });\n        return null;\n      }\n    };\n\n    PrivilegedExceptionAction<Void> noCheck = new PrivilegedExceptionAction<Void>() {\n      @Override\n      public Void run() throws Exception {\n        checkTablePerms(TEST_TABLE, new Permission[0]);\n        return null;\n      }\n    };\n\n    verifyAllowed(tableRead, SUPERUSER, userTable);\n    verifyDenied(tableRead, userColumn, userQualifier);\n\n    verifyAllowed(columnRead, SUPERUSER, userTable, userColumn);\n    verifyDenied(columnRead, userQualifier);\n\n    verifyAllowed(qualifierRead, SUPERUSER, userTable, userColumn, userQualifier);\n\n    verifyAllowed(multiQualifierRead, SUPERUSER, userTable, userColumn);\n    verifyDenied(multiQualifierRead, userQualifier);\n\n    verifyAllowed(globalAndTableRead, SUPERUSER);\n    verifyDenied(globalAndTableRead, userTable, userColumn, userQualifier);\n\n    verifyAllowed(noCheck, SUPERUSER, userTable, userColumn, userQualifier);\n\n    // --------------------------------------\n    // test family level multiple permissions\n    PrivilegedExceptionAction<Void> familyReadWrite = new PrivilegedExceptionAction<Void>() {\n      @Override\n      public Void run() throws Exception {\n        checkTablePerms(TEST_TABLE, TEST_FAMILY, null, Permission.Action.READ,\n          Permission.Action.WRITE);\n        return null;\n      }\n    };\n\n    verifyAllowed(familyReadWrite, SUPERUSER, USER_OWNER, USER_RW);\n    verifyDenied(familyReadWrite, USER_NONE, USER_CREATE, USER_RO);\n\n    // --------------------------------------\n    // check for wrong table region\n    CheckPermissionsRequest checkRequest = CheckPermissionsRequest.newBuilder()\n      .addPermission(AccessControlProtos.Permission.newBuilder()\n        .setTable(ByteString.copyFrom(TEST_TABLE))\n        .addAction(AccessControlProtos.Permission.Action.CREATE)\n      ).build();\n    acl = new HTable(conf, AccessControlLists.ACL_TABLE_NAME);\n    try {\n      BlockingRpcChannel channel = acl.coprocessorService(new byte[0]);\n      AccessControlService.BlockingInterface protocol =\n        AccessControlService.newBlockingStub(channel);\n      try {\n        // but ask for TablePermissions for TEST_TABLE\n        protocol.checkPermissions(null, checkRequest);\n        fail(\"this should have thrown CoprocessorException\");\n      } catch (ServiceException ex) {\n        // expected\n      }\n    } finally {\n      acl.close();\n    }\n  }","commit_id":"d82b07dc6db0f1c693f6a56e80a0f965bace2cbd","url":"https://github.com/apache/hbase"},{"original_method":"private void bulkLoadHFile(\n        byte[] tableName,\n        byte[] family,\n        byte[] qualifier,\n        byte[][][] hfileRanges,\n        int numRowsPerRange) throws Exception {\n\n      Path familyDir = new Path(loadPath, Bytes.toString(family));\n      fs.mkdirs(familyDir);\n      int hfileIdx = 0;\n      for (byte[][] range : hfileRanges) {\n        byte[] from = range[0];\n        byte[] to = range[1];\n        createHFile(new Path(familyDir, \"hfile_\"+(hfileIdx++)),\n            family, qualifier, from, to, numRowsPerRange);\n      }\n      //set global read so RegionServer can move it\n      setPermission(loadPath, FsPermission.valueOf(\"-rwxrwxrwx\"));\n\n      HTable table = new HTable(conf, tableName);\n      TEST_UTIL.waitTableAvailable(tableName, 30000);\n      LoadIncrementalHFiles loader = new LoadIncrementalHFiles(conf);\n      loader.doBulkLoad(loadPath, table);\n    }","id":13927,"modified_method":"private void bulkLoadHFile(\n        byte[] tableName,\n        byte[] family,\n        byte[] qualifier,\n        byte[][][] hfileRanges,\n        int numRowsPerRange) throws Exception {\n\n      Path familyDir = new Path(loadPath, Bytes.toString(family));\n      fs.mkdirs(familyDir);\n      int hfileIdx = 0;\n      for (byte[][] range : hfileRanges) {\n        byte[] from = range[0];\n        byte[] to = range[1];\n        createHFile(new Path(familyDir, \"hfile_\"+(hfileIdx++)),\n            family, qualifier, from, to, numRowsPerRange);\n      }\n      //set global read so RegionServer can move it\n      setPermission(loadPath, FsPermission.valueOf(\"-rwxrwxrwx\"));\n\n      HTable table = new HTable(conf, tableName);\n      try {\n        TEST_UTIL.waitTableAvailable(tableName, 30000);\n        LoadIncrementalHFiles loader = new LoadIncrementalHFiles(conf);\n        loader.doBulkLoad(loadPath, table);\n      } finally {\n        table.close();\n      }\n    }","commit_id":"d82b07dc6db0f1c693f6a56e80a0f965bace2cbd","url":"https://github.com/apache/hbase"},{"original_method":"@Test\n  // test put, delete, increment\n  public void testWrite() throws Exception {\n    // put action\n    PrivilegedExceptionAction putAction = new PrivilegedExceptionAction() {\n      public Object run() throws Exception {\n        Put p = new Put(Bytes.toBytes(\"random_row\"));\n        p.add(TEST_FAMILY, Bytes.toBytes(\"Qualifier\"), Bytes.toBytes(1));\n        HTable t = new HTable(conf, TEST_TABLE);\n        t.put(p);\n        return null;\n      }\n    };\n    verifyWrite(putAction);\n\n    // delete action\n    PrivilegedExceptionAction deleteAction = new PrivilegedExceptionAction() {\n      public Object run() throws Exception {\n        Delete d = new Delete(Bytes.toBytes(\"random_row\"));\n        d.deleteFamily(TEST_FAMILY);\n        HTable t = new HTable(conf, TEST_TABLE);\n        t.delete(d);\n        return null;\n      }\n    };\n    verifyWrite(deleteAction);\n\n    // increment action\n    PrivilegedExceptionAction incrementAction = new PrivilegedExceptionAction() {\n      public Object run() throws Exception {\n        Increment inc = new Increment(Bytes.toBytes(\"random_row\"));\n        inc.addColumn(TEST_FAMILY, Bytes.toBytes(\"Qualifier\"), 1);\n        HTable t = new HTable(conf, TEST_TABLE);\n        t.increment(inc);\n        return null;\n      }\n    };\n    verifyWrite(incrementAction);\n  }","id":13928,"modified_method":"@Test\n  // test put, delete, increment\n  public void testWrite() throws Exception {\n    // put action\n    PrivilegedExceptionAction putAction = new PrivilegedExceptionAction() {\n      public Object run() throws Exception {\n        Put p = new Put(Bytes.toBytes(\"random_row\"));\n        p.add(TEST_FAMILY, Bytes.toBytes(\"Qualifier\"), Bytes.toBytes(1));\n        HTable t = new HTable(conf, TEST_TABLE);\n        try {\n          t.put(p);\n        } finally {\n          t.close();\n        }\n        return null;\n      }\n    };\n    verifyWrite(putAction);\n\n    // delete action\n    PrivilegedExceptionAction deleteAction = new PrivilegedExceptionAction() {\n      public Object run() throws Exception {\n        Delete d = new Delete(Bytes.toBytes(\"random_row\"));\n        d.deleteFamily(TEST_FAMILY);\n        HTable t = new HTable(conf, TEST_TABLE);\n        try {\n          t.delete(d);\n        } finally {\n          t.close();\n        }\n        return null;\n      }\n    };\n    verifyWrite(deleteAction);\n\n    // increment action\n    PrivilegedExceptionAction incrementAction = new PrivilegedExceptionAction() {\n      public Object run() throws Exception {\n        Increment inc = new Increment(Bytes.toBytes(\"random_row\"));\n        inc.addColumn(TEST_FAMILY, Bytes.toBytes(\"Qualifier\"), 1);\n        HTable t = new HTable(conf, TEST_TABLE);\n        try {\n          t.increment(inc);\n        } finally {\n          t.close();\n        }\n        return null;\n      }\n    };\n    verifyWrite(incrementAction);\n  }","commit_id":"d82b07dc6db0f1c693f6a56e80a0f965bace2cbd","url":"https://github.com/apache/hbase"},{"original_method":"@Test\n  public void testPostGrantRevokeAtQualifierLevel() throws Exception {\n    final byte[] tableName = Bytes.toBytes(\"testGrantRevokeAtQualifierLevel\");\n    final byte[] family1 = Bytes.toBytes(\"f1\");\n    final byte[] family2 = Bytes.toBytes(\"f2\");\n    final byte[] qualifier = Bytes.toBytes(\"q\");\n\n    // create table\n    HBaseAdmin admin = TEST_UTIL.getHBaseAdmin();\n\n    if (admin.tableExists(tableName)) {\n      admin.disableTable(tableName);\n      admin.deleteTable(tableName);\n    }\n    HTableDescriptor htd = new HTableDescriptor(tableName);\n    htd.addFamily(new HColumnDescriptor(family1));\n    htd.addFamily(new HColumnDescriptor(family2));\n    admin.createTable(htd);\n\n    // create temp users\n    User user = User.createUserForTesting(TEST_UTIL.getConfiguration(), \"user\", new String[0]);\n\n    HTable acl = new HTable(conf, AccessControlLists.ACL_TABLE_NAME);\n    BlockingRpcChannel service = acl.coprocessorService(tableName);\n    AccessControlService.BlockingInterface protocol =\n      AccessControlService.newBlockingStub(service);\n\n    PrivilegedExceptionAction getQualifierAction = new PrivilegedExceptionAction() {\n      public Object run() throws Exception {\n        Get g = new Get(Bytes.toBytes(\"random_row\"));\n        g.addColumn(family1, qualifier);\n        HTable t = new HTable(conf, tableName);\n        t.get(g);\n        return null;\n      }\n    };\n    PrivilegedExceptionAction putQualifierAction = new PrivilegedExceptionAction() {\n      public Object run() throws Exception {\n        Put p = new Put(Bytes.toBytes(\"random_row\"));\n        p.add(family1, qualifier, Bytes.toBytes(\"v1\"));\n        HTable t = new HTable(conf, tableName);\n        t.put(p);\n        return null;\n      }\n    };\n    PrivilegedExceptionAction deleteQualifierAction = new PrivilegedExceptionAction() {\n      public Object run() throws Exception {\n        Delete d = new Delete(Bytes.toBytes(\"random_row\"));\n        d.deleteColumn(family1, qualifier);\n        // d.deleteFamily(family1);\n        HTable t = new HTable(conf, tableName);\n        t.delete(d);\n        return null;\n      }\n    };\n\n    ProtobufUtil.revoke(protocol, user.getShortName(), tableName, family1, null);\n    verifyDenied(user, getQualifierAction);\n    verifyDenied(user, putQualifierAction);\n    verifyDenied(user, deleteQualifierAction);\n\n    ProtobufUtil.grant(protocol, user.getShortName(),\n      tableName, family1, qualifier, Permission.Action.READ);\n    Thread.sleep(100);\n\n    verifyAllowed(user, getQualifierAction);\n    verifyDenied(user, putQualifierAction);\n    verifyDenied(user, deleteQualifierAction);\n\n    // only grant write permission\n    // TODO: comment this portion after HBASE-3583\n    ProtobufUtil.grant(protocol, user.getShortName(),\n      tableName, family1, qualifier, Permission.Action.WRITE);\n    Thread.sleep(100);\n\n    verifyDenied(user, getQualifierAction);\n    verifyAllowed(user, putQualifierAction);\n    verifyAllowed(user, deleteQualifierAction);\n\n    // grant both read and write permission.\n    ProtobufUtil.grant(protocol, user.getShortName(),\n      tableName, family1, qualifier,\n        Permission.Action.READ, Permission.Action.WRITE);\n    Thread.sleep(100);\n\n    verifyAllowed(user, getQualifierAction);\n    verifyAllowed(user, putQualifierAction);\n    verifyAllowed(user, deleteQualifierAction);\n\n    // revoke family level permission won't impact column level.\n    ProtobufUtil.revoke(protocol, user.getShortName(),\n      tableName, family1, qualifier);\n    Thread.sleep(100);\n\n    verifyDenied(user, getQualifierAction);\n    verifyDenied(user, putQualifierAction);\n    verifyDenied(user, deleteQualifierAction);\n\n    // delete table\n    admin.disableTable(tableName);\n    admin.deleteTable(tableName);\n  }","id":13929,"modified_method":"@Test\n  public void testPostGrantRevokeAtQualifierLevel() throws Exception {\n    final byte[] tableName = Bytes.toBytes(\"testGrantRevokeAtQualifierLevel\");\n    final byte[] family1 = Bytes.toBytes(\"f1\");\n    final byte[] family2 = Bytes.toBytes(\"f2\");\n    final byte[] qualifier = Bytes.toBytes(\"q\");\n\n    // create table\n    HBaseAdmin admin = TEST_UTIL.getHBaseAdmin();\n    if (admin.tableExists(tableName)) {\n      admin.disableTable(tableName);\n      admin.deleteTable(tableName);\n    }\n    HTableDescriptor htd = new HTableDescriptor(tableName);\n    htd.addFamily(new HColumnDescriptor(family1));\n    htd.addFamily(new HColumnDescriptor(family2));\n    admin.createTable(htd);\n\n    // create temp users\n    User user = User.createUserForTesting(TEST_UTIL.getConfiguration(), \"user\", new String[0]);\n\n    PrivilegedExceptionAction getQualifierAction = new PrivilegedExceptionAction() {\n      public Object run() throws Exception {\n        Get g = new Get(Bytes.toBytes(\"random_row\"));\n        g.addColumn(family1, qualifier);\n        HTable t = new HTable(conf, tableName);\n        try {\n          t.get(g);\n        } finally {\n          t.close();\n        }\n        return null;\n      }\n    };\n    PrivilegedExceptionAction putQualifierAction = new PrivilegedExceptionAction() {\n      public Object run() throws Exception {\n        Put p = new Put(Bytes.toBytes(\"random_row\"));\n        p.add(family1, qualifier, Bytes.toBytes(\"v1\"));\n        HTable t = new HTable(conf, tableName);\n        try {\n          t.put(p);\n        } finally {\n          t.close();\n        }\n        return null;\n      }\n    };\n    PrivilegedExceptionAction deleteQualifierAction = new PrivilegedExceptionAction() {\n      public Object run() throws Exception {\n        Delete d = new Delete(Bytes.toBytes(\"random_row\"));\n        d.deleteColumn(family1, qualifier);\n        // d.deleteFamily(family1);\n        HTable t = new HTable(conf, tableName);\n        try {\n          t.delete(d);\n        } finally {\n          t.close();\n        }\n        return null;\n      }\n    };\n\n    HTable acl = new HTable(conf, AccessControlLists.ACL_TABLE_NAME);\n    try {\n      BlockingRpcChannel service = acl.coprocessorService(tableName);\n      AccessControlService.BlockingInterface protocol =\n        AccessControlService.newBlockingStub(service);\n      ProtobufUtil.revoke(protocol, user.getShortName(), tableName, family1, null);\n    } finally {\n      acl.close();\n    }\n\n    Thread.sleep(100);\n\n    verifyDenied(user, getQualifierAction);\n    verifyDenied(user, putQualifierAction);\n    verifyDenied(user, deleteQualifierAction);\n\n    acl = new HTable(conf, AccessControlLists.ACL_TABLE_NAME);\n    try {\n      BlockingRpcChannel service = acl.coprocessorService(tableName);\n      AccessControlService.BlockingInterface protocol =\n        AccessControlService.newBlockingStub(service);\n      ProtobufUtil.grant(protocol, user.getShortName(),\n        tableName, family1, qualifier, Permission.Action.READ);\n    } finally {\n      acl.close();\n    }\n\n    Thread.sleep(100);\n\n    verifyAllowed(user, getQualifierAction);\n    verifyDenied(user, putQualifierAction);\n    verifyDenied(user, deleteQualifierAction);\n\n    // only grant write permission\n    // TODO: comment this portion after HBASE-3583\n    acl = new HTable(conf, AccessControlLists.ACL_TABLE_NAME);\n    try {\n      BlockingRpcChannel service = acl.coprocessorService(tableName);\n      AccessControlService.BlockingInterface protocol =\n        AccessControlService.newBlockingStub(service);\n      ProtobufUtil.grant(protocol, user.getShortName(),\n        tableName, family1, qualifier, Permission.Action.WRITE);\n    } finally {\n      acl.close();\n    }\n\n    Thread.sleep(100);\n\n    verifyDenied(user, getQualifierAction);\n    verifyAllowed(user, putQualifierAction);\n    verifyAllowed(user, deleteQualifierAction);\n\n    // grant both read and write permission.\n    acl = new HTable(conf, AccessControlLists.ACL_TABLE_NAME);\n    try {\n      BlockingRpcChannel service = acl.coprocessorService(tableName);\n      AccessControlService.BlockingInterface protocol =\n        AccessControlService.newBlockingStub(service);\n      ProtobufUtil.grant(protocol, user.getShortName(),\n        tableName, family1, qualifier,\n          Permission.Action.READ, Permission.Action.WRITE);\n    } finally {\n      acl.close();\n    }\n\n    Thread.sleep(100);\n\n    verifyAllowed(user, getQualifierAction);\n    verifyAllowed(user, putQualifierAction);\n    verifyAllowed(user, deleteQualifierAction);\n\n    // revoke family level permission won't impact column level.\n    acl = new HTable(conf, AccessControlLists.ACL_TABLE_NAME);\n    try {\n      BlockingRpcChannel service = acl.coprocessorService(tableName);\n      AccessControlService.BlockingInterface protocol =\n        AccessControlService.newBlockingStub(service);\n      ProtobufUtil.revoke(protocol, user.getShortName(),\n        tableName, family1, qualifier);\n    } finally {\n      acl.close();\n    }\n\n    Thread.sleep(100);\n\n    verifyDenied(user, getQualifierAction);\n    verifyDenied(user, putQualifierAction);\n    verifyDenied(user, deleteQualifierAction);\n\n    // delete table\n    admin.disableTable(tableName);\n    admin.deleteTable(tableName);\n  }","commit_id":"d82b07dc6db0f1c693f6a56e80a0f965bace2cbd","url":"https://github.com/apache/hbase"},{"original_method":"@BeforeClass\n  public static void setupBeforeClass() throws Exception {\n    // setup configuration\n    conf = TEST_UTIL.getConfiguration();\n    SecureTestUtil.enableSecurity(conf);\n\n    TEST_UTIL.startMiniCluster();\n    MasterCoprocessorHost cpHost = TEST_UTIL.getMiniHBaseCluster().getMaster().getCoprocessorHost();\n    cpHost.load(AccessController.class, Coprocessor.PRIORITY_HIGHEST, conf);\n    ACCESS_CONTROLLER = (AccessController) cpHost.findCoprocessor(AccessController.class.getName());\n    CP_ENV = cpHost.createEnvironment(AccessController.class, ACCESS_CONTROLLER,\n      Coprocessor.PRIORITY_HIGHEST, 1, conf);\n    RegionServerCoprocessorHost rsHost = TEST_UTIL.getMiniHBaseCluster().getRegionServer(0)\n        .getCoprocessorHost();\n    RSCP_ENV = rsHost.createEnvironment(AccessController.class, ACCESS_CONTROLLER, \n      Coprocessor.PRIORITY_HIGHEST, 1, conf);\n\n    // Wait for the ACL table to become available\n    TEST_UTIL.waitTableAvailable(AccessControlLists.ACL_TABLE_NAME, 5000);\n\n    // create a set of test users\n    SUPERUSER = User.createUserForTesting(conf, \"admin\", new String[] { \"supergroup\" });\n    USER_ADMIN = User.createUserForTesting(conf, \"admin2\", new String[0]);\n    USER_RW = User.createUserForTesting(conf, \"rwuser\", new String[0]);\n    USER_RO = User.createUserForTesting(conf, \"rouser\", new String[0]);\n    USER_OWNER = User.createUserForTesting(conf, \"owner\", new String[0]);\n    USER_CREATE = User.createUserForTesting(conf, \"tbl_create\", new String[0]);\n    USER_NONE = User.createUserForTesting(conf, \"nouser\", new String[0]);\n\n    HBaseAdmin admin = TEST_UTIL.getHBaseAdmin();\n    HTableDescriptor htd = new HTableDescriptor(TEST_TABLE);\n    htd.addFamily(new HColumnDescriptor(TEST_FAMILY));\n    htd.setOwner(USER_OWNER);\n    admin.createTable(htd);\n\n    // initilize access control\n    HTable meta = new HTable(conf, AccessControlLists.ACL_TABLE_NAME);\n    BlockingRpcChannel service = meta.coprocessorService(TEST_TABLE);\n    AccessControlService.BlockingInterface protocol =\n        AccessControlService.newBlockingStub(service);\n\n    HRegion region = TEST_UTIL.getHBaseCluster().getRegions(TEST_TABLE).get(0);\n    RegionCoprocessorHost rcpHost = region.getCoprocessorHost();\n    RCP_ENV = rcpHost.createEnvironment(AccessController.class, ACCESS_CONTROLLER,\n      Coprocessor.PRIORITY_HIGHEST, 1, conf);\n\n    protocol.grant(null, RequestConverter.buildGrantRequest(USER_ADMIN.getShortName(),\n        null, null, null,\n        AccessControlProtos.Permission.Action.ADMIN,\n        AccessControlProtos.Permission.Action.CREATE,\n        AccessControlProtos.Permission.Action.READ,\n        AccessControlProtos.Permission.Action.WRITE));\n\n    protocol.grant(null, RequestConverter.buildGrantRequest(USER_RW.getShortName(),\n        TEST_TABLE, TEST_FAMILY, null,\n        AccessControlProtos.Permission.Action.READ,\n        AccessControlProtos.Permission.Action.WRITE));\n\n    protocol.grant(null, RequestConverter.buildGrantRequest(USER_RO.getShortName(), TEST_TABLE,\n        TEST_FAMILY, null, AccessControlProtos.Permission.Action.READ));\n\n    protocol.grant(null, RequestConverter.buildGrantRequest(USER_CREATE.getShortName(),\n        TEST_TABLE, null, null, AccessControlProtos.Permission.Action.CREATE));\n  }","id":13930,"modified_method":"@BeforeClass\n  public static void setupBeforeClass() throws Exception {\n    // setup configuration\n    conf = TEST_UTIL.getConfiguration();\n    SecureTestUtil.enableSecurity(conf);\n\n    TEST_UTIL.startMiniCluster();\n    MasterCoprocessorHost cpHost = TEST_UTIL.getMiniHBaseCluster().getMaster().getCoprocessorHost();\n    cpHost.load(AccessController.class, Coprocessor.PRIORITY_HIGHEST, conf);\n    ACCESS_CONTROLLER = (AccessController) cpHost.findCoprocessor(AccessController.class.getName());\n    CP_ENV = cpHost.createEnvironment(AccessController.class, ACCESS_CONTROLLER,\n      Coprocessor.PRIORITY_HIGHEST, 1, conf);\n    RegionServerCoprocessorHost rsHost = TEST_UTIL.getMiniHBaseCluster().getRegionServer(0)\n        .getCoprocessorHost();\n    RSCP_ENV = rsHost.createEnvironment(AccessController.class, ACCESS_CONTROLLER, \n      Coprocessor.PRIORITY_HIGHEST, 1, conf);\n\n    // Wait for the ACL table to become available\n    TEST_UTIL.waitTableAvailable(AccessControlLists.ACL_TABLE_NAME, 5000);\n\n    // create a set of test users\n    SUPERUSER = User.createUserForTesting(conf, \"admin\", new String[] { \"supergroup\" });\n    USER_ADMIN = User.createUserForTesting(conf, \"admin2\", new String[0]);\n    USER_RW = User.createUserForTesting(conf, \"rwuser\", new String[0]);\n    USER_RO = User.createUserForTesting(conf, \"rouser\", new String[0]);\n    USER_OWNER = User.createUserForTesting(conf, \"owner\", new String[0]);\n    USER_CREATE = User.createUserForTesting(conf, \"tbl_create\", new String[0]);\n    USER_NONE = User.createUserForTesting(conf, \"nouser\", new String[0]);\n\n    HBaseAdmin admin = TEST_UTIL.getHBaseAdmin();\n    HTableDescriptor htd = new HTableDescriptor(TEST_TABLE);\n    htd.addFamily(new HColumnDescriptor(TEST_FAMILY));\n    htd.setOwner(USER_OWNER);\n    admin.createTable(htd);\n\n    HRegion region = TEST_UTIL.getHBaseCluster().getRegions(TEST_TABLE).get(0);\n    RegionCoprocessorHost rcpHost = region.getCoprocessorHost();\n    RCP_ENV = rcpHost.createEnvironment(AccessController.class, ACCESS_CONTROLLER,\n      Coprocessor.PRIORITY_HIGHEST, 1, conf);\n\n    // initilize access control\n    HTable acl = new HTable(conf, AccessControlLists.ACL_TABLE_NAME);\n    try {\n      BlockingRpcChannel service = acl.coprocessorService(TEST_TABLE);\n      AccessControlService.BlockingInterface protocol =\n        AccessControlService.newBlockingStub(service);\n\n      protocol.grant(null, RequestConverter.buildGrantRequest(USER_ADMIN.getShortName(),\n        null, null, null,\n        AccessControlProtos.Permission.Action.ADMIN,\n        AccessControlProtos.Permission.Action.CREATE,\n        AccessControlProtos.Permission.Action.READ,\n        AccessControlProtos.Permission.Action.WRITE));\n\n      protocol.grant(null, RequestConverter.buildGrantRequest(USER_RW.getShortName(),\n        TEST_TABLE, TEST_FAMILY, null,\n        AccessControlProtos.Permission.Action.READ,\n        AccessControlProtos.Permission.Action.WRITE));\n\n      protocol.grant(null, RequestConverter.buildGrantRequest(USER_RO.getShortName(), TEST_TABLE,\n        TEST_FAMILY, null, AccessControlProtos.Permission.Action.READ));\n\n      protocol.grant(null, RequestConverter.buildGrantRequest(USER_CREATE.getShortName(),\n        TEST_TABLE, null, null, AccessControlProtos.Permission.Action.CREATE));\n    } finally {\n      acl.close();\n    }\n  }","commit_id":"d82b07dc6db0f1c693f6a56e80a0f965bace2cbd","url":"https://github.com/apache/hbase"},{"original_method":"public void checkGlobalPerms(Permission.Action... actions) throws IOException {\n    HTable acl = new HTable(conf, AccessControlLists.ACL_TABLE_NAME);\n    BlockingRpcChannel channel = acl.coprocessorService(new byte[0]);\n    AccessControlService.BlockingInterface protocol =\n        AccessControlService.newBlockingStub(channel);\n\n    Permission[] perms = new Permission[actions.length];\n    for (int i = 0; i < actions.length; i++) {\n      perms[i] = new Permission(actions[i]);\n    }\n\n    CheckPermissionsRequest.Builder request = CheckPermissionsRequest.newBuilder();\n    for (Action a : actions) {\n      request.addPermission(AccessControlProtos.Permission.newBuilder()\n          .addAction(ProtobufUtil.toPermissionAction(a)).build());\n    }\n    try {\n      protocol.checkPermissions(null, request.build());\n    } catch (ServiceException se) {\n      ProtobufUtil.toIOException(se);\n    }\n  }","id":13931,"modified_method":"public void checkGlobalPerms(Permission.Action... actions) throws IOException {\n    Permission[] perms = new Permission[actions.length];\n    for (int i = 0; i < actions.length; i++) {\n      perms[i] = new Permission(actions[i]);\n    }\n    CheckPermissionsRequest.Builder request = CheckPermissionsRequest.newBuilder();\n    for (Action a : actions) {\n      request.addPermission(AccessControlProtos.Permission.newBuilder()\n          .addAction(ProtobufUtil.toPermissionAction(a)).build());\n    }\n    HTable acl = new HTable(conf, AccessControlLists.ACL_TABLE_NAME);\n    try {\n      BlockingRpcChannel channel = acl.coprocessorService(new byte[0]);\n      AccessControlService.BlockingInterface protocol =\n        AccessControlService.newBlockingStub(channel);\n      try {\n        protocol.checkPermissions(null, request.build());\n      } catch (ServiceException se) {\n        ProtobufUtil.toIOException(se);\n      }\n    } finally {\n      acl.close();\n    }\n  }","commit_id":"d82b07dc6db0f1c693f6a56e80a0f965bace2cbd","url":"https://github.com/apache/hbase"},{"original_method":"protected void newJavaAnnotationQuickfix(final String typeName, final XtextResource resource, Issue issue,\n\t\t\tIssueResolutionAcceptor issueResolutionAcceptor) {\n\t\tissueResolutionAcceptor.accept(issue, \"Create Java annotation '@\" + typeName + \"'\",\n\t\t\t\t\"Opens the new Java annotation wizard to create the type '@\" + typeName + \"'\", \"java_file.gif\",\n\t\t\t\tnew IModification() {\n\t\t\t\t\tpublic void apply(@Nullable IModificationContext context) throws Exception {\n\t\t\t\t\t\trunAsyncInDisplayThread(new Runnable() {\n\t\t\t\t\t\t\tpublic void run() {\n\t\t\t\t\t\t\t\tNewAnnotationWizardPage annotationWizardPage = new NewAnnotationWizardPage();\n\t\t\t\t\t\t\t\tNewAnnotationCreationWizard wizard = new NewAnnotationCreationWizard(annotationWizardPage, true);\n\t\t\t\t\t\t\t\tWizardDialog dialog = createWizardDialog(wizard);\n\t\t\t\t\t\t\t\tconfigureWizardPage(annotationWizardPage, resource.getURI(), typeName);\n\t\t\t\t\t\t\t\tdialog.open();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t}","id":13932,"modified_method":"protected void newJavaAnnotationQuickfix(final String typeName, final String explicitPackage, final XtextResource resource, Issue issue,\n\t\t\tIssueResolutionAcceptor issueResolutionAcceptor) {\n\t\tString packageDescription = getPackageDescription(explicitPackage);\n\t\tissueResolutionAcceptor.accept(issue, \"Create Java annotation '@\" + typeName + \"'\" + packageDescription,\n\t\t\t\t\"Opens the new Java annotation wizard to create the type '@\" + typeName + \"'\" + packageDescription, \"java_file.gif\",\n\t\t\t\tnew IModification() {\n\t\t\t\t\tpublic void apply(@Nullable IModificationContext context) throws Exception {\n\t\t\t\t\t\trunAsyncInDisplayThread(new Runnable() {\n\t\t\t\t\t\t\tpublic void run() {\n\t\t\t\t\t\t\t\tNewAnnotationWizardPage annotationWizardPage = new NewAnnotationWizardPage();\n\t\t\t\t\t\t\t\tNewAnnotationCreationWizard wizard = new NewAnnotationCreationWizard(annotationWizardPage, true);\n\t\t\t\t\t\t\t\tWizardDialog dialog = createWizardDialog(wizard);\n\t\t\t\t\t\t\t\tconfigureWizardPage(annotationWizardPage, resource.getURI(), typeName, explicitPackage);\n\t\t\t\t\t\t\t\tdialog.open();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t}","commit_id":"8fd2e7ebe99c4e564b20a5010076fe4287d7244c","url":"https://github.com/eclipse/xtext"},{"original_method":"protected void configureWizardPage(NewTypeWizardPage page, URI contextUri, String typeName) {\n\t\tsetPackageName(page, contextUri);\n\t\tpage.setTypeName(typeName, true);\n\t}","id":13933,"modified_method":"protected void configureWizardPage(NewTypeWizardPage page, URI contextUri, String typeName, String packageName) {\n\t\tsetPackageName(page, contextUri, packageName);\n\t\tpage.setTypeName(typeName, true);\n\t}","commit_id":"8fd2e7ebe99c4e564b20a5010076fe4287d7244c","url":"https://github.com/eclipse/xtext"},{"original_method":"protected void newJavaInterfaceQuickfix(final String typeName, final XtextResource resource, Issue issue,\n\t\t\tIssueResolutionAcceptor issueResolutionAcceptor) {\n\t\tissueResolutionAcceptor.accept(issue, \"Create Java interface '\" + typeName + \"'\",\n\t\t\t\t\"Opens the new Java interface wizard to create the type '\" + typeName + \"'\",\n\t\t\t\t\"java_interface.gif\", new IModification() {\n\t\t\t\t\tpublic void apply(@Nullable IModificationContext context) throws Exception {\n\t\t\t\t\t\trunAsyncInDisplayThread(new Runnable() {\n\t\t\t\t\t\t\tpublic void run() {\n\t\t\t\t\t\t\t\tNewInterfaceWizardPage classWizardPage = new NewInterfaceWizardPage();\n\t\t\t\t\t\t\t\tNewInterfaceCreationWizard wizard = new NewInterfaceCreationWizard(classWizardPage, true);\n\t\t\t\t\t\t\t\tWizardDialog dialog = createWizardDialog(wizard);\n\t\t\t\t\t\t\t\tconfigureWizardPage(classWizardPage, resource.getURI(), typeName);\n\t\t\t\t\t\t\t\tdialog.open();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t}","id":13934,"modified_method":"protected void newJavaInterfaceQuickfix(final String typeName, final String explicitPackage, final XtextResource resource, Issue issue,\n\t\t\tIssueResolutionAcceptor issueResolutionAcceptor) {\n\t\tString packageDescription = getPackageDescription(explicitPackage);\n\t\tissueResolutionAcceptor.accept(issue, \"Create Java interface '\" + typeName + \"'\" + packageDescription,\n\t\t\t\t\"Opens the new Java interface wizard to create the type '\" + typeName + \"'\" + packageDescription,\n\t\t\t\t\"java_interface.gif\", new IModification() {\n\t\t\t\t\tpublic void apply(@Nullable IModificationContext context) throws Exception {\n\t\t\t\t\t\trunAsyncInDisplayThread(new Runnable() {\n\t\t\t\t\t\t\tpublic void run() {\n\t\t\t\t\t\t\t\tNewInterfaceWizardPage classWizardPage = new NewInterfaceWizardPage();\n\t\t\t\t\t\t\t\tNewInterfaceCreationWizard wizard = new NewInterfaceCreationWizard(classWizardPage, true);\n\t\t\t\t\t\t\t\tWizardDialog dialog = createWizardDialog(wizard);\n\t\t\t\t\t\t\t\tconfigureWizardPage(classWizardPage, resource.getURI(), typeName, explicitPackage);\n\t\t\t\t\t\t\t\tdialog.open();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t}","commit_id":"8fd2e7ebe99c4e564b20a5010076fe4287d7244c","url":"https://github.com/eclipse/xtext"},{"original_method":"public void addQuickfixes(Issue issue, IssueResolutionAcceptor issueResolutionAcceptor,\n\t\t\tIXtextDocument xtextDocument, XtextResource resource, \n\t\t\tEObject referenceOwner, EReference unresolvedReference)\n\t\t\tthrows Exception {\n\t\tString typeName = xtextDocument.get(issue.getOffset(), issue.getLength());\n\t\tif (unresolvedReference == XbasePackage.Literals.XCONSTRUCTOR_CALL__CONSTRUCTOR) {\n\t\t\tif(((XConstructorCall)referenceOwner).getConstructor().eIsProxy())\n\t\t\t\tnewJavaClassQuickfix(typeName, resource, issue, issueResolutionAcceptor);\n\t\t} else if(unresolvedReference == XbasePackage.Literals.XTYPE_LITERAL__TYPE\n\t\t\t\t|| unresolvedReference == TypesPackage.Literals.JVM_PARAMETERIZED_TYPE_REFERENCE__TYPE) {\n\t\t\tnewJavaClassQuickfix(typeName, resource, issue, issueResolutionAcceptor);\n\t\t\tnewJavaInterfaceQuickfix(typeName, resource, issue, issueResolutionAcceptor);\n\t\t} else if(unresolvedReference == XAnnotationsPackage.Literals.XANNOTATION__ANNOTATION_TYPE) {\n\t\t\tnewJavaAnnotationQuickfix(typeName, resource, issue, issueResolutionAcceptor);\n\t\t}\n\t}","id":13935,"modified_method":"public void addQuickfixes(Issue issue, IssueResolutionAcceptor issueResolutionAcceptor,\n\t\t\tIXtextDocument xtextDocument, XtextResource resource, \n\t\t\tEObject referenceOwner, EReference unresolvedReference)\n\t\t\tthrows Exception {\n\t\tString typeString = (issue.getData() != null && issue.getData().length > 0) \n\t\t\t\t? issue.getData()[0] \n\t\t\t\t: xtextDocument.get(issue.getOffset(), issue.getLength());\n\t\tPair<String, String> packageAndType = typeNameGuesser.guessPackageAndTypeName(referenceOwner, typeString);\n\t\tString packageName = packageAndType.getFirst();\n\t\tif(isEmpty(packageAndType.getSecond()))\n\t\t\treturn;\n\t\tString typeName = packageAndType.getSecond();\n\t\tif (unresolvedReference == XbasePackage.Literals.XCONSTRUCTOR_CALL__CONSTRUCTOR) {\n\t\t\tif(((XConstructorCall)referenceOwner).getConstructor().eIsProxy())\n\t\t\t\tnewJavaClassQuickfix(typeName, packageName, resource, issue, issueResolutionAcceptor);\n\t\t} else if(unresolvedReference == XbasePackage.Literals.XTYPE_LITERAL__TYPE\n\t\t\t\t|| unresolvedReference == TypesPackage.Literals.JVM_PARAMETERIZED_TYPE_REFERENCE__TYPE) {\n\t\t\tnewJavaClassQuickfix(typeName, packageName, resource, issue, issueResolutionAcceptor);\n\t\t\tnewJavaInterfaceQuickfix(typeName, packageName, resource, issue, issueResolutionAcceptor);\n\t\t} else if(unresolvedReference == XAnnotationsPackage.Literals.XANNOTATION__ANNOTATION_TYPE) {\n\t\t\tnewJavaAnnotationQuickfix(typeName, packageName, resource, issue, issueResolutionAcceptor);\n\t\t}\n\t}","commit_id":"8fd2e7ebe99c4e564b20a5010076fe4287d7244c","url":"https://github.com/eclipse/xtext"},{"original_method":"protected void setPackageName(NewTypeWizardPage page, URI contextUri) {\n\t\tIJavaProject javaProject = getJavaProject(contextUri);\n\t\tString path = contextUri.trimSegments(1).toPlatformString(true);\n\t\ttry {\n\t\t\tif(javaProject != null) {\n\t\t\t\tIPackageFragment packageFragment = javaProject.findPackageFragment(new Path(path));\n\t\t\t\tIPackageFragmentRoot root = (IPackageFragmentRoot) packageFragment\n\t\t\t\t\t\t.getAncestor(IJavaElement.PACKAGE_FRAGMENT_ROOT);\n\t\t\t\tpage.setPackageFragment(packageFragment, true);\n\t\t\t\tpage.setPackageFragmentRoot(root, true);\n\t\t\t}\n\t\t} catch (JavaModelException e) {\n\t\t\tLOG.error(\"Could not find package for \" + path, e);\n\t\t}\n\t}","id":13936,"modified_method":"protected void setPackageName(NewTypeWizardPage page, URI contextUri, String packageName) {\n\t\tIJavaProject javaProject = getJavaProject(contextUri);\n\t\tString path = contextUri.trimSegments(1).toPlatformString(true);\n\t\ttry {\n\t\t\tif(javaProject != null) {\n\t\t\t\tIPackageFragment contextPackageFragment = javaProject.findPackageFragment(new Path(path));\n\t\t\t\tIPackageFragmentRoot root = (IPackageFragmentRoot) contextPackageFragment\n\t\t\t\t\t\t.getAncestor(IJavaElement.PACKAGE_FRAGMENT_ROOT);\n\t\t\t\tIPackageFragment packageFragment;\n\t\t\t\tif(!isEmpty(packageName)) {\n\t\t\t\t\tpackageFragment = root.getPackageFragment(packageName);\n\t\t\t\t} else {\n\t\t\t\t\tpackageFragment = contextPackageFragment;\n\t\t\t\t}\n\t\t\t\tpage.setPackageFragment(packageFragment, true);\n\t\t\t\tpage.setPackageFragmentRoot(root, true);\n\t\t\t}\n\t\t} catch (JavaModelException e) {\n\t\t\tLOG.error(\"Could not find package for \" + path, e);\n\t\t}\n\t}","commit_id":"8fd2e7ebe99c4e564b20a5010076fe4287d7244c","url":"https://github.com/eclipse/xtext"},{"original_method":"protected void newJavaClassQuickfix(final String typeName, final XtextResource resource, Issue issue,\n\t\t\tIssueResolutionAcceptor issueResolutionAcceptor) {\n\t\tissueResolutionAcceptor.accept(issue, \"Create Java class '\" + typeName + \"'\",\n\t\t\t\t\"Opens the new Java class wizard to create the type '\" + typeName + \"'\", \"java_file.gif\",\n\t\t\t\tnew IModification() {\n\t\t\t\t\tpublic void apply(@Nullable IModificationContext context) throws Exception {\n\t\t\t\t\t\trunAsyncInDisplayThread(new Runnable() {\n\t\t\t\t\t\t\tpublic void run() {\n\t\t\t\t\t\t\t\tNewClassWizardPage classWizardPage = new NewClassWizardPage();\n\t\t\t\t\t\t\t\tNewClassCreationWizard wizard = new NewClassCreationWizard(classWizardPage, true);\n\t\t\t\t\t\t\t\tWizardDialog dialog = createWizardDialog(wizard);\n\t\t\t\t\t\t\t\tconfigureWizardPage(classWizardPage, resource.getURI(), typeName);\n\t\t\t\t\t\t\t\tdialog.open();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t}","id":13937,"modified_method":"protected void newJavaClassQuickfix(final String typeName, final String explicitPackage, final XtextResource resource, Issue issue,\n\t\t\tIssueResolutionAcceptor issueResolutionAcceptor) {\n\t\tString packageDescription = getPackageDescription(explicitPackage);\n\t\tissueResolutionAcceptor.accept(issue, \"Create Java class '\" + typeName + \"'\" + packageDescription,\n\t\t\t\t\"Opens the new Java class wizard to create the type '\" + typeName + \"'\" + packageDescription, \"java_file.gif\",\n\t\t\t\tnew ISemanticModification() {\n\t\t\t\t\tpublic void apply(EObject element, IModificationContext context) throws Exception {\n\t\t\t\t\t\trunAsyncInDisplayThread(new Runnable() {\n\t\t\t\t\t\t\tpublic void run() {\n\t\t\t\t\t\t\t\tNewClassWizardPage classWizardPage = new NewClassWizardPage();\n\t\t\t\t\t\t\t\tNewClassCreationWizard wizard = new NewClassCreationWizard(classWizardPage, true);\n\t\t\t\t\t\t\t\tWizardDialog dialog = createWizardDialog(wizard);\n\t\t\t\t\t\t\t\tconfigureWizardPage(classWizardPage, resource.getURI(), typeName, explicitPackage);\n\t\t\t\t\t\t\t\tdialog.open();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t}","commit_id":"8fd2e7ebe99c4e564b20a5010076fe4287d7244c","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n\tpublic void addQuickfixes(Issue issue, IssueResolutionAcceptor issueResolutionAcceptor,\n\t\t\tIXtextDocument xtextDocument, XtextResource resource, \n\t\t\tEObject referenceOwner, EReference unresolvedReference)\n\t\t\tthrows Exception {\n\t\tString typeName = xtextDocument.get(issue.getOffset(), issue.getLength());\n\t\tif (unresolvedReference == XbasePackage.Literals.XCONSTRUCTOR_CALL__CONSTRUCTOR) {\n\t\t\tif(((XConstructorCall)referenceOwner).getConstructor().eIsProxy()) {\n\t\t\t\tnewJavaClassQuickfix(typeName, resource, issue, issueResolutionAcceptor);\n\t\t\t\tnewXtendClassQuickfix(typeName, resource, issue, issueResolutionAcceptor);\n\t\t\t\tnewLocalXtendClassQuickfix(typeName, resource, issue, issueResolutionAcceptor);\n\t\t\t}\n\t\t} else if(unresolvedReference == XbasePackage.Literals.XTYPE_LITERAL__TYPE\n\t\t\t\t|| unresolvedReference == TypesPackage.Literals.JVM_PARAMETERIZED_TYPE_REFERENCE__TYPE) {\n\t\t\tEStructuralFeature eContainingFeature = referenceOwner.eContainingFeature();\n\t\t\tif(eContainingFeature == XtendPackage.Literals.XTEND_CLASS__EXTENDS) {\n\t\t\t\tnewJavaClassQuickfix(typeName, resource, issue, issueResolutionAcceptor);\n\t\t\t\tnewXtendClassQuickfix(typeName, resource, issue, issueResolutionAcceptor);\n\t\t\t\tnewLocalXtendClassQuickfix(typeName, resource, issue, issueResolutionAcceptor);\n\t\t\t} else if(eContainingFeature == XtendPackage.Literals.XTEND_CLASS__IMPLEMENTS\n\t\t\t\t\t|| eContainingFeature == XtendPackage.Literals.XTEND_INTERFACE__EXTENDS) {\n\t\t\t\tnewJavaInterfaceQuickfix(typeName, resource, issue, issueResolutionAcceptor);\n\t\t\t\tnewXtendInterfaceQuickfix(typeName, resource, issue, issueResolutionAcceptor);\n\t\t\t\tnewLocalXtendInterfaceQuickfix(typeName, resource, issue, issueResolutionAcceptor);\n\t\t\t} else {\n\t\t\t\tnewJavaClassQuickfix(typeName, resource, issue, issueResolutionAcceptor);\n\t\t\t\tnewJavaInterfaceQuickfix(typeName, resource, issue, issueResolutionAcceptor);\n\t\t\t\tnewXtendClassQuickfix(typeName, resource, issue, issueResolutionAcceptor);\n\t\t\t\tnewXtendInterfaceQuickfix(typeName, resource, issue, issueResolutionAcceptor);\n\t\t\t\tnewLocalXtendClassQuickfix(typeName, resource, issue, issueResolutionAcceptor);\t\t\t\t\n\t\t\t\tnewLocalXtendInterfaceQuickfix(typeName, resource, issue, issueResolutionAcceptor);\n\t\t\t}\n\t\t} else if(unresolvedReference == XAnnotationsPackage.Literals.XANNOTATION__ANNOTATION_TYPE) {\n\t\t\tnewJavaAnnotationQuickfix(typeName, resource, issue, issueResolutionAcceptor);\n\t\t\tnewXtendAnnotationQuickfix(typeName, resource, issue, issueResolutionAcceptor);\n\t\t\tnewLocalXtendAnnotationQuickfix(typeName, resource, issue, issueResolutionAcceptor);\n\t\t}\n\t}","id":13938,"modified_method":"@Override\n\tpublic void addQuickfixes(Issue issue, IssueResolutionAcceptor issueResolutionAcceptor,\n\t\t\tIXtextDocument xtextDocument, XtextResource resource, \n\t\t\tEObject referenceOwner, EReference unresolvedReference)\n\t\t\tthrows Exception {\n\t\tString typeString = (issue.getData() != null && issue.getData().length > 0) \n\t\t\t\t? issue.getData()[0] \n\t\t\t\t: xtextDocument.get(issue.getOffset(), issue.getLength());\n\t\tPair<String, String> packageAndType = typeNameGuesser.guessPackageAndTypeName(referenceOwner, typeString);\n\t\tString typeName = packageAndType.getSecond();\n\t\tif(isEmpty(typeName)) \n\t\t\treturn;\n\t\tString explicitPackage = packageAndType.getFirst();\n\t\tboolean isLocal = isEmpty(explicitPackage) || explicitPackage.equals(getPackage(resource));\n\t\tif(isLocal) \n\t\t\texplicitPackage = \"\";\n\t\tif(isEmpty(packageAndType.getSecond()))\n\t\t\treturn;\n\t\tif (unresolvedReference == XbasePackage.Literals.XCONSTRUCTOR_CALL__CONSTRUCTOR) {\n\t\t\tif(((XConstructorCall)referenceOwner).getConstructor().eIsProxy()) {\n\t\t\t\tif(isTypeMissing(referenceOwner, typeName, explicitPackage)) {\n\t\t\t\t\tnewJavaClassQuickfix(typeName, explicitPackage, resource, issue, issueResolutionAcceptor);\n\t\t\t\t\tnewXtendClassQuickfix(typeName, explicitPackage, resource, issue, issueResolutionAcceptor);\n\t\t\t\t\tif(isLocal)\n\t\t\t\t\t\tnewLocalXtendClassQuickfix(typeName, resource, issue, issueResolutionAcceptor);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if(unresolvedReference == XbasePackage.Literals.XTYPE_LITERAL__TYPE\n\t\t\t\t|| unresolvedReference == TypesPackage.Literals.JVM_PARAMETERIZED_TYPE_REFERENCE__TYPE) {\n\t\t\tEStructuralFeature eContainingFeature = referenceOwner.eContainingFeature();\n\t\t\tif(eContainingFeature == XtendPackage.Literals.XTEND_CLASS__EXTENDS) {\n\t\t\t\tnewJavaClassQuickfix(typeName, explicitPackage, resource, issue, issueResolutionAcceptor);\n\t\t\t\tnewXtendClassQuickfix(typeName, explicitPackage, resource, issue, issueResolutionAcceptor);\n\t\t\t\tif(isLocal)\n\t\t\t\t\tnewLocalXtendClassQuickfix(typeName, resource, issue, issueResolutionAcceptor);\n\t\t\t} else if(eContainingFeature == XtendPackage.Literals.XTEND_CLASS__IMPLEMENTS\n\t\t\t\t\t|| eContainingFeature == XtendPackage.Literals.XTEND_INTERFACE__EXTENDS) {\n\t\t\t\tnewJavaInterfaceQuickfix(typeName, explicitPackage, resource, issue, issueResolutionAcceptor);\n\t\t\t\tnewXtendInterfaceQuickfix(typeName, explicitPackage, resource, issue, issueResolutionAcceptor);\n\t\t\t\tif(isLocal)\n\t\t\t\t\tnewLocalXtendInterfaceQuickfix(typeName, resource, issue, issueResolutionAcceptor);\n\t\t\t} else {\n\t\t\t\tnewJavaClassQuickfix(typeName, explicitPackage, resource, issue, issueResolutionAcceptor);\n\t\t\t\tnewJavaInterfaceQuickfix(typeName, explicitPackage, resource, issue, issueResolutionAcceptor);\n\t\t\t\tnewXtendClassQuickfix(typeName, explicitPackage, resource, issue, issueResolutionAcceptor);\n\t\t\t\tnewXtendInterfaceQuickfix(typeName, explicitPackage, resource, issue, issueResolutionAcceptor);\n\t\t\t\tif(isLocal) {\n\t\t\t\t\tnewLocalXtendClassQuickfix(typeName, resource, issue, issueResolutionAcceptor);\t\t\t\t\n\t\t\t\t\tnewLocalXtendInterfaceQuickfix(typeName, resource, issue, issueResolutionAcceptor);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if(unresolvedReference == XAnnotationsPackage.Literals.XANNOTATION__ANNOTATION_TYPE) {\n\t\t\tnewJavaAnnotationQuickfix(typeName, explicitPackage, resource, issue, issueResolutionAcceptor);\n\t\t\tnewXtendAnnotationQuickfix(typeName, explicitPackage, resource, issue, issueResolutionAcceptor);\n\t\t\tif(isLocal) \n\t\t\t\tnewLocalXtendAnnotationQuickfix(typeName, resource, issue, issueResolutionAcceptor);\n\t\t}\n\t}","commit_id":"8fd2e7ebe99c4e564b20a5010076fe4287d7244c","url":"https://github.com/eclipse/xtext"},{"original_method":"protected void newXtendInterfaceQuickfix(final String typeName, final XtextResource resource, Issue issue,\n\t\t\tIssueResolutionAcceptor issueResolutionAcceptor) {\n\t\tissueResolutionAcceptor.accept(issue, \"Create Xtend interface '\" + typeName + \"'\",\n\t\t\t\t\"Opens the new Xtend interface wizard to create the type '\" + typeName + \"'\", \"xtend_file.png\",\n\t\t\t\tnew IModification() {\n\t\t\t\t\tpublic void apply(@Nullable IModificationContext context) throws Exception {\n\t\t\t\t\t\trunAsyncInDisplayThread(new Runnable() {\n\t\t\t\t\t\t\tpublic void run() {\n\t\t\t\t\t\t\t\tNewElementWizard newXtendInterfaceWizard = newXtendInterfaceWizardProvider.get();\n\t\t\t\t\t\t\t\tWizardDialog dialog = createWizardDialog(newXtendInterfaceWizard);\n\t\t\t\t\t\t\t\tNewXtendInterfaceWizardPage page = (NewXtendInterfaceWizardPage) newXtendInterfaceWizard.getStartingPage();\n\t\t\t\t\t\t\t\tconfigureWizardPage(page, resource.getURI(), typeName);\n\t\t\t\t\t\t\t\tdialog.open();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t}","id":13939,"modified_method":"protected void newXtendInterfaceQuickfix(final String typeName, final String explicitPackage, final XtextResource resource, Issue issue,\n\t\t\tIssueResolutionAcceptor issueResolutionAcceptor) {\n\t\tString packageDescription = getPackageDescription(explicitPackage);\n\t\tissueResolutionAcceptor.accept(issue, \"Create Xtend interface '\" + typeName + \"'\" + packageDescription,\n\t\t\t\t\"Opens the new Xtend interface wizard to create the type '\" + typeName + \"'\" + packageDescription, \"xtend_file.png\",\n\t\t\t\tnew IModification() {\n\t\t\t\t\tpublic void apply(@Nullable IModificationContext context) throws Exception {\n\t\t\t\t\t\trunAsyncInDisplayThread(new Runnable() {\n\t\t\t\t\t\t\tpublic void run() {\n\t\t\t\t\t\t\t\tNewElementWizard newXtendInterfaceWizard = newXtendInterfaceWizardProvider.get();\n\t\t\t\t\t\t\t\tWizardDialog dialog = createWizardDialog(newXtendInterfaceWizard);\n\t\t\t\t\t\t\t\tNewXtendInterfaceWizardPage page = (NewXtendInterfaceWizardPage) newXtendInterfaceWizard.getStartingPage();\n\t\t\t\t\t\t\t\tconfigureWizardPage(page, resource.getURI(), typeName, explicitPackage);\n\t\t\t\t\t\t\t\tdialog.open();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t}","commit_id":"8fd2e7ebe99c4e564b20a5010076fe4287d7244c","url":"https://github.com/eclipse/xtext"},{"original_method":"protected void newXtendClassQuickfix(final String typeName, final XtextResource resource, Issue issue,\n\t\t\tIssueResolutionAcceptor issueResolutionAcceptor) {\n\t\tissueResolutionAcceptor.accept(issue, \"Create Xtend class '\" + typeName + \"'\",\n\t\t\t\t\"Opens the new Xtend class wizard to create the type '\" + typeName + \"'\", \"xtend_file.png\",\n\t\t\t\tnew IModification() {\n\t\t\t\t\tpublic void apply(@Nullable IModificationContext context) throws Exception {\n\t\t\t\t\t\trunAsyncInDisplayThread(new Runnable() {\n\t\t\t\t\t\t\tpublic void run() {\n\t\t\t\t\t\t\t\tNewElementWizard newXtendClassWizard = newXtendClassWizardProvider.get();\n\t\t\t\t\t\t\t\tWizardDialog dialog = createWizardDialog(newXtendClassWizard);\n\t\t\t\t\t\t\t\tNewXtendClassWizardPage page = (NewXtendClassWizardPage) newXtendClassWizard.getStartingPage();\n\t\t\t\t\t\t\t\tconfigureWizardPage(page, resource.getURI(), typeName);\n\t\t\t\t\t\t\t\tdialog.open();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t}","id":13940,"modified_method":"protected void newXtendClassQuickfix(final String typeName, final String explicitPackage, final XtextResource resource, Issue issue,\n\t\t\tIssueResolutionAcceptor issueResolutionAcceptor) {\n\t\tString packageDescription = getPackageDescription(explicitPackage);\n\t\tissueResolutionAcceptor.accept(issue, \"Create Xtend class '\" + typeName + \"'\" + packageDescription,\n\t\t\t\t\"Opens the new Xtend class wizard to create the type '\" + typeName + \"'\" + packageDescription, \"xtend_file.png\",\n\t\t\t\tnew IModification() {\n\t\t\t\t\tpublic void apply(@Nullable IModificationContext context) throws Exception {\n\t\t\t\t\t\trunAsyncInDisplayThread(new Runnable() {\n\t\t\t\t\t\t\tpublic void run() {\n\t\t\t\t\t\t\t\tNewElementWizard newXtendClassWizard = newXtendClassWizardProvider.get();\n\t\t\t\t\t\t\t\tWizardDialog dialog = createWizardDialog(newXtendClassWizard);\n\t\t\t\t\t\t\t\tNewXtendClassWizardPage page = (NewXtendClassWizardPage) newXtendClassWizard.getStartingPage();\n\t\t\t\t\t\t\t\tconfigureWizardPage(page, resource.getURI(), typeName, explicitPackage);\n\t\t\t\t\t\t\t\tdialog.open();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t}","commit_id":"8fd2e7ebe99c4e564b20a5010076fe4287d7244c","url":"https://github.com/eclipse/xtext"},{"original_method":"protected void newXtendAnnotationQuickfix(final String typeName, final XtextResource resource, Issue issue,\n\t\t\tIssueResolutionAcceptor issueResolutionAcceptor) {\n\t\tissueResolutionAcceptor.accept(issue, \"Create Xtend annotation '\" + typeName + \"'\",\n\t\t\t\t\"Opens the new Xtend annotation wizard to create the type '\" + typeName + \"'\", \"xtend_file.png\",\n\t\t\t\tnew IModification() {\n\t\t\t\t\tpublic void apply(@Nullable IModificationContext context) throws Exception {\n\t\t\t\t\t\trunAsyncInDisplayThread(new Runnable() {\n\t\t\t\t\t\t\tpublic void run() {\n\t\t\t\t\t\t\t\tNewElementWizard newXtendAnnotationWizard = newXtendAnnotationWizardProvider.get();\n\t\t\t\t\t\t\t\tWizardDialog dialog = createWizardDialog(newXtendAnnotationWizard);\n\t\t\t\t\t\t\t\tNewXtendAnnotationWizardPage page = (NewXtendAnnotationWizardPage) newXtendAnnotationWizard.getStartingPage();\n\t\t\t\t\t\t\t\tconfigureWizardPage(page, resource.getURI(), typeName);\n\t\t\t\t\t\t\t\tdialog.open();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t}","id":13941,"modified_method":"protected void newXtendAnnotationQuickfix(final String typeName, final String explicitPackage, final XtextResource resource, Issue issue,\n\t\t\tIssueResolutionAcceptor issueResolutionAcceptor) {\n\t\tString packageDescription = getPackageDescription(explicitPackage);\n\t\tissueResolutionAcceptor.accept(issue, \"Create Xtend annotation '\" + typeName + \"'\" + packageDescription,\n\t\t\t\t\"Opens the new Xtend annotation wizard to create the type '\" + typeName + \"'\" + packageDescription, \"xtend_file.png\",\n\t\t\t\tnew IModification() {\n\t\t\t\t\tpublic void apply(@Nullable IModificationContext context) throws Exception {\n\t\t\t\t\t\trunAsyncInDisplayThread(new Runnable() {\n\t\t\t\t\t\t\tpublic void run() {\n\t\t\t\t\t\t\t\tNewElementWizard newXtendAnnotationWizard = newXtendAnnotationWizardProvider.get();\n\t\t\t\t\t\t\t\tWizardDialog dialog = createWizardDialog(newXtendAnnotationWizard);\n\t\t\t\t\t\t\t\tNewXtendAnnotationWizardPage page = (NewXtendAnnotationWizardPage) newXtendAnnotationWizard.getStartingPage();\n\t\t\t\t\t\t\t\tconfigureWizardPage(page, resource.getURI(), typeName, explicitPackage);\n\t\t\t\t\t\t\t\tdialog.open();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t}","commit_id":"8fd2e7ebe99c4e564b20a5010076fe4287d7244c","url":"https://github.com/eclipse/xtext"},{"original_method":"protected void createImportProposals(final JvmDeclaredType contextType, final Issue issue, String typeSimpleName, IJavaSearchScope searchScope,\n\t\t\tfinal IssueResolutionAcceptor acceptor) throws JavaModelException {\n\t\tif(contextType != null) {\n\t\t\tfinal String wantedTypeName = typeSimpleName.contains(\"::\") \n\t\t\t\t? typeSimpleName.substring(0, typeSimpleName.indexOf(\"::\")) \n\t\t\t\t: typeSimpleName;\n\t\t\tBasicSearchEngine searchEngine = new BasicSearchEngine();\n\t\t\tsearchEngine.searchAllTypeNames(null, SearchPattern.R_EXACT_MATCH, wantedTypeName.toCharArray(),\n\t\t\t\t\tSearchPattern.R_EXACT_MATCH, IJavaSearchConstants.TYPE, searchScope, new IRestrictedAccessTypeRequestor() {\n\t\t\t\t\t\t\n\t\t\t\t\t\tpublic void acceptType(int modifiers, char[] packageName, char[] simpleTypeName, char[][] enclosingTypeNames,\n\t\t\t\t\t\t\t\tString path, AccessRestriction access) {\n\t\t\t\t\t\t\tfinal String qualifiedTypeName = getQualifiedTypeName(packageName, enclosingTypeNames,\n\t\t\t\t\t\t\t\t\tsimpleTypeName);\n\t\t\t\t\t\t\tif(access == null || (access.getProblemId() != IProblem.ForbiddenReference && !access.ignoreIfBetter())){\n\t\t\t\t\t\t\t\tJvmType importType = typeRefs.findDeclaredType(qualifiedTypeName, contextType);\n\t\t\t\t\t\t\t\tif(importType instanceof JvmDeclaredType\n\t\t\t\t\t\t\t\t\t\t&& visibilityService.isVisible((JvmDeclaredType)importType, contextType)) {\n\t\t\t\t\t\t\t\t\tStringBuilder label = new StringBuilder(\"Import '\");\n\t\t\t\t\t\t\t\t\tlabel.append(simpleTypeName);\n\t\t\t\t\t\t\t\t\tlabel.append(\"' (\");\n\t\t\t\t\t\t\t\t\tlabel.append(packageName);\n\t\t\t\t\t\t\t\t\tif(enclosingTypeNames != null && enclosingTypeNames.length > 0) {\n\t\t\t\t\t\t\t\t\t\tfor(char[] enclosingTypeName: enclosingTypeNames) {\n\t\t\t\t\t\t\t\t\t\t\tlabel.append(\".\");\n\t\t\t\t\t\t\t\t\t\t\tlabel.append(enclosingTypeName);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tlabel.append(\")\");\n\t\t\t\t\t\t\t\t\tacceptor.accept(issue, label.toString(), label.toString(), \"impc_obj.gif\", new ISemanticModification() {\n\t\t\t\t\t\t\t\t\t\tpublic void apply(EObject element, IModificationContext context) throws Exception {\n\t\t\t\t\t\t\t\t\t\t\tReplacingAppendable appendable = appendableFactory.create(context.getXtextDocument(),\n\t\t\t\t\t\t\t\t\t\t\t\t\t(XtextResource) element.eResource(), 0, 0);\n\t\t\t\t\t\t\t\t\t\t\tappendable.append(typeRefs.findDeclaredType(qualifiedTypeName, element));\n\t\t\t\t\t\t\t\t\t\t\tappendable.insertNewImports();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}, jdtTypeRelevance.getRelevance(qualifiedTypeName, wantedTypeName) + 100);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}, IJavaSearchConstants.WAIT_UNTIL_READY_TO_SEARCH, new NullProgressMonitor());\n\t\t}\n\t}","id":13942,"modified_method":"protected void createImportProposals(final JvmDeclaredType contextType, final Issue issue, String typeName, IJavaSearchScope searchScope,\n\t\t\tfinal IssueResolutionAcceptor acceptor) throws JavaModelException {\n\t\tif(contextType != null) {\n\t\t\tfinal IVisibilityHelper visibilityHelper = getVisibilityHelper(contextType);\n\t\t\tfinal Pair<String, String> packageAndType = typeNameGuesser.guessPackageAndTypeName(contextType, typeName);\n\t\t\tfinal String wantedPackageName = packageAndType.getFirst();\n\t\t\tBasicSearchEngine searchEngine = new BasicSearchEngine();\n\t\t\tfinal char[] wantedPackageChars = (isEmpty(wantedPackageName)) ? null : wantedPackageName.toCharArray();\n\t\t\tfinal String wantedTypeName = packageAndType.getSecond();\n\t\t\tsearchEngine.searchAllTypeNames(wantedPackageChars, SearchPattern.R_EXACT_MATCH, wantedTypeName.toCharArray(),\n\t\t\t\t\tSearchPattern.R_EXACT_MATCH, IJavaSearchConstants.TYPE, searchScope, new IRestrictedAccessTypeRequestor() {\n\t\t\t\t\t\t\n\t\t\t\t\t\tpublic void acceptType(int modifiers, char[] packageName, char[] simpleTypeName, char[][] enclosingTypeNames,\n\t\t\t\t\t\t\t\tString path, AccessRestriction access) {\n\t\t\t\t\t\t\tfinal String qualifiedTypeName = getQualifiedTypeName(packageName, enclosingTypeNames,\n\t\t\t\t\t\t\t\t\tsimpleTypeName);\n\t\t\t\t\t\t\tif(access == null || (access.getProblemId() != IProblem.ForbiddenReference && !access.ignoreIfBetter())){\n\t\t\t\t\t\t\t\tJvmType importType = services.getTypeReferences().findDeclaredType(qualifiedTypeName, contextType);\n\t\t\t\t\t\t\t\tif(importType instanceof JvmDeclaredType\n\t\t\t\t\t\t\t\t\t\t&& visibilityHelper.isVisible((JvmDeclaredType)importType)) {\n\t\t\t\t\t\t\t\t\tStringBuilder label = new StringBuilder(\"Import '\");\n\t\t\t\t\t\t\t\t\tlabel.append(simpleTypeName);\n\t\t\t\t\t\t\t\t\tlabel.append(\"' (\");\n\t\t\t\t\t\t\t\t\tlabel.append(packageName);\n\t\t\t\t\t\t\t\t\tif(enclosingTypeNames != null && enclosingTypeNames.length > 0) {\n\t\t\t\t\t\t\t\t\t\tfor(char[] enclosingTypeName: enclosingTypeNames) {\n\t\t\t\t\t\t\t\t\t\t\tlabel.append(\".\");\n\t\t\t\t\t\t\t\t\t\t\tlabel.append(enclosingTypeName);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tlabel.append(\")\");\n\t\t\t\t\t\t\t\t\tacceptor.accept(issue, label.toString(), label.toString(), \"impc_obj.gif\", new ISemanticModification() {\n\t\t\t\t\t\t\t\t\t\tpublic void apply(EObject element, IModificationContext context) throws Exception {\n\t\t\t\t\t\t\t\t\t\t\tReplacingAppendable appendable = appendableFactory.create(context.getXtextDocument(),\n\t\t\t\t\t\t\t\t\t\t\t\t\t(XtextResource) element.eResource(), 0, 0);\n\t\t\t\t\t\t\t\t\t\t\tappendable.append(services.getTypeReferences().findDeclaredType(qualifiedTypeName, element));\n\t\t\t\t\t\t\t\t\t\t\tappendable.insertNewImports();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}, jdtTypeRelevance.getRelevance(qualifiedTypeName, wantedTypeName) + 100);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}, IJavaSearchConstants.WAIT_UNTIL_READY_TO_SEARCH, new NullProgressMonitor());\n\t\t}\n\t}","commit_id":"8fd2e7ebe99c4e564b20a5010076fe4287d7244c","url":"https://github.com/eclipse/xtext"},{"original_method":"protected boolean isUseJavaSearch(EReference unresolvedReference, Issue issue) {\n\t\tif (TypesPackage.Literals.JVM_TYPE.isSuperTypeOf(unresolvedReference.getEReferenceType()))\n\t\t\treturn true;\n\t\tif (TypesPackage.Literals.JVM_CONSTRUCTOR.isSuperTypeOf(unresolvedReference.getEReferenceType()))\n\t\t\treturn true;\n\t\treturn false;\n\t}","id":13943,"modified_method":"protected boolean isUseJavaSearch(EReference unresolvedReference, Issue issue) {\n\t\tif (isConstructorReference(unresolvedReference))\n\t\t\treturn true;\n\t\tif (isTypeReference(unresolvedReference))\n\t\t\treturn true;\n\t\treturn false;\n\t}","commit_id":"8fd2e7ebe99c4e564b20a5010076fe4287d7244c","url":"https://github.com/eclipse/xtext"},{"original_method":"@NonNullByDefault\n\tpublic void addQuickfixes(Issue issue, IssueResolutionAcceptor issueResolutionAcceptor,\n\t\t\tIXtextDocument xtextDocument, XtextResource resource, \n\t\t\tEObject referenceOwner, EReference unresolvedReference)\n\t\t\tthrows Exception {\n\t\tString issueString = xtextDocument.get(issue.getOffset(), issue.getLength());\n\t\tIScope scope = scopeProvider.getScope(referenceOwner, unresolvedReference);\n\t\tboolean useJavaSearch = isUseJavaSearch(unresolvedReference, issue);\n\t\tif (useJavaSearch) {\n\t\t\tJvmDeclaredType jvmType = importsConfiguration.getContextJvmDeclaredType(referenceOwner);\n\t\t\tIJavaSearchScope javaSearchScope = getJavaSearchScope(referenceOwner);\n\t\t\tcreateImportProposals(jvmType, issue, issueString, javaSearchScope, issueResolutionAcceptor);\n\t\t\tscope = getImportedTypesScope(referenceOwner, issueString, scope, javaSearchScope);\n\t\t}\n\t\tList<IEObjectDescription> discardedDescriptions = Lists.newArrayList();\n\t\tSet<String> proposedSolutions = Sets.newHashSet();\n\t\tint addedDescriptions = 0;\n\t\tint checkedDescriptions = 0;\n\t\tfor (IEObjectDescription referableElement : scope.getAllElements()) {\n\t\t\tString solution = qualifiedNameConverter.toString(referableElement.getName());\n\t\t\tif(!equal(issueString, solution) && proposedSolutions.add(solution)) {\n\t\t\t\tif (useJavaSearch || similarityMatcher.isSimilar(issueString, solution)) {\n\t\t\t\t\taddedDescriptions++;\n\t\t\t\t\tcreateResolution(issue, issueResolutionAcceptor, issueString, referableElement);\n\t\t\t\t\tproposedSolutions.add(solution);\n\t\t\t\t} else {\n\t\t\t\t\tdiscardedDescriptions.add(referableElement);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcheckedDescriptions++;\n\t\t\tif (checkedDescriptions > 100)\n\t\t\t\tbreak;\n\t\t}\n\t\tif (discardedDescriptions.size() + addedDescriptions <= 5) {\n\t\t\tfor (IEObjectDescription referableElement : discardedDescriptions) {\n\t\t\t\tcreateResolution(issue, issueResolutionAcceptor, issueString, referableElement);\n\t\t\t}\n\t\t}\n\t}","id":13944,"modified_method":"@NonNullByDefault\n\tpublic void addQuickfixes(Issue issue, IssueResolutionAcceptor issueResolutionAcceptor,\n\t\t\tIXtextDocument xtextDocument, XtextResource resource, \n\t\t\tEObject referenceOwner, EReference unresolvedReference)\n\t\t\tthrows Exception {\n\t\tString issueString = xtextDocument.get(issue.getOffset(), issue.getLength());\n\t\tIScope scope = scopeProvider.getScope(referenceOwner, unresolvedReference);\n\t\tboolean useJavaSearch = isUseJavaSearch(unresolvedReference, issue);\n\t\tif (useJavaSearch) {\n\t\t\tJvmDeclaredType jvmType = importsConfiguration.getContextJvmDeclaredType(referenceOwner);\n\t\t\tIJavaSearchScope javaSearchScope = getJavaSearchScope(referenceOwner);\n\t\t\tboolean proposeImports = true;\n\t\t\tif(isConstructorReference(unresolvedReference))\n\t\t\t\tproposeImports = !createConstructorProposals(jvmType, issue, issueString, javaSearchScope, issueResolutionAcceptor);\n\t\t\tif(proposeImports)\n\t\t\t\tcreateImportProposals(jvmType, issue, issueString, javaSearchScope, issueResolutionAcceptor);\n\t\t\tscope = getImportedTypesScope(referenceOwner, issueString, scope, javaSearchScope);\n\t\t}\n\t\tList<IEObjectDescription> discardedDescriptions = Lists.newArrayList();\n\t\tSet<String> proposedSolutions = Sets.newHashSet();\n\t\tint addedDescriptions = 0;\n\t\tint checkedDescriptions = 0;\n\t\tfor (IEObjectDescription referableElement : scope.getAllElements()) {\n\t\t\tString solution = qualifiedNameConverter.toString(referableElement.getName());\n\t\t\tif(!equal(issueString, solution) && proposedSolutions.add(solution)) {\n\t\t\t\tif (useJavaSearch || similarityMatcher.isSimilar(issueString, solution)) {\n\t\t\t\t\taddedDescriptions++;\n\t\t\t\t\tcreateResolution(issue, issueResolutionAcceptor, issueString, referableElement);\n\t\t\t\t\tproposedSolutions.add(solution);\n\t\t\t\t} else {\n\t\t\t\t\tdiscardedDescriptions.add(referableElement);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcheckedDescriptions++;\n\t\t\tif (checkedDescriptions > 100)\n\t\t\t\tbreak;\n\t\t}\n\t\tif (discardedDescriptions.size() + addedDescriptions <= 5) {\n\t\t\tfor (IEObjectDescription referableElement : discardedDescriptions) {\n\t\t\t\tcreateResolution(issue, issueResolutionAcceptor, issueString, referableElement);\n\t\t\t}\n\t\t}\n\t}","commit_id":"8fd2e7ebe99c4e564b20a5010076fe4287d7244c","url":"https://github.com/eclipse/xtext"},{"original_method":"@Test\n  public void missingStaticMethodOtherClass() {\n    StringConcatenation _builder = new StringConcatenation();\n    _builder.append(\"class Foo {\");\n    _builder.newLine();\n    _builder.append(\"}\");\n    _builder.newLine();\n    _builder.newLine();\n    _builder.append(\"class Bar {\");\n    _builder.newLine();\n    _builder.append(\"\\t\");\n    _builder.append(\"def bar() {\");\n    _builder.newLine();\n    _builder.append(\"\\t\\t\");\n    _builder.append(\"Foo::foo|()\");\n    _builder.newLine();\n    _builder.append(\"\\t\");\n    _builder.append(\"}\");\n    _builder.newLine();\n    _builder.append(\"}\");\n    _builder.newLine();\n    QuickfixTestBuilder _create = this.builder.create(\"Foo.xtend\", _builder);\n    QuickfixTestBuilder _assertIssueCodes = _create.assertIssueCodes(IssueCodes.FEATURECALL_LINKING_DIAGNOSTIC);\n    QuickfixTestBuilder _assertResolutionLabels = _assertIssueCodes.assertResolutionLabels(\"Create static method \\'foo()\\' in \\'Foo\\'\");\n    StringConcatenation _builder_1 = new StringConcatenation();\n    _builder_1.append(\"class Foo {\");\n    _builder_1.newLine();\n    _builder_1.append(\"\\t\");\n    _builder_1.newLine();\n    _builder_1.append(\"\\t\");\n    _builder_1.append(\"def static foo() {\");\n    _builder_1.newLine();\n    _builder_1.append(\"\\t\\t\");\n    _builder_1.append(QuickfixTest.defaultBody, \"\\t\\t\");\n    _builder_1.newLineIfNotEmpty();\n    _builder_1.append(\"\\t\");\n    _builder_1.append(\"}\");\n    _builder_1.newLine();\n    _builder_1.append(\"\\t\");\n    _builder_1.newLine();\n    _builder_1.append(\"}\");\n    _builder_1.newLine();\n    _builder_1.newLine();\n    _builder_1.append(\"class Bar {\");\n    _builder_1.newLine();\n    _builder_1.append(\"\\t\");\n    _builder_1.append(\"def bar() {\");\n    _builder_1.newLine();\n    _builder_1.append(\"\\t\\t\");\n    _builder_1.append(\"Foo::foo()\");\n    _builder_1.newLine();\n    _builder_1.append(\"\\t\");\n    _builder_1.append(\"}\");\n    _builder_1.newLine();\n    _builder_1.append(\"}\");\n    _builder_1.newLine();\n    _assertResolutionLabels.assertModelAfterQuickfix(_builder_1);\n  }","id":13945,"modified_method":"@Test\n  public void missingStaticMethodOtherClass() {\n    StringConcatenation _builder = new StringConcatenation();\n    _builder.append(\"class Foo {\");\n    _builder.newLine();\n    _builder.append(\"}\");\n    _builder.newLine();\n    _builder.newLine();\n    _builder.append(\"class Bar {\");\n    _builder.newLine();\n    _builder.append(\"\\t\");\n    _builder.append(\"def bar() {\");\n    _builder.newLine();\n    _builder.append(\"\\t\\t\");\n    _builder.append(\"Foo.foo|()\");\n    _builder.newLine();\n    _builder.append(\"\\t\");\n    _builder.append(\"}\");\n    _builder.newLine();\n    _builder.append(\"}\");\n    _builder.newLine();\n    QuickfixTestBuilder _create = this.builder.create(\"Foo.xtend\", _builder);\n    QuickfixTestBuilder _assertIssueCodes = _create.assertIssueCodes(IssueCodes.FEATURECALL_LINKING_DIAGNOSTIC);\n    QuickfixTestBuilder _assertResolutionLabels = _assertIssueCodes.assertResolutionLabels(\"Create static method \\'foo()\\' in \\'Foo\\'\");\n    StringConcatenation _builder_1 = new StringConcatenation();\n    _builder_1.append(\"class Foo {\");\n    _builder_1.newLine();\n    _builder_1.append(\"\\t\");\n    _builder_1.newLine();\n    _builder_1.append(\"\\t\");\n    _builder_1.append(\"def static foo() {\");\n    _builder_1.newLine();\n    _builder_1.append(\"\\t\\t\");\n    _builder_1.append(QuickfixTest.defaultBody, \"\\t\\t\");\n    _builder_1.newLineIfNotEmpty();\n    _builder_1.append(\"\\t\");\n    _builder_1.append(\"}\");\n    _builder_1.newLine();\n    _builder_1.append(\"\\t\");\n    _builder_1.newLine();\n    _builder_1.append(\"}\");\n    _builder_1.newLine();\n    _builder_1.newLine();\n    _builder_1.append(\"class Bar {\");\n    _builder_1.newLine();\n    _builder_1.append(\"\\t\");\n    _builder_1.append(\"def bar() {\");\n    _builder_1.newLine();\n    _builder_1.append(\"\\t\\t\");\n    _builder_1.append(\"Foo.foo()\");\n    _builder_1.newLine();\n    _builder_1.append(\"\\t\");\n    _builder_1.append(\"}\");\n    _builder_1.newLine();\n    _builder_1.append(\"}\");\n    _builder_1.newLine();\n    _assertResolutionLabels.assertModelAfterQuickfix(_builder_1);\n  }","commit_id":"8fd2e7ebe99c4e564b20a5010076fe4287d7244c","url":"https://github.com/eclipse/xtext"},{"original_method":"@Test\n  public void missingTypeStaticAccess() {\n    StringConcatenation _builder = new StringConcatenation();\n    _builder.append(\"class Foo {\");\n    _builder.newLine();\n    _builder.append(\"\\t\");\n    _builder.append(\"def foo() {\");\n    _builder.newLine();\n    _builder.append(\"\\t\\t\");\n    _builder.append(\"Collections|::sort\");\n    _builder.newLine();\n    _builder.append(\"\\t\");\n    _builder.append(\"}\");\n    _builder.newLine();\n    _builder.append(\"}\");\n    _builder.newLine();\n    QuickfixTestBuilder _create = this.builder.create(\"Foo.xtend\", _builder);\n    QuickfixTestBuilder _assertIssueCodes = _create.assertIssueCodes(Diagnostic.LINKING_DIAGNOSTIC);\n    QuickfixTestBuilder _assertResolutionLabelsSubset = _assertIssueCodes.assertResolutionLabelsSubset(\"Import \\'Collections\\' (java.util)\");\n    StringConcatenation _builder_1 = new StringConcatenation();\n    _builder_1.append(\"import java.util.Collections\");\n    _builder_1.newLine();\n    _builder_1.newLine();\n    _builder_1.append(\"class Foo {\");\n    _builder_1.newLine();\n    _builder_1.append(\"\\t\");\n    _builder_1.append(\"def foo() {\");\n    _builder_1.newLine();\n    _builder_1.append(\"\\t\\t\");\n    _builder_1.append(\"Collections::sort\");\n    _builder_1.newLine();\n    _builder_1.append(\"\\t\");\n    _builder_1.append(\"}\");\n    _builder_1.newLine();\n    _builder_1.append(\"}\");\n    _builder_1.newLine();\n    _assertResolutionLabelsSubset.assertModelAfterQuickfix(_builder_1);\n  }","id":13946,"modified_method":"@Test\n  public void missingTypeStaticAccess() {\n    StringConcatenation _builder = new StringConcatenation();\n    _builder.append(\"class Foo {\");\n    _builder.newLine();\n    _builder.append(\"\\t\");\n    _builder.append(\"def foo() {\");\n    _builder.newLine();\n    _builder.append(\"\\t\\t\");\n    _builder.append(\"Collections|.sort\");\n    _builder.newLine();\n    _builder.append(\"\\t\");\n    _builder.append(\"}\");\n    _builder.newLine();\n    _builder.append(\"}\");\n    _builder.newLine();\n    QuickfixTestBuilder _create = this.builder.create(\"Foo.xtend\", _builder);\n    QuickfixTestBuilder _assertIssueCodes = _create.assertIssueCodes(Diagnostic.LINKING_DIAGNOSTIC);\n    QuickfixTestBuilder _assertResolutionLabelsSubset = _assertIssueCodes.assertResolutionLabelsSubset(\"Import \\'Collections\\' (java.util)\");\n    StringConcatenation _builder_1 = new StringConcatenation();\n    _builder_1.append(\"import java.util.Collections\");\n    _builder_1.newLine();\n    _builder_1.newLine();\n    _builder_1.append(\"class Foo {\");\n    _builder_1.newLine();\n    _builder_1.append(\"\\t\");\n    _builder_1.append(\"def foo() {\");\n    _builder_1.newLine();\n    _builder_1.append(\"\\t\\t\");\n    _builder_1.append(\"Collections.sort\");\n    _builder_1.newLine();\n    _builder_1.append(\"\\t\");\n    _builder_1.append(\"}\");\n    _builder_1.newLine();\n    _builder_1.append(\"}\");\n    _builder_1.newLine();\n    _assertResolutionLabelsSubset.assertModelAfterQuickfix(_builder_1);\n  }","commit_id":"8fd2e7ebe99c4e564b20a5010076fe4287d7244c","url":"https://github.com/eclipse/xtext"},{"original_method":"@Test\n  public void missingStaticMemberOtherClass() {\n    StringConcatenation _builder = new StringConcatenation();\n    _builder.append(\"class Foo {}\");\n    _builder.newLine();\n    _builder.newLine();\n    _builder.append(\"class Bar {\");\n    _builder.newLine();\n    _builder.append(\"\\t\");\n    _builder.append(\"def bar() {\");\n    _builder.newLine();\n    _builder.append(\"\\t\\t\");\n    _builder.append(\"Foo::foo|\");\n    _builder.newLine();\n    _builder.append(\"\\t\");\n    _builder.append(\"}\");\n    _builder.newLine();\n    _builder.append(\"}\");\n    _builder.newLine();\n    QuickfixTestBuilder _create = this.builder.create(\"Foo.xtend\", _builder);\n    QuickfixTestBuilder _assertIssueCodes = _create.assertIssueCodes(IssueCodes.FEATURECALL_LINKING_DIAGNOSTIC);\n    QuickfixTestBuilder _assertResolutionLabels = _assertIssueCodes.assertResolutionLabels(\"Create static method \\'foo()\\' in \\'Foo\\'\", \"Create static method \\'getFoo()\\' in \\'Foo\\'\");\n    StringConcatenation _builder_1 = new StringConcatenation();\n    _builder_1.append(\"class Foo {\");\n    _builder_1.newLine();\n    _builder_1.append(\"\\t\");\n    _builder_1.newLine();\n    _builder_1.append(\"\\t\");\n    _builder_1.append(\"def static foo() {\");\n    _builder_1.newLine();\n    _builder_1.append(\"\\t\\t\");\n    _builder_1.append(QuickfixTest.defaultBody, \"\\t\\t\");\n    _builder_1.newLineIfNotEmpty();\n    _builder_1.append(\"\\t\");\n    _builder_1.append(\"}\");\n    _builder_1.newLine();\n    _builder_1.append(\"\\t\");\n    _builder_1.newLine();\n    _builder_1.append(\"\\t\");\n    _builder_1.append(\"}\");\n    _builder_1.newLine();\n    _builder_1.newLine();\n    _builder_1.append(\"class Bar {\");\n    _builder_1.newLine();\n    _builder_1.append(\"\\t\");\n    _builder_1.append(\"def bar() {\");\n    _builder_1.newLine();\n    _builder_1.append(\"\\t\\t\");\n    _builder_1.append(\"Foo::foo\");\n    _builder_1.newLine();\n    _builder_1.append(\"\\t\");\n    _builder_1.append(\"}\");\n    _builder_1.newLine();\n    _builder_1.append(\"}\");\n    _builder_1.newLine();\n    QuickfixTestBuilder _assertModelAfterQuickfix = _assertResolutionLabels.assertModelAfterQuickfix(\"Create static method \\'foo()\\' in \\'Foo\\'\", _builder_1);\n    StringConcatenation _builder_2 = new StringConcatenation();\n    _builder_2.append(\"class Foo {\");\n    _builder_2.newLine();\n    _builder_2.append(\"\\t\");\n    _builder_2.newLine();\n    _builder_2.append(\"\\t\");\n    _builder_2.append(\"def static getFoo() {\");\n    _builder_2.newLine();\n    _builder_2.append(\"\\t\\t\");\n    _builder_2.append(QuickfixTest.defaultBody, \"\\t\\t\");\n    _builder_2.newLineIfNotEmpty();\n    _builder_2.append(\"\\t\");\n    _builder_2.append(\"}\");\n    _builder_2.newLine();\n    _builder_2.append(\"\\t\");\n    _builder_2.newLine();\n    _builder_2.append(\"\\t\");\n    _builder_2.append(\"}\");\n    _builder_2.newLine();\n    _builder_2.newLine();\n    _builder_2.append(\"class Bar {\");\n    _builder_2.newLine();\n    _builder_2.append(\"\\t\");\n    _builder_2.append(\"def bar() {\");\n    _builder_2.newLine();\n    _builder_2.append(\"\\t\\t\");\n    _builder_2.append(\"Foo::foo\");\n    _builder_2.newLine();\n    _builder_2.append(\"\\t\");\n    _builder_2.append(\"}\");\n    _builder_2.newLine();\n    _builder_2.append(\"}\");\n    _builder_2.newLine();\n    _assertModelAfterQuickfix.assertModelAfterQuickfix(\"Create static method \\'getFoo()\\' in \\'Foo\\'\", _builder_2);\n  }","id":13947,"modified_method":"@Test\n  public void missingStaticMemberOtherClass() {\n    StringConcatenation _builder = new StringConcatenation();\n    _builder.append(\"class Foo {}\");\n    _builder.newLine();\n    _builder.newLine();\n    _builder.append(\"class Bar {\");\n    _builder.newLine();\n    _builder.append(\"\\t\");\n    _builder.append(\"def bar() {\");\n    _builder.newLine();\n    _builder.append(\"\\t\\t\");\n    _builder.append(\"Foo.foo|\");\n    _builder.newLine();\n    _builder.append(\"\\t\");\n    _builder.append(\"}\");\n    _builder.newLine();\n    _builder.append(\"}\");\n    _builder.newLine();\n    QuickfixTestBuilder _create = this.builder.create(\"Foo.xtend\", _builder);\n    QuickfixTestBuilder _assertIssueCodes = _create.assertIssueCodes(IssueCodes.FEATURECALL_LINKING_DIAGNOSTIC);\n    QuickfixTestBuilder _assertResolutionLabels = _assertIssueCodes.assertResolutionLabels(\"Create static method \\'foo()\\' in \\'Foo\\'\", \"Create static method \\'getFoo()\\' in \\'Foo\\'\");\n    StringConcatenation _builder_1 = new StringConcatenation();\n    _builder_1.append(\"class Foo {\");\n    _builder_1.newLine();\n    _builder_1.append(\"\\t\");\n    _builder_1.newLine();\n    _builder_1.append(\"\\t\");\n    _builder_1.append(\"def static foo() {\");\n    _builder_1.newLine();\n    _builder_1.append(\"\\t\\t\");\n    _builder_1.append(QuickfixTest.defaultBody, \"\\t\\t\");\n    _builder_1.newLineIfNotEmpty();\n    _builder_1.append(\"\\t\");\n    _builder_1.append(\"}\");\n    _builder_1.newLine();\n    _builder_1.append(\"\\t\");\n    _builder_1.newLine();\n    _builder_1.append(\"\\t\");\n    _builder_1.append(\"}\");\n    _builder_1.newLine();\n    _builder_1.newLine();\n    _builder_1.append(\"class Bar {\");\n    _builder_1.newLine();\n    _builder_1.append(\"\\t\");\n    _builder_1.append(\"def bar() {\");\n    _builder_1.newLine();\n    _builder_1.append(\"\\t\\t\");\n    _builder_1.append(\"Foo.foo\");\n    _builder_1.newLine();\n    _builder_1.append(\"\\t\");\n    _builder_1.append(\"}\");\n    _builder_1.newLine();\n    _builder_1.append(\"}\");\n    _builder_1.newLine();\n    QuickfixTestBuilder _assertModelAfterQuickfix = _assertResolutionLabels.assertModelAfterQuickfix(\"Create static method \\'foo()\\' in \\'Foo\\'\", _builder_1);\n    StringConcatenation _builder_2 = new StringConcatenation();\n    _builder_2.append(\"class Foo {\");\n    _builder_2.newLine();\n    _builder_2.append(\"\\t\");\n    _builder_2.newLine();\n    _builder_2.append(\"\\t\");\n    _builder_2.append(\"def static getFoo() {\");\n    _builder_2.newLine();\n    _builder_2.append(\"\\t\\t\");\n    _builder_2.append(QuickfixTest.defaultBody, \"\\t\\t\");\n    _builder_2.newLineIfNotEmpty();\n    _builder_2.append(\"\\t\");\n    _builder_2.append(\"}\");\n    _builder_2.newLine();\n    _builder_2.append(\"\\t\");\n    _builder_2.newLine();\n    _builder_2.append(\"\\t\");\n    _builder_2.append(\"}\");\n    _builder_2.newLine();\n    _builder_2.newLine();\n    _builder_2.append(\"class Bar {\");\n    _builder_2.newLine();\n    _builder_2.append(\"\\t\");\n    _builder_2.append(\"def bar() {\");\n    _builder_2.newLine();\n    _builder_2.append(\"\\t\\t\");\n    _builder_2.append(\"Foo.foo\");\n    _builder_2.newLine();\n    _builder_2.append(\"\\t\");\n    _builder_2.append(\"}\");\n    _builder_2.newLine();\n    _builder_2.append(\"}\");\n    _builder_2.newLine();\n    _assertModelAfterQuickfix.assertModelAfterQuickfix(\"Create static method \\'getFoo()\\' in \\'Foo\\'\", _builder_2);\n  }","commit_id":"8fd2e7ebe99c4e564b20a5010076fe4287d7244c","url":"https://github.com/eclipse/xtext"},{"original_method":"@Override\n\tpublic DiagnosticMessage getUnresolvedProxyMessage(ILinkingDiagnosticContext context) {\n\t\tif (isPropertyOfUnresolvedAnnotation(context))\n\t\t\treturn null;\n\t\tString linkText = \"\";\n\t\ttry {\n\t\t\tlinkText = context.getLinkText();\n\t\t} catch (IllegalNodeException e){\n\t\t\tlinkText = e.getNode().getText();\n\t\t}\n\t\tEObject contextObject = context.getContext();\n\t\tif (isStaticMemberCallTarget(contextObject)) {\n\t\t\tString message = String.format(\"%s cannot be resolved to a type.\", linkText);\n\t\t\treturn new DiagnosticMessage(message, Severity.ERROR, Diagnostic.LINKING_DIAGNOSTIC, TYPE_LITERAL);\n\t\t}\n\t\tif(contextObject instanceof XAbstractFeatureCall && !(contextObject instanceof XBinaryOperation || contextObject instanceof XUnaryOperation)){\n\t\t\tXAbstractFeatureCall featureCall = (XAbstractFeatureCall)contextObject;\n\t\t\tXtendTypeDeclaration xtendType = EcoreUtil2.getContainerOfType(featureCall, XtendTypeDeclaration.class);\n\t\t\tif(xtendType != null){\n\t\t\t\tString clazzName = xtendType.getName();\n\t\t\t\t@SuppressWarnings(\"deprecation\")\n\t\t\t\tList<XExpression> explicitArguments = featureCall.getExplicitArguments();\n\t\t\t\tString firstPartOfMessage = \"The method \";\n\t\t\t\tif(explicitArguments.size() == 0 || featureCall instanceof XAssignment)\n\t\t\t\t\tfirstPartOfMessage += \"or field \";\n\t\t\t\tif (featureCall instanceof XFeatureCall && typeLiteralHelper.isPotentialTypeLiteral(featureCall, null)) {\n\t\t\t\t\treturn new DiagnosticMessage(firstPartOfMessage + linkText + \" is undefined for the type \" + clazzName, Severity.ERROR, IssueCodes.FEATURECALL_LINKING_DIAGNOSTIC, linkText, TYPE_LITERAL);\t\n\t\t\t\t}\n\t\t\t\treturn new DiagnosticMessage(firstPartOfMessage + linkText + \" is undefined for the type \" + clazzName, Severity.ERROR, IssueCodes.FEATURECALL_LINKING_DIAGNOSTIC, linkText);\n\t\t\t}\n\t\t}\n\t\tEClass referenceType = context.getReference().getEReferenceType();\n\t\tString msg = String.format(\"%s cannot be resolved%s.\", linkText, getTypeName(referenceType, context.getReference()));\n\t\treturn new DiagnosticMessage(msg, Severity.ERROR, Diagnostic.LINKING_DIAGNOSTIC);\n\t}","id":13948,"modified_method":"@Override\n\tpublic DiagnosticMessage getUnresolvedProxyMessage(ILinkingDiagnosticContext context) {\n\t\tif (isPropertyOfUnresolvedAnnotation(context))\n\t\t\treturn null;\n\t\tString linkText = \"\";\n\t\ttry {\n\t\t\tlinkText = context.getLinkText();\n\t\t} catch (IllegalNodeException e){\n\t\t\tlinkText = e.getNode().getText();\n\t\t}\n\t\tEObject contextObject = context.getContext();\n\t\tif (isStaticMemberCallTarget(contextObject)) {\n\t\t\tString message = String.format(\"%s cannot be resolved to a type.\", linkText);\n\t\t\treturn new DiagnosticMessage(message, Severity.ERROR, Diagnostic.LINKING_DIAGNOSTIC, TYPE_LITERAL);\n\t\t}\n\t\tif(contextObject instanceof XAbstractFeatureCall && !(contextObject instanceof XBinaryOperation || contextObject instanceof XUnaryOperation)){\n\t\t\tXAbstractFeatureCall featureCall = (XAbstractFeatureCall)contextObject;\n\t\t\tXtendTypeDeclaration xtendType = EcoreUtil2.getContainerOfType(featureCall, XtendTypeDeclaration.class);\n\t\t\tif(xtendType != null){\n\t\t\t\tString clazzName = xtendType.getName();\n\t\t\t\t@SuppressWarnings(\"deprecation\")\n\t\t\t\tList<XExpression> explicitArguments = featureCall.getExplicitArguments();\n\t\t\t\tString firstPartOfMessage = \"The method \";\n\t\t\t\tif(explicitArguments.size() == 0 || featureCall instanceof XAssignment)\n\t\t\t\t\tfirstPartOfMessage += \"or field \";\n\t\t\t\tif (featureCall instanceof XFeatureCall && typeLiteralHelper.isPotentialTypeLiteral(featureCall, null)) {\n\t\t\t\t\treturn new DiagnosticMessage(firstPartOfMessage + linkText + \" is undefined for the type \" + clazzName, Severity.ERROR, IssueCodes.FEATURECALL_LINKING_DIAGNOSTIC, linkText, TYPE_LITERAL);\t\n\t\t\t\t}\n\t\t\t\treturn new DiagnosticMessage(firstPartOfMessage + linkText + \" is undefined for the type \" + clazzName, Severity.ERROR, IssueCodes.FEATURECALL_LINKING_DIAGNOSTIC, linkText);\n\t\t\t}\n\t\t}\n\t\tEClass referenceType = context.getReference().getEReferenceType();\n\t\tString msg = String.format(\"%s cannot be resolved%s.\", linkText, getTypeName(referenceType, context.getReference()));\n\t\treturn new DiagnosticMessage(msg, Severity.ERROR, Diagnostic.LINKING_DIAGNOSTIC, linkText);\n\t}","commit_id":"8fd2e7ebe99c4e564b20a5010076fe4287d7244c","url":"https://github.com/eclipse/xtext"},{"original_method":"public void testActivateStaging() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"main-content\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"dockbar\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"navigation\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"//div/div[3]/div/ul/li[5]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"ControlPanel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Sites\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"_134_name\", RuntimeVariables.replace(\"Staging\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.click(\"//strong/a\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Manage Pages\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//ul[1]/li[3]/span/span/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//ul[1]/li[3]/span/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Settings\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//li[7]/span/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Staging\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.select(\"_134_stagingType\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=Local Live\"));\n\n\t\t\t\tboolean blogsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_33Checkbox\");\n\n\t\t\t\tif (blogsChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_134_staged-portlet_33Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"Blogs\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean bookmarksChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_28Checkbox\");\n\n\t\t\t\tif (bookmarksChecked) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_134_staged-portlet_28Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"Bookmarks\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean calendarChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_8Checkbox\");\n\n\t\t\t\tif (calendarChecked) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_134_staged-portlet_8Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"Calendar\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean documentLibraryDisplayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_110Checkbox\");\n\n\t\t\t\tif (documentLibraryDisplayChecked) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_134_staged-portlet_110Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"DocumentLibraryDisplay\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean messageBoardsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_19Checkbox\");\n\n\t\t\t\tif (messageBoardsChecked) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_134_staged-portlet_19Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\n\t\t\tcase 6:\n\n\t\t\t\tboolean pageCommentsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_107Checkbox\");\n\n\t\t\t\tif (pageCommentsChecked) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_134_staged-portlet_107Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Comments\"));\n\n\t\t\tcase 7:\n\n\t\t\t\tboolean pageRatingsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_108Checkbox\");\n\n\t\t\t\tif (pageRatingsChecked) {\n\t\t\t\t\tlabel = 8;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_134_staged-portlet_108Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Ratings\"));\n\n\t\t\tcase 8:\n\n\t\t\t\tboolean pollsDisplayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_59Checkbox\");\n\n\t\t\t\tif (pollsDisplayChecked) {\n\t\t\t\t\tlabel = 9;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_134_staged-portlet_59Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"Polls Display\"));\n\n\t\t\tcase 9:\n\n\t\t\t\tboolean webContentDisplayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_56Checkbox\");\n\n\t\t\t\tif (webContentDisplayChecked) {\n\t\t\t\t\tlabel = 10;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_134_staged-portlet_56Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"Web Content Display\"));\n\n\t\t\tcase 10:\n\n\t\t\t\tboolean wikiChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_36Checkbox\");\n\n\t\t\t\tif (wikiChecked) {\n\t\t\t\t\tlabel = 11;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_134_staged-portlet_36Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"Wiki\"));\n\n\t\t\tcase 11:\n\n\t\t\t\tboolean wikiDisplayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_54Checkbox\");\n\n\t\t\t\tif (wikiDisplayChecked) {\n\t\t\t\t\tlabel = 12;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_134_staged-portlet_54Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"Wiki Display Checked\"));\n\n\t\t\tcase 12:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Save']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to activate local staging for Staging[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//section/div/div/div/div\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Staging (Staging)\"),\n\t\t\t\t\tselenium.getText(\"//li[4]/span\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":13949,"modified_method":"public void testActivateStaging() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Site Name\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.click(\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Edit Settings\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Edit Settings\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\t\t\"//a[@id='_165_stagingLink']\", \"Staging\"));\n\t\t\t\tselenium.clickAt(\"//a[@id='_165_stagingLink']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Staging\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//select[@id='_165_stagingType']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.select(\"//select[@id='_165_stagingType']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Local Live\"));\n\n\t\t\t\tboolean blogsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_161Checkbox\");\n\n\t\t\t\tif (blogsChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_161Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Blogs\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean bookmarksChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_28Checkbox\");\n\n\t\t\t\tif (bookmarksChecked) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_28Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Bookmarks\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean calendarChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_8Checkbox\");\n\n\t\t\t\tif (calendarChecked) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_8Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Calendar\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean documentLibraryDisplayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_20Checkbox\");\n\n\t\t\t\tif (documentLibraryDisplayChecked) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_20Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"DocumentLibraryDisplay\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean messageBoardsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_162Checkbox\");\n\n\t\t\t\tif (messageBoardsChecked) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_162Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\n\t\t\tcase 6:\n\n\t\t\t\tboolean pageCommentsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_107Checkbox\");\n\n\t\t\t\tif (pageCommentsChecked) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_107Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Comments\"));\n\n\t\t\tcase 7:\n\n\t\t\t\tboolean pageRatingsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_108Checkbox\");\n\n\t\t\t\tif (pageRatingsChecked) {\n\t\t\t\t\tlabel = 8;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_108Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Ratings\"));\n\n\t\t\tcase 8:\n\n\t\t\t\tboolean pollsDisplayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_59Checkbox\");\n\n\t\t\t\tif (pollsDisplayChecked) {\n\t\t\t\t\tlabel = 9;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_59Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Polls Display\"));\n\n\t\t\tcase 9:\n\n\t\t\t\tboolean webContentDisplayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_56Checkbox\");\n\n\t\t\t\tif (webContentDisplayChecked) {\n\t\t\t\t\tlabel = 10;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_56Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Web Content Display\"));\n\n\t\t\tcase 10:\n\n\t\t\t\tboolean wikiChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_36Checkbox\");\n\n\t\t\t\tif (wikiChecked) {\n\t\t\t\t\tlabel = 11;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_36Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Wiki\"));\n\n\t\t\tcase 11:\n\n\t\t\t\tboolean wikiDisplayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_54Checkbox\");\n\n\t\t\t\tif (wikiDisplayChecked) {\n\t\t\t\t\tlabel = 12;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_54Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Wiki Display Checked\"));\n\n\t\t\tcase 12:\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to activate local staging for Site Name[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Site Name\"),\n\t\t\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\t\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Site Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Site Name (Staging)\"),\n\t\t\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"b51c10a8e364ed8e90efb64ea094c5a8f5995fc9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testActivateStaging() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"main-content\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"dockbar\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"navigation\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"//div/div[3]/div/ul/li[5]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"ControlPanel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Sites\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"_134_name\", RuntimeVariables.replace(\"Staging\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.click(\"//strong/a\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Manage Pages\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//ul[1]/li[3]/span/span/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//ul[1]/li[3]/span/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Settings\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//li[7]/span/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Staging\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.select(\"_134_stagingType\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=Local Live\"));\n\n\t\t\t\tboolean blogsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_33Checkbox\");\n\n\t\t\t\tif (blogsChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_134_staged-portlet_33Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"Blogs\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean bookmarksChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_28Checkbox\");\n\n\t\t\t\tif (bookmarksChecked) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_134_staged-portlet_28Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"Bookmarks\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean calendarChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_8Checkbox\");\n\n\t\t\t\tif (calendarChecked) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_134_staged-portlet_8Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"Calendar\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean documentLibraryDisplayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_110Checkbox\");\n\n\t\t\t\tif (documentLibraryDisplayChecked) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_134_staged-portlet_110Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"DocumentLibraryDisplay\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean messageBoardsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_19Checkbox\");\n\n\t\t\t\tif (messageBoardsChecked) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_134_staged-portlet_19Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\n\t\t\tcase 6:\n\n\t\t\t\tboolean pageCommentsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_107Checkbox\");\n\n\t\t\t\tif (pageCommentsChecked) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_134_staged-portlet_107Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Comments\"));\n\n\t\t\tcase 7:\n\n\t\t\t\tboolean pageRatingsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_108Checkbox\");\n\n\t\t\t\tif (pageRatingsChecked) {\n\t\t\t\t\tlabel = 8;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_134_staged-portlet_108Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Ratings\"));\n\n\t\t\tcase 8:\n\n\t\t\t\tboolean pollsDisplayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_59Checkbox\");\n\n\t\t\t\tif (pollsDisplayChecked) {\n\t\t\t\t\tlabel = 9;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_134_staged-portlet_59Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"Polls Display\"));\n\n\t\t\tcase 9:\n\n\t\t\t\tboolean webContentDisplayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_56Checkbox\");\n\n\t\t\t\tif (webContentDisplayChecked) {\n\t\t\t\t\tlabel = 10;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_134_staged-portlet_56Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"Web Content Display\"));\n\n\t\t\tcase 10:\n\n\t\t\t\tboolean wikiChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_36Checkbox\");\n\n\t\t\t\tif (wikiChecked) {\n\t\t\t\t\tlabel = 11;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_134_staged-portlet_36Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"Wiki\"));\n\n\t\t\tcase 11:\n\n\t\t\t\tboolean wikiDisplayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_54Checkbox\");\n\n\t\t\t\tif (wikiDisplayChecked) {\n\t\t\t\t\tlabel = 12;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_134_staged-portlet_54Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"Wiki Display Checked\"));\n\n\t\t\tcase 12:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Save']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to activate local staging for Staging[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//section/div/div/div/div\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Staging (Staging)\"),\n\t\t\t\t\tselenium.getText(\"//li[4]/span\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":13950,"modified_method":"public void testActivateStaging() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Site Name\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.click(\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Edit Settings\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Edit Settings\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\t\t\"//a[@id='_165_stagingLink']\", \"Staging\"));\n\t\t\t\tselenium.clickAt(\"//a[@id='_165_stagingLink']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Staging\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//select[@id='_165_stagingType']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.select(\"//select[@id='_165_stagingType']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Local Live\"));\n\n\t\t\t\tboolean blogsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_161Checkbox\");\n\n\t\t\t\tif (blogsChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_161Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Blogs\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean bookmarksChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_28Checkbox\");\n\n\t\t\t\tif (bookmarksChecked) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_28Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Bookmarks\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean calendarChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_8Checkbox\");\n\n\t\t\t\tif (calendarChecked) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_8Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Calendar\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean documentLibraryDisplayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_20Checkbox\");\n\n\t\t\t\tif (documentLibraryDisplayChecked) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_20Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"DocumentLibraryDisplay\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean messageBoardsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_162Checkbox\");\n\n\t\t\t\tif (messageBoardsChecked) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_162Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\n\t\t\tcase 6:\n\n\t\t\t\tboolean pageCommentsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_107Checkbox\");\n\n\t\t\t\tif (pageCommentsChecked) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_107Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Comments\"));\n\n\t\t\tcase 7:\n\n\t\t\t\tboolean pageRatingsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_108Checkbox\");\n\n\t\t\t\tif (pageRatingsChecked) {\n\t\t\t\t\tlabel = 8;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_108Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Ratings\"));\n\n\t\t\tcase 8:\n\n\t\t\t\tboolean pollsDisplayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_59Checkbox\");\n\n\t\t\t\tif (pollsDisplayChecked) {\n\t\t\t\t\tlabel = 9;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_59Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Polls Display\"));\n\n\t\t\tcase 9:\n\n\t\t\t\tboolean webContentDisplayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_56Checkbox\");\n\n\t\t\t\tif (webContentDisplayChecked) {\n\t\t\t\t\tlabel = 10;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_56Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Web Content Display\"));\n\n\t\t\tcase 10:\n\n\t\t\t\tboolean wikiChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_36Checkbox\");\n\n\t\t\t\tif (wikiChecked) {\n\t\t\t\t\tlabel = 11;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_36Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Wiki\"));\n\n\t\t\tcase 11:\n\n\t\t\t\tboolean wikiDisplayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_54Checkbox\");\n\n\t\t\t\tif (wikiDisplayChecked) {\n\t\t\t\t\tlabel = 12;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_54Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Wiki Display Checked\"));\n\n\t\t\tcase 12:\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to activate local staging for Site Name[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Site Name\"),\n\t\t\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\t\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Site Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Site Name (Staging)\"),\n\t\t\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"b51c10a8e364ed8e90efb64ea094c5a8f5995fc9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testActivateStaging() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"main-content\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"dockbar\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"navigation\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"//div/div[3]/div/ul/li[5]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"ControlPanel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Sites\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"_134_name\", RuntimeVariables.replace(\"Staging\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.click(\"//strong/a\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Manage Pages\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//ul[1]/li[3]/span/span/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//ul[1]/li[3]/span/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Settings\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//li[7]/span/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Staging\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.select(\"_134_stagingType\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=Local Live\"));\n\n\t\t\t\tboolean blogsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_33Checkbox\");\n\n\t\t\t\tif (blogsChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_134_staged-portlet_33Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"Blogs\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean bookmarksChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_28Checkbox\");\n\n\t\t\t\tif (bookmarksChecked) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_134_staged-portlet_28Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"Bookmarks\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean calendarChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_8Checkbox\");\n\n\t\t\t\tif (calendarChecked) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_134_staged-portlet_8Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"Calendar\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean documentLibraryDisplayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_110Checkbox\");\n\n\t\t\t\tif (documentLibraryDisplayChecked) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_134_staged-portlet_110Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"DocumentLibraryDisplay\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean messageBoardsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_19Checkbox\");\n\n\t\t\t\tif (messageBoardsChecked) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_134_staged-portlet_19Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\n\t\t\tcase 6:\n\n\t\t\t\tboolean pageCommentsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_107Checkbox\");\n\n\t\t\t\tif (pageCommentsChecked) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_134_staged-portlet_107Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Comments\"));\n\n\t\t\tcase 7:\n\n\t\t\t\tboolean pageRatingsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_108Checkbox\");\n\n\t\t\t\tif (pageRatingsChecked) {\n\t\t\t\t\tlabel = 8;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_134_staged-portlet_108Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Ratings\"));\n\n\t\t\tcase 8:\n\n\t\t\t\tboolean pollsDisplayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_59Checkbox\");\n\n\t\t\t\tif (pollsDisplayChecked) {\n\t\t\t\t\tlabel = 9;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_134_staged-portlet_59Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"Polls Display\"));\n\n\t\t\tcase 9:\n\n\t\t\t\tboolean webContentDisplayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_56Checkbox\");\n\n\t\t\t\tif (webContentDisplayChecked) {\n\t\t\t\t\tlabel = 10;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_134_staged-portlet_56Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"Web Content Display\"));\n\n\t\t\tcase 10:\n\n\t\t\t\tboolean wikiChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_36Checkbox\");\n\n\t\t\t\tif (wikiChecked) {\n\t\t\t\t\tlabel = 11;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_134_staged-portlet_36Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"Wiki\"));\n\n\t\t\tcase 11:\n\n\t\t\t\tboolean wikiDisplayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_54Checkbox\");\n\n\t\t\t\tif (wikiDisplayChecked) {\n\t\t\t\t\tlabel = 12;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_134_staged-portlet_54Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"Wiki Display Checked\"));\n\n\t\t\tcase 12:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Save']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to activate local staging for Staging[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//section/div/div/div/div\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Staging (Staging)\"),\n\t\t\t\t\tselenium.getText(\"//li[4]/span\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":13951,"modified_method":"public void testActivateStaging() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Site Name\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.click(\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Edit Settings\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Edit Settings\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\t\t\"//a[@id='_165_stagingLink']\", \"Staging\"));\n\t\t\t\tselenium.clickAt(\"//a[@id='_165_stagingLink']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Staging\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//select[@id='_165_stagingType']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.select(\"//select[@id='_165_stagingType']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Local Live\"));\n\n\t\t\t\tboolean blogsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_161Checkbox\");\n\n\t\t\t\tif (blogsChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_161Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Blogs\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean bookmarksChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_28Checkbox\");\n\n\t\t\t\tif (bookmarksChecked) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_28Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Bookmarks\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean calendarChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_8Checkbox\");\n\n\t\t\t\tif (calendarChecked) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_8Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Calendar\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean documentLibraryDisplayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_20Checkbox\");\n\n\t\t\t\tif (documentLibraryDisplayChecked) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_20Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"DocumentLibraryDisplay\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean messageBoardsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_162Checkbox\");\n\n\t\t\t\tif (messageBoardsChecked) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_162Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\n\t\t\tcase 6:\n\n\t\t\t\tboolean pageCommentsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_107Checkbox\");\n\n\t\t\t\tif (pageCommentsChecked) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_107Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Comments\"));\n\n\t\t\tcase 7:\n\n\t\t\t\tboolean pageRatingsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_108Checkbox\");\n\n\t\t\t\tif (pageRatingsChecked) {\n\t\t\t\t\tlabel = 8;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_108Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Ratings\"));\n\n\t\t\tcase 8:\n\n\t\t\t\tboolean pollsDisplayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_59Checkbox\");\n\n\t\t\t\tif (pollsDisplayChecked) {\n\t\t\t\t\tlabel = 9;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_59Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Polls Display\"));\n\n\t\t\tcase 9:\n\n\t\t\t\tboolean webContentDisplayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_56Checkbox\");\n\n\t\t\t\tif (webContentDisplayChecked) {\n\t\t\t\t\tlabel = 10;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_56Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Web Content Display\"));\n\n\t\t\tcase 10:\n\n\t\t\t\tboolean wikiChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_36Checkbox\");\n\n\t\t\t\tif (wikiChecked) {\n\t\t\t\t\tlabel = 11;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_36Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Wiki\"));\n\n\t\t\tcase 11:\n\n\t\t\t\tboolean wikiDisplayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_54Checkbox\");\n\n\t\t\t\tif (wikiDisplayChecked) {\n\t\t\t\t\tlabel = 12;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_54Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Wiki Display Checked\"));\n\n\t\t\tcase 12:\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to activate local staging for Site Name[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Site Name\"),\n\t\t\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\t\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Site Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Site Name (Staging)\"),\n\t\t\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"b51c10a8e364ed8e90efb64ea094c5a8f5995fc9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testActivateStaging() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"main-content\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"dockbar\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"navigation\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"//div/div[3]/div/ul/li[5]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"ControlPanel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Sites\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"_134_name\", RuntimeVariables.replace(\"Staging\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.click(\"//strong/a\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Manage Pages\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//ul[1]/li[3]/span/span/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//ul[1]/li[3]/span/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Settings\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//li[7]/span/span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Staging\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.select(\"_134_stagingType\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=Local Live\"));\n\n\t\t\t\tboolean blogsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_33Checkbox\");\n\n\t\t\t\tif (blogsChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_134_staged-portlet_33Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"Blogs\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean bookmarksChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_28Checkbox\");\n\n\t\t\t\tif (bookmarksChecked) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_134_staged-portlet_28Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"Bookmarks\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean calendarChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_8Checkbox\");\n\n\t\t\t\tif (calendarChecked) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_134_staged-portlet_8Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"Calendar\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean documentLibraryDisplayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_110Checkbox\");\n\n\t\t\t\tif (documentLibraryDisplayChecked) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_134_staged-portlet_110Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"DocumentLibraryDisplay\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean messageBoardsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_19Checkbox\");\n\n\t\t\t\tif (messageBoardsChecked) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_134_staged-portlet_19Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\n\t\t\tcase 6:\n\n\t\t\t\tboolean pageCommentsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_107Checkbox\");\n\n\t\t\t\tif (pageCommentsChecked) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_134_staged-portlet_107Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Comments\"));\n\n\t\t\tcase 7:\n\n\t\t\t\tboolean pageRatingsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_108Checkbox\");\n\n\t\t\t\tif (pageRatingsChecked) {\n\t\t\t\t\tlabel = 8;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_134_staged-portlet_108Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Ratings\"));\n\n\t\t\tcase 8:\n\n\t\t\t\tboolean pollsDisplayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_59Checkbox\");\n\n\t\t\t\tif (pollsDisplayChecked) {\n\t\t\t\t\tlabel = 9;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_134_staged-portlet_59Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"Polls Display\"));\n\n\t\t\tcase 9:\n\n\t\t\t\tboolean webContentDisplayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_56Checkbox\");\n\n\t\t\t\tif (webContentDisplayChecked) {\n\t\t\t\t\tlabel = 10;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_134_staged-portlet_56Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"Web Content Display\"));\n\n\t\t\tcase 10:\n\n\t\t\t\tboolean wikiChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_36Checkbox\");\n\n\t\t\t\tif (wikiChecked) {\n\t\t\t\t\tlabel = 11;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_134_staged-portlet_36Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"Wiki\"));\n\n\t\t\tcase 11:\n\n\t\t\t\tboolean wikiDisplayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_134_staged-portlet_54Checkbox\");\n\n\t\t\t\tif (wikiDisplayChecked) {\n\t\t\t\t\tlabel = 12;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_134_staged-portlet_54Checkbox\",\n\t\t\t\t\tRuntimeVariables.replace(\"Wiki Display Checked\"));\n\n\t\t\tcase 12:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Save']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to activate local staging for Staging[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//section/div/div/div/div\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Staging (Staging)\"),\n\t\t\t\t\tselenium.getText(\"//li[4]/span\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":13952,"modified_method":"public void testActivateStaging() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Site Name\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\t\t\tselenium.click(\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Edit Settings\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Edit Settings\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\t\t\"//a[@id='_165_stagingLink']\", \"Staging\"));\n\t\t\t\tselenium.clickAt(\"//a[@id='_165_stagingLink']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Staging\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//select[@id='_165_stagingType']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.select(\"//select[@id='_165_stagingType']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Local Live\"));\n\n\t\t\t\tboolean blogsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_161Checkbox\");\n\n\t\t\t\tif (blogsChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_161Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Blogs\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean bookmarksChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_28Checkbox\");\n\n\t\t\t\tif (bookmarksChecked) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_28Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Bookmarks\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean calendarChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_8Checkbox\");\n\n\t\t\t\tif (calendarChecked) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_8Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Calendar\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean documentLibraryDisplayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_20Checkbox\");\n\n\t\t\t\tif (documentLibraryDisplayChecked) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_20Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"DocumentLibraryDisplay\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean messageBoardsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_162Checkbox\");\n\n\t\t\t\tif (messageBoardsChecked) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_162Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Message Boards\"));\n\n\t\t\tcase 6:\n\n\t\t\t\tboolean pageCommentsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_107Checkbox\");\n\n\t\t\t\tif (pageCommentsChecked) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_107Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Comments\"));\n\n\t\t\tcase 7:\n\n\t\t\t\tboolean pageRatingsChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_108Checkbox\");\n\n\t\t\t\tif (pageRatingsChecked) {\n\t\t\t\t\tlabel = 8;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_108Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Ratings\"));\n\n\t\t\tcase 8:\n\n\t\t\t\tboolean pollsDisplayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_59Checkbox\");\n\n\t\t\t\tif (pollsDisplayChecked) {\n\t\t\t\t\tlabel = 9;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_59Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Polls Display\"));\n\n\t\t\tcase 9:\n\n\t\t\t\tboolean webContentDisplayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_56Checkbox\");\n\n\t\t\t\tif (webContentDisplayChecked) {\n\t\t\t\t\tlabel = 10;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_56Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Web Content Display\"));\n\n\t\t\tcase 10:\n\n\t\t\t\tboolean wikiChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_36Checkbox\");\n\n\t\t\t\tif (wikiChecked) {\n\t\t\t\t\tlabel = 11;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_36Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Wiki\"));\n\n\t\t\tcase 11:\n\n\t\t\t\tboolean wikiDisplayChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_165_staged-portlet_54Checkbox\");\n\n\t\t\t\tif (wikiDisplayChecked) {\n\t\t\t\t\tlabel = 12;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_165_staged-portlet_54Checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Wiki Display Checked\"));\n\n\t\t\tcase 12:\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to activate local staging for Site Name[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Site Name\"),\n\t\t\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\t\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Site Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Site Name (Staging)\"),\n\t\t\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"b51c10a8e364ed8e90efb64ea094c5a8f5995fc9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTestSuite(AddCommunitiesTest.class);\n\t\ttestSuite.addTestSuite(ActivateStagingTest.class);\n\t\ttestSuite.addTestSuite(TearDownCommunityTest.class);\n\n\t\treturn testSuite;\n\t}","id":13953,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTestSuite(AddSiteTest.class);\n\t\ttestSuite.addTestSuite(ActivateStagingTest.class);\n\t\ttestSuite.addTestSuite(TearDownSiteTest.class);\n\n\t\treturn testSuite;\n\t}","commit_id":"b51c10a8e364ed8e90efb64ea094c5a8f5995fc9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddBlogsEntry() throws Exception {\n\t\tselenium.open(\"/web/staging/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Asset Publisher Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Add New\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_33_title\",\n\t\t\tRuntimeVariables.replace(\"AP Blogs Entry Title\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_editor\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"cke_contents_CKEditor1\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.selectFrame(\"//iframe[@id='_33_editor']\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents_CKEditor1']/iframe\");\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"AP Blogs Entry Content.\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"AP Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//div[1]/h3/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"AP Blogs Entry Content.\"),\n\t\t\tselenium.getText(\"//div/div/div[1]/div[2]/div[1]\"));\n\t}","id":13954,"modified_method":"public void testAddBlogsEntry() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Site Name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Name\", RuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Blogs Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Blog Entry']\",\n\t\t\tRuntimeVariables.replace(\"Add Blog Entry\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_33_title']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__33_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__33_editor']/iframe\");\n\t\tselenium.type(\"//body\", RuntimeVariables.replace(\"Blogs Entry Content\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//div[@class='entry-title']/h2/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Content\"),\n\t\t\tselenium.getText(\"//div[@class='entry-body']/p\"));\n\t}","commit_id":"b51c10a8e364ed8e90efb64ea094c5a8f5995fc9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddBlogsEntry() throws Exception {\n\t\tselenium.open(\"/web/staging/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Asset Publisher Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Add New\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_33_title\",\n\t\t\tRuntimeVariables.replace(\"AP Blogs Entry Title\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_33_editor\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"cke_contents_CKEditor1\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.selectFrame(\"//iframe[@id='_33_editor']\");\n\t\tselenium.selectFrame(\"//td[@id='cke_contents_CKEditor1']/iframe\");\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"AP Blogs Entry Content.\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"AP Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//div[1]/h3/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"AP Blogs Entry Content.\"),\n\t\t\tselenium.getText(\"//div/div/div[1]/div[2]/div[1]\"));\n\t}","id":13955,"modified_method":"public void testAddBlogsEntry() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Site Name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Name\", RuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Blogs Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Blog Entry']\",\n\t\t\tRuntimeVariables.replace(\"Add Blog Entry\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_33_title']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry Title\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__33_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__33_editor']/iframe\");\n\t\tselenium.type(\"//body\", RuntimeVariables.replace(\"Blogs Entry Content\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//div[@class='entry-title']/h2/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Content\"),\n\t\t\tselenium.getText(\"//div[@class='entry-body']/p\"));\n\t}","commit_id":"b51c10a8e364ed8e90efb64ea094c5a8f5995fc9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageAP() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"main-content\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"dockbar\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"navigation\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"//div/div[3]/div/ul/li[5]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"ControlPanel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Sites\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"_134_name\", RuntimeVariables.replace(\"Staging\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.click(\"//strong/a\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Staging\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.clickAt(\"//div/div[3]/a\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"_134_name_en_US\",\n\t\t\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//section/div/div/div/div\"));\n\t\t\t\tselenium.clickAt(\"//div[2]/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Arrow Down Arrow\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\t\t\"Asset Publisher Test Page\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Asset Publisher Test Page\"),\n\t\t\t\t\tselenium.getText(\"//li/ul/li/div/div[3]/a\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":13956,"modified_method":"public void testAddPageAP() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Site Name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Name\", RuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Asset Publisher Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"b51c10a8e364ed8e90efb64ea094c5a8f5995fc9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageAP() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"main-content\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"dockbar\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"navigation\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"//div/div[3]/div/ul/li[5]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"ControlPanel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Sites\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"_134_name\", RuntimeVariables.replace(\"Staging\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.click(\"//strong/a\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Staging\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.clickAt(\"//div/div[3]/a\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"_134_name_en_US\",\n\t\t\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//section/div/div/div/div\"));\n\t\t\t\tselenium.clickAt(\"//div[2]/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Arrow Down Arrow\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\t\t\"Asset Publisher Test Page\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Asset Publisher Test Page\"),\n\t\t\t\t\tselenium.getText(\"//li/ul/li/div/div[3]/a\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":13957,"modified_method":"public void testAddPageAP() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Site Name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Name\", RuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Asset Publisher Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"b51c10a8e364ed8e90efb64ea094c5a8f5995fc9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageBlogs() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"main-content\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"dockbar\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"navigation\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"//div/div[3]/div/ul/li[5]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"ControlPanel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Sites\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"_134_name\", RuntimeVariables.replace(\"Staging\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.click(\"//strong/a\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Staging\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.clickAt(\"//div/div[3]/a\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"_134_name_en_US\",\n\t\t\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//section/div/div/div/div\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Blogs Test Page\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[2]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Blogs Test Page\"),\n\t\t\t\t\tselenium.getText(\"//li/ul/li[2]/div/div[3]/a\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":13958,"modified_method":"public void testAddPageBlogs() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Site Name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Name\", RuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Blogs Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"b51c10a8e364ed8e90efb64ea094c5a8f5995fc9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageBlogs() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"main-content\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"dockbar\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"navigation\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.clickAt(\"//div/div[3]/div/ul/li[5]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"ControlPanel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Sites\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"_134_name\", RuntimeVariables.replace(\"Staging\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.click(\"//strong/a\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Staging\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[2]/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.clickAt(\"//div/div[3]/a\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"_134_name_en_US\",\n\t\t\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//section/div/div/div/div\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Blogs Test Page\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[2]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Blogs Test Page\"),\n\t\t\t\t\tselenium.getText(\"//li/ul/li[2]/div/div[3]/a\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":13959,"modified_method":"public void testAddPageBlogs() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Site Name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Name\", RuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Blogs Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"b51c10a8e364ed8e90efb64ea094c5a8f5995fc9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletAP() throws Exception {\n\t\tselenium.open(\"/web/staging/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Asset Publisher Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"a\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@title='Asset Publisher']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Asset Publisher']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":13960,"modified_method":"public void testAddPortletAP() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Site Name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Name\", RuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Asset Publisher Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@title='Asset Publisher']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Asset Publisher']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"b51c10a8e364ed8e90efb64ea094c5a8f5995fc9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletAP() throws Exception {\n\t\tselenium.open(\"/web/staging/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Asset Publisher Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"a\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@title='Asset Publisher']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Asset Publisher']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":13961,"modified_method":"public void testAddPortletAP() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Site Name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Name\", RuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Asset Publisher Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@title='Asset Publisher']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Asset Publisher']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"b51c10a8e364ed8e90efb64ea094c5a8f5995fc9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletBlogs() throws Exception {\n\t\tselenium.open(\"/web/staging/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Blogs Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Blogs Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"b\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@title='Blogs']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Blogs']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":13962,"modified_method":"public void testAddPortletBlogs() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Site Name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Name\", RuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Blogs Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[@title='Blogs']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Blogs']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"b51c10a8e364ed8e90efb64ea094c5a8f5995fc9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletBlogs() throws Exception {\n\t\tselenium.open(\"/web/staging/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Blogs Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Blogs Test Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"b\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@title='Blogs']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Blogs']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":13963,"modified_method":"public void testAddPortletBlogs() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Site Name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Name\", RuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Blogs Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Blogs Test Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[@title='Blogs']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Blogs']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"b51c10a8e364ed8e90efb64ea094c5a8f5995fc9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertCannotEditAPEntry() throws Exception {\n\t\tselenium.open(\"/web/staging/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Asset Publisher Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\t\tassertFalse(selenium.isElementPresent(\"//div[1]/span/a/img\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Edit AP Blogs Entry Title\"));\n\t}","id":13964,"modified_method":"public void testAssertCannotEditAPEntry() throws Exception {\n\t\tselenium.open(\"/web/staging/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Site Name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Name\", RuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Asset Publisher Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertNotEquals(RuntimeVariables.replace(\"Edit Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//span/a/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Content\"),\n\t\t\tselenium.getText(\"//div[@class='asset-summary']\"));\n\t}","commit_id":"b51c10a8e364ed8e90efb64ea094c5a8f5995fc9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertCannotEditAPEntry() throws Exception {\n\t\tselenium.open(\"/web/staging/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Asset Publisher Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\t\tassertFalse(selenium.isElementPresent(\"//div[1]/span/a/img\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Edit AP Blogs Entry Title\"));\n\t}","id":13965,"modified_method":"public void testAssertCannotEditAPEntry() throws Exception {\n\t\tselenium.open(\"/web/staging/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Site Name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Name\", RuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Asset Publisher Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertNotEquals(RuntimeVariables.replace(\"Edit Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//span/a/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Content\"),\n\t\t\tselenium.getText(\"//div[@class='asset-summary']\"));\n\t}","commit_id":"b51c10a8e364ed8e90efb64ea094c5a8f5995fc9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTestSuite(AddCommunitiesTest.class);\n\t\ttestSuite.addTestSuite(AddPageAPTest.class);\n\t\ttestSuite.addTestSuite(AddPortletAPTest.class);\n\t\ttestSuite.addTestSuite(AddPageBlogsTest.class);\n\t\ttestSuite.addTestSuite(AddPortletBlogsTest.class);\n\t\ttestSuite.addTestSuite(AddBlogsEntryTest.class);\n\t\ttestSuite.addTestSuite(AssertEditAPEntryTest.class);\n\t\ttestSuite.addTestSuite(ActivateStagingTest.class);\n\t\ttestSuite.addTestSuite(AssertCannotEditAPEntryTest.class);\n\t\ttestSuite.addTestSuite(DeactivateStagingTest.class);\n\t\ttestSuite.addTestSuite(TearDownCommunityTest.class);\n\n\t\treturn testSuite;\n\t}","id":13966,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTestSuite(AddSiteTest.class);\n\t\ttestSuite.addTestSuite(AddSitePublicPageTest.class);\n\t\ttestSuite.addTestSuite(AddPageAPTest.class);\n\t\ttestSuite.addTestSuite(AddPortletAPTest.class);\n\t\ttestSuite.addTestSuite(AddPageBlogsTest.class);\n\t\ttestSuite.addTestSuite(AddPortletBlogsTest.class);\n\t\ttestSuite.addTestSuite(AddBlogsEntryTest.class);\n\t\ttestSuite.addTestSuite(AssertEditAPEntryTest.class);\n\t\ttestSuite.addTestSuite(ActivateStagingTest.class);\n\t\ttestSuite.addTestSuite(AssertCannotEditAPEntryTest.class);\n\t\ttestSuite.addTestSuite(DeactivateStagingTest.class);\n\t\ttestSuite.addTestSuite(TearDownSiteTest.class);\n\n\t\treturn testSuite;\n\t}","commit_id":"b51c10a8e364ed8e90efb64ea094c5a8f5995fc9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertEditAPEntry() throws Exception {\n\t\tselenium.open(\"/web/staging/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Asset Publisher Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[1]/span/a/img\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"//div[1]/span/a/img\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Edit AP Blogs Entry Title\"));\n\t}","id":13967,"modified_method":"public void testAssertEditAPEntry() throws Exception {\n\t\tselenium.open(\"/web/staging/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Site Name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Name\", RuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Asset Publisher Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edit Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//span/a/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Content\"),\n\t\t\tselenium.getText(\"//div[@class='asset-summary']\"));\n\t}","commit_id":"b51c10a8e364ed8e90efb64ea094c5a8f5995fc9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertEditAPEntry() throws Exception {\n\t\tselenium.open(\"/web/staging/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Asset Publisher Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[1]/span/a/img\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"//div[1]/span/a/img\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Edit AP Blogs Entry Title\"));\n\t}","id":13968,"modified_method":"public void testAssertEditAPEntry() throws Exception {\n\t\tselenium.open(\"/web/staging/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Site Name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Name\", RuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Asset Publisher Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//h3[@class='asset-title']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edit Blogs Entry Title\"),\n\t\t\tselenium.getText(\"//span/a/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Content\"),\n\t\t\tselenium.getText(\"//div[@class='asset-summary']\"));\n\t}","commit_id":"b51c10a8e364ed8e90efb64ea094c5a8f5995fc9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTestSuite(AddCommunitiesTest.class);\n\t\ttestSuite.addTestSuite(AddPageAPTest.class);\n\t\ttestSuite.addTestSuite(AddPortletAPTest.class);\n\t\ttestSuite.addTestSuite(AddPageBlogsTest.class);\n\t\ttestSuite.addTestSuite(AddPortletBlogsTest.class);\n\t\ttestSuite.addTestSuite(AddBlogsEntryTest.class);\n\t\ttestSuite.addTestSuite(AssertEditAPEntryTest.class);\n\t\ttestSuite.addTestSuite(ActivateStagingTest.class);\n\t\ttestSuite.addTestSuite(AssertCannotEditAPEntryTest.class);\n\t\ttestSuite.addTestSuite(DeactivateStagingTest.class);\n\t\ttestSuite.addTestSuite(AssertEditAPEntryTest.class);\n\t\ttestSuite.addTestSuite(TearDownCommunityTest.class);\n\n\t\treturn testSuite;\n\t}","id":13969,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTestSuite(AddSiteTest.class);\n\t\ttestSuite.addTestSuite(AddSitePublicPageTest.class);\n\t\ttestSuite.addTestSuite(AddPageAPTest.class);\n\t\ttestSuite.addTestSuite(AddPortletAPTest.class);\n\t\ttestSuite.addTestSuite(AddPageBlogsTest.class);\n\t\ttestSuite.addTestSuite(AddPortletBlogsTest.class);\n\t\ttestSuite.addTestSuite(AddBlogsEntryTest.class);\n\t\ttestSuite.addTestSuite(AssertEditAPEntryTest.class);\n\t\ttestSuite.addTestSuite(ActivateStagingTest.class);\n\t\ttestSuite.addTestSuite(AssertCannotEditAPEntryTest.class);\n\t\ttestSuite.addTestSuite(DeactivateStagingTest.class);\n\t\ttestSuite.addTestSuite(AssertEditAPEntryTest.class);\n\t\ttestSuite.addTestSuite(TearDownSiteTest.class);\n\n\t\treturn testSuite;\n\t}","commit_id":"b51c10a8e364ed8e90efb64ea094c5a8f5995fc9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeactivateStaging() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"main-content\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"dockbar\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"navigation\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//div/div[3]/div/ul/li[5]/a\",\n\t\t\tRuntimeVariables.replace(\"ControlPanel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Sites\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\", RuntimeVariables.replace(\"Staging\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\t\tselenium.click(\"//strong/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Manage Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//ul[1]/li[3]/span/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//ul[1]/li[3]/span/span/a\",\n\t\t\tRuntimeVariables.replace(\"Settings\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//li[7]/span/span/a\",\n\t\t\tRuntimeVariables.replace(\"Staging\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_134_stagingType\",\n\t\t\tRuntimeVariables.replace(\"label=None\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate staging for Staging[\\\\s\\\\S]$\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//section/div/div/div/div\"));\n\t\tassertNotEquals(RuntimeVariables.replace(\"Staging (Staging)\"),\n\t\t\tselenium.getText(\"//li[4]/span\"));\n\t}","id":13970,"modified_method":"public void testDeactivateStaging() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\tselenium.click(\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Edit Settings\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Edit Settings\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_165_stagingLink']\",\n\t\t\t\t\"Staging\"));\n\t\tselenium.clickAt(\"//a[@id='_165_stagingLink']\",\n\t\t\tRuntimeVariables.replace(\"Staging\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select[@id='_165_stagingType']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_165_stagingType']\",\n\t\t\tRuntimeVariables.replace(\"None\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate staging for Site Name[\\\\s\\\\S]$\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Site Name\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\", RuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Site Name\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertNotEquals(RuntimeVariables.replace(\"Site Name (Staging)\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t}","commit_id":"b51c10a8e364ed8e90efb64ea094c5a8f5995fc9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeactivateStaging() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"main-content\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"dockbar\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"navigation\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//div/div[3]/div/ul/li[5]/a\",\n\t\t\tRuntimeVariables.replace(\"ControlPanel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Sites\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\", RuntimeVariables.replace(\"Staging\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\t\tselenium.click(\"//strong/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Manage Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//ul[1]/li[3]/span/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//ul[1]/li[3]/span/span/a\",\n\t\t\tRuntimeVariables.replace(\"Settings\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//li[7]/span/span/a\",\n\t\t\tRuntimeVariables.replace(\"Staging\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_134_stagingType\",\n\t\t\tRuntimeVariables.replace(\"label=None\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate staging for Staging[\\\\s\\\\S]$\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//section/div/div/div/div\"));\n\t\tassertNotEquals(RuntimeVariables.replace(\"Staging (Staging)\"),\n\t\t\tselenium.getText(\"//li[4]/span\"));\n\t}","id":13971,"modified_method":"public void testDeactivateStaging() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\tselenium.click(\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Edit Settings\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Edit Settings\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_165_stagingLink']\",\n\t\t\t\t\"Staging\"));\n\t\tselenium.clickAt(\"//a[@id='_165_stagingLink']\",\n\t\t\tRuntimeVariables.replace(\"Staging\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select[@id='_165_stagingType']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_165_stagingType']\",\n\t\t\tRuntimeVariables.replace(\"None\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate staging for Site Name[\\\\s\\\\S]$\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Site Name\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\", RuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Site Name\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertNotEquals(RuntimeVariables.replace(\"Site Name (Staging)\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t}","commit_id":"b51c10a8e364ed8e90efb64ea094c5a8f5995fc9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeactivateStaging() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"main-content\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"dockbar\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"navigation\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//div/div[3]/div/ul/li[5]/a\",\n\t\t\tRuntimeVariables.replace(\"ControlPanel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Sites\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\", RuntimeVariables.replace(\"Staging\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\t\tselenium.click(\"//strong/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Manage Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//ul[1]/li[3]/span/span/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//ul[1]/li[3]/span/span/a\",\n\t\t\tRuntimeVariables.replace(\"Settings\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//li[7]/span/span/a\",\n\t\t\tRuntimeVariables.replace(\"Staging\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_134_stagingType\",\n\t\t\tRuntimeVariables.replace(\"label=None\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate staging for Staging[\\\\s\\\\S]$\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//section/div/div/div/div\"));\n\t\tassertNotEquals(RuntimeVariables.replace(\"Staging (Staging)\"),\n\t\t\tselenium.getText(\"//li[4]/span\"));\n\t}","id":13972,"modified_method":"public void testDeactivateStaging() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_134_name']\",\n\t\t\tRuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//td[7]/span/ul/li/strong/a/span\"));\n\t\tselenium.click(\"//td[7]/span/ul/li/strong/a/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Edit Settings\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Edit Settings\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_165_stagingLink']\",\n\t\t\t\t\"Staging\"));\n\t\tselenium.clickAt(\"//a[@id='_165_stagingLink']\",\n\t\t\tRuntimeVariables.replace(\"Staging\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select[@id='_165_stagingType']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_165_stagingType']\",\n\t\t\tRuntimeVariables.replace(\"None\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate staging for Site Name[\\\\s\\\\S]$\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Site Name\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\", RuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Site Name\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertNotEquals(RuntimeVariables.replace(\"Site Name (Staging)\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t}","commit_id":"b51c10a8e364ed8e90efb64ea094c5a8f5995fc9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTestSuite(AddCommunitiesTest.class);\n\t\ttestSuite.addTestSuite(ActivateStagingTest.class);\n\t\ttestSuite.addTestSuite(DeactivateStagingTest.class);\n\t\ttestSuite.addTestSuite(TearDownCommunityTest.class);\n\n\t\treturn testSuite;\n\t}","id":13973,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTestSuite(AddSiteTest.class);\n\t\ttestSuite.addTestSuite(ActivateStagingTest.class);\n\t\ttestSuite.addTestSuite(DeactivateStagingTest.class);\n\t\ttestSuite.addTestSuite(TearDownSiteTest.class);\n\n\t\treturn testSuite;\n\t}","commit_id":"b51c10a8e364ed8e90efb64ea094c5a8f5995fc9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public Collection getClosedOutages(MockService svc) {\n        Object[] values = { new Integer(svc.getNodeId()), svc.getIpAddr(), new Integer(svc.getId()) };\n        return getOutages(\"nodeId = ? and ipAddr = ? and serviceID = ? and ifRegainedService is not null\", values);\n    }","id":13974,"modified_method":"public Collection getClosedOutages(MockService svc) {\n        return getOutages(\"nodeId = ? and ipAddr = ? and serviceID = ? and ifRegainedService is not null\",\n                svc.getNodeId(), svc.getIpAddr(), svc.getId());\n    }","commit_id":"fbcefecefb01b1d591809dcbdcb93615a69b6c68","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public Collection getOutages(MockService svc) {\n        Object[] values = { new Integer(svc.getNodeId()), svc.getIpAddr(), new Integer(svc.getId()) };\n        return getOutages(\"nodeId = ? and ipAddr = ? and serviceID = ?\", values);\n    }","id":13975,"modified_method":"public Collection getOutages(MockService svc) {\n        return getOutages(\"nodeId = ? and ipAddr = ? and serviceID = ?\",\n                svc.getNodeId(), svc.getIpAddr(), svc.getId());\n    }","commit_id":"fbcefecefb01b1d591809dcbdcb93615a69b6c68","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * @param ipAddr\n     * @param nodeId\n     * @param nodeId2\n     */\n    public void reparentInterface(String ipAddr, int oldNode, int newNode) {\n        Object[] values = { new Integer(newNode), new Integer(oldNode), ipAddr };\n        update(\"update ipInterface set nodeId = ? where nodeId = ? and ipAddr = ?;\", values);\n        update(\"update ifServices set nodeId = ? where nodeId = ? and ipAddr = ?;\", values);\n    }","id":13976,"modified_method":"/**\n     * @param ipAddr\n     * @param nodeId\n     * @param nodeId2\n     */\n    public void reparentInterface(String ipAddr, int oldNode, int newNode) {\n        update(\"update snmpInterface set nodeId = ? where id in (select snmpInterfaceId from ipInterface where nodeId = ? and ipAddr = ?)\", newNode, oldNode, ipAddr);\n        update(\"update ipInterface set nodeId = ? where nodeId = ? and ipAddr = ?\", newNode, oldNode, ipAddr);\n        update(\"update ifServices set nodeId = ? where nodeId = ? and ipAddr = ?\", newNode, oldNode, ipAddr);\n    }","commit_id":"fbcefecefb01b1d591809dcbdcb93615a69b6c68","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public MockDatabase(String dbName) throws Exception {\n        super(dbName);\n        setPopulateSchema(true);\n\n    }","id":13977,"modified_method":"public MockDatabase(String dbName) throws Exception {\n        super(dbName);\n        setPopulateSchema(true);\n        create();\n    }","commit_id":"fbcefecefb01b1d591809dcbdcb93615a69b6c68","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public Collection getOpenOutages(MockService svc) {\n        Object[] values = { new Integer(svc.getNodeId()), svc.getIpAddr(), new Integer(svc.getId()) };\n        return getOutages(\"nodeId = ? and ipAddr = ? and serviceID = ? and ifRegainedService is null\", values);\n    }","id":13978,"modified_method":"public Collection getOpenOutages(MockService svc) {\n        return getOutages(\"nodeId = ? and ipAddr = ? and serviceID = ? and ifRegainedService is null\",\n                svc.getNodeId(), svc.getIpAddr(), svc.getId());\n    }","commit_id":"fbcefecefb01b1d591809dcbdcb93615a69b6c68","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * @param e\n     */\n    public void acknowledgeNoticesForEvent(Event e) {\n        Object[] values = { new Timestamp(System.currentTimeMillis()), new Integer(e.getDbid()) };\n        update (\"update notifications set respondTime = ? where eventID = ? and respondTime is null;\", values);\n    }","id":13979,"modified_method":"/**\n     * @param e\n     */\n    public void acknowledgeNoticesForEvent(Event e) {\n        update(\"update notifications set respondTime = ? where eventID = ? and respondTime is null\",\n                new Timestamp(System.currentTimeMillis()), e.getDbid());\n    }","commit_id":"fbcefecefb01b1d591809dcbdcb93615a69b6c68","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testMultipleDatabases() throws Exception {\n    \t\tm_secondDb = new MockDatabase(\"test2\");\n    \t\tm_secondDb.create();\n    \t\n    \t\tQuerier secondQuerier = new Querier(m_secondDb, \"select * from node\");\n    \t\tsecondQuerier.execute();\n    \t\tQuerier querier = new Querier(m_db, \"select * from node\");\n    \t\tquerier.execute();\n    \t\tassertFalse(secondQuerier.getCount() == querier.getCount());\n    \t\t\n    \t\tMockNode node = m_network.getNode(1);\n    \t\tm_secondDb.writeNode(node);\n    \t\tsecondQuerier = new Querier(m_secondDb, \"select * from node\");\n    \t\tsecondQuerier.execute();\n    \t\tassertEquals(1, secondQuerier.getCount());\n    \t\t\n    }","id":13980,"modified_method":"public void testMultipleDatabases() throws Exception {\n    \t\tm_secondDb = new MockDatabase(m_db.getTestDatabase() + \"_test2\");\n    \t\n    \t\tQuerier secondQuerier = new Querier(m_secondDb, \"select * from node\");\n    \t\tsecondQuerier.execute();\n    \t\tQuerier querier = new Querier(m_db, \"select * from node\");\n    \t\tquerier.execute();\n    \t\tassertFalse(secondQuerier.getCount() == querier.getCount());\n    \t\t\n    \t\tMockNode node = m_network.getNode(1);\n    \t\tm_secondDb.writeNode(node);\n    \t\tsecondQuerier = new Querier(m_secondDb, \"select * from node\");\n    \t\tsecondQuerier.execute();\n    \t\tassertEquals(1, secondQuerier.getCount());\n    \t\t\n    }","commit_id":"fbcefecefb01b1d591809dcbdcb93615a69b6c68","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public Collection getOutages(MockService svc) {\n        Object[] values = { new Integer(svc.getNodeId()), svc.getIpAddr(), new Integer(svc.getId()) };\n        return getOutages(\"nodeId = ? and ipAddr = ? and serviceID = ?\", values);\n    }","id":13981,"modified_method":"public Collection getOutages(MockService svc) {\n        return getOutages(\"nodeId = ? and ipAddr = ? and serviceID = ?\",\n                svc.getNodeId(), svc.getIpAddr(), svc.getId());\n    }","commit_id":"3b533fd86409155bf247745dfca25aa9e04cdcfb","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public Collection getClosedOutages(MockService svc) {\n        Object[] values = { new Integer(svc.getNodeId()), svc.getIpAddr(), new Integer(svc.getId()) };\n        return getOutages(\"nodeId = ? and ipAddr = ? and serviceID = ? and ifRegainedService is not null\", values);\n    }","id":13982,"modified_method":"public Collection getClosedOutages(MockService svc) {\n        return getOutages(\"nodeId = ? and ipAddr = ? and serviceID = ? and ifRegainedService is not null\",\n                svc.getNodeId(), svc.getIpAddr(), svc.getId());\n    }","commit_id":"3b533fd86409155bf247745dfca25aa9e04cdcfb","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * @param e\n     */\n    public void acknowledgeNoticesForEvent(Event e) {\n        Object[] values = { new Timestamp(System.currentTimeMillis()), new Integer(e.getDbid()) };\n        update (\"update notifications set respondTime = ? where eventID = ? and respondTime is null;\", values);\n    }","id":13983,"modified_method":"/**\n     * @param e\n     */\n    public void acknowledgeNoticesForEvent(Event e) {\n        update(\"update notifications set respondTime = ? where eventID = ? and respondTime is null\",\n                new Timestamp(System.currentTimeMillis()), e.getDbid());\n    }","commit_id":"3b533fd86409155bf247745dfca25aa9e04cdcfb","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public Collection getOpenOutages(MockService svc) {\n        Object[] values = { new Integer(svc.getNodeId()), svc.getIpAddr(), new Integer(svc.getId()) };\n        return getOutages(\"nodeId = ? and ipAddr = ? and serviceID = ? and ifRegainedService is null\", values);\n    }","id":13984,"modified_method":"public Collection getOpenOutages(MockService svc) {\n        return getOutages(\"nodeId = ? and ipAddr = ? and serviceID = ? and ifRegainedService is null\",\n                svc.getNodeId(), svc.getIpAddr(), svc.getId());\n    }","commit_id":"3b533fd86409155bf247745dfca25aa9e04cdcfb","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public MockDatabase(String dbName) throws Exception {\n        super(dbName);\n        setPopulateSchema(true);\n\n    }","id":13985,"modified_method":"public MockDatabase(String dbName) throws Exception {\n        super(dbName);\n        setPopulateSchema(true);\n        create();\n    }","commit_id":"3b533fd86409155bf247745dfca25aa9e04cdcfb","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * @param ipAddr\n     * @param nodeId\n     * @param nodeId2\n     */\n    public void reparentInterface(String ipAddr, int oldNode, int newNode) {\n        Object[] values = { new Integer(newNode), new Integer(oldNode), ipAddr };\n        update(\"update ipInterface set nodeId = ? where nodeId = ? and ipAddr = ?;\", values);\n        update(\"update ifServices set nodeId = ? where nodeId = ? and ipAddr = ?;\", values);\n    }","id":13986,"modified_method":"/**\n     * @param ipAddr\n     * @param nodeId\n     * @param nodeId2\n     */\n    public void reparentInterface(String ipAddr, int oldNode, int newNode) {\n        update(\"update snmpInterface set nodeId = ? where id in (select snmpInterfaceId from ipInterface where nodeId = ? and ipAddr = ?)\", newNode, oldNode, ipAddr);\n        update(\"update ipInterface set nodeId = ? where nodeId = ? and ipAddr = ?\", newNode, oldNode, ipAddr);\n        update(\"update ifServices set nodeId = ? where nodeId = ? and ipAddr = ?\", newNode, oldNode, ipAddr);\n    }","commit_id":"3b533fd86409155bf247745dfca25aa9e04cdcfb","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testMultipleDatabases() throws Exception {\n    \t\tm_secondDb = new MockDatabase(\"test2\");\n    \t\tm_secondDb.create();\n    \t\n    \t\tQuerier secondQuerier = new Querier(m_secondDb, \"select * from node\");\n    \t\tsecondQuerier.execute();\n    \t\tQuerier querier = new Querier(m_db, \"select * from node\");\n    \t\tquerier.execute();\n    \t\tassertFalse(secondQuerier.getCount() == querier.getCount());\n    \t\t\n    \t\tMockNode node = m_network.getNode(1);\n    \t\tm_secondDb.writeNode(node);\n    \t\tsecondQuerier = new Querier(m_secondDb, \"select * from node\");\n    \t\tsecondQuerier.execute();\n    \t\tassertEquals(1, secondQuerier.getCount());\n    \t\t\n    }","id":13987,"modified_method":"public void testMultipleDatabases() throws Exception {\n    \t\tm_secondDb = new MockDatabase(m_db.getTestDatabase() + \"_test2\");\n    \t\n    \t\tQuerier secondQuerier = new Querier(m_secondDb, \"select * from node\");\n    \t\tsecondQuerier.execute();\n    \t\tQuerier querier = new Querier(m_db, \"select * from node\");\n    \t\tquerier.execute();\n    \t\tassertFalse(secondQuerier.getCount() == querier.getCount());\n    \t\t\n    \t\tMockNode node = m_network.getNode(1);\n    \t\tm_secondDb.writeNode(node);\n    \t\tsecondQuerier = new Querier(m_secondDb, \"select * from node\");\n    \t\tsecondQuerier.execute();\n    \t\tassertEquals(1, secondQuerier.getCount());\n    \t\t\n    }","commit_id":"3b533fd86409155bf247745dfca25aa9e04cdcfb","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n   * Creates a dataset if not exist.\n   *\n   * @param dataset to be created.\n   * @return true if successfull; false otherwise\n   * @throws MetadataServiceException when there is issue with creating\n   *          a data set.\n   */\n  @Override\n  public boolean createDataset(Account account, Dataset dataset) throws\n    MetadataServiceException, TException {\n\n    // Validate account and dataset\n    validateAccount(account);\n    validateDataset(dataset);\n\n    // Create a context.\n    OperationContext context = new OperationContext(account.getId());\n\n    try {\n      // Read the meta data entry to see if it's already present.\n      // If already present, return without applying the new changes.\n      MetaDataEntry readEntry = mds.get(context,\n          account.getId(), null, FieldTypes.Dataset.ID, dataset.getId());\n      if (readEntry == null) {\n        // attempt to add, but in case of write conflict we must read\n        // again and try to resolve the conflict\n        MetaDataEntry entry = makeEntry(account, dataset);\n        try {\n          // Invoke MDS to add entry\n          mds.add(context, entry);\n          return true;\n        } catch (OperationException e) {\n          if (e.getStatus() != StatusCode.WRITE_CONFLICT)\n            throw e; // we can only handle write conflicts here\n          // read again for conflict resolution\n          readEntry = mds.get(context,\n              account.getId(), null, FieldTypes.Dataset.ID, dataset.getId());\n        }\n      }\n\n      // loop a few times for write conflict resolution\n      for (int attempts = 3; attempts > 0; --attempts) {\n        // there is already an entry, determine how it compare to the new one\n        CompareStatus status = compare(dataset, readEntry);\n        // existing entry is equal or a superset of the new one -> good\n        if (status.equals(CompareStatus.EQUAL) ||\n            status.equals(CompareStatus.SUB))\n          return true;\n        else if (status.equals(CompareStatus.DIFF)) {\n          // new entry is incompatible with existing -> conflict!\n          throw new MetadataServiceException(\"another, incompatible meta \" +\n              \"data entry already exists.\");\n        }\n\n        // Create a new metadata entry for update\n        MetaDataEntry entry = makeEntry(account, dataset);\n        try {\n          // Invoke MDS to update entry, this can again fail with write conflict\n          mds.update(context, entry);\n          return true;\n\n        } catch (OperationException e) {\n          if (e.getStatus() != StatusCode.WRITE_CONFLICT)\n            throw e; // we can only handle write conflicts here\n          if (attempts <= 1)\n            throw e; // number of attempts exhausted\n          // read again for conflict resolution\n          readEntry = mds.get(context,\n              account.getId(), null, FieldTypes.Dataset.ID, dataset.getId());\n        }\n      }\n      // unreachable but java does not detect that\n      throw new OperationException(StatusCode.INTERNAL_ERROR,\n          \"this code should be unreachable\");\n\n    } catch (OperationException e) {\n      Log.warn(\"Failed creating dataset {}. Reason: {}\", dataset,\n          e.getMessage());\n      throw new MetadataServiceException(e.getMessage());\n    }\n  }","id":13988,"modified_method":"/**\n   * Creates a dataset if not exist.\n   *\n   * @param dataset to be created.\n   * @return true if successfull; false otherwise\n   * @throws MetadataServiceException when there is issue with creating\n   *          a data set.\n   */\n  @Override\n  public boolean createDataset(Account account, Dataset dataset) throws\n    MetadataServiceException, TException {\n\n    // Validate account and dataset\n    validateAccount(account);\n    validateDataset(dataset);\n\n    // Create a context.\n    OperationContext context = new OperationContext(account.getId());\n\n    try {\n      // Read the meta data entry to see if it's already present.\n      // If already present, return without applying the new changes.\n      MetaDataEntry readEntry = mds.get(context,\n          account.getId(), null, FieldTypes.Dataset.ID, dataset.getId());\n      if (readEntry == null) {\n        // attempt to add, but in case of write conflict we must read\n        // again and try to resolve the conflict\n        MetaDataEntry entry = makeEntry(account, dataset);\n        try {\n          // Invoke MDS to add entry\n          mds.add(context, entry);\n          return true;\n        } catch (OperationException e) {\n          if (e.getStatus() != StatusCode.WRITE_CONFLICT)\n            throw e; // we can only handle write conflicts here\n          // read again for conflict resolution\n          readEntry = mds.get(context,\n              account.getId(), null, FieldTypes.Dataset.ID, dataset.getId());\n        }\n      }\n\n      // loop a few times for write conflict resolution\n      for (int attempts = 3; attempts > 0; --attempts) {\n        // there is already an entry, determine how it compare to the new one\n        CompareStatus status = readEntry == null\n            ? CompareStatus.SUPER : compare(dataset, readEntry);\n        // existing entry is equal or a superset of the new one -> good\n        if (status.equals(CompareStatus.EQUAL) ||\n            status.equals(CompareStatus.SUB))\n          return true;\n        else if (status.equals(CompareStatus.DIFF)) {\n          // new entry is incompatible with existing -> conflict!\n          throw new MetadataServiceException(\"another, incompatible meta \" +\n              \"data entry already exists.\");\n        }\n\n        // Create a new metadata entry for update\n        MetaDataEntry entry = makeEntry(account, dataset);\n        try {\n          // Invoke MDS to update entry, this can again fail with write conflict\n          if (readEntry == null) {\n            mds.add(context, entry);\n          } else {\n            mds.update(context, entry);\n          }\n          return true;\n\n        } catch (OperationException e) {\n          if (e.getStatus() != StatusCode.WRITE_CONFLICT)\n            throw e; // we can only handle write conflicts here\n          if (attempts <= 1)\n            throw e; // number of attempts exhausted\n          // read again for conflict resolution\n          readEntry = mds.get(context,\n              account.getId(), null, FieldTypes.Dataset.ID, dataset.getId());\n        }\n      }\n      // unreachable but java does not detect that\n      throw new OperationException(StatusCode.INTERNAL_ERROR,\n          \"this code should be unreachable\");\n\n    } catch (OperationException e) {\n      Log.warn(\"Failed creating dataset {}. Reason: {}\", dataset,\n          e.getMessage());\n      throw new MetadataServiceException(e.getMessage());\n    }\n  }","commit_id":"5ceea0b547160816648f30c7540e7ef2e7512a95","url":"https://github.com/caskdata/cdap"},{"original_method":"/**\n   * Creates a stream if not exist.\n   * <p>\n   *   Stream creation requires id, name and description to be present.\n   *   Without these fields a stream creation would fail. If a stream\n   *   already exists, then it will be untouched.\n   * <\/p>\n   *\n   * @param stream information about stream.\n   * @return true if successful; false otherwise\n   * @throws com.continuuity.metadata.thrift.MetadataServiceException\n   *          thrown when there is issue with creating\n   *          stream.\n   */\n  @Override\n  public boolean createStream(Account account, Stream stream)\n    throws MetadataServiceException, TException {\n\n    // Validate account and stream\n    validateAccount(account);\n    validateStream(stream);\n\n    // Create a context.\n    OperationContext context = new OperationContext(account.getId());\n\n    try {\n      // Read the meta data entry to see if it's already present.\n      // If already present, return without applying the new changes.\n      MetaDataEntry readEntry = mds.get(\n          context, account.getId(), null, FieldTypes.Stream.ID, stream.getId());\n      if (readEntry == null) {\n        // attempt to add, but in case of write conflict we must read\n        // again and try to resolve the conflict\n        MetaDataEntry entry = makeEntry(account, stream);\n        try {\n          // Invoke MDS to add entry\n          mds.add(context, entry);\n          return true;\n        } catch (OperationException e) {\n          if (e.getStatus() != StatusCode.WRITE_CONFLICT)\n            throw e; // we can only handle write conflicts here\n          // read again for conflict resolution\n          readEntry = mds.get(context,\n                account.getId(), null, FieldTypes.Stream.ID, stream.getId());\n        }\n      }\n\n      // loop a few times for write conflict resolution\n      for (int attempts = 3; attempts > 0; --attempts) {\n        // there is already an entry, determine how it compare to the new one\n        CompareStatus status = compare(stream, readEntry);\n        // existing entry is equal or a superset of the new one -> good\n        if (status.equals(CompareStatus.EQUAL) ||\n            status.equals(CompareStatus.SUB))\n          return true;\n        else if (status.equals(CompareStatus.DIFF)) {\n          // new entry is incompatible with existing -> conflict!\n          throw new MetadataServiceException(\"another, incompatible meta \" +\n              \"data entry already exists.\");\n        }\n\n        // Create a new metadata entry for update\n        MetaDataEntry entry = makeEntry(account, stream);\n        try {\n          // Invoke MDS to update entry, this can again fail with write conflict\n          mds.update(context, entry);\n          return true;\n\n        } catch (OperationException e) {\n          if (e.getStatus() != StatusCode.WRITE_CONFLICT)\n            throw e; // we can only handle write conflicts here\n          if (attempts <= 1)\n            throw e; // number of attempts exhausted\n          // read again for conflict resolution\n          readEntry = mds.get(context,\n              account.getId(), null, FieldTypes.Stream.ID, stream.getId());\n        }\n      }\n      // unreachable but java does not detect that\n      throw new OperationException(StatusCode.INTERNAL_ERROR,\n          \"this code should be unreachable\");\n\n    } catch (OperationException e) {\n      Log.warn(\"Failed creating stream {}. Reason: {}\", stream, e.getMessage());\n      throw new MetadataServiceException(e.getMessage());\n    }\n  }","id":13989,"modified_method":"/**\n   * Creates a stream if not exist.\n   * <p>\n   *   Stream creation requires id, name and description to be present.\n   *   Without these fields a stream creation would fail. If a stream\n   *   already exists, then it will be untouched.\n   * <\/p>\n   *\n   * @param stream information about stream.\n   * @return true if successful; false otherwise\n   * @throws com.continuuity.metadata.thrift.MetadataServiceException\n   *          thrown when there is issue with creating\n   *          stream.\n   */\n  @Override\n  public boolean createStream(Account account, Stream stream)\n    throws MetadataServiceException, TException {\n\n    // Validate account and stream\n    validateAccount(account);\n    validateStream(stream);\n\n    // Create a context.\n    OperationContext context = new OperationContext(account.getId());\n\n    try {\n      // Read the meta data entry to see if it's already present.\n      // If already present, return without applying the new changes.\n      MetaDataEntry readEntry = mds.get(\n          context, account.getId(), null, FieldTypes.Stream.ID, stream.getId());\n      if (readEntry == null) {\n        // attempt to add, but in case of write conflict we must read\n        // again and try to resolve the conflict\n        MetaDataEntry entry = makeEntry(account, stream);\n        try {\n          // Invoke MDS to add entry\n          mds.add(context, entry);\n          return true;\n        } catch (OperationException e) {\n          if (e.getStatus() != StatusCode.WRITE_CONFLICT)\n            throw e; // we can only handle write conflicts here\n          // read again for conflict resolution\n          readEntry = mds.get(context,\n                account.getId(), null, FieldTypes.Stream.ID, stream.getId());\n        }\n      }\n\n      // loop a few times for write conflict resolution\n      for (int attempts = 3; attempts > 0; --attempts) {\n        // there is already an entry, determine how it compare to the new one\n        CompareStatus status = readEntry == null\n            ? CompareStatus.SUPER : compare(stream, readEntry);\n        // existing entry is equal or a superset of the new one -> good\n        if (status.equals(CompareStatus.EQUAL) ||\n            status.equals(CompareStatus.SUB))\n          return true;\n        else if (status.equals(CompareStatus.DIFF)) {\n          // new entry is incompatible with existing -> conflict!\n          throw new MetadataServiceException(\"another, incompatible meta \" +\n              \"data entry already exists.\");\n        }\n\n        // Create a new metadata entry for update\n        MetaDataEntry entry = makeEntry(account, stream);\n        try {\n          // Invoke MDS to update entry, this can again fail with write conflict\n          if (readEntry == null) {\n            mds.add(context, entry);\n          } else {\n            mds.update(context, entry);\n          }\n          return true;\n\n        } catch (OperationException e) {\n          if (e.getStatus() != StatusCode.WRITE_CONFLICT)\n            throw e; // we can only handle write conflicts here\n          if (attempts <= 1)\n            throw e; // number of attempts exhausted\n          // read again for conflict resolution\n          readEntry = mds.get(context,\n              account.getId(), null, FieldTypes.Stream.ID, stream.getId());\n        }\n      }\n      // unreachable but java does not detect that\n      throw new OperationException(StatusCode.INTERNAL_ERROR,\n          \"this code should be unreachable\");\n\n    } catch (OperationException e) {\n      Log.warn(\"Failed creating stream {}. Reason: {}\", stream, e.getMessage());\n      throw new MetadataServiceException(e.getMessage());\n    }\n  }","commit_id":"5ceea0b547160816648f30c7540e7ef2e7512a95","url":"https://github.com/caskdata/cdap"},{"original_method":"@Override\n  public boolean createFlow(String accountId, Flow flow) throws\n      MetadataServiceException, TException {\n\n    // Validate all account.\n    Account account = new Account(accountId);\n    validateAccount(account);\n    validateFlow(flow);\n\n    // Create a context.\n    OperationContext context = new OperationContext(account.getId());\n\n    try {\n      // Read the meta data entry to see if it's already present.\n      // If already present, return without applying the new changes.\n      MetaDataEntry readEntry = mds.get(context, account.getId(),\n          null, FieldTypes.Flow.ID, flow.getId());\n      if (readEntry == null) {\n        // attempt to add, but in case of write conflict we must read\n        // again and try to resolve the conflict\n        MetaDataEntry entry = makeEntry(account, flow);\n        try {\n          // Invoke MDS to add entry\n          mds.add(context, entry);\n          return true;\n        } catch (OperationException e) {\n          if (e.getStatus() != StatusCode.WRITE_CONFLICT)\n            throw e; // we can only handle write conflicts here\n          // read again for conflict resolution\n          readEntry = mds.get(context, account.getId(),\n              null, FieldTypes.Flow.ID, flow.getId());\n        }\n      }\n\n      // loop a few times for write conflict resolution\n      for (int attempts = 3; attempts > 0; --attempts) {\n        // there is already an entry, determine how it compare to the new one\n        CompareStatus status = compare(flow, readEntry);\n        // existing entry is equal or a superset of the new one -> good\n        if (status.equals(CompareStatus.EQUAL) ||\n            status.equals(CompareStatus.SUB))\n          return true;\n        else if (status.equals(CompareStatus.DIFF)) {\n          // new entry is incompatible with existing -> conflict!\n          throw new MetadataServiceException(\"another, incompatible meta \" +\n              \"data entry already exists.\");\n        }\n\n        // Create a new metadata entry for update\n        MetaDataEntry entry = makeEntry(account, flow);\n        try {\n          // Invoke MDS to update entry, this can again fail with write conflict\n          mds.update(context, entry);\n          return true;\n\n        } catch (OperationException e) {\n          if (e.getStatus() != StatusCode.WRITE_CONFLICT)\n            throw e; // we can only handle write conflicts here\n          if (attempts <= 1)\n            throw e; // number of attempts exhausted\n          // read again for conflict resolution\n          readEntry = mds.get(context, account.getId(),\n              null, FieldTypes.Flow.ID, flow.getId());\n        }\n      }\n      // unreachable but java does not detect that\n      throw new OperationException(StatusCode.INTERNAL_ERROR,\n          \"this code should be unreachable\");\n\n    } catch (OperationException e) {\n      Log.warn(\"Failed creating flow {}. Reason: {}\", flow,\n          e.getMessage());\n      throw new MetadataServiceException(e.getMessage());\n    }\n  }","id":13990,"modified_method":"@Override\n  public boolean createFlow(String accountId, Flow flow) throws\n      MetadataServiceException, TException {\n\n    // Validate all account.\n    Account account = new Account(accountId);\n    validateAccount(account);\n    validateFlow(flow);\n\n    // Create a context.\n    OperationContext context = new OperationContext(account.getId());\n\n    try {\n      // Read the meta data entry to see if it's already present.\n      // If already present, return without applying the new changes.\n      MetaDataEntry readEntry = mds.get(context, account.getId(),\n          null, FieldTypes.Flow.ID, flow.getId());\n      if (readEntry == null) {\n        // attempt to add, but in case of write conflict we must read\n        // again and try to resolve the conflict\n        MetaDataEntry entry = makeEntry(account, flow);\n        try {\n          // Invoke MDS to add entry\n          mds.add(context, entry);\n          return true;\n        } catch (OperationException e) {\n          if (e.getStatus() != StatusCode.WRITE_CONFLICT)\n            throw e; // we can only handle write conflicts here\n          // read again for conflict resolution\n          readEntry = mds.get(context, account.getId(),\n              null, FieldTypes.Flow.ID, flow.getId());\n        }\n      }\n\n      // loop a few times for write conflict resolution\n      for (int attempts = 3; attempts > 0; --attempts) {\n        // there is already an entry, determine how it compare to the new one\n        CompareStatus status = readEntry == null\n            ? CompareStatus.SUPER : compare(flow, readEntry);\n        // existing entry is equal or a superset of the new one -> good\n        if (status.equals(CompareStatus.EQUAL) ||\n            status.equals(CompareStatus.SUB))\n          return true;\n        else if (status.equals(CompareStatus.DIFF)) {\n          // new entry is incompatible with existing -> conflict!\n          throw new MetadataServiceException(\"another, incompatible meta \" +\n              \"data entry already exists.\");\n        }\n\n        // Create a new metadata entry for update\n        MetaDataEntry entry = makeEntry(account, flow);\n        try {\n          // Invoke MDS to update entry, this can again fail with write conflict\n          if (readEntry == null) {\n            mds.add(context, entry);\n          } else {\n            mds.update(context, entry);\n          }\n          return true;\n\n        } catch (OperationException e) {\n          if (e.getStatus() != StatusCode.WRITE_CONFLICT)\n            throw e; // we can only handle write conflicts here\n          if (attempts <= 1)\n            throw e; // number of attempts exhausted\n          // read again for conflict resolution\n          readEntry = mds.get(context, account.getId(),\n              null, FieldTypes.Flow.ID, flow.getId());\n        }\n      }\n      // unreachable but java does not detect that\n      throw new OperationException(StatusCode.INTERNAL_ERROR,\n          \"this code should be unreachable\");\n\n    } catch (OperationException e) {\n      Log.warn(\"Failed creating flow {}. Reason: {}\", flow,\n          e.getMessage());\n      throw new MetadataServiceException(e.getMessage());\n    }\n  }","commit_id":"5ceea0b547160816648f30c7540e7ef2e7512a95","url":"https://github.com/caskdata/cdap"},{"original_method":"/**\n   * Creates an application if not exists.\n   *\n   * @param account under which the application is created.\n   * @param application to be created.\n   * @return true if created successfully or already exists, false otherwise.\n   * @throws com.continuuity.metadata.thrift.MetadataServiceException\n   *          thrown when there is issue with creating\n   *          metadata store entry for the application.\n   */\n  @Override\n  public boolean createApplication(Account account, Application application)\n    throws MetadataServiceException, TException {\n\n    // Validate all account.\n    validateAccount(account);\n    validateApplication(application);\n\n    // Create a context.\n    OperationContext context = new OperationContext(account.getId());\n\n    try {\n      // Read the meta data entry to see if it's already present.\n      // If already present, return without applying the new changes.\n      MetaDataEntry readEntry = mds.get(context, account.getId(),\n          null, FieldTypes.Application.ID, application.getId());\n      if (readEntry == null) {\n        // attempt to add, but in case of write conflict we must read\n        // again and try to resolve the conflict\n        MetaDataEntry entry = makeEntry(account, application);\n        try {\n          // Invoke MDS to add entry\n          mds.add(context, entry);\n          return true;\n        } catch (OperationException e) {\n          if (e.getStatus() != StatusCode.WRITE_CONFLICT)\n            throw e; // we can only handle write conflicts here\n          // read again for conflict resolution\n          readEntry = mds.get(context, account.getId(),\n              null, FieldTypes.Application.ID, application.getId());\n        }\n      }\n\n      // loop a few times for write conflict resolution\n      for (int attempts = 3; attempts > 0; --attempts) {\n        // there is already an entry, determine how it compare to the new one\n        CompareStatus status = compare(application, readEntry);\n        // existing entry is equal or a superset of the new one -> good\n        if (status.equals(CompareStatus.EQUAL) ||\n            status.equals(CompareStatus.SUB))\n          return true;\n        else if (status.equals(CompareStatus.DIFF)) {\n          // new entry is incompatible with existing -> conflict!\n          throw new MetadataServiceException(\"another, incompatible meta \" +\n              \"data entry already exists.\");\n        }\n\n        // Create a new metadata entry for update\n        MetaDataEntry entry = makeEntry(account, application);\n        try {\n          // Invoke MDS to update entry, this can again fail with write conflict\n          mds.update(context, entry);\n          return true;\n\n        } catch (OperationException e) {\n          if (e.getStatus() != StatusCode.WRITE_CONFLICT)\n            throw e; // we can only handle write conflicts here\n          if (attempts <= 1)\n            throw e; // number of attempts exhausted\n          // read again for conflict resolution\n          readEntry = mds.get(context, account.getId(),\n              null, FieldTypes.Application.ID, application.getId());\n        }\n      }\n      // unreachable but java does not detect that\n      throw new OperationException(StatusCode.INTERNAL_ERROR,\n          \"this code should be unreachable\");\n\n    } catch (OperationException e) {\n      Log.warn(\"Failed creating application {}. Reason: {}\", application,\n          e.getMessage());\n      throw new MetadataServiceException(e.getMessage());\n    }\n  }","id":13991,"modified_method":"/**\n   * Creates an application if not exists.\n   *\n   * @param account under which the application is created.\n   * @param application to be created.\n   * @return true if created successfully or already exists, false otherwise.\n   * @throws com.continuuity.metadata.thrift.MetadataServiceException\n   *          thrown when there is issue with creating\n   *          metadata store entry for the application.\n   */\n  @Override\n  public boolean createApplication(Account account, Application application)\n    throws MetadataServiceException, TException {\n\n    // Validate all account.\n    validateAccount(account);\n    validateApplication(application);\n\n    // Create a context.\n    OperationContext context = new OperationContext(account.getId());\n\n    try {\n      // Read the meta data entry to see if it's already present.\n      // If already present, return without applying the new changes.\n      MetaDataEntry readEntry = mds.get(context, account.getId(),\n          null, FieldTypes.Application.ID, application.getId());\n      if (readEntry == null) {\n        // attempt to add, but in case of write conflict we must read\n        // again and try to resolve the conflict\n        MetaDataEntry entry = makeEntry(account, application);\n        try {\n          // Invoke MDS to add entry\n          mds.add(context, entry);\n          return true;\n        } catch (OperationException e) {\n          if (e.getStatus() != StatusCode.WRITE_CONFLICT)\n            throw e; // we can only handle write conflicts here\n          // read again for conflict resolution\n          readEntry = mds.get(context, account.getId(),\n              null, FieldTypes.Application.ID, application.getId());\n        }\n      }\n\n      // loop a few times for write conflict resolution\n      for (int attempts = 3; attempts > 0; --attempts) {\n        // there is already an entry, determine how it compare to the new one\n        CompareStatus status = readEntry == null\n            ? CompareStatus.SUPER : compare(application, readEntry);\n        // existing entry is equal or a superset of the new one -> good\n        if (status.equals(CompareStatus.EQUAL) ||\n            status.equals(CompareStatus.SUB))\n          return true;\n        else if (status.equals(CompareStatus.DIFF)) {\n          // new entry is incompatible with existing -> conflict!\n          throw new MetadataServiceException(\"another, incompatible meta \" +\n              \"data entry already exists.\");\n        }\n\n        // Create a new metadata entry for update\n        MetaDataEntry entry = makeEntry(account, application);\n        try {\n          // Invoke MDS to update entry, this can again fail with write conflict\n          if (readEntry == null) {\n            mds.add(context, entry);\n          } else {\n            mds.update(context, entry);\n          }\n          return true;\n\n        } catch (OperationException e) {\n          if (e.getStatus() != StatusCode.WRITE_CONFLICT)\n            throw e; // we can only handle write conflicts here\n          if (attempts <= 1)\n            throw e; // number of attempts exhausted\n          // read again for conflict resolution\n          readEntry = mds.get(context, account.getId(),\n              null, FieldTypes.Application.ID, application.getId());\n        }\n      }\n      // unreachable but java does not detect that\n      throw new OperationException(StatusCode.INTERNAL_ERROR,\n          \"this code should be unreachable\");\n\n    } catch (OperationException e) {\n      Log.warn(\"Failed creating application {}. Reason: {}\", application,\n          e.getMessage());\n      throw new MetadataServiceException(e.getMessage());\n    }\n  }","commit_id":"5ceea0b547160816648f30c7540e7ef2e7512a95","url":"https://github.com/caskdata/cdap"},{"original_method":"/**\n   * Creates an query if not exists.\n   *\n   * @param account under which the query is created.\n   * @param query to be created.\n   * @return true if created successfully or already exists, false otherwise.\n   * @throws com.continuuity.metadata.thrift.MetadataServiceException\n   *          thrown when there is issue with creating\n   *          metadata store entry for the query.\n   */\n  @Override\n  public boolean createQuery(Account account, Query query)\n    throws MetadataServiceException, TException {\n\n    // Validate all account.\n    validateAccount(account);\n    validateQuery(query);\n\n    // Create a context.\n    OperationContext context = new OperationContext(account.getId());\n\n    try {\n      // Read the meta data entry to see if it's already present.\n      // If already present, return without applying the new changes.\n      MetaDataEntry readEntry = mds.get(context, account.getId(),\n          null, FieldTypes.Query.ID, query.getId());\n      if (readEntry == null) {\n        // attempt to add, but in case of write conflict we must read\n        // again and try to resolve the conflict\n        MetaDataEntry entry = makeEntry(account, query);\n        try {\n          // Invoke MDS to add entry\n          mds.add(context, entry);\n          return true;\n        } catch (OperationException e) {\n          if (e.getStatus() != StatusCode.WRITE_CONFLICT)\n            throw e; // we can only handle write conflicts here\n          // read again for conflict resolution\n          readEntry = mds.get(context, account.getId(),\n              null, FieldTypes.Query.ID, query.getId());\n        }\n      }\n\n      // loop a few times for write conflict resolution\n      for (int attempts = 3; attempts > 0; --attempts) {\n        // there is already an entry, determine how it compare to the new one\n        CompareStatus status = compare(query, readEntry);\n        // existing entry is equal or a superset of the new one -> good\n        if (status.equals(CompareStatus.EQUAL) ||\n            status.equals(CompareStatus.SUB))\n          return true;\n        else if (status.equals(CompareStatus.DIFF)) {\n          // new entry is incompatible with existing -> conflict!\n          throw new MetadataServiceException(\"another, incompatible meta \" +\n              \"data entry already exists.\");\n        }\n\n        // Create a new metadata entry for update\n        MetaDataEntry entry = makeEntry(account, query);\n        try {\n          // Invoke MDS to update entry, this can again fail with write conflict\n          mds.update(context, entry);\n          return true;\n\n        } catch (OperationException e) {\n          if (e.getStatus() != StatusCode.WRITE_CONFLICT)\n            throw e; // we can only handle write conflicts here\n          if (attempts <= 1)\n            throw e; // number of attempts exhausted\n          // read again for conflict resolution\n          readEntry = mds.get(context, account.getId(),\n              null, FieldTypes.Query.ID, query.getId());\n        }\n      }\n      // unreachable but java does not detect that\n      throw new OperationException(StatusCode.INTERNAL_ERROR,\n          \"this code should be unreachable\");\n\n    } catch (OperationException e) {\n      Log.warn(\"Failed creating query {}. Reason: {}\", query,\n          e.getMessage());\n      throw new MetadataServiceException(e.getMessage());\n    }\n  }","id":13992,"modified_method":"/**\n   * Creates an query if not exists.\n   *\n   * @param account under which the query is created.\n   * @param query to be created.\n   * @return true if created successfully or already exists, false otherwise.\n   * @throws com.continuuity.metadata.thrift.MetadataServiceException\n   *          thrown when there is issue with creating\n   *          metadata store entry for the query.\n   */\n  @Override\n  public boolean createQuery(Account account, Query query)\n    throws MetadataServiceException, TException {\n\n    // Validate all account.\n    validateAccount(account);\n    validateQuery(query);\n\n    // Create a context.\n    OperationContext context = new OperationContext(account.getId());\n\n    try {\n      // Read the meta data entry to see if it's already present.\n      // If already present, return without applying the new changes.\n      MetaDataEntry readEntry = mds.get(context, account.getId(),\n          null, FieldTypes.Query.ID, query.getId());\n      if (readEntry == null) {\n        // attempt to add, but in case of write conflict we must read\n        // again and try to resolve the conflict\n        MetaDataEntry entry = makeEntry(account, query);\n        try {\n          // Invoke MDS to add entry\n          mds.add(context, entry);\n          return true;\n        } catch (OperationException e) {\n          if (e.getStatus() != StatusCode.WRITE_CONFLICT)\n            throw e; // we can only handle write conflicts here\n          // read again for conflict resolution\n          readEntry = mds.get(context, account.getId(),\n              null, FieldTypes.Query.ID, query.getId());\n        }\n      }\n\n      // loop a few times for write conflict resolution\n      for (int attempts = 3; attempts > 0; --attempts) {\n        // there is already an entry, determine how it compare to the new one\n        CompareStatus status = readEntry == null\n            ? CompareStatus.SUPER : compare(query, readEntry);\n        // existing entry is equal or a superset of the new one -> good\n        if (status.equals(CompareStatus.EQUAL) ||\n            status.equals(CompareStatus.SUB))\n          return true;\n        else if (status.equals(CompareStatus.DIFF)) {\n          // new entry is incompatible with existing -> conflict!\n          throw new MetadataServiceException(\"another, incompatible meta \" +\n              \"data entry already exists.\");\n        }\n\n        // Create a new metadata entry for update\n        MetaDataEntry entry = makeEntry(account, query);\n        try {\n          // Invoke MDS to update entry, this can again fail with write conflict\n          if (readEntry == null) {\n            mds.add(context, entry);\n          } else {\n            mds.update(context, entry);\n          }\n          return true;\n\n        } catch (OperationException e) {\n          if (e.getStatus() != StatusCode.WRITE_CONFLICT)\n            throw e; // we can only handle write conflicts here\n          if (attempts <= 1)\n            throw e; // number of attempts exhausted\n          // read again for conflict resolution\n          readEntry = mds.get(context, account.getId(),\n              null, FieldTypes.Query.ID, query.getId());\n        }\n      }\n      // unreachable but java does not detect that\n      throw new OperationException(StatusCode.INTERNAL_ERROR,\n          \"this code should be unreachable\");\n\n    } catch (OperationException e) {\n      Log.warn(\"Failed creating query {}. Reason: {}\", query,\n          e.getMessage());\n      throw new MetadataServiceException(e.getMessage());\n    }\n  }","commit_id":"5ceea0b547160816648f30c7540e7ef2e7512a95","url":"https://github.com/caskdata/cdap"},{"original_method":"/**\n     * @see org.opencms.loader.I_CmsResourceLoader#load(com.opencms.file.CmsObject, com.opencms.file.CmsFile, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)\n     */\n    public void load(CmsObject cms, CmsFile file, HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {        \n        CmsFile templateFile = null;\n        try {\n            templateFile = getTemplateFile(cms, file);\n        } catch (CmsException e) {\n            throw new ServletException(e.getMessage(), e);            \n        }        \n        if (templateFile.getLoaderId() == CmsJspLoader.C_RESOURCE_LOADER_ID) {\n            OpenCms.getLoaderManager().getLoader(CmsJspLoader.C_RESOURCE_LOADER_ID).load(cms, templateFile, req, res);\n        } else {\n            OpenCms.getLoaderManager().getLoader(CmsXmlTemplateLoader.C_RESOURCE_LOADER_ID).load(cms, file, req, res);\n        }\n    }","id":13993,"modified_method":"/**\n     * @see org.opencms.loader.I_CmsResourceLoader#load(com.opencms.file.CmsObject, com.opencms.file.CmsFile, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)\n     */\n    public void load(CmsObject cms, CmsFile file, HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {\n        try {\n            CmsResourceLoaderFacade loaderFacade = OpenCms.getLoaderManager().getLoaderFacade(cms, file);        \n            loaderFacade.getLoader().load(cms, loaderFacade.getFile(), req, res);\n        } catch (CmsException e) {\n            throw new ServletException(e.getMessage(), e);            \n        }\n    }","commit_id":"1bb2fee26ee7c2f7d424d98823500b1abfa5e8a4","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * @see org.opencms.loader.I_CmsResourceLoader#export(com.opencms.file.CmsObject, com.opencms.file.CmsFile, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)\n     */\n    public void export(CmsObject cms, CmsFile file, OutputStream exportStream, HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException, CmsException {\n        CmsFile templateFile = getTemplateFile(cms, file);  \n        if (templateFile.getLoaderId() == CmsJspLoader.C_RESOURCE_LOADER_ID) {\n            OpenCms.getLoaderManager().getLoader(CmsJspLoader.C_RESOURCE_LOADER_ID).export(cms, templateFile, exportStream, req, res);           \n        } else {\n            OpenCms.getLoaderManager().getLoader(CmsXmlTemplateLoader.C_RESOURCE_LOADER_ID).export(cms, file, exportStream, req, res);\n        }  \n    }","id":13994,"modified_method":"/**\n     * @see org.opencms.loader.I_CmsResourceLoader#export(com.opencms.file.CmsObject, com.opencms.file.CmsFile, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)\n     */\n    public void export(CmsObject cms, CmsFile file, OutputStream exportStream, HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException, CmsException {\n        CmsResourceLoaderFacade loaderFacade = OpenCms.getLoaderManager().getLoaderFacade(cms, file);        \n        loaderFacade.getLoader().export(cms, loaderFacade.getFile(), exportStream, req, res);\n    }","commit_id":"1bb2fee26ee7c2f7d424d98823500b1abfa5e8a4","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * @see org.opencms.loader.I_CmsResourceLoader#load(com.opencms.file.CmsObject, com.opencms.file.CmsFile, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)\n     */\n    public void load(CmsObject cms, CmsFile file, HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {        \n        CmsFile templateFile = null;\n        try {\n            templateFile = getTemplateFile(cms, file);\n        } catch (CmsException e) {\n            throw new ServletException(e.getMessage(), e);            \n        }        \n        if (templateFile.getLoaderId() == CmsJspLoader.C_RESOURCE_LOADER_ID) {\n            OpenCms.getLoaderManager().getLoader(CmsJspLoader.C_RESOURCE_LOADER_ID).load(cms, templateFile, req, res);\n        } else {\n            OpenCms.getLoaderManager().getLoader(CmsXmlTemplateLoader.C_RESOURCE_LOADER_ID).load(cms, file, req, res);\n        }\n    }","id":13995,"modified_method":"/**\n     * @see org.opencms.loader.I_CmsResourceLoader#load(com.opencms.file.CmsObject, com.opencms.file.CmsFile, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)\n     */\n    public void load(CmsObject cms, CmsFile file, HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException {        \n        try {\n            CmsResourceLoaderFacade loaderFacade = OpenCms.getLoaderManager().getLoaderFacade(cms, file);        \n            loaderFacade.getLoader().load(cms, loaderFacade.getFile(), req, res);\n        } catch (CmsException e) {\n            throw new ServletException(e.getMessage(), e);            \n        }\n    }","commit_id":"1bb2fee26ee7c2f7d424d98823500b1abfa5e8a4","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * @see org.opencms.loader.I_CmsResourceLoader#export(com.opencms.file.CmsObject, com.opencms.file.CmsFile, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)\n     */\n    public void export(CmsObject cms, CmsFile file, OutputStream exportStream, HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException, CmsException {\n        CmsFile templateFile = getTemplateFile(cms, file);  \n        if (templateFile.getLoaderId() == CmsJspLoader.C_RESOURCE_LOADER_ID) {\n            OpenCms.getLoaderManager().getLoader(CmsJspLoader.C_RESOURCE_LOADER_ID).export(cms, templateFile, exportStream, req, res);           \n        } else {\n            OpenCms.getLoaderManager().getLoader(CmsXmlTemplateLoader.C_RESOURCE_LOADER_ID).export(cms, file, exportStream, req, res);\n        }  \n    }","id":13996,"modified_method":"/**\n     * @see org.opencms.loader.I_CmsResourceLoader#export(com.opencms.file.CmsObject, com.opencms.file.CmsFile, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)\n     */\n    public void export(CmsObject cms, CmsFile file, OutputStream exportStream, HttpServletRequest req, HttpServletResponse res) throws ServletException, IOException, CmsException {        \n        CmsResourceLoaderFacade loaderFacade = OpenCms.getLoaderManager().getLoaderFacade(cms, file);        \n        loaderFacade.getLoader().export(cms, loaderFacade.getFile(), exportStream, req, res);\n    }","commit_id":"1bb2fee26ee7c2f7d424d98823500b1abfa5e8a4","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * @see org.opencms.loader.I_CmsResourceLoader#service(com.opencms.file.CmsObject, com.opencms.file.CmsResource, javax.servlet.ServletRequest, javax.servlet.ServletResponse)\n     */\n    public void service(CmsObject cms, CmsResource file, ServletRequest req, ServletResponse res)\n        throws ServletException {\n          \n        I_CmsRequest cms_req = cms.getRequestContext().getRequest(); \n        String rnc = cms.getRequestContext().getEncoding().trim();\n        HttpServletRequest originalreq = (HttpServletRequest)cms_req.getOriginalRequest();\n        \n        try {\n            byte[] result = null;\n            String absolutePath = cms.readAbsolutePath(file);\n            CmsFile xmlFile = cms.readFile(absolutePath);\n            CmsXmlPage page = new CmsXmlPage().read(cms, xmlFile);\n            \n            // care about encoding issues\n            String dnc = OpenCms.getDefaultEncoding().trim();\n            String enc = cms.readProperty(cms.readAbsolutePath(xmlFile), I_CmsConstants.C_PROPERTY_CONTENT_ENCODING, true, dnc).trim();\n            \n            cms.getRequestContext().setEncoding(enc);      \n            if (DEBUG > 1) {\n                System.err.println(\"CmsXmlPageLoader.service(): Encodig set to \" + cms.getRequestContext().getEncoding());\n                System.err.println(\"CmsXmlPageLoader.service(): Uri set to \" + cms.getRequestContext().getUri());\n            }\n            \n            // get the element selector\n            String elementName = req.getParameter(C_TEMPLATE_ELEMENT);\n            \n            // check the current locales\n            String localeProp = OpenCms.getUserDefaultLanguage();\n            \n            // get the appropriate content\n            result = page.getContent(cms, elementName, localeProp).getBytes(); \n            \n            // append the result to the output stream\n            if (result != null) {\n                // Encoding project:\n                // The byte array must internally be encoded in the OpenCms\n                // default encoding. It will be converted to the requested encoding \n                // on the most top-level JSP element\n                result = Encoder.changeEncoding(result, enc, dnc);\n                if (DEBUG > 1) {\n                    System.err.println(\"CmsXmlPageLoader.service(): encoding=\" + enc + \" requestEncoding=\" + rnc + \" defaultEncoding=\" + dnc);\n                }\n                res.getOutputStream().write(result);\n            }        \n        } catch (Throwable t) {\n            if (DEBUG > 0) {\n                t.printStackTrace(System.err);\n            }\n            throw new ServletException(\"Error in CmsXmlPageLoader while processing \" + cms.readAbsolutePath(file), t);       \n        } finally {\n            // restore the context settings\n            cms_req.setOriginalRequest(originalreq);\n            cms.getRequestContext().setEncoding(rnc);\n        \n            if (DEBUG > 1) {\n                System.err.println(\"CmsXmlPageLoader.service(): Encodig reset to \" + cms.getRequestContext().getEncoding());\n                System.err.println(\"CmsXmlPageLoader.service(): Uri reset to \" + cms.getRequestContext().getUri());\n            }\n        }\n    }","id":13997,"modified_method":"/**\n     * @see org.opencms.loader.I_CmsResourceLoader#service(com.opencms.file.CmsObject, com.opencms.file.CmsResource, javax.servlet.ServletRequest, javax.servlet.ServletResponse)\n     */\n    public void service(CmsObject cms, CmsResource file, ServletRequest req, ServletResponse res) throws ServletException, IOException {\n        \n        String absolutePath = cms.readAbsolutePath(file);\n        try {\n            // get the requested page\n            CmsXmlPage page = new CmsXmlPage().read(cms, cms.readFile(absolutePath));\n            \n            // get the element selector\n            // TODO: Check this, maybe use a request attribute instead of a parameter\n            String elementName = req.getParameter(C_TEMPLATE_ELEMENT);\n            \n            // check the current locales\n            String localeProp = OpenCms.getUserDefaultLanguage();\n            \n            // get the appropriate content and convert it to bytes\n            byte[] result = page.getContent(cms, elementName, localeProp).getBytes(); \n            \n            // append the result to the output stream\n            if (result != null) {\n                res.getOutputStream().write(result);\n            }        \n        } catch (CmsException e) {\n            if (OpenCms.getLog(this).isErrorEnabled()) {\n                OpenCms.getLog(this).error(\"Error in CmsXmlPageLoader while processing \" + absolutePath, e);\n            }\n            throw new ServletException(\"Error in CmsXmlPageLoader while processing \" + absolutePath, e);       \n        }\n    }","commit_id":"1bb2fee26ee7c2f7d424d98823500b1abfa5e8a4","url":"https://github.com/alkacon/opencms-core"},{"original_method":"public JavaFileAccess compileFacetConfiguration(final Grammar grammar) {\n    TypeReference _facetConfiguration = this._ideaPluginClassNames.getFacetConfiguration(grammar);\n    final XtendFileAccess file = this.fileAccessFactory.createXtendFile(_facetConfiguration);\n    TypeReference _typeRef = TypeReference.typeRef(\"com.intellij.openapi.components.PersistentStateComponent\");\n    file.importType(_typeRef);\n    TypeReference _typeRef_1 = TypeReference.typeRef(\"com.intellij.openapi.components.State\");\n    file.importType(_typeRef_1);\n    TypeReference _typeRef_2 = TypeReference.typeRef(\"com.intellij.openapi.components.Storage\");\n    file.importType(_typeRef_2);\n    TypeReference _typeRef_3 = TypeReference.typeRef(\"com.intellij.openapi.components.StoragePathMacros\");\n    file.importType(_typeRef_3);\n    TypeReference _typeRef_4 = TypeReference.typeRef(\"com.intellij.openapi.components.StorageScheme\");\n    file.importType(_typeRef_4);\n    boolean _inheritsXbase = this._xbaseUsageDetector.inheritsXbase(grammar);\n    if (_inheritsXbase) {\n      TypeReference _typeRef_5 = TypeReference.typeRef(\"org.eclipse.xtext.xbase.idea.facet.XbaseFacetConfiguration\");\n      file.importType(_typeRef_5);\n      TypeReference _typeRef_6 = TypeReference.typeRef(\"org.eclipse.xtext.xbase.idea.facet.XbaseGeneratorConfigurationState\");\n      file.importType(_typeRef_6);\n    } else {\n      TypeReference _typeRef_7 = TypeReference.typeRef(\"org.eclipse.xtext.idea.facet.AbstractFacetConfiguration\");\n      file.importType(_typeRef_7);\n      TypeReference _typeRef_8 = TypeReference.typeRef(\"org.eclipse.xtext.idea.facet.GeneratorConfigurationState\");\n      file.importType(_typeRef_8);\n    }\n    StringConcatenationClient _client = new StringConcatenationClient() {\n      @Override\n      protected void appendTo(StringConcatenationClient.TargetStringConcatenation _builder) {\n        _builder.append(\"@State(name = \\\"\");\n        String _name = grammar.getName();\n        _builder.append(_name, \"\");\n        _builder.append(\"Generator\\\", storages = #[\");\n        _builder.newLineIfNotEmpty();\n        _builder.append(\"\\t\\t\");\n        _builder.append(\"@Storage(id = \\\"default\\\", file = StoragePathMacros.PROJECT_FILE),\");\n        _builder.newLine();\n        _builder.append(\"\\t\\t\");\n        _builder.append(\"@Storage(id = \\\"dir\\\", file = StoragePathMacros.PROJECT_CONFIG_DIR\");\n        _builder.newLine();\n        _builder.append(\"\\t\\t\\t\\t\");\n        _builder.append(\"+ \\\"/\");\n        String _simpleName = IdeaPluginGenerator.this._ideaPluginExtension.getSimpleName(grammar);\n        _builder.append(_simpleName, \"\\t\\t\\t\\t\");\n        _builder.append(\"GeneratorConfig.xml\\\", scheme = StorageScheme.DIRECTORY_BASED)])\");\n        _builder.newLineIfNotEmpty();\n        _builder.append(\"class \");\n        TypeReference _facetConfiguration = IdeaPluginGenerator.this._ideaPluginClassNames.getFacetConfiguration(grammar);\n        String _simpleName_1 = _facetConfiguration.getSimpleName();\n        _builder.append(_simpleName_1, \"\");\n        _builder.append(\" extends \");\n        {\n          boolean _inheritsXbase = IdeaPluginGenerator.this._xbaseUsageDetector.inheritsXbase(grammar);\n          if (_inheritsXbase) {\n            _builder.append(\"XbaseFacetConfiguration implements PersistentStateComponent<XbaseGeneratorConfigurationState>\");\n          } else {\n            _builder.append(\"AbstractFacetConfiguration implements PersistentStateComponent<GeneratorConfigurationState>\");\n          }\n        }\n        _builder.append(\"{\");\n        _builder.newLineIfNotEmpty();\n        _builder.newLine();\n        _builder.append(\"}\");\n        _builder.newLine();\n      }\n    };\n    file.setContent(_client);\n    return file;\n  }","id":13998,"modified_method":"public JavaFileAccess compileFacetConfiguration(final Grammar grammar) {\n    JavaFileAccess _xifexpression = null;\n    boolean _isGenerateXtendStub = this.isGenerateXtendStub();\n    if (_isGenerateXtendStub) {\n      TypeReference _facetConfiguration = this._ideaPluginClassNames.getFacetConfiguration(grammar);\n      _xifexpression = this.fileAccessFactory.createXtendFile(_facetConfiguration);\n    } else {\n      TypeReference _facetConfiguration_1 = this._ideaPluginClassNames.getFacetConfiguration(grammar);\n      _xifexpression = this.fileAccessFactory.createJavaFile(_facetConfiguration_1);\n    }\n    final JavaFileAccess file = _xifexpression;\n    TypeReference _typeRef = TypeReference.typeRef(\"com.intellij.openapi.components.PersistentStateComponent\");\n    file.importType(_typeRef);\n    TypeReference _typeRef_1 = TypeReference.typeRef(\"com.intellij.openapi.components.State\");\n    file.importType(_typeRef_1);\n    TypeReference _typeRef_2 = TypeReference.typeRef(\"com.intellij.openapi.components.Storage\");\n    file.importType(_typeRef_2);\n    TypeReference _typeRef_3 = TypeReference.typeRef(\"com.intellij.openapi.components.StoragePathMacros\");\n    file.importType(_typeRef_3);\n    TypeReference _typeRef_4 = TypeReference.typeRef(\"com.intellij.openapi.components.StorageScheme\");\n    file.importType(_typeRef_4);\n    boolean _inheritsXbase = this._xbaseUsageDetector.inheritsXbase(grammar);\n    if (_inheritsXbase) {\n      TypeReference _typeRef_5 = TypeReference.typeRef(\"org.eclipse.xtext.xbase.idea.facet.XbaseFacetConfiguration\");\n      file.importType(_typeRef_5);\n      TypeReference _typeRef_6 = TypeReference.typeRef(\"org.eclipse.xtext.xbase.idea.facet.XbaseGeneratorConfigurationState\");\n      file.importType(_typeRef_6);\n    } else {\n      TypeReference _typeRef_7 = TypeReference.typeRef(\"org.eclipse.xtext.idea.facet.AbstractFacetConfiguration\");\n      file.importType(_typeRef_7);\n      TypeReference _typeRef_8 = TypeReference.typeRef(\"org.eclipse.xtext.idea.facet.GeneratorConfigurationState\");\n      file.importType(_typeRef_8);\n    }\n    StringConcatenationClient _client = new StringConcatenationClient() {\n      @Override\n      protected void appendTo(StringConcatenationClient.TargetStringConcatenation _builder) {\n        {\n          boolean _isGenerateXtendStub = IdeaPluginGenerator.this.isGenerateXtendStub();\n          if (_isGenerateXtendStub) {\n            _builder.append(\"@State(name = \\\"\");\n            String _name = grammar.getName();\n            _builder.append(_name, \"\");\n            _builder.append(\"Generator\\\", storages = #[\");\n            _builder.newLineIfNotEmpty();\n            _builder.append(\"\\t\\t\");\n            _builder.append(\"@Storage(id = \\\"default\\\", file = StoragePathMacros.PROJECT_FILE),\");\n            _builder.newLine();\n            _builder.append(\"\\t\\t\");\n            _builder.append(\"@Storage(id = \\\"dir\\\", file = StoragePathMacros.PROJECT_CONFIG_DIR\");\n            _builder.newLine();\n            _builder.append(\"\\t\\t\\t\\t\");\n            _builder.append(\"+ \\\"/\");\n            String _simpleName = IdeaPluginGenerator.this._ideaPluginExtension.getSimpleName(grammar);\n            _builder.append(_simpleName, \"\\t\\t\\t\\t\");\n            _builder.append(\"GeneratorConfig.xml\\\", scheme = StorageScheme.DIRECTORY_BASED)])\");\n            _builder.newLineIfNotEmpty();\n          } else {\n            _builder.append(\"@State(name = \\\"\");\n            String _name_1 = grammar.getName();\n            _builder.append(_name_1, \"\");\n            _builder.append(\"Generator\\\", storages = {\");\n            _builder.newLineIfNotEmpty();\n            _builder.append(\"\\t\\t\");\n            _builder.append(\"@Storage(id = \\\"default\\\", file = StoragePathMacros.PROJECT_FILE),\");\n            _builder.newLine();\n            _builder.append(\"\\t\\t\");\n            _builder.append(\"@Storage(id = \\\"dir\\\", file = StoragePathMacros.PROJECT_CONFIG_DIR\");\n            _builder.newLine();\n            _builder.append(\"\\t\\t\\t\\t\");\n            _builder.append(\"+ \\\"/\");\n            String _simpleName_1 = IdeaPluginGenerator.this._ideaPluginExtension.getSimpleName(grammar);\n            _builder.append(_simpleName_1, \"\\t\\t\\t\\t\");\n            _builder.append(\"GeneratorConfig.xml\\\", scheme = StorageScheme.DIRECTORY_BASED)})\");\n            _builder.newLineIfNotEmpty();\n          }\n        }\n        {\n          boolean _isGenerateXtendStub_1 = IdeaPluginGenerator.this.isGenerateXtendStub();\n          boolean _not = (!_isGenerateXtendStub_1);\n          if (_not) {\n            _builder.append(\"public\");\n          }\n        }\n        _builder.append(\" class \");\n        TypeReference _facetConfiguration = IdeaPluginGenerator.this._ideaPluginClassNames.getFacetConfiguration(grammar);\n        String _simpleName_2 = _facetConfiguration.getSimpleName();\n        _builder.append(_simpleName_2, \"\");\n        _builder.append(\" extends \");\n        {\n          boolean _inheritsXbase = IdeaPluginGenerator.this._xbaseUsageDetector.inheritsXbase(grammar);\n          if (_inheritsXbase) {\n            _builder.append(\"XbaseFacetConfiguration implements PersistentStateComponent<XbaseGeneratorConfigurationState>\");\n          } else {\n            _builder.append(\"AbstractFacetConfiguration implements PersistentStateComponent<GeneratorConfigurationState>\");\n          }\n        }\n        _builder.append(\"{\");\n        _builder.newLineIfNotEmpty();\n        _builder.newLine();\n        _builder.append(\"}\");\n        _builder.newLine();\n      }\n    };\n    file.setContent(_client);\n    return file;\n  }","commit_id":"55dbda2f837decac21387c918b8ac40b34944364","url":"https://github.com/eclipse/xtext"},{"original_method":"public XtendFileAccess compileIdeaSetup(final Grammar grammar) {\n    TypeReference _ideaSetup = this._ideaPluginClassNames.getIdeaSetup(grammar);\n    StringConcatenationClient _client = new StringConcatenationClient() {\n      @Override\n      protected void appendTo(StringConcatenationClient.TargetStringConcatenation _builder) {\n        _builder.append(\"class \");\n        TypeReference _ideaSetup = IdeaPluginGenerator.this._ideaPluginClassNames.getIdeaSetup(grammar);\n        String _simpleName = _ideaSetup.getSimpleName();\n        _builder.append(_simpleName, \"\");\n        _builder.append(\" implements \");\n        _builder.append(ISetup.class, \"\");\n        _builder.append(\" {\");\n        _builder.newLineIfNotEmpty();\n        _builder.newLine();\n        _builder.append(\"\\t\");\n        _builder.append(\"override createInjectorAndDoEMFRegistration() {\");\n        _builder.newLine();\n        _builder.append(\"\\t\\t\");\n        TypeReference _typeRef = TypeReference.typeRef(\"org.eclipse.xtext.idea.extensions.EcoreGlobalRegistries\");\n        _builder.append(_typeRef, \"\\t\\t\");\n        _builder.append(\".ensureInitialized\");\n        _builder.newLineIfNotEmpty();\n        _builder.append(\"\\t\\t\");\n        _builder.append(\"new \");\n        TypeReference _ideaStandaloneSetup = IdeaPluginGenerator.this._xtextGeneratorNaming.getIdeaStandaloneSetup(grammar);\n        _builder.append(_ideaStandaloneSetup, \"\\t\\t\");\n        _builder.append(\"().createInjector\");\n        _builder.newLineIfNotEmpty();\n        _builder.append(\"\\t\");\n        _builder.append(\"}\");\n        _builder.newLine();\n        _builder.newLine();\n        _builder.append(\"}\");\n        _builder.newLine();\n      }\n    };\n    return this.fileAccessFactory.createXtendFile(_ideaSetup, _client);\n  }","id":13999,"modified_method":"public JavaFileAccess compileIdeaSetup(final Grammar grammar) {\n    JavaFileAccess _xifexpression = null;\n    boolean _isGenerateXtendStub = this.isGenerateXtendStub();\n    if (_isGenerateXtendStub) {\n      TypeReference _ideaSetup = this._ideaPluginClassNames.getIdeaSetup(grammar);\n      StringConcatenationClient _client = new StringConcatenationClient() {\n        @Override\n        protected void appendTo(StringConcatenationClient.TargetStringConcatenation _builder) {\n          _builder.append(\"class \");\n          TypeReference _ideaSetup = IdeaPluginGenerator.this._ideaPluginClassNames.getIdeaSetup(grammar);\n          String _simpleName = _ideaSetup.getSimpleName();\n          _builder.append(_simpleName, \"\");\n          _builder.append(\" implements \");\n          _builder.append(ISetup.class, \"\");\n          _builder.append(\" {\");\n          _builder.newLineIfNotEmpty();\n          _builder.newLine();\n          _builder.append(\"\\t\");\n          _builder.append(\"override createInjectorAndDoEMFRegistration() {\");\n          _builder.newLine();\n          _builder.append(\"\\t\\t\");\n          TypeReference _typeRef = TypeReference.typeRef(\"org.eclipse.xtext.idea.extensions.EcoreGlobalRegistries\");\n          _builder.append(_typeRef, \"\\t\\t\");\n          _builder.append(\".ensureInitialized\");\n          _builder.newLineIfNotEmpty();\n          _builder.append(\"\\t\\t\");\n          _builder.append(\"new \");\n          TypeReference _ideaStandaloneSetup = IdeaPluginGenerator.this._xtextGeneratorNaming.getIdeaStandaloneSetup(grammar);\n          _builder.append(_ideaStandaloneSetup, \"\\t\\t\");\n          _builder.append(\"().createInjector\");\n          _builder.newLineIfNotEmpty();\n          _builder.append(\"\\t\");\n          _builder.append(\"}\");\n          _builder.newLine();\n          _builder.newLine();\n          _builder.append(\"}\");\n          _builder.newLine();\n        }\n      };\n      _xifexpression = this.fileAccessFactory.createXtendFile(_ideaSetup, _client);\n    } else {\n      TypeReference _ideaSetup_1 = this._ideaPluginClassNames.getIdeaSetup(grammar);\n      StringConcatenationClient _client_1 = new StringConcatenationClient() {\n        @Override\n        protected void appendTo(StringConcatenationClient.TargetStringConcatenation _builder) {\n          _builder.append(\"public class \");\n          TypeReference _ideaSetup = IdeaPluginGenerator.this._ideaPluginClassNames.getIdeaSetup(grammar);\n          String _simpleName = _ideaSetup.getSimpleName();\n          _builder.append(_simpleName, \"\");\n          _builder.append(\" implements \");\n          _builder.append(ISetup.class, \"\");\n          _builder.append(\" {\");\n          _builder.newLineIfNotEmpty();\n          _builder.newLine();\n          _builder.append(\"\\t\");\n          _builder.append(\"@Override\");\n          _builder.newLine();\n          _builder.append(\"\\t\");\n          _builder.append(\"public \");\n          _builder.append(Injector.class, \"\\t\");\n          _builder.append(\" createInjectorAndDoEMFRegistration() {\");\n          _builder.newLineIfNotEmpty();\n          _builder.append(\"\\t\\t\");\n          TypeReference _typeRef = TypeReference.typeRef(\"org.eclipse.xtext.idea.extensions.EcoreGlobalRegistries\");\n          _builder.append(_typeRef, \"\\t\\t\");\n          _builder.append(\".ensureInitialized();\");\n          _builder.newLineIfNotEmpty();\n          _builder.append(\"\\t\\t\");\n          _builder.append(\"return new \");\n          TypeReference _ideaStandaloneSetup = IdeaPluginGenerator.this._xtextGeneratorNaming.getIdeaStandaloneSetup(grammar);\n          _builder.append(_ideaStandaloneSetup, \"\\t\\t\");\n          _builder.append(\"().createInjector();\");\n          _builder.newLineIfNotEmpty();\n          _builder.append(\"\\t\");\n          _builder.append(\"}\");\n          _builder.newLine();\n          _builder.newLine();\n          _builder.append(\"}\");\n          _builder.newLine();\n        }\n      };\n      _xifexpression = this.fileAccessFactory.createJavaFile(_ideaSetup_1, _client_1);\n    }\n    return _xifexpression;\n  }","commit_id":"55dbda2f837decac21387c918b8ac40b34944364","url":"https://github.com/eclipse/xtext"}]