[{"original_method":"public void testAddPageWCL() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Web Content List Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"save\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Web Content List Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content List Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":53000,"modified_method":"public void testAddPageWCL() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Web Content List Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Web Content List Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content List Test Page\",\n\t\t\tRuntimeVariables.replace(\"Web Content List Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"2630e9b8eddd0468a8be3f982f3121dfa1688d63","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletWCL() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Web Content List Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content List Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"w\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@title='Web Content List']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Web Content List']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":53001,"modified_method":"public void testAddPortletWCL() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Web Content List Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content List Test Page\",\n\t\t\tRuntimeVariables.replace(\"Web Content List Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@title='Web Content List']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Web Content List']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Web Content List\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"2630e9b8eddd0468a8be3f982f3121dfa1688d63","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWebContent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Web Content\"),\n\t\t\tselenium.getText(\"//div[2]/div[2]/div[2]/ul/li[3]/a\"));\n\t\tselenium.clickAt(\"//div[2]/div[2]/div[2]/ul/li[3]/a\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//div/span/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//div/span/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Basic Web Content\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_15_title\", RuntimeVariables.replace(\"Web Content Test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.selectFrame(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"This is a test web content.\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_15_type\",\n\t\t\tRuntimeVariables.replace(\"label=Announcements\"));\n\t\tselenium.type(\"_15_description\",\n\t\t\tRuntimeVariables.replace(\"Test Description.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Web Content Test\"));\n\t}","id":53002,"modified_method":"public void testAddWebContent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add']\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_15_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Web Content Name\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.selectFrame(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.type(\"//body\", RuntimeVariables.replace(\"Web Content Content\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='_15_abstractLink']\",\n\t\t\tRuntimeVariables.replace(\"Abstract\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//textarea[@id='_15_description_en_US']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_15_description_en_US']\",\n\t\t\tRuntimeVariables.replace(\"WCD Web Content Summary\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='_15_categorizationLink']\",\n\t\t\tRuntimeVariables.replace(\"Categorization\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select[@id='_15_type']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_15_type']\",\n\t\t\tRuntimeVariables.replace(\"Announcements\"));\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Web Content Name\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t}","commit_id":"2630e9b8eddd0468a8be3f982f3121dfa1688d63","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletDisplayGuest() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Web Content List Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content List Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Please configure this portlet to make it visible to all users.\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_groupId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_groupId\", RuntimeVariables.replace(\"label=Liferay\"));\n\t\tselenium.select(\"_86_type\",\n\t\t\tRuntimeVariables.replace(\"label=Announcements\"));\n\t\tselenium.select(\"_86_pageURL\", RuntimeVariables.replace(\"label=Normal\"));\n\t\tselenium.select(\"_86_pageDelta\", RuntimeVariables.replace(\"label=10\"));\n\t\tselenium.select(\"_86_orderByCol\",\n\t\t\tRuntimeVariables.replace(\"label=Display Date\"));\n\t\tselenium.select(\"_86_orderByType\",\n\t\t\tRuntimeVariables.replace(\"label=Ascending\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Web Content List Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content List Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Web Content Test\"));\n\t}","id":53003,"modified_method":"public void testConfigurePortletDisplayGuest() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Web Content List Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content List Test Page\",\n\t\t\tRuntimeVariables.replace(\"Web Content List Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Please configure this portlet to make it visible to all users.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='portlet-configuration portlet-msg-info']/a\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select[@id='_86_groupId']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"//select[@id='_86_groupId']\",\n\t\t\tRuntimeVariables.replace(\"Liferay\"));\n\t\tselenium.select(\"//select[@id='_86_type']\",\n\t\t\tRuntimeVariables.replace(\"Announcements\"));\n\t\tselenium.select(\"//select[@id='_86_pageUrl']\",\n\t\t\tRuntimeVariables.replace(\"Normal\"));\n\t\tselenium.select(\"//select[@id='_86_pageDelta']\",\n\t\t\tRuntimeVariables.replace(\"10\"));\n\t\tselenium.select(\"//select[@id='_86_orderByCol']\",\n\t\t\tRuntimeVariables.replace(\"Display Date\"));\n\t\tselenium.select(\"//select[@id='_86_orderByType']\",\n\t\t\tRuntimeVariables.replace(\"Ascending\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Web Content List Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content List Test Page\",\n\t\t\tRuntimeVariables.replace(\"Web Content List Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Web Content Name\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t}","commit_id":"2630e9b8eddd0468a8be3f982f3121dfa1688d63","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":53004,"modified_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"2630e9b8eddd0468a8be3f982f3121dfa1688d63","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownWebContent() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Web Content\"),\n\t\t\t\t\tselenium.getText(\"//div[2]/div[2]/div[2]/ul/li[3]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[2]/div[2]/div[2]/ul/li[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean webContentPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"_15_rowIds\");\n\n\t\t\t\tif (!webContentPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_15_allRowIds\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected web content[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\t\t\t\tselenium.clickAt(\"link=Templates\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean templatePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"_15_rowIds\");\n\n\t\t\t\tif (!templatePresent) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_15_allRowIds\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected templates[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"link=Structures\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean structurePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"_15_rowIds\");\n\n\t\t\t\tif (!structurePresent) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_15_allRowIds\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected structures[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":53005,"modified_method":"public void testTearDownWebContent() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean webContentPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"_15_rowIds\");\n\n\t\t\t\tif (!webContentPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_15_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select All\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected web content[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\t\t\t\tselenium.clickAt(\"link=Structures\",\n\t\t\t\t\tRuntimeVariables.replace(\"Structures\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean structurePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"_15_rowIds\");\n\n\t\t\t\tif (!structurePresent) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_15_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select All\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected structures[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"link=Templates\",\n\t\t\t\t\tRuntimeVariables.replace(\"Templates\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean templatePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"_15_rowIds\");\n\n\t\t\t\tif (!templatePresent) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_15_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select All\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected templates[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"2630e9b8eddd0468a8be3f982f3121dfa1688d63","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTest(ViewWebContentTests.suite());\n\n\t\treturn testSuite;\n\t}","id":53006,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTest(ViewWCWebContentWCLTests.suite());\n\n\t\treturn testSuite;\n\t}","commit_id":"2630e9b8eddd0468a8be3f982f3121dfa1688d63","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTranslate() throws Exception {\n\t\tselenium.select(\"_26_id\", \"label=English to Chinese (China)\");\n\t\tselenium.type(\"_26_text\",\n\t\t\t\"My name is Liferay Translator, fluent in over 6 million forms of communication.\");\n\t\tselenium.click(\"//input[@value='Translate']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"\\u6211\\u7684\\u540d\\u5b57\\u662fLiferay \\u8bd1\\u8005, \\u6d41\\u5229\\u5b8c\\u5168\\u6210\\u529f6 \\u901a\\u4fe1\\u7684\\u767e\\u4e07\\u4e2a\\u5f62\\u5f0f\\u3002 \"));\n\t\tselenium.select(\"_26_id\", \"label=English to Chinese (Taiwan)\");\n\t\tselenium.click(\"//input[@value='Translate']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"\\u6211\\u7684\\u540d\\u5b57\\u662fLiferay \\u8b6f\\u8005, \\u6d41\\u5229\\u5b8c\\u5168\\u6210\\u529f6 \\u901a\\u4fe1\\u7684\\u767e\\u842c\\u500b\\u5f62\\u5f0f\\u3002 \"));\n\t\tselenium.select(\"_26_id\", \"label=English to Dutch\");\n\t\tselenium.click(\"//input[@value='Translate']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"Mijn naam is Vertaler Liferay, vloeiend in meer dan 6 miljoen vormen van mededeling. \"));\n\t\tselenium.select(\"_26_id\", \"label=English to French\");\n\t\tselenium.click(\"//input[@value='Translate']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"Mon nom est traducteur de Liferay, fluent dans plus de 6 millions de formes de communication. \"));\n\t\tselenium.select(\"_26_id\", \"label=English to German\");\n\t\tselenium.click(\"//input[@value='Translate']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"Mein Name ist der Liferay \\u00dcbersetzer, der innen \\u00fcber 6 Million Formen Kommunikation flie\\u00dfend ist. \"));\n\t\tselenium.select(\"_26_id\", \"label=English to Italian\");\n\t\tselenium.click(\"//input[@value='Translate']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"Il mio nome \\u00e8 traduttore di Liferay, fluente dentro oltre 6 milione forme della comunicazione. \"));\n\t\tselenium.select(\"_26_id\", \"label=English to Japanese\");\n\t\tselenium.type(\"_26_text\",\n\t\t\t\"My name is JR Skywalker, fluent in over 6 million forms of communication.\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"\\u79c1\\u306e\\u540d\\u524d\\u306f\\u30b3\\u30df\\u30e5\\u30cb\\u30b1\\u30fc\\u30b7\\u30e7\\u30f3\\u306e6,000,000 \\u306e\\u5f62\\u614b\\u306b\\u6d41\\u66a2\\u306aJR Skywalker \\u3067\\u3042\\u308b\\u3002 \"));\n\t\tselenium.select(\"_26_id\", \"label=English to Korean\");\n\t\tselenium.type(\"_26_text\",\n\t\t\t\"My name is Liferay Translator, fluent in over 6 million forms of communication.\");\n\t\tselenium.click(\"//input[@value='Translate']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"\\ub098\\uc758 \\uc774\\ub984\\uc740 \\ucee4\\ubba4\\ub2c8\\ucf00\\uc774\\uc158\\uc758 6\\ubc31\\ub9cc\\uac1c\\uc758 \\ubaa8\\uc591\\uc5d0 \\uc548\\uc73c\\ub85c \\uc720\\ucc3d\\ud55cLiferay\\ud1b5\\uc5ed \\uc774\\ub2e4. \"));\n\t\tselenium.select(\"_26_id\", \"label=English to Portuguese\");\n\t\tselenium.click(\"//input[@value='Translate']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"Meu nome \\u00e9 tradutor de Liferay, fluent dentro sobre 6 milh\\u00e3o formul\\u00e1rios de uma comunica\\u00e7\\u00e3o. \"));\n\t\tselenium.select(\"_26_id\", \"label=English to Spanish\");\n\t\tselenium.click(\"//input[@value='Translate']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"Mi nombre es traductor de Liferay, fluido adentro sobre 6 millones de formas de comunicaci\\u00f3n. \"));\n\t\tselenium.select(\"_26_id\", \"label=Chinese (China) to English\");\n\t\tselenium.type(\"_26_text\",\n\t\t\t\"\\u6211\\u7684\\u540d\\u5b57\\u662fMike Vader \\u8bd1\\u8005, \\u6d41\\u5229\\u5b8c\\u5168\\u6210\\u529f6 \\u901a\\u4fe1\\u7684\\u767e\\u4e07\\u4e2a\\u5f62\\u5f0f\\u3002 \");\n\t\tselenium.click(\"//input[@value='Translate']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"My name is Mike the Vader translator, fluent completely successful 6 correspondences million forms. \"));\n\t\tselenium.select(\"_26_id\", \"label=Chinese (Taiwan) to English\");\n\t\tselenium.type(\"_26_text\",\n\t\t\t\"\\u6211\\u7684\\u540d\\u5b57\\u662fLiferay \\u8b6f\\u8005, \\u6d41\\u5229\\u5b8c\\u5168\\u6210\\u529f6 \\u901a\\u4fe1\\u7684\\u767e\\u842c\\u500b\\u5f62\\u5f0f\\u3002 \");\n\t\tselenium.click(\"//input[@value='Translate']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"My name is the Liferay translator, fluent completely successful 6 correspondences million forms. \"));\n\t\tselenium.select(\"_26_id\", \"label=Dutch to English\");\n\t\tselenium.click(\"//input[@value='Translate']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_26_text\",\n\t\t\t\"Mijn naam is Vertaler Liferay, vloeiend in meer dan 6 miljoen vormen van mededeling. \");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"My name is translator Liferay, fluently in more than 6 millions forms of communication. \"));\n\t\tselenium.select(\"_26_id\", \"label=French to English\");\n\t\tselenium.type(\"_26_text\",\n\t\t\t\"Mon nom est traducteur de Liferay, fluent dans plus de 6 millions de formes de communication. \");\n\t\tselenium.click(\"//input[@value='Translate']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"My name is a translator of Liferay, flowing in more than 6 million forms of communication. \"));\n\t\tselenium.select(\"_26_id\", \"label=French to German\");\n\t\tselenium.click(\"//input[@value='Translate']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"Mein Name ist \\u00dcbersetzer von Liferay, flie\\u00dfender in mehr als 6 Millionen Kommunikationsformen. \"));\n\t\tselenium.select(\"_26_id\", \"label=German to English\");\n\t\tselenium.type(\"_26_text\",\n\t\t\t\"Mein Name ist \\u00dcbersetzer von Liferay, flie\\u00dfender in mehr als 6 Millionen Kommunikationsformen. \");\n\t\tselenium.click(\"//input[@value='Translate']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"My name is a translator more flowing from Liferay, into more than 6 million communication forms. \"));\n\t\tselenium.select(\"_26_id\", \"label=German to French\");\n\t\tselenium.click(\"//input[@value='Translate']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"Mon nom est un traducteur coulant des Liferay, sous plus de 6 millions de formes de communication. \"));\n\t\tselenium.select(\"_26_id\", \"label=Italian to English\");\n\t\tselenium.type(\"_26_text\",\n\t\t\t\"Il mio nome \\u00e8 traduttore di Liferay, fluente dentro oltre 6 milione forme della comunicazione. \");\n\t\tselenium.click(\"//input[@value='Translate']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"My name is translator of Liferay, flowing within beyond 6 million shapes the communication. \"));\n\t\tselenium.select(\"_26_id\", \"label=Japanese to English\");\n\t\tselenium.type(\"_26_text\",\n\t\t\t\"\\u79c1\\u306e\\u540d\\u524d\\u306f\\u30b3\\u30df\\u30e5\\u30cb\\u30b1\\u30fc\\u30b7\\u30e7\\u30f3\\u306e6,000,000 \\u306e\\u5f62\\u614b\\u306b\\u6d41\\u66a2\\u306aLiferay \\u306e\\u8a33\\u8005\\u3067\\u3042\\u308b\\u3002 \");\n\t\tselenium.click(\"//input[@value='Translate']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"My name is the translator of fluent Liferay in form of 6,000,000 of communication. \"));\n\t\tselenium.select(\"_26_id\", \"label=Korean to English\");\n\t\tselenium.type(\"_26_text\",\n\t\t\t\"\\ub098\\uc758 \\uc774\\ub984\\uc740 \\ucee4\\ubba4\\ub2c8\\ucf00\\uc774\\uc158\\uc758 6\\ubc31\\ub9cc\\uac1c\\uc758 \\ubaa8\\uc591\\uc5d0 \\uc548\\uc73c\\ub85c \\uc720\\ucc3d\\ud55cLiferay\\ud1b5\\uc5ed \\uc774\\ub2e4. \");\n\t\tselenium.click(\"//input[@value='Translate']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"My name is the Liferay interpretation which in 6000000 shapes of communication is fluent in inside. \"));\n\t\tselenium.select(\"_26_id\", \"label=Portuguese to English\");\n\t\tselenium.type(\"_26_text\",\n\t\t\t\"Meu nome \\u00e9 tradutor de Liferay, fluent dentro sobre 6 milh\\u00e3o formul\\u00e1rios de uma comunica\\u00e7\\u00e3o. \");\n\t\tselenium.click(\"//input[@value='Translate']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"My name is translating of Liferay, fluent inside on 6 million forms of a communication.\"));\n\t\tselenium.select(\"_26_id\", \"label=Spanish to English\");\n\t\tselenium.type(\"_26_text\",\n\t\t\t\"Mi nombre es traductor de Liferay, fluido adentro sobre 6 millones de formas de comunicaci\\u00f3n. \");\n\t\tselenium.click(\"//input[@value='Translate']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"My name is translator of Liferay, fluid inside on 6 million communication forms.\"));\n\t}","id":53007,"modified_method":"public void testTranslate() throws Exception {\n\t\tselenium.select(\"_26_id\", \"label=English to Chinese (China)\");\n\t\tselenium.type(\"_26_text\",\n\t\t\t\"My name is Liferay Translator, fluent in over 6 million forms of communication.\");\n\t\tselenium.click(\"//input[@value='Translate']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"\\u6211\\u7684\\u540d\\u5b57\\u662fLiferay \\u8bd1\\u8005, \\u6d41\\u5229\\u5b8c\\u5168\\u6210\\u529f6 \\u901a\\u4fe1\\u7684\\u767e\\u4e07\\u4e2a\\u5f62\\u5f0f\\u3002\"));\n\t\tselenium.select(\"_26_id\", \"label=English to Chinese (Taiwan)\");\n\t\tselenium.click(\"//input[@value='Translate']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"\\u6211\\u7684\\u540d\\u5b57\\u662fLiferay \\u8b6f\\u8005, \\u6d41\\u5229\\u5b8c\\u5168\\u6210\\u529f6 \\u901a\\u4fe1\\u7684\\u767e\\u842c\\u500b\\u5f62\\u5f0f\\u3002\"));\n\t\tselenium.select(\"_26_id\", \"label=English to Dutch\");\n\t\tselenium.click(\"//input[@value='Translate']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"Mijn naam is Vertaler Liferay, vloeiend in meer dan 6 miljoen vormen van mededeling.\"));\n\t\tselenium.select(\"_26_id\", \"label=English to French\");\n\t\tselenium.click(\"//input[@value='Translate']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"Mon nom est traducteur de Liferay, fluent dans plus de 6 millions de formes de communication.\"));\n\t\tselenium.select(\"_26_id\", \"label=English to German\");\n\t\tselenium.click(\"//input[@value='Translate']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"Mein Name ist der Liferay \\u00dcbersetzer, der innen \\u00fcber 6 Million Formen Kommunikation flie\\u00dfend ist.\"));\n\t\tselenium.select(\"_26_id\", \"label=English to Italian\");\n\t\tselenium.click(\"//input[@value='Translate']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"Il mio nome \\u00e8 traduttore di Liferay, fluente dentro oltre 6 milione forme della comunicazione.\"));\n\t\tselenium.select(\"_26_id\", \"label=English to Japanese\");\n\t\tselenium.type(\"_26_text\",\n\t\t\t\"My name is JR Skywalker, fluent in over 6 million forms of communication.\");\n\t\tselenium.click(\"//input[@value='Translate']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"\\u79c1\\u306e\\u540d\\u524d\\u306f\\u30b3\\u30df\\u30e5\\u30cb\\u30b1\\u30fc\\u30b7\\u30e7\\u30f3\\u306e6,000,000 \\u306e\\u5f62\\u614b\\u306b\\u6d41\\u66a2\\u306aJR Skywalker \\u3067\\u3042\\u308b\\u3002\"));\n\t\tselenium.select(\"_26_id\", \"label=English to Portuguese\");\n\t\tselenium.click(\"//input[@value='Translate']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"Meu nome \\u00e9 JR Skywalker, fluent dentro sobre 6 milh\\u00e3o formul\\u00e1rios de uma comunica\\u00e7\\u00e3o. \"));\n\t\tselenium.select(\"_26_id\", \"label=English to Spanish\");\n\t\tselenium.type(\"_26_text\",\n\t\t\t\"My name is Liferay Translator, fluent in over 6 million forms of communication.\");\n\t\tselenium.click(\"//input[@value='Translate']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"Mi nombre es traductor de Liferay, fluido adentro sobre 6 millones de formas de comunicaci\\u00f3n.\"));\n\t\tselenium.select(\"_26_id\", \"label=Chinese (China) to English\");\n\t\tselenium.type(\"_26_text\",\n\t\t\t\"\\u6211\\u7684\\u540d\\u5b57\\u662fMike Vader \\u8bd1\\u8005, \\u6d41\\u5229\\u5b8c\\u5168\\u6210\\u529f6 \\u901a\\u4fe1\\u7684\\u767e\\u4e07\\u4e2a\\u5f62\\u5f0f\\u3002\");\n\t\tselenium.click(\"//input[@value='Translate']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"My name is Mike the Vader translator, fluent completely successful 6 correspondences million forms.\"));\n\t\tselenium.select(\"_26_id\", \"label=Chinese (Taiwan) to English\");\n\t\tselenium.type(\"_26_text\",\n\t\t\t\"\\u6211\\u7684\\u540d\\u5b57\\u662fLiferay \\u8b6f\\u8005, \\u6d41\\u5229\\u5b8c\\u5168\\u6210\\u529f6 \\u901a\\u4fe1\\u7684\\u767e\\u842c\\u500b\\u5f62\\u5f0f\\u3002\");\n\t\tselenium.click(\"//input[@value='Translate']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"My name is the Liferay translator, fluent completely successful 6 correspondences million forms.\"));\n\t\tselenium.type(\"_26_text\",\n\t\t\t\"Mijn naam is Vertaler Liferay, vloeiend in meer dan 6 miljoen vormen van mededeling.\");\n\t\tselenium.select(\"_26_id\", \"label=Dutch to English\");\n\t\tselenium.click(\"//input[@value='Translate']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_26_text\",\n\t\t\t\"Mijn naam is Vertaler Liferay, vloeiend in meer dan 6 miljoen vormen van mededeling.\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"My name is translator Liferay, fluently in more than 6 millions forms of communication.\"));\n\t\tselenium.select(\"_26_id\", \"label=French to English\");\n\t\tselenium.type(\"_26_text\",\n\t\t\t\"Mon nom est traducteur de Liferay, fluent dans plus de 6 millions de formes de communication.\");\n\t\tselenium.click(\"//input[@value='Translate']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"My name is a translator of Liferay, flowing in more than 6 million forms of communication.\"));\n\t\tselenium.select(\"_26_id\", \"label=French to German\");\n\t\tselenium.click(\"//input[@value='Translate']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"Mein Name ist \\u00dcbersetzer von Liferay, flie\\u00dfender in mehr als 6 Millionen Kommunikationsformen.\"));\n\t\tselenium.select(\"_26_id\", \"label=German to English\");\n\t\tselenium.type(\"_26_text\",\n\t\t\t\"Mein Name ist \\u00dcbersetzer von Liferay, flie\\u00dfender in mehr als 6 Millionen Kommunikationsformen.\");\n\t\tselenium.click(\"//input[@value='Translate']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"My name is a translator more flowing from Liferay, into more than 6 million communication forms.\"));\n\t\tselenium.select(\"_26_id\", \"label=German to French\");\n\t\tselenium.click(\"//input[@value='Translate']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"Mon nom est un traducteur coulant des Liferay, sous plus de 6 millions de formes de communication.\"));\n\t\tselenium.select(\"_26_id\", \"label=Italian to English\");\n\t\tselenium.type(\"_26_text\",\n\t\t\t\"Il mio nome \\u00e8 traduttore di Liferay, fluente dentro oltre 6 milione forme della comunicazione.\");\n\t\tselenium.click(\"//input[@value='Translate']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"My name is translator of Liferay, flowing within beyond 6 million shapes the communication.\"));\n\t\tselenium.select(\"_26_id\", \"label=Japanese to English\");\n\t\tselenium.type(\"_26_text\",\n\t\t\t\"\\u79c1\\u306e\\u540d\\u524d\\u306f\\u30b3\\u30df\\u30e5\\u30cb\\u30b1\\u30fc\\u30b7\\u30e7\\u30f3\\u306e6,000,000 \\u306e\\u5f62\\u614b\\u306b\\u6d41\\u66a2\\u306aLiferay \\u306e\\u8a33\\u8005\\u3067\\u3042\\u308b\\u3002\");\n\t\tselenium.click(\"//input[@value='Translate']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"My name is the translator of fluent Liferay in form of 6,000,000 of communication.\"));\n\t\tselenium.select(\"_26_id\", \"label=Portuguese to English\");\n\t\tselenium.type(\"_26_text\",\n\t\t\t\"Meu nome \\u00e9 tradutor de Liferay, fluent dentro sobre 6 milh\\u00e3o formul\\u00e1rios de uma comunica\\u00e7\\u00e3o.\");\n\t\tselenium.click(\"//input[@value='Translate']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"My name is translating of Liferay, fluent inside on 6 million forms of a communication.\"));\n\t\tselenium.select(\"_26_id\", \"label=Spanish to English\");\n\t\tselenium.type(\"_26_text\",\n\t\t\t\"Mi nombre es traductor de Liferay, fluido adentro sobre 6 millones de formas de comunicaci\\u00f3n.\");\n\t\tselenium.click(\"//input[@value='Translate']\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"My name is translator of Liferay, fluid inside on 6 million communication forms.\"));\n\t}","commit_id":"f194ab3bced63535f4b786a8156e7476fce067fd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@After\n    public void tearDown() throws Exception {\n    }","id":53008,"modified_method":"@After\n    public void tearDown() throws Exception {\n        LOG.info(\"Calling the tearDown method \");\n    }","commit_id":"9863ac9e42640bbc6448ab9763643093a7ffb4ee","url":"https://github.com/apache/camel"},{"original_method":"public static Option[] configure(String feature) {\n        Option[] options = \n            new Option[]{\n                    KarafDistributionOption.karafDistributionConfiguration().frameworkUrl(\n                    maven().groupId(\"org.apache.karaf\").artifactId(\"apache-karaf\").type(\"tar.gz\").versionAsInProject())\n                    .karafVersion(\"2.3.6\").name(\"Apache Karaf\")\n                    .unpackDirectory(new File(\"target/paxexam/unpack/\")),\n                \n                KarafDistributionOption.keepRuntimeFolder(),\n                // override the config.properties (to fix pax-exam bug)\n                KarafDistributionOption.replaceConfigurationFile(\"etc/config.properties\", new File(\"src/test/resources/org/apache/camel/itest/karaf/config.properties\")),\n                KarafDistributionOption.replaceConfigurationFile(\"etc/custom.properties\", new File(\"src/test/resources/org/apache/camel/itest/karaf/custom.properties\")),\n                KarafDistributionOption.replaceConfigurationFile(\"etc/jre.properties\", new File(\"../../platforms/karaf/features/src/main/resources/config.properties\")),\n                // Add apache-snapshots repository\n                KarafDistributionOption.editConfigurationFilePut(\"etc/org.ops4j.pax.url.mvn.cfg\", \"org.ops4j.pax.url.mvn.repositories\",\n                    \"http://repo1.maven.org/maven2@id=central, \"\n                        + \"http://svn.apache.org/repos/asf/servicemix/m2-repo@id=servicemix, \"\n                        + \"http://repository.springsource.com/maven/bundles/release@id=springsource.release, \"\n                        + \"http://repository.springsource.com/maven/bundles/external@id=springsource.external, \"\n                        + \"http://oss.sonatype.org/content/repositories/releases/@id=sonatype, \"\n                        + \"http://repository.apache.org/content/groups/snapshots-group@snapshots@noreleases@id=apache\"),\n\n                    // we need INFO logging otherwise we cannot see what happens\n                KarafDistributionOption.logLevel(LogLevelOption.LogLevel.INFO),\n                 // install the cxf jaxb spec as the karaf doesn't provide it by default\n                KarafDistributionOption.features(getCamelKarafFeatureUrl(), \"cxf-jaxb\", \"camel-core\", \"camel-spring\", \"camel-\" + feature)};\n\n        return options;\n    }","id":53009,"modified_method":"public static Option[] configure(String feature) {\n        switchPlatformEncodingToUTF8();\n\n        Option[] options =\n                new Option[]{\n                        KarafDistributionOption.karafDistributionConfiguration()\n                                .frameworkUrl(maven().groupId(\"org.apache.karaf\").artifactId(\"apache-karaf\").type(\"tar.gz\").versionAsInProject())\n                                .karafVersion(\"2.3.6\")\n                                .name(\"Apache Karaf\")\n                                .useDeployFolder(false).unpackDirectory(new File(\"target/paxexam/unpack/\")),\n\n                        vmOption(\"-Dfile.encoding=UTF-8\"),\n\n                        KarafDistributionOption.keepRuntimeFolder(),\n                        // override the config.properties (to fix pax-exam bug)\n                        KarafDistributionOption.replaceConfigurationFile(\"etc/config.properties\", new File(\"src/test/resources/org/apache/camel/itest/karaf/config.properties\")),\n                        KarafDistributionOption.replaceConfigurationFile(\"etc/custom.properties\", new File(\"src/test/resources/org/apache/camel/itest/karaf/custom.properties\")),\n                        KarafDistributionOption.replaceConfigurationFile(\"etc/org.ops4j.pax.url.mvn.cfg\", new File(\"src/test/resources/org/apache/camel/itest/karaf/org.ops4j.pax.url.mvn.cfg\")),\n\n\n                        // we need INFO logging otherwise we cannot see what happens\n                        new LogLevelOption(LogLevelOption.LogLevel.INFO),\n\n\n                        // install the cxf jaxb spec as the karaf doesn't provide it by default\n                        KarafDistributionOption.features(getCamelKarafFeatureUrl(), \"cxf-jaxb\", \"camel-core\", \"camel-spring\", \"camel-\" + feature)};\n\n        return options;\n    }","commit_id":"9863ac9e42640bbc6448ab9763643093a7ffb4ee","url":"https://github.com/apache/camel"},{"original_method":"@Before\n    public void setUp() throws Exception {\n    }","id":53010,"modified_method":"@Before\n    public void setUp() throws Exception {\n        LOG.info(\"Calling the setUp method \");\n        LOG.info(\"The BundleContext is \" + bundleContext);\n        Thread.sleep(3000);\n    }","commit_id":"9863ac9e42640bbc6448ab9763643093a7ffb4ee","url":"https://github.com/apache/camel"},{"original_method":"public static UrlReference getCamelKarafFeatureUrl() {\n        return mavenBundle().\n                groupId(\"org.apache.camel.karaf\").\n                artifactId(\"apache-camel\").\n                classifier(\"features\").type(\"xml\").versionAsInProject();\n    }","id":53011,"modified_method":"public static UrlReference getCamelKarafFeatureUrl() {\n        return mavenBundle().\n                groupId(\"org.apache.camel.karaf\").\n                artifactId(\"apache-camel\").\n                versionAsInProject().type(\"xml/features\");\n    }","commit_id":"9863ac9e42640bbc6448ab9763643093a7ffb4ee","url":"https://github.com/apache/camel"},{"original_method":"protected CamelContext createCamelContext() throws Exception {\n        CamelContextFactory factory = new CamelContextFactory();\n        factory.setBundleContext(bundleContext);\n        LOG.info(\"Get the bundleContext is \" + bundleContext);\n        return factory.createContext();\n    }","id":53012,"modified_method":"protected CamelContext createCamelContext() throws Exception {\n        LOG.info(\"Creating the CamelContext ...\");\n        setThreadContextClassLoader();\n        CamelContextFactory factory = new CamelContextFactory();\n        factory.setBundleContext(bundleContext);\n        LOG.info(\"Get the bundleContext is \" + bundleContext);\n        return factory.createContext();\n    }","commit_id":"9863ac9e42640bbc6448ab9763643093a7ffb4ee","url":"https://github.com/apache/camel"},{"original_method":"public void testAddEvent1SO() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home1\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Calendar Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Calendar Test Page\",\n\t\t\tRuntimeVariables.replace(\"Calendar Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event1 Title\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__8_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__8_editor']/iframe\");\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event1 Description\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[1]/table/tbody/tr[3]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Calendar Event1 Title\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[3]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Anniversary\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[3]/td[3]/a\"));\n\t}","id":53013,"modified_method":"public void testAddEvent1SO() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home1\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Calendar Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Calendar Test Page\",\n\t\t\tRuntimeVariables.replace(\"Calendar Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event1 Title\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[@id='cke_48_label' and .='Source']\"));\n\t\tselenium.clickAt(\"//span[@id='cke_48_label' and .='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__8_editor']/textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//td[@id='cke_contents__8_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event1 Description\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[@id='cke_48_label' and .='Source']\"));\n\t\tselenium.clickAt(\"//span[@id='cke_48_label' and .='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__8_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__8_editor']/iframe\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Calendar Event1 Description\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\"//body\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[1]/table/tbody/tr[3]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Calendar Event1 Title\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[3]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Anniversary\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[3]/td[3]/a\"));\n\t}","commit_id":"2e976f6cd12a6d66e7216f62f0c788be86465e1d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddEvent1Site() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home1\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//li[contains(@class, 'selected')]/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Home\"),\n\t\t\tselenium.getText(\"//li[contains(@class, 'selected')]/a/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Sites\"),\n\t\t\tselenium.getText(\"//div[@id='so-sidebar']/h3\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select[@id='_5_WAR_soportlet_tabs1']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_5_WAR_soportlet_tabs1']\", \"All Sites\"));\n\t\tselenium.select(\"//select[@id='_5_WAR_soportlet_tabs1']\",\n\t\t\tRuntimeVariables.replace(\"All Sites\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@class='search-input']\"));\n\t\tselenium.type(\"//input[@class='search-input']\",\n\t\t\tRuntimeVariables.replace(\"Open\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Open Site Name\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//li[contains(@class, 'social-office-enabled')]/span[2]/a\"));\n\t\tselenium.clickAt(\"//li[contains(@class, 'social-office-enabled')]/span[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Open Site Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Open Site Name\"),\n\t\t\tselenium.getText(\"//div[@class='community-title']\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Calendar\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event1 Title\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__8_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__8_editor']/iframe\");\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event1 Description\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[1]/table/tbody/tr[3]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Calendar Event1 Title\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[3]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Anniversary\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[3]/td[3]/a\"));\n\t}","id":53014,"modified_method":"public void testAddEvent1Site() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home1\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//li[contains(@class, 'selected')]/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Home\"),\n\t\t\tselenium.getText(\"//li[contains(@class, 'selected')]/a/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Sites\"),\n\t\t\tselenium.getText(\"//div[@id='so-sidebar']/h3\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select[@id='_5_WAR_soportlet_tabs1']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_5_WAR_soportlet_tabs1']\", \"All Sites\"));\n\t\tselenium.select(\"//select[@id='_5_WAR_soportlet_tabs1']\",\n\t\t\tRuntimeVariables.replace(\"All Sites\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@class='search-input']\"));\n\t\tselenium.type(\"//input[@class='search-input']\",\n\t\t\tRuntimeVariables.replace(\"Open\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Open Site Name\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//li[contains(@class, 'social-office-enabled')]/span[2]/a\"));\n\t\tselenium.clickAt(\"//li[contains(@class, 'social-office-enabled')]/span[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Open Site Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Open Site Name\"),\n\t\t\tselenium.getText(\"//div[@class='community-title']\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Calendar\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event1 Title\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[@id='cke_48_label' and .='Source']\"));\n\t\tselenium.clickAt(\"//span[@id='cke_48_label' and .='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__8_editor']/textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//td[@id='cke_contents__8_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event1 Description\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[@id='cke_48_label' and .='Source']\"));\n\t\tselenium.clickAt(\"//span[@id='cke_48_label' and .='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__8_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__8_editor']/iframe\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Calendar Event1 Description\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\"//body\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[1]/table/tbody/tr[3]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Calendar Event1 Title\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[3]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Anniversary\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[3]/td[3]/a\"));\n\t}","commit_id":"2e976f6cd12a6d66e7216f62f0c788be86465e1d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddEvent2SO() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home1\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Calendar Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Calendar Test Page\",\n\t\t\tRuntimeVariables.replace(\"Calendar Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event2 Title\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__8_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__8_editor']/iframe\");\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event2 Description\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[1]/table/tbody/tr[3]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Calendar Event1 Title\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[3]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Anniversary\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[3]/td[3]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[1]/table/tbody/tr[4]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Calendar Event2 Title\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[4]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Anniversary\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[4]/td[3]/a\"));\n\t}","id":53015,"modified_method":"public void testAddEvent2SO() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home1\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Calendar Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Calendar Test Page\",\n\t\t\tRuntimeVariables.replace(\"Calendar Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event2 Title\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[@id='cke_48_label' and .='Source']\"));\n\t\tselenium.clickAt(\"//span[@id='cke_48_label' and .='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__8_editor']/textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//td[@id='cke_contents__8_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event2 Description\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[@id='cke_48_label' and .='Source']\"));\n\t\tselenium.clickAt(\"//span[@id='cke_48_label' and .='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__8_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__8_editor']/iframe\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Calendar Event2 Description\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\"//body\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[1]/table/tbody/tr[3]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Calendar Event1 Title\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[3]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Anniversary\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[3]/td[3]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[1]/table/tbody/tr[4]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Calendar Event2 Title\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[4]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Anniversary\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[4]/td[3]/a\"));\n\t}","commit_id":"2e976f6cd12a6d66e7216f62f0c788be86465e1d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddEvent2Site() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home1\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//li[contains(@class, 'selected')]/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Home\"),\n\t\t\tselenium.getText(\"//li[contains(@class, 'selected')]/a/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Sites\"),\n\t\t\tselenium.getText(\"//div[@id='so-sidebar']/h3\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select[@id='_5_WAR_soportlet_tabs1']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_5_WAR_soportlet_tabs1']\", \"All Sites\"));\n\t\tselenium.select(\"//select[@id='_5_WAR_soportlet_tabs1']\",\n\t\t\tRuntimeVariables.replace(\"All Sites\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@class='search-input']\"));\n\t\tselenium.type(\"//input[@class='search-input']\",\n\t\t\tRuntimeVariables.replace(\"Open\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Open Site Name\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//li[contains(@class, 'social-office-enabled')]/span[2]/a\"));\n\t\tselenium.clickAt(\"//li[contains(@class, 'social-office-enabled')]/span[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Open Site Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Open Site Name\"),\n\t\t\tselenium.getText(\"//div[@class='community-title']\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Calendar\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event2 Title\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__8_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__8_editor']/iframe\");\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event2 Description\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[1]/table/tbody/tr[3]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Calendar Event1 Title\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[3]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Anniversary\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[3]/td[3]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[1]/table/tbody/tr[4]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Calendar Event2 Title\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[4]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Anniversary\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[4]/td[3]/a\"));\n\t}","id":53016,"modified_method":"public void testAddEvent2Site() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home1\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//li[contains(@class, 'selected')]/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Home\"),\n\t\t\tselenium.getText(\"//li[contains(@class, 'selected')]/a/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Sites\"),\n\t\t\tselenium.getText(\"//div[@id='so-sidebar']/h3\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select[@id='_5_WAR_soportlet_tabs1']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_5_WAR_soportlet_tabs1']\", \"All Sites\"));\n\t\tselenium.select(\"//select[@id='_5_WAR_soportlet_tabs1']\",\n\t\t\tRuntimeVariables.replace(\"All Sites\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@class='search-input']\"));\n\t\tselenium.type(\"//input[@class='search-input']\",\n\t\t\tRuntimeVariables.replace(\"Open\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Open Site Name\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//li[contains(@class, 'social-office-enabled')]/span[2]/a\"));\n\t\tselenium.clickAt(\"//li[contains(@class, 'social-office-enabled')]/span[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Open Site Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Open Site Name\"),\n\t\t\tselenium.getText(\"//div[@class='community-title']\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Calendar\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event2 Title\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[@id='cke_48_label' and .='Source']\"));\n\t\tselenium.clickAt(\"//span[@id='cke_48_label' and .='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__8_editor']/textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//td[@id='cke_contents__8_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event2 Description\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[@id='cke_48_label' and .='Source']\"));\n\t\tselenium.clickAt(\"//span[@id='cke_48_label' and .='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__8_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__8_editor']/iframe\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Calendar Event2 Description\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\"//body\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[1]/table/tbody/tr[3]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Calendar Event1 Title\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[3]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Anniversary\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[3]/td[3]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[1]/table/tbody/tr[4]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Calendar Event2 Title\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[4]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Anniversary\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[4]/td[3]/a\"));\n\t}","commit_id":"2e976f6cd12a6d66e7216f62f0c788be86465e1d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddEvent3SO() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home1\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Calendar Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Calendar Test Page\",\n\t\t\tRuntimeVariables.replace(\"Calendar Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event3 Title\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__8_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__8_editor']/iframe\");\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event3 Description\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[1]/table/tbody/tr[3]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Calendar Event1 Title\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[3]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Anniversary\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[3]/td[3]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[1]/table/tbody/tr[4]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Calendar Event2 Title\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[4]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Anniversary\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[4]/td[3]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[1]/table/tbody/tr[5]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Calendar Event3 Title\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[5]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Anniversary\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[5]/td[3]/a\"));\n\t}","id":53017,"modified_method":"public void testAddEvent3SO() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home1\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Calendar Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Calendar Test Page\",\n\t\t\tRuntimeVariables.replace(\"Calendar Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event3 Title\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[@id='cke_48_label' and .='Source']\"));\n\t\tselenium.clickAt(\"//span[@id='cke_48_label' and .='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__8_editor']/textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//td[@id='cke_contents__8_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event3 Description\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[@id='cke_48_label' and .='Source']\"));\n\t\tselenium.clickAt(\"//span[@id='cke_48_label' and .='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__8_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__8_editor']/iframe\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Calendar Event3 Description\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\"//body\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[1]/table/tbody/tr[3]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Calendar Event1 Title\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[3]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Anniversary\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[3]/td[3]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[1]/table/tbody/tr[4]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Calendar Event2 Title\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[4]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Anniversary\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[4]/td[3]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[1]/table/tbody/tr[5]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Calendar Event3 Title\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[5]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Anniversary\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[5]/td[3]/a\"));\n\t}","commit_id":"2e976f6cd12a6d66e7216f62f0c788be86465e1d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddEvent3Site() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home1\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//li[contains(@class, 'selected')]/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Home\"),\n\t\t\tselenium.getText(\"//li[contains(@class, 'selected')]/a/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Sites\"),\n\t\t\tselenium.getText(\"//div[@id='so-sidebar']/h3\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select[@id='_5_WAR_soportlet_tabs1']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_5_WAR_soportlet_tabs1']\", \"All Sites\"));\n\t\tselenium.select(\"//select[@id='_5_WAR_soportlet_tabs1']\",\n\t\t\tRuntimeVariables.replace(\"All Sites\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@class='search-input']\"));\n\t\tselenium.type(\"//input[@class='search-input']\",\n\t\t\tRuntimeVariables.replace(\"Open\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Open Site Name\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//li[contains(@class, 'social-office-enabled')]/span[2]/a\"));\n\t\tselenium.clickAt(\"//li[contains(@class, 'social-office-enabled')]/span[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Open Site Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Open Site Name\"),\n\t\t\tselenium.getText(\"//div[@class='community-title']\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Calendar\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event3 Title\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__8_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__8_editor']/iframe\");\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event3 Description\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[1]/table/tbody/tr[3]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Calendar Event1 Title\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[3]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Anniversary\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[3]/td[3]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[1]/table/tbody/tr[4]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Calendar Event2 Title\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[4]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Anniversary\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[4]/td[3]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[1]/table/tbody/tr[5]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Calendar Event3 Title\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[5]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Anniversary\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[5]/td[3]/a\"));\n\t}","id":53018,"modified_method":"public void testAddEvent3Site() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home1\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//li[contains(@class, 'selected')]/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Home\"),\n\t\t\tselenium.getText(\"//li[contains(@class, 'selected')]/a/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Sites\"),\n\t\t\tselenium.getText(\"//div[@id='so-sidebar']/h3\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select[@id='_5_WAR_soportlet_tabs1']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_5_WAR_soportlet_tabs1']\", \"All Sites\"));\n\t\tselenium.select(\"//select[@id='_5_WAR_soportlet_tabs1']\",\n\t\t\tRuntimeVariables.replace(\"All Sites\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@class='search-input']\"));\n\t\tselenium.type(\"//input[@class='search-input']\",\n\t\t\tRuntimeVariables.replace(\"Open\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Open Site Name\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//li[contains(@class, 'social-office-enabled')]/span[2]/a\"));\n\t\tselenium.clickAt(\"//li[contains(@class, 'social-office-enabled')]/span[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Open Site Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Open Site Name\"),\n\t\t\tselenium.getText(\"//div[@class='community-title']\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Calendar\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event3 Title\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[@id='cke_48_label' and .='Source']\"));\n\t\tselenium.clickAt(\"//span[@id='cke_48_label' and .='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__8_editor']/textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//td[@id='cke_contents__8_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event3 Description\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[@id='cke_48_label' and .='Source']\"));\n\t\tselenium.clickAt(\"//span[@id='cke_48_label' and .='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__8_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__8_editor']/iframe\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Calendar Event3 Description\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\"//body\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[1]/table/tbody/tr[3]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Calendar Event1 Title\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[3]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Anniversary\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[3]/td[3]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[1]/table/tbody/tr[4]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Calendar Event2 Title\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[4]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Anniversary\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[4]/td[3]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[1]/table/tbody/tr[5]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Calendar Event3 Title\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[5]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Anniversary\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[5]/td[3]/a\"));\n\t}","commit_id":"2e976f6cd12a6d66e7216f62f0c788be86465e1d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddEventDisplayDays2SO() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home1\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Calendar Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Calendar Test Page\",\n\t\t\tRuntimeVariables.replace(\"Calendar Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event Title\"));\n\t\tselenium.keyPress(\"//select[@id='_8_startDateDay']\",\n\t\t\tRuntimeVariables.replace(\"\\\\40\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__8_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__8_editor']/iframe\");\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event Description\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Events\"),\n\t\t\tselenium.getText(\"link=Events\"));\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"Events\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertTrue(selenium.isElementPresent(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Calendar Event Title\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Anniversary\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t}","id":53019,"modified_method":"public void testAddEventDisplayDays2SO() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home1\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Calendar Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Calendar Test Page\",\n\t\t\tRuntimeVariables.replace(\"Calendar Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event Title\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[@id='cke_48_label' and .='Source']\"));\n\t\tselenium.clickAt(\"//span[@id='cke_48_label' and .='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__8_editor']/textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//td[@id='cke_contents__8_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event Description\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[@id='cke_48_label' and .='Source']\"));\n\t\tselenium.clickAt(\"//span[@id='cke_48_label' and .='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__8_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__8_editor']/iframe\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Calendar Event Description\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\"//body\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Events\"),\n\t\t\tselenium.getText(\"link=Events\"));\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"Events\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertTrue(selenium.isElementPresent(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Calendar Event Title\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Anniversary\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t}","commit_id":"2e976f6cd12a6d66e7216f62f0c788be86465e1d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddEventSO() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home1\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Calendar Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Calendar Test Page\",\n\t\t\tRuntimeVariables.replace(\"Calendar Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event Title\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__8_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__8_editor']/iframe\");\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event Description\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[1]/table/tbody/tr[3]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Calendar Event Title\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[3]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Anniversary\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[3]/td[3]/a\"));\n\t}","id":53020,"modified_method":"public void testAddEventSO() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home1\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Calendar Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Calendar Test Page\",\n\t\t\tRuntimeVariables.replace(\"Calendar Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event Title\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[@id='cke_48_label' and .='Source']\"));\n\t\tselenium.clickAt(\"//span[@id='cke_48_label' and .='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__8_editor']/textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//td[@id='cke_contents__8_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event Description\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[@id='cke_48_label' and .='Source']\"));\n\t\tselenium.clickAt(\"//span[@id='cke_48_label' and .='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__8_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__8_editor']/iframe\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Calendar Event Description\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\"//body\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[1]/table/tbody/tr[3]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Calendar Event Title\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[3]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Anniversary\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[3]/td[3]/a\"));\n\t}","commit_id":"2e976f6cd12a6d66e7216f62f0c788be86465e1d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddEventSO() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home1\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Calendar Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Calendar Test Page\",\n\t\t\tRuntimeVariables.replace(\"Calendar Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event Title\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__8_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__8_editor']/iframe\");\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event Description\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[1]/table/tbody/tr[3]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Calendar Event Title\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[3]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Anniversary\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[3]/td[3]/a\"));\n\t}","id":53021,"modified_method":"public void testAddEventSO() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home1\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Calendar Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Calendar Test Page\",\n\t\t\tRuntimeVariables.replace(\"Calendar Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event Title\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[@id='cke_48_label' and .='Source']\"));\n\t\tselenium.clickAt(\"//span[@id='cke_48_label' and .='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__8_editor']/textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//td[@id='cke_contents__8_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event Description\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[@id='cke_48_label' and .='Source']\"));\n\t\tselenium.clickAt(\"//span[@id='cke_48_label' and .='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__8_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__8_editor']/iframe\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Calendar Event Description\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\"//body\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[1]/table/tbody/tr[3]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Calendar Event Title\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[3]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Anniversary\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[3]/td[3]/a\"));\n\t}","commit_id":"2e976f6cd12a6d66e7216f62f0c788be86465e1d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddEventSite() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home1\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//li[contains(@class, 'selected')]/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Home\"),\n\t\t\tselenium.getText(\"//li[contains(@class, 'selected')]/a/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Sites\"),\n\t\t\tselenium.getText(\"//div[@id='so-sidebar']/h3\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select[@id='_5_WAR_soportlet_tabs1']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_5_WAR_soportlet_tabs1']\", \"All Sites\"));\n\t\tselenium.select(\"//select[@id='_5_WAR_soportlet_tabs1']\",\n\t\t\tRuntimeVariables.replace(\"All Sites\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@class='search-input']\"));\n\t\tselenium.type(\"//input[@class='search-input']\",\n\t\t\tRuntimeVariables.replace(\"Open\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Open Site Name\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//li[contains(@class, 'social-office-enabled')]/span[2]/a\"));\n\t\tselenium.clickAt(\"//li[contains(@class, 'social-office-enabled')]/span[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Open Site Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Open Site Name\"),\n\t\t\tselenium.getText(\"//div[@class='community-title']\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Calendar\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event Title\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__8_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__8_editor']/iframe\");\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event Description\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[1]/table/tbody/tr[3]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Calendar Event Title\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[3]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Anniversary\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[3]/td[3]/a\"));\n\t}","id":53022,"modified_method":"public void testAddEventSite() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home1\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//li[contains(@class, 'selected')]/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Home\"),\n\t\t\tselenium.getText(\"//li[contains(@class, 'selected')]/a/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Sites\"),\n\t\t\tselenium.getText(\"//div[@id='so-sidebar']/h3\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select[@id='_5_WAR_soportlet_tabs1']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_5_WAR_soportlet_tabs1']\", \"All Sites\"));\n\t\tselenium.select(\"//select[@id='_5_WAR_soportlet_tabs1']\",\n\t\t\tRuntimeVariables.replace(\"All Sites\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@class='search-input']\"));\n\t\tselenium.type(\"//input[@class='search-input']\",\n\t\t\tRuntimeVariables.replace(\"Open\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Open Site Name\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//li[contains(@class, 'social-office-enabled')]/span[2]/a\"));\n\t\tselenium.clickAt(\"//li[contains(@class, 'social-office-enabled')]/span[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Open Site Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Open Site Name\"),\n\t\t\tselenium.getText(\"//div[@class='community-title']\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Calendar\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event Title\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[@id='cke_48_label' and .='Source']\"));\n\t\tselenium.clickAt(\"//span[@id='cke_48_label' and .='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__8_editor']/textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//td[@id='cke_contents__8_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event Description\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[@id='cke_48_label' and .='Source']\"));\n\t\tselenium.clickAt(\"//span[@id='cke_48_label' and .='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__8_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__8_editor']/iframe\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Calendar Event Description\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\"//body\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[1]/table/tbody/tr[3]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Calendar Event Title\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[3]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Anniversary\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[3]/td[3]/a\"));\n\t}","commit_id":"2e976f6cd12a6d66e7216f62f0c788be86465e1d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddEventSite() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home1\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//li[contains(@class, 'selected')]/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Home\"),\n\t\t\tselenium.getText(\"//li[contains(@class, 'selected')]/a/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Sites\"),\n\t\t\tselenium.getText(\"//div[@id='so-sidebar']/h3\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select[@id='_5_WAR_soportlet_tabs1']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_5_WAR_soportlet_tabs1']\", \"All Sites\"));\n\t\tselenium.select(\"//select[@id='_5_WAR_soportlet_tabs1']\",\n\t\t\tRuntimeVariables.replace(\"All Sites\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@class='search-input']\"));\n\t\tselenium.type(\"//input[@class='search-input']\",\n\t\t\tRuntimeVariables.replace(\"Open\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Open Site Name\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//li[contains(@class, 'social-office-enabled')]/span[2]/a\"));\n\t\tselenium.clickAt(\"//li[contains(@class, 'social-office-enabled')]/span[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Open Site Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Open Site Name\"),\n\t\t\tselenium.getText(\"//div[@class='community-title']\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Calendar\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event Title\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__8_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__8_editor']/iframe\");\n\t\tselenium.type(\"//body\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event Description\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[1]/table/tbody/tr[3]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Calendar Event Title\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[3]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Anniversary\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[3]/td[3]/a\"));\n\t}","id":53023,"modified_method":"public void testAddEventSite() throws Exception {\n\t\tselenium.open(\"/user/joebloggs/home1\");\n\t\tloadRequiredJavaScriptModules();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//li[contains(@class, 'selected')]/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(RuntimeVariables.replace(\"Home\"),\n\t\t\tselenium.getText(\"//li[contains(@class, 'selected')]/a/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Sites\"),\n\t\t\tselenium.getText(\"//div[@id='so-sidebar']/h3\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//select[@id='_5_WAR_soportlet_tabs1']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_5_WAR_soportlet_tabs1']\", \"All Sites\"));\n\t\tselenium.select(\"//select[@id='_5_WAR_soportlet_tabs1']\",\n\t\t\tRuntimeVariables.replace(\"All Sites\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@class='search-input']\"));\n\t\tselenium.type(\"//input[@class='search-input']\",\n\t\t\tRuntimeVariables.replace(\"Open\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Open Site Name\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//li[contains(@class, 'social-office-enabled')]/span[2]/a\"));\n\t\tselenium.clickAt(\"//li[contains(@class, 'social-office-enabled')]/span[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Open Site Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\"Open Site Name\"),\n\t\t\tselenium.getText(\"//div[@class='community-title']\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Calendar\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Calendar\", RuntimeVariables.replace(\"Calendar\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.clickAt(\"//input[@value='Add Event']\",\n\t\t\tRuntimeVariables.replace(\"Add Event\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tselenium.type(\"//input[@id='_8_title']\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event Title\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[@id='cke_48_label' and .='Source']\"));\n\t\tselenium.clickAt(\"//span[@id='cke_48_label' and .='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__8_editor']/textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//td[@id='cke_contents__8_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event Description\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[@id='cke_48_label' and .='Source']\"));\n\t\tselenium.clickAt(\"//span[@id='cke_48_label' and .='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__8_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__8_editor']/iframe\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 90) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"Calendar Event Description\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\"//body\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tloadRequiredJavaScriptModules();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[1]/table/tbody/tr[3]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Calendar Event Title\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[3]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Anniversary\"),\n\t\t\tselenium.getText(\"//div[1]/table/tbody/tr[3]/td[3]/a\"));\n\t}","commit_id":"2e976f6cd12a6d66e7216f62f0c788be86465e1d","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddFolderDocument() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Document Library Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Test1 Folder1\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Add Document\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list lfr-menu-expanded right null']/ul/li[5]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list lfr-menu-expanded right null']/ul/li[5]/a\",\n\t\t\tRuntimeVariables.replace(\"Add Document\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.windowFocus();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Use the classic uploader.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(\"link=Use the classic uploader.\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_20_file\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_20_file\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\documentlibrarydisplay\\\\document\\\\searchfolderdocument\\\\dependencies\\\\test_document.txt\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_20_title\", RuntimeVariables.replace(\"Test1 Document1\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_20_description\",\n\t\t\tRuntimeVariables.replace(\"This is test1 document1.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"Your request completed successfully.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Test1 Document1.txt\"),\n\t\t\tselenium.getText(\"//a/span/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This is test1 document1.\"),\n\t\t\tselenium.getText(\"//a/div\"));\n\t}","id":53024,"modified_method":"public void testAddFolderDocument() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Document Library Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Test Page\",\n\t\t\tRuntimeVariables.replace(\"Document Library Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"DL Folder Name\"),\n\t\t\tselenium.getText(\"//span[@class='document-title']\"));\n\t\tselenium.clickAt(\"//span[@class='document-title']\",\n\t\t\tRuntimeVariables.replace(\"DL Folder Name\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"There are no documents in this folder.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-info']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//span[3]/span/span/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[3]/span/span/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Basic Document\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_20_file']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\documentlibrarydisplay\\\\dependencies\\\\DLDocument.docx\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_20_title']\",\n\t\t\tRuntimeVariables.replace(\"DL Folder Document Title\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_20_description']\",\n\t\t\tRuntimeVariables.replace(\"DL Folder Document Description\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"Your request completed successfully.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DL Folder Document Title\"),\n\t\t\tselenium.getText(\"//a[@class='document-link']\"));\n\t\tselenium.clickAt(\"//a[@class='document-link']\",\n\t\t\tRuntimeVariables.replace(\"DL Folder Document Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"DL Folder Document Title\"),\n\t\t\tselenium.getText(\"//h2[@class='document-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DL Folder Document Description\"),\n\t\t\tselenium.getText(\"//span[@class='document-description']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Status: Approved\"),\n\t\t\tselenium.getText(\"//span[@class='workflow-status']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Download (9.6k)\"),\n\t\t\tselenium.getText(\"//span[@class='download-document']\"));\n\t}","commit_id":"eaa7b54c8ab37078279c7b03c570506cf9705ca8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddFolderDocument() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Document Library Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Test1 Folder1\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Add Document\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list lfr-menu-expanded right null']/ul/li[5]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list lfr-menu-expanded right null']/ul/li[5]/a\",\n\t\t\tRuntimeVariables.replace(\"Add Document\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.windowFocus();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Use the classic uploader.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(\"link=Use the classic uploader.\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_20_file\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_20_file\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\documentlibrarydisplay\\\\document\\\\viewfolderdocument\\\\dependencies\\\\test_document.txt\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_20_title\", RuntimeVariables.replace(\"Test1 Document1\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_20_description\",\n\t\t\tRuntimeVariables.replace(\"This is test1 document1.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"Your request completed successfully.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Test1 Document1.txt\"),\n\t\t\tselenium.getText(\"//a/span/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This is test1 document1.\"),\n\t\t\tselenium.getText(\"//a/div\"));\n\t}","id":53025,"modified_method":"public void testAddFolderDocument() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Document Library Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Test Page\",\n\t\t\tRuntimeVariables.replace(\"Document Library Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"DL Folder Name\"),\n\t\t\tselenium.getText(\"//span[@class='document-title']\"));\n\t\tselenium.clickAt(\"//span[@class='document-title']\",\n\t\t\tRuntimeVariables.replace(\"DL Folder Name\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"There are no documents in this folder.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-info']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//span[3]/span/span/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[3]/span/span/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Basic Document\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_20_file']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\documentlibrarydisplay\\\\dependencies\\\\DLDocument.docx\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_20_title']\",\n\t\t\tRuntimeVariables.replace(\"DL Folder Document Title\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_20_description']\",\n\t\t\tRuntimeVariables.replace(\"DL Folder Document Description\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"Your request completed successfully.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DL Folder Document Title\"),\n\t\t\tselenium.getText(\"//a[@class='document-link']\"));\n\t\tselenium.clickAt(\"//a[@class='document-link']\",\n\t\t\tRuntimeVariables.replace(\"DL Folder Document Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"DL Folder Document Title\"),\n\t\t\tselenium.getText(\"//h2[@class='document-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DL Folder Document Description\"),\n\t\t\tselenium.getText(\"//span[@class='document-description']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Status: Approved\"),\n\t\t\tselenium.getText(\"//span[@class='workflow-status']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Download (9.6k)\"),\n\t\t\tselenium.getText(\"//span[@class='download-document']\"));\n\t}","commit_id":"eaa7b54c8ab37078279c7b03c570506cf9705ca8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddFolder() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Document Library Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Add Folder\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list lfr-menu-expanded right null']/ul/li[2]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list lfr-menu-expanded right null']/ul/li[2]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_20_name\", RuntimeVariables.replace(\"Test1 Folder1\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_20_description\",\n\t\t\tRuntimeVariables.replace(\"This is test1 folder1.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Test1 Folder1\\nThis is test1 folder1.\"),\n\t\t\tselenium.getText(\"//td[1]/a[2]\"));\n\t}","id":53026,"modified_method":"public void testAddFolder() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Document Library Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Test Page\",\n\t\t\tRuntimeVariables.replace(\"Document Library Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//span[3]/span/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[3]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Folder\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Folder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_20_name']\",\n\t\t\tRuntimeVariables.replace(\"DL Folder Name\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_20_description']\",\n\t\t\tRuntimeVariables.replace(\"DL Folder Description\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DL Folder Name\"),\n\t\t\tselenium.getText(\"//span[@class='document-title']\"));\n\t}","commit_id":"eaa7b54c8ab37078279c7b03c570506cf9705ca8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddFolder() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Document Library Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Add Folder\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list lfr-menu-expanded right null']/ul/li[2]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list lfr-menu-expanded right null']/ul/li[2]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_20_name\", RuntimeVariables.replace(\"Test1 Folder1\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_20_description\",\n\t\t\tRuntimeVariables.replace(\"This is test1 folder1.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Test1 Folder1\\nThis is test1 folder1.\"),\n\t\t\tselenium.getText(\"//td[1]/a[2]\"));\n\t}","id":53027,"modified_method":"public void testAddFolder() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Document Library Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Test Page\",\n\t\t\tRuntimeVariables.replace(\"Document Library Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//span[3]/span/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[3]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Folder\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Folder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_20_name']\",\n\t\t\tRuntimeVariables.replace(\"DL Folder Name\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_20_description']\",\n\t\t\tRuntimeVariables.replace(\"DL Folder Description\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DL Folder Name\"),\n\t\t\tselenium.getText(\"//span[@class='document-title']\"));\n\t}","commit_id":"eaa7b54c8ab37078279c7b03c570506cf9705ca8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddFolder() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Document Library Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Add Folder\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list lfr-menu-expanded right null']/ul/li[2]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list lfr-menu-expanded right null']/ul/li[2]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_20_name\", RuntimeVariables.replace(\"Test1 Folder1\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_20_description\",\n\t\t\tRuntimeVariables.replace(\"This is test1 folder1.\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Test1 Folder1\\nThis is test1 folder1.\"),\n\t\t\tselenium.getText(\"//td[1]/a[2]\"));\n\t}","id":53028,"modified_method":"public void testAddFolder() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Document Library Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Test Page\",\n\t\t\tRuntimeVariables.replace(\"Document Library Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//span[3]/span/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[3]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Folder\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Folder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_20_name']\",\n\t\t\tRuntimeVariables.replace(\"DL Folder Name\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_20_description']\",\n\t\t\tRuntimeVariables.replace(\"DL Folder Description\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DL Folder Name\"),\n\t\t\tselenium.getText(\"//span[@class='document-title']\"));\n\t}","commit_id":"eaa7b54c8ab37078279c7b03c570506cf9705ca8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageDLD() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Document Library Display Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"save\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Document Library Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":53029,"modified_method":"public void testAddPageDLD() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Document Library Display Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Document Library Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Document Library Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"eaa7b54c8ab37078279c7b03c570506cf9705ca8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageDLD() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Document Library Display Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"save\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Document Library Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":53030,"modified_method":"public void testAddPageDLD() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Document Library Display Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Document Library Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Document Library Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"eaa7b54c8ab37078279c7b03c570506cf9705ca8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageDLD() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Document Library Display Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"save\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Document Library Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":53031,"modified_method":"public void testAddPageDLD() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Document Library Display Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Document Library Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Document Library Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"eaa7b54c8ab37078279c7b03c570506cf9705ca8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageDLD() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Document Library Display Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"save\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Document Library Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":53032,"modified_method":"public void testAddPageDLD() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Document Library Display Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Document Library Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Document Library Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"eaa7b54c8ab37078279c7b03c570506cf9705ca8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageDLD() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Document Library Display Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"save\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Document Library Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":53033,"modified_method":"public void testAddPageDLD() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Document Library Display Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Document Library Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Document Library Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"eaa7b54c8ab37078279c7b03c570506cf9705ca8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageDLD() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Document Library Display Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"save\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Document Library Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":53034,"modified_method":"public void testAddPageDLD() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Document Library Display Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Document Library Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Document Library Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"eaa7b54c8ab37078279c7b03c570506cf9705ca8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageDLD() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Document Library Display Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"save\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Document Library Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":53035,"modified_method":"public void testAddPageDLD() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Document Library Display Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Document Library Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Document Library Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"eaa7b54c8ab37078279c7b03c570506cf9705ca8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageDL() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Document Library Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"save\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Document Library Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":53036,"modified_method":"public void testAddPageDL() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Document Library Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Document Library Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Test Page\",\n\t\t\tRuntimeVariables.replace(\"Document Library Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"eaa7b54c8ab37078279c7b03c570506cf9705ca8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageDL() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Document Library Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"save\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Document Library Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":53037,"modified_method":"public void testAddPageDL() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Document Library Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Document Library Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Test Page\",\n\t\t\tRuntimeVariables.replace(\"Document Library Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"eaa7b54c8ab37078279c7b03c570506cf9705ca8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageDL() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Document Library Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"save\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Document Library Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":53038,"modified_method":"public void testAddPageDL() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@type='text']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@type='text']\",\n\t\t\tRuntimeVariables.replace(\"Document Library Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//button[@id='save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Document Library Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Test Page\",\n\t\t\tRuntimeVariables.replace(\"Document Library Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"eaa7b54c8ab37078279c7b03c570506cf9705ca8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletDLD1() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Document Library Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"d\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@title='Document Library Display']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Document Library Display']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":53039,"modified_method":"public void testAddPortletDLD1() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Document Library Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Document Library Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@title='Document Library Display']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Document Library Display']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"eaa7b54c8ab37078279c7b03c570506cf9705ca8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletDLD2() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Document Library Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"d\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@title='Document Library Display']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Document Library Display']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[2]/section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//div[2]/section\"));\n\t}","id":53040,"modified_method":"public void testAddPortletDLD2() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Document Library Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Document Library Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@title='Document Library Display']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Document Library Display']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[2]/div/section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//div[2]/div/section\"));\n\t}","commit_id":"eaa7b54c8ab37078279c7b03c570506cf9705ca8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletDLD3() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Document Library Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"d\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@title='Document Library Display']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Document Library Display']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[2]/section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//div[2]/section\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[3]/section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//div[3]/section\"));\n\t}","id":53041,"modified_method":"public void testAddPortletDLD3() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Document Library Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Document Library Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@title='Document Library Display']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Document Library Display']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[2]/div/section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//div[2]/div/section\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[3]/div/section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//div[3]/div/section\"));\n\t}","commit_id":"eaa7b54c8ab37078279c7b03c570506cf9705ca8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletDLD() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Document Library Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"d\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@title='Document Library Display']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Document Library Display']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":53042,"modified_method":"public void testAddPortletDLD() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Document Library Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Document Library Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@title='Document Library Display']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Document Library Display']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"eaa7b54c8ab37078279c7b03c570506cf9705ca8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletDLD() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Document Library Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"d\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@title='Document Library Display']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Document Library Display']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":53043,"modified_method":"public void testAddPortletDLD() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Document Library Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Document Library Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@title='Document Library Display']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Document Library Display']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"eaa7b54c8ab37078279c7b03c570506cf9705ca8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletDLD() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Document Library Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"d\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@title='Document Library Display']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Document Library Display']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":53044,"modified_method":"public void testAddPortletDLD() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Document Library Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Document Library Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@title='Document Library Display']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Document Library Display']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"eaa7b54c8ab37078279c7b03c570506cf9705ca8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletDLD() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Document Library Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"d\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@title='Document Library Display']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Document Library Display']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":53045,"modified_method":"public void testAddPortletDLD() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Document Library Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Document Library Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@title='Document Library Display']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Document Library Display']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"eaa7b54c8ab37078279c7b03c570506cf9705ca8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletDLD() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Document Library Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"d\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@title='Document Library Display']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Document Library Display']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":53046,"modified_method":"public void testAddPortletDLD() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Document Library Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Document Library Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@title='Document Library Display']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Document Library Display']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"eaa7b54c8ab37078279c7b03c570506cf9705ca8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletDLD() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Document Library Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"d\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@title='Document Library Display']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Document Library Display']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":53047,"modified_method":"public void testAddPortletDLD() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Document Library Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Document Library Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@title='Document Library Display']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Document Library Display']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"eaa7b54c8ab37078279c7b03c570506cf9705ca8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletDL() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Document Library Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"d\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@title='Document Library']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Document Library']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":53048,"modified_method":"public void testAddPortletDL() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Document Library Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Test Page\",\n\t\t\tRuntimeVariables.replace(\"Document Library Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@title='Documents and Media Library']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Documents and Media Library']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"eaa7b54c8ab37078279c7b03c570506cf9705ca8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletDL() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Document Library Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"d\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@title='Document Library']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Document Library']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":53049,"modified_method":"public void testAddPortletDL() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Document Library Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Test Page\",\n\t\t\tRuntimeVariables.replace(\"Document Library Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@title='Documents and Media Library']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Documents and Media Library']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"eaa7b54c8ab37078279c7b03c570506cf9705ca8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletDL() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Document Library Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_145_addApplication\", RuntimeVariables.replace(\"\"));\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"layout_configuration_content\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"layout_configuration_content\",\n\t\t\tRuntimeVariables.replace(\"d\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div[@title='Document Library']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Document Library']/p/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":53050,"modified_method":"public void testAddPortletDL() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Document Library Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Test Page\",\n\t\t\tRuntimeVariables.replace(\"Document Library Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@title='Documents and Media Library']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Documents and Media Library']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"eaa7b54c8ab37078279c7b03c570506cf9705ca8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletShowFolderSearch()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Document Library Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_showFoldersSearchCheckbox\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isChecked(\"_86_showFoldersSearchCheckbox\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_86_showFoldersSearchCheckbox\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isChecked(\"_86_showFoldersSearchCheckbox\"));\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":53051,"modified_method":"public void testConfigurePortletShowFolderSearch()\n\t\tthrows Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"link=Document Library Display Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Document Library Display Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"Document Library Display Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\t\t\tselenium.getText(\"//strong/a\"));\n\t\t\t\tselenium.clickAt(\"//strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Options\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.click(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//input[@id='_86_showFoldersSearchCheckbox']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean showSearchChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_86_showFoldersSearchCheckbox\");\n\n\t\t\t\tif (showSearchChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_showFoldersSearchCheckbox']\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@id='_86_showFoldersSearchCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Show Search\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_showFoldersSearchCheckbox']\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_showFoldersSearchCheckbox']\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean showNavigationLinksChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_86_showTabsCheckbox\");\n\n\t\t\t\tif (showNavigationLinksChecked) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_showTabsCheckbox']\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@id='_86_showTabsCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Show Navigation Links\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_showTabsCheckbox']\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_showFoldersSearchCheckbox']\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_showTabsCheckbox']\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"eaa7b54c8ab37078279c7b03c570506cf9705ca8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletShowFolderSearch()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Document Library Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_86_showFoldersSearchCheckbox\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isChecked(\"_86_showFoldersSearchCheckbox\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_86_showFoldersSearchCheckbox\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isChecked(\"_86_showFoldersSearchCheckbox\"));\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":53052,"modified_method":"public void testConfigurePortletShowFolderSearch()\n\t\tthrows Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"link=Document Library Display Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Document Library Display Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"Document Library Display Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\t\t\tselenium.getText(\"//strong/a\"));\n\t\t\t\tselenium.clickAt(\"//strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Options\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.click(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//input[@id='_86_showFoldersSearchCheckbox']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean showSearchChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_86_showFoldersSearchCheckbox\");\n\n\t\t\t\tif (showSearchChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_showFoldersSearchCheckbox']\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@id='_86_showFoldersSearchCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Show Search\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_showFoldersSearchCheckbox']\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_showFoldersSearchCheckbox']\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean showNavigationLinksChecked = selenium.isChecked(\n\t\t\t\t\t\t\"_86_showTabsCheckbox\");\n\n\t\t\t\tif (showNavigationLinksChecked) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_showTabsCheckbox']\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@id='_86_showTabsCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Show Navigation Links\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_showTabsCheckbox']\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_showFoldersSearchCheckbox']\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_showTabsCheckbox']\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"eaa7b54c8ab37078279c7b03c570506cf9705ca8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testRemovePortletDLD() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Document Library Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to remove this component[\\\\s\\\\S]$\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isElementPresent(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isElementPresent(\"//section\"));\n\t}","id":53053,"modified_method":"public void testRemovePortletDLD() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Document Library Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Document Library Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to remove this component[\\\\s\\\\S]$\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isElementPresent(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isElementPresent(\"//section\"));\n\t}","commit_id":"eaa7b54c8ab37078279c7b03c570506cf9705ca8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSearchFolderDocumentQuotes() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Document Library Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Document Library Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@title='Search Documents']\",\n\t\t\tRuntimeVariables.replace(\"\\\"Test1 Document1\\\"\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Test1 Document1.txt\"));\n\t\tselenium.type(\"//input[@title='Search Documents']\",\n\t\t\tRuntimeVariables.replace(\"\\\"Test2 Document2\\\"\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isTextPresent(\"Test1 Document1\"));\n\t}","id":53054,"modified_method":"public void testSearchFolderDocumentQuotes() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Document Library Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Document Library Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@title='Search Documents']\",\n\t\t\tRuntimeVariables.replace(\"\\\"DL Folder Document Title\\\"\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"DL Folder Name\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\"//td[2]/a\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"DL Folder Name\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DL Folder Document Title\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tselenium.type(\"//input[@title='Search Documents']\",\n\t\t\tRuntimeVariables.replace(\"\\\"DL2 Folder2 Document2 Title2\\\"\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"No documents were found that matched the keywords: \\\"DL2 Folder2 Document2 Title2\\\".\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-info']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"No documents were found that matched the keywords: \\\"DL2 Folder2 Document2 Title2\\\".\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tassertFalse(selenium.isTextPresent(\"DL Folder Name\"));\n\t\tassertFalse(selenium.isTextPresent(\"DL Folder Document Title\"));\n\t}","commit_id":"eaa7b54c8ab37078279c7b03c570506cf9705ca8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSearchFolderDocument() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Document Library Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@title='Search Documents']\",\n\t\t\tRuntimeVariables.replace(\"Test1 Document1\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Test1 Document1.txt\"));\n\t\tselenium.type(\"//input[@title='Search Documents']\",\n\t\t\tRuntimeVariables.replace(\"Test2 Document2\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isTextPresent(\"Test1 Document1\"));\n\t}","id":53055,"modified_method":"public void testSearchFolderDocument() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Document Library Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Document Library Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@title='Search Documents']\",\n\t\t\tRuntimeVariables.replace(\"DL Folder Document Title\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"DL Folder Name\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\"//td[2]/a\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"DL Folder Name\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DL Folder Document Title\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tselenium.type(\"//input[@title='Search Documents']\",\n\t\t\tRuntimeVariables.replace(\"DL2 Folder2 Document2 Title2\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"No documents were found that matched the keywords: DL2 Folder2 Document2 Title2.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='portlet-msg-info']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"No documents were found that matched the keywords: DL2 Folder2 Document2 Title2.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tassertFalse(selenium.isTextPresent(\"DL Folder Name\"));\n\t\tassertFalse(selenium.isTextPresent(\"DL Folder Document Title\"));\n\t}","commit_id":"eaa7b54c8ab37078279c7b03c570506cf9705ca8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTestSuite(AddPageDLTest.class);\n\t\ttestSuite.addTestSuite(AddPortletDLTest.class);\n\t\ttestSuite.addTestSuite(AddPageDLDTest.class);\n\t\ttestSuite.addTestSuite(AddPortletDLDTest.class);\n\t\ttestSuite.addTestSuite(AddFolderTest.class);\n\t\ttestSuite.addTestSuite(AddFolderDocumentTest.class);\n\t\ttestSuite.addTestSuite(ConfigurePortletShowFolderSearchTest.class);\n\t\ttestSuite.addTestSuite(SearchFolderDocumentTest.class);\n\t\ttestSuite.addTestSuite(SearchFolderDocumentQuotesTest.class);\n\t\ttestSuite.addTestSuite(TearDownDLFolderTest.class);\n\t\ttestSuite.addTestSuite(TearDownDocumentTest.class);\n\t\ttestSuite.addTestSuite(TearDownPageTest.class);\n\n\t\treturn testSuite;\n\t}","id":53056,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTestSuite(AddPageDLTest.class);\n\t\ttestSuite.addTestSuite(AddPortletDLTest.class);\n\t\ttestSuite.addTestSuite(AddPageDLDTest.class);\n\t\ttestSuite.addTestSuite(AddPortletDLDTest.class);\n\t\ttestSuite.addTestSuite(AddFolderTest.class);\n\t\ttestSuite.addTestSuite(AddFolderDocumentTest.class);\n\t\ttestSuite.addTestSuite(ConfigurePortletShowFolderSearchTest.class);\n\t\ttestSuite.addTestSuite(SearchFolderDocumentTest.class);\n\t\ttestSuite.addTestSuite(SearchFolderDocumentQuotesTest.class);\n\t\ttestSuite.addTestSuite(TearDownDLFolderTest.class);\n\t\ttestSuite.addTestSuite(TearDownPageTest.class);\n\n\t\treturn testSuite;\n\t}","commit_id":"eaa7b54c8ab37078279c7b03c570506cf9705ca8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownDLFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"link=Document Library Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Document Library Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean dlFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!dlFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean dlFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!dlFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean dlFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!dlFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean dlFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!dlFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean dlFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!dlFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":53057,"modified_method":"public void testTearDownDLFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"link=Document Library Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Document Library Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Document Library Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean dlFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div/a/span[1]/img\");\n\n\t\t\t\tif (!dlFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//form/div[1]/div/span[1]/span/span/input[2]\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//form/div[1]/div/span[1]/span/span/input[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Document Checkbox\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//form/div[1]/div/span[1]/span/span/input[2]\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[2]/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[2]/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected entries[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean dlFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div/a/span[1]/img\");\n\n\t\t\t\tif (!dlFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//form/div[1]/div/span[1]/span/span/input[2]\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//form/div[1]/div/span[1]/span/span/input[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Document Checkbox\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//form/div[1]/div/span[1]/span/span/input[2]\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[2]/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[2]/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected entries[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean dlFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div/a/span[1]/img\");\n\n\t\t\t\tif (!dlFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//form/div[1]/div/span[1]/span/span/input[2]\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//form/div[1]/div/span[1]/span/span/input[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Document Checkbox\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//form/div[1]/div/span[1]/span/span/input[2]\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[2]/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[2]/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected entries[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean dlFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div/a/span[1]/img\");\n\n\t\t\t\tif (!dlFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//form/div[1]/div/span[1]/span/span/input[2]\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//form/div[1]/div/span[1]/span/span/input[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Document Checkbox\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//form/div[1]/div/span[1]/span/span/input[2]\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[2]/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[2]/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected entries[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean dlFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div/a/span[1]/img\");\n\n\t\t\t\tif (!dlFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//form/div[1]/div/span[1]/span/span/input[2]\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//form/div[1]/div/span[1]/span/span/input[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Document Checkbox\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//form/div[1]/div/span[1]/span/span/input[2]\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[2]/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[2]/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected entries[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"eaa7b54c8ab37078279c7b03c570506cf9705ca8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownDLFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"link=Document Library Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Document Library Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean dlFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!dlFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean dlFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!dlFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean dlFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!dlFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean dlFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!dlFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean dlFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!dlFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":53058,"modified_method":"public void testTearDownDLFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"link=Document Library Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Document Library Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Document Library Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean dlFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div/a/span[1]/img\");\n\n\t\t\t\tif (!dlFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//form/div[1]/div/span[1]/span/span/input[2]\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//form/div[1]/div/span[1]/span/span/input[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Document Checkbox\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//form/div[1]/div/span[1]/span/span/input[2]\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[2]/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[2]/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected entries[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean dlFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div/a/span[1]/img\");\n\n\t\t\t\tif (!dlFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//form/div[1]/div/span[1]/span/span/input[2]\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//form/div[1]/div/span[1]/span/span/input[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Document Checkbox\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//form/div[1]/div/span[1]/span/span/input[2]\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[2]/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[2]/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected entries[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean dlFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div/a/span[1]/img\");\n\n\t\t\t\tif (!dlFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//form/div[1]/div/span[1]/span/span/input[2]\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//form/div[1]/div/span[1]/span/span/input[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Document Checkbox\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//form/div[1]/div/span[1]/span/span/input[2]\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[2]/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[2]/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected entries[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean dlFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div/a/span[1]/img\");\n\n\t\t\t\tif (!dlFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//form/div[1]/div/span[1]/span/span/input[2]\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//form/div[1]/div/span[1]/span/span/input[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Document Checkbox\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//form/div[1]/div/span[1]/span/span/input[2]\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[2]/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[2]/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected entries[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean dlFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div/a/span[1]/img\");\n\n\t\t\t\tif (!dlFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//form/div[1]/div/span[1]/span/span/input[2]\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//form/div[1]/div/span[1]/span/span/input[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Document Checkbox\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//form/div[1]/div/span[1]/span/span/input[2]\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[2]/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[2]/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected entries[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"eaa7b54c8ab37078279c7b03c570506cf9705ca8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownDLFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"link=Document Library Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Document Library Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean dlFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!dlFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean dlFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!dlFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean dlFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!dlFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean dlFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!dlFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean dlFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!dlFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":53059,"modified_method":"public void testTearDownDLFolder() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"link=Document Library Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Document Library Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Document Library Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean dlFolder1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div/a/span[1]/img\");\n\n\t\t\t\tif (!dlFolder1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//form/div[1]/div/span[1]/span/span/input[2]\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//form/div[1]/div/span[1]/span/span/input[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Document Checkbox\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//form/div[1]/div/span[1]/span/span/input[2]\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[2]/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[2]/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected entries[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean dlFolder2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div/a/span[1]/img\");\n\n\t\t\t\tif (!dlFolder2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//form/div[1]/div/span[1]/span/span/input[2]\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//form/div[1]/div/span[1]/span/span/input[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Document Checkbox\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//form/div[1]/div/span[1]/span/span/input[2]\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[2]/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[2]/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected entries[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean dlFolder3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div/a/span[1]/img\");\n\n\t\t\t\tif (!dlFolder3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//form/div[1]/div/span[1]/span/span/input[2]\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//form/div[1]/div/span[1]/span/span/input[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Document Checkbox\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//form/div[1]/div/span[1]/span/span/input[2]\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[2]/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[2]/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected entries[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean dlFolder4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div/a/span[1]/img\");\n\n\t\t\t\tif (!dlFolder4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//form/div[1]/div/span[1]/span/span/input[2]\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//form/div[1]/div/span[1]/span/span/input[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Document Checkbox\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//form/div[1]/div/span[1]/span/span/input[2]\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[2]/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[2]/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected entries[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean dlFolder5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div/a/span[1]/img\");\n\n\t\t\t\tif (!dlFolder5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//form/div[1]/div/span[1]/span/span/input[2]\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//form/div[1]/div/span[1]/span/span/input[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Document Checkbox\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//form/div[1]/div/span[1]/span/span/input[2]\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[2]/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[2]/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected entries[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"eaa7b54c8ab37078279c7b03c570506cf9705ca8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":53060,"modified_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"eaa7b54c8ab37078279c7b03c570506cf9705ca8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":53061,"modified_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"eaa7b54c8ab37078279c7b03c570506cf9705ca8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":53062,"modified_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"eaa7b54c8ab37078279c7b03c570506cf9705ca8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":53063,"modified_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"eaa7b54c8ab37078279c7b03c570506cf9705ca8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":53064,"modified_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"eaa7b54c8ab37078279c7b03c570506cf9705ca8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":53065,"modified_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"eaa7b54c8ab37078279c7b03c570506cf9705ca8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":53066,"modified_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"eaa7b54c8ab37078279c7b03c570506cf9705ca8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewFolderDocument() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Document Library Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Test1 Folder1\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Test1 Document1.txt\"),\n\t\t\tselenium.getText(\"//a/span/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This is test1 document1.\"),\n\t\t\tselenium.getText(\"//div[@class='file-entry-list-description']\"));\n\t\tselenium.clickAt(\"//a/span/span\",\n\t\t\tRuntimeVariables.replace(\"Test1 Document1.txt\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Version: 1.0\"),\n\t\t\tselenium.getText(\"//span[@class='workflow-version']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Test1 Document1.txt\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This is test1 document1.\"),\n\t\t\tselenium.getText(\"//div[@class='lfr-asset-description']\"));\n\t}","id":53067,"modified_method":"public void testViewFolderDocument() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"link=Document Library Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Document Library Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"DL Folder Name\\nDL Folder Description\"),\n\t\t\tselenium.getText(\"//td[1]/a[2]\"));\n\t\tselenium.clickAt(\"//td[1]/a[2]\",\n\t\t\tRuntimeVariables.replace(\"DL Folder Name\\nDL Folder Description\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"DL Folder Name\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DL Folder Description\"),\n\t\t\tselenium.getText(\"//div[@class='lfr-asset-description']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DL Folder Document Title\"),\n\t\t\tselenium.getText(\"//a/div[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DL Folder Document Description\"),\n\t\t\tselenium.getText(\"//div[@class='file-entry-list-description']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"9.6k\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t}","commit_id":"eaa7b54c8ab37078279c7b03c570506cf9705ca8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTestSuite(AddPageDLTest.class);\n\t\ttestSuite.addTestSuite(AddPortletDLTest.class);\n\t\ttestSuite.addTestSuite(AddPageDLDTest.class);\n\t\ttestSuite.addTestSuite(AddPortletDLDTest.class);\n\t\ttestSuite.addTestSuite(AddFolderTest.class);\n\t\ttestSuite.addTestSuite(AddFolderDocumentTest.class);\n\t\ttestSuite.addTestSuite(ViewFolderDocumentTest.class);\n\t\ttestSuite.addTestSuite(TearDownDLFolderTest.class);\n\t\ttestSuite.addTestSuite(TearDownDocumentTest.class);\n\t\ttestSuite.addTestSuite(TearDownPageTest.class);\n\n\t\treturn testSuite;\n\t}","id":53068,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTestSuite(AddPageDLTest.class);\n\t\ttestSuite.addTestSuite(AddPortletDLTest.class);\n\t\ttestSuite.addTestSuite(AddPageDLDTest.class);\n\t\ttestSuite.addTestSuite(AddPortletDLDTest.class);\n\t\ttestSuite.addTestSuite(AddFolderTest.class);\n\t\ttestSuite.addTestSuite(AddFolderDocumentTest.class);\n\t\ttestSuite.addTestSuite(ViewFolderDocumentTest.class);\n\t\ttestSuite.addTestSuite(TearDownDLFolderTest.class);\n\t\ttestSuite.addTestSuite(TearDownPageTest.class);\n\n\t\treturn testSuite;\n\t}","commit_id":"eaa7b54c8ab37078279c7b03c570506cf9705ca8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewFolder() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Document Library Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Test1 Folder1\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Test1 Folder1\\nThis is test1 folder1.\"),\n\t\t\tselenium.getText(\"//td[1]/a[2]\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Test1 Folder1\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Test1 Folder1\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This is test1 folder1.\"),\n\t\t\tselenium.getText(\"//div[@class='lfr-asset-description']\"));\n\t}","id":53069,"modified_method":"public void testViewFolder() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Document Library Display Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"DL Folder Name\\nDL Folder Description\"),\n\t\t\tselenium.getText(\"//td[1]/a[2]\"));\n\t\tselenium.clickAt(\"//td[1]/a[2]\",\n\t\t\tRuntimeVariables.replace(\"DL Folder Name\\nDL Folder Description\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"DL Folder Name\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"DL Folder Description\"),\n\t\t\tselenium.getText(\"//div[@class='lfr-asset-description']\"));\n\t}","commit_id":"eaa7b54c8ab37078279c7b03c570506cf9705ca8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageBookmarksFolder() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\",\n\t\t\tRuntimeVariables.replace(\"Communities\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Bookmarks Folder Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//strong/span\"));\n\t\tselenium.clickAt(\"//strong/span\", RuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Manage Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@name='_134_name_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Bookmarks Folder Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","id":53070,"modified_method":"public void testAddPageBookmarksFolder() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\",\n\t\t\tRuntimeVariables.replace(\"Communities\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Bookmarks Folder Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//strong/span\"));\n\t\tselenium.clickAt(\"//strong/span\", RuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Manage Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@name='_134_name_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Bookmarks Entry Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"5ff2cfd23f77c2296a74ff29096637b3c9228ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletWC() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"WC Journal Feed Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Open\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=WC Journal Feed Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Add Application\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@title='Web Content Display']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Web Content Display']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Web Content Display\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//td[1]/div/div[1]/div\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//td[1]/div/div[1]/div\"));\n\t}","id":53071,"modified_method":"public void testAddPortletWC() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"WC Journal Feed Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Open\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=WC Journal Feed Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Add Application\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@title='Web Content Display']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Web Content Display']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Web Content Display\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//td[1]/div/div/div\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//td[1]/div/div/div\"));\n\t}","commit_id":"5ff2cfd23f77c2296a74ff29096637b3c9228ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWCContent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\",\n\t\t\tRuntimeVariables.replace(\"Communities\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"WC Journal Feed Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Open\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Open\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Web Content']\",\n\t\t\tRuntimeVariables.replace(\"Add Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Web Content\"),\n\t\t\tselenium.getText(\"//span[@class='portlet-title']\"));\n\t\tselenium.type(\"_15_title\", RuntimeVariables.replace(\"Web Content Name\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_15_editor\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"FCKeditor1___Frame\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"_15_editor\\\"]\");\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"FCKeditor1___Frame\\\"]\");\n\t\tselenium.selectFrame(\"//iframe\");\n\t\tselenium.type(\"//body\", RuntimeVariables.replace(\"Web Content Body\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save and Approve']\",\n\t\t\tRuntimeVariables.replace(\"Save and Approve\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Web Content Name\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Approved\"),\n\t\t\tselenium.getText(\"//td[5]/a\"));\n\t}","id":53072,"modified_method":"public void testAddWCContent() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\",\n\t\t\tRuntimeVariables.replace(\"Communities\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"WC Journal Feed Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Open\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Open\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Web Content']\",\n\t\t\tRuntimeVariables.replace(\"Add Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Web Content\"),\n\t\t\tselenium.getText(\"//span[@class='portlet-title']\"));\n\t\tselenium.type(\"_15_title\", RuntimeVariables.replace(\"Web Content Name\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_15_editor\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"FCKeditor1___Frame\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//textarea\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"_15_editor\\\"]\");\n\t\tselenium.selectFrame(\"//iframe[@id=\\\"FCKeditor1___Frame\\\"]\");\n\t\tselenium.selectFrame(\"//iframe\");\n\t\tselenium.type(\"//body\", RuntimeVariables.replace(\"Web Content Content\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save and Approve']\",\n\t\t\tRuntimeVariables.replace(\"Save and Approve\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request processed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Web Content Name\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Approved\"),\n\t\t\tselenium.getText(\"//td[5]/a\"));\n\t}","commit_id":"5ff2cfd23f77c2296a74ff29096637b3c9228ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletScopeCurrentPage()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Group Page Scope Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Open\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Blogs Page Scope Current Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Scope\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Scope\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_scopeLayoutUuid\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"label=Current Page (Blogs Page Scope Current Page)\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tassertEquals(\"Current Page (Blogs Page Scope Current Page)\",\n\t\t\tselenium.getSelectedLabel(\"_86_scopeLayoutUuid\"));\n\t}","id":53073,"modified_method":"public void testConfigurePortletScopeCurrentPage()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Group Page Scope Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Open\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Blogs Page Scope Current Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Scope\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Scope\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.select(\"_86_scopeLayoutUuid\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"label=Current Page (Blogs Page Scope Current Page)\"));\n\t\tselenium.clickAt(\"//form[@id='_86_fm']/div/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div\"));\n\t\tassertEquals(\"Current Page (Blogs Page Scope Current Page)\",\n\t\t\tselenium.getSelectedLabel(\"_86_scopeLayoutUuid\"));\n\t}","commit_id":"5ff2cfd23f77c2296a74ff29096637b3c9228ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTestSuite(AddDocumentLibraryDocumentCommunityTest.class);\n\t\ttestSuite.addTestSuite(AddPageTest.class);\n\t\ttestSuite.addTestSuite(AddPortletTest.class);\n\t\ttestSuite.addTestSuite(AddFolderTest.class);\n\t\ttestSuite.addTestSuite(AddDocumentTest.class);\n\n\t\treturn testSuite;\n\t}","id":53074,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTestSuite(AddDocumentLibraryDocumentCommunityTest.class);\n\t\ttestSuite.addTestSuite(AddPageTest.class);\n\t\ttestSuite.addTestSuite(AddPortletTest.class);\n\t\ttestSuite.addTestSuite(AddFolderTest.class);\n\t\ttestSuite.addTestSuite(AddDocumentTest.class);\n\t\ttestSuite.addTestSuite(ViewDocumentTest.class);\n\t\treturn testSuite;\n\t}","commit_id":"5ff2cfd23f77c2296a74ff29096637b3c9228ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDragAndDropPortlet() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Group Page Layout Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Search']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Open\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Page Layout Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"main-content\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"dockbar\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"navigation\", RuntimeVariables.replace(\"\"));\n\t\tselenium.dragAndDropToObject(\"xPath=(//h1/span[2])[2]\",\n\t\t\t\"//div[@id='column-2']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Breadcrumb\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@id='column-1' and @class='yui3-aui-w30 portlet-column portlet-column-first yui3-aui-dd-drop']/div[1]/div[1]/section/header/h1/span[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Navigation\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@id='column-2' and @class='yui3-aui-w70 portlet-column portlet-column-last yui3-aui-dd-drop']/div[1]/div[1]/section/header/h1/span[2]\"));\n\t}","id":53075,"modified_method":"public void testDragAndDropPortlet() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Group Page Layout Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Search']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Open\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Page Layout Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"main-content\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"dockbar\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"navigation\", RuntimeVariables.replace(\"\"));\n\t\tselenium.dragAndDropToObject(\"xPath=(//h1/span[2])[2]\",\n\t\t\t\"//div[@id='column-2']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Breadcrumb\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@id='column-1' and @class='aui-w30 portlet-column portlet-column-first aui-dd-drop']/div[1]/div[1]/section/header/h1/span[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Navigation\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@id='column-2' and @class='aui-w70 portlet-column portlet-column-last aui-dd-drop']/div[1]/div[1]/section/header/h1/span[2]\"));\n\t}","commit_id":"5ff2cfd23f77c2296a74ff29096637b3c9228ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditPageLayout() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Group Page Layout Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Search']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Open\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Page Layout Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"main-content\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"dockbar\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"navigation\", RuntimeVariables.replace(\"\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[@id='column-1' and @class='yui3-aui-w30 portlet-column portlet-column-first yui3-aui-dd-drop']\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[@id='column-2' and @class='yui3-aui-w70 portlet-column portlet-column-last yui3-aui-dd-drop']\"));\n\t\tselenium.clickAt(\"pageTemplate\", RuntimeVariables.replace(\"Page Layout\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='layoutTemplateId2']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='layoutTemplateId2']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"main-content\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"dockbar\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"navigation\", RuntimeVariables.replace(\"\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[@id='column-1' and @class='yui3-aui-w50 portlet-column portlet-column-first yui3-aui-dd-drop']\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[@id='column-2' and @class='yui3-aui-w50 portlet-column portlet-column-last yui3-aui-dd-drop']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Breadcrumb\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@id='column-1' and @class='yui3-aui-w50 portlet-column portlet-column-first yui3-aui-dd-drop']/div[1]/div[1]/section/header/h1/span[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Navigation\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@id='column-2' and @class='yui3-aui-w50 portlet-column portlet-column-last yui3-aui-dd-drop']/div[1]/div[1]/section/header/h1/span[2]\"));\n\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\"//div[@id='column-1' and @class='yui3-aui-w30 portlet-column portlet-column-first yui3-aui-dd-drop']\"));\n\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\"//div[@id='column-2' and @class='yui3-aui-w70 portlet-column portlet-column-last yui3-aui-dd-drop']\"));\n\t}","id":53076,"modified_method":"public void testEditPageLayout() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Group Page Layout Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Search']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Open\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Page Layout Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"main-content\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"dockbar\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"navigation\", RuntimeVariables.replace(\"\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[@id='column-1' and @class='aui-w30 portlet-column portlet-column-first aui-dd-drop']/div[1]/div[1]/section/header/h1/span[2]\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[@id='column-2' and @class='aui-w70 portlet-column portlet-column-last aui-dd-drop']/div[1]/div[1]/section/header/h1/span[2]\"));\n\t\tselenium.clickAt(\"pageTemplate\", RuntimeVariables.replace(\"Page Layout\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='layoutTemplateId2']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='layoutTemplateId2']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"main-content\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"dockbar\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"navigation\", RuntimeVariables.replace(\"\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[@id='column-1' and @class='aui-w50 portlet-column portlet-column-first aui-dd-drop']\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[@id='column-2' and @class='aui-w50 portlet-column portlet-column-last aui-dd-drop']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Breadcrumb\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@id='column-1' and @class='aui-w50 portlet-column portlet-column-first aui-dd-drop']/div[1]/div[1]/section/header/h1/span[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Navigation\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@id='column-2' and @class='aui-w50 portlet-column portlet-column-last aui-dd-drop']/div[1]/div[1]/section/header/h1/span[2]\"));\n\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\"//div[@id='column-1' and @class='aui-w30 portlet-column portlet-column-first aui-dd-drop']/div[1]/div[1]/section/header/h1/span[2]\"));\n\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\"//div[@id='column-2' and @class='aui-w70 portlet-column portlet-column-last aui-dd-drop']/div[1]/div[1]/section/header/h1/span[2]\"));\n\t}","commit_id":"5ff2cfd23f77c2296a74ff29096637b3c9228ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditPageLayout() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Group Page Layout Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Search']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//tr[@class='portlet-section-body results-row']/td/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Page Layout Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//td[@id='column-1' and @class='lfr-column thirty']\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//td[@id='column-2' and @class='lfr-column seventy']\"));\n\t\tselenium.clickAt(\"link=Layout Template\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='layoutTemplateId2']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='layoutTemplateId2']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//td[@id='column-1' and @class='lfr-column fifty']\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//td[@id='column-2' and @class='lfr-column fifty']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Breadcrumb\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//td[@id='column-1' and @class='lfr-column fifty']/div/div[1]/div/div/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Navigation\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//td[@id='column-2' and @class='lfr-column fifty']/div/div[1]/div/div/span\"));\n\t}","id":53077,"modified_method":"public void testEditPageLayout() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Group Page Layout Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Search']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//tr[@class='portlet-section-body results-row']/td/a\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Page Layout Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//td[@id='column-1' and @class='lfr-column thirty']\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//td[@id='column-2' and @class='lfr-column seventy']\"));\n\t\tselenium.clickAt(\"link=Layout Template\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='layoutTemplateId2']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='layoutTemplateId2']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[5]\", RuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//td[@id='column-1' and @class='lfr-column fifty']\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//td[@id='column-2' and @class='lfr-column fifty']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Breadcrumb\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//td[@id='column-1' and @class='lfr-column fifty']/div/div[1]/div/div/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Navigation\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//td[@id='column-2' and @class='lfr-column fifty']/div/div[1]/div/div/span\"));\n\t}","commit_id":"5ff2cfd23f77c2296a74ff29096637b3c9228ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSRl_SignIn() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.setTimeout(\"180000\");\n\t\t\t\tselenium.open(\"/web/guest/home\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Sign In\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Sign In\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@id='_58_login']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\t\t\tRuntimeVariables.replace(\"socialrelationea1@liferay.com\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//input[@id='_58_rememberMeCheckbox']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(\"//input[@id='_58_rememberMeCheckbox']\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@value='Sign In']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean iAgreePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span/input\");\n\n\t\t\t\tif (!iAgreePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//input[@value='I Agree']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='I Agree']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"reminderQueryAnswer\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"reminderQueryAnswer\",\n\t\t\t\t\tRuntimeVariables.replace(\"Test\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@value='Save']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Save']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":53078,"modified_method":"public void testSRl_SignIn() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.setTimeout(\"180000\");\n\t\t\t\tselenium.open(\"/web/guest/home\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Sign In\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Sign In\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@id='_58_login']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\t\t\tRuntimeVariables.replace(\"socialrelationea1@liferay.com\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//input[@id='_58_rememberMeCheckbox']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(\"//input[@id='_58_rememberMeCheckbox']\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@value='Sign In']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean iAgreePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span/input\");\n\n\t\t\t\tif (!iAgreePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//input[@value='I Agree']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='I Agree']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='password1']\",\n\t\t\t\t\tRuntimeVariables.replace(\"asdf\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='password2']\",\n\t\t\t\t\tRuntimeVariables.replace(\"asdf\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Save']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"reminderQueryAnswer\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"reminderQueryAnswer\",\n\t\t\t\t\tRuntimeVariables.replace(\"Test\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@value='Save']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Save']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"5ff2cfd23f77c2296a74ff29096637b3c9228ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSRl_ViewFriends() throws Exception {\n\t\tselenium.open(\"/web/socialrelationsn1/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Friends Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Friends Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"You have 1 friends.\"),\n\t\t\tselenium.getText(\"//section/div/div/div/div[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"socialrelationfn2 socialrelationmn2 socialrelationln2\"),\n\t\t\tselenium.getText(\"//a[@class='user-name']\"));\n\t}","id":53079,"modified_method":"public void testSRl_ViewFriends() throws Exception {\n\t\tselenium.open(\"/web/socialrelationsn1/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Friends Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"link=Friends Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"You have 1 friends.\"),\n\t\t\tselenium.getText(\"//section/div/div/div/div[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"socialrelationfn2 socialrelationmn2 socialrelationln2\"),\n\t\t\tselenium.getText(\"//span[@class='user-name']\"));\n\t}","commit_id":"5ff2cfd23f77c2296a74ff29096637b3c9228ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSRq_SignIn() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.setTimeout(\"180000\");\n\t\t\t\tselenium.open(\"/web/guest/home\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Sign In\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Sign In\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@id='_58_login']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\t\t\tRuntimeVariables.replace(\"socialrequestea1@liferay.com\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//input[@id='_58_rememberMeCheckbox']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(\"//input[@id='_58_rememberMeCheckbox']\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@value='Sign In']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean iAgreePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span/input\");\n\n\t\t\t\tif (!iAgreePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//input[@value='I Agree']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='I Agree']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"reminderQueryAnswer\",\n\t\t\t\t\tRuntimeVariables.replace(\"Test\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"reminderQueryAnswer\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@value='Save']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Save']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":53080,"modified_method":"public void testSRq_SignIn() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.setTimeout(\"180000\");\n\t\t\t\tselenium.open(\"/web/guest/home\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Sign In\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Sign In\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@id='_58_login']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\t\t\tRuntimeVariables.replace(\"socialrequestea1@liferay.com\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//input[@id='_58_rememberMeCheckbox']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(\"//input[@id='_58_rememberMeCheckbox']\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@value='Sign In']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean iAgreePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span/input\");\n\n\t\t\t\tif (!iAgreePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//input[@value='I Agree']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='I Agree']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='password1']\",\n\t\t\t\t\tRuntimeVariables.replace(\"asdf\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='password2']\",\n\t\t\t\t\tRuntimeVariables.replace(\"asdf\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Save']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"reminderQueryAnswer\",\n\t\t\t\t\tRuntimeVariables.replace(\"Test\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"reminderQueryAnswer\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@value='Save']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Save']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"5ff2cfd23f77c2296a74ff29096637b3c9228ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTest(AddressTests.suite());\n\t\ttestSuite.addTest(AnnouncementsTests.suite());\n\t\ttestSuite.addTest(AnnouncementsDeliveryTests.suite());\n\t\ttestSuite.addTest(BookmarksTests.suite());\n\t\ttestSuite.addTest(CalendarTests.suite());\n\t\ttestSuite.addTest(CommunityTests.suite());\n\t\ttestSuite.addTest(DocumentLibraryTests.suite());\n\t\ttestSuite.addTest(ExpandoTests.suite());\n\t\ttestSuite.addTest(GroupsTests.suite());\n\t\ttestSuite.addTest(OrganizationsTests.suite());\n\t\ttestSuite.addTest(PortletPermissionsTests.suite());\n\t\ttestSuite.addTest(ShoppingTests.suite());\n\t\ttestSuite.addTest(StagingCommunityTests.suite());\n\t\ttestSuite.addTest(StagingOrganizationTests.suite());\n\t\ttestSuite.addTest(TagsTests.suite());\n\t\ttestSuite.addTest(WebContentTests.suite());\n\t\ttestSuite.addTest(WikiTests.suite());\n\t\ttestSuite.addTest(SocialTests.suite());\n\n\t\treturn testSuite;\n\t}","id":53081,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTest(AddressTests.suite());\n\t\ttestSuite.addTest(AnnouncementsTests.suite());\n\t\ttestSuite.addTest(AnnouncementsDeliveryTests.suite());\n\t\ttestSuite.addTest(BookmarksTests.suite());\n\t\ttestSuite.addTest(CalendarTests.suite());\n\t\ttestSuite.addTest(CommunityTests.suite());\n\t\ttestSuite.addTest(DocumentLibraryTests.suite());\n\t\ttestSuite.addTest(ExpandoTests.suite());\n\t\ttestSuite.addTest(GroupsTests.suite());\n\t\ttestSuite.addTest(MessageBoardsTests.suite());\n\t\ttestSuite.addTest(OrganizationsTests.suite());\n\t\ttestSuite.addTest(PortletPermissionsTests.suite());\n\t\ttestSuite.addTest(ShoppingTests.suite());\n\t\ttestSuite.addTest(StagingCommunityTests.suite());\n\t\ttestSuite.addTest(StagingOrganizationTests.suite());\n\t\ttestSuite.addTest(TagsTests.suite());\n\t\ttestSuite.addTest(WebContentTests.suite());\n\t\ttestSuite.addTest(WikiTests.suite());\n\t\ttestSuite.addTest(SocialTests.suite());\n\n\t\treturn testSuite;\n\t}","commit_id":"5ff2cfd23f77c2296a74ff29096637b3c9228ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSearchTags() throws Exception {\n\t\tselenium.open(\"/web/tags-message-board-community/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Boards Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_19_keywords1']\",\n\t\t\tRuntimeVariables.replace(\"selenium1\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Message1 Tag1 Test1\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Message2 Tag2 Test2\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Message3 Tag3 Test3\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=MessageA TagA TestA\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=MessageB TagB TestB\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=MessageC TagC TestC\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Message Boards Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_19_keywords1']\",\n\t\t\tRuntimeVariables.replace(\"selenium2\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Message2 Tag2 Test2\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Message1 Tag1 Test1\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Message3 Tag3 Test3\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=MessageA TagA TestA\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=MessageB TagB TestB\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=MessageC TagC TestC\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Message Boards Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_19_keywords1']\",\n\t\t\tRuntimeVariables.replace(\"selenium3\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Message3 Tag3 Test3\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Message1 Tag1 Test1\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Message2 Tag2 Test2\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=MessageA TagA TestA\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=MessageB TagB TestB\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=MessageC TagC TestC\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Message Boards Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_19_keywords1']\",\n\t\t\tRuntimeVariables.replace(\"selenium\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=MessageA TagA TestA\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=MessageB TagB TestB\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=MessageC TagC TestC\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Message1 Tag1 Test1\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Message2 Tag2 Test2\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Message3 Tag3 Test3\"));\n\t}","id":53082,"modified_method":"public void testSearchTags() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Tags Message Board Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Open\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_19_keywords1\", RuntimeVariables.replace(\"selenium1\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Message1 Tag1 Test1\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Message2 Tag2 Test2\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Message3 Tag3 Test3\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=MessageA TagA TestA\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=MessageB TagB TestB\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=MessageC TagC TestC\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Message Boards Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_19_keywords1\", RuntimeVariables.replace(\"selenium2\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Message2 Tag2 Test2\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Message1 Tag1 Test1\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Message3 Tag3 Test3\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=MessageA TagA TestA\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=MessageB TagB TestB\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=MessageC TagC TestC\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Message Boards Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_19_keywords1\", RuntimeVariables.replace(\"selenium3\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Message3 Tag3 Test3\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Message1 Tag1 Test1\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Message2 Tag2 Test2\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=MessageA TagA TestA\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=MessageB TagB TestB\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=MessageC TagC TestC\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Message Boards Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_19_keywords1\", RuntimeVariables.replace(\"selenium\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=MessageA TagA TestA\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=MessageB TagB TestB\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=MessageC TagC TestC\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Message1 Tag1 Test1\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Message2 Tag2 Test2\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Message3 Tag3 Test3\"));\n\t}","commit_id":"5ff2cfd23f77c2296a74ff29096637b3c9228ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectWebContentImageAssociation()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Web Content Image Association Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Open\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//img[@alt='Select Web Content']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Image Web Content Test\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Image Web Content Test\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isPartialText(\"//form[@id='_86_fm1']/div\",\n\t\t\t\t\t\t\t\"Displaying Content:\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//form[@id='_86_fm1']/div\",\n\t\t\t\t\"Displaying Content:\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div[1]\"));\n\t}","id":53083,"modified_method":"public void testSelectWebContentImageAssociation()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Web Content Image Association Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Open\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//img[@alt='Select Web Content']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Image Web Content Test\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Image Web Content Test\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isPartialText(\"//form[@id='_86_fm1']/div\",\n\t\t\t\t\t\t\t\"Displaying Content:\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//form[@id='_86_fm1']/div\",\n\t\t\t\t\"Displaying Content:\"));\n\t\tselenium.clickAt(\"//form[2]/div/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@id='p_p_id_86_']/div/div[1]\"));\n\t}","commit_id":"5ff2cfd23f77c2296a74ff29096637b3c9228ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSignIn() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.setTimeout(\"180000\");\n\t\t\t\tselenium.open(\"/web/guest/home\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Sign In\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Sign In\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@id='_58_login']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test@liferay.com\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//input[@id='_58_rememberMeCheckbox']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(\"//input[@id='_58_rememberMeCheckbox']\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@value='Sign In']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean iAgreePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span/input\");\n\n\t\t\t\tif (!iAgreePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//input[@value='I Agree']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='I Agree']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"reminderQueryAnswer\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"reminderQueryAnswer\",\n\t\t\t\t\tRuntimeVariables.replace(\"Test\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@value='Save']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Save']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":53084,"modified_method":"public void testSignIn() throws Exception {\n\t\tselenium.setTimeout(\"180000\");\n\t\tselenium.open(\"/web/guest/home\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Sign In\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sign In\", RuntimeVariables.replace(\"Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_58_login']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\tRuntimeVariables.replace(\"test@liferay.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_58_rememberMeCheckbox']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(\"//input[@id='_58_rememberMeCheckbox']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Sign In']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"5ff2cfd23f77c2296a74ff29096637b3c9228ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSignIn() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Sign In\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sign In\", RuntimeVariables.replace(\"Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\tRuntimeVariables.replace(\"test@liferay.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_58_rememberMeCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Remember Me Checkbox\"));\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":53085,"modified_method":"public void testSignIn() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Sign In\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sign In\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_58_login\", RuntimeVariables.replace(\"test@liferay.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@type='checkbox']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"5ff2cfd23f77c2296a74ff29096637b3c9228ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSignIn() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.setTimeout(\"180000\");\n\t\t\t\tselenium.open(\"/web/guest/home\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Sign In\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Sign In\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@id='_58_login']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test@liferay.com\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//input[@id='_58_rememberMeCheckbox']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(\"//input[@id='_58_rememberMeCheckbox']\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@value='Sign In']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean iAgreePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span/input\");\n\n\t\t\t\tif (!iAgreePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//input[@value='I Agree']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='I Agree']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"reminderQueryAnswer\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"reminderQueryAnswer\",\n\t\t\t\t\tRuntimeVariables.replace(\"Test\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@value='Save']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Save']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":53086,"modified_method":"public void testSignIn() throws Exception {\n\t\tselenium.setTimeout(\"180000\");\n\t\tselenium.open(\"/web/guest/home\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Sign In\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sign In\", RuntimeVariables.replace(\"Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_58_login']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\tRuntimeVariables.replace(\"test@liferay.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_58_rememberMeCheckbox']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(\"//input[@id='_58_rememberMeCheckbox']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@value='Sign In']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"5ff2cfd23f77c2296a74ff29096637b3c9228ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSignOut() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Sign Out\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sign Out\", RuntimeVariables.replace(\"Sign Out\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":53087,"modified_method":"public void testSignOut() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Sign Out\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sign Out\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"5ff2cfd23f77c2296a74ff29096637b3c9228ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewActivityBlogsEntry() throws Exception {\n\t\tselenium.open(\"/web/joebloggs/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Activities Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Activities Page\",\n\t\t\tRuntimeVariables.replace(\"Activities Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Joe wrote a new blog entry, Blogs Entry Title, in Liferay.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='activity-title'])[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='activity-title'])[2]/a\"));\n\t}","id":53088,"modified_method":"public void testViewActivityBlogsEntry() throws Exception {\n\t\tselenium.open(\"/web/joebloggs/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Activities Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Activities Page\",\n\t\t\tRuntimeVariables.replace(\"Activities Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Joe wrote a new blog entry, Blogs Entry Title.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='activity-title'])[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Entry Title\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='activity-title'])[2]/a\"));\n\t}","commit_id":"5ff2cfd23f77c2296a74ff29096637b3c9228ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewActivityMBCategoryThreadMessage()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/joebloggs/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Activities Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Activities Page\",\n\t\t\tRuntimeVariables.replace(\"Activities Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Joe wrote a new message board post, MB Category Thread Message Subject, in Liferay.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='activity-title'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"MB Category Thread Message Subject\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='activity-title'])[1]/a\"));\n\t}","id":53089,"modified_method":"public void testViewActivityMBCategoryThreadMessage()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/joebloggs/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Activities Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Activities Page\",\n\t\t\tRuntimeVariables.replace(\"Activities Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Joe wrote a new message board post, MB Category Thread Message Subject.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='activity-title'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"MB Category Thread Message Subject\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='activity-title'])[1]/a\"));\n\t}","commit_id":"5ff2cfd23f77c2296a74ff29096637b3c9228ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewAddress1MyAccount() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=My Account\",\n\t\t\tRuntimeVariables.replace(\"My Account\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//a[@id='_2_addressesLink']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_2_addressesLink']\",\n\t\t\t\t\"Addresses\"));\n\t\tselenium.clickAt(\"//a[@id='_2_addressesLink']\",\n\t\t\tRuntimeVariables.replace(\"Addresses\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (\"United States\".equals(selenium.getSelectedLabel(\n\t\t\t\t\t\t\t\t\"//select[@id='_2_addressCountryId0']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (\"California\".equals(selenium.getSelectedLabel(\n\t\t\t\t\t\t\t\t\"//select[@id='_2_addressRegionId0']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(\"1220 Brea Canyon Rd\",\n\t\t\tselenium.getValue(\"//input[@id='_2_addressStreet1_0']\"));\n\t\tassertEquals(\"Ste 12\",\n\t\t\tselenium.getValue(\"//input[@id='_2_addressStreet2_0']\"));\n\t\tassertEquals(\"Business\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_2_addressTypeId0']\"));\n\t\tassertEquals(\"91789\", selenium.getValue(\"//input[@id='_2_addressZip0']\"));\n\t\tassertEquals(\"Walnut\",\n\t\t\tselenium.getValue(\"//input[@id='_2_addressStreet3_0']\"));\n\t\tassertEquals(\"Los Angeles\",\n\t\t\tselenium.getValue(\"//input[@id='_2_addressCity0']\"));\n\t\tassertEquals(\"United States\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_2_addressCountryId0']\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_2_addressPrimary0']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_2_addressMailing0Checkbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(\"California\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_2_addressRegionId0']\"));\n\t}","id":53090,"modified_method":"public void testViewAddress1MyAccount() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=My Account\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"addressesLink\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (\"United States\".equals(selenium.getSelectedLabel(\n\t\t\t\t\t\t\t\t\"_2_addressCountryId0\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (\"California\".equals(selenium.getSelectedLabel(\n\t\t\t\t\t\t\t\t\"_2_addressRegionId0\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(\"1220 Brea Canyon Rd\",\n\t\t\tselenium.getValue(\"_2_addressStreet1_0\"));\n\t\tassertEquals(\"Ste 12\", selenium.getValue(\"_2_addressStreet2_0\"));\n\t\tassertEquals(\"Business\", selenium.getSelectedLabel(\"_2_addressTypeId0\"));\n\t\tassertEquals(\"91789\", selenium.getValue(\"_2_addressZip0\"));\n\t\tassertEquals(\"Walnut\", selenium.getValue(\"_2_addressStreet3_0\"));\n\t\tassertEquals(\"Los Angeles\", selenium.getValue(\"_2_addressCity0\"));\n\t\tassertEquals(\"United States\",\n\t\t\tselenium.getSelectedLabel(\"_2_addressCountryId0\"));\n\t\tassertTrue(selenium.isChecked(\"_2_addressPrimary0\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isChecked(\"_2_addressMailing0Checkbox\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(\"California\",\n\t\t\tselenium.getSelectedLabel(\"_2_addressRegionId0\"));\n\t}","commit_id":"5ff2cfd23f77c2296a74ff29096637b3c9228ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewAddress2MyAccount() throws Exception {\n\t\tselenium.open(\"/web/guest/home\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=My Account\",\n\t\t\tRuntimeVariables.replace(\"My Account\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//a[@id='_2_addressesLink']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_2_addressesLink']\",\n\t\t\t\t\"Addresses\"));\n\t\tselenium.clickAt(\"//a[@id='_2_addressesLink']\",\n\t\t\tRuntimeVariables.replace(\"Addresses\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (\"Canada\".equals(selenium.getSelectedLabel(\n\t\t\t\t\t\t\t\t\"//select[@id='_2_addressCountryId1']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (\"Ontario\".equals(selenium.getSelectedLabel(\n\t\t\t\t\t\t\t\t\"//select[@id='_2_addressRegionId1']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(\"123 Lets\",\n\t\t\tselenium.getValue(\"//input[@id='_2_addressStreet1_1']\"));\n\t\tassertEquals(\"Other\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_2_addressTypeId1']\"));\n\t\tassertEquals(\"897 Hope\",\n\t\t\tselenium.getValue(\"//input[@id='_2_addressStreet2_1']\"));\n\t\tassertEquals(\"00000\", selenium.getValue(\"//input[@id='_2_addressZip1']\"));\n\t\tassertEquals(\"7896 This\",\n\t\t\tselenium.getValue(\"//input[@id='_2_addressStreet3_1']\"));\n\t\tassertEquals(\"Works\",\n\t\t\tselenium.getValue(\"//input[@id='_2_addressCity1']\"));\n\t\tassertEquals(\"Canada\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_2_addressCountryId1']\"));\n\t\tassertEquals(\"Ontario\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_2_addressRegionId1']\"));\n\t}","id":53091,"modified_method":"public void testViewAddress2MyAccount() throws Exception {\n\t\tselenium.open(\"/web/guest/home\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=My Account\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"addressesLink\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (\"Canada\".equals(selenium.getSelectedLabel(\n\t\t\t\t\t\t\t\t\"_2_addressCountryId1\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (\"Ontario\".equals(selenium.getSelectedLabel(\n\t\t\t\t\t\t\t\t\"_2_addressRegionId1\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(\"123 Lets\", selenium.getValue(\"_2_addressStreet1_1\"));\n\t\tassertEquals(\"Other\", selenium.getSelectedLabel(\"_2_addressTypeId1\"));\n\t\tassertEquals(\"897 Hope\", selenium.getValue(\"_2_addressStreet2_1\"));\n\t\tassertEquals(\"00000\", selenium.getValue(\"_2_addressZip1\"));\n\t\tassertEquals(\"7896 This\", selenium.getValue(\"_2_addressStreet3_1\"));\n\t\tassertEquals(\"Works\", selenium.getValue(\"_2_addressCity1\"));\n\t\tassertEquals(\"Canada\", selenium.getSelectedLabel(\"_2_addressCountryId1\"));\n\t\tassertEquals(\"Ontario\", selenium.getSelectedLabel(\"_2_addressRegionId1\"));\n\t}","commit_id":"5ff2cfd23f77c2296a74ff29096637b3c9228ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewAddress3MyAccount() throws Exception {\n\t\tselenium.open(\"/web/guest/home\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=My Account\",\n\t\t\tRuntimeVariables.replace(\"My Account\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//a[@id='_2_addressesLink']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_2_addressesLink']\",\n\t\t\t\t\"Addresses\"));\n\t\tselenium.clickAt(\"//a[@id='_2_addressesLink']\",\n\t\t\tRuntimeVariables.replace(\"Addresses\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (\"United States\".equals(selenium.getSelectedLabel(\n\t\t\t\t\t\t\t\t\"//select[@id='_2_addressCountryId2']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (\"California\".equals(selenium.getSelectedLabel(\n\t\t\t\t\t\t\t\t\"//select[@id='_2_addressRegionId2']\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(\"1220 Brea Canyon Rd\",\n\t\t\tselenium.getValue(\"//input[@id='_2_addressStreet1_2']\"));\n\t\tassertEquals(\"Business\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_2_addressTypeId2']\"));\n\t\tassertEquals(\"Ste 12\",\n\t\t\tselenium.getValue(\"//input[@id='_2_addressStreet2_2']\"));\n\t\tassertEquals(\"91789\", selenium.getValue(\"//input[@id='_2_addressZip2']\"));\n\t\tassertEquals(\"Walnut\",\n\t\t\tselenium.getValue(\"//input[@id='_2_addressStreet3_2']\"));\n\t\tassertEquals(\"Los Angeles\",\n\t\t\tselenium.getValue(\"//input[@id='_2_addressCity2']\"));\n\t\tassertEquals(\"United States\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_2_addressCountryId2']\"));\n\t\tassertEquals(\"California\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_2_addressRegionId2']\"));\n\t}","id":53092,"modified_method":"public void testViewAddress3MyAccount() throws Exception {\n\t\tselenium.open(\"/web/guest/home\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=My Account\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"addressesLink\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (\"United States\".equals(selenium.getSelectedLabel(\n\t\t\t\t\t\t\t\t\"_2_addressCountryId2\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (\"California\".equals(selenium.getSelectedLabel(\n\t\t\t\t\t\t\t\t\"_2_addressRegionId2\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(\"1220 Brea Canyon Rd\",\n\t\t\tselenium.getValue(\"_2_addressStreet1_2\"));\n\t\tassertEquals(\"Business\", selenium.getSelectedLabel(\"_2_addressTypeId2\"));\n\t\tassertEquals(\"Ste 12\", selenium.getValue(\"_2_addressStreet2_2\"));\n\t\tassertEquals(\"91789\", selenium.getValue(\"_2_addressZip2\"));\n\t\tassertEquals(\"Walnut\", selenium.getValue(\"_2_addressStreet3_2\"));\n\t\tassertEquals(\"Los Angeles\", selenium.getValue(\"_2_addressCity2\"));\n\t\tassertEquals(\"United States\",\n\t\t\tselenium.getSelectedLabel(\"_2_addressCountryId2\"));\n\t\tassertEquals(\"California\",\n\t\t\tselenium.getSelectedLabel(\"_2_addressRegionId2\"));\n\t}","commit_id":"5ff2cfd23f77c2296a74ff29096637b3c9228ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewAnnouncementDelivery() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=My Account\",\n\t\t\tRuntimeVariables.replace(\"My Account\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//a[@id='_2_announcementsLink']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_2_announcementsLink']\",\n\t\t\t\t\"Announcements\"));\n\t\tselenium.clickAt(\"//a[@id='_2_announcementsLink']\",\n\t\t\tRuntimeVariables.replace(\"Announcements\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_2_announcementsTypegeneralEmailCheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_2_announcementsTypegeneralSmsCheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//input[@id='_2_announcementsTypegeneralWebsiteCheckbox' and @disabled='']\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_2_announcementsTypenewsEmailCheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_2_announcementsTypenewsSmsCheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//input[@id='_2_announcementsTypenewsWebsiteCheckbox' and @disabled='']\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_2_announcementsTypetestEmailCheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_2_announcementsTypetestSmsCheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//input[@id='_2_announcementsTypetestWebsiteCheckbox' and @disabled='']\"));\n\t}","id":53093,"modified_method":"public void testViewAnnouncementDelivery() throws Exception {\n\t\tselenium.open(\"/web/guest/home\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Joe Bloggs\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Joe Bloggs\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"announcementsLink\", RuntimeVariables.replace(\"\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"_2_announcementsTypegeneralEmailCheckbox\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isChecked(\"_2_announcementsTypegeneralSmsCheckbox\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//input[@id='_2_announcementsTypegeneralWebsiteCheckbox' and @disabled='']\"));\n\t\tassertTrue(selenium.isChecked(\"_2_announcementsTypenewsSmsCheckbox\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isChecked(\"_2_announcementsTypenewsSmsCheckbox\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//input[@id='_2_announcementsTypenewsWebsiteCheckbox' and @disabled='']\"));\n\t\tassertTrue(selenium.isChecked(\"_2_announcementsTypetestEmailCheckbox\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isChecked(\"_2_announcementsTypetestSmsCheckbox\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//input[@id='_2_announcementsTypetestWebsiteCheckbox' and @disabled='']\"));\n\t}","commit_id":"5ff2cfd23f77c2296a74ff29096637b3c9228ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewAnnouncementsEntry() throws Exception {\n\t\tselenium.open(\n\t\t\t\"/web/announcements-entry-community/announcements-entry-page\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Announcements Entry Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Announcements Entry Page\",\n\t\t\tRuntimeVariables.replace(\"Announcements Entry Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Announcements Entry Name\"),\n\t\t\tselenium.getText(\"//div/h3/a\"));\n\t\tassertTrue(selenium.isPartialText(\"//p\", \"Announcements Entry Content\"));\n\t\tselenium.clickAt(\"//div/h3/a\",\n\t\t\tRuntimeVariables.replace(\"Announcements Entry Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"//img[@alt='Liferay']\"));\n\t}","id":53094,"modified_method":"public void testViewAnnouncementsEntry() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Announcements Entry Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[1]/a\", RuntimeVariables.replace(\"Open\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Announcements Entry Name\"),\n\t\t\tselenium.getText(\"//div/h3/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"General Announcements Entry Content\"), selenium.getText(\"//p\"));\n\t}","commit_id":"5ff2cfd23f77c2296a74ff29096637b3c9228ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewAssignMembersRoleCommunity() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Roles\", RuntimeVariables.replace(\"Roles\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@name='_128_keywords']\",\n\t\t\tRuntimeVariables.replace(\"RolesGroupsRolesName\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"RolesGroupsRolesName\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//strong/a\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Assign Members\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Communities\"),\n\t\t\tselenium.getText(\"//form/ul[1]/li[2]/span/span/a\"));\n\t\tselenium.clickAt(\"//form/ul[1]/li[2]/span/span/a\",\n\t\t\tRuntimeVariables.replace(\"Communities\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Current\", RuntimeVariables.replace(\"Current\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isChecked(\"//input[@name='_128_rowIds']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Community Groups Roles\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Open\"),\n\t\t\tselenium.getText(\"//tr[3]/td[3]\"));\n\t}","id":53095,"modified_method":"public void testViewAssignMembersRoleCommunity() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Roles\", RuntimeVariables.replace(\"Roles\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@name='_128_keywords']\",\n\t\t\tRuntimeVariables.replace(\"RolesGroupsRolesName\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"RolesGroupsRolesName\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//td[4]/span/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Assign Members\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Sites\"),\n\t\t\tselenium.getText(\"//form/ul[1]/li[2]/span/a\"));\n\t\tselenium.clickAt(\"//form/ul[1]/li[2]/span/a\",\n\t\t\tRuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Current\", RuntimeVariables.replace(\"Current\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isChecked(\"//input[@name='_128_rowIds']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Community Groups Roles\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Open\"),\n\t\t\tselenium.getText(\"//tr[3]/td[3]\"));\n\t}","commit_id":"5ff2cfd23f77c2296a74ff29096637b3c9228ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewBlogsPortletNull() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Blogs Portlet Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Blogs Portlet Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Portlet Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You do not have the roles required to access this portlet.\"));\n\t}","id":53096,"modified_method":"public void testViewBlogsPortletNull() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Blogs Portlet Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Blogs Portlet Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You do not have the roles required to access this portlet.\"));\n\t}","commit_id":"5ff2cfd23f77c2296a74ff29096637b3c9228ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewBlogsPortlet() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Blogs Portlet Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Blogs Portlet Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Portlet Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"You do not have the roles required to access this portlet.\"));\n\t}","id":53097,"modified_method":"public void testViewBlogsPortlet() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Blogs Portlet Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Blogs Portlet Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"You do not have the roles required to access this portlet.\"));\n\t}","commit_id":"5ff2cfd23f77c2296a74ff29096637b3c9228ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewCalendarEvent() throws Exception {\n\t\tselenium.open(\"/web/calendar-event-community/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Calendar Event Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar Event Page\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"Events\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"5/31/10\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Hashi's birthday bash\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Anniversary\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\", RuntimeVariables.replace(\"5/31/10\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"5/31/10\"),\n\t\t\tselenium.getText(\"//dd[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This is so much fun!\"),\n\t\t\tselenium.getText(\"//p[2]\"));\n\t}","id":53098,"modified_method":"public void testViewCalendarEvent() throws Exception {\n\t\tselenium.open(\"/web/calendar-event-community/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Calendar Event Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Calendar Event Page\",\n\t\t\tRuntimeVariables.replace(\"Calendar Event Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Events\", RuntimeVariables.replace(\"Events\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"5/31/10\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Hashi's birthday bash\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Anniversary\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\", RuntimeVariables.replace(\"5/31/10\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"5/31/10\"),\n\t\t\tselenium.getText(\"//dd[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This is so much fun!\"),\n\t\t\tselenium.getText(\"//p\"));\n\t}","commit_id":"5ff2cfd23f77c2296a74ff29096637b3c9228ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewCategoryItem() throws Exception {\n\t\tselenium.open(\"/web/shopping-item-community/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Shopping Item Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Shopping Item Page\",\n\t\t\tRuntimeVariables.replace(\"Shopping Item Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Categories\",\n\t\t\tRuntimeVariables.replace(\"Categories\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//td[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//td[2]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"1111\"),\n\t\t\tselenium.getText(\"//td[1]/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Item Test\\n \\n This is an item test. \\n Limited: Time Only \\n\\n Price for 1 Items and Above: $9.99\\n \\n Availability: In Stock\"),\n\t\t\tselenium.getText(\"//td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Item Test\\n \\n This is an item test. \\n Limited: Time Only \\n\\n Price for 1 Items and Above: $9.99\\n \\n Availability: In Stock\"),\n\t\t\tselenium.getText(\"//td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"In Stock\"),\n\t\t\tselenium.getText(\"//td[3]/div[1]\"));\n\t}","id":53099,"modified_method":"public void testViewCategoryItem() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Shopping Item Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Open\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Shopping Item Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[1]/a\", RuntimeVariables.replace(\"Category Test\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Item Test\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Item Test\\n \\n This is an item test. \\n Limited: Time Only \\n\\n Price for 1 Items and Above: $9.99\\n \\n Availability: In Stock\"),\n\t\t\tselenium.getText(\"//td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"In Stock\"),\n\t\t\tselenium.getText(\"//td[3]/div[1]\"));\n\t}","commit_id":"5ff2cfd23f77c2296a74ff29096637b3c9228ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewCategory() throws Exception {\n\t\tselenium.open(\"/web/shopping-category-community/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Shopping Category Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Shopping Category Page\",\n\t\t\tRuntimeVariables.replace(\"Shopping Category Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Category Test\\nThis is a category test.\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t}","id":53100,"modified_method":"public void testViewCategory() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Shopping Category Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//td[2]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Shopping Category Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Category Test\\nThis is a category test.\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t}","commit_id":"5ff2cfd23f77c2296a74ff29096637b3c9228ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewCheckOutOrder() throws Exception {\n\t\tselenium.open(\"/web/shopping-order-community/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Shopping Order Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Shopping Order Page\",\n\t\t\tRuntimeVariables.replace(\"Shopping Order Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Orders\", RuntimeVariables.replace(\"Orders\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Order Number\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Joe\"),\n\t\t\tselenium.getText(\"//td[1]/table/tbody/tr[1]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe\"),\n\t\t\tselenium.getText(\"//td[2]/table/tbody/tr[1]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Bloggs\"),\n\t\t\tselenium.getText(\"//td[1]/table/tbody/tr[2]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Bloggs\"),\n\t\t\tselenium.getText(\"//td[2]/table/tbody/tr[2]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"test@liferay.com\"),\n\t\t\tselenium.getText(\"//td[1]/table/tbody/tr[3]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"test@liferay.com\"),\n\t\t\tselenium.getText(\"//td[2]/table/tbody/tr[3]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1234 Sesame Street\"),\n\t\t\tselenium.getText(\"//tr[5]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1234 Sesame Street\"),\n\t\t\tselenium.getText(\"//td[2]/table/tbody/tr[5]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Gotham City:\"),\n\t\t\tselenium.getText(\"//tr[6]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Gotham City:\"),\n\t\t\tselenium.getText(\"//td[2]/table/tbody/tr[6]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"CA\"),\n\t\t\tselenium.getText(\"//tr[7]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"CA\"),\n\t\t\tselenium.getText(\"//td[2]/table/tbody/tr[7]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"90028\"),\n\t\t\tselenium.getText(\"//tr[8]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"90028\"),\n\t\t\tselenium.getText(\"//td[2]/table/tbody/tr[8]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"USA\"),\n\t\t\tselenium.getText(\"//tr[9]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"USA\"),\n\t\t\tselenium.getText(\"//td[2]/table/tbody/tr[9]/td[2]\"));\n\t\tassertTrue(selenium.isPartialText(\"//tr[10]/td[2]\", \"626-589-1453\"));\n\t\tassertTrue(selenium.isPartialText(\"//td[2]/table/tbody/tr[10]/td[2]\",\n\t\t\t\t\"626-589-1453\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//table[3]/tbody/tr[1]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Visa\"),\n\t\t\tselenium.getText(\"//table[3]/tbody/tr[2]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"exact:************1111\"),\n\t\t\tselenium.getText(\"//table[3]/tbody/tr[3]/td[2]\"));\n\t\tassertTrue(selenium.isPartialText(\"//form\",\n\t\t\t\t\"Please take care of my order.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"$9.99\"),\n\t\t\tselenium.getText(\"//table[4]/tbody/tr[1]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"$0.00\"),\n\t\t\tselenium.getText(\"//table[4]/tbody/tr[2]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"$0.00\"),\n\t\t\tselenium.getText(\"//table[4]/tbody/tr[3]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"$9.99\"),\n\t\t\tselenium.getText(\"//table[4]/tbody/tr[4]/td[2]\"));\n\t}","id":53101,"modified_method":"public void testViewCheckOutOrder() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Shopping Order Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Open\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Shopping Order Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Orders\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Order Number\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Joe\"),\n\t\t\tselenium.getText(\"//td[1]/table/tbody/tr[1]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe\"),\n\t\t\tselenium.getText(\"//td[2]/table/tbody/tr[1]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Bloggs\"),\n\t\t\tselenium.getText(\"//td[1]/table/tbody/tr[2]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Bloggs\"),\n\t\t\tselenium.getText(\"//td[2]/table/tbody/tr[2]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"test@liferay.com\"),\n\t\t\tselenium.getText(\"//td[1]/table/tbody/tr[3]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"test@liferay.com\"),\n\t\t\tselenium.getText(\"//td[2]/table/tbody/tr[3]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1234 Sesame Street\"),\n\t\t\tselenium.getText(\"//tr[5]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1234 Sesame Street\"),\n\t\t\tselenium.getText(\"//td[2]/table/tbody/tr[5]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Gotham City:\"),\n\t\t\tselenium.getText(\"//tr[6]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Gotham City:\"),\n\t\t\tselenium.getText(\"//td[2]/table/tbody/tr[6]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"CA\"),\n\t\t\tselenium.getText(\"//tr[7]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"CA\"),\n\t\t\tselenium.getText(\"//td[2]/table/tbody/tr[7]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"90028\"),\n\t\t\tselenium.getText(\"//tr[8]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"90028\"),\n\t\t\tselenium.getText(\"//td[2]/table/tbody/tr[8]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"USA\"),\n\t\t\tselenium.getText(\"//tr[9]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"USA\"),\n\t\t\tselenium.getText(\"//td[2]/table/tbody/tr[9]/td[2]\"));\n\t\tassertTrue(selenium.isPartialText(\"//tr[10]/td[2]\", \"626-589-1453\"));\n\t\tassertTrue(selenium.isPartialText(\"//td[2]/table/tbody/tr[10]/td[2]\",\n\t\t\t\t\"626-589-1453\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//table[3]/tbody/tr[1]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Visa\"),\n\t\t\tselenium.getText(\"//table[3]/tbody/tr[2]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"exact:************1111\"),\n\t\t\tselenium.getText(\"//table[3]/tbody/tr[3]/td[2]\"));\n\t\tassertTrue(selenium.isPartialText(\"//form\",\n\t\t\t\t\"Please take care of my order.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"$9.99\"),\n\t\t\tselenium.getText(\"//table[4]/tbody/tr[1]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"$0.00\"),\n\t\t\tselenium.getText(\"//table[4]/tbody/tr[2]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"$0.00\"),\n\t\t\tselenium.getText(\"//table[4]/tbody/tr[3]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"$9.99\"),\n\t\t\tselenium.getText(\"//table[4]/tbody/tr[4]/td[2]\"));\n\t}","commit_id":"5ff2cfd23f77c2296a74ff29096637b3c9228ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewCoupon() throws Exception {\n\t\tselenium.open(\"/web/shopping-coupon-community/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Shopping Coupon Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Shopping Coupon Page\",\n\t\t\tRuntimeVariables.replace(\"Shopping Coupon Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Coupons\", RuntimeVariables.replace(\"Coupons\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Coupon Code\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(\"Coupon Test\", selenium.getValue(\"//input[@id='_34_name']\"));\n\t\tassertEquals(\"This is a coupon test.\",\n\t\t\tselenium.getValue(\"//textarea[@id='_34_description']\"));\n\t\tassertEquals(\"0.00\", selenium.getValue(\"//input[@id='_34_minOrder']\"));\n\t\tassertEquals(\"0.50\", selenium.getValue(\"//input[@id='_34_discount']\"));\n\t\tassertEquals(\"Percentage\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_34_discountType']\"));\n\t}","id":53102,"modified_method":"public void testViewCoupon() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Shopping Coupon Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Open\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Shopping Coupon Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Coupons\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Coupon Code\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(\"Coupon Test\", selenium.getValue(\"_34_name\"));\n\t\tassertEquals(\"This is a coupon test.\",\n\t\t\tselenium.getValue(\"_34_description\"));\n\t\tassertEquals(\"0.00\", selenium.getValue(\"_34_minOrder\"));\n\t\tassertEquals(\"0.50\", selenium.getValue(\"_34_discount\"));\n\t\tassertEquals(\"Percentage\", selenium.getSelectedLabel(\"_34_discountType\"));\n\t}","commit_id":"5ff2cfd23f77c2296a74ff29096637b3c9228ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewDocument() throws Exception {\n\t\tselenium.open(\"/web/document-library-document-community/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Document Library Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Page\",\n\t\t\tRuntimeVariables.replace(\"Document Library Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div/a/span[2]\",\n\t\t\tRuntimeVariables.replace(\"Test1 Folder1\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div/a/span[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Test1 Document1.txt\"),\n\t\t\tselenium.getText(\"//div/a/span[2]\"));\n\t\tselenium.clickAt(\"//div/a/span[2]\",\n\t\t\tRuntimeVariables.replace(\"Test1 Document1.txt\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"This is test1 document1.\"),\n\t\t\tselenium.getText(\"//div[2]/div[1]/span[4]\"));\n\t}","id":53103,"modified_method":"public void testViewDocument() throws Exception {\n\t\tselenium.open(\"/web/document-library-document-community/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Document Library Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Page\",\n\t\t\tRuntimeVariables.replace(\"Document Library Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div/a/span[2]\",\n\t\t\tRuntimeVariables.replace(\"Test1 Folder1\"));\n\t\tThread.sleep(3000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div/a/span[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Test1 Document1.txt\"),\n\t\t\tselenium.getText(\"//div/a/span[2]\"));\n\t\tselenium.clickAt(\"//div/a/span[2]\",\n\t\t\tRuntimeVariables.replace(\"Test1 Document1.txt\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"This is test1 document1.\"),\n\t\t\tselenium.getText(\"//div[2]/div[1]/span[4]\"));\n\t}","commit_id":"5ff2cfd23f77c2296a74ff29096637b3c9228ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewDocumentVersion() throws Exception {\n\t\tselenium.open(\"/web/document-library-document-version-community/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Document Library Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Page\",\n\t\t\tRuntimeVariables.replace(\"Document Library Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div/a/span[2]\",\n\t\t\tRuntimeVariables.replace(\"Test1 Folder1\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Test2 Document2.txt\"),\n\t\t\tselenium.getText(\"//div/a/span[2]\"));\n\t\tselenium.clickAt(\"//div/a/span[2]\",\n\t\t\tRuntimeVariables.replace(\"Test2 Document2.txt\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"1.1\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.0\"),\n\t\t\tselenium.getText(\"//tr[4]/td[2]\"));\n\t}","id":53104,"modified_method":"public void testViewDocumentVersion() throws Exception {\n\t\tselenium.open(\"/web/document-library-document-version-community/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Document Library Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Page\",\n\t\t\tRuntimeVariables.replace(\"Document Library Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div/a/span[2]\",\n\t\t\tRuntimeVariables.replace(\"Test1 Folder1\"));\n\t\tThread.sleep(3000);\n\t\tassertEquals(RuntimeVariables.replace(\"Test2 Document2.txt\"),\n\t\t\tselenium.getText(\"//div/a/span[2]\"));\n\t\tselenium.clickAt(\"//div/a/span[2]\",\n\t\t\tRuntimeVariables.replace(\"Test2 Document2.txt\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"1.1\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.0\"),\n\t\t\tselenium.getText(\"//tr[4]/td[2]\"));\n\t}","commit_id":"5ff2cfd23f77c2296a74ff29096637b3c9228ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewLockDLDocument() throws Exception {\n\t\tselenium.open(\"web/document-library-document-lock-community/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Document Lock Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Lock Page\",\n\t\t\tRuntimeVariables.replace(\"Document Lock Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Test1 Folder1\"),\n\t\t\tselenium.getText(\"//div/a/span[2]\"));\n\t\tselenium.clickAt(\"//div/a/span[2]\",\n\t\t\tRuntimeVariables.replace(\"Test1 Folder1\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div/a/span[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Test1 Document1.txt\"),\n\t\t\tselenium.getText(\"//div/a/span[2]\"));\n\t}","id":53105,"modified_method":"public void testViewLockDLDocument() throws Exception {\n\t\tselenium.open(\"web/document-library-document-lock-community/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Document Lock Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Lock Page\",\n\t\t\tRuntimeVariables.replace(\"Document Lock Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Test1 Folder1\"),\n\t\t\tselenium.getText(\"//div/a/span[2]\"));\n\t\tselenium.clickAt(\"//div/a/span[2]\",\n\t\t\tRuntimeVariables.replace(\"Test1 Folder1\"));\n\t\tThread.sleep(3000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//div/a/span[2]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Test1 Document1.txt\"),\n\t\t\tselenium.getText(\"//div/a/span[2]\"));\n\t}","commit_id":"5ff2cfd23f77c2296a74ff29096637b3c9228ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewOrganization() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@name='_125_keywords']\",\n\t\t\tRuntimeVariables.replace(\"Sample\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Assign Users\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-body results-row last']/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"joebloggs\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-body results-row last']/td[3]\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@name='_125_keywords']\",\n\t\t\tRuntimeVariables.replace(\"Sample\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[1]/span[1]/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"View\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"All Users\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Joe\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-body results-row']/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Bloggs\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-body results-row']/td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"joebloggs\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-body results-row']/td[4]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-body results-row']/td[5]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Liferay Los Angeles, Liferay, Inc., Organization Sample Test\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-body results-row']/td[6]\"));\n\t}","id":53106,"modified_method":"public void testViewOrganization() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@name='_125_keywords']\",\n\t\t\tRuntimeVariables.replace(\"Sample\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Assign Users\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-body results-row last']/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"joebloggs\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-body results-row last']/td[3]\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@name='_125_keywords']\",\n\t\t\tRuntimeVariables.replace(\"Sample\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[1]/span[1]/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"View\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"All Users\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@name='_125_keywords']\",\n\t\t\tRuntimeVariables.replace(\"Joe\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Joe\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-body results-row last']/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Bloggs\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-body results-row last']/td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"joebloggs\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-body results-row last']/td[4]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-body results-row last']/td[5]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Liferay Los Angeles, Liferay, Inc., Organization Sample Test\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-body results-row last']/td[6]\"));\n\t}","commit_id":"5ff2cfd23f77c2296a74ff29096637b3c9228ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewPageLayout() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Group Page Layout Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Search']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Open\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Page Layout Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"main-content\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"dockbar\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"navigation\", RuntimeVariables.replace(\"\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[@id='column-1' and @class='yui3-aui-w50 portlet-column portlet-column-first yui3-aui-dd-drop']\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[@id='column-2' and @class='yui3-aui-w50 portlet-column portlet-column-last yui3-aui-dd-drop']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Breadcrumb\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@id='column-1' and @class='yui3-aui-w50 portlet-column portlet-column-first yui3-aui-dd-drop']/div[1]/div[1]/section/header/h1/span[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Navigation\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@id='column-2' and @class='yui3-aui-w50 portlet-column portlet-column-last yui3-aui-dd-drop']/div[1]/div[1]/section/header/h1/span[2]\"));\n\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\"//div[@id='column-1' and @class='yui3-aui-w30 portlet-column portlet-column-first yui3-aui-dd-drop']\"));\n\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\"//div[@id='column-2' and @class='yui3-aui-w70 portlet-column portlet-column-last yui3-aui-dd-drop']\"));\n\t}","id":53107,"modified_method":"public void testViewPageLayout() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Group Page Layout Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Search']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Open\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Page Layout Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"main-content\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"dockbar\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"navigation\", RuntimeVariables.replace(\"\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[@id='column-1' and @class='aui-w50 portlet-column portlet-column-first aui-dd-drop']\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[@id='column-2' and @class='aui-w50 portlet-column portlet-column-last aui-dd-drop']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Breadcrumb\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@id='column-1' and @class='aui-w50 portlet-column portlet-column-first aui-dd-drop']/div[1]/div[1]/section/header/h1/span[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Navigation\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@id='column-2' and @class='aui-w50 portlet-column portlet-column-last aui-dd-drop']/div[1]/div[1]/section/header/h1/span[2]\"));\n\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\"//div[@id='column-1' and @class='aui-w30 portlet-column portlet-column-first aui-dd-drop']/div[1]/div[1]/section/header/h1/span[2]\"));\n\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\"//div[@id='column-2' and @class='aui-w70 portlet-column portlet-column-last aui-dd-drop']/div[1]/div[1]/section/header/h1/span[2]\"));\n\t}","commit_id":"5ff2cfd23f77c2296a74ff29096637b3c9228ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewShortcut() throws Exception {\n\t\tselenium.open(\"/web/document-library-shortcut-community/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Document Library Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Page\",\n\t\t\tRuntimeVariables.replace(\"Document Library Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[2]/a/span[2]\",\n\t\t\tRuntimeVariables.replace(\"Test2 Folder2\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Test1 Document1.txt\"),\n\t\t\tselenium.getText(\"//div/a/span[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"This is test1 document1.\"),\n\t\t\tselenium.getText(\"//a/span[3]\"));\n\t}","id":53108,"modified_method":"public void testViewShortcut() throws Exception {\n\t\tselenium.open(\"/web/document-library-shortcut-community/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Document Library Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Document Library Page\",\n\t\t\tRuntimeVariables.replace(\"Document Library Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[2]/a/span[2]\",\n\t\t\tRuntimeVariables.replace(\"Test2 Folder2\"));\n\t\tThread.sleep(3000);\n\t\tassertEquals(RuntimeVariables.replace(\"Test1 Document1.txt\"),\n\t\t\tselenium.getText(\"//div/a/span[2]\"));\n\t\tselenium.clickAt(\"//div/a/span[2]\",\n\t\t\tRuntimeVariables.replace(\"Test1 Document1.txt\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"This is test1 document1.\"),\n\t\t\tselenium.getText(\"//div[2]/div[1]/span[4]\"));\n\t}","commit_id":"5ff2cfd23f77c2296a74ff29096637b3c9228ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewTags() throws Exception {\n\t\tselenium.open(\"/web/tags-message-board-community/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Boards Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"Tags\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"selenium\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//li[1]/div/span/a\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"selenium\"),\n\t\t\tselenium.getText(\"//li[1]/div/span/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"selenium1\"),\n\t\t\tselenium.getText(\"//li[2]/div/span/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"selenium2\"),\n\t\t\tselenium.getText(\"//li[3]/div/span/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"selenium3\"),\n\t\t\tselenium.getText(\"//li[4]/div/span/a\"));\n\t}","id":53109,"modified_method":"public void testViewTags() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Tags Message Board Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Open\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Tags\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\"selenium\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[@class='tags lfr-component']/ul/li[1]\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"selenium\"),\n\t\t\tselenium.getText(\"//div[@class='tags lfr-component']/ul/li[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"selenium1\"),\n\t\t\tselenium.getText(\"//div[@class='tags lfr-component']/ul/li[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"selenium2\"),\n\t\t\tselenium.getText(\"//div[@class='tags lfr-component']/ul/li[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"selenium3\"),\n\t\t\tselenium.getText(\"//div[@class='tags lfr-component']/ul/li[4]\"));\n\t}","commit_id":"5ff2cfd23f77c2296a74ff29096637b3c9228ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewUserGroup() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[1]/span[1]/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"View\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"User Groups\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_name']\",\n\t\t\tRuntimeVariables.replace(\"User Group Sample Test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"User Group Sample Test\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//td[4]/span/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Assign Members\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"joebloggs\"),\n\t\t\tselenium.getText(\"//tr[3]/td[3]\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[1]/span[1]/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"View\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"User Groups\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_name']\",\n\t\t\tRuntimeVariables.replace(\"User Group Sample Test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"User Group Sample Test\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//td[4]/span/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"View Users\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Joe\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Bloggs\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"joebloggs\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\"), selenium.getText(\"//td[5]/a\"));\n\t\tassertTrue(selenium.isPartialText(\"//td[6]/a\", \"Liferay Los Angeles\"));\n\t\tassertTrue(selenium.isPartialText(\"//td[6]/a\", \"Liferay, Inc.\"));\n\t}","id":53110,"modified_method":"public void testViewUserGroup() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[1]/span[1]/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"View\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"User Groups\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_name']\",\n\t\t\tRuntimeVariables.replace(\"User Group Sample Test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"User Group Sample Test\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//td[4]/span/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Assign Members\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"joebloggs\"),\n\t\t\tselenium.getText(\"//tr[3]/td[3]\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[1]/span[1]/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"View\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"User Groups\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_name']\",\n\t\t\tRuntimeVariables.replace(\"User Group Sample Test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"User Group Sample Test\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//td[4]/span/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//td[4]/span/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"View Users\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[4]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Joe\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Bloggs\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"joebloggs\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\"), selenium.getText(\"//td[5]/a\"));\n\t\tassertTrue(selenium.isPartialText(\"//td[6]/a\", \"Liferay Los Angeles\"));\n\t\tassertTrue(selenium.isPartialText(\"//td[6]/a\", \"Liferay, Inc.\"));\n\t}","commit_id":"5ff2cfd23f77c2296a74ff29096637b3c9228ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewWebContentExpando() throws Exception {\n\t\tselenium.open(\"/web/expando-web-content-community/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Web Content Display Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Page\",\n\t\t\tRuntimeVariables.replace(\"Web Content Display Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"First Expando Bank\"),\n\t\t\tselenium.getText(\"//div[@class='journal-content-article']/h1\"));\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Create Account']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Michael\"),\n\t\t\tselenium.getText(\"//td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Hashimoto\"),\n\t\t\tselenium.getText(\"//td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"$100.00\"),\n\t\t\tselenium.getText(\"//td[4]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"JR\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Houn\"),\n\t\t\tselenium.getText(\"//tr[3]/td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"$1,000,000.00\"),\n\t\t\tselenium.getText(\"//tr[3]/td[4]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Michael\"),\n\t\t\tselenium.getText(\"//tr[4]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Saechang\"),\n\t\t\tselenium.getText(\"//tr[4]/td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"$1,000,000.00\"),\n\t\t\tselenium.getText(\"//tr[4]/td[4]\"));\n\t\tassertTrue(selenium.isTextPresent(\"# of Accounts: 3\"));\n\t}","id":53111,"modified_method":"public void testViewWebContentExpando() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Expando Web Content Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Open\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Content Display Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"First Expando Bank\"),\n\t\t\tselenium.getText(\"//div[1]/h1\"));\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Create Account']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Michael\"),\n\t\t\tselenium.getText(\"//td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Hashimoto\"),\n\t\t\tselenium.getText(\"//td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"$100.00\"),\n\t\t\tselenium.getText(\"//td[4]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"JR\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Houn\"),\n\t\t\tselenium.getText(\"//tr[3]/td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"$1,000,000.00\"),\n\t\t\tselenium.getText(\"//tr[3]/td[4]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Michael\"),\n\t\t\tselenium.getText(\"//tr[4]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Saechang\"),\n\t\t\tselenium.getText(\"//tr[4]/td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"$1,000,000.00\"),\n\t\t\tselenium.getText(\"//tr[4]/td[4]\"));\n\t\tassertTrue(selenium.isPartialText(\"//section/div/div/div/div[1]\",\n\t\t\t\t\"# of Accounts: 3\"));\n\t}","commit_id":"5ff2cfd23f77c2296a74ff29096637b3c9228ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewWebForm() throws Exception {\n\t\tselenium.open(\"/web/expando-web-form-community/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Web Form Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Form Page\",\n\t\t\tRuntimeVariables.replace(\"Web Form Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"There is existing form data. Please export and delete it before making changes to the fields.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[3]/div[2]/fieldset/div/div[1]\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There is existing form data. Please export and delete it before making changes to the fields.\"),\n\t\t\tselenium.getText(\"//div[3]/div[2]/fieldset/div/div[1]\"));\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Export Data']\"));\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Delete Data']\"));\n\t\tassertFalse(selenium.isElementPresent(\"//div[3]/span/span/button[1]\"));\n\t\tassertFalse(selenium.isElementPresent(\"//div[4]/span/span/button[1]\"));\n\t\tassertFalse(selenium.isElementPresent(\"//div[5]/span/span/button[1]\"));\n\t}","id":53112,"modified_method":"public void testViewWebForm() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Expando Web Form Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Web Form Page\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\"There is existing form data. Please export and delete it before making changes to the fields.\")\n\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\"//div[3]/div[2]/fieldset/div/div[1]\"))) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There is existing form data. Please export and delete it before making changes to the fields.\"),\n\t\t\tselenium.getText(\"//div[3]/div[2]/fieldset/div/div[1]\"));\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Export Data']\"));\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Delete Data']\"));\n\t}","commit_id":"5ff2cfd23f77c2296a74ff29096637b3c9228ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewWikiPage() throws Exception {\n\t\tselenium.open(\"/web/wiki-wiki-page-community/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Wiki Page Test\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Page Test\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page Test\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Front Page Text\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","id":53113,"modified_method":"public void testViewWikiPage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Communities\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Wiki Wiki Page Community\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//td[2]/a\", RuntimeVariables.replace(\"Open\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Wiki Page Test\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Front Page Text\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']\"));\n\t}","commit_id":"5ff2cfd23f77c2296a74ff29096637b3c9228ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPage() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id='_145_myPlacesContainer']/ul/li[2]/a/span[1]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@id='_145_myPlacesContainer']/ul/li[2]/a/span[1]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Manage Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@id='_88_layoutsTreeOutput']/ul/li/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@id='_88_layoutsTreeOutput']/ul/li/a/span\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_88_name_en_US\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_88_name_en_US\",\n\t\t\tRuntimeVariables.replace(\"Session Expiration Test Page\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Add Page']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Session Expiration Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":53114,"modified_method":"public void testAddPage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"addPage\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"addPage\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"//input\",\n\t\t\tRuntimeVariables.replace(\"Session Expiration Test Page\"));\n\t\tselenium.clickAt(\"save\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Session Expiration Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.clickAt(\"link=Session Expiration Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"bae739416f19c79cd6eeb639c6e9af4e70e0fa66","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfirmNoSessionExpire() throws Exception {\n\t\tThread.sleep(30000);\n\t\tThread.sleep(30000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isElementPresent(\"//input[@value='Extend']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tThread.sleep(30000);\n\t\tThread.sleep(30000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Session Expiration Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Session Expiration Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":53115,"modified_method":"public void testConfirmNoSessionExpire() throws Exception {\n\t\tThread.sleep(30000);\n\t\tThread.sleep(30000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isElementPresent(\"//input[@value='Extend']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tThread.sleep(30000);\n\t\tThread.sleep(30000);\n\t\tassertFalse(selenium.isElementPresent(\"//input[@value='Extend']\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Session Expiration Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Session Expiration Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"bae739416f19c79cd6eeb639c6e9af4e70e0fa66","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfirmSessionExpire() throws Exception {\n\t\tThread.sleep(30000);\n\t\tThread.sleep(15000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Extend']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tThread.sleep(30000);\n\t\tThread.sleep(30000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Warning! Due to inactivity, your session has expired.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Session Expiration Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Session Expiration Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_58_login\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":53116,"modified_method":"public void testConfirmSessionExpire() throws Exception {\n\t\tThread.sleep(30000);\n\t\tThread.sleep(15000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Extend']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tThread.sleep(30000);\n\t\tThread.sleep(30000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Warning! Due to inactivity, your session has expired.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Session Expiration Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Session Expiration Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Sign In\"),\n\t\t\tselenium.getText(\"sign-in\"));\n\t}","commit_id":"bae739416f19c79cd6eeb639c6e9af4e70e0fa66","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testRememberMeLogin() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tboolean NotSignedOut = selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Sign Out\");\n\n\t\t\t\tif (!NotSignedOut) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Sign Out\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 2:\n\t\t\t\tselenium.type(\"_58_login\",\n\t\t\t\t\tRuntimeVariables.replace(\"test@liferay.com\"));\n\t\t\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\t\t\tselenium.click(\"_58_rememberMeCheckbox\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//input[@value='Sign In']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Sign In']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@id='_145_myPlacesContainer']/ul/li[2]/a/span[1]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@id='_145_myPlacesContainer']/ul/li[2]/a/span[1]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"link=Session Expiration Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Session Expiration Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":53117,"modified_method":"public void testRememberMeLogin() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tboolean NotSignedOut = selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Sign Out\");\n\n\t\t\t\tif (!NotSignedOut) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Sign Out\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 2:\n\t\t\t\tselenium.type(\"_58_login\",\n\t\t\t\t\tRuntimeVariables.replace(\"test@liferay.com\"));\n\t\t\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\t\t\tselenium.click(\"_58_rememberMeCheckbox\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//input[@value='Sign In']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Sign In']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"link=Session Expiration Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Session Expiration Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"bae739416f19c79cd6eeb639c6e9af4e70e0fa66","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTestSuite(AddPageTest.class);\n\t\ttestSuite.addTestSuite(SignInWithOutRememberMeTest.class);\n\t\ttestSuite.addTestSuite(ExtendSessionTest.class);\n\t\ttestSuite.addTestSuite(ConfirmSessionExpireTest.class);\n\t\ttestSuite.addTestSuite(RememberMeLoginTest.class);\n\t\ttestSuite.addTestSuite(ConfirmNoSessionExpireTest.class);\n\t\ttestSuite.addTestSuite(DeletePageTest.class);\n\n\t\treturn testSuite;\n\t}","id":53118,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTestSuite(AddPageTest.class);\n\t\ttestSuite.addTestSuite(SignInWithOutRememberMeTest.class);\n\t\ttestSuite.addTestSuite(ExtendSessionTest.class);\n\t\ttestSuite.addTestSuite(ConfirmSessionExpireTest.class);\n\t\ttestSuite.addTestSuite(RememberMeLoginTest.class);\n\t\ttestSuite.addTestSuite(ConfirmNoSessionExpireTest.class);\n\t\ttestSuite.addTestSuite(TearDownPageTest.class);\n\n\t\treturn testSuite;\n\t}","commit_id":"bae739416f19c79cd6eeb639c6e9af4e70e0fa66","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSignInWithOutRememberMe() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Sign Out\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Sign Out\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Sign In\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_58_login\", RuntimeVariables.replace(\"test@liferay.com\"));\n\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Sign In']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id='_145_myPlacesContainer']/ul/li[2]/a/span[1]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@id='_145_myPlacesContainer']/ul/li[2]/a/span[1]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Session Expiration Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Session Expiration Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":53119,"modified_method":"public void testSignInWithOutRememberMe() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Sign Out\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Sign Out\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Sign In\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_58_login\", RuntimeVariables.replace(\"test@liferay.com\"));\n\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Sign In']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Session Expiration Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Session Expiration Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"bae739416f19c79cd6eeb639c6e9af4e70e0fa66","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddMBCategory() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Boards Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Test Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Category']\",\n\t\t\tRuntimeVariables.replace(\"Add Category\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_19_name']\",\n\t\t\tRuntimeVariables.replace(\"MB Category Name\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"MB Category Name\"),\n\t\t\tselenium.getText(\"//td[1]/a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t}","id":53120,"modified_method":"public void testAddMBCategory() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Site Name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Name\", RuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Test Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Category']\",\n\t\t\tRuntimeVariables.replace(\"Add Category\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_19_name']\",\n\t\t\tRuntimeVariables.replace(\"MB Category Name\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"MB Category Name\"),\n\t\t\tselenium.getText(\"//td[1]/a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t}","commit_id":"7c73b6a923bddaaf6bdceee0de85a340796b7fb9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPageMB() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//nav[@id='navigation']\",\n\t\t\tRuntimeVariables.replace(\"Navigation\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//a[@id='addPage']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//a[@id='addPage']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//button[@id='save']\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Boards Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Test Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":53121,"modified_method":"public void testAddPageMB() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Site Name\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Manage Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Add Page\"),\n\t\t\tselenium.getText(\"//div/span/button[1]\"));\n\t\tselenium.clickAt(\"//div/span/button[1]\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.type(\"//input[@id='_156_name_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Test Page\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Add Page']\",\n\t\t\tRuntimeVariables.replace(\"Add Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.clickAt(\"//div[3]/ul/li/div/div[1]\",\n\t\t\tRuntimeVariables.replace(\"Public Pages\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//li/ul/li/div/div[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Message Boards Test Page\"),\n\t\t\tselenium.getText(\"//li/ul/li/div/div[3]/a\"));\n\t}","commit_id":"7c73b6a923bddaaf6bdceee0de85a340796b7fb9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletMB() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Boards Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Test Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"More\\u2026\"),\n\t\t\tselenium.getText(\"//a[@id='_145_addApplication']\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\\u2026\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@title='Message Boards']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Message Boards']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":53122,"modified_method":"public void testAddPortletMB() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Site Name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Name\", RuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Test Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@title='Message Boards']/p/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@title='Message Boards']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//section\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"7c73b6a923bddaaf6bdceee0de85a340796b7fb9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddUserGmail() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users\", RuntimeVariables.replace(\"Users\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_screenName']\",\n\t\t\tRuntimeVariables.replace(\"usersn\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_emailAddress']\",\n\t\t\tRuntimeVariables.replace(\"liferay.qa.testing.trunk@gmail.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_firstName']\",\n\t\t\tRuntimeVariables.replace(\"userfn\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_lastName']\",\n\t\t\tRuntimeVariables.replace(\"userln\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"usersn\",\n\t\t\tselenium.getValue(\"//input[@id='_125_screenName']\"));\n\t\tassertEquals(\"liferay.qa.testing.trunk@gmail.com\",\n\t\t\tselenium.getValue(\"//input[@id='_125_emailAddress']\"));\n\t\tassertEquals(\"userfn\",\n\t\t\tselenium.getValue(\"//input[@id='_125_firstName']\"));\n\t\tassertEquals(\"userln\", selenium.getValue(\"//input[@id='_125_lastName']\"));\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_125_passwordLink']\",\n\t\t\t\t\"Password\"));\n\t\tselenium.clickAt(\"//a[@id='_125_passwordLink']\",\n\t\t\tRuntimeVariables.replace(\"Password\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_125_password1']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_password1']\",\n\t\t\tRuntimeVariables.replace(\"password\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_password2']\",\n\t\t\tRuntimeVariables.replace(\"password\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Sign Out\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sign Out\", RuntimeVariables.replace(\"Sign Out\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\tRuntimeVariables.replace(\"liferay.qa.testing.trunk@gmail.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\tRuntimeVariables.replace(\"password\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isChecked(\"//input[@id='_58_rememberMeCheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_58_rememberMeCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Remember Me\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_58_rememberMeCheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='I Agree']\",\n\t\t\tRuntimeVariables.replace(\"I Agree\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='password1']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='password2']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='reminderQueryAnswer']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Sign Out\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sign Out\", RuntimeVariables.replace(\"Sign Out\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\tRuntimeVariables.replace(\"test@liferay.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isChecked(\"//input[@id='_58_rememberMeCheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_58_rememberMeCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Remember Me\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_58_rememberMeCheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":53123,"modified_method":"public void testAddUserGmail() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Add\", RuntimeVariables.replace(\"Add\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\",\n\t\t\tRuntimeVariables.replace(\"User\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_screenName']\",\n\t\t\tRuntimeVariables.replace(\"usersn\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_emailAddress']\",\n\t\t\tRuntimeVariables.replace(\"liferay.qa.testing.trunk@gmail.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_firstName']\",\n\t\t\tRuntimeVariables.replace(\"userfn\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_lastName']\",\n\t\t\tRuntimeVariables.replace(\"userln\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"usersn\",\n\t\t\tselenium.getValue(\"//input[@id='_125_screenName']\"));\n\t\tassertEquals(\"liferay.qa.testing.trunk@gmail.com\",\n\t\t\tselenium.getValue(\"//input[@id='_125_emailAddress']\"));\n\t\tassertEquals(\"userfn\",\n\t\t\tselenium.getValue(\"//input[@id='_125_firstName']\"));\n\t\tassertEquals(\"userln\", selenium.getValue(\"//input[@id='_125_lastName']\"));\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_125_passwordLink']\",\n\t\t\t\t\"Password\"));\n\t\tselenium.clickAt(\"//a[@id='_125_passwordLink']\",\n\t\t\tRuntimeVariables.replace(\"Password\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_125_password1']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_password1']\",\n\t\t\tRuntimeVariables.replace(\"password\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_125_password2']\",\n\t\t\tRuntimeVariables.replace(\"password\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Sign Out\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sign Out\", RuntimeVariables.replace(\"Sign Out\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\tRuntimeVariables.replace(\"liferay.qa.testing.trunk@gmail.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\tRuntimeVariables.replace(\"password\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isChecked(\"//input[@id='_58_rememberMeCheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_58_rememberMeCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Remember Me\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_58_rememberMeCheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='I Agree']\",\n\t\t\tRuntimeVariables.replace(\"I Agree\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='password1']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='password2']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='reminderQueryAnswer']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Sign Out\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Sign Out\", RuntimeVariables.replace(\"Sign Out\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\tRuntimeVariables.replace(\"test@liferay.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isChecked(\"//input[@id='_58_rememberMeCheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@id='_58_rememberMeCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Remember Me\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_58_rememberMeCheckbox']\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"7c73b6a923bddaaf6bdceee0de85a340796b7fb9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssignMembersSiteUser() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//strong/a\"));\n\t\t\t\tselenium.clickAt(\"//strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[7]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Assign Members\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[7]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[7]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Available\",\n\t\t\t\t\tRuntimeVariables.replace(\"Available\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean basicVisible = selenium.isVisible(\"link=\\u00ab Basic\");\n\n\t\t\t\tif (!basicVisible) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=\\u00ab Basic\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//input[@id='_134_toggle_id_enterprise_admin_user_searchkeywords']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\t\t\t\tselenium.type(\"//input[@id='_134_toggle_id_enterprise_admin_user_searchkeywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"usersn\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"userfn userln\"),\n\t\t\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"usersn\"),\n\t\t\t\t\tselenium.getText(\"//tr[3]/td[3]\"));\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@name='_134_allRowIds']\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@name='_134_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Select All\"));\n\t\t\t\tassertTrue(selenium.isChecked(\"//input[@name='_134_allRowIds']\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Update Associations']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Update Associations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"userfn userln\"),\n\t\t\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"usersn\"),\n\t\t\t\t\tselenium.getText(\"//tr[3]/td[3]\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":53124,"modified_method":"public void testAssignMembersSiteUser() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Sites\", RuntimeVariables.replace(\"Sites\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Site Name\"),\n\t\t\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Manage Memberships\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Memberships\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Add Members\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Add Members\",\n\t\t\t\t\tRuntimeVariables.replace(\"Add Members\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"User\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"User\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean basicVisible = selenium.isVisible(\"link=\\u00ab Basic\");\n\n\t\t\t\tif (!basicVisible) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=\\u00ab Basic\",\n\t\t\t\t\tRuntimeVariables.replace(\"\\u00ab Basic\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.type(\"//input[@id='_174_toggle_id_users_admin_user_searchkeywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"usersn\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"userfn userln\"),\n\t\t\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"usersn\"),\n\t\t\t\t\tselenium.getText(\"//tr[3]/td[3]\"));\n\t\t\t\tassertFalse(selenium.isChecked(\"//input[@name='_174_rowIds']\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@name='_174_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"User Selected\"));\n\t\t\t\tassertTrue(selenium.isChecked(\"//input[@name='_174_rowIds']\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Update Associations']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Update Associations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tselenium.clickAt(\"link=Summary\",\n\t\t\t\t\tRuntimeVariables.replace(\"Summary\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"userfn userln\"),\n\t\t\t\t\tselenium.getText(\"//tr[4]/td[1]\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"usersn\"),\n\t\t\t\t\tselenium.getText(\"//tr[4]/td[2]\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"7c73b6a923bddaaf6bdceee0de85a340796b7fb9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigureMBPortletEmailFromGmailServer()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Boards Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Test Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//strong/a\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Email From\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Email From\",\n\t\t\tRuntimeVariables.replace(\"Email From\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_86_emailFromName']\",\n\t\t\tRuntimeVariables.replace(\"Administrator\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_86_emailFromAddress']\",\n\t\t\tRuntimeVariables.replace(\"liferay.qa.server.trunk@gmail.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Administrator\", selenium.getValue(\"_86_emailFromName\"));\n\t\tassertEquals(\"liferay.qa.server.trunk@gmail.com\",\n\t\t\tselenium.getValue(\"_86_emailFromAddress\"));\n\t}","id":53125,"modified_method":"public void testConfigureMBPortletEmailFromGmailServer()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Site Name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Name\", RuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Test Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Email From\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Email From\",\n\t\t\tRuntimeVariables.replace(\"Email From\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_86_emailFromName']\",\n\t\t\tRuntimeVariables.replace(\"Administrator\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_86_emailFromAddress']\",\n\t\t\tRuntimeVariables.replace(\"liferay.qa.server.trunk@gmail.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Administrator\",\n\t\t\tselenium.getValue(\"//input[@id='_86_emailFromName']\"));\n\t\tassertEquals(\"liferay.qa.server.trunk@gmail.com\",\n\t\t\tselenium.getValue(\"//input[@id='_86_emailFromAddress']\"));\n\t}","commit_id":"7c73b6a923bddaaf6bdceee0de85a340796b7fb9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGmailServer_TearDownEmail() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.openWindow(\"http://www.gmail.com/\",\n\t\t\t\t\tRuntimeVariables.replace(\"gmail\"));\n\t\t\t\tselenium.waitForPopUp(\"gmail\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.selectWindow(\"gmail\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean signedIn1 = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/div/nobr/a[2]\");\n\n\t\t\t\tif (!signedIn1) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Sign out\"),\n\t\t\t\t\tselenium.getText(\"//div[2]/div/nobr/a[2]\"));\n\t\t\t\tselenium.clickAt(\"//div[2]/div/nobr/a[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign out\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean signedIn2 = selenium.isPartialText(\"//td/a\", \"Sign out\");\n\n\t\t\t\tif (!signedIn2) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Sign out\"),\n\t\t\t\t\tselenium.getText(\"//td/a\"));\n\t\t\t\tselenium.clickAt(\"//td/a\", RuntimeVariables.replace(\"Sign out\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@id='Email']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='Email']\",\n\t\t\t\t\tRuntimeVariables.replace(\"liferay.qa.server.trunk\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='Passwd']\",\n\t\t\t\t\tRuntimeVariables.replace(\"loveispatient\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean staySignedInChecked = selenium.isChecked(\n\t\t\t\t\t\t\"PersistentCookie\");\n\n\t\t\t\tif (staySignedInChecked) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='PersistentCookie']\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@id='PersistentCookie']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Stay signed in\"));\n\n\t\t\tcase 4:\n\t\t\t\tassertTrue(selenium.isChecked(\"//input[@id='PersistentCookie']\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@id='signIn']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@type='checkbox']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@type='checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"All\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div/div/div/div[1]/div[1]/div[1]/div/div/div[2]/div[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div/div/div/div[1]/div[1]/div[1]/div/div/div[2]/div[3]\"));\n\t\t\t\tselenium.clickAt(\"//div/div/div/div[1]/div[1]/div[1]/div/div/div[2]/div[3]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean signedIn3 = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/div/nobr/a[2]\");\n\n\t\t\t\tif (!signedIn3) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Sign out\"),\n\t\t\t\t\tselenium.getText(\"//div[2]/div/nobr/a[2]\"));\n\t\t\t\tselenium.clickAt(\"//div[2]/div/nobr/a[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign out\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean signedIn4 = selenium.isPartialText(\"//td/a\", \"Sign out\");\n\n\t\t\t\tif (!signedIn4) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Sign out\"),\n\t\t\t\t\tselenium.getText(\"//td/a\"));\n\t\t\t\tselenium.clickAt(\"//td/a\", RuntimeVariables.replace(\"Sign out\"));\n\n\t\t\tcase 6:\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.close();\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":53126,"modified_method":"public void testGmailServer_TearDownEmail() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.openWindow(\"http://www.gmail.com/\",\n\t\t\t\t\tRuntimeVariables.replace(\"gmail\"));\n\t\t\t\tselenium.waitForPopUp(\"gmail\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.selectWindow(\"gmail\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean SignedIn = selenium.isPartialText(\"//td/a\", \"Sign out\");\n\n\t\t\t\tif (!SignedIn) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Sign out\"),\n\t\t\t\t\tselenium.getText(\"//td/a\"));\n\t\t\t\tselenium.clickAt(\"//td/a\", RuntimeVariables.replace(\"Sign out\"));\n\t\t\t\tselenium.clickAt(\"//span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign in to Gmail\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean signInAsADifferentUserPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Sign in as a different user\");\n\n\t\t\t\tif (!signInAsADifferentUserPresent) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Sign in as a different user\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign in as a different user\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@id='Email']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='Email']\",\n\t\t\t\t\tRuntimeVariables.replace(\"liferay.qa.server.trunk\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='Passwd']\",\n\t\t\t\t\tRuntimeVariables.replace(\"loveispatient\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean staySignedInChecked = selenium.isChecked(\n\t\t\t\t\t\t\"PersistentCookie\");\n\n\t\t\t\tif (staySignedInChecked) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='PersistentCookie']\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@id='PersistentCookie']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Stay signed in\"));\n\n\t\t\tcase 4:\n\t\t\t\tassertTrue(selenium.isChecked(\"//input[@id='PersistentCookie']\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@id='signIn']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@type='checkbox']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@type='checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"All\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div/div/div/div[1]/div[1]/div[1]/div/div/div[2]/div[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div/div/div/div[1]/div[1]/div[1]/div/div/div[2]/div[3]\"));\n\t\t\t\tselenium.clickAt(\"//div/div/div/div[1]/div[1]/div[1]/div/div/div[2]/div[3]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean signedIn2 = selenium.isPartialText(\"//td/a\", \"Sign out\");\n\n\t\t\t\tif (!signedIn2) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Sign out\"),\n\t\t\t\t\tselenium.getText(\"//td/a\"));\n\t\t\t\tselenium.clickAt(\"//td/a\", RuntimeVariables.replace(\"Sign out\"));\n\n\t\t\tcase 5:\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.close();\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"7c73b6a923bddaaf6bdceee0de85a340796b7fb9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGmail_ReplyMBCategoryThreadMessageEmail()\n\t\tthrows Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.openWindow(\"http://www.gmail.com/\",\n\t\t\t\t\tRuntimeVariables.replace(\"gmail\"));\n\t\t\t\tselenium.waitForPopUp(\"gmail\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.selectWindow(\"gmail\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tThread.sleep(60000);\n\n\t\t\t\tboolean signedIn1 = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/div/nobr/a[2]\");\n\n\t\t\t\tif (!signedIn1) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Sign out\"),\n\t\t\t\t\tselenium.getText(\"//div[2]/div/nobr/a[2]\"));\n\t\t\t\tselenium.clickAt(\"//div[2]/div/nobr/a[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign out\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean signedIn2 = selenium.isPartialText(\"//td/a\", \"Sign out\");\n\n\t\t\t\tif (!signedIn2) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Sign out\"),\n\t\t\t\t\tselenium.getText(\"//td/a\"));\n\t\t\t\tselenium.clickAt(\"//td/a\", RuntimeVariables.replace(\"Sign out\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@id='Email']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='Email']\",\n\t\t\t\t\tRuntimeVariables.replace(\"liferay.qa.testing.trunk\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='Passwd']\",\n\t\t\t\t\tRuntimeVariables.replace(\"loveispatient\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean staySignedInChecked = selenium.isChecked(\n\t\t\t\t\t\t\"PersistentCookie\");\n\n\t\t\t\tif (staySignedInChecked) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='PersistentCookie']\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@id='PersistentCookie']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Stay signed in\"));\n\n\t\t\tcase 4:\n\t\t\t\tassertTrue(selenium.isChecked(\"//input[@id='PersistentCookie']\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@id='signIn']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Administrator\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//td[3]/div/span\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Administrator\"),\n\t\t\t\t\tselenium.getText(\"//td[3]/div/span\"));\n\t\t\t\tselenium.clickAt(\"//td[3]/div/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Administrator\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\t\t\"[MB Category Name] MB Message Subject\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//h1/span[1]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"[MB Category Name] MB Message Subject\"),\n\t\t\t\t\tselenium.getText(\"//h1/span[1]\"));\n\t\t\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\t\t\"//div[contains(child::text(),'MB Message Body')]\",\n\t\t\t\t\t\t\"MB Message Body\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div/table/tbody/tr/td[1]/div/span\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div/table/tbody/tr/td[1]/div/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Reply\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.selectFrame(\"//iframe[@id='canvas_frame']\");\n\t\t\t\tselenium.selectFrame(\"//iframe[@class='Am Al editable']\");\n\t\t\t\tselenium.type(\"//body\",\n\t\t\t\t\tRuntimeVariables.replace(\"MB Message Email Reply\"));\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Send\"),\n\t\t\t\t\tselenium.getText(\"//div[3]/div/div/div/div[1]/b\"));\n\t\t\t\tselenium.clickAt(\"//div[3]/div/div/div/div[1]/b\",\n\t\t\t\t\tRuntimeVariables.replace(\"Send\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean signedIn3 = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/div/nobr/a[2]\");\n\n\t\t\t\tif (!signedIn3) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Sign out\"),\n\t\t\t\t\tselenium.getText(\"//div[2]/div/nobr/a[2]\"));\n\t\t\t\tselenium.clickAt(\"//div[2]/div/nobr/a[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign out\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean signedIn4 = selenium.isPartialText(\"//td/a\", \"Sign out\");\n\n\t\t\t\tif (!signedIn4) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Sign out\"),\n\t\t\t\t\tselenium.getText(\"//td/a\"));\n\t\t\t\tselenium.clickAt(\"//td/a\", RuntimeVariables.replace(\"Sign out\"));\n\n\t\t\tcase 6:\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.close();\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":53127,"modified_method":"public void testGmail_ReplyMBCategoryThreadMessageEmail()\n\t\tthrows Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.openWindow(\"http://www.gmail.com/\",\n\t\t\t\t\tRuntimeVariables.replace(\"gmail\"));\n\t\t\t\tselenium.waitForPopUp(\"gmail\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.selectWindow(\"gmail\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tThread.sleep(60000);\n\n\t\t\t\tboolean SignedIn = selenium.isPartialText(\"//td/a\", \"Sign out\");\n\n\t\t\t\tif (!SignedIn) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Sign out\"),\n\t\t\t\t\tselenium.getText(\"//td/a\"));\n\t\t\t\tselenium.clickAt(\"//td/a\", RuntimeVariables.replace(\"Sign out\"));\n\t\t\t\tselenium.clickAt(\"//span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign in to Gmail\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean signInAsADifferentUserPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Sign in as a different user\");\n\n\t\t\t\tif (!signInAsADifferentUserPresent) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Sign in as a different user\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign in as a different user\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@id='Email']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='Email']\",\n\t\t\t\t\tRuntimeVariables.replace(\"liferay.qa.testing.trunk\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='Passwd']\",\n\t\t\t\t\tRuntimeVariables.replace(\"loveispatient\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean staySignedInChecked = selenium.isChecked(\n\t\t\t\t\t\t\"PersistentCookie\");\n\n\t\t\t\tif (staySignedInChecked) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='PersistentCookie']\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@id='PersistentCookie']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Stay signed in\"));\n\n\t\t\tcase 4:\n\t\t\t\tassertTrue(selenium.isChecked(\"//input[@id='PersistentCookie']\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@id='signIn']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Administrator\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//td[3]/div/span\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Administrator\"),\n\t\t\t\t\tselenium.getText(\"//td[3]/div/span\"));\n\t\t\t\tselenium.clickAt(\"//td[3]/div/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Administrator\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\n\t\t\t\t\t\t\t\t\t\"[MB Category Name] MB Message Subject\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//h1/span[1]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"[MB Category Name] MB Message Subject\"),\n\t\t\t\t\tselenium.getText(\"//h1/span[1]\"));\n\t\t\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\t\t\"//div[contains(child::text(),'MB Message Body')]\",\n\t\t\t\t\t\t\"MB Message Body\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div/table/tbody/tr/td[1]/div/span\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div/table/tbody/tr/td[1]/div/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Reply\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.selectFrame(\"//iframe[@id='canvas_frame']\");\n\t\t\t\tselenium.selectFrame(\"//iframe[@class='Am Al editable']\");\n\t\t\t\tselenium.type(\"//body\",\n\t\t\t\t\tRuntimeVariables.replace(\"MB Message Email Reply\"));\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Send\"),\n\t\t\t\t\tselenium.getText(\"//div[3]/div/div/div/div[1]/b\"));\n\t\t\t\tselenium.clickAt(\"//div[3]/div/div/div/div[1]/b\",\n\t\t\t\t\tRuntimeVariables.replace(\"Send\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean signedIn2 = selenium.isPartialText(\"//td/a\", \"Sign out\");\n\n\t\t\t\tif (!signedIn2) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Sign out\"),\n\t\t\t\t\tselenium.getText(\"//td/a\"));\n\t\t\t\tselenium.clickAt(\"//td/a\", RuntimeVariables.replace(\"Sign out\"));\n\n\t\t\tcase 5:\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.close();\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"7c73b6a923bddaaf6bdceee0de85a340796b7fb9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTestSuite(ConfigureServerAdministrationMailTest.class);\n\t\ttestSuite.addTestSuite(EditPortalInstanceMailDomainTest.class);\n\t\ttestSuite.addTestSuite(AddUserGmailTest.class);\n\t\ttestSuite.addTestSuite(AssignMembersSiteUserTest.class);\n\t\ttestSuite.addTestSuite(AddPageMBTest.class);\n\t\ttestSuite.addTestSuite(AddPortletMBTest.class);\n\t\ttestSuite.addTestSuite(\n\t\t\tConfigureMBPortletEmailFromGmailServerTest.class);\n\t\ttestSuite.addTestSuite(AddMBCategoryTest.class);\n\t\ttestSuite.addTestSuite(SignOutTest.class);\n\t\ttestSuite.addTestSuite(Gmail_TearDownEmailTest.class);\n\t\ttestSuite.addTestSuite(GmailServer_TearDownEmailTest.class);\n\t\ttestSuite.addTestSuite(Gmail_SignInTest.class);\n\t\ttestSuite.addTestSuite(Gmail_SubscribeMBCategoryTest.class);\n\t\ttestSuite.addTestSuite(SignOutTest.class);\n\t\ttestSuite.addTestSuite(SignInTest.class);\n\t\ttestSuite.addTestSuite(PostNewMBCategoryThreadMessageTest.class);\n\t\ttestSuite.addTestSuite(\n\t\t\tGmail_ReplyMBCategoryThreadMessageEmailTest.class);\n\t\ttestSuite.addTestSuite(ViewMBCategoryThreadMessageEmailTest.class);\n\t\ttestSuite.addTestSuite(Gmail_TearDownEmailTest.class);\n\t\ttestSuite.addTestSuite(GmailServer_TearDownEmailTest.class);\n\t\ttestSuite.addTestSuite(TearDownMBCategoryTest.class);\n\t\ttestSuite.addTestSuite(TearDownPageTest.class);\n\t\ttestSuite.addTestSuite(TearDownServerTest.class);\n\t\ttestSuite.addTestSuite(TearDownUserTest.class);\n\n\t\treturn testSuite;\n\t}","id":53128,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTestSuite(ConfigureServerAdministrationMailTest.class);\n\t\ttestSuite.addTestSuite(EditPortalInstanceMailDomainTest.class);\n\t\ttestSuite.addTestSuite(AddUserGmailTest.class);\n\t\ttestSuite.addTestSuite(AddSiteTest.class);\n\t\ttestSuite.addTestSuite(AssignMembersSiteUserTest.class);\n\t\ttestSuite.addTestSuite(AddPageMBTest.class);\n\t\ttestSuite.addTestSuite(AddPortletMBTest.class);\n\t\ttestSuite.addTestSuite(\n\t\t\tConfigureMBPortletEmailFromGmailServerTest.class);\n\t\ttestSuite.addTestSuite(AddMBCategoryTest.class);\n\t\ttestSuite.addTestSuite(SignOutTest.class);\n\t\ttestSuite.addTestSuite(Gmail_TearDownEmailTest.class);\n\t\ttestSuite.addTestSuite(GmailServer_TearDownEmailTest.class);\n\t\ttestSuite.addTestSuite(Gmail_SignInTest.class);\n\t\ttestSuite.addTestSuite(Gmail_SubscribeMBCategoryTest.class);\n\t\ttestSuite.addTestSuite(SignOutTest.class);\n\t\ttestSuite.addTestSuite(SignInTest.class);\n\t\ttestSuite.addTestSuite(PostNewMBCategoryThreadMessageTest.class);\n\t\ttestSuite.addTestSuite(\n\t\t\tGmail_ReplyMBCategoryThreadMessageEmailTest.class);\n\t\ttestSuite.addTestSuite(ViewMBCategoryThreadMessageEmailTest.class);\n\t\ttestSuite.addTestSuite(Gmail_TearDownEmailTest.class);\n\t\ttestSuite.addTestSuite(GmailServer_TearDownEmailTest.class);\n\t\ttestSuite.addTestSuite(TearDownMBCategoryTest.class);\n\t\ttestSuite.addTestSuite(TearDownPageTest.class);\n\t\ttestSuite.addTestSuite(TearDownSitesTest.class);\n\t\ttestSuite.addTestSuite(TearDownServerTest.class);\n\t\ttestSuite.addTestSuite(TearDownUserTest.class);\n\n\t\treturn testSuite;\n\t}","commit_id":"7c73b6a923bddaaf6bdceee0de85a340796b7fb9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGmail_SubscribeMBCategory() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Boards Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Test Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"MB Category Name\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//strong/a\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Subscribe\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//strong/a\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Unsubscribe\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t}","id":53129,"modified_method":"public void testGmail_SubscribeMBCategory() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Site Name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Name\", RuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Test Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"MB Category Name\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Subscribe\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Unsubscribe\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t}","commit_id":"7c73b6a923bddaaf6bdceee0de85a340796b7fb9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGmail_TearDownEmail() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.openWindow(\"http://www.gmail.com/\",\n\t\t\t\t\tRuntimeVariables.replace(\"gmail\"));\n\t\t\t\tselenium.waitForPopUp(\"gmail\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.selectWindow(\"gmail\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean signedIn1 = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/div/nobr/a[2]\");\n\n\t\t\t\tif (!signedIn1) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Sign out\"),\n\t\t\t\t\tselenium.getText(\"//div[2]/div/nobr/a[2]\"));\n\t\t\t\tselenium.clickAt(\"//div[2]/div/nobr/a[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign out\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean signedIn2 = selenium.isPartialText(\"//td/a\", \"Sign out\");\n\n\t\t\t\tif (!signedIn2) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Sign out\"),\n\t\t\t\t\tselenium.getText(\"//td/a\"));\n\t\t\t\tselenium.clickAt(\"//td/a\", RuntimeVariables.replace(\"Sign out\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@id='Email']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='Email']\",\n\t\t\t\t\tRuntimeVariables.replace(\"liferay.qa.testing.trunk\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='Passwd']\",\n\t\t\t\t\tRuntimeVariables.replace(\"loveispatient\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean staySignedInChecked = selenium.isChecked(\n\t\t\t\t\t\t\"PersistentCookie\");\n\n\t\t\t\tif (staySignedInChecked) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='PersistentCookie']\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@id='PersistentCookie']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Stay signed in\"));\n\n\t\t\tcase 4:\n\t\t\t\tassertTrue(selenium.isChecked(\"//input[@id='PersistentCookie']\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@id='signIn']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@type='checkbox']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@type='checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"All\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div/div/div/div[1]/div[1]/div[1]/div/div/div[2]/div[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div/div/div/div[1]/div[1]/div[1]/div/div/div[2]/div[3]\"));\n\t\t\t\tselenium.clickAt(\"//div/div/div/div[1]/div[1]/div[1]/div/div/div[2]/div[3]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean signedIn3 = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/div/nobr/a[2]\");\n\n\t\t\t\tif (!signedIn3) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Sign out\"),\n\t\t\t\t\tselenium.getText(\"//div[2]/div/nobr/a[2]\"));\n\t\t\t\tselenium.clickAt(\"//div[2]/div/nobr/a[2]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign out\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean signedIn4 = selenium.isPartialText(\"//td/a\", \"Sign out\");\n\n\t\t\t\tif (!signedIn4) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Sign out\"),\n\t\t\t\t\tselenium.getText(\"//td/a\"));\n\t\t\t\tselenium.clickAt(\"//td/a\", RuntimeVariables.replace(\"Sign out\"));\n\n\t\t\tcase 6:\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.close();\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":53130,"modified_method":"public void testGmail_TearDownEmail() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.openWindow(\"http://www.gmail.com/\",\n\t\t\t\t\tRuntimeVariables.replace(\"gmail\"));\n\t\t\t\tselenium.waitForPopUp(\"gmail\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.selectWindow(\"gmail\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean SignedIn = selenium.isPartialText(\"//td/a\", \"Sign out\");\n\n\t\t\t\tif (!SignedIn) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Sign out\"),\n\t\t\t\t\tselenium.getText(\"//td/a\"));\n\t\t\t\tselenium.clickAt(\"//td/a\", RuntimeVariables.replace(\"Sign out\"));\n\t\t\t\tselenium.clickAt(\"//span/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign in to Gmail\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean signInAsADifferentUserPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Sign in as a different user\");\n\n\t\t\t\tif (!signInAsADifferentUserPresent) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=Sign in as a different user\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign in as a different user\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@id='Email']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='Email']\",\n\t\t\t\t\tRuntimeVariables.replace(\"liferay.qa.testing.trunk\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.type(\"//input[@id='Passwd']\",\n\t\t\t\t\tRuntimeVariables.replace(\"loveispatient\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean staySignedInChecked = selenium.isChecked(\n\t\t\t\t\t\t\"PersistentCookie\");\n\n\t\t\t\tif (staySignedInChecked) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='PersistentCookie']\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@id='PersistentCookie']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Stay signed in\"));\n\n\t\t\tcase 4:\n\t\t\t\tassertTrue(selenium.isChecked(\"//input[@id='PersistentCookie']\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@id='signIn']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//input[@type='checkbox']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@type='checkbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"All\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div/div/div/div[1]/div[1]/div[1]/div/div/div[2]/div[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div/div/div/div[1]/div[1]/div[1]/div/div/div[2]/div[3]\"));\n\t\t\t\tselenium.clickAt(\"//div/div/div/div[1]/div[1]/div[1]/div/div/div[2]/div[3]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean signedIn2 = selenium.isPartialText(\"//td/a\", \"Sign out\");\n\n\t\t\t\tif (!signedIn2) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Sign out\"),\n\t\t\t\t\tselenium.getText(\"//td/a\"));\n\t\t\t\tselenium.clickAt(\"//td/a\", RuntimeVariables.replace(\"Sign out\"));\n\n\t\t\tcase 5:\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.close();\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"7c73b6a923bddaaf6bdceee0de85a340796b7fb9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testPostNewMBCategoryThreadMessage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Boards Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Test Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"MB Category Name\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"MB Category Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Post New Thread']\",\n\t\t\tRuntimeVariables.replace(\"Post New Thread\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_19_subject']\",\n\t\t\tRuntimeVariables.replace(\"MB Message Subject\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//textarea[@id='_19_editor']\",\n\t\t\tRuntimeVariables.replace(\"MB Message Body\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"MB Message Subject\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\"), selenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0\"),\n\t\t\tselenium.getText(\"//td[5]/a\"));\n\t\tassertTrue(selenium.isPartialText(\"//td[6]/a\", \"By: Joe Bloggs\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"MB Message Subject\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"MB Message Subject\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"MB Message Subject\"),\n\t\t\tselenium.getText(\"//div[@class='subject']/a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//a[@class='user-name']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"MB Message Body\"),\n\t\t\tselenium.getText(\"//div[@class='thread-body']\"));\n\t}","id":53131,"modified_method":"public void testPostNewMBCategoryThreadMessage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Site Name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Name\", RuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Test Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"MB Category Name\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\",\n\t\t\tRuntimeVariables.replace(\"MB Category Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Post New Thread']\",\n\t\t\tRuntimeVariables.replace(\"Post New Thread\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_19_subject']\",\n\t\t\tRuntimeVariables.replace(\"MB Message Subject\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__19_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__19_editor']/iframe\");\n\t\tselenium.type(\"//body\", RuntimeVariables.replace(\"MB Message Body\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.clickAt(\"//a[@id='_19_TabsBack']\",\n\t\t\tRuntimeVariables.replace(\"\\u00ab Back to MB Category Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"MB Message Subject\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\"), selenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1\"),\n\t\t\tselenium.getText(\"//td[5]/a\"));\n\t\tassertTrue(selenium.isPartialText(\"//td[6]/a\", \"By: Joe Bloggs\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"MB Message Subject\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"MB Message Subject\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"MB Message Subject\"),\n\t\t\tselenium.getText(\"//div[@class='subject']/a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//span[@class='user-name']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"MB Message Body\"),\n\t\t\tselenium.getText(\"//div[@class='thread-body']\"));\n\t}","commit_id":"7c73b6a923bddaaf6bdceee0de85a340796b7fb9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownMBCategory() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"link=Message Boards Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Message Boards Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Message Boards Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean category1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!category1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[5]/span/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean category2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!category2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[5]/span/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean category3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!category3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[5]/span/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean category4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!category4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[5]/span/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean category5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!category5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[5]/span/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":53132,"modified_method":"public void testTearDownMBCategory() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Site Name\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Site Name\",\n\t\t\t\t\tRuntimeVariables.replace(\"Site Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Message Boards Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Message Boards Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean category1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a\");\n\n\t\t\t\tif (!category1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean category2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!category2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean category3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a\");\n\n\t\t\t\tif (!category3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean category4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a\");\n\n\t\t\t\tif (!category4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean category5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a\");\n\n\t\t\t\tif (!category5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"7c73b6a923bddaaf6bdceee0de85a340796b7fb9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tString guestCommunity = selenium.getText(\n\t\t\t\t\t\t\"//nav[@id='breadcrumbs']/ul/li[1]/span/a\");\n\t\t\t\tRuntimeVariables.setValue(\"guestCommunity\", guestCommunity);\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Pages\", RuntimeVariables.replace(\"Pages\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isPartialText(\"//div/div[3]/a\",\n\t\t\t\t\t\t\t\t\tRuntimeVariables.getValue(\"guestCommunity\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[3]/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Welcome\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li[2]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li[2]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":53133,"modified_method":"public void testTearDownPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Site Name\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Site Name\",\n\t\t\t\t\tRuntimeVariables.replace(\"Site Name\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/div/ul/li[1]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//div[4]/div/ul/li[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Manage Pages\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Public Pages\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//div/div[3]/a\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean welcomePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (welcomePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//li/ul/li[1]/div/div[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean page1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (!page1Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li/ul/li[1]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!RuntimeVariables.replace(\"/home\")\n\t\t\t\t\t\t\t\t\t\t\t\t .equals(selenium.getValue(\n\t\t\t\t\t\t\t\t\t\t\"//input[@id='_88_friendlyURL']\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//button[3]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (!page2Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li/ul/li[1]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (!page3Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li/ul/li[1]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (!page4Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li/ul/li[1]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\t\t\t\tselenium.clickAt(\"//div[@id='_88_layoutsTreeOutput']/ul/li/div/div[1]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Drop Down Arrow\"));\n\n\t\t\t\tboolean page5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//li/ul/li[1]/div/div[3]/a\");\n\n\t\t\t\tif (!page5Present) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//li/ul/li[1]/div/div[3]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Page Name\"));\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (RuntimeVariables.replace(\"Delete\")\n\t\t\t\t\t\t\t\t\t\t\t\t.equals(selenium.getText(\n\t\t\t\t\t\t\t\t\t\t\"//button[3]\"))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//button[3]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//button[3]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"7c73b6a923bddaaf6bdceee0de85a340796b7fb9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownUser() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Users\", RuntimeVariables.replace(\"Users\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean basicVisible = selenium.isVisible(\"link=\\u00ab Basic\");\n\n\t\t\t\tif (!basicVisible) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=\\u00ab Basic\",\n\t\t\t\t\tRuntimeVariables.replace(\"\\u00ab Basic\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//input[@id='_125_toggle_id_enterprise_admin_user_searchkeywords']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 2:\n\t\t\t\tselenium.type(\"//input[@id='_125_toggle_id_enterprise_admin_user_searchkeywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"user\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean user1Deactivate = selenium.isElementPresent(\n\t\t\t\t\t\t\"_125_rowIds\");\n\n\t\t\t\tif (!user1Deactivate) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_125_rowIds\",\n\t\t\t\t\tRuntimeVariables.replace(\"Checkbox\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean user2Deactivate = selenium.isElementPresent(\n\t\t\t\t\t\t\"_125_rowIds\");\n\n\t\t\t\tif (!user2Deactivate) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_125_rowIds\",\n\t\t\t\t\tRuntimeVariables.replace(\"Checkbox\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean user3Deactivate = selenium.isElementPresent(\n\t\t\t\t\t\t\"_125_rowIds\");\n\n\t\t\t\tif (!user3Deactivate) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_125_rowIds\",\n\t\t\t\t\tRuntimeVariables.replace(\"Checkbox\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean user4Deactivate = selenium.isElementPresent(\n\t\t\t\t\t\t\"_125_rowIds\");\n\n\t\t\t\tif (!user4Deactivate) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_125_rowIds\",\n\t\t\t\t\tRuntimeVariables.replace(\"Checkbox\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 6:\n\n\t\t\t\tboolean user5Deactivate = selenium.isElementPresent(\n\t\t\t\t\t\t\"_125_rowIds\");\n\n\t\t\t\tif (!user5Deactivate) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_125_rowIds\",\n\t\t\t\t\tRuntimeVariables.replace(\"Checkbox\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 7:\n\t\t\t\tselenium.clickAt(\"link=Advanced \\u00bb\",\n\t\t\t\t\tRuntimeVariables.replace(\"Advanced \\u00bb\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"_125_status\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.select(\"_125_status\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=Inactive\"));\n\t\t\t\tselenium.clickAt(\"//div[2]/span[2]/span/input\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean user1Delete = selenium.isElementPresent(\"_125_rowIds\");\n\n\t\t\t\tif (!user1Delete) {\n\t\t\t\t\tlabel = 8;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_125_rowIds\",\n\t\t\t\t\tRuntimeVariables.replace(\"Checkbox\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 8:\n\n\t\t\t\tboolean user2Delete = selenium.isElementPresent(\"_125_rowIds\");\n\n\t\t\t\tif (!user2Delete) {\n\t\t\t\t\tlabel = 9;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_125_rowIds\",\n\t\t\t\t\tRuntimeVariables.replace(\"Checkbox\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 9:\n\n\t\t\t\tboolean user3Delete = selenium.isElementPresent(\"_125_rowIds\");\n\n\t\t\t\tif (!user3Delete) {\n\t\t\t\t\tlabel = 10;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_125_rowIds\",\n\t\t\t\t\tRuntimeVariables.replace(\"Checkbox\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 10:\n\n\t\t\t\tboolean user4Delete = selenium.isElementPresent(\"_125_rowIds\");\n\n\t\t\t\tif (!user4Delete) {\n\t\t\t\t\tlabel = 11;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_125_rowIds\",\n\t\t\t\t\tRuntimeVariables.replace(\"Checkbox\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 11:\n\n\t\t\t\tboolean user5Delete = selenium.isElementPresent(\"_125_rowIds\");\n\n\t\t\t\tif (!user5Delete) {\n\t\t\t\t\tlabel = 12;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"_125_rowIds\",\n\t\t\t\t\tRuntimeVariables.replace(\"Checkbox\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 12:\n\t\t\t\tselenium.clickAt(\"link=\\u00ab Basic\",\n\t\t\t\t\tRuntimeVariables.replace(\"\\u00ab Basic\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":53134,"modified_method":"public void testTearDownUser() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Control Panel\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Users and Organizations\",\n\t\t\t\t\tRuntimeVariables.replace(\"Users and Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=View\", RuntimeVariables.replace(\"View\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"All Users\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean basic1Visible = selenium.isVisible(\"link=\\u00ab Basic\");\n\n\t\t\t\tif (!basic1Visible) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=\\u00ab Basic\",\n\t\t\t\t\tRuntimeVariables.replace(\"\\u00ab Basic\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.type(\"//input[@name='_125_keywords']\",\n\t\t\t\t\tRuntimeVariables.replace(\"selenium\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean UsersExists = selenium.isPartialText(\"//div[5]\",\n\t\t\t\t\t\t\"No users were found\");\n\n\t\t\t\tif (UsersExists) {\n\t\t\t\t\tlabel = 9;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Check All\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=View\", RuntimeVariables.replace(\"View\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"All Users\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.clickAt(\"link=Advanced \\u00bb\",\n\t\t\t\t\tRuntimeVariables.replace(\"Advanced \\u00bb\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\"//select[@id='_125_status']\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tselenium.select(\"//select[@id='_125_status']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Inactive\"));\n\t\t\t\tselenium.clickAt(\"//div[2]/span[2]/span/input\",\n\t\t\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean user1Deleted = selenium.isElementPresent(\n\t\t\t\t\t\t\"//input[@name='_125_rowIds']\");\n\n\t\t\t\tif (!user1Deleted) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean user2Deleted = selenium.isElementPresent(\n\t\t\t\t\t\t\"//input[@name='_125_rowIds']\");\n\n\t\t\t\tif (!user2Deleted) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean user3Deleted = selenium.isElementPresent(\n\t\t\t\t\t\t\"//input[@name='_125_rowIds']\");\n\n\t\t\t\tif (!user3Deleted) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean user4Deleted = selenium.isElementPresent(\n\t\t\t\t\t\t\"//input[@name='_125_rowIds']\");\n\n\t\t\t\tif (!user4Deleted) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean user5Deleted = selenium.isElementPresent(\n\t\t\t\t\t\t\"//input[@name='_125_rowIds']\");\n\n\t\t\t\tif (!user5Deleted) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@name='_125_rowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 7:\n\t\t\t\tselenium.clickAt(\"link=View\", RuntimeVariables.replace(\"View\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.saveScreenShotAndSource();\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"All Users\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.saveScreenShotAndSource();\n\n\t\t\t\tboolean basicVisible = selenium.isVisible(\"link=\\u00ab Basic\");\n\n\t\t\t\tif (!basicVisible) {\n\t\t\t\t\tlabel = 8;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"link=\\u00ab Basic\",\n\t\t\t\t\tRuntimeVariables.replace(\"\\u00ab Basic\"));\n\n\t\t\tcase 8:\n\t\t\tcase 9:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"7c73b6a923bddaaf6bdceee0de85a340796b7fb9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewMBCategoryThreadMessageEmail()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tThread.sleep(60000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Boards Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Test Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"MB Category Name\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"2\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"MB Category Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"MB Message Subject\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"2\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[5]/a\"));\n\t\tassertTrue(selenium.isPartialText(\"//td[6]/a\", \"By: userfn userln\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"MB Message Subject\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"MB Message Subject\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"MB Message Subject\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Re: [MB Category Name] MB Message Subject\"),\n\t\t\tselenium.getText(\"//tr[2]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"MB Message Subject\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='subject'])[1]/a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\"MB Message Body\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='thread-body'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='user-details'])[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Re: [MB Category Name] MB Message Subject\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='subject'])[2]/a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\"userfn userln\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='user-details'])[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"MB Message Email Reply\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='thread-body'])[2]\"));\n\t}","id":53135,"modified_method":"public void testViewMBCategoryThreadMessageEmail()\n\t\tthrows Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tThread.sleep(60000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Site Name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Site Name\", RuntimeVariables.replace(\"Site Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Test Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"MB Category Name\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"2\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"MB Category Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"MB Message Subject\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"2\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//td[5]/a\"));\n\t\tassertTrue(selenium.isPartialText(\"//td[6]/a\", \"By: userfn userln\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"MB Message Subject\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"MB Message Subject\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"MB Message Subject\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Re: [MB Category Name] MB Message Subject\"),\n\t\t\tselenium.getText(\"//tr[2]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"MB Message Subject\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='subject'])[1]/a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\"MB Message Body\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='thread-body'])[1]\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"xPath=(//span[@class='user-name'])[1]\", \"Joe Bloggs\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Re: [MB Category Name] MB Message Subject\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='subject'])[2]/a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\"MB Message Email Reply\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='thread-body'])[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"userfn userln\"),\n\t\t\tselenium.getText(\"xPath=(//span[@class='user-name'])[2]\"));\n\t}","commit_id":"7c73b6a923bddaaf6bdceee0de85a340796b7fb9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void render(Component comp, Writer out) throws IOException {\n\t\tfinal WriterHelper wh = new WriterHelper(out);\n\t\tfinal Groupbox self = (Groupbox) comp;\n\t\tfinal Caption caption = self.getCaption();\n\t\tfinal String uuid = self.getUuid();\n\t\tfinal Execution exec = Executions.getCurrent();\n\n\t\twh.write(\"<table id=\\\"\");\n\t\twh.write(uuid);\n\t\twh.write(\"\\\" z.type=\\\"zul.widget.Grbox\\\"\");\n\t\twh.write(self.getOuterAttrs());\n\t\twh.write(self.getInnerAttrs());\n\t\twh.write(\"><tr valign=\\\"top\\\"><td>\");\n\n\t\tif (caption != null) {\n\t\t\twh.write(\"<table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\">\");\n\t\t\twh.write(\"<tr><td class=\\\"groupbox-3d-tl\\\"><\/td>\");\n\t\t\twh.write(\"<td colspan=\\\"3\\\" class=\\\"groupbox-3d-tm\\\"><\/td>\");\n\t\t\twh.write(\"<td class=\\\"groupbox-3d-tr\\\"><\/td><\/tr>\");\n\n\t\t\twh.write(\"<tr height=\\\"22\\\"><td class=\\\"groupbox-3d-ml\\\"><\/td>\");\n\t\t\twh.write(\"<td width=\\\"3\\\" class=\\\"groupbox-3d-mm\\\"><\/td>\");\n\t\t\twh.write(\"<td class=\\\"groupbox-3d-mm\\\">\");\n\t\t\tif (caption != null) {\n\t\t\t\tcaption.redraw(out);\n\t\t\t}\n\t\t\twh.write(\"<\/td>\");\n\t\t\twh.write(\"<td width=\\\"3\\\" class=\\\"groupbox-3d-mm\\\"><\/td>\");\n\t\t\twh.write(\"<td class=\\\"groupbox-3d-mr\\\"><\/td><\/tr>\");\n\t\t\twh.write(\"<tr><td colspan=\\\"5\\\" class=\\\"groupbox-3d-b\\\"><\/td><\/tr>\");\n\t\t\twh.write(\"<\/table>\");\n\t\t}\n\n\t\tString gcExtStyle = StringFns.cat(caption == null ? \"\"\n\t\t\t\t: \"border-top:0;\", self.getContentStyle());\n\t\twh.write(\"<div id=\\\"\");\n\t\twh.write(uuid);\n\t\twh.write(\"!slide\\\"\");\n\t\tif (!self.isOpen()) {\n\t\t\twh.write(\" style=\\\"display:none\\\" \");\n\t\t}\n\n\t\twh.write(\">\");\n\n\t\twh.write(\"<div id=\\\"\");\n\t\twh.write(uuid);\n\t\twh.write(\"!cave\\\" \");\n\t\twh.write(\"class=\\\"\");\n\t\twh.write(self.getContentSclass());\n\t\twh.write(\"\\\"\");\n\t\twh.write(XMLFns.attr(\"style\", gcExtStyle)).write(\">\");\n\n\t\tfor (Iterator it = self.getChildren().iterator(); it.hasNext();) {\n\t\t\tfinal Component child = (Component) it.next();\n\t\t\tif (caption != child)\n\t\t\t\tchild.redraw(out);\n\t\t}\n\n\t\twh.write(\"<\/div><\/div>\");\n\n\t\t// shadow\n\t\twh.write(\"<table id=\\\"\");\n\t\twh.write(self.getUuid());\n\t\twh.write(\"!sdw\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\">\");\n\t\twh.write(\"<tr><td class=\\\"groupbox-3d-shdl\\\"><\/td>\");\n\t\twh.write(\"<td class=\\\"groupbox-3d-shdm\\\">\");\n\t\twh.write(\"<img width=\\\"1\\\" height=\\\"1\\\" src=\\\"\");\n\t\twh.write(exec.encodeURL(\"~./img/spacer.gif\"));\n\t\twh.write(\"\\\"/><\/td> \");\n\t\twh.write(\"<td class=\\\"groupbox-3d-shdr\\\"><\/td>\");\n\t\twh.write(\"<\/tr><\/table>\");\n\n\t\twh.write(\"<\/td><\/tr><\/table>\");\n\t\twh.writeln();\n\t}","id":53136,"modified_method":"public void render(Component comp, Writer out) throws IOException {\n\t\tfinal WriterHelper wh = new WriterHelper(out);\n\t\tfinal Groupbox self = (Groupbox) comp;\n\t\tfinal Caption caption = self.getCaption();\n\t\tfinal String uuid = self.getUuid();\n\t\tfinal Execution exec = Executions.getCurrent();\n\n\t\twh.write(\"<table id=\\\"\");\n\t\twh.write(uuid);\n\t\twh.write(\"\\\" z.type=\\\"zul.widget.Grbox\\\"\");\n\t\twh.write(self.getOuterAttrs());\n\t\twh.write(self.getInnerAttrs());\n\t\twh.write(\"><tr valign=\\\"top\\\"><td>\");\n\n\t\tif (caption != null) {\n\t\t\twh.write(\"<table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\">\");\n\t\t\twh.write(\"<tr><td class=\\\"groupbox-3d-tl\\\"><\/td>\");\n\t\t\twh.write(\"<td colspan=\\\"3\\\" class=\\\"groupbox-3d-tm\\\"><\/td>\");\n\t\t\twh.write(\"<td class=\\\"groupbox-3d-tr\\\"><\/td><\/tr>\");\n\n\t\t\twh.write(\"<tr height=\\\"22\\\"><td class=\\\"groupbox-3d-ml\\\"><\/td>\");\n\t\t\twh.write(\"<td width=\\\"3\\\" class=\\\"groupbox-3d-mm\\\"><\/td>\");\n\t\t\twh.write(\"<td class=\\\"groupbox-3d-mm\\\">\");\n\t\t\tif (caption != null) {\n\t\t\t\tcaption.redraw(out);\n\t\t\t}\n\t\t\twh.write(\"<\/td>\");\n\t\t\twh.write(\"<td width=\\\"3\\\" class=\\\"groupbox-3d-mm\\\"><\/td>\");\n\t\t\twh.write(\"<td class=\\\"groupbox-3d-mr\\\"><\/td><\/tr>\");\n\t\t\twh.write(\"<tr><td colspan=\\\"5\\\" class=\\\"groupbox-3d-b\\\"><\/td><\/tr>\");\n\t\t\twh.write(\"<\/table>\");\n\t\t}\n\n\t\tString gcExtStyle = StringFns.cat(caption == null ? \"\"\n\t\t\t\t: \"border-top:0;\", self.getContentStyle());\n\t\twh.write(\"<div id=\\\"\");\n\t\twh.write(uuid);\n\t\twh.write(\"!slide\\\"\");\n\t\tif (!self.isOpen()) {\n\t\t\twh.write(\" style=\\\"display:none\\\" \");\n\t\t}\n\n\t\twh.write(\">\");\n\n\t\twh.write(\"<div id=\\\"\").write(uuid).write(\"!cave\\\" class=\\\"\")\n\t\t\t.write(self.getContentSclass()).write(\"\\\"\")\n\t\t\t.writeAttr(\"style\", gcExtStyle).write(\">\");\n\n\t\tfor (Iterator it = self.getChildren().iterator(); it.hasNext();) {\n\t\t\tfinal Component child = (Component) it.next();\n\t\t\tif (caption != child)\n\t\t\t\tchild.redraw(out);\n\t\t}\n\n\t\twh.write(\"<\/div><\/div>\");\n\n\t\t// shadow\n\t\twh.write(\"<table id=\\\"\");\n\t\twh.write(self.getUuid());\n\t\twh.write(\"!sdw\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\">\");\n\t\twh.write(\"<tr><td class=\\\"groupbox-3d-shdl\\\"><\/td>\");\n\t\twh.write(\"<td class=\\\"groupbox-3d-shdm\\\">\");\n\t\twh.write(\"<img width=\\\"1\\\" height=\\\"1\\\" src=\\\"\");\n\t\twh.write(exec.encodeURL(\"~./img/spacer.gif\"));\n\t\twh.write(\"\\\"/><\/td> \");\n\t\twh.write(\"<td class=\\\"groupbox-3d-shdr\\\"><\/td>\");\n\t\twh.write(\"<\/tr><\/table>\");\n\n\t\twh.write(\"<\/td><\/tr><\/table>\");\n\t\twh.writeln();\n\t}","commit_id":"6fba68e92fcaba0ac75d9b93a9ab66e9ac2220da","url":"https://github.com/zkoss/zk"},{"original_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal WriterHelper wh = new WriterHelper(out);\r\n\t\tfinal Menubar self = (Menubar)comp;\r\n\t\tfinal String uuid = self.getUuid();\r\n\t\twh.write(\"<div id=\\\"\").write(uuid).write(\"\\\" z.type=\\\"zul.menu.Menubar\\\"\");\r\n\t\twh.write(self.getOuterAttrs()).write(self.getInnerAttrs()).writeln(\">\");\r\n\t\twh.writeln(\"<table cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" id=\\\"\").write(uuid).write(\"!cave\\\">\");\r\n\t\tfor (Iterator it = self.getChildren().iterator(); it.hasNext();) {\r\n\t\t\tfinal LabelImageElement child = (LabelImageElement)it.next();\r\n\t\t\twh.write(\"<tr id=\\\"\").write(child.getUuid()).write(\"!chdextr\\\"\");\r\n\t\t\twh.write(XMLFns.attr(\"height\",child.getHeight())).writeln(\">\");\r\n\t\t\tchild.redraw(out);\r\n\t\t\twh.write(\"<\/tr>\");\r\n\t\t}\r\n\t\twh.write(\"<\/table><\/div>\");\r\n\t\t/*\r\n\t\t<div id=\"${self.uuid}\" z.type=\"zul.menu.Menubar\"${self.outerAttrs}${self.innerAttrs}>\r\n\t\t<table cellpadding=\"0\" cellspacing=\"0\" id=\"${self.uuid}!cave\">\r\n\t\t\t<c:forEach var=\"child\" items=\"${self.children}\">\r\n\t\t <tr id=\"${child.uuid}!chdextr\"${c:attr('height',child.height)}>${z:redraw(child, null)}<\/tr>\r\n\t\t\t<\/c:forEach>\r\n\t\t<\/table>\r\n\t\t<\/div>\r\n\t\t*/\r\n\r\n\t}","id":53137,"modified_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal WriterHelper wh = new WriterHelper(out);\r\n\t\tfinal Menubar self = (Menubar)comp;\r\n\t\tfinal String uuid = self.getUuid();\r\n\t\twh.write(\"<div id=\\\"\").write(uuid).write(\"\\\" z.type=\\\"zul.menu.Menubar\\\"\");\r\n\t\twh.write(self.getOuterAttrs()).write(self.getInnerAttrs()).writeln(\">\");\r\n\t\twh.writeln(\"<table cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" id=\\\"\").write(uuid).write(\"!cave\\\">\");\r\n\t\tfor (Iterator it = self.getChildren().iterator(); it.hasNext();) {\r\n\t\t\tfinal LabelImageElement child = (LabelImageElement)it.next();\r\n\t\t\twh.write(\"<tr id=\\\"\").write(child.getUuid()).write(\"!chdextr\\\"\");\r\n\t\t\twh.writeAttr(\"height\",child.getHeight()).writeln(\">\");\r\n\t\t\tchild.redraw(out);\r\n\t\t\twh.write(\"<\/tr>\");\r\n\t\t}\r\n\t\twh.write(\"<\/table><\/div>\");\r\n\t\t/*\r\n\t\t<div id=\"${self.uuid}\" z.type=\"zul.menu.Menubar\"${self.outerAttrs}${self.innerAttrs}>\r\n\t\t<table cellpadding=\"0\" cellspacing=\"0\" id=\"${self.uuid}!cave\">\r\n\t\t\t<c:forEach var=\"child\" items=\"${self.children}\">\r\n\t\t <tr id=\"${child.uuid}!chdextr\"${c:attr('height',child.height)}>${z:redraw(child, null)}<\/tr>\r\n\t\t\t<\/c:forEach>\r\n\t\t<\/table>\r\n\t\t<\/div>\r\n\t\t*/\r\n\r\n\t}","commit_id":"6fba68e92fcaba0ac75d9b93a9ab66e9ac2220da","url":"https://github.com/zkoss/zk"},{"original_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal WriterHelper wh = new WriterHelper(out);\r\n\t\tfinal Menuitem self = (Menuitem)comp;\r\n\t\tfinal String uuid = self.getUuid();\r\n\t\tfinal Execution exec = Executions.getCurrent();\r\n\t\tif(self.isTopmost()){\r\n\t\t\twh.write(\"<td id=\\\"\").write(uuid).write(\"\\\" align=\\\"left\\\" z.type=\\\"Menuit\\\"\");\r\n\t\t\twh.write(self.getOuterAttrs()).write(self.getInnerAttrs()).write(\">\");\r\n\t\t\twh.write(\"<a href=\\\"\");\r\n\t\t\tif(Strings.isBlank(self.getHref()))\r\n\t\t\t\twh.write(\"javascript:;\");\r\n\t\t\telse\r\n\t\t\t\twh.write(exec.encodeURL(self.getHref()));\r\n\t\t\twh.write(\"\\\"\");\r\n\t\t\twh.write(XMLFns.attr(\"target\",self.getTarget()));\r\n\t\t\twh.write(\" id=\\\"\").write(uuid).write(\"!a\\\">\").write(self.getImgTag());\r\n\t\t\tRenderFns.getOut(out).setValue(self.getLabel()).render();\r\n\t\t\twh.write(\"<\/a>\");\r\n\t\t\twh.writeln(\"<\/td>\");\r\n\t\t}else{\r\n\t\t\twh.write(\"<tr id=\\\"\").write(uuid).write(\"\\\" z.type=\\\"Menuit\\\"\");\r\n\t\t\twh.write(self.getOuterAttrs()).write(self.getInnerAttrs()).writeln(\">\");\r\n\t\t\twh.write(\"<td><img src=\\\"\");\r\n\t\t\tif(self.isChecked())\r\n\t\t\t\twh.write(exec.encodeURL(\"~./zul/img/menu/checked.gif\"));\r\n\t\t\telse\r\n\t\t\t\twh.write(exec.encodeURL(\"~./img/spacer.gif\"));\r\n\t\t\twh.writeln(\"\\\" width=\\\"11\\\"/><\/td>\");\r\n\t\t\twh.write(\"<td align=\\\"left\\\"><a href=\\\"\");\r\n\t\t\tif(Strings.isBlank(self.getHref()))\r\n\t\t\t\twh.write(\"javascript:;\");\r\n\t\t\telse\r\n\t\t\t\twh.write(exec.encodeURL(self.getHref()));\r\n\t\t\twh.write(\"\\\"\");\r\n\t\t\twh.write(XMLFns.attr(\"target\",self.getTarget()));\r\n\t\t\twh.write(\" id=\\\"\").write(uuid).write(\"!a\\\">\").write(self.getImgTag());\r\n\t\t\tRenderFns.getOut(out).setValue(self.getLabel()).render();\r\n\t\t\twh.write(\"<\/a>\");\r\n\t\t\twh.writeln(\"<\/td>\");\r\n\t\t\twh.write(\"<td><img src=\\\"\").write(exec.encodeURL(\"~./img/spacer.gif\")).writeln(\"\\\" width=\\\"9\\\"/><\/td>\");\r\n\t\t\twh.write(\"<\/tr>\");\r\n\t\t}\r\n\t\t/*\r\n\t\t<c:choose>\r\n\t\t<c:when test=\"${self.topmost}\">\r\n\t\t <td id=\"${self.uuid}\" align=\"left\" z.type=\"Menuit\"${self.outerAttrs}${self.innerAttrs}><a href=\"${empty self.href?'javascript:;':c:encodeURL(self.href)}\"${c:attr('target',self.target)} id=\"${self.uuid}!a\">${self.imgTag}<c:out value=\"${self.label}\"/><\/a><\/td>\r\n\t\t<\/c:when>\r\n\t\t<c:otherwise>\r\n\t\t <tr id=\"${self.uuid}\" z.type=\"Menuit\"${self.outerAttrs}${self.innerAttrs}>\r\n\t\t <td><img src=\"${c:encodeURL(self.checked?'~./zul/img/menu/checked.gif':'~./img/spacer.gif')}\" width=\"11\"/><\/td>\r\n\t\t <td align=\"left\"><a href=\"${empty self.href?'javascript:;':c:encodeURL(self.href)}\"${c:attr('target',self.target)} id=\"${self.uuid}!a\">${self.imgTag}<c:out value=\"${self.label}\"/><\/a><\/td>\r\n\t\t <td><img src=\"${c:encodeURL('~./img/spacer.gif')}\" width=\"9\"/><\/td>\r\n\t\t <\/tr>\r\n\t\t<\/c:otherwise>\r\n\t\t<\/c:choose>\r\n\t\t*/\r\n\t}","id":53138,"modified_method":"public void render(Component comp, Writer out) throws IOException {\r\n\t\tfinal WriterHelper wh = new WriterHelper(out);\r\n\t\tfinal Menuitem self = (Menuitem)comp;\r\n\t\tfinal String uuid = self.getUuid();\r\n\t\tfinal Execution exec = Executions.getCurrent();\r\n\t\tif(self.isTopmost()){\r\n\t\t\twh.write(\"<td id=\\\"\").write(uuid).write(\"\\\" align=\\\"left\\\" z.type=\\\"Menuit\\\"\");\r\n\t\t\twh.write(self.getOuterAttrs()).write(self.getInnerAttrs()).write(\">\");\r\n\t\t\twh.write(\"<a href=\\\"\");\r\n\t\t\tif(Strings.isBlank(self.getHref()))\r\n\t\t\t\twh.write(\"javascript:;\");\r\n\t\t\telse\r\n\t\t\t\twh.write(exec.encodeURL(self.getHref()));\r\n\t\t\twh.write(\"\\\"\").writeAttr(\"target\",self.getTarget());\r\n\t\t\twh.write(\" id=\\\"\").write(uuid).write(\"!a\\\">\").write(self.getImgTag());\r\n\t\t\tRenderFns.getOut(out).setValue(self.getLabel()).render();\r\n\t\t\twh.write(\"<\/a>\");\r\n\t\t\twh.writeln(\"<\/td>\");\r\n\t\t}else{\r\n\t\t\twh.write(\"<tr id=\\\"\").write(uuid).write(\"\\\" z.type=\\\"Menuit\\\"\");\r\n\t\t\twh.write(self.getOuterAttrs()).write(self.getInnerAttrs()).writeln(\">\");\r\n\t\t\twh.write(\"<td><img src=\\\"\");\r\n\t\t\tif(self.isChecked())\r\n\t\t\t\twh.write(exec.encodeURL(\"~./zul/img/menu/checked.gif\"));\r\n\t\t\telse\r\n\t\t\t\twh.write(exec.encodeURL(\"~./img/spacer.gif\"));\r\n\t\t\twh.writeln(\"\\\" width=\\\"11\\\"/><\/td>\");\r\n\t\t\twh.write(\"<td align=\\\"left\\\"><a href=\\\"\");\r\n\t\t\tif(Strings.isBlank(self.getHref()))\r\n\t\t\t\twh.write(\"javascript:;\");\r\n\t\t\telse\r\n\t\t\t\twh.write(exec.encodeURL(self.getHref()));\r\n\t\t\twh.write(\"\\\"\").writeAttr(\"target\",self.getTarget());\r\n\t\t\twh.write(\" id=\\\"\").write(uuid).write(\"!a\\\">\").write(self.getImgTag());\r\n\t\t\tRenderFns.getOut(out).setValue(self.getLabel()).render();\r\n\t\t\twh.write(\"<\/a>\");\r\n\t\t\twh.writeln(\"<\/td>\");\r\n\t\t\twh.write(\"<td><img src=\\\"\").write(exec.encodeURL(\"~./img/spacer.gif\")).writeln(\"\\\" width=\\\"9\\\"/><\/td>\");\r\n\t\t\twh.write(\"<\/tr>\");\r\n\t\t}\r\n\t\t/*\r\n\t\t<c:choose>\r\n\t\t<c:when test=\"${self.topmost}\">\r\n\t\t <td id=\"${self.uuid}\" align=\"left\" z.type=\"Menuit\"${self.outerAttrs}${self.innerAttrs}><a href=\"${empty self.href?'javascript:;':c:encodeURL(self.href)}\"${c:attr('target',self.target)} id=\"${self.uuid}!a\">${self.imgTag}<c:out value=\"${self.label}\"/><\/a><\/td>\r\n\t\t<\/c:when>\r\n\t\t<c:otherwise>\r\n\t\t <tr id=\"${self.uuid}\" z.type=\"Menuit\"${self.outerAttrs}${self.innerAttrs}>\r\n\t\t <td><img src=\"${c:encodeURL(self.checked?'~./zul/img/menu/checked.gif':'~./img/spacer.gif')}\" width=\"11\"/><\/td>\r\n\t\t <td align=\"left\"><a href=\"${empty self.href?'javascript:;':c:encodeURL(self.href)}\"${c:attr('target',self.target)} id=\"${self.uuid}!a\">${self.imgTag}<c:out value=\"${self.label}\"/><\/a><\/td>\r\n\t\t <td><img src=\"${c:encodeURL('~./img/spacer.gif')}\" width=\"9\"/><\/td>\r\n\t\t <\/tr>\r\n\t\t<\/c:otherwise>\r\n\t\t<\/c:choose>\r\n\t\t*/\r\n\t}","commit_id":"6fba68e92fcaba0ac75d9b93a9ab66e9ac2220da","url":"https://github.com/zkoss/zk"},{"original_method":"public void render(Component comp, Writer out) throws IOException {\n\t\tfinal WriterHelper wh = new WriterHelper(out);\n\t\tfinal Window self = (Window)comp;\n\t\tfinal String uuid = self.getUuid();\n\t\tfinal Execution exec = Executions.getCurrent();\n\n\t\twh.write(\"<div id=\\\"\");\n\t\twh.write(uuid);\n\t\twh.write(\"\\\" z.type=\\\"zul.wnd.Wnd\\\" z.autoz=\\\"true\\\"\");\n\t\twh.write(self.getOuterAttrs());\n\t\twh.write(self.getInnerAttrs());\n\t\twh.write(\">\\n\");\n\n\t\tfinal Caption caption = self.getCaption();\n\t\tfinal String title = self.getTitle(), titlesc = self.getTitleSclass();\n\t\tString wcExtStyle = \"\";\n\t\tif (caption == null && title.length() == 0) {\n\t\t\tif (exec.isExplorer() && !exec.isExplorer7()) {\n\t\t\t\twh.write(\n\t\t\t\t\t\"<table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\">\"\n\t\t\t\t\t+\"<tr height=\\\"1px\\\"><td><\/td><\/tr><\/table>\\n\");\n\t\t\t}\n\t\t} else {\n\t\t\twh.write(\"<table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\">\\n\");\n\t\t\tif (caption == null) {\n\t\t\t\twh.write(\"<tr id=\\\"\");\n\t\t\t\twh.write(uuid);\n\t\t\t\twh.write(\"!caption\\\" class=\\\"title\\\">\\n\");\n\t\t\t\twh.write(\"<td class=\\\"l\");\n\t\t\t\twh.write(titlesc);\n\t\t\t\twh.write(\"\\\"><\/td>\\n\");\n\t\t\t\twh.write(\"<td class=\\\"m\");\n\t\t\t\twh.write(titlesc);\n\t\t\t\twh.write(\"\\\">\");\n\t\t\t\twh.write(XMLs.escapeXML(title));\n\t\t\t\twh.write(\"<\/td>\");\n\t\t\t\tif (self.isClosable()) {\n\t\t\t\t\twh.write(\"<td width=\\\"16\\\" class=\\\"m\");\n\t\t\t\t\twh.write(titlesc);\n\t\t\t\t\twh.write(\"\\\"><img id=\\\"\");\n\t\t\t\t\twh.write(uuid);\n\t\t\t\t\twh.write(\"!close\\\" src=\\\"\");\n\t\t\t\t\twh.write(exec.encodeURL(\"~./zul/img/close-off.gif\"));\n\t\t\t\t\twh.write(\"\\\"/><\/td>\");\n\t\t\t\t}\n\t\t\t\twh.write(\"<td class=\\\"r\");\n\t\t\t\twh.write(titlesc);\n\t\t\t\twh.write(\"\\\"><\/td><\/tr>\\n\");\n\t\t\t} else {\n\t\t\t\twh.write(\"<tr id=\\\"\");\n\t\t\t\twh.write(uuid);\n\t\t\t\twh.write(\"!caption\\\"><td class=\\\"l\");\n\t\t\t\twh.write(titlesc);\n\t\t\t\twh.write(\"\\\"><\/td><td class=\\\"m\");\n\t\t\t\twh.write(titlesc);\n\t\t\t\twh.write(\"\\\">\");\n\t\t\t\tcaption.redraw(out);\n\t\t\t\twh.write(\"<\/td><td class=\\\"r\");\n\t\t\t\twh.write(titlesc);\n\t\t\t\twh.write(\"\\\"><\/td><\/tr>\\n\");\n\t\t\t}\n\t\t\twh.write(\"<\/table>\\n\");\n\t\t\twcExtStyle = \"border-top:0;\";\n\t\t}\n\n\t\tfinal String cs = self.getContentStyle();\n\t\tif(cs!=null){\n\t\t\twcExtStyle += cs;\n\t\t}\n\t\twh.write(\"<div id=\\\"\");\n\t\twh.write(uuid);\n\t\twh.write(\"!cave\\\" class=\\\"\");\n\t\twh.write(self.getContentSclass());\n\t\twh.write(\"\\\"\");\n\t\tif (wcExtStyle.length() > 0) {\n\t\t\twh.write(\" style=\\\"\");\n\t\t\twh.write(wcExtStyle);\n\t\t\twh.write(\"\\\"\");\n\t\t}\n\t\twh.write(\">\");\n\n\t\tfor (Iterator it = self.getChildren().iterator(); it.hasNext();) {\n\t\t\tfinal Component child = (Component)it.next();\n\t\t\tif (child != caption)\n\t\t\t\tchild.redraw(out);\n\t\t}\n\t\twh.write(\"<\/div><\/div>\\n\");\n\t}","id":53139,"modified_method":"public void render(Component comp, Writer out) throws IOException {\n\t\tfinal WriterHelper wh = new WriterHelper(out);\n\t\tfinal Window self = (Window)comp;\n\t\tfinal String uuid = self.getUuid();\n\t\tfinal Execution exec = Executions.getCurrent();\n\n\t\twh.write(\"<div id=\\\"\");\n\t\twh.write(uuid);\n\t\twh.write(\"\\\" z.type=\\\"zul.wnd.Wnd\\\" z.autoz=\\\"true\\\"\");\n\t\twh.write(self.getOuterAttrs());\n\t\twh.write(self.getInnerAttrs());\n\t\twh.write(\">\\n\");\n\n\t\tfinal Caption caption = self.getCaption();\n\t\tfinal String title = self.getTitle(), titlesc = self.getTitleSclass();\n\t\tString wcExtStyle = \"\";\n\t\tif (caption == null && title.length() == 0) {\n\t\t\tif (exec.isExplorer() && !exec.isExplorer7()) {\n\t\t\t\twh.write(\n\t\t\t\t\t\"<table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\">\"\n\t\t\t\t\t+\"<tr height=\\\"1px\\\"><td><\/td><\/tr><\/table>\\n\");\n\t\t\t}\n\t\t} else {\n\t\t\twh.write(\"<table width=\\\"100%\\\" border=\\\"0\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\">\\n\");\n\t\t\tif (caption == null) {\n\t\t\t\twh.write(\"<tr id=\\\"\");\n\t\t\t\twh.write(uuid);\n\t\t\t\twh.write(\"!caption\\\" class=\\\"title\\\">\\n\");\n\t\t\t\twh.write(\"<td class=\\\"l\");\n\t\t\t\twh.write(titlesc);\n\t\t\t\twh.write(\"\\\"><\/td>\\n\");\n\t\t\t\twh.write(\"<td class=\\\"m\");\n\t\t\t\twh.write(titlesc);\n\t\t\t\twh.write(\"\\\">\");\n\t\t\t\twh.write(XMLs.escapeXML(title));\n\t\t\t\twh.write(\"<\/td>\");\n\t\t\t\tif (self.isClosable()) {\n\t\t\t\t\twh.write(\"<td width=\\\"16\\\" class=\\\"m\");\n\t\t\t\t\twh.write(titlesc);\n\t\t\t\t\twh.write(\"\\\"><img id=\\\"\");\n\t\t\t\t\twh.write(uuid);\n\t\t\t\t\twh.write(\"!close\\\" src=\\\"\");\n\t\t\t\t\twh.write(exec.encodeURL(\"~./zul/img/close-off.gif\"));\n\t\t\t\t\twh.write(\"\\\"/><\/td>\");\n\t\t\t\t}\n\t\t\t\twh.write(\"<td class=\\\"r\");\n\t\t\t\twh.write(titlesc);\n\t\t\t\twh.write(\"\\\"><\/td><\/tr>\\n\");\n\t\t\t} else {\n\t\t\t\twh.write(\"<tr id=\\\"\");\n\t\t\t\twh.write(uuid);\n\t\t\t\twh.write(\"!caption\\\"><td class=\\\"l\");\n\t\t\t\twh.write(titlesc);\n\t\t\t\twh.write(\"\\\"><\/td><td class=\\\"m\");\n\t\t\t\twh.write(titlesc);\n\t\t\t\twh.write(\"\\\">\");\n\t\t\t\tcaption.redraw(out);\n\t\t\t\twh.write(\"<\/td><td class=\\\"r\");\n\t\t\t\twh.write(titlesc);\n\t\t\t\twh.write(\"\\\"><\/td><\/tr>\\n\");\n\t\t\t}\n\t\t\twh.write(\"<\/table>\\n\");\n\t\t\twcExtStyle = \"border-top:0;\";\n\t\t}\n\n\t\tfinal String cs = self.getContentStyle();\n\t\tif(cs!=null){\n\t\t\twcExtStyle += cs;\n\t\t}\n\t\twh.write(\"<div id=\\\"\").write(uuid).write(\"!cave\\\" class=\\\"\")\n\t\t\t.write(self.getContentSclass()).write(\"\\\"\")\n\t\t\t.writeAttr(\"style\", wcExtStyle).write(\">\");\n\n\t\tfor (Iterator it = self.getChildren().iterator(); it.hasNext();) {\n\t\t\tfinal Component child = (Component)it.next();\n\t\t\tif (child != caption)\n\t\t\t\tchild.redraw(out);\n\t\t}\n\t\twh.write(\"<\/div><\/div>\\n\");\n\t}","commit_id":"6fba68e92fcaba0ac75d9b93a9ab66e9ac2220da","url":"https://github.com/zkoss/zk"},{"original_method":"private static void doOpenFile(@Nullable final Project project,\n                                 @NotNull final List<VirtualFile> result) {\n    for (final VirtualFile file : result) {\n      if (file.isDirectory()) {\n        ProjectUtil.openOrImport(file.getPath(), project, false);\n        return;\n      }\n\n      if (OpenProjectFileChooserDescriptor.isProjectFile(file)) {\n        int answer = Messages.showYesNoDialog(project,\n                                              IdeBundle.message(\"message.open.file.is.project\", file.getName()),\n                                              IdeBundle.message(\"title.open.project\"),\n                                              Messages.getQuestionIcon());\n        if (answer == 0) {\n          ProjectUtil.openOrImport(file.getPath(), project, false);\n          return;\n        }\n      }\n\n      FileType type = FileTypeChooser.getKnownFileTypeOrAssociate(file, project);\n      if (type == null) return;\n\n      if (project != null) {\n        openFile(file, project);\n      }\n      else {\n        PlatformProjectOpenProcessor.getInstance().doOpenProject(file, null, false);\n      }\n    }\n  }","id":53140,"modified_method":"private static void doOpenFile(@Nullable final Project project,\n                                 @NotNull final List<VirtualFile> result) {\n    for (final VirtualFile file : result) {\n      if (file.isDirectory()) {\n        FileChooserUtil.setLastOpenedFile(ProjectUtil.openOrImport(file.getPath(), project, false), file);\n        return;\n      }\n\n      if (OpenProjectFileChooserDescriptor.isProjectFile(file)) {\n        int answer = Messages.showYesNoDialog(project,\n                                              IdeBundle.message(\"message.open.file.is.project\", file.getName()),\n                                              IdeBundle.message(\"title.open.project\"),\n                                              Messages.getQuestionIcon());\n        if (answer == 0) {\n          FileChooserUtil.setLastOpenedFile(ProjectUtil.openOrImport(file.getPath(), project, false), file);\n          return;\n        }\n      }\n\n      FileType type = FileTypeChooser.getKnownFileTypeOrAssociate(file, project);\n      if (type == null) return;\n\n      if (project != null) {\n        openFile(file, project);\n      }\n      else {\n        PlatformProjectOpenProcessor.getInstance().doOpenProject(file, null, false);\n      }\n    }\n  }","commit_id":"834a07e691276217c268d996e7e45a1fc1e0e674","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void doOpenFile(@Nullable final Project project,\n                                 @NotNull final List<VirtualFile> result) {\n    for (final VirtualFile file : result) {\n      if (file.isDirectory()) {\n        FileChooserUtil.setLastOpenedFile(ProjectUtil.openOrImport(file.getPath(), project, false), file);\n        return;\n      }\n\n      if (OpenProjectFileChooserDescriptor.isProjectFile(file)) {\n        int answer = Messages.showYesNoDialog(project,\n                                              IdeBundle.message(\"message.open.file.is.project\", file.getName()),\n                                              IdeBundle.message(\"title.open.project\"),\n                                              Messages.getQuestionIcon());\n        if (answer == 0) {\n          FileChooserUtil.setLastOpenedFile(ProjectUtil.openOrImport(file.getPath(), project, false), file);\n          return;\n        }\n      }\n\n      FileType type = FileTypeChooser.getKnownFileTypeOrAssociate(file, project);\n      if (type == null) return;\n\n      if (project != null) {\n        openFile(file, project);\n      }\n      else {\n        PlatformProjectOpenProcessor processor = PlatformProjectOpenProcessor.getInstanceIfItExists();\n        if (processor != null) {\n          processor.doOpenProject(file, null, false);\n        }\n      }\n    }\n  }","id":53141,"modified_method":"private static void doOpenFile(@Nullable final Project project,\n                                 @NotNull final List<VirtualFile> result) {\n    for (final VirtualFile file : result) {\n      if (file.isDirectory()) {\n        Project openedProject;\n        if (ProjectAttachProcessor.canAttachToProject()) {\n          openedProject = PlatformProjectOpenProcessor.doOpenProject(file, project, false, -1, null, false);\n        }\n        else {\n          openedProject = ProjectUtil.openOrImport(file.getPath(), project, false);\n        }\n        FileChooserUtil.setLastOpenedFile(openedProject, file);\n        return;\n      }\n\n      if (OpenProjectFileChooserDescriptor.isProjectFile(file)) {\n        int answer = Messages.showYesNoDialog(project,\n                                              IdeBundle.message(\"message.open.file.is.project\", file.getName()),\n                                              IdeBundle.message(\"title.open.project\"),\n                                              Messages.getQuestionIcon());\n        if (answer == 0) {\n          FileChooserUtil.setLastOpenedFile(ProjectUtil.openOrImport(file.getPath(), project, false), file);\n          return;\n        }\n      }\n\n      FileType type = FileTypeChooser.getKnownFileTypeOrAssociate(file, project);\n      if (type == null) return;\n\n      if (project != null) {\n        openFile(file, project);\n      }\n      else {\n        PlatformProjectOpenProcessor processor = PlatformProjectOpenProcessor.getInstanceIfItExists();\n        if (processor != null) {\n          processor.doOpenProject(file, null, false);\n        }\n      }\n    }\n  }","commit_id":"44c81acceba0c56032316cc936b2f828cebce6dd","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void addInfixOperators() {\n    extend(\n      CompletionType.BASIC, psiElement()\n        .withLanguage(PythonLanguage.getInstance())\n        .andNot(BEFORE_COND)\n        .andNot(IN_IMPORT_STMT) // expressions there are not logical anyway\n        .andNot(IN_PARAM_LIST)\n        .andNot(IN_DEFINITION)\n        .andNot(AFTER_QUALIFIER)\n      ,\n      new CompletionProvider<CompletionParameters>() {\n        protected void addCompletions(@NotNull final CompletionParameters parameters, final ProcessingContext context, @NotNull final CompletionResultSet result\n        ) {\n          final @NonNls String[] space_strings = {\"and\", \"or\", \"is\", \"in\"};\n          putKeywords(space_strings, TailType.SPACE, result);\n        }\n      }\n    );\n  }","id":53142,"modified_method":"private void addInfixOperators() {\n    extend(\n      CompletionType.BASIC, psiElement()\n        .withLanguage(PythonLanguage.getInstance())\n        .andNot(IN_COMMENT)\n        .andNot(BEFORE_COND)\n        .andNot(IN_IMPORT_STMT) // expressions there are not logical anyway\n        .andNot(IN_PARAM_LIST)\n        .andNot(IN_DEFINITION)\n        .andNot(AFTER_QUALIFIER)\n      ,\n      new CompletionProvider<CompletionParameters>() {\n        protected void addCompletions(@NotNull final CompletionParameters parameters, final ProcessingContext context, @NotNull final CompletionResultSet result\n        ) {\n          final @NonNls String[] space_strings = {\"and\", \"or\", \"is\", \"in\"};\n          putKeywords(space_strings, TailType.SPACE, result);\n        }\n      }\n    );\n  }","commit_id":"43498ac538df2b59307d36386587f874942aa708","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean isAcceptable(Object what, PsiElement context) {\n      if (!(what instanceof PsiElement)) return false;\n      PsiElement p = (PsiElement)what;\n      p = p.getUserData(ORG_ELT); // saved by fillCompletionVariants().\n      if (p == null) return false; // just in case\n      int point = p.getTextOffset();\n      PsiDocumentManager docMgr = PsiDocumentManager.getInstance(p.getProject());\n      Document doc = docMgr.getDocument(p.getContainingFile());\n      if (doc != null) {\n        CharSequence chs = doc.getCharsSequence();\n        char c;\n        do { // scan to the left for a EOL\n          point -= 1;\n          if (point < 0) return true; // we're at BOF\n          c = chs.charAt(point);\n          if (c == '\\n') return true;\n        } while (c == ' ' || c == '\\t');\n      }\n      return false;\n    }","id":53143,"modified_method":"public boolean isAcceptable(Object what, PsiElement context) {\n      if (!(what instanceof PsiElement)) return false;\n      PsiElement p = (PsiElement)what;\n      p = p.getUserData(ORG_ELT); // saved by fillCompletionVariants().\n      if (p == null || p instanceof PsiComment) return false; // just in case\n      int point = p.getTextOffset();\n      PsiDocumentManager docMgr = PsiDocumentManager.getInstance(p.getProject());\n      Document doc = docMgr.getDocument(p.getContainingFile());\n      if (doc != null) {\n        CharSequence chs = doc.getCharsSequence();\n        char c;\n        do { // scan to the left for a EOL\n          point -= 1;\n          if (point < 0) return true; // we're at BOF\n          c = chs.charAt(point);\n          if (c == '\\n') return true;\n        } while (c == ' ' || c == '\\t');\n      }\n      return false;\n    }","commit_id":"43498ac538df2b59307d36386587f874942aa708","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void addNot() {\n    extend(\n      CompletionType.BASIC, psiElement()\n        .withLanguage(PythonLanguage.getInstance())\n        .andNot(IN_IMPORT_STMT)\n        .andNot(IN_PARAM_LIST)\n        .andNot(IN_DEFINITION)\n        .andNot(AFTER_QUALIFIER)\n      ,\n      new CompletionProvider<CompletionParameters>() {\n        protected void addCompletions(@NotNull final CompletionParameters parameters, final ProcessingContext context, @NotNull final CompletionResultSet result\n        ) {\n          final @NonNls String[] space_strings = {\"not\"};\n          putKeywords(space_strings, TailType.SPACE, result);\n        }\n      }\n    );\n  }","id":53144,"modified_method":"private void addNot() {\n    extend(\n      CompletionType.BASIC, psiElement()\n        .withLanguage(PythonLanguage.getInstance())\n        .andNot(IN_COMMENT)\n        .andNot(IN_IMPORT_STMT)\n        .andNot(IN_PARAM_LIST)\n        .andNot(IN_DEFINITION)\n        .andNot(AFTER_QUALIFIER)\n      ,\n      new CompletionProvider<CompletionParameters>() {\n        protected void addCompletions(@NotNull final CompletionParameters parameters, final ProcessingContext context, @NotNull final CompletionResultSet result\n        ) {\n          final @NonNls String[] space_strings = {\"not\"};\n          putKeywords(space_strings, TailType.SPACE, result);\n        }\n      }\n    );\n  }","commit_id":"43498ac538df2b59307d36386587f874942aa708","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n     * Construct merge query.\n     *\n     * @param schema Database schema name.\n     * @param tblName Database table name.\n     * @param keyCols Database key columns.\n     * @param uniqCols Database unique value columns.\n     * @return Put query.\n     */\n    public String mergeQuery(String schema, String tblName, Collection<String> keyCols, Collection<String> uniqCols) {\n        return \"\";\n    }","id":53145,"modified_method":"/** {@inheritDoc} */\n    @Override public String mergeQuery(String schema, String tblName, Collection<String> keyCols,\n        Collection<String> uniqCols) {\n        return \"\";\n    }","commit_id":"c9803b6ad400b6daaf1ea54c6aa1bb1dfd1d3808","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * @return {@code True} if database support merge operation.\n     */\n    public boolean hasMerge() {\n        return false;\n    }","id":53146,"modified_method":"/** {@inheritDoc} */\n    @Override public boolean hasMerge() {\n        return false;\n    }","commit_id":"c9803b6ad400b6daaf1ea54c6aa1bb1dfd1d3808","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Construct load cache query.\n     *\n     * @param schema Database schema name.\n     * @param tblName Database table name.\n     * @param uniqCols Database unique value columns.\n     * @return Load cache query.\n     */\n    public String loadCacheQuery(String schema, String tblName, Iterable<String> uniqCols) {\n        return String.format(\"SELECT %s FROM %s.%s\", mkString(uniqCols, \",\"), schema, tblName);\n    }","id":53147,"modified_method":"/** {@inheritDoc} */\n    @Override public String loadCacheQuery(String schema, String tblName, Iterable<String> uniqCols) {\n        return String.format(\"SELECT %s FROM %s.%s\", mkString(uniqCols, \",\"), schema, tblName);\n    }","commit_id":"c9803b6ad400b6daaf1ea54c6aa1bb1dfd1d3808","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Construct remove query.\n     *\n     * @param schema Database schema name.\n     * @param tblName Database table name.\n     * @param keyCols Database key columns.\n     * @return Remove query.\n     */\n    public String removeQuery(String schema, String tblName, Iterable<String> keyCols) {\n        String whereParams = mkString(keyCols, new C1<String, String>() {\n            @Override public String apply(String s) {\n                return s + \"=?\";\n            }\n        }, \"\", \" AND \", \"\");\n\n        return String.format(\"DELETE FROM %s.%s WHERE %s\", schema, tblName, whereParams);\n    }","id":53148,"modified_method":"/** {@inheritDoc} */\n    @Override public String removeQuery(String schema, String tblName, Iterable<String> keyCols) {\n        String whereParams = mkString(keyCols, new C1<String, String>() {\n            @Override public String apply(String s) {\n                return s + \"=?\";\n            }\n        }, \"\", \" AND \", \"\");\n\n        return String.format(\"DELETE FROM %s.%s WHERE %s\", schema, tblName, whereParams);\n    }","commit_id":"c9803b6ad400b6daaf1ea54c6aa1bb1dfd1d3808","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Get max query parameters count.\n     *\n     * @return Max query parameters count.\n     */\n    public int getMaxParamsCnt() {\n        return maxParamsCnt;\n    }","id":53149,"modified_method":"/** {@inheritDoc} */\n    @Override public int getMaxParamsCnt() {\n        return maxParamsCnt;\n    }","commit_id":"c9803b6ad400b6daaf1ea54c6aa1bb1dfd1d3808","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Construct update query.\n     *\n     * @param schema Database schema name.\n     * @param tblName Database table name.\n     * @param keyCols Database key columns.\n     * @param valCols Database value columns.\n     */\n    public String updateQuery(String schema, String tblName, Collection<String> keyCols, Iterable<String> valCols) {\n        String params = mkString(valCols, new C1<String, String>() {\n            @Override public String apply(String s) {\n                return s + \"=?\";\n            }\n        }, \"\", \",\", \"\");\n\n        return String.format(\"UPDATE %s.%s SET %s WHERE %s\", schema, tblName, params, where(keyCols, 1));\n    }","id":53150,"modified_method":"/** {@inheritDoc} */\n    @Override public String updateQuery(String schema, String tblName, Collection<String> keyCols,\n        Iterable<String> valCols) {\n        String params = mkString(valCols, new C1<String, String>() {\n            @Override public String apply(String s) {\n                return s + \"=?\";\n            }\n        }, \"\", \",\", \"\");\n\n        return String.format(\"UPDATE %s.%s SET %s WHERE %s\", schema, tblName, params, where(keyCols, 1));\n    }","commit_id":"c9803b6ad400b6daaf1ea54c6aa1bb1dfd1d3808","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Construct load query.\n     *\n     * @param schema Database schema name.\n     * @param tblName Database table name.\n     * @param keyCols Database key columns.\n     * @param cols Selected columns.\n     * @param keyCnt Key count.\n     * @return Load query.\n     */\n    public String loadQuery(String schema, String tblName, Collection<String> keyCols, Iterable<String> cols,\n        int keyCnt) {\n        assert !keyCols.isEmpty();\n\n        String params = where(keyCols, keyCnt);\n\n        return String.format(\"SELECT %s FROM %s.%s WHERE %s\", mkString(cols, \",\"), schema, tblName, params);\n    }","id":53151,"modified_method":"/** {@inheritDoc} */\n    @Override public String loadQuery(String schema, String tblName, Collection<String> keyCols, Iterable<String> cols,\n        int keyCnt) {\n        assert !keyCols.isEmpty();\n\n        String params = where(keyCols, keyCnt);\n\n        return String.format(\"SELECT %s FROM %s.%s WHERE %s\", mkString(cols, \",\"), schema, tblName, params);\n    }","commit_id":"c9803b6ad400b6daaf1ea54c6aa1bb1dfd1d3808","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Construct insert query.\n     *\n     * @param schema Database schema name.\n     * @param tblName Database table name.\n     * @param keyCols Database key columns.\n     * @param valCols Database value columns.\n     */\n    public String insertQuery(String schema, String tblName, Collection<String> keyCols, Collection<String> valCols) {\n        Collection<String> cols = F.concat(false, keyCols, valCols);\n\n        return String.format(\"INSERT INTO %s.%s(%s) VALUES(%s)\", schema, tblName, mkString(cols, \",\"),\n            repeat(\"?\", cols.size(), \"\", \",\", \"\"));\n    }","id":53152,"modified_method":"/** {@inheritDoc} */\n    @Override public String insertQuery(String schema, String tblName, Collection<String> keyCols,\n        Collection<String> valCols) {\n        Collection<String> cols = F.concat(false, keyCols, valCols);\n\n        return String.format(\"INSERT INTO %s.%s(%s) VALUES(%s)\", schema, tblName, mkString(cols, \",\"),\n            repeat(\"?\", cols.size(), \"\", \",\", \"\"));\n    }","commit_id":"c9803b6ad400b6daaf1ea54c6aa1bb1dfd1d3808","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Closes allocated resources depending on transaction status.\n     *\n     * @param tx Active transaction, if any.\n     * @param conn Allocated connection.\n     * @param st Created statement,\n     */\n    protected void end(@Nullable IgniteTx tx, @Nullable Connection conn, @Nullable Statement st) {\n        U.closeQuiet(st);\n\n        if (tx == null)\n            // Close connection right away if there is no transaction.\n            closeConnection(conn);\n    }","id":53153,"modified_method":"/**\n     * Closes allocated resources depending on transaction status.\n     *\n     * @param conn Allocated connection.\n     * @param st Created statement,\n     */\n    protected void end(@Nullable Connection conn, @Nullable Statement st) {\n        U.closeQuiet(st);\n\n        closeConnection(conn);\n    }","commit_id":"c9803b6ad400b6daaf1ea54c6aa1bb1dfd1d3808","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Closes connection.\n     *\n     * @param conn Connection to close.\n     */\n    protected void closeConnection(@Nullable Connection conn) {\n        U.closeQuiet(conn);\n    }","id":53154,"modified_method":"/**\n     * Closes connection.\n     *\n     * @param conn Connection to close.\n     */\n    protected void closeConnection(@Nullable Connection conn) {\n        CacheStoreSession ses = session();\n\n        // Close connection right away if there is no transaction.\n        if (ses.transaction() == null)\n            U.closeQuiet(conn);\n    }","commit_id":"c9803b6ad400b6daaf1ea54c6aa1bb1dfd1d3808","url":"https://github.com/apache/ignite"},{"original_method":"@Override public void txEnd(boolean commit) throws CacheWriterException {\n        // TODO: SPRINT-32 CODE: implement.\n    }","id":53155,"modified_method":"/** {@inheritDoc} */\n    @Override public void txEnd(boolean commit) throws CacheWriterException {\n        CacheStoreSession ses = session();\n\n        IgniteTx tx = ses.transaction();\n\n        Connection conn = ses.<String, Connection>properties().remove(ATTR_CONN);\n\n\n        if (conn != null) {\n            assert tx != null;\n\n            try {\n                if (commit)\n                    conn.commit();\n                else\n                    conn.rollback();\n            }\n            catch (SQLException e) {\n                throw new CacheWriterException(\n                    \"Failed to end transaction [xid=\" + tx.xid() + \", commit=\" + commit + ']', e);\n            }\n            finally {\n                U.closeQuiet(conn);\n            }\n        }\n\n        if (tx != null && log.isDebugEnabled())\n            log.debug(\"Transaction ended [xid=\" + tx.xid() + \", commit=\" + commit + ']');\n    }","commit_id":"c9803b6ad400b6daaf1ea54c6aa1bb1dfd1d3808","url":"https://github.com/apache/ignite"},{"original_method":"@Override\n    public void writeAll(Collection<Cache.Entry<? extends K, ? extends V>> collection) throws CacheWriterException {\n        // TODO: SPRINT-32 CODE: implement.\n    }","id":53156,"modified_method":"/** {@inheritDoc} */\n    @Override public void writeAll(Collection<Cache.Entry<? extends K, ? extends V>> entries)\n        throws CacheWriterException {\n        assert entries != null;\n\n        init();\n\n        Connection conn = null;\n\n        try {\n            conn = connection();\n\n            if (dialect.hasMerge()) {\n                Map<Object, WriteWorker> workers = U.newHashMap(typeMeta.size());\n\n                Collection<Future<?>> futs = new ArrayList<>();\n\n                for (Cache.Entry<? extends K, ? extends V> entry : entries) {\n                    Object typeId = typeId(entry.getKey());\n\n                    final EntryMapping m = typeMeta.get(typeId);\n\n                    if (m == null)\n                        throw new CacheWriterException(\"Failed to find store mapping description for key: \" +\n                            entry.getKey());\n\n                    WriteWorker worker = workers.get(typeId);\n\n                    if (worker == null)\n                        workers.put(typeId, worker = new WriteWorker(conn, m));\n\n                    worker.entries.add(entry);\n\n                    if (worker.entries.size() == batchSz)\n                        futs.add(exec.submit(workers.remove(typeId)));\n                }\n\n                for (WriteWorker worker : workers.values())\n                    futs.add(exec.submit(worker));\n\n                for (Future<?> fut : futs)\n                    U.get(fut);\n            }\n            else {\n                Map<Object, T2<PreparedStatement, PreparedStatement>> stmtByType = U.newHashMap(typeMeta.size());\n\n                for (Cache.Entry<? extends K, ? extends V> entry : entries) {\n                    Object typeId = typeId(entry.getKey());\n\n                    final EntryMapping m = typeMeta.get(typeId);\n\n                    if (m == null)\n                        throw new CacheWriterException(\"Failed to find store mapping description for key: \" +\n                            entry.getKey());\n\n                    T2<PreparedStatement, PreparedStatement> stmts = stmtByType.get(typeId);\n\n                    if (stmts == null)\n                        stmtByType.put(typeId,\n                            stmts = new T2<>(conn.prepareStatement(m.updQry), conn.prepareStatement(m.insQry)));\n\n                    PreparedStatement stmt = stmts.get1();\n\n                    assert stmt != null;\n\n                    int i = fillValueParameters(stmt, 1, m, entry.getValue());\n\n                    fillKeyParameters(stmt, i, m, entry.getKey());\n\n                    if (stmt.executeUpdate() == 0) {\n                        stmt = stmts.get2();\n\n                        assert stmt != null;\n\n                        i = fillKeyParameters(stmt, m, entry.getKey());\n\n                        fillValueParameters(stmt, i, m, entry.getValue());\n\n                        stmt.executeUpdate();\n                    }\n                }\n\n                for (T2<PreparedStatement, PreparedStatement> stmts :  stmtByType.values()) {\n                    U.closeQuiet(stmts.get1());\n\n                    U.closeQuiet(stmts.get2());\n                }\n            }\n        }\n        catch (SQLException e) {\n            throw new CacheWriterException(\"Failed to open connection\", e);\n        }\n        catch (IgniteCheckedException e) {\n            throw new CacheWriterException(\"Failed to write values into database\", e);\n        }\n        finally {\n            closeConnection(conn);\n        }\n    }","commit_id":"c9803b6ad400b6daaf1ea54c6aa1bb1dfd1d3808","url":"https://github.com/apache/ignite"},{"original_method":"@Override public void write(Cache.Entry<? extends K, ? extends V> entry) throws CacheWriterException {\n        // TODO: SPRINT-32 CODE: implement.\n    }","id":53157,"modified_method":"/** {@inheritDoc} */\n    @Override public void write(Cache.Entry<? extends K, ? extends V> entry) throws CacheWriterException {\n        assert entry != null;\n\n        init();\n\n        K key = entry.getKey();\n\n        EntryMapping type = typeMeta.get(typeId(key));\n\n        if (type == null)\n            throw new CacheWriterException(\"Failed to find store mapping description for entry: \" + entry);\n\n        if (log.isDebugEnabled())\n            log.debug(\"Start write entry to database: \" + entry);\n\n        Connection conn = null;\n\n        PreparedStatement stmt = null;\n\n        try {\n            conn = connection();\n\n            if (dialect.hasMerge()) {\n                stmt = conn.prepareStatement(type.mergeQry);\n\n                int i = fillKeyParameters(stmt, type, key);\n\n                fillValueParameters(stmt, i, type, entry.getValue());\n\n                stmt.executeUpdate();\n            }\n            else {\n                V val = entry.getValue();\n\n                stmt = conn.prepareStatement(type.updQry);\n\n                int i = fillValueParameters(stmt, 1, type, val);\n\n                fillKeyParameters(stmt, i, type, key);\n\n                if (stmt.executeUpdate() == 0) {\n                    stmt.close();\n\n                    stmt = conn.prepareStatement(type.insQry);\n\n                    i = fillKeyParameters(stmt, type, key);\n\n                    fillValueParameters(stmt, i, type, val);\n\n                    stmt.executeUpdate();\n                }\n            }\n        }\n        catch (SQLException e) {\n            throw new CacheWriterException(\"Failed to write entry to database: \" + entry, e);\n        }\n        finally {\n            end(conn, stmt);\n        }\n    }","commit_id":"c9803b6ad400b6daaf1ea54c6aa1bb1dfd1d3808","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Set database dialect.\n     *\n     * @param dialect Database dialect.\n     */\n    public void setDialect(BasicJdbcDialect dialect) {\n        this.dialect = dialect;\n    }","id":53158,"modified_method":"/**\n     * Set database dialect.\n     *\n     * @param dialect Database dialect.\n     */\n    public void setDialect(JdbcDialect dialect) {\n        this.dialect = dialect;\n    }","commit_id":"c9803b6ad400b6daaf1ea54c6aa1bb1dfd1d3808","url":"https://github.com/apache/ignite"},{"original_method":"@Override public void deleteAll(Collection<?> collection) throws CacheWriterException {\n        // TODO: SPRINT-32 CODE: implement.\n    }","id":53159,"modified_method":"/** {@inheritDoc} */\n    @Override public void deleteAll(Collection<?> keys) throws CacheWriterException {\n        assert keys != null;\n\n        Connection conn = null;\n\n        try {\n            conn = connection();\n\n            Collection<Future<?>> futs = new ArrayList<>();\n\n            Map<Object, DeleteWorker> workers = U.newHashMap(typeMeta.size());\n\n            for (Object key : keys) {\n                Object typeId = typeId(key);\n\n                final EntryMapping m = typeMeta.get(typeId);\n\n                if (m == null)\n                    throw new CacheWriterException(\"Failed to find store mapping description for key: \" + key);\n\n                DeleteWorker worker = workers.get(typeId);\n\n                if (worker == null)\n                    workers.put(typeId, worker = new DeleteWorker(conn, m));\n\n                worker.keys.add(key);\n\n                if (worker.keys.size() == batchSz)\n                    futs.add(exec.submit(workers.remove(typeId)));\n            }\n\n            for (DeleteWorker worker : workers.values())\n                futs.add(exec.submit(worker));\n\n            for (Future<?> fut : futs)\n                U.get(fut);\n        }\n        catch (SQLException e) {\n            throw new CacheWriterException(\"Failed to open connection\", e);\n        }\n        catch (IgniteCheckedException e) {\n            throw new CacheWriterException(\"Failed to remove values from database\", e);\n        }\n        finally {\n            closeConnection(conn);\n        }\n    }","commit_id":"c9803b6ad400b6daaf1ea54c6aa1bb1dfd1d3808","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * @param tx Cache transaction.\n     * @return Connection.\n     * @throws SQLException In case of error.\n     */\n    protected Connection connection(@Nullable IgniteTx tx) throws SQLException {\n        if (tx != null) {\n            Connection conn = null;// TODO: IGNITE-32 FIXME tx.meta(ATTR_CONN);\n\n            if (conn == null) {\n                conn = openConnection(false);\n\n                // Store connection in transaction metadata, so it can be accessed\n                // for other operations on the same transaction.\n                // TODO: IGNITE-32 FIXME tx.addMeta(ATTR_CONN, conn);\n            }\n\n            return conn;\n        }\n        // Transaction can be null in case of simple load operation.\n        else\n            return openConnection(true);\n    }","id":53160,"modified_method":"/**\n     * @return Connection.\n     * @throws SQLException In case of error.\n     */\n    protected Connection connection() throws SQLException {\n        CacheStoreSession ses = session();\n\n        if (ses.transaction() != null) {\n            Map<String, Connection> prop = ses.properties();\n\n            Connection conn = prop.get(ATTR_CONN);\n\n            if (conn == null) {\n                conn = openConnection(false);\n\n                // Store connection in session, so it can be accessed\n                // for other operations on the same session.\n                prop.put(ATTR_CONN, conn);\n            }\n\n            return conn;\n        }\n        // Transaction can be null in case of simple load operation.\n        else\n            return openConnection(true);\n    }","commit_id":"c9803b6ad400b6daaf1ea54c6aa1bb1dfd1d3808","url":"https://github.com/apache/ignite"},{"original_method":"@Override public Map<K, V> loadAll(Iterable<? extends K> iterable) throws CacheLoaderException {\n        return null; // TODO: SPRINT-32 CODE: implement.\n    }","id":53161,"modified_method":"/** {@inheritDoc} */\n    @Override public Map<K, V> loadAll(Iterable<? extends K> keys) throws CacheLoaderException {\n        assert keys != null;\n\n        init();\n\n        Connection conn = null;\n        try {\n            conn = connection();\n\n            Map<Object, LoadWorker<K, V>> workers = U.newHashMap(typeMeta.size());\n\n            Collection<Future<Map<K, V>>> futs = new ArrayList<>();\n\n            int cnt = 0;\n\n            for (K key : keys) {\n                Object typeId = typeId(key);\n\n                final EntryMapping m = typeMeta.get(typeId);\n\n                if (m == null)\n                    throw new CacheWriterException(\"Failed to find store mapping description for key: \" + key);\n\n                LoadWorker<K, V> worker = workers.get(typeId);\n\n                if (worker == null)\n                    workers.put(typeId, worker = new LoadWorker<>(conn, m));\n\n                worker.keys.add(key);\n\n                if (worker.keys.size() == m.maxKeysPerStmt)\n                    futs.add(exec.submit(workers.remove(typeId)));\n\n                cnt ++;\n            }\n\n            for (LoadWorker<K, V> worker : workers.values())\n                futs.add(exec.submit(worker));\n\n            Map<K, V> res = U.newHashMap(cnt);\n\n            for (Future<Map<K, V>> fut : futs)\n                res.putAll(U.get(fut));\n\n            return res;\n        }\n        catch (SQLException e) {\n            throw new CacheWriterException(\"Failed to open connection\", e);\n        }\n        catch (IgniteCheckedException e) {\n            throw new CacheWriterException(\"Failed to load entries from database\", e);\n        }\n        finally {\n            closeConnection(conn);\n        }\n    }","commit_id":"c9803b6ad400b6daaf1ea54c6aa1bb1dfd1d3808","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Build cache for mapped types.\n     *\n     * @throws IgniteCheckedException If failed to initialize.\n     */\n    protected abstract void buildTypeCache() throws IgniteCheckedException;","id":53162,"modified_method":"/**\n     * Build cache for mapped types.\n     *\n     * @throws CacheException If failed to initialize.\n     */\n    protected abstract void buildTypeCache() throws CacheException;","commit_id":"c9803b6ad400b6daaf1ea54c6aa1bb1dfd1d3808","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Override public void loadCache(final IgniteBiInClosure<K, V> clo, @Nullable Object... args)\n        throws CacheLoaderException {\n        try {\n            init();\n\n            if (log.isDebugEnabled())\n                log.debug(\"Loading all values from db\");\n\n            Collection<Future<?>> futs = new ArrayList<>();\n\n            for (final QueryCache type : entryQtyCache.values())\n                futs.add(exec.submit(new Callable<Void>() {\n                    @Override public Void call() throws Exception {\n                        Connection conn = null;\n\n                        try {\n                            PreparedStatement stmt = null;\n\n                            try {\n                                conn = connection(null);\n\n                                stmt = conn.prepareStatement(type.loadCacheQry);\n\n                                ResultSet rs = stmt.executeQuery();\n\n                                while (rs.next()) {\n                                    K key = buildObject(type.keyType(), type.keyDescriptors(), rs);\n                                    V val = buildObject(type.valueType(), type.valueDescriptors(), rs);\n\n                                    clo.apply(key, val);\n                                }\n                            }\n                            catch (SQLException e) {\n                                throw new IgniteCheckedException(\"Failed to load cache\", e);\n                            }\n                            finally {\n                                U.closeQuiet(stmt);\n                            }\n                        }\n                        finally {\n                            closeConnection(conn);\n                        }\n\n                        return null;\n                    }\n                }));\n\n            for (Future<?> fut : futs)\n                U.get(fut);\n        }\n        catch (Exception e) {\n            throw new CacheException(e);\n        }\n    }","id":53163,"modified_method":"/** {@inheritDoc} */\n    @Override public void loadCache(final IgniteBiInClosure<K, V> clo, @Nullable Object... args)\n        throws CacheLoaderException {\n        try {\n            init();\n\n            if (log.isDebugEnabled())\n                log.debug(\"Loading all values from db\");\n\n            Collection<Future<?>> futs = new ArrayList<>();\n\n            for (final EntryMapping type : typeMeta.values())\n                futs.add(exec.submit(new Callable<Void>() {\n                    @Override public Void call() throws Exception {\n                    Connection conn = null;\n\n                    try {\n                        PreparedStatement stmt = null;\n\n                        try {\n                            conn = connection();\n\n                            stmt = conn.prepareStatement(type.loadCacheQry);\n\n                            ResultSet rs = stmt.executeQuery();\n\n                            while (rs.next()) {\n                                K key = buildObject(type.keyType(), type.keyDescriptors(), rs);\n                                V val = buildObject(type.valueType(), type.valueDescriptors(), rs);\n\n                                clo.apply(key, val);\n                            }\n                        }\n                        catch (SQLException e) {\n                            throw new IgniteCheckedException(\"Failed to load cache\", e);\n                        }\n                        finally {\n                            U.closeQuiet(stmt);\n                        }\n                    }\n                    finally {\n                        U.closeQuiet(conn);\n                    }\n\n                    return null;\n                    }\n                }));\n\n            for (Future<?> fut : futs)\n                U.get(fut);\n        }\n        catch (Exception e) {\n            throw new CacheException(e);\n        }\n    }","commit_id":"c9803b6ad400b6daaf1ea54c6aa1bb1dfd1d3808","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Perform dialect resolution.\n     *\n     * @return The resolved dialect.\n     * @throws IgniteCheckedException Indicates problems accessing the metadata.\n     */\n    protected BasicJdbcDialect resolveDialect() throws IgniteCheckedException {\n        Connection conn = null;\n\n        String dbProductName = null;\n\n        try {\n            conn = openConnection(false);\n\n            dbProductName = conn.getMetaData().getDatabaseProductName();\n        }\n        catch (SQLException e) {\n            throw new IgniteCheckedException(\"Failed access to metadata for detect database dialect.\", e);\n        }\n        finally {\n            closeConnection(conn);\n        }\n\n        if (\"H2\".equals(dbProductName))\n            return new H2Dialect();\n\n        if (\"MySQL\".equals(dbProductName))\n            return new MySQLDialect();\n\n        if (dbProductName.startsWith(\"Microsoft SQL Server\"))\n            return new SQLServerDialect();\n\n        if (\"Oracle\".equals(dbProductName))\n            return new OracleDialect();\n\n        if (dbProductName.startsWith(\"DB2/\"))\n            return new DB2Dialect();\n\n        return new BasicJdbcDialect();\n    }","id":53164,"modified_method":"/**\n     * Perform dialect resolution.\n     *\n     * @return The resolved dialect.\n     * @throws CacheException Indicates problems accessing the metadata.\n     */\n    protected JdbcDialect resolveDialect() throws CacheException {\n        Connection conn = null;\n\n        String dbProductName = null;\n\n        try {\n            conn = openConnection(false);\n\n            dbProductName = conn.getMetaData().getDatabaseProductName();\n        }\n        catch (SQLException e) {\n            throw new CacheException(\"Failed access to metadata for detect database dialect.\", e);\n        }\n        finally {\n            U.closeQuiet(conn);\n        }\n\n        if (\"H2\".equals(dbProductName))\n            return new H2Dialect();\n\n        if (\"MySQL\".equals(dbProductName))\n            return new MySQLDialect();\n\n        if (dbProductName.startsWith(\"Microsoft SQL Server\"))\n            return new SQLServerDialect();\n\n        if (\"Oracle\".equals(dbProductName))\n            return new OracleDialect();\n\n        if (dbProductName.startsWith(\"DB2/\"))\n            return new DB2Dialect();\n\n        return new BasicJdbcDialect();\n    }","commit_id":"c9803b6ad400b6daaf1ea54c6aa1bb1dfd1d3808","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Get database dialect.\n     *\n     * @return Database dialect.\n     */\n    public BasicJdbcDialect getDialect() {\n        return dialect;\n    }","id":53165,"modified_method":"/**\n     * Get database dialect.\n     *\n     * @return Database dialect.\n     */\n    public JdbcDialect getDialect() {\n        return dialect;\n    }","commit_id":"c9803b6ad400b6daaf1ea54c6aa1bb1dfd1d3808","url":"https://github.com/apache/ignite"},{"original_method":"@Override public void delete(Object o) throws CacheWriterException {\n        // TODO: SPRINT-32 CODE: implement.\n    }","id":53166,"modified_method":"/** {@inheritDoc} */\n    @Override public void delete(Object key) throws CacheWriterException {\n        assert key != null;\n\n        init();\n\n        EntryMapping type = typeMeta.get(typeId(key));\n\n        if (type == null)\n            throw new CacheWriterException(\"Failed to find store mapping description for key: \" + key);\n\n        if (log.isDebugEnabled())\n            log.debug(\"Start remove value from database by key: \" + key);\n\n        Connection conn = null;\n\n        PreparedStatement stmt = null;\n\n        try {\n            conn = connection();\n\n            stmt = conn.prepareStatement(type.remQry);\n\n            fillKeyParameters(stmt, type, key);\n\n            stmt.executeUpdate();\n        }\n        catch (SQLException e) {\n            throw new CacheWriterException(\"Failed to remove value from database by key: \" + key, e);\n        }\n        finally {\n            end(conn, stmt);\n        }\n    }","commit_id":"c9803b6ad400b6daaf1ea54c6aa1bb1dfd1d3808","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * Initializes store.\n     *\n     * @throws IgniteCheckedException If failed to initialize.\n     */\n    protected void init() throws IgniteCheckedException {\n        if (initLatch.getCount() > 0) {\n            if (initGuard.compareAndSet(false, true)) {\n                if (log.isDebugEnabled())\n                    log.debug(\"Initializing cache store.\");\n\n                if (dataSrc == null && F.isEmpty(connUrl))\n                    throw new IgniteCheckedException(\"Failed to initialize cache store (connection is not provided).\");\n\n                if (dialect == null)\n                    dialect = resolveDialect();\n\n                try {\n                    if (typeMetadata == null) {\n                        if (typeMetadataPaths == null)\n                            throw new IgniteCheckedException(\n                                \"Failed to initialize cache store (metadata paths is not provided).\");\n\n// TODO: IGNITE-32 Replace with reading from config.\n//                        GridSpringProcessor spring = SPRING.create(false);\n\n                        Collection<GridCacheQueryTypeMetadata> typeMeta = new ArrayList<>();\n\n                        for (String path : typeMetadataPaths) {\n                            URL url = U.resolveGridGainUrl(path);\n// TODO: IGNITE-32 Replace with reading from config.\n//                            if (url != null) {\n//                                Map<String, Object> beans = spring.loadBeans(url, GridCacheQueryTypeMetadata.class).\n//                                    get(GridCacheQueryTypeMetadata.class);\n//\n//                                if (beans != null)\n//                                    for (Object bean : beans.values())\n//                                        if (bean instanceof GridCacheQueryTypeMetadata)\n//                                            typeMeta.add((GridCacheQueryTypeMetadata)bean);\n//                            }\n//                            else\n                                log.warning(\"Failed to resolve metadata path: \" + path);\n                        }\n\n                        setTypeMetadata(typeMeta);\n                    }\n\n                    exec = Executors.newFixedThreadPool(maxPoolSz);\n\n                    buildTypeCache();\n\n                    initOk = true;\n                }\n                finally {\n                    initLatch.countDown();\n                }\n            }\n            else\n                U.await(initLatch);\n        }\n\n        if (!initOk)\n            throw new IgniteCheckedException(\"Cache store was not properly initialized.\");\n    }","id":53167,"modified_method":"/**\n     * Initializes store.\n     *\n     * @throws CacheException If failed to initialize.\n     */\n    protected void init() throws CacheException {\n        if (initLatch.getCount() > 0) {\n            if (initGuard.compareAndSet(false, true)) {\n                if (log.isDebugEnabled())\n                    log.debug(\"Initializing cache store.\");\n\n                if (dataSrc == null && F.isEmpty(connUrl))\n                    throw new CacheException(\"Failed to initialize cache store (connection is not provided).\");\n\n                if (dialect == null)\n                    dialect = resolveDialect();\n\n                try {\n                    if (typeMetadata == null)\n                        throw new CacheException(\"Failed to initialize cache store (mappping description is not provided).\");\n\n                    exec = Executors.newFixedThreadPool(maxPoolSz);\n\n                    buildTypeCache();\n\n                    initOk = true;\n                }\n                finally {\n                    initLatch.countDown();\n                }\n            }\n            else\n                try {\n                    if (initLatch.getCount() > 0)\n                        initLatch.await();\n                }\n                catch (InterruptedException e) {\n                    Thread.currentThread().interrupt();\n\n                    throw new CacheException(e);\n                }\n        }\n\n        if (!initOk)\n            throw new CacheException(\"Cache store was not properly initialized.\");\n    }","commit_id":"c9803b6ad400b6daaf1ea54c6aa1bb1dfd1d3808","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * @param stmt Prepare statement.\n     * @param i Start index for parameters.\n     * @param type Type description.\n     * @param val Value object.\n     * @return Next index for parameters.\n     */\n    protected int fillValueParameters(PreparedStatement stmt, int i, QueryCache type, V val)\n        throws IgniteCheckedException {\n        for (GridCacheQueryTypeDescriptor field : type.uniqValFields) {\n            Object fieldVal = extractField(type.valueType(), field.getJavaName(), val);\n\n            try {\n                if (fieldVal != null)\n                    stmt.setObject(i++, fieldVal);\n                else\n                    stmt.setNull(i++, field.getDbType());\n            }\n            catch (SQLException e) {\n                throw new IgniteCheckedException(\"Failed to set statement parameter name: \" + field.getDbName(), e);\n            }\n        }\n\n        return i;\n    }","id":53168,"modified_method":"/**\n     * @param stmt Prepare statement.\n     * @param i Start index for parameters.\n     * @param type Type description.\n     * @param val Value object.\n     * @return Next index for parameters.\n     */\n    protected int fillValueParameters(PreparedStatement stmt, int i, EntryMapping type, Object val)\n        throws CacheWriterException {\n        for (GridCacheQueryTypeDescriptor field : type.uniqValFields) {\n            Object fieldVal = extractField(type.valueType(), field.getJavaName(), val);\n\n            try {\n                if (fieldVal != null)\n                    stmt.setObject(i++, fieldVal);\n                else\n                    stmt.setNull(i++, field.getDbType());\n            }\n            catch (SQLException e) {\n                throw new CacheWriterException(\"Failed to set statement parameter name: \" + field.getDbName(), e);\n            }\n        }\n\n        return i;\n    }","commit_id":"c9803b6ad400b6daaf1ea54c6aa1bb1dfd1d3808","url":"https://github.com/apache/ignite"},{"original_method":"@Override public V load(K k) throws CacheLoaderException {\n        return null; // TODO: SPRINT-32 CODE: implement.\n    }","id":53169,"modified_method":"/** {@inheritDoc} */\n    @Nullable @Override public V load(K key) throws CacheLoaderException {\n        assert key != null;\n\n        init();\n\n        EntryMapping type = typeMeta.get(typeId(key));\n\n        if (type == null)\n            throw new CacheLoaderException(\"Failed to find store mapping description for key: \" + key);\n\n        if (log.isDebugEnabled())\n            log.debug(\"Start load value from database by key: \" + key);\n\n        Connection conn = null;\n\n        PreparedStatement stmt = null;\n\n        try {\n            conn = connection();\n\n            stmt = conn.prepareStatement(type.loadQrySingle);\n\n            fillKeyParameters(stmt, type, key);\n\n            ResultSet rs = stmt.executeQuery();\n\n            if (rs.next())\n                return buildObject(type.valueType(), type.valueDescriptors(), rs);\n        }\n        catch (SQLException e) {\n            throw new CacheLoaderException(\"Failed to load object by key: \" + key, e);\n        }\n        finally {\n            end(conn, stmt);\n        }\n\n        return null;\n    }","commit_id":"c9803b6ad400b6daaf1ea54c6aa1bb1dfd1d3808","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * @param stmt Prepare statement.\n     * @param i Start index for parameters.\n     * @param type Type description.\n     * @param key Key object.\n     * @return Next index for parameters.\n     */\n    protected int fillKeyParameters(PreparedStatement stmt, int i, QueryCache type,\n        K key) throws IgniteCheckedException {\n        for (GridCacheQueryTypeDescriptor field : type.keyDescriptors()) {\n            Object fieldVal = extractField(type.keyType(), field.getJavaName(), key);\n\n            try {\n                if (fieldVal != null)\n                    stmt.setObject(i++, fieldVal);\n                else\n                    stmt.setNull(i++, field.getDbType());\n            }\n            catch (SQLException e) {\n                throw new IgniteCheckedException(\"Failed to set statement parameter name: \" + field.getDbName(), e);\n            }\n        }\n\n        return i;\n    }","id":53170,"modified_method":"/**\n     * @param stmt Prepare statement.\n     * @param i Start index for parameters.\n     * @param type Type description.\n     * @param key Key object.\n     * @return Next index for parameters.\n     */\n    protected int fillKeyParameters(PreparedStatement stmt, int i, EntryMapping type,\n        Object key) throws CacheException {\n        for (GridCacheQueryTypeDescriptor field : type.keyDescriptors()) {\n            Object fieldVal = extractField(type.keyType(), field.getJavaName(), key);\n\n            try {\n                if (fieldVal != null)\n                    stmt.setObject(i++, fieldVal);\n                else\n                    stmt.setNull(i++, field.getDbType());\n            }\n            catch (SQLException e) {\n                throw new CacheException(\"Failed to set statement parameter name: \" + field.getDbName(), e);\n            }\n        }\n\n        return i;\n    }","commit_id":"c9803b6ad400b6daaf1ea54c6aa1bb1dfd1d3808","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * @param stmt Prepare statement.\n     * @param type Type description.\n     * @param key Key object.\n     * @return Next index for parameters.\n     */\n    protected int fillKeyParameters(PreparedStatement stmt, QueryCache type, K key) throws IgniteCheckedException {\n        return fillKeyParameters(stmt, 1, type, key);\n    }","id":53171,"modified_method":"/**\n     * @param stmt Prepare statement.\n     * @param type Type description.\n     * @param key Key object.\n     * @return Next index for parameters.\n     */\n    protected int fillKeyParameters(PreparedStatement stmt, EntryMapping type, Object key) throws CacheException {\n        return fillKeyParameters(stmt, 1, type, key);\n    }","commit_id":"c9803b6ad400b6daaf1ea54c6aa1bb1dfd1d3808","url":"https://github.com/apache/ignite"},{"original_method":"/**\n         * POJO methods cache.\n         *\n         * @param clsName Class name.\n         * @param fields Fields.\n         */\n        public PojoMethodsCache(String clsName,\n            Collection<GridCacheQueryTypeDescriptor> fields) throws IgniteCheckedException {\n\n            try {\n                cls = Class.forName(clsName);\n\n                ctor = cls.getDeclaredConstructor();\n\n                if (!ctor.isAccessible())\n                    ctor.setAccessible(true);\n            }\n            catch (ClassNotFoundException e) {\n                throw new IgniteCheckedException(\"Failed to find class: \" + clsName, e);\n            }\n            catch (NoSuchMethodException e) {\n                throw new IgniteCheckedException(\"Failed to find empty constructor for class: \" + clsName, e);\n            }\n\n            setters = U.newHashMap(fields.size());\n\n            getters = U.newHashMap(fields.size());\n\n            for (GridCacheQueryTypeDescriptor field : fields) {\n                String prop = capitalFirst(field.getJavaName());\n\n                try {\n                    getters.put(field.getJavaName(), cls.getMethod(\"get\" + prop));\n                }\n                catch (NoSuchMethodException ignored) {\n                    try {\n                        getters.put(field.getJavaName(), cls.getMethod(\"is\" + prop));\n                    }\n                    catch (NoSuchMethodException e) {\n                        throw new IgniteCheckedException(\"Failed to find getter for property \" + field.getJavaName() +\n                            \" of class: \" + cls.getName(), e);\n                    }\n                }\n\n                try {\n                    setters.put(field.getJavaName(), cls.getMethod(\"set\" + prop, field.getJavaType()));\n                }\n                catch (NoSuchMethodException e) {\n                    throw new IgniteCheckedException(\"Failed to find setter for property \" + field.getJavaName() +\n                        \" of class: \" + clsName, e);\n                }\n            }\n        }","id":53172,"modified_method":"/**\n         * POJO methods cache.\n         *\n         * @param clsName Class name.\n         * @param fields Fields.\n         */\n        public PojoMethodsCache(String clsName, Collection<GridCacheQueryTypeDescriptor> fields) throws CacheException {\n\n            try {\n                cls = Class.forName(clsName);\n\n                ctor = cls.getDeclaredConstructor();\n\n                if (!ctor.isAccessible())\n                    ctor.setAccessible(true);\n            }\n            catch (ClassNotFoundException e) {\n                throw new CacheException(\"Failed to find class: \" + clsName, e);\n            }\n            catch (NoSuchMethodException e) {\n                throw new CacheException(\"Failed to find empty constructor for class: \" + clsName, e);\n            }\n\n            setters = U.newHashMap(fields.size());\n\n            getters = U.newHashMap(fields.size());\n\n            for (GridCacheQueryTypeDescriptor field : fields) {\n                String prop = capitalFirst(field.getJavaName());\n\n                try {\n                    getters.put(field.getJavaName(), cls.getMethod(\"get\" + prop));\n                }\n                catch (NoSuchMethodException ignored) {\n                    try {\n                        getters.put(field.getJavaName(), cls.getMethod(\"is\" + prop));\n                    }\n                    catch (NoSuchMethodException e) {\n                        throw new CacheException(\"Failed to find getter for property \" + field.getJavaName() +\n                            \" of class: \" + cls.getName(), e);\n                    }\n                }\n\n                try {\n                    setters.put(field.getJavaName(), cls.getMethod(\"set\" + prop, field.getJavaType()));\n                }\n                catch (NoSuchMethodException e) {\n                    throw new CacheException(\"Failed to find setter for property \" + field.getJavaName() +\n                        \" of class: \" + clsName, e);\n                }\n            }\n        }","commit_id":"c9803b6ad400b6daaf1ea54c6aa1bb1dfd1d3808","url":"https://github.com/apache/ignite"},{"original_method":"/**\n         * Construct new instance of pojo object.\n         *\n         * @return pojo object.\n         * @throws IgniteCheckedException If construct new instance failed.\n         */\n        protected Object newInstance() throws IgniteCheckedException {\n            try {\n                return ctor.newInstance();\n            }\n            catch (Exception e) {\n                throw new IgniteCheckedException(\"Failed to create new instance for class: \" + cls, e);\n            }\n        }","id":53173,"modified_method":"/**\n         * Construct new instance of pojo object.\n         *\n         * @return pojo object.\n         * @throws CacheLoaderException If construct new instance failed.\n         */\n        protected Object newInstance() throws CacheLoaderException {\n            try {\n                return ctor.newInstance();\n            }\n            catch (Exception e) {\n                throw new CacheLoaderException(\"Failed to create new instance for class: \" + cls, e);\n            }\n        }","commit_id":"c9803b6ad400b6daaf1ea54c6aa1bb1dfd1d3808","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Override protected <R> R buildObject(String typeName, Collection<GridCacheQueryTypeDescriptor> fields,\n        ResultSet rs) throws IgniteCheckedException {\n        PojoMethodsCache t = mtdsCache.get(typeName);\n\n        Object obj = t.newInstance();\n\n        try {\n            for (GridCacheQueryTypeDescriptor field : fields)\n                t.setters.get(field.getJavaName()).invoke(obj, rs.getObject(field.getDbName()));\n\n            return (R)obj;\n        }\n        catch (Exception e) {\n            throw new IgniteCheckedException(\"Failed to read object of class: \" + typeName, e);\n        }\n    }","id":53174,"modified_method":"/** {@inheritDoc} */\n    @Override protected <R> R buildObject(String typeName, Collection<GridCacheQueryTypeDescriptor> fields,\n        ResultSet rs) throws CacheLoaderException {\n        PojoMethodsCache t = mtdsCache.get(typeName);\n\n        Object obj = t.newInstance();\n\n        try {\n            for (GridCacheQueryTypeDescriptor field : fields)\n                t.setters.get(field.getJavaName()).invoke(obj, rs.getObject(field.getDbName()));\n\n            return (R)obj;\n        }\n        catch (Exception e) {\n            throw new CacheLoaderException(\"Failed to read object of class: \" + typeName, e);\n        }\n    }","commit_id":"c9803b6ad400b6daaf1ea54c6aa1bb1dfd1d3808","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Nullable @Override protected Object extractField(String typeName, String fieldName, Object obj)\n        throws IgniteCheckedException {\n        try {\n            PojoMethodsCache mc = mtdsCache.get(typeName);\n\n            return mc.getters.get(fieldName).invoke(obj);\n        }\n        catch (Exception e) {\n            throw new IgniteCheckedException(\"Failed to read object of class: \" + typeName, e);\n        }\n    }","id":53175,"modified_method":"/** {@inheritDoc} */\n    @Nullable @Override protected Object extractField(String typeName, String fieldName, Object obj)\n        throws CacheException {\n        try {\n            PojoMethodsCache mc = mtdsCache.get(typeName);\n\n            return mc.getters.get(fieldName).invoke(obj);\n        }\n        catch (Exception e) {\n            throw new CacheException(\"Failed to read object of class: \" + typeName, e);\n        }\n    }","commit_id":"c9803b6ad400b6daaf1ea54c6aa1bb1dfd1d3808","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Override protected void buildTypeCache() throws IgniteCheckedException {\n        entryQtyCache = U.newHashMap(typeMetadata.size());\n\n        mtdsCache = U.newHashMap(typeMetadata.size() * 2);\n\n        for (GridCacheQueryTypeMetadata type : typeMetadata) {\n            PojoMethodsCache keyCache = new PojoMethodsCache(type.getKeyType(), type.getKeyDescriptors());\n\n            mtdsCache.put(type.getKeyType(), keyCache);\n\n            entryQtyCache.put(keyCache.cls, new QueryCache(dialect, type));\n\n            mtdsCache.put(type.getType(), new PojoMethodsCache(type.getType(), type.getValueDescriptors()));\n        }\n    }","id":53176,"modified_method":"/** {@inheritDoc} */\n    @Override protected void buildTypeCache() throws CacheException {\n        typeMeta = U.newHashMap(typeMetadata.size());\n\n        mtdsCache = U.newHashMap(typeMetadata.size() * 2);\n\n        for (GridCacheQueryTypeMetadata type : typeMetadata) {\n            PojoMethodsCache keyCache = new PojoMethodsCache(type.getKeyType(), type.getKeyDescriptors());\n\n            mtdsCache.put(type.getKeyType(), keyCache);\n\n            typeMeta.put(keyCache.cls, new EntryMapping(dialect, type));\n\n            mtdsCache.put(type.getType(), new PojoMethodsCache(type.getType(), type.getValueDescriptors()));\n        }\n\n        typeMeta = Collections.unmodifiableMap(typeMeta);\n\n        mtdsCache = Collections.unmodifiableMap(mtdsCache);\n    }","commit_id":"c9803b6ad400b6daaf1ea54c6aa1bb1dfd1d3808","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Override protected Object typeKey(Object key) {\n        return key.getClass();\n    }","id":53177,"modified_method":"/** {@inheritDoc} */\n    @Override protected Object typeId(Object key) throws CacheException {\n        if (key != null)\n            return key.getClass();\n\n        throw new CacheException();\n    }","commit_id":"c9803b6ad400b6daaf1ea54c6aa1bb1dfd1d3808","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Override protected JdbcPojoCacheStore store() throws Exception {\n        JdbcPojoCacheStore store = new JdbcPojoCacheStore();\n\n        store.setDataSource(JdbcConnectionPool.create(DFLT_CONN_URL, \"sa\", \"\"));\n\n        UrlResource metaUrl;\n\n        try {\n            metaUrl = new UrlResource(new File(\"modules/core/src/test/config/store/auto/all.xml\").toURI().toURL());\n        }\n        catch (MalformedURLException e) {\n            throw new IgniteCheckedException(\"Failed to resolve metadata path [err=\" + e.getMessage() + ']', e);\n        }\n\n        try {\n            GenericApplicationContext springCtx = new GenericApplicationContext();\n\n            new XmlBeanDefinitionReader(springCtx).loadBeanDefinitions(metaUrl);\n\n            springCtx.refresh();\n\n            Collection<GridCacheQueryTypeMetadata> typeMetadata =\n                springCtx.getBeansOfType(GridCacheQueryTypeMetadata.class).values();\n\n            store.setTypeMetadata(typeMetadata);\n        }\n        catch (BeansException e) {\n            if (X.hasCause(e, ClassNotFoundException.class))\n                throw new IgniteCheckedException(\"Failed to instantiate Spring XML application context \" +\n                    \"(make sure all classes used in Spring configuration are present at CLASSPATH) \" +\n                    \"[springUrl=\" + metaUrl + ']', e);\n            else\n                throw new IgniteCheckedException(\"Failed to instantiate Spring XML application context [springUrl=\" +\n                    metaUrl + \", err=\" + e.getMessage() + ']', e);\n        }\n\n        return store;\n    }","id":53178,"modified_method":"/** {@inheritDoc} */\n    @Override protected JdbcPojoCacheStore store() throws Exception {\n        JdbcPojoCacheStore store = new JdbcPojoCacheStore();\n\n        store.setDataSource(JdbcConnectionPool.create(DFLT_CONN_URL, \"sa\", \"\"));\n\n        UrlResource metaUrl;\n\n        try {\n            metaUrl = new UrlResource(new File(\"modules/core/src/test/config/store/jdbc/all.xml\").toURI().toURL());\n        }\n        catch (MalformedURLException e) {\n            throw new IgniteCheckedException(\"Failed to resolve metadata path [err=\" + e.getMessage() + ']', e);\n        }\n\n        try {\n            GenericApplicationContext springCtx = new GenericApplicationContext();\n\n            new XmlBeanDefinitionReader(springCtx).loadBeanDefinitions(metaUrl);\n\n            springCtx.refresh();\n\n            Collection<GridCacheQueryTypeMetadata> typeMetadata =\n                springCtx.getBeansOfType(GridCacheQueryTypeMetadata.class).values();\n\n            store.setTypeMetadata(typeMetadata);\n        }\n        catch (BeansException e) {\n            if (X.hasCause(e, ClassNotFoundException.class))\n                throw new IgniteCheckedException(\"Failed to instantiate Spring XML application context \" +\n                    \"(make sure all classes used in Spring configuration are present at CLASSPATH) \" +\n                    \"[springUrl=\" + metaUrl + ']', e);\n            else\n                throw new IgniteCheckedException(\"Failed to instantiate Spring XML application context [springUrl=\" +\n                    metaUrl + \", err=\" + e.getMessage() + ']', e);\n        }\n\n        return store;\n    }","commit_id":"c9803b6ad400b6daaf1ea54c6aa1bb1dfd1d3808","url":"https://github.com/apache/ignite"},{"original_method":"/** {@inheritDoc} */\n    @Override protected IgniteConfiguration getConfiguration(String gridName) throws Exception {\n        IgniteConfiguration c = super.getConfiguration(gridName);\n\n        TcpDiscoverySpi disco = new TcpDiscoverySpi();\n\n        disco.setIpFinder(IP_FINDER);\n\n        c.setDiscoverySpi(disco);\n\n        CacheConfiguration cc = defaultCacheConfiguration();\n\n        cc.setCacheMode(PARTITIONED);\n        cc.setAtomicityMode(ATOMIC);\n        cc.setSwapEnabled(false);\n        cc.setWriteBehindEnabled(false);\n\n        // TODO: IGNITE-32 FIXME cc.setStore(store);\n\n        c.setCacheConfiguration(cc);\n\n        return c;\n    }","id":53179,"modified_method":"/** {@inheritDoc} */\n    @Override protected IgniteConfiguration getConfiguration(String gridName) throws Exception {\n        IgniteConfiguration c = super.getConfiguration(gridName);\n\n        TcpDiscoverySpi disco = new TcpDiscoverySpi();\n\n        disco.setIpFinder(IP_FINDER);\n\n        c.setDiscoverySpi(disco);\n\n        CacheConfiguration cc = defaultCacheConfiguration();\n\n        cc.setCacheMode(PARTITIONED);\n        cc.setAtomicityMode(ATOMIC);\n        cc.setSwapEnabled(false);\n        cc.setWriteBehindEnabled(false);\n\n        cc.setCacheStoreFactory(new FactoryBuilder.SingletonFactory(store));\n        cc.setReadThrough(true);\n        cc.setWriteThrough(true);\n        cc.setLoadPreviousValue(true);\n\n        c.setCacheConfiguration(cc);\n\n        return c;\n    }","commit_id":"c9803b6ad400b6daaf1ea54c6aa1bb1dfd1d3808","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * @throws Exception If failed.\n     */\n    public void testLoadCache() throws Exception {\n        Connection conn = DriverManager.getConnection(DFLT_CONN_URL, \"sa\", \"\");\n\n        Statement stmt = conn.createStatement();\n\n        PreparedStatement orgStmt = conn.prepareStatement(\"INSERT INTO Organization(id, name, city) VALUES (?, ?, ?)\");\n\n        for (int i = 0; i < ORGANIZATION_CNT; i++) {\n            orgStmt.setInt(1, i);\n            orgStmt.setString(2, \"name\" + i);\n            orgStmt.setString(3, \"city\" + i % 10);\n\n            orgStmt.addBatch();\n        }\n\n        orgStmt.executeBatch();\n\n        conn.commit();\n\n        PreparedStatement prnStmt = conn.prepareStatement(\"INSERT INTO Person(id, org_id, name) VALUES (?, ?, ?)\");\n\n        for (int i = 0; i < PERSON_CNT; i++) {\n            prnStmt.setInt(1, i);\n            prnStmt.setInt(2, i % 100);\n            prnStmt.setString(3, \"name\" + i);\n\n            prnStmt.addBatch();\n        }\n\n        prnStmt.executeBatch();\n\n        conn.commit();\n\n        U.closeQuiet(stmt);\n\n        U.closeQuiet(conn);\n\n        final Collection<OrganizationKey> orgKeys = new ArrayList<>(ORGANIZATION_CNT);\n        final Collection<PersonKey> prnKeys = new ArrayList<>(PERSON_CNT);\n\n        IgniteBiInClosure<Object, Object> c = new CI2<Object, Object>() {\n            @Override public void apply(Object k, Object v) {\n                if (k instanceof OrganizationKey && v instanceof Organization)\n                    orgKeys.add((OrganizationKey)k);\n                else if (k instanceof PersonKey && v instanceof Person)\n                    prnKeys.add((PersonKey)k);\n            }\n        };\n\n        store.loadCache(c);\n\n        assertEquals(ORGANIZATION_CNT, orgKeys.size());\n        assertEquals(PERSON_CNT, prnKeys.size());\n\n        store.removeAll(null, orgKeys);\n        store.removeAll(null, prnKeys);\n\n        orgKeys.clear();\n        prnKeys.clear();\n\n        store.loadCache(c);\n\n        assertTrue(orgKeys.isEmpty());\n        assertTrue(prnKeys.isEmpty());\n    }","id":53180,"modified_method":"/**\n     * @throws Exception If failed.\n     */\n    public void testLoadCache() throws Exception {\n        Connection conn = DriverManager.getConnection(DFLT_CONN_URL, \"sa\", \"\");\n\n        Statement stmt = conn.createStatement();\n\n        PreparedStatement orgStmt = conn.prepareStatement(\"INSERT INTO Organization(id, name, city) VALUES (?, ?, ?)\");\n\n        for (int i = 0; i < ORGANIZATION_CNT; i++) {\n            orgStmt.setInt(1, i);\n            orgStmt.setString(2, \"name\" + i);\n            orgStmt.setString(3, \"city\" + i % 10);\n\n            orgStmt.addBatch();\n        }\n\n        orgStmt.executeBatch();\n\n        conn.commit();\n\n        PreparedStatement prnStmt = conn.prepareStatement(\"INSERT INTO Person(id, org_id, name) VALUES (?, ?, ?)\");\n\n        for (int i = 0; i < PERSON_CNT; i++) {\n            prnStmt.setInt(1, i);\n            prnStmt.setInt(2, i % 100);\n            prnStmt.setString(3, \"name\" + i);\n\n            prnStmt.addBatch();\n        }\n\n        prnStmt.executeBatch();\n\n        conn.commit();\n\n        U.closeQuiet(stmt);\n\n        U.closeQuiet(conn);\n\n        final Collection<OrganizationKey> orgKeys = new ArrayList<>(ORGANIZATION_CNT);\n        final Collection<PersonKey> prnKeys = new ArrayList<>(PERSON_CNT);\n\n        IgniteBiInClosure<Object, Object> c = new CI2<Object, Object>() {\n            @Override public void apply(Object k, Object v) {\n                if (k instanceof OrganizationKey && v instanceof Organization)\n                    orgKeys.add((OrganizationKey)k);\n                else if (k instanceof PersonKey && v instanceof Person)\n                    prnKeys.add((PersonKey)k);\n            }\n        };\n\n        store.loadCache(c);\n\n        assertEquals(ORGANIZATION_CNT, orgKeys.size());\n        assertEquals(PERSON_CNT, prnKeys.size());\n\n        store.deleteAll(orgKeys);\n        store.deleteAll(prnKeys);\n\n        orgKeys.clear();\n        prnKeys.clear();\n\n        store.loadCache(c);\n\n        assertTrue(orgKeys.isEmpty());\n        assertTrue(prnKeys.isEmpty());\n    }","commit_id":"c9803b6ad400b6daaf1ea54c6aa1bb1dfd1d3808","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * @throws Exception If failed.\n     */\n    public void testStore() throws Exception {\n        // Create dummy transaction\n        IgniteTx tx = new DummyTx();\n\n        OrganizationKey k1 = new OrganizationKey(1);\n        Organization v1 = new Organization(1, \"Name1\", \"City1\");\n\n        OrganizationKey k2 = new OrganizationKey(2);\n        Organization v2 = new Organization(2, \"Name2\", \"City2\");\n\n        store.put(tx, k1, v1);\n        store.put(tx, k2, v2);\n\n        store.txEnd(tx, true);\n\n        assertEquals(v1, store.load(null, k1));\n        assertEquals(v2, store.load(null, k2));\n\n        OrganizationKey k3 = new OrganizationKey(3);\n\n        assertNull(store.load(tx, k3));\n\n        store.remove(tx, k1);\n\n        store.txEnd(tx, true);\n\n        assertNull(store.load(tx, k1));\n        assertEquals(v2, store.load(tx, k2));\n        assertNull(store.load(null, k3));\n    }","id":53181,"modified_method":"/**\n     * @throws Exception If failed.\n     */\n    public void testStore() throws Exception {\n        // Create dummy transaction\n        IgniteTx tx = new DummyTx();\n\n        ses.newSession(tx);\n\n        OrganizationKey k1 = new OrganizationKey(1);\n        Organization v1 = new Organization(1, \"Name1\", \"City1\");\n\n        OrganizationKey k2 = new OrganizationKey(2);\n        Organization v2 = new Organization(2, \"Name2\", \"City2\");\n\n        store.write(new CacheEntryImpl<>(k1, v1));\n        store.write(new CacheEntryImpl<>(k2, v2));\n\n        store.txEnd(true);\n\n        ses.newSession(null);\n\n        assertEquals(v1, store.load(k1));\n        assertEquals(v2, store.load(k2));\n\n        ses.newSession(tx);\n\n        OrganizationKey k3 = new OrganizationKey(3);\n\n        assertNull(store.load(k3));\n\n        store.delete(k1);\n\n        store.txEnd(true);\n\n        assertNull(store.load(k1));\n        assertEquals(v2, store.load(k2));\n\n        ses.newSession(null);\n\n        assertNull(store.load(k3));\n    }","commit_id":"c9803b6ad400b6daaf1ea54c6aa1bb1dfd1d3808","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * @throws IgniteCheckedException if failed.\n     */\n    public void testAllOpsWithTXNoCommit() throws IgniteCheckedException {\n        doTestAllOps(new DummyTx(), false);\n    }","id":53182,"modified_method":"/**\n     */\n    public void testAllOpsWithTXNoCommit() {\n        doTestAllOps(new DummyTx(), false);\n    }","commit_id":"c9803b6ad400b6daaf1ea54c6aa1bb1dfd1d3808","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * @throws Exception If failed.\n     */\n    public void testSimpleMultithreading() throws Exception {\n        final Random rnd = new Random();\n\n        final Queue<OrganizationKey> queue = new LinkedBlockingQueue<>();\n\n        multithreaded(new Callable<Object>() {\n            @Nullable @Override public Object call() throws Exception {\n                for (int i = 0; i < 1000; i++) {\n                    IgniteTx tx = rnd.nextBoolean() ? new DummyTx() : null;\n\n                    int op = rnd.nextInt(10);\n\n                    boolean queueEmpty = false;\n\n                    if (op < 4) { // Load.\n                        OrganizationKey key = queue.poll();\n\n                        if (key == null)\n                            queueEmpty = true;\n                        else {\n                            if (rnd.nextBoolean())\n                                assertNotNull(store.load(tx, key));\n                            else {\n                                final AtomicInteger cntr = new AtomicInteger();\n\n                                store.loadAll(tx, Collections.singleton(key), new CI2<Object, Object>() {\n                                    @Override public void apply(Object o, Object o1) {\n                                        cntr.incrementAndGet();\n\n                                        assertNotNull(o);\n                                        assertNotNull(o1);\n\n                                        OrganizationKey key = (OrganizationKey)o;\n                                        Organization val = (Organization)o1;\n\n                                        assertTrue(key.getId().equals(val.getId()));\n                                    }\n                                });\n\n                                assertEquals(1, cntr.get());\n                            }\n\n                            if (tx != null)\n                                store.txEnd(tx, true);\n\n                            queue.add(key);\n                        }\n                    }\n                    else if (op < 6) { // Remove.\n                        OrganizationKey key = queue.poll();\n\n                        if (key == null)\n                            queueEmpty = true;\n                        else {\n                            if (rnd.nextBoolean())\n                                store.remove(tx, key);\n                            else\n                                store.removeAll(tx, Collections.singleton(key));\n\n                            if (tx != null)\n                                store.txEnd(tx, true);\n                        }\n                    }\n                    else { // Update.\n                        OrganizationKey key = queue.poll();\n\n                        if (key == null)\n                            queueEmpty = true;\n                        else {\n                            Organization val =\n                                new Organization(key.getId(), \"Name\" + key.getId(), \"City\" + key.getId());\n\n                            if (rnd.nextBoolean())\n                                store.put(tx, key, val);\n                            else\n                                store.putAll(tx, Collections.singletonMap(key, val));\n\n                            if (tx != null)\n                                store.txEnd(tx, true);\n\n                            queue.add(key);\n                        }\n                    }\n\n                    if (queueEmpty) { // Add.\n                        OrganizationKey key = new OrganizationKey(rnd.nextInt());\n                        Organization val = new Organization(key.getId(), \"Name\" + key.getId(), \"City\" + key.getId());\n\n                        if (rnd.nextBoolean())\n                            store.put(tx, key, val);\n                        else\n                            store.putAll(tx, Collections.singletonMap(key, val));\n\n                        if (tx != null)\n                            store.txEnd(tx, true);\n\n                        queue.add(key);\n                    }\n                }\n\n                return null;\n            }\n        }, 37);\n    }","id":53183,"modified_method":"/**\n     * @throws Exception If failed.\n     */\n    public void testSimpleMultithreading() throws Exception {\n        final Random rnd = new Random();\n\n        final Queue<OrganizationKey> queue = new LinkedBlockingQueue<>();\n\n        multithreaded(new Callable<Object>() {\n            @Nullable @Override public Object call() throws Exception {\n                for (int i = 0; i < 1000; i++) {\n                    IgniteTx tx = rnd.nextBoolean() ? new DummyTx() : null;\n\n                    ses.newSession(tx);\n\n                    int op = rnd.nextInt(10);\n\n                    boolean queueEmpty = false;\n\n                    if (op < 4) { // Load.\n                        OrganizationKey key = queue.poll();\n\n                        if (key == null)\n                            queueEmpty = true;\n                        else {\n                            if (rnd.nextBoolean())\n                                assertNotNull(store.load(key));\n                            else {\n                                Map<Object, Object> loaded = store.loadAll(Collections.singleton(key));\n\n                                assertEquals(1, loaded.size());\n\n                                Map.Entry<Object, Object> e = loaded.entrySet().iterator().next();\n\n                                OrganizationKey k = (OrganizationKey)e.getKey();\n                                Organization v = (Organization)e.getValue();\n\n                                assertTrue(k.getId().equals(v.getId()));\n                            }\n\n                            if (tx != null)\n                                store.txEnd(true);\n\n                            queue.add(key);\n                        }\n                    }\n                    else if (op < 6) { // Remove.\n                        OrganizationKey key = queue.poll();\n\n                        if (key == null)\n                            queueEmpty = true;\n                        else {\n                            if (rnd.nextBoolean())\n                                store.delete(key);\n                            else\n                                store.deleteAll(Collections.singleton(key));\n\n                            if (tx != null)\n                                store.txEnd(true);\n                        }\n                    }\n                    else { // Update.\n                        OrganizationKey key = queue.poll();\n\n                        if (key == null)\n                            queueEmpty = true;\n                        else {\n                            Organization val =\n                                new Organization(key.getId(), \"Name\" + key.getId(), \"City\" + key.getId());\n\n                            Cache.Entry<OrganizationKey, Organization> entry = new CacheEntryImpl<>(key, val);\n\n                            if (rnd.nextBoolean())\n                                store.write(entry);\n                            else {\n                                Collection<Cache.Entry<?, ?>> col = new ArrayList<>();\n\n                                col.add(entry);\n\n                                store.writeAll(col);\n                            }\n\n                            if (tx != null)\n                                store.txEnd(true);\n\n                            queue.add(key);\n                        }\n                    }\n\n                    if (queueEmpty) { // Add.\n                        OrganizationKey key = new OrganizationKey(rnd.nextInt());\n                        Organization val = new Organization(key.getId(), \"Name\" + key.getId(), \"City\" + key.getId());\n\n                        Cache.Entry<OrganizationKey, Organization> entry = new CacheEntryImpl<>(key, val);\n\n                        if (rnd.nextBoolean())\n                            store.write(entry);\n                        else {\n                            Collection<Cache.Entry<?, ?>> col = new ArrayList<>();\n\n                            col.add(entry);\n\n                            store.writeAll(col);\n                        }\n\n                        if (tx != null)\n                            store.txEnd(true);\n\n                        queue.add(key);\n                    }\n                }\n\n                return null;\n            }\n        }, 37);\n    }","commit_id":"c9803b6ad400b6daaf1ea54c6aa1bb1dfd1d3808","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * @throws IgniteCheckedException if failed.\n     */\n    public void testAllOpsWithTXCommit() throws IgniteCheckedException {\n        doTestAllOps(new DummyTx(), true);\n    }","id":53184,"modified_method":"/**\n     */\n    public void testAllOpsWithTXCommit() {\n        doTestAllOps(new DummyTx(), true);\n    }","commit_id":"c9803b6ad400b6daaf1ea54c6aa1bb1dfd1d3808","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * @throws IgniteCheckedException if failed.\n     */\n    public void testAllOpsWithoutTX() throws IgniteCheckedException {\n        doTestAllOps(null, false);\n    }","id":53185,"modified_method":"/**\n     */\n    public void testAllOpsWithoutTX() {\n        doTestAllOps(null, false);\n    }","commit_id":"c9803b6ad400b6daaf1ea54c6aa1bb1dfd1d3808","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * @throws IgniteCheckedException if failed.\n     */\n    public void testRollback() throws IgniteCheckedException {\n        IgniteTx tx = new DummyTx();\n\n        OrganizationKey k1 = new OrganizationKey(1);\n        Organization v1 = new Organization(1, \"Name1\", \"City1\");\n\n        // Put.\n        store.put(tx, k1, v1);\n\n        store.txEnd(tx, false); // Rollback.\n\n        tx = new DummyTx();\n\n        assertNull(store.load(tx, k1));\n\n        OrganizationKey k2 = new OrganizationKey(2);\n        Organization v2 = new Organization(2, \"Name2\", \"City2\");\n\n        // Put all.\n        assertNull(store.load(tx, k2));\n\n        store.putAll(tx, Collections.singletonMap(k2, v2));\n\n        store.txEnd(tx, false); // Rollback.\n\n        tx = new DummyTx();\n\n        assertNull(store.load(tx, k2));\n\n        OrganizationKey k3 = new OrganizationKey(3);\n        Organization v3 = new Organization(3, \"Name3\", \"City3\");\n\n        store.putAll(tx, Collections.singletonMap(k3, v3));\n\n        store.txEnd(tx, true); // Commit.\n\n        tx = new DummyTx();\n\n        assertEquals(v3, store.load(tx, k3));\n\n        OrganizationKey k4 = new OrganizationKey(4);\n        Organization v4 = new Organization(4, \"Name4\", \"City4\");\n\n        store.put(tx, k4, v4);\n\n        store.txEnd(tx, false); // Rollback.\n\n        tx = new DummyTx();\n\n        assertNull(store.load(tx, k4));\n\n        assertEquals(v3, store.load(tx, k3));\n\n        // Remove.\n        store.remove(tx, k3);\n\n        store.txEnd(tx, false); // Rollback.\n\n        tx = new DummyTx();\n\n        assertEquals(v3, store.load(tx, k3));\n\n        // Remove all.\n        store.removeAll(tx, Arrays.asList(k3));\n\n        store.txEnd(tx, false); // Rollback.\n\n        tx = new DummyTx();\n\n        assertEquals(v3, store.load(tx, k3));\n    }","id":53186,"modified_method":"/**\n     * @throws IgniteCheckedException if failed.\n     */\n    public void testRollback() throws IgniteCheckedException {\n        IgniteTx tx = new DummyTx();\n\n        ses.newSession(tx);\n\n        OrganizationKey k1 = new OrganizationKey(1);\n        Organization v1 = new Organization(1, \"Name1\", \"City1\");\n\n        // Put.\n        store.write(new CacheEntryImpl<>(k1, v1));\n\n        store.txEnd(false); // Rollback.\n\n        tx = new DummyTx();\n\n        ses.newSession(tx);\n\n        assertNull(store.load(k1));\n\n        OrganizationKey k2 = new OrganizationKey(2);\n        Organization v2 = new Organization(2, \"Name2\", \"City2\");\n\n        // Put all.\n        assertNull(store.load(k2));\n\n        Collection<Cache.Entry<?, ?>> col = new ArrayList<>();\n\n        col.add(new CacheEntryImpl<>(k2, v2));\n\n        store.writeAll(col);\n\n        store.txEnd(false); // Rollback.\n\n        tx = new DummyTx();\n\n        ses.newSession(tx);\n\n        assertNull(store.load(k2));\n\n        OrganizationKey k3 = new OrganizationKey(3);\n        Organization v3 = new Organization(3, \"Name3\", \"City3\");\n\n        col = new ArrayList<>();\n\n        col.add(new CacheEntryImpl<>(k3, v3));\n\n        store.writeAll(col);\n\n        store.txEnd(true); // Commit.\n\n        tx = new DummyTx();\n\n        ses.newSession(tx);\n\n        assertEquals(v3, store.load(k3));\n\n        OrganizationKey k4 = new OrganizationKey(4);\n        Organization v4 = new Organization(4, \"Name4\", \"City4\");\n\n        store.write(new CacheEntryImpl<>(k4, v4));\n\n        store.txEnd(false); // Rollback.\n\n        tx = new DummyTx();\n\n        ses.newSession(tx);\n\n        assertNull(store.load(k4));\n\n        assertEquals(v3, store.load(k3));\n\n        // Remove.\n        store.delete(k3);\n\n        store.txEnd(false); // Rollback.\n\n        tx = new DummyTx();\n\n        ses.newSession(tx);\n\n        assertEquals(v3, store.load(k3));\n\n        // Remove all.\n        store.deleteAll(Arrays.asList(k3));\n\n        store.txEnd(false); // Rollback.\n\n        tx = new DummyTx();\n\n        ses.newSession(tx);\n\n        assertEquals(v3, store.load(k3));\n    }","commit_id":"c9803b6ad400b6daaf1ea54c6aa1bb1dfd1d3808","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * @return Store.\n     */\n    protected JdbcPojoCacheStore store() throws IgniteCheckedException {\n        JdbcPojoCacheStore store = new JdbcPojoCacheStore();\n\n        store.setDataSource(JdbcConnectionPool.create(DFLT_CONN_URL, \"sa\", \"\"));\n\n        UrlResource metaUrl;\n\n        try {\n            metaUrl = new UrlResource(new File(\"modules/core/src/test/config/store/auto/all.xml\").toURI().toURL());\n        }\n        catch (MalformedURLException e) {\n            throw new IgniteCheckedException(\"Failed to resolve metadata path [err=\" + e.getMessage() + ']', e);\n        }\n\n        try {\n            GenericApplicationContext springCtx = new GenericApplicationContext();\n\n            new XmlBeanDefinitionReader(springCtx).loadBeanDefinitions(metaUrl);\n\n            springCtx.refresh();\n\n            Collection<GridCacheQueryTypeMetadata> typeMetadata =\n                springCtx.getBeansOfType(GridCacheQueryTypeMetadata.class).values();\n\n            store.setTypeMetadata(typeMetadata);\n        }\n        catch (BeansException e) {\n            if (X.hasCause(e, ClassNotFoundException.class))\n                throw new IgniteCheckedException(\"Failed to instantiate Spring XML application context \" +\n                    \"(make sure all classes used in Spring configuration are present at CLASSPATH) \" +\n                    \"[springUrl=\" + metaUrl + ']', e);\n            else\n                throw new IgniteCheckedException(\"Failed to instantiate Spring XML application context [springUrl=\" +\n                    metaUrl + \", err=\" + e.getMessage() + ']', e);\n        }\n\n        return store;\n    }","id":53187,"modified_method":"/**\n     * @return Store.\n     */\n    protected JdbcPojoCacheStore store() throws IgniteCheckedException {\n        JdbcPojoCacheStore store = new JdbcPojoCacheStore();\n\n        store.setDataSource(JdbcConnectionPool.create(DFLT_CONN_URL, \"sa\", \"\"));\n\n        UrlResource metaUrl;\n\n        try {\n            metaUrl = new UrlResource(new File(\"modules/core/src/test/config/store/jdbc/all.xml\").toURI().toURL());\n        }\n        catch (MalformedURLException e) {\n            throw new IgniteCheckedException(\"Failed to resolve metadata path [err=\" + e.getMessage() + ']', e);\n        }\n\n        try {\n            GenericApplicationContext springCtx = new GenericApplicationContext();\n\n            new XmlBeanDefinitionReader(springCtx).loadBeanDefinitions(metaUrl);\n\n            springCtx.refresh();\n\n            Collection<GridCacheQueryTypeMetadata> typeMetadata =\n                springCtx.getBeansOfType(GridCacheQueryTypeMetadata.class).values();\n\n            store.setTypeMetadata(typeMetadata);\n        }\n        catch (BeansException e) {\n            if (X.hasCause(e, ClassNotFoundException.class))\n                throw new IgniteCheckedException(\"Failed to instantiate Spring XML application context \" +\n                    \"(make sure all classes used in Spring configuration are present at CLASSPATH) \" +\n                    \"[springUrl=\" + metaUrl + ']', e);\n            else\n                throw new IgniteCheckedException(\"Failed to instantiate Spring XML application context [springUrl=\" +\n                    metaUrl + \", err=\" + e.getMessage() + ']', e);\n        }\n\n        return store;\n    }","commit_id":"c9803b6ad400b6daaf1ea54c6aa1bb1dfd1d3808","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * @param tx Transaction.\n     * @param commit Commit.\n     * @throws IgniteCheckedException If failed.\n     */\n    private void doTestAllOps(@Nullable IgniteTx tx, boolean commit) throws IgniteCheckedException {\n        try {\n            final OrganizationKey k1 = new OrganizationKey(1);\n            final Organization v1 = new Organization(1, \"Name1\", \"City1\");\n\n            store.put(tx, k1, v1);\n\n            if (tx != null && commit) {\n                store.txEnd(tx, true);\n\n                tx = new DummyTx();\n            }\n\n            if (tx == null || commit)\n                assertEquals(v1, store.load(tx, k1));\n\n            Map<OrganizationKey, Organization> m = new HashMap<>();\n\n            final OrganizationKey k2 = new OrganizationKey(2);\n            final Organization v2 = new Organization(2, \"Name2\", \"City2\");\n\n            final OrganizationKey k3 = new OrganizationKey(3);\n            final Organization v3 = new Organization(3, \"Name3\", \"City3\");\n\n            m.put(k2, v2);\n            m.put(k3, v3);\n\n            store.putAll(tx, m);\n\n            if (tx != null && commit) {\n                store.txEnd(tx, true);\n\n                tx = new DummyTx();\n            }\n\n            final AtomicInteger cntr = new AtomicInteger();\n\n            final OrganizationKey no_such_key = new OrganizationKey(4);\n\n            if (tx == null || commit) {\n                store.loadAll(tx, Arrays.asList(k1, k2, k3, no_such_key), new CI2<Object, Object>() {\n                    @Override public void apply(Object o, Object o1) {\n                        if (k1.equals(o))\n                            assertEquals(v1, o1);\n\n                        if (k2.equals(o))\n                            assertEquals(v2, o1);\n\n                        if (k3.equals(o))\n                            assertEquals(v3, o1);\n\n                        if (no_such_key.equals(o))\n                            fail();\n\n                        cntr.incrementAndGet();\n                    }\n                });\n\n                assertEquals(3, cntr.get());\n            }\n\n            store.removeAll(tx, Arrays.asList(k2, k3));\n\n            if (tx != null && commit) {\n                store.txEnd(tx, true);\n\n                tx = new DummyTx();\n            }\n\n            if (tx == null || commit) {\n                assertNull(store.load(tx, k2));\n                assertNull(store.load(tx, k3));\n                assertEquals(v1, store.load(tx, k1));\n            }\n\n            store.remove(tx, k1);\n\n            if (tx != null && commit) {\n                store.txEnd(tx, true);\n\n                tx = new DummyTx();\n            }\n\n            if (tx == null || commit)\n                assertNull(store.load(tx, k1));\n        }\n        finally {\n            if (tx != null)\n                store.txEnd(tx, false);\n        }\n    }","id":53188,"modified_method":"/**\n     * @param tx Transaction.\n     * @param commit Commit.\n     */\n    private void doTestAllOps(@Nullable IgniteTx tx, boolean commit) {\n        try {\n            ses.newSession(tx);\n\n            final OrganizationKey k1 = new OrganizationKey(1);\n            final Organization v1 = new Organization(1, \"Name1\", \"City1\");\n\n            store.write(new CacheEntryImpl<>(k1, v1));\n\n            if (tx != null && commit) {\n                store.txEnd(true);\n\n                tx = new DummyTx();\n\n                ses.newSession(tx);\n            }\n\n            if (tx == null || commit)\n                assertEquals(v1, store.load(k1));\n\n            Collection<Cache.Entry<?, ?>> col = new ArrayList<>();\n\n            final OrganizationKey k2 = new OrganizationKey(2);\n            final Organization v2 = new Organization(2, \"Name2\", \"City2\");\n\n            final OrganizationKey k3 = new OrganizationKey(3);\n            final Organization v3 = new Organization(3, \"Name3\", \"City3\");\n\n            col.add(new CacheEntryImpl<>(k2, v2));\n            col.add(new CacheEntryImpl<>(k3, v3));\n\n            store.writeAll(col);\n\n            if (tx != null && commit) {\n                store.txEnd(true);\n\n                tx = new DummyTx();\n\n                ses.newSession(tx);\n            }\n\n            final AtomicInteger cntr = new AtomicInteger();\n\n            final OrganizationKey no_such_key = new OrganizationKey(4);\n\n            if (tx == null || commit) {\n                Map<Object, Object> loaded = store.loadAll(Arrays.asList(k1, k2, k3, no_such_key));\n\n                for (Map.Entry<Object, Object> e : loaded.entrySet()) {\n                    Object key = e.getKey();\n                    Object val = e.getValue();\n\n                    if (k1.equals(key))\n                        assertEquals(v1, val);\n\n                    if (k2.equals(key))\n                        assertEquals(v2, val);\n\n                    if (k3.equals(key))\n                        assertEquals(v3, val);\n\n                    if (no_such_key.equals(key))\n                        fail();\n\n                    cntr.incrementAndGet();\n                }\n\n                assertEquals(3, cntr.get());\n            }\n\n            store.deleteAll(Arrays.asList(k2, k3));\n\n            if (tx != null && commit) {\n                store.txEnd(true);\n\n                tx = new DummyTx();\n\n                ses.newSession(tx);\n            }\n\n            if (tx == null || commit) {\n                assertNull(store.load(k2));\n                assertNull(store.load(k3));\n                assertEquals(v1, store.load(k1));\n            }\n\n            store.delete(k1);\n\n            if (tx != null && commit) {\n                store.txEnd(true);\n\n                tx = new DummyTx();\n\n                ses.newSession(tx);\n            }\n\n            if (tx == null || commit)\n                assertNull(store.load(k1));\n        }\n        finally {\n            if (tx != null)\n                store.txEnd(false);\n        }\n    }","commit_id":"c9803b6ad400b6daaf1ea54c6aa1bb1dfd1d3808","url":"https://github.com/apache/ignite"},{"original_method":"/**\n     * @param store Store.\n     * @throws Exception If failed.\n     */\n    protected void inject(JdbcCacheStore store) throws Exception {\n        getTestResources().inject(store);\n    }","id":53189,"modified_method":"/**\n     * @param store Store.\n     * @throws Exception If failed.\n     */\n    protected void inject(JdbcCacheStore store) throws Exception {\n        getTestResources().inject(store);\n\n        GridTestUtils.setFieldValue(store, CacheStore.class, \"ses\", ses);\n    }","commit_id":"c9803b6ad400b6daaf1ea54c6aa1bb1dfd1d3808","url":"https://github.com/apache/ignite"},{"original_method":"@GET @Timed\n    @ApiOperation(value = \"Get a list of all streams\")\n    @Produces(MediaType.APPLICATION_JSON)\n    public StreamListResponse get() {\n        StreamListResponse response = new StreamListResponse();\n\n        response.streams = streamService.loadAll();\n        response.total = response.streams.size();\n\n        return response;\n    }","id":53190,"modified_method":"@GET @Timed\n    @ApiOperation(value = \"Get a list of all streams\")\n    @Produces(MediaType.APPLICATION_JSON)\n    public StreamListResponse get() {\n        StreamListResponse response = new StreamListResponse();\n        response.streams = new ArrayList<>();\n\n        for (Stream stream : streamService.loadAll())\n            if (isPermitted(RestPermissions.STREAMS_READ, stream.getId()))\n                response.streams.add(stream);\n\n        response.total = response.streams.size();\n\n        return response;\n    }","commit_id":"c560fcd4d384b06c4ce50b4ad6fc6d428447385b","url":"https://github.com/Graylog2/graylog2-server"},{"original_method":"@GET @Path(\"/enabled\") @Timed\n    @ApiOperation(value = \"Get a list of all enabled streams\")\n    @Produces(MediaType.APPLICATION_JSON)\n    public String getEnabled() throws NotFoundException {\n        List<Map<String, Object>> streams = Lists.newArrayList();\n        for (Stream stream : streamService.loadAllEnabled()) {\n            if (isPermitted(RestPermissions.STREAMS_READ, stream.getId())) {\n                List<StreamRule> streamRules = streamRuleService.loadForStream(stream);\n                streams.add(stream.asMap(streamRules));\n            }\n        }\n\n        Map<String, Object> result = Maps.newHashMap();\n        result.put(\"total\", streams.size());\n        result.put(\"streams\", streams);\n\n        return json(result);\n    }","id":53191,"modified_method":"@GET @Path(\"/enabled\") @Timed\n    @ApiOperation(value = \"Get a list of all enabled streams\")\n    @Produces(MediaType.APPLICATION_JSON)\n    public StreamListResponse getEnabled() throws NotFoundException {\n        StreamListResponse response = new StreamListResponse();\n        response.streams = new ArrayList<>();\n        for (Stream stream : streamService.loadAllEnabled())\n            if (isPermitted(RestPermissions.STREAMS_READ, stream.getId()))\n                response.streams.add(stream);\n        response.total = response.streams.size();\n\n        return response;\n    }","commit_id":"c560fcd4d384b06c4ce50b4ad6fc6d428447385b","url":"https://github.com/Graylog2/graylog2-server"},{"original_method":"@Override\n    public void pause(Stream stream) {\n        try {\n            stream.setDisabled(true);\n            save(stream);\n        } catch (ValidationException e) {\n            LOG.error(\"Caught exception while saving object: \", e);\n        }\n    }","id":53192,"modified_method":"@Override\n    public void pause(Stream stream) throws ValidationException {\n        stream.setDisabled(true);\n        save(stream);\n    }","commit_id":"c560fcd4d384b06c4ce50b4ad6fc6d428447385b","url":"https://github.com/Graylog2/graylog2-server"},{"original_method":"@SuppressWarnings(\"unchecked\")\n    public List<Stream> loadAllEnabled(Map<String, Object> additionalQueryOpts) {\n        additionalQueryOpts.put(\"disabled\", new BasicDBObject(\"$ne\", true));\n\n        return loadAll(additionalQueryOpts);\n    }","id":53193,"modified_method":"@SuppressWarnings(\"unchecked\")\n    public List<Stream> loadAllEnabled(Map<String, Object> additionalQueryOpts) {\n        additionalQueryOpts.put(\"disabled\", false);\n\n        return loadAll(additionalQueryOpts);\n    }","commit_id":"c560fcd4d384b06c4ce50b4ad6fc6d428447385b","url":"https://github.com/Graylog2/graylog2-server"},{"original_method":"@Override\n    public void resume(Stream stream) {\n        try {\n            stream.setDisabled(false);\n            save(stream);\n        } catch (ValidationException e) {\n            LOG.error(\"Caught exception while saving object: \", e);\n        }\n    }","id":53194,"modified_method":"@Override\n    public void resume(Stream stream) throws ValidationException {\n        stream.setDisabled(false);\n        save(stream);\n    }","commit_id":"c560fcd4d384b06c4ce50b4ad6fc6d428447385b","url":"https://github.com/Graylog2/graylog2-server"},{"original_method":"@GET\n    @Timed\n    @ApiOperation(value = \"List available configuration bundles\")\n    @ApiResponses(value = {\n            @ApiResponse(code = 500, message = \"Error loading configuration bundles\")\n    })\n    public Set<ConfigurationBundle> listBundles() {\n        return bundleService.loadAll();\n    }","id":53195,"modified_method":"@GET\n    @Timed\n    @ApiOperation(value = \"List available configuration bundles\")\n    @ApiResponses(value = {\n            @ApiResponse(code = 500, message = \"Error loading configuration bundles\")\n    })\n    public Multimap<String, ConfigurationBundle> listBundles() {\n        final ImmutableSetMultimap.Builder<String, ConfigurationBundle> categoryBundleMap = ImmutableSetMultimap.builder();\n\n        for(final ConfigurationBundle bundle : bundleService.loadAll()) {\n            categoryBundleMap.put(bundle.getCategory(), bundle);\n        }\n\n        return categoryBundleMap.build();\n    }","commit_id":"4a80cfb805bfbe14f8499526b8dd4260e3f6354a","url":"https://github.com/Graylog2/graylog2-server"},{"original_method":"public static OutputListResponse create(long total, Collection<Output> outputs) {\n        return new AutoValue_OutputListResponse(total, outputs);\n    }","id":53196,"modified_method":"public static OutputListResponse create(long total, Collection<OutputSummary> outputs) {\n        return new AutoValue_OutputListResponse(total, outputs);\n    }","commit_id":"360fec613c2201f5414bc8824c17c7bc9d72a004","url":"https://github.com/Graylog2/graylog2-server"},{"original_method":"@JsonProperty\n    public abstract Collection<Output> outputs();","id":53197,"modified_method":"@JsonProperty\n    public abstract Collection<OutputSummary> outputs();","commit_id":"360fec613c2201f5414bc8824c17c7bc9d72a004","url":"https://github.com/Graylog2/graylog2-server"},{"original_method":"@Inject\n    public OutputResource(OutputService outputService,\n                          MessageOutputFactory messageOutputFactory) {\n        this.outputService = outputService;\n        this.messageOutputFactory = messageOutputFactory;\n    }","id":53198,"modified_method":"@Inject\n    public OutputResource(OutputService outputService,\n                          MessageOutputFactory messageOutputFactory,\n                          OutputFilter outputFilter) {\n        this.outputService = outputService;\n        this.messageOutputFactory = messageOutputFactory;\n        this.outputFilter = outputFilter;\n    }","commit_id":"360fec613c2201f5414bc8824c17c7bc9d72a004","url":"https://github.com/Graylog2/graylog2-server"},{"original_method":"@GET\n    @Timed\n    @ApiOperation(value = \"Get a list of all outputs\")\n    @RequiresPermissions(RestPermissions.STREAM_OUTPUTS_CREATE)\n    @Produces(MediaType.APPLICATION_JSON)\n    public Map<String, Object> get() {\n        checkPermission(RestPermissions.OUTPUTS_READ);\n        final Set<Output> outputs = outputService.loadAll();\n\n        return ImmutableMap.of(\n                \"total\", outputs.size(),\n                \"outputs\", filterPasswordFields(outputs));\n    }","id":53199,"modified_method":"@GET\n    @Timed\n    @ApiOperation(value = \"Get a list of all outputs\")\n    @RequiresPermissions(RestPermissions.STREAM_OUTPUTS_CREATE)\n    @Produces(MediaType.APPLICATION_JSON)\n    public OutputListResponse get() {\n        checkPermission(RestPermissions.OUTPUTS_READ);\n        final Set<OutputSummary> outputs = new HashSet<>();\n\n        for (Output output : outputService.loadAll())\n            outputs.add(OutputSummary.create(\n                    output.getId(),\n                    output.getTitle(),\n                    output.getType(),\n                    output.getCreatorUserId(),\n                    new DateTime(output.getCreatedAt()),\n                    new HashMap<>(output.getConfiguration()),\n                    output.getContentPack()\n            ));\n\n        return OutputListResponse.create(outputFilter.filterPasswordFields(outputs));\n    }","commit_id":"360fec613c2201f5414bc8824c17c7bc9d72a004","url":"https://github.com/Graylog2/graylog2-server"},{"original_method":"@Inject\n    public StreamOutputResource(OutputService outputService, StreamService streamService, OutputRegistry outputRegistry) {\n        this.outputService = outputService;\n        this.streamService = streamService;\n        this.outputRegistry = outputRegistry;\n    }","id":53200,"modified_method":"@Inject\n    public StreamOutputResource(OutputService outputService, StreamService streamService, OutputRegistry outputRegistry, OutputFilter outputFilter) {\n        this.outputService = outputService;\n        this.streamService = streamService;\n        this.outputRegistry = outputRegistry;\n        this.outputFilter = outputFilter;\n    }","commit_id":"360fec613c2201f5414bc8824c17c7bc9d72a004","url":"https://github.com/Graylog2/graylog2-server"},{"original_method":"public static boolean contains(\n\t\tPermissionChecker permissionChecker, BlogsEntry entry,\n\t\tString actionId) {\n\n\t\tBoolean hasPermission = StagingPermissionUtil.hasPermission(\n\t\t\tpermissionChecker, entry.getGroupId(), BlogsEntry.class.getName(),\n\t\t\tentry.getEntryId(), PortletKeys.BLOGS, actionId);\n\n\t\tif (hasPermission != null) {\n\t\t\treturn hasPermission.booleanValue();\n\t\t}\n\n\t\tif (entry.isDraft()) {\n\t\t\tif (actionId.equals(ActionKeys.VIEW) &&\n\t\t\t\t!contains(permissionChecker, entry, ActionKeys.UPDATE)) {\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\telse if (entry.isPending()) {\n\t\t\thasPermission = WorkflowPermissionUtil.hasPermission(\n\t\t\t\tpermissionChecker, entry.getGroupId(),\n\t\t\t\tBlogsEntry.class.getName(), entry.getEntryId(), actionId);\n\n\t\t\tif (hasPermission != null) {\n\t\t\t\treturn hasPermission.booleanValue();\n\t\t\t}\n\t\t}\n\n\t\tif (permissionChecker.hasOwnerPermission(\n\t\t\t\tentry.getCompanyId(), BlogsEntry.class.getName(),\n\t\t\t\tentry.getEntryId(), entry.getUserId(), actionId)) {\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn permissionChecker.hasPermission(\n\t\t\tentry.getGroupId(), BlogsEntry.class.getName(), entry.getEntryId(),\n\t\t\tactionId);\n\t}","id":53201,"modified_method":"public static boolean contains(\n\t\tPermissionChecker permissionChecker, BlogsEntry entry,\n\t\tString actionId) {\n\n\t\tBoolean hasPermission = StagingPermissionUtil.hasPermission(\n\t\t\tpermissionChecker, entry.getGroupId(), BlogsEntry.class.getName(),\n\t\t\tentry.getEntryId(), PortletKeys.BLOGS, actionId);\n\n\t\tif (hasPermission != null) {\n\t\t\treturn hasPermission.booleanValue();\n\t\t}\n\n\t\tif (entry.isDraft() || entry.isScheduled()) {\n\t\t\tif (actionId.equals(ActionKeys.VIEW) &&\n\t\t\t\t!contains(permissionChecker, entry, ActionKeys.UPDATE)) {\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\telse if (entry.isPending()) {\n\t\t\thasPermission = WorkflowPermissionUtil.hasPermission(\n\t\t\t\tpermissionChecker, entry.getGroupId(),\n\t\t\t\tBlogsEntry.class.getName(), entry.getEntryId(), actionId);\n\n\t\t\tif (hasPermission != null) {\n\t\t\t\treturn hasPermission.booleanValue();\n\t\t\t}\n\t\t}\n\n\t\tif (permissionChecker.hasOwnerPermission(\n\t\t\t\tentry.getCompanyId(), BlogsEntry.class.getName(),\n\t\t\t\tentry.getEntryId(), entry.getUserId(), actionId)) {\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn permissionChecker.hasPermission(\n\t\t\tentry.getGroupId(), BlogsEntry.class.getName(), entry.getEntryId(),\n\t\t\tactionId);\n\t}","commit_id":"3d30723e07777d778cf5f309db448ad916010a60","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static boolean contains(\n\t\t\tPermissionChecker permissionChecker, JournalArticle article,\n\t\t\tString actionId)\n\t\tthrows PortalException, SystemException {\n\n\t\tBoolean hasPermission = StagingPermissionUtil.hasPermission(\n\t\t\tpermissionChecker, article.getGroupId(),\n\t\t\tJournalArticle.class.getName(), article.getResourcePrimKey(),\n\t\t\tPortletKeys.JOURNAL, actionId);\n\n\t\tif (hasPermission != null) {\n\t\t\treturn hasPermission.booleanValue();\n\t\t}\n\n\t\tif (article.isDraft()) {\n\t\t\tif (actionId.equals(ActionKeys.VIEW) &&\n\t\t\t\t!contains(permissionChecker, article, ActionKeys.UPDATE)) {\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\telse if (article.isPending()) {\n\t\t\thasPermission = WorkflowPermissionUtil.hasPermission(\n\t\t\t\tpermissionChecker, article.getGroupId(),\n\t\t\t\tJournalArticle.class.getName(), article.getResourcePrimKey(),\n\t\t\t\tactionId);\n\n\t\t\tif (hasPermission != null) {\n\t\t\t\treturn hasPermission.booleanValue();\n\t\t\t}\n\t\t}\n\n\t\tif (actionId.equals(ActionKeys.VIEW) &&\n\t\t\tPropsValues.PERMISSIONS_VIEW_DYNAMIC_INHERITANCE) {\n\n\t\t\tlong folderId = article.getFolderId();\n\n\t\t\tif (folderId != JournalFolderConstants.DEFAULT_PARENT_FOLDER_ID) {\n\t\t\t\ttry {\n\t\t\t\t\tJournalFolder folder =\n\t\t\t\t\t\tJournalFolderLocalServiceUtil.getFolder(folderId);\n\n\t\t\t\t\tif (!JournalFolderPermission.contains(\n\t\t\t\t\t\t\tpermissionChecker, folder, ActionKeys.ACCESS) &&\n\t\t\t\t\t\t!JournalFolderPermission.contains(\n\t\t\t\t\t\t\tpermissionChecker, folder, ActionKeys.VIEW)) {\n\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcatch (NoSuchFolderException nsfe) {\n\t\t\t\t\tif (!article.isInTrash()) {\n\t\t\t\t\t\tthrow nsfe;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (permissionChecker.hasOwnerPermission(\n\t\t\t\tarticle.getCompanyId(), JournalArticle.class.getName(),\n\t\t\t\tarticle.getResourcePrimKey(), article.getUserId(), actionId)) {\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn permissionChecker.hasPermission(\n\t\t\tarticle.getGroupId(), JournalArticle.class.getName(),\n\t\t\tarticle.getResourcePrimKey(), actionId);\n\t}","id":53202,"modified_method":"public static boolean contains(\n\t\t\tPermissionChecker permissionChecker, JournalArticle article,\n\t\t\tString actionId)\n\t\tthrows PortalException, SystemException {\n\n\t\tBoolean hasPermission = StagingPermissionUtil.hasPermission(\n\t\t\tpermissionChecker, article.getGroupId(),\n\t\t\tJournalArticle.class.getName(), article.getResourcePrimKey(),\n\t\t\tPortletKeys.JOURNAL, actionId);\n\n\t\tif (hasPermission != null) {\n\t\t\treturn hasPermission.booleanValue();\n\t\t}\n\n\t\tif (article.isDraft() || article.isScheduled()) {\n\t\t\tif (actionId.equals(ActionKeys.VIEW) &&\n\t\t\t\t!contains(permissionChecker, article, ActionKeys.UPDATE)) {\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\telse if (article.isPending()) {\n\t\t\thasPermission = WorkflowPermissionUtil.hasPermission(\n\t\t\t\tpermissionChecker, article.getGroupId(),\n\t\t\t\tJournalArticle.class.getName(), article.getResourcePrimKey(),\n\t\t\t\tactionId);\n\n\t\t\tif (hasPermission != null) {\n\t\t\t\treturn hasPermission.booleanValue();\n\t\t\t}\n\t\t}\n\n\t\tif (actionId.equals(ActionKeys.VIEW) &&\n\t\t\tPropsValues.PERMISSIONS_VIEW_DYNAMIC_INHERITANCE) {\n\n\t\t\tlong folderId = article.getFolderId();\n\n\t\t\tif (folderId != JournalFolderConstants.DEFAULT_PARENT_FOLDER_ID) {\n\t\t\t\ttry {\n\t\t\t\t\tJournalFolder folder =\n\t\t\t\t\t\tJournalFolderLocalServiceUtil.getFolder(folderId);\n\n\t\t\t\t\tif (!JournalFolderPermission.contains(\n\t\t\t\t\t\t\tpermissionChecker, folder, ActionKeys.ACCESS) &&\n\t\t\t\t\t\t!JournalFolderPermission.contains(\n\t\t\t\t\t\t\tpermissionChecker, folder, ActionKeys.VIEW)) {\n\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcatch (NoSuchFolderException nsfe) {\n\t\t\t\t\tif (!article.isInTrash()) {\n\t\t\t\t\t\tthrow nsfe;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (permissionChecker.hasOwnerPermission(\n\t\t\t\tarticle.getCompanyId(), JournalArticle.class.getName(),\n\t\t\t\tarticle.getResourcePrimKey(), article.getUserId(), actionId)) {\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn permissionChecker.hasPermission(\n\t\t\tarticle.getGroupId(), JournalArticle.class.getName(),\n\t\t\tarticle.getResourcePrimKey(), actionId);\n\t}","commit_id":"3d30723e07777d778cf5f309db448ad916010a60","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static boolean contains(\n\t\t\tPermissionChecker permissionChecker, MBMessage message,\n\t\t\tString actionId)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (MBBanLocalServiceUtil.hasBan(\n\t\t\t\tmessage.getGroupId(), permissionChecker.getUserId())) {\n\n\t\t\treturn false;\n\t\t}\n\n\t\tBoolean hasPermission = StagingPermissionUtil.hasPermission(\n\t\t\tpermissionChecker, message.getGroupId(), MBMessage.class.getName(),\n\t\t\tmessage.getMessageId(), PortletKeys.MESSAGE_BOARDS, actionId);\n\n\t\tif (hasPermission != null) {\n\t\t\treturn hasPermission.booleanValue();\n\t\t}\n\n\t\tif (message.isDraft()) {\n\t\t\tif (actionId.equals(ActionKeys.VIEW) &&\n\t\t\t\t!contains(permissionChecker, message, ActionKeys.UPDATE)) {\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\telse if (message.isPending()) {\n\t\t\thasPermission = WorkflowPermissionUtil.hasPermission(\n\t\t\t\tpermissionChecker, message.getGroupId(),\n\t\t\t\tmessage.getWorkflowClassName(), message.getMessageId(),\n\t\t\t\tactionId);\n\n\t\t\tif (hasPermission != null) {\n\t\t\t\treturn hasPermission.booleanValue();\n\t\t\t}\n\t\t}\n\n\t\tif (actionId.equals(ActionKeys.VIEW) &&\n\t\t\tPropsValues.PERMISSIONS_VIEW_DYNAMIC_INHERITANCE) {\n\n\t\t\tlong categoryId = message.getCategoryId();\n\n\t\t\tif ((categoryId !=\n\t\t\t\t\tMBCategoryConstants.DEFAULT_PARENT_CATEGORY_ID) &&\n\t\t\t\t(categoryId != MBCategoryConstants.DISCUSSION_CATEGORY_ID)) {\n\n\t\t\t\ttry {\n\t\t\t\t\tMBCategory category =\n\t\t\t\t\t\tMBCategoryLocalServiceUtil.getCategory(categoryId);\n\n\t\t\t\t\tif (!MBCategoryPermission.contains(\n\t\t\t\t\t\t\tpermissionChecker, category, actionId)) {\n\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcatch (NoSuchCategoryException nsce) {\n\t\t\t\t\tif (!message.isInTrash()) {\n\t\t\t\t\t\tthrow nsce;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (permissionChecker.hasOwnerPermission(\n\t\t\t\tmessage.getCompanyId(), MBMessage.class.getName(),\n\t\t\t\tmessage.getRootMessageId(), message.getUserId(), actionId)) {\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn permissionChecker.hasPermission(\n\t\t\tmessage.getGroupId(), MBMessage.class.getName(),\n\t\t\tmessage.getMessageId(), actionId);\n\t}","id":53203,"modified_method":"public static boolean contains(\n\t\t\tPermissionChecker permissionChecker, MBMessage message,\n\t\t\tString actionId)\n\t\tthrows PortalException, SystemException {\n\n\t\tif (MBBanLocalServiceUtil.hasBan(\n\t\t\t\tmessage.getGroupId(), permissionChecker.getUserId())) {\n\n\t\t\treturn false;\n\t\t}\n\n\t\tBoolean hasPermission = StagingPermissionUtil.hasPermission(\n\t\t\tpermissionChecker, message.getGroupId(), MBMessage.class.getName(),\n\t\t\tmessage.getMessageId(), PortletKeys.MESSAGE_BOARDS, actionId);\n\n\t\tif (hasPermission != null) {\n\t\t\treturn hasPermission.booleanValue();\n\t\t}\n\n\t\tif (message.isDraft() || message.isScheduled()) {\n\t\t\tif (actionId.equals(ActionKeys.VIEW) &&\n\t\t\t\t!contains(permissionChecker, message, ActionKeys.UPDATE)) {\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\telse if (message.isPending()) {\n\t\t\thasPermission = WorkflowPermissionUtil.hasPermission(\n\t\t\t\tpermissionChecker, message.getGroupId(),\n\t\t\t\tmessage.getWorkflowClassName(), message.getMessageId(),\n\t\t\t\tactionId);\n\n\t\t\tif (hasPermission != null) {\n\t\t\t\treturn hasPermission.booleanValue();\n\t\t\t}\n\t\t}\n\n\t\tif (actionId.equals(ActionKeys.VIEW) &&\n\t\t\tPropsValues.PERMISSIONS_VIEW_DYNAMIC_INHERITANCE) {\n\n\t\t\tlong categoryId = message.getCategoryId();\n\n\t\t\tif ((categoryId !=\n\t\t\t\t\tMBCategoryConstants.DEFAULT_PARENT_CATEGORY_ID) &&\n\t\t\t\t(categoryId != MBCategoryConstants.DISCUSSION_CATEGORY_ID)) {\n\n\t\t\t\ttry {\n\t\t\t\t\tMBCategory category =\n\t\t\t\t\t\tMBCategoryLocalServiceUtil.getCategory(categoryId);\n\n\t\t\t\t\tif (!MBCategoryPermission.contains(\n\t\t\t\t\t\t\tpermissionChecker, category, actionId)) {\n\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcatch (NoSuchCategoryException nsce) {\n\t\t\t\t\tif (!message.isInTrash()) {\n\t\t\t\t\t\tthrow nsce;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (permissionChecker.hasOwnerPermission(\n\t\t\t\tmessage.getCompanyId(), MBMessage.class.getName(),\n\t\t\t\tmessage.getRootMessageId(), message.getUserId(), actionId)) {\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn permissionChecker.hasPermission(\n\t\t\tmessage.getGroupId(), MBMessage.class.getName(),\n\t\t\tmessage.getMessageId(), actionId);\n\t}","commit_id":"3d30723e07777d778cf5f309db448ad916010a60","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static boolean contains(\n\t\tPermissionChecker permissionChecker, WikiPage page, String actionId) {\n\n\t\tBoolean hasPermission = StagingPermissionUtil.hasPermission(\n\t\t\tpermissionChecker, page.getGroupId(), WikiPage.class.getName(),\n\t\t\tpage.getPageId(), PortletKeys.WIKI, actionId);\n\n\t\tif (hasPermission != null) {\n\t\t\treturn hasPermission.booleanValue();\n\t\t}\n\n\t\tif (page.isDraft()) {\n\t\t\tif (actionId.equals(ActionKeys.VIEW) &&\n\t\t\t\t!contains(permissionChecker, page, ActionKeys.UPDATE)) {\n\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (actionId.equals(ActionKeys.DELETE) &&\n\t\t\t\t(page.getStatusByUserId() == permissionChecker.getUserId())) {\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse if (page.isPending()) {\n\t\t\thasPermission = WorkflowPermissionUtil.hasPermission(\n\t\t\t\tpermissionChecker, page.getGroupId(), WikiPage.class.getName(),\n\t\t\t\tpage.getResourcePrimKey(), actionId);\n\n\t\t\tif ((hasPermission != null) && hasPermission.booleanValue()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tif (actionId.equals(ActionKeys.VIEW)) {\n\t\t\tWikiPage redirectPage = page.getRedirectPage();\n\n\t\t\tif (redirectPage != null) {\n\t\t\t\tpage = redirectPage;\n\t\t\t}\n\n\t\t\tif (PropsValues.PERMISSIONS_VIEW_DYNAMIC_INHERITANCE) {\n\t\t\t\tWikiNode node = page.getNode();\n\n\t\t\t\tif (!WikiNodePermission.contains(\n\t\t\t\t\t\tpermissionChecker, node, actionId)) {\n\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\twhile (page != null) {\n\t\t\t\t\tif (!_hasPermission(permissionChecker, page, actionId)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tpage = page.getParentPage();\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn _hasPermission(permissionChecker, page, actionId);\n\t}","id":53204,"modified_method":"public static boolean contains(\n\t\tPermissionChecker permissionChecker, WikiPage page, String actionId) {\n\n\t\tBoolean hasPermission = StagingPermissionUtil.hasPermission(\n\t\t\tpermissionChecker, page.getGroupId(), WikiPage.class.getName(),\n\t\t\tpage.getPageId(), PortletKeys.WIKI, actionId);\n\n\t\tif (hasPermission != null) {\n\t\t\treturn hasPermission.booleanValue();\n\t\t}\n\n\t\tif (page.isDraft()) {\n\t\t\tif (actionId.equals(ActionKeys.VIEW) &&\n\t\t\t\t!contains(permissionChecker, page, ActionKeys.UPDATE)) {\n\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (actionId.equals(ActionKeys.DELETE) &&\n\t\t\t\t(page.getStatusByUserId() == permissionChecker.getUserId())) {\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\telse if (page.isScheduled() && actionId.equals(ActionKeys.VIEW) &&\n\t\t\t\t !contains(permissionChecker, page, ActionKeys.UPDATE)) {\n\n\t\t\treturn false;\n\t\t}\n\t\telse if (page.isPending()) {\n\t\t\thasPermission = WorkflowPermissionUtil.hasPermission(\n\t\t\t\tpermissionChecker, page.getGroupId(), WikiPage.class.getName(),\n\t\t\t\tpage.getResourcePrimKey(), actionId);\n\n\t\t\tif ((hasPermission != null) && hasPermission.booleanValue()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tif (actionId.equals(ActionKeys.VIEW)) {\n\t\t\tWikiPage redirectPage = page.getRedirectPage();\n\n\t\t\tif (redirectPage != null) {\n\t\t\t\tpage = redirectPage;\n\t\t\t}\n\n\t\t\tif (PropsValues.PERMISSIONS_VIEW_DYNAMIC_INHERITANCE) {\n\t\t\t\tWikiNode node = page.getNode();\n\n\t\t\t\tif (!WikiNodePermission.contains(\n\t\t\t\t\t\tpermissionChecker, node, actionId)) {\n\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\twhile (page != null) {\n\t\t\t\t\tif (!_hasPermission(permissionChecker, page, actionId)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tpage = page.getParentPage();\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn _hasPermission(permissionChecker, page, actionId);\n\t}","commit_id":"3d30723e07777d778cf5f309db448ad916010a60","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public String nameToCanonicalName(String name, PsiNamedElement psiVariable) {\n    final CodeStyleManager codeStyleManager = CodeStyleManager.getInstance(psiVariable.getManager());\n    return codeStyleManager.variableNameToPropertyName(name, codeStyleManager.getVariableKind((PsiVariable)psiVariable));\n  }","id":53205,"modified_method":"public String nameToCanonicalName(String name, PsiNamedElement psiVariable) {\n    final CodeStyleManager codeStyleManager = CodeStyleManager.getInstance(psiVariable.getManager());\n    final String propertyName = codeStyleManager.variableNameToPropertyName(name, codeStyleManager.getVariableKind((PsiVariable)psiVariable));\n    if (myToUnpluralize.contains(psiVariable)) return StringUtil.unpluralize(propertyName);\n    return propertyName;\n  }","commit_id":"7789f9adbd88dad9965a317446d330b3f568bff7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public String canonicalNameToName(String canonicalName, PsiNamedElement psiVariable) {\n    final CodeStyleManager codeStyleManager = CodeStyleManager.getInstance(psiVariable.getManager());\n    return codeStyleManager.propertyNameToVariableName(canonicalName, codeStyleManager.getVariableKind((PsiVariable)psiVariable));\n  }","id":53206,"modified_method":"public String canonicalNameToName(String canonicalName, PsiNamedElement psiVariable) {\n    final CodeStyleManager codeStyleManager = CodeStyleManager.getInstance(psiVariable.getManager());\n    final String variableName =\n      codeStyleManager.propertyNameToVariableName(canonicalName, codeStyleManager.getVariableKind((PsiVariable)psiVariable));\n    if (myToUnpluralize.contains(psiVariable)) return StringUtil.pluralize(variableName);\n    return variableName;\n  }","commit_id":"7789f9adbd88dad9965a317446d330b3f568bff7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public AutomaticVariableRenamer(PsiClass aClass, String newClassName, List<UsageInfo> usages) {\n    for (Iterator<UsageInfo> iterator = usages.iterator(); iterator.hasNext();) {\n      final UsageInfo info = iterator.next();\n      if (info.getElement() instanceof PsiJavaCodeReferenceElement\n          && info.getElement().getParent() instanceof PsiTypeElement\n        &&  info.getElement().getParent().getParent() instanceof PsiVariable\n      ) {\n        myElements.add(((PsiVariable)info.getElement().getParent().getParent()));\n      }\n    }\n    suggestAllNames(aClass.getName(), newClassName);\n  }","id":53207,"modified_method":"public AutomaticVariableRenamer(PsiClass aClass, String newClassName, List<UsageInfo> usages) {\n    for (Iterator<UsageInfo> iterator = usages.iterator(); iterator.hasNext();) {\n      final UsageInfo info = iterator.next();\n      final PsiElement element = info.getElement();\n      if (!(element instanceof PsiJavaCodeReferenceElement)) continue;\n      final PsiVariable variable = PsiTreeUtil.getParentOfType(element, PsiVariable.class);\n      if (variable == null) continue;\n      final PsiJavaCodeReferenceElement ref = variable.getTypeElement().getInnermostComponentReferenceElement();\n      if (ref == null) continue;\n      if (ref.equals(element)) {\n        myElements.add((variable));\n        if (variable.getType() instanceof PsiArrayType) {\n          myToUnpluralize.add(variable);\n        }\n      } else {\n        PsiType collectionType = variable.getManager().getElementFactory().createTypeByFQClassName(\"java.util.Collection\", variable.getResolveScope());\n        if (!collectionType.isAssignableFrom(variable.getType())) continue;\n        final PsiTypeElement[] typeParameterElements = ref.getParameterList().getTypeParameterElements();\n        for (PsiTypeElement typeParameterElement : typeParameterElements) {\n          final PsiJavaCodeReferenceElement parameterRef = typeParameterElement.getInnermostComponentReferenceElement();\n          if (parameterRef != null && parameterRef.equals(element)) {\n            myElements.add((variable));\n            myToUnpluralize.add(variable);\n            break;\n          }\n        }\n      }\n    }\n    suggestAllNames(aClass.getName(), newClassName);\n  }","commit_id":"7789f9adbd88dad9965a317446d330b3f568bff7","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private String variableNameToPropertyNameInner(String name, VariableKind variableKind) {\n    String prefix = getPrefixByVariableKind(variableKind);\n    String suffix = getSuffixByVariableKind(variableKind);\n    boolean doDecapitalize = false;\n\n    int pLength = prefix.length();\n    if (pLength > 0 && name.startsWith(prefix) && name.length() > pLength &&\n        // check it's not just a long camel word that happens to begin with the specified prefix\n        (!Character.isLetter(prefix.charAt(pLength - 1)) || Character.isUpperCase(name.charAt(pLength)))) {\n      name = name.substring(pLength);\n      doDecapitalize = true;\n    }\n\n    if (name.endsWith(suffix) && name.length() > suffix.length()) {\n      name = name.substring(0, name.length() - suffix.length());\n      doDecapitalize = true;\n    }\n\n    if (name.startsWith(IS_PREFIX) && name.length() > IS_PREFIX.length() && Character.isUpperCase(name.charAt(IS_PREFIX.length()))) {\n      name = name.substring(IS_PREFIX.length());\n      doDecapitalize = true;\n    }\n\n    if (doDecapitalize) {\n      name = Introspector.decapitalize(name);\n    }\n\n    return name;\n  }","id":53208,"modified_method":"private String variableNameToPropertyNameInner(String name, VariableKind variableKind) {\n    String prefix = getPrefixByVariableKind(variableKind);\n    String suffix = getSuffixByVariableKind(variableKind);\n    boolean doDecapitalize = false;\n\n    int pLength = prefix.length();\n    if (pLength > 0 && name.startsWith(prefix) && name.length() > pLength &&\n        // check it's not just a long camel word that happens to begin with the specified prefix\n        (!Character.isLetter(prefix.charAt(pLength - 1)) || Character.isUpperCase(name.charAt(pLength)))) {\n      name = name.substring(pLength);\n      doDecapitalize = true;\n    }\n\n    if (name.endsWith(suffix) && name.length() > suffix.length()) {\n      name = name.substring(0, name.length() - suffix.length());\n      doDecapitalize = true;\n    }\n\n    if (doDecapitalize) {\n      name = Introspector.decapitalize(name);\n    }\n\n    return name;\n  }","commit_id":"b0af590fb16aa517d306be1eed40d03fb23572aa","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static String suggestGetterName(@NotNull String propertyName, @Nullable PsiType propertyType, @NonNls String existingGetterName) {\n    @NonNls StringBuffer name = new StringBuffer(StringUtil.capitalizeWithJavaBeanConvention(propertyName));\n    if (isBoolean(propertyType)) {\n      if (existingGetterName == null || !existingGetterName.startsWith(\"get\")) {\n        name.insert(0, \"is\");\n      }\n      else {\n        name.insert(0, \"get\");\n      }\n    }\n    else {\n      name.insert(0, \"get\");\n    }\n\n    return name.toString();\n  }","id":53209,"modified_method":"public static String suggestGetterName(@NotNull String propertyName, @Nullable PsiType propertyType, @NonNls String existingGetterName) {\n    @NonNls StringBuffer name = new StringBuffer(StringUtil.capitalizeWithJavaBeanConvention(propertyName));\n    if (isBoolean(propertyType)) {\n      if (existingGetterName == null || !existingGetterName.startsWith(\"get\")) {\n        name.insert(0, IS_PREFIX);\n      }\n      else {\n        name.insert(0, \"get\");\n      }\n    }\n    else {\n      name.insert(0, \"get\");\n    }\n\n    return name.toString();\n  }","commit_id":"b0af590fb16aa517d306be1eed40d03fb23572aa","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@SuppressWarnings({\"HardCodedStringLiteral\"})\n  public static boolean hasGetterName(final PsiMethod method) {\n    if (method == null) return false;\n\n    if (method.isConstructor()) return false;\n\n    String methodName = method.getName();\n    int methodNameLength = methodName.length();\n    if (methodName.startsWith(\"get\") && methodNameLength > \"get\".length()) {\n      if (Character.isLowerCase(methodName.charAt(\"get\".length()))\n          && (methodNameLength == \"get\".length() + 1 || Character.isLowerCase(methodName.charAt(\"get\".length() + 1)))) {\n        return false;\n      }\n      PsiType returnType = method.getReturnType();\n      if (returnType != null && PsiType.VOID.equals(returnType)) return false;\n    }\n    else if (methodName.startsWith(\"is\") && methodNameLength > \"is\".length()) {\n      if (Character.isLowerCase(methodName.charAt(\"is\".length()))\n          && (methodNameLength == \"is\".length() + 1 || Character.isLowerCase(methodName.charAt(\"is\".length() + 1)))) {\n        return false;\n      }\n      PsiType returnType = method.getReturnType();\n      return isBoolean(returnType);\n    }\n    else {\n      return false;\n    }\n    return true;\n  }","id":53210,"modified_method":"@SuppressWarnings({\"HardCodedStringLiteral\"})\n  public static boolean hasGetterName(final PsiMethod method) {\n    if (method == null) return false;\n\n    if (method.isConstructor()) return false;\n\n    String methodName = method.getName();\n    int methodNameLength = methodName.length();\n    if (methodName.startsWith(\"get\") && methodNameLength > \"get\".length()) {\n      if (Character.isLowerCase(methodName.charAt(\"get\".length()))\n          && (methodNameLength == \"get\".length() + 1 || Character.isLowerCase(methodName.charAt(\"get\".length() + 1)))) {\n        return false;\n      }\n      PsiType returnType = method.getReturnType();\n      if (returnType != null && PsiType.VOID.equals(returnType)) return false;\n    }\n    else if (methodName.startsWith(IS_PREFIX) && methodNameLength > IS_PREFIX.length()) {\n      if (Character.isLowerCase(methodName.charAt(IS_PREFIX.length()))\n          && (methodNameLength == IS_PREFIX.length() + 1 || Character.isLowerCase(methodName.charAt(IS_PREFIX.length() + 1)))) {\n        return false;\n      }\n      PsiType returnType = method.getReturnType();\n      return isBoolean(returnType);\n    }\n    else {\n      return false;\n    }\n    return true;\n  }","commit_id":"b0af590fb16aa517d306be1eed40d03fb23572aa","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NonNls\n  public static String[] suggestGetterNames(String propertyName) {\n    final String str = StringUtil.capitalizeWithJavaBeanConvention(propertyName);\n    return new String[] { \"is\" + str, \"get\" + str };\n  }","id":53211,"modified_method":"@NonNls\n  public static String[] suggestGetterNames(String propertyName) {\n    final String str = StringUtil.capitalizeWithJavaBeanConvention(propertyName);\n    return new String[] { IS_PREFIX + str, \"get\" + str };\n  }","commit_id":"b0af590fb16aa517d306be1eed40d03fb23572aa","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\npublic static PsiMethod getReversePropertyMethod(PsiMethod propertyMethod) {\n  if (propertyMethod == null) {\n    return null;\n  }\n  final PsiClass aClass = propertyMethod.getContainingClass();\n  if (aClass == null) {\n    return null;\n  }\n  final String methodName = propertyMethod.getName();\n  final String prefix;\n  if (methodName.startsWith(\"get\")) {\n    prefix = \"get\";\n  }\n  else if (methodName.startsWith(\"is\")) {\n    prefix = \"is\";\n  }\n  else if (methodName.startsWith(\"set\")) {\n    prefix = \"set\";\n  }\n  else {\n    return null;\n  }\n  final String name = methodName.substring(prefix.length());\n  final PsiField field;\n  if (prefix.equals(\"set\")) {\n    field = getFieldOfSetter(propertyMethod);\n  }\n  else {\n    field = getFieldOfGetter(propertyMethod);\n  }\n  if (field == null) {\n    return null;\n  }\n  if (prefix.equals(\"set\")) {\n    final PsiMethod result = findPropertyMethod(aClass, \"get\", name, field);\n    if (result != null) {\n      return result;\n    }\n    return findPropertyMethod(aClass, \"is\", name, field);\n  }\n  else {\n    return findPropertyMethod(aClass, \"set\", name, field);\n  }\n}","id":53212,"modified_method":"@Nullable\npublic static PsiMethod getReversePropertyMethod(PsiMethod propertyMethod) {\n  if (propertyMethod == null) {\n    return null;\n  }\n  final PsiClass aClass = propertyMethod.getContainingClass();\n  if (aClass == null) {\n    return null;\n  }\n  final String methodName = propertyMethod.getName();\n  final String prefix;\n  if (methodName.startsWith(\"get\")) {\n    prefix = \"get\";\n  }\n  else if (methodName.startsWith(IS_PREFIX)) {\n    prefix = IS_PREFIX;\n  }\n  else if (methodName.startsWith(\"set\")) {\n    prefix = \"set\";\n  }\n  else {\n    return null;\n  }\n  final String name = methodName.substring(prefix.length());\n  final PsiField field;\n  if (prefix.equals(\"set\")) {\n    field = getFieldOfSetter(propertyMethod);\n  }\n  else {\n    field = getFieldOfGetter(propertyMethod);\n  }\n  if (field == null) {\n    return null;\n  }\n  if (prefix.equals(\"set\")) {\n    final PsiMethod result = findPropertyMethod(aClass, \"get\", name, field);\n    if (result != null) {\n      return result;\n    }\n    return findPropertyMethod(aClass, IS_PREFIX, name, field);\n  }\n  else {\n    return findPropertyMethod(aClass, \"set\", name, field);\n  }\n}","commit_id":"b0af590fb16aa517d306be1eed40d03fb23572aa","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static String suggestPropertyName(Project project, PsiField field) {\n    JavaCodeStyleManager codeStyleManager = JavaCodeStyleManager.getInstance(project);\n    VariableKind kind = codeStyleManager.getVariableKind(field);\n    return codeStyleManager.variableNameToPropertyName(field.getName(), kind);\n  }","id":53213,"modified_method":"public static String suggestPropertyName(Project project, PsiField field) {\n    JavaCodeStyleManager codeStyleManager = JavaCodeStyleManager.getInstance(project);\n    VariableKind kind = codeStyleManager.getVariableKind(field);\n    String name = codeStyleManager.variableNameToPropertyName(field.getName(), kind);\n    if (!field.hasModifierProperty(PsiModifier.STATIC) && isBoolean(field.getType())) {\n      if (name.startsWith(IS_PREFIX) && name.length() > IS_PREFIX.length() && Character.isUpperCase(name.charAt(IS_PREFIX.length()))) {\n        name = Introspector.decapitalize(name.substring(IS_PREFIX.length()));\n      }\n    }\n    return name;\n  }","commit_id":"b0af590fb16aa517d306be1eed40d03fb23572aa","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testAddKBAArticleSectionsAS() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Knowledge Base (Admin)\",\n\t\t\tRuntimeVariables.replace(\"Knowledge Base (Admin)\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Article']\",\n\t\t\tRuntimeVariables.replace(\"Add Article\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_1_WAR_knowledgebaseportlet_title']\",\n\t\t\tRuntimeVariables.replace(\"The third\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_1_WAR_knowledgebaseportlet_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__1_WAR_knowledgebaseportlet_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__1_WAR_knowledgebaseportlet_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Number three detailing the specifics of Tomcat and Jboss\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_1_WAR_knowledgebaseportlet_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__1_WAR_knowledgebaseportlet_editor']/iframe\");\n\t\tselenium.selectFrame(\n\t\t\t\"//td[@id='cke_contents__1_WAR_knowledgebaseportlet_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\",\n\t\t\t\"Number three detailing the specifics of Tomcat and Jboss\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.addSelection(\"//select[@id='_1_WAR_knowledgebaseportlet_sections']\",\n\t\t\tRuntimeVariables.replace(\"Application Server\"));\n\t\tassertEquals(\"Application Server\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_1_WAR_knowledgebaseportlet_sections']\"));\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Knowledge Base (Admin)\",\n\t\t\tRuntimeVariables.replace(\"Knowledge Base (Admin)\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@name='_1_WAR_knowledgebaseportlet_keywords']\",\n\t\t\tRuntimeVariables.replace(\"third\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(\"1.0\",\n\t\t\tselenium.getValue(\"//tr[3]/td[2]/span/span/span/input\"));\n\t\tassertEquals(RuntimeVariables.replace(\"The third\"),\n\t\t\tselenium.getText(\"//tr[3]/td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//tr[3]/td[4]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[3]/td[5]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[3]/td[6]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0 (Approved)\"),\n\t\t\tselenium.getText(\"//tr[3]/td[7]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[3]/td[8]\"));\n\t}","id":53214,"modified_method":"public void testAddKBAArticleSectionsAS() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Knowledge Base (Admin)\",\n\t\t\tRuntimeVariables.replace(\"Knowledge Base (Admin)\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Article']\",\n\t\t\tRuntimeVariables.replace(\"Add Article\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_1_WAR_knowledgebaseportlet_title']\",\n\t\t\tRuntimeVariables.replace(\"The third\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_1_WAR_knowledgebaseportlet_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__1_WAR_knowledgebaseportlet_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__1_WAR_knowledgebaseportlet_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Number three detailing the specifics of Tomcat and Jboss\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_1_WAR_knowledgebaseportlet_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__1_WAR_knowledgebaseportlet_editor']/iframe\");\n\t\tselenium.selectFrame(\n\t\t\t\"//td[@id='cke_contents__1_WAR_knowledgebaseportlet_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\",\n\t\t\t\"Number three detailing the specifics of Tomcat and Jboss\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.addSelection(\"//select[@id='_1_WAR_knowledgebaseportlet_sections']\",\n\t\t\tRuntimeVariables.replace(\"Application Server\"));\n\t\tassertEquals(\"Application Server\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_1_WAR_knowledgebaseportlet_sections']\"));\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.clickAt(\"link=Knowledge Base (Admin)\",\n\t\t\tRuntimeVariables.replace(\"Knowledge Base (Admin)\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@name='_1_WAR_knowledgebaseportlet_keywords']\",\n\t\t\tRuntimeVariables.replace(\"third\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(\"1.0\",\n\t\t\tselenium.getValue(\"//tr[3]/td[2]/span/span/span/input\"));\n\t\tassertEquals(RuntimeVariables.replace(\"The third\"),\n\t\t\tselenium.getText(\"//tr[3]/td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//tr[3]/td[4]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[3]/td[5]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[3]/td[6]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0 (Approved)\"),\n\t\t\tselenium.getText(\"//tr[3]/td[7]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[3]/td[8]\"));\n\t}","commit_id":"6038952a2d932f3171a2410c1d04081af025e198","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddKBAArticleSectionsCM() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Knowledge Base (Admin)\",\n\t\t\tRuntimeVariables.replace(\"Knowledge Base (Admin)\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Article']\",\n\t\t\tRuntimeVariables.replace(\"Add Article\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_1_WAR_knowledgebaseportlet_title']\",\n\t\t\tRuntimeVariables.replace(\"Knowledge Base Article 1\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_1_WAR_knowledgebaseportlet_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__1_WAR_knowledgebaseportlet_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__1_WAR_knowledgebaseportlet_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"This is the content of Article 1\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_1_WAR_knowledgebaseportlet_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__1_WAR_knowledgebaseportlet_editor']/iframe\");\n\t\tselenium.selectFrame(\n\t\t\t\"//td[@id='cke_contents__1_WAR_knowledgebaseportlet_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"This is the content of Article 1\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.addSelection(\"//select[@id='_1_WAR_knowledgebaseportlet_sections']\",\n\t\t\tRuntimeVariables.replace(\"Content Management\"));\n\t\tassertEquals(\"Content Management\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_1_WAR_knowledgebaseportlet_sections']\"));\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Knowledge Base (Admin)\",\n\t\t\tRuntimeVariables.replace(\"Knowledge Base (Admin)\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@name='_1_WAR_knowledgebaseportlet_keywords']\",\n\t\t\tRuntimeVariables.replace(\"1\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(\"1.0\",\n\t\t\tselenium.getValue(\"//tr[3]/td[2]/span/span/span/input\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Knowledge Base Article 1\"),\n\t\t\tselenium.getText(\"//tr[3]/td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//tr[3]/td[4]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[3]/td[5]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[3]/td[6]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0 (Approved)\"),\n\t\t\tselenium.getText(\"//tr[3]/td[7]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[3]/td[8]\"));\n\t}","id":53215,"modified_method":"public void testAddKBAArticleSectionsCM() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Knowledge Base (Admin)\",\n\t\t\tRuntimeVariables.replace(\"Knowledge Base (Admin)\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Article']\",\n\t\t\tRuntimeVariables.replace(\"Add Article\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_1_WAR_knowledgebaseportlet_title']\",\n\t\t\tRuntimeVariables.replace(\"Knowledge Base Article 1\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_1_WAR_knowledgebaseportlet_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__1_WAR_knowledgebaseportlet_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__1_WAR_knowledgebaseportlet_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\"This is the content of Article 1\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_1_WAR_knowledgebaseportlet_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__1_WAR_knowledgebaseportlet_editor']/iframe\");\n\t\tselenium.selectFrame(\n\t\t\t\"//td[@id='cke_contents__1_WAR_knowledgebaseportlet_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"This is the content of Article 1\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.addSelection(\"//select[@id='_1_WAR_knowledgebaseportlet_sections']\",\n\t\t\tRuntimeVariables.replace(\"Content Management\"));\n\t\tassertEquals(\"Content Management\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_1_WAR_knowledgebaseportlet_sections']\"));\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.clickAt(\"link=Knowledge Base (Admin)\",\n\t\t\tRuntimeVariables.replace(\"Knowledge Base (Admin)\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@name='_1_WAR_knowledgebaseportlet_keywords']\",\n\t\t\tRuntimeVariables.replace(\"1\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(\"1.0\",\n\t\t\tselenium.getValue(\"//tr[3]/td[2]/span/span/span/input\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Knowledge Base Article 1\"),\n\t\t\tselenium.getText(\"//tr[3]/td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//tr[3]/td[4]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[3]/td[5]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[3]/td[6]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0 (Approved)\"),\n\t\t\tselenium.getText(\"//tr[3]/td[7]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[3]/td[8]\"));\n\t}","commit_id":"6038952a2d932f3171a2410c1d04081af025e198","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddKBAArticleSectionsDevelopment()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Knowledge Base (Admin)\",\n\t\t\tRuntimeVariables.replace(\"Knowledge Base (Admin)\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Article']\",\n\t\t\tRuntimeVariables.replace(\"Add Article\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_1_WAR_knowledgebaseportlet_title']\",\n\t\t\tRuntimeVariables.replace(\"Knowledge Base Article 2\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_1_WAR_knowledgebaseportlet_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__1_WAR_knowledgebaseportlet_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__1_WAR_knowledgebaseportlet_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Testing another publication of the article\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_1_WAR_knowledgebaseportlet_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__1_WAR_knowledgebaseportlet_editor']/iframe\");\n\t\tselenium.selectFrame(\n\t\t\t\"//td[@id='cke_contents__1_WAR_knowledgebaseportlet_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\",\n\t\t\t\"Testing another publication of the article\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.addSelection(\"//select[@id='_1_WAR_knowledgebaseportlet_sections']\",\n\t\t\tRuntimeVariables.replace(\"Development\"));\n\t\tassertEquals(\"Development\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_1_WAR_knowledgebaseportlet_sections']\"));\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Knowledge Base (Admin)\",\n\t\t\tRuntimeVariables.replace(\"Knowledge Base (Admin)\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@name='_1_WAR_knowledgebaseportlet_keywords']\",\n\t\t\tRuntimeVariables.replace(\"2\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(\"1.0\",\n\t\t\tselenium.getValue(\"//tr[3]/td[2]/span/span/span/input\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Knowledge Base Article 2\"),\n\t\t\tselenium.getText(\"//tr[3]/td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//tr[3]/td[4]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[3]/td[5]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[3]/td[6]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0 (Approved)\"),\n\t\t\tselenium.getText(\"//tr[3]/td[7]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[3]/td[8]\"));\n\t}","id":53216,"modified_method":"public void testAddKBAArticleSectionsDevelopment()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Knowledge Base (Admin)\",\n\t\t\tRuntimeVariables.replace(\"Knowledge Base (Admin)\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Article']\",\n\t\t\tRuntimeVariables.replace(\"Add Article\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_1_WAR_knowledgebaseportlet_title']\",\n\t\t\tRuntimeVariables.replace(\"Knowledge Base Article 2\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_1_WAR_knowledgebaseportlet_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__1_WAR_knowledgebaseportlet_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__1_WAR_knowledgebaseportlet_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Testing another publication of the article\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_1_WAR_knowledgebaseportlet_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__1_WAR_knowledgebaseportlet_editor']/iframe\");\n\t\tselenium.selectFrame(\n\t\t\t\"//td[@id='cke_contents__1_WAR_knowledgebaseportlet_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\",\n\t\t\t\"Testing another publication of the article\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.addSelection(\"//select[@id='_1_WAR_knowledgebaseportlet_sections']\",\n\t\t\tRuntimeVariables.replace(\"Development\"));\n\t\tassertEquals(\"Development\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_1_WAR_knowledgebaseportlet_sections']\"));\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.clickAt(\"link=Knowledge Base (Admin)\",\n\t\t\tRuntimeVariables.replace(\"Knowledge Base (Admin)\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@name='_1_WAR_knowledgebaseportlet_keywords']\",\n\t\t\tRuntimeVariables.replace(\"2\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(\"1.0\",\n\t\t\tselenium.getValue(\"//tr[3]/td[2]/span/span/span/input\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Knowledge Base Article 2\"),\n\t\t\tselenium.getText(\"//tr[3]/td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//tr[3]/td[4]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[3]/td[5]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[3]/td[6]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0 (Approved)\"),\n\t\t\tselenium.getText(\"//tr[3]/td[7]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[3]/td[8]\"));\n\t}","commit_id":"6038952a2d932f3171a2410c1d04081af025e198","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddKBAArticleSectionsPortlets() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Knowledge Base (Admin)\",\n\t\t\tRuntimeVariables.replace(\"Knowledge Base (Admin)\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Article']\",\n\t\t\tRuntimeVariables.replace(\"Add Article\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_1_WAR_knowledgebaseportlet_title']\",\n\t\t\tRuntimeVariables.replace(\"KB Admin Article\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_1_WAR_knowledgebaseportlet_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__1_WAR_knowledgebaseportlet_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__1_WAR_knowledgebaseportlet_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This is an article created from the KB Admin\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_1_WAR_knowledgebaseportlet_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__1_WAR_knowledgebaseportlet_editor']/iframe\");\n\t\tselenium.selectFrame(\n\t\t\t\"//td[@id='cke_contents__1_WAR_knowledgebaseportlet_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\",\n\t\t\t\"This is an article created from the KB Admin\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.addSelection(\"//select[@id='_1_WAR_knowledgebaseportlet_sections']\",\n\t\t\tRuntimeVariables.replace(\"Portlets\"));\n\t\tassertEquals(\"Portlets\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_1_WAR_knowledgebaseportlet_sections']\"));\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Knowledge Base (Admin)\",\n\t\t\tRuntimeVariables.replace(\"Knowledge Base (Admin)\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@name='_1_WAR_knowledgebaseportlet_keywords']\",\n\t\t\tRuntimeVariables.replace(\"Admin\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(\"1.0\",\n\t\t\tselenium.getValue(\"//tr[3]/td[2]/span/span/span/input\"));\n\t\tassertEquals(RuntimeVariables.replace(\"KB Admin Article\"),\n\t\t\tselenium.getText(\"//tr[3]/td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//tr[3]/td[4]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[3]/td[5]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[3]/td[6]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0 (Approved)\"),\n\t\t\tselenium.getText(\"//tr[3]/td[7]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[3]/td[8]\"));\n\t}","id":53217,"modified_method":"public void testAddKBAArticleSectionsPortlets() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Knowledge Base (Admin)\",\n\t\t\tRuntimeVariables.replace(\"Knowledge Base (Admin)\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Article']\",\n\t\t\tRuntimeVariables.replace(\"Add Article\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_1_WAR_knowledgebaseportlet_title']\",\n\t\t\tRuntimeVariables.replace(\"KB Admin Article\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_1_WAR_knowledgebaseportlet_editor' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__1_WAR_knowledgebaseportlet_editor']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__1_WAR_knowledgebaseportlet_editor']/textarea\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This is an article created from the KB Admin\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_1_WAR_knowledgebaseportlet_editor' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__1_WAR_knowledgebaseportlet_editor']/iframe\");\n\t\tselenium.selectFrame(\n\t\t\t\"//td[@id='cke_contents__1_WAR_knowledgebaseportlet_editor']/iframe\");\n\t\tselenium.waitForText(\"//body\",\n\t\t\t\"This is an article created from the KB Admin\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.addSelection(\"//select[@id='_1_WAR_knowledgebaseportlet_sections']\",\n\t\t\tRuntimeVariables.replace(\"Portlets\"));\n\t\tassertEquals(\"Portlets\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@id='_1_WAR_knowledgebaseportlet_sections']\"));\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.clickAt(\"link=Knowledge Base (Admin)\",\n\t\t\tRuntimeVariables.replace(\"Knowledge Base (Admin)\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@name='_1_WAR_knowledgebaseportlet_keywords']\",\n\t\t\tRuntimeVariables.replace(\"Admin\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(\"1.0\",\n\t\t\tselenium.getValue(\"//tr[3]/td[2]/span/span/span/input\"));\n\t\tassertEquals(RuntimeVariables.replace(\"KB Admin Article\"),\n\t\t\tselenium.getText(\"//tr[3]/td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//tr[3]/td[4]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[3]/td[5]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[3]/td[6]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0 (Approved)\"),\n\t\t\tselenium.getText(\"//tr[3]/td[7]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[3]/td[8]\"));\n\t}","commit_id":"6038952a2d932f3171a2410c1d04081af025e198","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletKBSSectionsAS() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Knowledge Base Section Test Page\");\n\t\tselenium.clickAt(\"link=Knowledge Base Section Test Page\",\n\t\t\tRuntimeVariables.replace(\"Knowledge Base Section Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"General \\n No articles were found.\"),\n\t\t\tselenium.getText(\"//section/div/div/div[@class='portlet-body']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\"//select[@id='_86_kbArticlesSections']\");\n\t\tselenium.addSelection(\"//select[@id='_86_kbArticlesSections']\",\n\t\t\tRuntimeVariables.replace(\"Application Server\"));\n\t\tassertEquals(\"Application Server\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_kbArticlesSections']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.waitForVisible(\"//div[@class='kb-articles-sections-title']\");\n\t\tselenium.waitForVisible(\"//div[@class='kb-articles']/div/span/a/span\");\n\t\tassertEquals(RuntimeVariables.replace(\"Application Server\"),\n\t\t\tselenium.getText(\"//div[@class='kb-articles-sections-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"The third\"),\n\t\t\tselenium.getText(\"//div[@class='kb-articles']/div/span/a/span\"));\n\t}","id":53218,"modified_method":"public void testConfigurePortletKBSSectionsAS() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Knowledge Base Section Test Page\",\n\t\t\tRuntimeVariables.replace(\"Knowledge Base Section Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//section/div/div/div[@class='portlet-body']\", \"General\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//section/div/div/div[@class='portlet-body']\",\n\t\t\t\t\"No articles were found.\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_kbArticlesSections']\");\n\t\tselenium.select(\"//select[@id='_86_kbArticlesSections']\",\n\t\t\tRuntimeVariables.replace(\"Application Server\"));\n\t\tassertEquals(\"Application Server\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_kbArticlesSections']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForVisible(\"//div[@class='kb-articles-sections-title']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Application Server\"),\n\t\t\tselenium.getText(\"//div[@class='kb-articles-sections-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"The third\"),\n\t\t\tselenium.getText(\"//div[@class='kb-articles']/div/span/a/span\"));\n\t}","commit_id":"6038952a2d932f3171a2410c1d04081af025e198","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteKBAArticleSectionsCMKBAr() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Knowledge Base Article Test Page\");\n\t\tselenium.clickAt(\"link=Knowledge Base Article Test Page\",\n\t\t\tRuntimeVariables.replace(\"Knowledge Base Article Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Knowledge Base Article 1\"),\n\t\t\tselenium.getText(\"//div[@class='kb-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='kb-article-icons']/table/tbody/tr/td[4]/span/a\"));\n\t\tselenium.clickAt(\"//div[@class='kb-article-icons']/table/tbody/tr/td[4]/span/a\",\n\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"The selected article no longer exists.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t}","id":53219,"modified_method":"public void testDeleteKBAArticleSectionsCMKBAr() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Knowledge Base Article Test Page\",\n\t\t\tRuntimeVariables.replace(\"Knowledge Base Article Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Knowledge Base Article 1\"),\n\t\t\tselenium.getText(\"//div[@class='kb-title']\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='kb-article-icons']/table/tbody/tr/td/span/a[contains(.,'Delete')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='kb-article-icons']/table/tbody/tr/td/span/a[contains(.,'Delete')]\"));\n\t\tselenium.clickAt(\"//div[@class='kb-article-icons']/table/tbody/tr/td/span/a[contains(.,'Delete')]\",\n\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"The selected article no longer exists.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t}","commit_id":"6038952a2d932f3171a2410c1d04081af025e198","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteKBAArticleSectionsPortletsKBD()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Knowledge Base Display Test Page\");\n\t\tselenium.clickAt(\"link=Knowledge Base Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Knowledge Base Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"KB Admin Article\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]/a\"));\n\t\tselenium.clickAt(\"//tr[3]/td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"KB Admin Article\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"KB Admin Article\"),\n\t\t\tselenium.getText(\"//div[@class='kb-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='kb-article-icons']/table/tbody/tr/td[5]/span/a\"));\n\t\tselenium.clickAt(\"//div[@class='kb-article-icons']/table/tbody/tr/td[5]/span/a\",\n\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertFalse(selenium.isTextPresent(\"KBA Article Portlets Title\"));\n\t}","id":53220,"modified_method":"public void testDeleteKBAArticleSectionsPortletsKBD()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Knowledge Base Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Knowledge Base Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"KB Admin Article\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]/a\"));\n\t\tselenium.clickAt(\"//tr[3]/td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"KB Admin Article\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"KB Admin Article\"),\n\t\t\tselenium.getText(\"//div[@class='kb-title']\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='kb-article-icons']/table/tbody/tr/td/span/a[contains(.,'Delete')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='kb-article-icons']/table/tbody/tr/td/span/a[contains(.,'Delete')]\"));\n\t\tselenium.clickAt(\"//div[@class='kb-article-icons']/table/tbody/tr/td/span/a[contains(.,'Delete')]\",\n\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertFalse(selenium.isTextPresent(\"KBA Article Portlets Title\"));\n\t}","commit_id":"6038952a2d932f3171a2410c1d04081af025e198","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditKBAArticleSectionsPortletsAttachment()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Knowledge Base (Admin)\",\n\t\t\tRuntimeVariables.replace(\"Knowledge Base (Admin)\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"KB Admin Article\"),\n\t\t\tselenium.getText(\"//tr[3]/td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Attachments \\u00bb\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@id='_1_WAR_knowledgebaseportlet_attachments']/div/div/a\"));\n\t\tselenium.clickAt(\"//div[@id='_1_WAR_knowledgebaseportlet_attachments']/div/div/a\",\n\t\t\tRuntimeVariables.replace(\"Add Attachments \\u00bb\"));\n\t\tselenium.waitForPopUp(\"selectAttachments\",\n\t\t\tRuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"name=selectAttachments\");\n\t\tThread.sleep(5000);\n\t\tselenium.waitForVisible(\n\t\t\t\"//input[@id='_1_WAR_knowledgebaseportlet_file']\");\n\t\tselenium.uploadCommonFile(\"//input[@id='_1_WAR_knowledgebaseportlet_file']\",\n\t\t\tRuntimeVariables.replace(\"Document_1.jpg\"));\n\t\tselenium.waitForVisible(\"//a/span\");\n\t\tassertEquals(RuntimeVariables.replace(\"Document_1.jpg (12.9k)\"),\n\t\t\tselenium.getText(\"//a/span\"));\n\t\tselenium.close();\n\t\tThread.sleep(5000);\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@id='_1_WAR_knowledgebaseportlet_attachments']/div/div/span/a/span\");\n\t\tassertEquals(RuntimeVariables.replace(\"Document_1.jpg (12.9k)\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@id='_1_WAR_knowledgebaseportlet_attachments']/div/div/span/a/span\"));\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","id":53221,"modified_method":"public void testEditKBAArticleSectionsPortletsAttachment()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Knowledge Base (Admin)\",\n\t\t\tRuntimeVariables.replace(\"Knowledge Base (Admin)\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"KB Admin Article\"),\n\t\t\tselenium.getText(\"//tr[3]/td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\",\n\t\t\tRuntimeVariables.replace(\"Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Attachments \\u00bb\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@id='_1_WAR_knowledgebaseportlet_attachments']/div/div/a\"));\n\t\tselenium.clickAt(\"//div[@id='_1_WAR_knowledgebaseportlet_attachments']/div/div/a\",\n\t\t\tRuntimeVariables.replace(\"Add Attachments \\u00bb\"));\n\t\tThread.sleep(5000);\n\t\tselenium.selectWindow(\"title=Knowledge Base (Admin)\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//input[@id='_1_WAR_knowledgebaseportlet_file']\");\n\t\tselenium.uploadCommonFile(\"//input[@id='_1_WAR_knowledgebaseportlet_file']\",\n\t\t\tRuntimeVariables.replace(\"Document_1.jpg\"));\n\t\tselenium.waitForVisible(\"//a/span\");\n\t\tassertEquals(RuntimeVariables.replace(\"Document_1.jpg (12.9k)\"),\n\t\t\tselenium.getText(\"//a/span\"));\n\t\tselenium.close();\n\t\tThread.sleep(5000);\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@id='_1_WAR_knowledgebaseportlet_attachments']/div/div/span/a/span\");\n\t\tassertEquals(RuntimeVariables.replace(\"Document_1.jpg (12.9k)\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@id='_1_WAR_knowledgebaseportlet_attachments']/div/div/span/a/span\"));\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"6038952a2d932f3171a2410c1d04081af025e198","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSearchKBAArticleContentKBS() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Knowledge Base Search Test Page\");\n\t\tselenium.clickAt(\"link=Knowledge Base Search Test Page\",\n\t\t\tRuntimeVariables.replace(\"Knowledge Base Search Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_5_WAR_knowledgebaseportlet_keywords']\",\n\t\t\tRuntimeVariables.replace(\"content\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Knowledge Base Article 1\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t}","id":53222,"modified_method":"public void testSearchKBAArticleContentKBS() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Knowledge Base Search Test Page\",\n\t\t\tRuntimeVariables.replace(\"Knowledge Base Search Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_5_WAR_knowledgebaseportlet_keywords']\",\n\t\t\tRuntimeVariables.replace(\"content\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Knowledge Base Article 1\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t}","commit_id":"6038952a2d932f3171a2410c1d04081af025e198","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSearchKBAArticleKnowledgeKBS() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Knowledge Base Search Test Page\");\n\t\tselenium.clickAt(\"link=Knowledge Base Search Test Page\",\n\t\t\tRuntimeVariables.replace(\"Knowledge Base Search Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_5_WAR_knowledgebaseportlet_keywords']\",\n\t\t\tRuntimeVariables.replace(\"knowledge\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Knowledge Base Article 2\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Knowledge Base Article 1\"),\n\t\t\tselenium.getText(\"//tr[4]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//tr[4]/td[2]/a\"));\n\t}","id":53223,"modified_method":"public void testSearchKBAArticleKnowledgeKBS() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Knowledge Base Search Test Page\",\n\t\t\tRuntimeVariables.replace(\"Knowledge Base Search Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_5_WAR_knowledgebaseportlet_keywords']\",\n\t\t\tRuntimeVariables.replace(\"knowledge\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Knowledge Base Article 2\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Knowledge Base Article 1\"),\n\t\t\tselenium.getText(\"//tr[4]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//tr[4]/td[2]/a\"));\n\t}","commit_id":"6038952a2d932f3171a2410c1d04081af025e198","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSearchKBAArticleTomcatKBS() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Knowledge Base Search Test Page\");\n\t\tselenium.clickAt(\"link=Knowledge Base Search Test Page\",\n\t\t\tRuntimeVariables.replace(\"Knowledge Base Search Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_5_WAR_knowledgebaseportlet_keywords']\",\n\t\t\tRuntimeVariables.replace(\"tomcat\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"The third\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t}","id":53224,"modified_method":"public void testSearchKBAArticleTomcatKBS() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Knowledge Base Search Test Page\",\n\t\t\tRuntimeVariables.replace(\"Knowledge Base Search Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_5_WAR_knowledgebaseportlet_keywords']\",\n\t\t\tRuntimeVariables.replace(\"tomcat\"));\n\t\tselenium.clickAt(\"//input[@value='Search']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"The third\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t}","commit_id":"6038952a2d932f3171a2410c1d04081af025e198","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectKBAArticleSectionsCMKBAr() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Knowledge Base Article Test Page\");\n\t\tselenium.clickAt(\"link=Knowledge Base Article Test Page\",\n\t\t\tRuntimeVariables.replace(\"Knowledge Base Article Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Please configure this portlet to make it visible to all users.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='portlet-configuration portlet-msg-info']/a\"));\n\t\tselenium.clickAt(\"//div[@class='portlet-configuration portlet-msg-info']/a\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Please configure this portlet to make it visible to all users.\"));\n\t\tselenium.waitForVisible(\"//div[@class='kb-edit-link']/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Select Article \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='kb-edit-link']/a\"));\n\t\tselenium.clickAt(\"//div[@class='kb-edit-link']/a\",\n\t\t\tRuntimeVariables.replace(\"Select Article \\u00bb\"));\n\t\tselenium.waitForPopUp(\"selectConfigurationKBArticle\",\n\t\t\tRuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"name=selectConfigurationKBArticle\");\n\t\tselenium.waitForVisible(\"//tr[5]/td[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Knowledge Base Article 1\"),\n\t\t\tselenium.getText(\"//tr[5]/td[1]/a\"));\n\t\tselenium.click(\"//tr[5]/td[7]/span/span/input[@value='Choose']\");\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.waitForText(\"//div[@id='_86_configurationKBArticle']\",\n\t\t\t\"Knowledge Base Article 1\");\n\t\tassertEquals(RuntimeVariables.replace(\"Knowledge Base Article 1\"),\n\t\t\tselenium.getText(\"//div[@id='_86_configurationKBArticle']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.waitForVisible(\"//div[@class='kb-title']\");\n\t\tselenium.waitForVisible(\"//div[@class='kb-entity-body']/p\");\n\t\tassertEquals(RuntimeVariables.replace(\"Knowledge Base Article 1\"),\n\t\t\tselenium.getText(\"//div[@class='kb-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is the content of Article 1\"),\n\t\t\tselenium.getText(\"//div[@class='kb-entity-body']/p\"));\n\t}","id":53225,"modified_method":"public void testSelectKBAArticleSectionsCMKBAr() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Knowledge Base Article Test Page\",\n\t\t\tRuntimeVariables.replace(\"Knowledge Base Article Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Please configure this portlet to make it visible to all users.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='portlet-configuration portlet-msg-info']/a\"));\n\t\tselenium.clickAt(\"//div[@class='portlet-configuration portlet-msg-info']/a\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Please configure this portlet to make it visible to all users.\"));\n\t\tThread.sleep(5000);\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForVisible(\"//div[@class='kb-edit-link']/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Select Article \\u00bb\"),\n\t\t\tselenium.getText(\"//div[@class='kb-edit-link']/a\"));\n\t\tselenium.clickAt(\"//div[@class='kb-edit-link']/a\",\n\t\t\tRuntimeVariables.replace(\"Select Article \\u00bb\"));\n\t\tThread.sleep(5000);\n\t\tselenium.selectWindow(\"title=Knowledge Base Article\");\n\t\tselenium.waitForVisible(\"//tr[5]/td[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Knowledge Base Article 1\"),\n\t\t\tselenium.getText(\"//tr[5]/td[1]/a\"));\n\t\tselenium.click(\"//tr[5]/td[7]/span/span/input[@value='Choose']\");\n\t\tThread.sleep(5000);\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForText(\"//div[@id='_86_configurationKBArticle']\",\n\t\t\t\"Knowledge Base Article 1\");\n\t\tassertEquals(RuntimeVariables.replace(\"Knowledge Base Article 1\"),\n\t\t\tselenium.getText(\"//div[@id='_86_configurationKBArticle']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForVisible(\"//div[@class='kb-title']\");\n\t\tselenium.waitForVisible(\"//div[@class='kb-entity-body']/p\");\n\t\tassertEquals(RuntimeVariables.replace(\"Knowledge Base Article 1\"),\n\t\t\tselenium.getText(\"//div[@class='kb-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is the content of Article 1\"),\n\t\t\tselenium.getText(\"//div[@class='kb-entity-body']/p\"));\n\t}","commit_id":"6038952a2d932f3171a2410c1d04081af025e198","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownKBAArticle() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Knowledge Base (Admin)\",\n\t\t\t\t\tRuntimeVariables.replace(\"Knowledge Base (Admin)\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean KBArticlePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//input[@name='_1_WAR_knowledgebaseportlet_rowIds']\");\n\n\t\t\t\tif (!KBArticlePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@name='_1_WAR_knowledgebaseportlet_allRowIds']\"));\n\t\t\t\tselenium.clickAt(\"//input[@name='_1_WAR_knowledgebaseportlet_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Single Row\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@name='_1_WAR_knowledgebaseportlet_allRowIds']\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//tr[contains(@class,'results-row last selected')]\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected articles[\\\\s\\\\S]$\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"No articles were found.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":53226,"modified_method":"public void testTearDownKBAArticle() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Knowledge Base (Admin)\",\n\t\t\t\t\tRuntimeVariables.replace(\"Knowledge Base (Admin)\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean KBArticlePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//input[@name='_1_WAR_knowledgebaseportlet_rowIds']\");\n\n\t\t\t\tif (!KBArticlePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@name='_1_WAR_knowledgebaseportlet_allRowIds']\"));\n\t\t\t\tselenium.clickAt(\"//input[@name='_1_WAR_knowledgebaseportlet_allRowIds']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Single Row\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@name='_1_WAR_knowledgebaseportlet_allRowIds']\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//tr[contains(@class,'selected')]\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected articles[\\\\s\\\\S]$\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"No articles were found.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"6038952a2d932f3171a2410c1d04081af025e198","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewConfigurePortletKBSSectionsAS()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Knowledge Base Section Test Page\");\n\t\tselenium.clickAt(\"link=Knowledge Base Section Test Page\",\n\t\t\tRuntimeVariables.replace(\"Knowledge Base Section Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Application Server\"),\n\t\t\tselenium.getText(\"//div[@class='kb-articles-sections-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"The third\"),\n\t\t\tselenium.getText(\"//div[@class='kb-articles']/div/span/a/span\"));\n\t\tselenium.clickAt(\"//div[@class='kb-articles']/div/span/a/span\",\n\t\t\tRuntimeVariables.replace(\"The third\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"The third\"),\n\t\t\tselenium.getText(\"//div[@class='kb-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Number three detailing the specifics of Tomcat and Jboss\"),\n\t\t\tselenium.getText(\"//div[@class='kb-entity-body']/p\"));\n\t}","id":53227,"modified_method":"public void testViewConfigurePortletKBSSectionsAS()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Knowledge Base Section Test Page\",\n\t\t\tRuntimeVariables.replace(\"Knowledge Base Section Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Application Server\"),\n\t\t\tselenium.getText(\"//div[@class='kb-articles-sections-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"The third\"),\n\t\t\tselenium.getText(\"//div[@class='kb-articles']/div/span/a/span\"));\n\t\tselenium.clickAt(\"//div[@class='kb-articles']/div/span/a/span\",\n\t\t\tRuntimeVariables.replace(\"The third\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"The third\"),\n\t\t\tselenium.getText(\"//div[@class='kb-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Number three detailing the specifics of Tomcat and Jboss\"),\n\t\t\tselenium.getText(\"//div[@class='kb-entity-body']/p\"));\n\t}","commit_id":"6038952a2d932f3171a2410c1d04081af025e198","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewEditKBAArticleSectionsPortletsAttachment()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Knowledge Base Display Test Page\");\n\t\tselenium.clickAt(\"link=Knowledge Base Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Knowledge Base Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"KB Admin Article\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]/a\"));\n\t\tselenium.clickAt(\"//tr[3]/td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"KB Admin Article\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Document_1.jpg (12.9k)\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='kb-article-attachments']/div/span/a/span\"));\n\t}","id":53228,"modified_method":"public void testViewEditKBAArticleSectionsPortletsAttachment()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Knowledge Base Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Knowledge Base Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"KB Admin Article\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]/a\"));\n\t\tselenium.clickAt(\"//tr[3]/td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"KB Admin Article\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Document_1.jpg (13k)\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='kb-article-attachments']/div/span/a/span\"));\n\t}","commit_id":"6038952a2d932f3171a2410c1d04081af025e198","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewKBAArticleSectionsPortlets() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Knowledge Base Display Test Page\");\n\t\tselenium.clickAt(\"link=Knowledge Base Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Knowledge Base Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"KB Admin Article\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//tr[3]/td[3]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[3]/td[4]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[3]/td[5]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0 (Approved)\"),\n\t\t\tselenium.getText(\"//tr[3]/td[6]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[3]/td[7]/a\"));\n\t\tselenium.clickAt(\"//tr[3]/td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"KB Admin Article\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"KB Admin Article\"),\n\t\t\tselenium.getText(\"//div[@class='kb-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is an article created from the KB Admin\"),\n\t\t\tselenium.getText(\"//div[@class='kb-entity-body']/p\"));\n\t}","id":53229,"modified_method":"public void testViewKBAArticleSectionsPortlets() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Knowledge Base Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Knowledge Base Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"KB Admin Article\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'KB Admin Article')]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'KB Admin Article')]/td[3]/a\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//tr[contains(.,'KB Admin Article')]/td[4]/a\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//tr[contains(.,'KB Admin Article')]/td[5]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0 (Approved)\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'KB Admin Article')]/td[6]/a\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//tr[contains(.,'KB Admin Article')]/td[7]/a\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'KB Admin Article')]/td[7]/a\",\n\t\t\tRuntimeVariables.replace(\"KB Admin Article\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"KB Admin Article\"),\n\t\t\tselenium.getText(\"//div[@class='kb-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is an article created from the KB Admin\"),\n\t\t\tselenium.getText(\"//div[@class='kb-entity-body']/p\"));\n\t}","commit_id":"6038952a2d932f3171a2410c1d04081af025e198","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewSelectKBAArticleSectionsCMKBAr()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Knowledge Base Article Test Page\");\n\t\tselenium.clickAt(\"link=Knowledge Base Article Test Page\",\n\t\t\tRuntimeVariables.replace(\"Knowledge Base Article Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Knowledge Base Article 1\"),\n\t\t\tselenium.getText(\"//div[@class='kb-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is the content of Article 1\"),\n\t\t\tselenium.getText(\"//div[@class='kb-entity-body']/p\"));\n\t}","id":53230,"modified_method":"public void testViewSelectKBAArticleSectionsCMKBAr()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Knowledge Base Article Test Page\",\n\t\t\tRuntimeVariables.replace(\"Knowledge Base Article Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Knowledge Base Article 1\"),\n\t\t\tselenium.getText(\"//div[@class='kb-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is the content of Article 1\"),\n\t\t\tselenium.getText(\"//div[@class='kb-entity-body']/p\"));\n\t}","commit_id":"6038952a2d932f3171a2410c1d04081af025e198","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSearchWCWebContentQuotesWCS() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Web Content Search Test Page\");\n\t\tselenium.clickAt(\"link=Web Content Search Test Page\",\n\t\t\tRuntimeVariables.replace(\"Web Content Search Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_77_keywords']\",\n\t\t\tRuntimeVariables.replace(\"\\\"WC WebContent Title\\\"\"));\n\t\tselenium.clickAt(\"//input[@type='image']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"WC WebContent Title\"));\n\t\tassertTrue(selenium.isTextPresent(\"WC WebContent Content\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Web Content Search Test Page\");\n\t\tselenium.clickAt(\"link=Web Content Search Test Page\",\n\t\t\tRuntimeVariables.replace(\"Web Content Search Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_77_keywords']\",\n\t\t\tRuntimeVariables.replace(\"\\\"WC1 WebContent1 Title1\\\"\"));\n\t\tselenium.clickAt(\"//input[@type='image']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"WC WebContent Title\"));\n\t\tassertFalse(selenium.isTextPresent(\"WC WebContent Content\"));\n\t}","id":53231,"modified_method":"public void testSearchWCWebContentQuotesWCS() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Web Content Search Test Page\",\n\t\t\tRuntimeVariables.replace(\"Web Content Search Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_77_keywords']\",\n\t\t\tRuntimeVariables.replace(\"\\\"WC WebContent Title\\\"\"));\n\t\tselenium.clickAt(\"//input[@type='image']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'WC WebContent Title')]/td[3]\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//tr[contains(.,'WC WebContent Title')]/td[4]\",\n\t\t\t\t\"WC WebContent Content\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Web Content Search Test Page\",\n\t\t\tRuntimeVariables.replace(\"Web Content Search Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_77_keywords']\",\n\t\t\tRuntimeVariables.replace(\"\\\"WC1 WebContent1 Title1\\\"\"));\n\t\tselenium.clickAt(\"//input[@type='image']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"WC WebContent Title\"));\n\t\tassertFalse(selenium.isTextPresent(\"WC WebContent Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"No pages were found that matched the keywords: \\\"WC1 WebContent1 Title1\\\".\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t}","commit_id":"a8d3221593f2fccb7b0825eafc369ce384beea8f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSearchWCWebContentWCDQuotesWCS() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Web Content Search Test Page\");\n\t\tselenium.clickAt(\"link=Web Content Search Test Page\",\n\t\t\tRuntimeVariables.replace(\"Web Content Search Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_77_keywords']\",\n\t\t\tRuntimeVariables.replace(\"\\\"WC WebContent Title\\\"\"));\n\t\tselenium.clickAt(\"//input[@type='image']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\tassertTrue(selenium.isPartialText(\"//tr[3]/td[3]\",\n\t\t\t\t\"WC WebContent Content\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Web Content Search Test Page\");\n\t\tselenium.clickAt(\"link=Web Content Search Test Page\",\n\t\t\tRuntimeVariables.replace(\"Web Content Search Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_77_keywords']\",\n\t\t\tRuntimeVariables.replace(\"\\\"WC1 WebContent1 Title1\\\"\"));\n\t\tselenium.clickAt(\"//input[@type='image']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"WC WebContent Title\"));\n\t\tassertFalse(selenium.isTextPresent(\"WC WebContent Content\"));\n\t}","id":53232,"modified_method":"public void testSearchWCWebContentWCDQuotesWCS() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Web Content Search Test Page\",\n\t\t\tRuntimeVariables.replace(\"Web Content Search Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_77_keywords']\",\n\t\t\tRuntimeVariables.replace(\"\\\"WC WebContent Title\\\"\"));\n\t\tselenium.clickAt(\"//input[@type='image']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'WC WebContent Title')]/td[3]\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//tr[contains(.,'WC WebContent Title')]/td[4]\",\n\t\t\t\t\"WC WebContent Content\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Web Content Search Test Page\",\n\t\t\tRuntimeVariables.replace(\"Web Content Search Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_77_keywords']\",\n\t\t\tRuntimeVariables.replace(\"\\\"WC1 WebContent1 Title1\\\"\"));\n\t\tselenium.clickAt(\"//input[@type='image']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"WC WebContent Title\"));\n\t\tassertFalse(selenium.isTextPresent(\"WC WebContent Content\"));\n\t}","commit_id":"a8d3221593f2fccb7b0825eafc369ce384beea8f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSearchWCWebContentWCDWCS() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Web Content Search Test Page\");\n\t\tselenium.clickAt(\"link=Web Content Search Test Page\",\n\t\t\tRuntimeVariables.replace(\"Web Content Search Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_77_keywords']\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Title\"));\n\t\tselenium.clickAt(\"//input[@type='image']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\tassertTrue(selenium.isPartialText(\"//tr[3]/td[3]\",\n\t\t\t\t\"WC WebContent Content\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Web Content Search Test Page\");\n\t\tselenium.clickAt(\"link=Web Content Search Test Page\",\n\t\t\tRuntimeVariables.replace(\"Web Content Search Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_77_keywords']\",\n\t\t\tRuntimeVariables.replace(\"WC1 WebContent1 Title1\"));\n\t\tselenium.clickAt(\"//input[@type='image']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"WC WebContent Title\"));\n\t\tassertFalse(selenium.isTextPresent(\"WC WebContent Content\"));\n\t}","id":53233,"modified_method":"public void testSearchWCWebContentWCDWCS() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Web Content Search Test Page\",\n\t\t\tRuntimeVariables.replace(\"Web Content Search Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_77_keywords']\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Title\"));\n\t\tselenium.clickAt(\"//input[@type='image']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'WC WebContent Title')]/td[3]\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//tr[contains(.,'WC WebContent Title')]/td[4]\",\n\t\t\t\t\"WC WebContent Content\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Web Content Search Test Page\",\n\t\t\tRuntimeVariables.replace(\"Web Content Search Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_77_keywords']\",\n\t\t\tRuntimeVariables.replace(\"WC1 WebContent1 Title1\"));\n\t\tselenium.clickAt(\"//input[@type='image']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"WC WebContent Title\"));\n\t\tassertFalse(selenium.isTextPresent(\"WC WebContent Content\"));\n\t}","commit_id":"a8d3221593f2fccb7b0825eafc369ce384beea8f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSearchWCWebContentWCS() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Web Content Search Test Page\");\n\t\tselenium.clickAt(\"link=Web Content Search Test Page\",\n\t\t\tRuntimeVariables.replace(\"Web Content Search Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_77_keywords']\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Title\"));\n\t\tselenium.clickAt(\"//input[@type='image']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"WC WebContent Title\"));\n\t\tassertTrue(selenium.isTextPresent(\"WC WebContent Content\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Web Content Search Test Page\");\n\t\tselenium.clickAt(\"link=Web Content Search Test Page\",\n\t\t\tRuntimeVariables.replace(\"Web Content Search Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_77_keywords']\",\n\t\t\tRuntimeVariables.replace(\"WC1 WebContent1 Title1\"));\n\t\tselenium.clickAt(\"//input[@type='image']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"WC WebContent Title\"));\n\t\tassertFalse(selenium.isTextPresent(\"WC WebContent Content\"));\n\t}","id":53234,"modified_method":"public void testSearchWCWebContentWCS() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Web Content Search Test Page\",\n\t\t\tRuntimeVariables.replace(\"Web Content Search Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_77_keywords']\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Title\"));\n\t\tselenium.clickAt(\"//input[@type='image']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'WC WebContent Title')]/td[3]\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//tr[contains(.,'WC WebContent Title')]/td[4]\",\n\t\t\t\t\"WC WebContent Content\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Web Content Search Test Page\",\n\t\t\tRuntimeVariables.replace(\"Web Content Search Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_77_keywords']\",\n\t\t\tRuntimeVariables.replace(\"WC1 WebContent1 Title1\"));\n\t\tselenium.clickAt(\"//input[@type='image']\",\n\t\t\tRuntimeVariables.replace(\"Search\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"WC WebContent Title\"));\n\t\tassertFalse(selenium.isTextPresent(\"WC WebContent Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"No pages were found that matched the keywords: WC1 WebContent1 Title1.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t}","commit_id":"a8d3221593f2fccb7b0825eafc369ce384beea8f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectWCWebContentWCD() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Web Content Display Test Page\");\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Web Content Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//strong/a\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tselenium.waitForVisible(\"//td[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tselenium.clickAt(\"//td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Title\"));\n\t\tselenium.waitForText(\"//span[@class='displaying-article-id modified']\",\n\t\t\t\"WC WebContent Title (Modified)\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title (Modified)\"),\n\t\t\tselenium.getText(\"//span[@class='displaying-article-id modified']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Web Content Display Test Page\");\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Web Content Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Content\"),\n\t\t\tselenium.getText(\"//div[@class='journal-content-article']/p\"));\n\t}","id":53235,"modified_method":"public void testSelectWCWebContentWCD() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Web Content Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'WC WebContent Title')]/td[2]/a\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'WC WebContent Title')]/td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Title\"));\n\t\tselenium.waitForText(\"//span[@class='displaying-article-id modified']\",\n\t\t\t\"WC WebContent Title (Modified)\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title (Modified)\"),\n\t\t\tselenium.getText(\"//span[@class='displaying-article-id modified']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Web Content Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Web Content Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Content\"),\n\t\t\tselenium.getText(\"//div[@class='journal-content-article']/p\"));\n\t}","commit_id":"a8d3221593f2fccb7b0825eafc369ce384beea8f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletIFrame1() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=IFrame Test Page\",\n\t\t\tRuntimeVariables.replace(\"IFrame Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.type(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"i\"));\n\t\tselenium.keyDown(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"\\\\13\"));\n\t\tselenium.keyUp(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"\\\\13\"));\n\t\tselenium.waitForVisible(\"//div[@title='IFrame']/p/a\");\n\t\tselenium.clickAt(\"//div[@title='IFrame']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":53236,"modified_method":"public void testAddPortletIFrame1() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=IFrame Test Page\",\n\t\t\tRuntimeVariables.replace(\"IFrame Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"i\"));\n\t\tselenium.waitForVisible(\"//div[@title='IFrame']/p/a\");\n\t\tselenium.clickAt(\"//div[@title='IFrame']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"03438205b2fe6638f6ab75ccd7f75f4e035149ee","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletIFrame2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=IFrame Test Page\",\n\t\t\tRuntimeVariables.replace(\"IFrame Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.type(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"i\"));\n\t\tselenium.keyDown(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"\\\\13\"));\n\t\tselenium.keyUp(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"\\\\13\"));\n\t\tselenium.waitForVisible(\"//div[@title='IFrame']/p/a\");\n\t\tselenium.clickAt(\"//div[@title='IFrame']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tselenium.waitForVisible(\"//div[2]/div/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[2]/div/section\"));\n\t}","id":53237,"modified_method":"public void testAddPortletIFrame2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=IFrame Test Page\",\n\t\t\tRuntimeVariables.replace(\"IFrame Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"i\"));\n\t\tselenium.waitForVisible(\"//div[@title='IFrame']/p/a\");\n\t\tselenium.clickAt(\"//div[@title='IFrame']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tselenium.waitForVisible(\"//div[2]/div/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[2]/div/section\"));\n\t}","commit_id":"03438205b2fe6638f6ab75ccd7f75f4e035149ee","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletIFrame3() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=IFrame Test Page\",\n\t\t\tRuntimeVariables.replace(\"IFrame Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.type(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"i\"));\n\t\tselenium.keyDown(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"\\\\13\"));\n\t\tselenium.keyUp(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"\\\\13\"));\n\t\tselenium.waitForVisible(\"//div[@title='IFrame']/p/a\");\n\t\tselenium.clickAt(\"//div[@title='IFrame']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tselenium.waitForVisible(\"//div[2]/div/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[2]/div/section\"));\n\t\tselenium.waitForVisible(\"//div[3]/div/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[3]/div/section\"));\n\t}","id":53238,"modified_method":"public void testAddPortletIFrame3() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=IFrame Test Page\",\n\t\t\tRuntimeVariables.replace(\"IFrame Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"i\"));\n\t\tselenium.waitForVisible(\"//div[@title='IFrame']/p/a\");\n\t\tselenium.clickAt(\"//div[@title='IFrame']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tselenium.waitForVisible(\"//div[2]/div/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[2]/div/section\"));\n\t\tselenium.waitForVisible(\"//div[3]/div/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[3]/div/section\"));\n\t}","commit_id":"03438205b2fe6638f6ab75ccd7f75f4e035149ee","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletIFrame() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=IFrame Test Page\",\n\t\t\tRuntimeVariables.replace(\"IFrame Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.type(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"i\"));\n\t\tselenium.keyDown(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"\\\\13\"));\n\t\tselenium.keyUp(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"\\\\13\"));\n\t\tselenium.waitForVisible(\"//div[@title='IFrame']/p/a\");\n\t\tselenium.clickAt(\"//div[@title='IFrame']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":53239,"modified_method":"public void testAddPortletIFrame() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=IFrame Test Page\",\n\t\t\tRuntimeVariables.replace(\"IFrame Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"i\"));\n\t\tselenium.waitForVisible(\"//div[@title='IFrame']/p/a\");\n\t\tselenium.clickAt(\"//div[@title='IFrame']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"03438205b2fe6638f6ab75ccd7f75f4e035149ee","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletSourceURL() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=IFrame Test Page\");\n\t\tselenium.clickAt(\"link=IFrame Test Page\",\n\t\t\tRuntimeVariables.replace(\"IFrame Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//strong/a\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\"//input[@id='_86_src']\");\n\t\tselenium.type(\"//input[@id='_86_src']\",\n\t\t\tRuntimeVariables.replace(\"www.liferay.com\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=IFrame Test Page\");\n\t\tselenium.clickAt(\"link=IFrame Test Page\",\n\t\t\tRuntimeVariables.replace(\"IFrame Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//img[@alt='Liferay']\");\n\t\tassertTrue(selenium.isVisible(\"//img[@alt='Liferay']\"));\n\t}","id":53240,"modified_method":"public void testConfigurePortletSourceURL() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=IFrame Test Page\",\n\t\t\tRuntimeVariables.replace(\"IFrame Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//strong/a\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForVisible(\"//input[@id='_86_src']\");\n\t\tselenium.type(\"//input[@id='_86_src']\",\n\t\t\tRuntimeVariables.replace(\"www.liferay.com\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=IFrame Test Page\",\n\t\t\tRuntimeVariables.replace(\"IFrame Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//img[@alt='Liferay']\");\n\t\tassertTrue(selenium.isVisible(\"//img[@alt='Liferay']\"));\n\t}","commit_id":"03438205b2fe6638f6ab75ccd7f75f4e035149ee","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testRemovePortletIFrame() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=IFrame Test Page\");\n\t\tselenium.clickAt(\"link=IFrame Test Page\",\n\t\t\tRuntimeVariables.replace(\"IFrame Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\tselenium.waitForConfirmation(\n\t\t\t\"Are you sure you want to remove this component?\");\n\t\tselenium.waitForElementNotPresent(\"//section\");\n\t\tassertTrue(selenium.isElementNotPresent(\"//section\"));\n\t}","id":53241,"modified_method":"public void testRemovePortletIFrame() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=IFrame Test Page\",\n\t\t\tRuntimeVariables.replace(\"IFrame Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\tselenium.waitForConfirmation(\n\t\t\t\"Are you sure you want to remove this component?\");\n\t\tselenium.waitForElementNotPresent(\"//section\");\n\t\tassertTrue(selenium.isElementNotPresent(\"//section\"));\n\t}","commit_id":"03438205b2fe6638f6ab75ccd7f75f4e035149ee","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testArchive() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Web Form Test Page\");\n\t\tselenium.clickAt(\"link=Web Form Test Page\",\n\t\t\tRuntimeVariables.replace(\"Web Form Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//strong/a\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\"//div[@class='archived-setups']/span/a/img\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='archived-setups']/span/a/img\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_86_name']\",\n\t\t\tRuntimeVariables.replace(\"test archive\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"test archive\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t}","id":53242,"modified_method":"public void testArchive() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Web Form Test Page\",\n\t\t\tRuntimeVariables.replace(\"Web Form Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//div[@class='archived-setups']/span/a/img\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='archived-setups']/span/a/img\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_86_name']\",\n\t\t\tRuntimeVariables.replace(\"test archive\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"test archive\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"f06a287bbf3c0382e51d42368357001dc489c110","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditForm() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Web Form Test Page\");\n\t\tselenium.clickAt(\"link=Web Form Test Page\",\n\t\t\tRuntimeVariables.replace(\"Web Form Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Suggestions\"),\n\t\t\tselenium.getText(\"//legend/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your input is valuable to us. Please send us your suggestions.\"),\n\t\t\tselenium.getText(\"//em\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Name\"),\n\t\t\tselenium.getText(\"//div/span[1]/span/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Rating\"),\n\t\t\tselenium.getText(\"//span[2]/span/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Excellent Good Satisfactory Poor\"),\n\t\t\tselenium.getText(\"//select\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Comments\"),\n\t\t\tselenium.getText(\"//span[3]/span/label\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//strong/a\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tThread.sleep(5000);\n\t\tselenium.waitForVisible(\"//input[@id='_86_title_en_US']\");\n\t\tselenium.type(\"//input[@id='_86_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Feed Back\"));\n\t\tselenium.type(\"//textarea[@name='_86_description_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Please let us know what you think!\"));\n\t\tselenium.type(\"//input[@id='_86_fieldLabel1_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Your Name\"));\n\t\tselenium.type(\"//input[@id='_86_fieldLabel2_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Rate Us!\"));\n\t\tselenium.type(\"//input[@id='_86_fieldLabel3_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Additional Comments\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Web Form Test Page\");\n\t\tselenium.clickAt(\"link=Web Form Test Page\",\n\t\t\tRuntimeVariables.replace(\"Web Form Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Feed Back\"),\n\t\t\tselenium.getText(\"//legend/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Please let us know what you think!\"), selenium.getText(\"//em\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Your Name\"),\n\t\t\tselenium.getText(\"//div/span/span/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Rate Us!\"),\n\t\t\tselenium.getText(\"//span[2]/span/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Excellent Good Satisfactory Poor\"),\n\t\t\tselenium.getText(\"//select\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Additional Comments\"),\n\t\t\tselenium.getText(\"//span[3]/span/label\"));\n\t}","id":53243,"modified_method":"public void testEditForm() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Web Form Test Page\",\n\t\t\tRuntimeVariables.replace(\"Web Form Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Suggestions\"),\n\t\t\tselenium.getText(\"//legend/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your input is valuable to us. Please send us your suggestions.\"),\n\t\t\tselenium.getText(\"//em\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Name\"),\n\t\t\tselenium.getText(\"//div/span[1]/span/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Rating\"),\n\t\t\tselenium.getText(\"//span[2]/span/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Excellent Good Satisfactory Poor\"),\n\t\t\tselenium.getText(\"//select\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Comments\"),\n\t\t\tselenium.getText(\"//span[3]/span/label\"));\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='_86_title_en_US']\");\n\t\tselenium.type(\"//input[@id='_86_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Feed Back\"));\n\t\tselenium.type(\"//textarea[@name='_86_description_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Please let us know what you think!\"));\n\t\tselenium.type(\"//input[@id='_86_fieldLabel1_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Your Name\"));\n\t\tselenium.type(\"//input[@id='_86_fieldLabel2_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Rate Us!\"));\n\t\tselenium.type(\"//input[@id='_86_fieldLabel3_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Additional Comments\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Web Form Test Page\",\n\t\t\tRuntimeVariables.replace(\"Web Form Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Feed Back\"),\n\t\t\tselenium.getText(\"//legend/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Please let us know what you think!\"), selenium.getText(\"//em\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Your Name\"),\n\t\t\tselenium.getText(\"//div/span/span/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Rate Us!\"),\n\t\t\tselenium.getText(\"//span[2]/span/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Excellent Good Satisfactory Poor\"),\n\t\t\tselenium.getText(\"//select\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Additional Comments\"),\n\t\t\tselenium.getText(\"//span[3]/span/label\"));\n\t}","commit_id":"f06a287bbf3c0382e51d42368357001dc489c110","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownArchivedSetup() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.waitForVisible(\"link=Web Form Test Page\");\n\t\t\t\tselenium.clickAt(\"link=Web Form Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Web Form Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\t\t\tselenium.getText(\"//strong/a\"));\n\t\t\t\tselenium.click(\"//strong/a\");\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.click(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\t\t\tselenium.waitForVisible(\"//a[@id='_86_rjus']/span\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Archive/Restore Setup\"),\n\t\t\t\t\tselenium.getText(\"//a[@id='_86_rjus']/span\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//a[@id='_86_rjus']/span\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean archiveSetup1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[@class='portlet-msg-info']\");\n\n\t\t\t\tif (archiveSetup1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\t\tboolean archiveSetup2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[@class='portlet-msg-info']\");\n\n\t\t\t\tif (archiveSetup2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\t\tboolean archiveSetup3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[@class='portlet-msg-info']\");\n\n\t\t\t\tif (archiveSetup3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\"//a[@id='_86_ctvk']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//a[@id='_86_ctvk']\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//a[@id='_86_ctvk']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\t\tboolean archiveSetup4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[@class='portlet-msg-info']\");\n\n\t\t\t\tif (archiveSetup4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\"//a[@id='_86_ctvk']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\"//a[@id='_86_ctvk']\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//a[@id='_86_ctvk']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\t\tboolean archiveSetup5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[@class='portlet-msg-info']\");\n\n\t\t\t\tif (archiveSetup5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":53244,"modified_method":"public void testTearDownArchivedSetup() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"link=Web Form Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Web Form Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(1000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\t\t\tselenium.selectFrame(\n\t\t\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\t\t\tselenium.waitForVisible(\"//a[@id='_86_rjus']/span\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Archive/Restore Setup\"),\n\t\t\t\t\tselenium.getText(\"//a[@id='_86_rjus']/span\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//a[@id='_86_rjus']/span\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean archiveSetup1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[@class='portlet-msg-info']\");\n\n\t\t\t\tif (archiveSetup1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(1000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\t\tboolean archiveSetup2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[@class='portlet-msg-info']\");\n\n\t\t\t\tif (archiveSetup2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(1000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\t\tboolean archiveSetup3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[@class='portlet-msg-info']\");\n\n\t\t\t\tif (archiveSetup3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(1000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\t\tboolean archiveSetup4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[@class='portlet-msg-info']\");\n\n\t\t\t\tif (archiveSetup4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(1000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\t\tboolean archiveSetup5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[@class='portlet-msg-info']\");\n\n\t\t\t\tif (archiveSetup5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(1000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"f06a287bbf3c0382e51d42368357001dc489c110","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(AddPageTest.class);\n\t\ttestSuite.addTestSuite(AddPortletTest.class);\n\t\ttestSuite.addTestSuite(EditFormTest.class);\n\t\ttestSuite.addTestSuite(ArchiveTest.class);\n\t\ttestSuite.addTestSuite(TearDownArchivedSetupTest.class);\n\t\ttestSuite.addTestSuite(DeletePageTest.class);\n\n\t\treturn testSuite;\n\t}","id":53245,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(AddPageTest.class);\n\t\ttestSuite.addTestSuite(AddPortletTest.class);\n\t\ttestSuite.addTestSuite(EditFormTest.class);\n\t\ttestSuite.addTestSuite(ArchiveTest.class);\n\t\ttestSuite.addTestSuite(TearDownArchivedSetupTest.class);\n\t\ttestSuite.addTestSuite(TearDownPageTest.class);\n\n\t\treturn testSuite;\n\t}","commit_id":"f06a287bbf3c0382e51d42368357001dc489c110","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletPD2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Polls Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Polls Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"p\"));\n\t\tselenium.waitForVisible(\"//li[@title='Polls Display']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Polls Display']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tselenium.waitForVisible(\"//div[2]/div/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[2]/div/section\"));\n\t}","id":53246,"modified_method":"public void testAddPortletPD2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Polls Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Polls Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"p\"));\n\t\tselenium.waitForVisible(\"//li[@title='Polls Display']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Polls Display']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//div[1]/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[1]/section\"));\n\t\tselenium.waitForVisible(\"//div[2]/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[2]/section\"));\n\t}","commit_id":"5e30f0189372ebc41c01059b6616f6be8789e1dd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletPD3() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Polls Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Polls Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"p\"));\n\t\tselenium.waitForVisible(\"//li[@title='Polls Display']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Polls Display']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tselenium.waitForVisible(\"//div[2]/div/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[2]/div/section\"));\n\t\tselenium.waitForVisible(\"//div[3]/div/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[3]/div/section\"));\n\t}","id":53247,"modified_method":"public void testAddPortletPD3() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Polls Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Polls Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"p\"));\n\t\tselenium.waitForVisible(\"//li[@title='Polls Display']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Polls Display']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//div[1]/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[1]/section\"));\n\t\tselenium.waitForVisible(\"//div[2]/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[2]/section\"));\n\t\tselenium.waitForVisible(\"//div[3]/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[3]/section\"));\n\t}","commit_id":"5e30f0189372ebc41c01059b6616f6be8789e1dd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddQuestion1() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"Polls\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Question']\",\n\t\t\tRuntimeVariables.replace(\"Add Question\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_25_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"PD Question1 Title\"));\n\t\tselenium.type(\"//textarea[@id='_25_description_en_US']\",\n\t\t\tRuntimeVariables.replace(\"PD Question1 Description\"));\n\t\tselenium.type(\"//input[@name='_25_choiceDescriptiona_en_US']\",\n\t\t\tRuntimeVariables.replace(\"PD Question1 ChoiceA\"));\n\t\tselenium.type(\"//input[@name='_25_choiceDescriptionb_en_US']\",\n\t\t\tRuntimeVariables.replace(\"PD Question1 ChoiceB\"));\n\t\tselenium.clickAt(\"//input[@value='Add Choice']\",\n\t\t\tRuntimeVariables.replace(\"Add Choice\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@name='_25_choiceDescriptionc_en_US']\",\n\t\t\tRuntimeVariables.replace(\"PD Question1 ChoiceC\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"PD Question1 Title\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]/a\"));\n\t}","id":53248,"modified_method":"public void testAddQuestion1() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"Polls\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Question']\",\n\t\t\tRuntimeVariables.replace(\"Add Question\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_25_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"PD Question1 Title\"));\n\t\tselenium.type(\"//textarea[@id='_25_description_en_US']\",\n\t\t\tRuntimeVariables.replace(\"PD Question1 Description\"));\n\t\tselenium.type(\"//input[@name='_25_choiceDescriptiona_en_US']\",\n\t\t\tRuntimeVariables.replace(\"PD Question1 ChoiceA\"));\n\t\tselenium.type(\"//input[@name='_25_choiceDescriptionb_en_US']\",\n\t\t\tRuntimeVariables.replace(\"PD Question1 ChoiceB\"));\n\t\tselenium.clickAt(\"//input[@value='Add Choice']\",\n\t\t\tRuntimeVariables.replace(\"Add Choice\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@name='_25_choiceDescriptionc_en_US']\",\n\t\t\tRuntimeVariables.replace(\"PD Question1 ChoiceC\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"PD Question1 Title\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]/a\"));\n\t}","commit_id":"5e30f0189372ebc41c01059b6616f6be8789e1dd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddQuestion2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"Polls\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Question']\",\n\t\t\tRuntimeVariables.replace(\"Add Question\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_25_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"PD Question2 Title\"));\n\t\tselenium.type(\"//textarea[@id='_25_description_en_US']\",\n\t\t\tRuntimeVariables.replace(\"PD Question2 Description\"));\n\t\tselenium.type(\"//input[@name='_25_choiceDescriptiona_en_US']\",\n\t\t\tRuntimeVariables.replace(\"PD Question2 ChoiceA\"));\n\t\tselenium.type(\"//input[@name='_25_choiceDescriptionb_en_US']\",\n\t\t\tRuntimeVariables.replace(\"PD Question2 ChoiceB\"));\n\t\tselenium.clickAt(\"//input[@value='Add Choice']\",\n\t\t\tRuntimeVariables.replace(\"Add Choice\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@name='_25_choiceDescriptionc_en_US']\",\n\t\t\tRuntimeVariables.replace(\"PD Question2 ChoiceC\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"PD Question2 Title\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"PD Question1 Title\"),\n\t\t\tselenium.getText(\"//tr[4]/td[1]/a\"));\n\t}","id":53249,"modified_method":"public void testAddQuestion2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"Polls\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Question']\",\n\t\t\tRuntimeVariables.replace(\"Add Question\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_25_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"PD Question2 Title\"));\n\t\tselenium.type(\"//textarea[@id='_25_description_en_US']\",\n\t\t\tRuntimeVariables.replace(\"PD Question2 Description\"));\n\t\tselenium.type(\"//input[@name='_25_choiceDescriptiona_en_US']\",\n\t\t\tRuntimeVariables.replace(\"PD Question2 ChoiceA\"));\n\t\tselenium.type(\"//input[@name='_25_choiceDescriptionb_en_US']\",\n\t\t\tRuntimeVariables.replace(\"PD Question2 ChoiceB\"));\n\t\tselenium.clickAt(\"//input[@value='Add Choice']\",\n\t\t\tRuntimeVariables.replace(\"Add Choice\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@name='_25_choiceDescriptionc_en_US']\",\n\t\t\tRuntimeVariables.replace(\"PD Question2 ChoiceC\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"PD Question2 Title\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"PD Question1 Title\"),\n\t\t\tselenium.getText(\"//tr[4]/td[1]/a\"));\n\t}","commit_id":"5e30f0189372ebc41c01059b6616f6be8789e1dd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddQuestion3() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"Polls\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Question']\",\n\t\t\tRuntimeVariables.replace(\"Add Question\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_25_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"PD Question3 Title\"));\n\t\tselenium.type(\"//textarea[@id='_25_description_en_US']\",\n\t\t\tRuntimeVariables.replace(\"PD Question3 Description\"));\n\t\tselenium.type(\"//input[@name='_25_choiceDescriptiona_en_US']\",\n\t\t\tRuntimeVariables.replace(\"PD Question3 ChoiceA\"));\n\t\tselenium.type(\"//input[@name='_25_choiceDescriptionb_en_US']\",\n\t\t\tRuntimeVariables.replace(\"PD Question3 ChoiceB\"));\n\t\tselenium.clickAt(\"//input[@value='Add Choice']\",\n\t\t\tRuntimeVariables.replace(\"Add Choice\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@name='_25_choiceDescriptionc_en_US']\",\n\t\t\tRuntimeVariables.replace(\"PD Question3 ChoiceC\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"PD Question3 Title\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"PD Question2 Title\"),\n\t\t\tselenium.getText(\"//tr[4]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"PD Question1 Title\"),\n\t\t\tselenium.getText(\"//tr[5]/td[1]/a\"));\n\t}","id":53250,"modified_method":"public void testAddQuestion3() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"Polls\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Question']\",\n\t\t\tRuntimeVariables.replace(\"Add Question\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_25_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"PD Question3 Title\"));\n\t\tselenium.type(\"//textarea[@id='_25_description_en_US']\",\n\t\t\tRuntimeVariables.replace(\"PD Question3 Description\"));\n\t\tselenium.type(\"//input[@name='_25_choiceDescriptiona_en_US']\",\n\t\t\tRuntimeVariables.replace(\"PD Question3 ChoiceA\"));\n\t\tselenium.type(\"//input[@name='_25_choiceDescriptionb_en_US']\",\n\t\t\tRuntimeVariables.replace(\"PD Question3 ChoiceB\"));\n\t\tselenium.clickAt(\"//input[@value='Add Choice']\",\n\t\t\tRuntimeVariables.replace(\"Add Choice\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@name='_25_choiceDescriptionc_en_US']\",\n\t\t\tRuntimeVariables.replace(\"PD Question3 ChoiceC\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"PD Question3 Title\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"PD Question2 Title\"),\n\t\t\tselenium.getText(\"//tr[4]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"PD Question1 Title\"),\n\t\t\tselenium.getText(\"//tr[5]/td[1]/a\"));\n\t}","commit_id":"5e30f0189372ebc41c01059b6616f6be8789e1dd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddQuestion() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"Polls\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Question']\",\n\t\t\tRuntimeVariables.replace(\"Add Question\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_25_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"PD Question Title\"));\n\t\tselenium.type(\"//textarea[@id='_25_description_en_US']\",\n\t\t\tRuntimeVariables.replace(\"PD Question Description\"));\n\t\tselenium.type(\"//input[@name='_25_choiceDescriptiona_en_US']\",\n\t\t\tRuntimeVariables.replace(\"PD Question ChoiceA\"));\n\t\tselenium.type(\"//input[@name='_25_choiceDescriptionb_en_US']\",\n\t\t\tRuntimeVariables.replace(\"PD Question ChoiceB\"));\n\t\tselenium.clickAt(\"//input[@value='Add Choice']\",\n\t\t\tRuntimeVariables.replace(\"Add Choice\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@name='_25_choiceDescriptionc_en_US']\",\n\t\t\tRuntimeVariables.replace(\"PD Question ChoiceC\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"PD Question Title\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]/a\"));\n\t}","id":53251,"modified_method":"public void testAddQuestion() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"Polls\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Question']\",\n\t\t\tRuntimeVariables.replace(\"Add Question\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_25_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"PD Question Title\"));\n\t\tselenium.type(\"//textarea[@id='_25_description_en_US']\",\n\t\t\tRuntimeVariables.replace(\"PD Question Description\"));\n\t\tselenium.type(\"//input[@name='_25_choiceDescriptiona_en_US']\",\n\t\t\tRuntimeVariables.replace(\"PD Question ChoiceA\"));\n\t\tselenium.type(\"//input[@name='_25_choiceDescriptionb_en_US']\",\n\t\t\tRuntimeVariables.replace(\"PD Question ChoiceB\"));\n\t\tselenium.clickAt(\"//input[@value='Add Choice']\",\n\t\t\tRuntimeVariables.replace(\"Add Choice\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@name='_25_choiceDescriptionc_en_US']\",\n\t\t\tRuntimeVariables.replace(\"PD Question ChoiceC\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"PD Question Title\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]/a\"));\n\t}","commit_id":"5e30f0189372ebc41c01059b6616f6be8789e1dd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteArchivedSetup() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Polls Display Test Page\");\n\t\tselenium.clickAt(\"link=Polls Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Polls Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//strong/a\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\"//div[@class='archived-setups']/span/a/span\");\n\t\tassertEquals(RuntimeVariables.replace(\"Archive/Restore Setup\"),\n\t\t\tselenium.getText(\"//div[@class='archived-setups']/span/a/span\"));\n\t\tselenium.clickAt(\"//div[@class='archived-setups']/span/a/span\",\n\t\t\tRuntimeVariables.replace(\"Archive/Restore Setup\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Archived Setup\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[3]/td[3]\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\tselenium.getText(\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\"));\n\t\tselenium.clickAt(\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\",\n\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"There are no archived setups.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tassertFalse(selenium.isTextPresent(\"Archived Setup\"));\n\t}","id":53252,"modified_method":"public void testDeleteArchivedSetup() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Polls Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Polls Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//div[@class='archived-setups']/span/a/span\");\n\t\tassertEquals(RuntimeVariables.replace(\"Archive/Restore Setup\"),\n\t\t\tselenium.getText(\"//div[@class='archived-setups']/span/a/span\"));\n\t\tselenium.clickAt(\"//div[@class='archived-setups']/span/a/span\",\n\t\t\tRuntimeVariables.replace(\"Archive/Restore Setup\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Archived Setup\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[3]/td[3]\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\tselenium.getText(\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\"));\n\t\tselenium.clickAt(\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\",\n\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"There are no archived setups.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"5e30f0189372ebc41c01059b6616f6be8789e1dd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteQuestionSelect() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Polls Display Test Page\");\n\t\tselenium.clickAt(\"link=Polls Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Polls Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"//div/span[1]/span/span/input\"));\n\t\tassertTrue(selenium.isElementPresent(\"//div/span[2]/span/span/input\"));\n\t\tassertTrue(selenium.isElementPresent(\"//div/span[3]/span/span/input\"));\n\t\tassertEquals(RuntimeVariables.replace(\"a. PD Question ChoiceA\"),\n\t\t\tselenium.getText(\"//div/span[1]/span/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"b. PD Question ChoiceB\"),\n\t\t\tselenium.getText(\"//div/span[2]/span/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"c. PD Question ChoiceC\"),\n\t\t\tselenium.getText(\"//div/span[3]/span/label\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"Polls\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//td[5]/span/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\",\n\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Polls Display Test Page\");\n\t\tselenium.clickAt(\"link=Polls Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Polls Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementNotPresent(\"//div/span[1]/span/span/input\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"//div/span[2]/span/span/input\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"//div/span[3]/span/span/input\"));\n\t\tassertFalse(selenium.isTextPresent(\"PD Question ChoiceA\"));\n\t\tassertFalse(selenium.isTextPresent(\"PD Question ChoiceB\"));\n\t\tassertFalse(selenium.isTextPresent(\"PD Question ChoiceC\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Please configure this portlet to make it visible to all users.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='portlet-configuration portlet-msg-info']\"));\n\t}","id":53253,"modified_method":"public void testDeleteQuestionSelect() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Polls Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Polls Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"//div/span[1]/span/span/input\"));\n\t\tassertTrue(selenium.isElementPresent(\"//div/span[2]/span/span/input\"));\n\t\tassertTrue(selenium.isElementPresent(\"//div/span[3]/span/span/input\"));\n\t\tassertEquals(RuntimeVariables.replace(\"a. PD Question ChoiceA\"),\n\t\t\tselenium.getText(\"//div/span[1]/span/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"b. PD Question ChoiceB\"),\n\t\t\tselenium.getText(\"//div/span[2]/span/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"c. PD Question ChoiceC\"),\n\t\t\tselenium.getText(\"//div/span[3]/span/label\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"Polls\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\",\n\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Polls Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Polls Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementNotPresent(\"//div/span[1]/span/span/input\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"//div/span[2]/span/span/input\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"//div/span[3]/span/span/input\"));\n\t\tassertFalse(selenium.isTextPresent(\"PD Question ChoiceA\"));\n\t\tassertFalse(selenium.isTextPresent(\"PD Question ChoiceB\"));\n\t\tassertFalse(selenium.isTextPresent(\"PD Question ChoiceC\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Please configure this portlet to make it visible to all users.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='portlet-configuration portlet-msg-info']\"));\n\t}","commit_id":"5e30f0189372ebc41c01059b6616f6be8789e1dd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testRemovePortletPD() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Polls Display Test Page\");\n\t\tselenium.clickAt(\"link=Polls Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Polls Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\tselenium.waitForConfirmation(\n\t\t\t\"Are you sure you want to remove this component?\");\n\t\tselenium.waitForElementNotPresent(\"//section\");\n\t\tassertTrue(selenium.isElementNotPresent(\"//section\"));\n\t}","id":53254,"modified_method":"public void testRemovePortletPD() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Polls Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Polls Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\tselenium.waitForConfirmation(\n\t\t\t\"Are you sure you want to remove this component?\");\n\t\tselenium.waitForElementNotPresent(\"//section\");\n\t\tassertTrue(selenium.isElementNotPresent(\"//section\"));\n\t}","commit_id":"5e30f0189372ebc41c01059b6616f6be8789e1dd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testRestoreArchivedSetup() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Polls Display Test Page\");\n\t\tselenium.clickAt(\"link=Polls Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Polls Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//strong/a\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\"//div[@class='archived-setups']/span/a/span\");\n\t\tassertEquals(RuntimeVariables.replace(\"Archive/Restore Setup\"),\n\t\t\tselenium.getText(\"//div[@class='archived-setups']/span/a/span\"));\n\t\tselenium.clickAt(\"//div[@class='archived-setups']/span/a/span\",\n\t\t\tRuntimeVariables.replace(\"Archive/Restore Setup\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Archived Setup\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[3]/td[3]\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@id='_86_ocerSearchContainer_1_menu_restore']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Restore\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//a[@id='_86_ocerSearchContainer_1_menu_restore']\"));\n\t\tselenium.clickAt(\"//a[@id='_86_ocerSearchContainer_1_menu_restore']\",\n\t\t\tRuntimeVariables.replace(\"Restore\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Polls Display Test Page\");\n\t\tselenium.clickAt(\"link=Polls Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Polls Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementNotPresent(\"//div/span[1]/span/span/input\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"//div/span[2]/span/span/input\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"//div/span[3]/span/span/input\"));\n\t\tassertFalse(selenium.isTextPresent(\"PD Question ChoiceA\"));\n\t\tassertFalse(selenium.isTextPresent(\"PD Question ChoiceB\"));\n\t\tassertFalse(selenium.isTextPresent(\"PD Question ChoiceC\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Please configure this portlet to make it visible to all users.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='portlet-configuration portlet-msg-info']\"));\n\t}","id":53255,"modified_method":"public void testRestoreArchivedSetup() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Polls Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Polls Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//div[@class='archived-setups']/span/a/span\");\n\t\tassertEquals(RuntimeVariables.replace(\"Archive/Restore Setup\"),\n\t\t\tselenium.getText(\"//div[@class='archived-setups']/span/a/span\"));\n\t\tselenium.clickAt(\"//div[@class='archived-setups']/span/a/span\",\n\t\t\tRuntimeVariables.replace(\"Archive/Restore Setup\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Archived Setup\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[3]/td[3]\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@id='_86_ocerSearchContainer_1_menu_restore']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Restore\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//a[@id='_86_ocerSearchContainer_1_menu_restore']\"));\n\t\tselenium.clickAt(\"//a[@id='_86_ocerSearchContainer_1_menu_restore']\",\n\t\t\tRuntimeVariables.replace(\"Restore\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Polls Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Polls Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementNotPresent(\"//div/span[1]/span/span/input\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"//div/span[2]/span/span/input\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"//div/span[3]/span/span/input\"));\n\t\tassertFalse(selenium.isTextPresent(\"PD Question ChoiceA\"));\n\t\tassertFalse(selenium.isTextPresent(\"PD Question ChoiceB\"));\n\t\tassertFalse(selenium.isTextPresent(\"PD Question ChoiceC\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Please configure this portlet to make it visible to all users.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='portlet-configuration portlet-msg-info']\"));\n\t}","commit_id":"5e30f0189372ebc41c01059b6616f6be8789e1dd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSaveArchivedSetup() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Polls Display Test Page\");\n\t\tselenium.clickAt(\"link=Polls Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Polls Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//strong/a\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\"//div[@class='archived-setups']/span/a/span\");\n\t\tassertEquals(RuntimeVariables.replace(\"Archive/Restore Setup\"),\n\t\t\tselenium.getText(\"//div[@class='archived-setups']/span/a/span\"));\n\t\tselenium.clickAt(\"//div[@class='archived-setups']/span/a/span\",\n\t\t\tRuntimeVariables.replace(\"Archive/Restore Setup\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_86_name']\",\n\t\t\tRuntimeVariables.replace(\"Archived Setup\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Archived Setup\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[3]/td[3]\"));\n\t}","id":53256,"modified_method":"public void testSaveArchivedSetup() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Polls Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Polls Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//div[@class='archived-setups']/span/a/span\");\n\t\tassertEquals(RuntimeVariables.replace(\"Archive/Restore Setup\"),\n\t\t\tselenium.getText(\"//div[@class='archived-setups']/span/a/span\"));\n\t\tselenium.clickAt(\"//div[@class='archived-setups']/span/a/span\",\n\t\t\tRuntimeVariables.replace(\"Archive/Restore Setup\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_86_name']\",\n\t\t\tRuntimeVariables.replace(\"Archived Setup\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Archived Setup\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[3]/td[3]\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"5e30f0189372ebc41c01059b6616f6be8789e1dd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectQuestion1() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Polls Display Test Page\");\n\t\tselenium.clickAt(\"link=Polls Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Polls Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//strong/a\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\"//select[@id='_86_questionId']\");\n\t\tselenium.select(\"//select[@id='_86_questionId']\",\n\t\t\tRuntimeVariables.replace(\"PD Question1 Title\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"PD Question1 Title\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_questionId']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Polls Display Test Page\");\n\t\tselenium.clickAt(\"link=Polls Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Polls Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"//div/span[1]/span/span/input\"));\n\t\tassertTrue(selenium.isElementPresent(\"//div/span[2]/span/span/input\"));\n\t\tassertTrue(selenium.isElementPresent(\"//div/span[3]/span/span/input\"));\n\t\tassertEquals(RuntimeVariables.replace(\"a. PD Question1 ChoiceA\"),\n\t\t\tselenium.getText(\"//div/span[1]/span/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"b. PD Question1 ChoiceB\"),\n\t\t\tselenium.getText(\"//div/span[2]/span/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"c. PD Question1 ChoiceC\"),\n\t\t\tselenium.getText(\"//div/span[3]/span/label\"));\n\t}","id":53257,"modified_method":"public void testSelectQuestion1() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Polls Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Polls Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_questionId']\");\n\t\tselenium.select(\"//select[@id='_86_questionId']\",\n\t\t\tRuntimeVariables.replace(\"PD Question1 Title\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"PD Question1 Title\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_questionId']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Polls Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Polls Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"//div/span[1]/span/span/input\"));\n\t\tassertTrue(selenium.isElementPresent(\"//div/span[2]/span/span/input\"));\n\t\tassertTrue(selenium.isElementPresent(\"//div/span[3]/span/span/input\"));\n\t\tassertEquals(RuntimeVariables.replace(\"a. PD Question1 ChoiceA\"),\n\t\t\tselenium.getText(\"//div/span[1]/span/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"b. PD Question1 ChoiceB\"),\n\t\t\tselenium.getText(\"//div/span[2]/span/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"c. PD Question1 ChoiceC\"),\n\t\t\tselenium.getText(\"//div/span[3]/span/label\"));\n\t}","commit_id":"5e30f0189372ebc41c01059b6616f6be8789e1dd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectQuestion2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Polls Display Test Page\");\n\t\tselenium.clickAt(\"link=Polls Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Polls Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//strong/a\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\"//select[@id='_86_questionId']\");\n\t\tselenium.select(\"//select[@id='_86_questionId']\",\n\t\t\tRuntimeVariables.replace(\"PD Question2 Title\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"PD Question2 Title\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_questionId']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Polls Display Test Page\");\n\t\tselenium.clickAt(\"link=Polls Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Polls Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"//div/span[1]/span/span/input\"));\n\t\tassertTrue(selenium.isElementPresent(\"//div/span[2]/span/span/input\"));\n\t\tassertTrue(selenium.isElementPresent(\"//div/span[3]/span/span/input\"));\n\t\tassertEquals(RuntimeVariables.replace(\"a. PD Question2 ChoiceA\"),\n\t\t\tselenium.getText(\"//div/span[1]/span/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"b. PD Question2 ChoiceB\"),\n\t\t\tselenium.getText(\"//div/span[2]/span/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"c. PD Question2 ChoiceC\"),\n\t\t\tselenium.getText(\"//div/span[3]/span/label\"));\n\t}","id":53258,"modified_method":"public void testSelectQuestion2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Polls Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Polls Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_questionId']\");\n\t\tselenium.select(\"//select[@id='_86_questionId']\",\n\t\t\tRuntimeVariables.replace(\"PD Question2 Title\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"PD Question2 Title\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_questionId']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Polls Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Polls Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"//div/span[1]/span/span/input\"));\n\t\tassertTrue(selenium.isElementPresent(\"//div/span[2]/span/span/input\"));\n\t\tassertTrue(selenium.isElementPresent(\"//div/span[3]/span/span/input\"));\n\t\tassertEquals(RuntimeVariables.replace(\"a. PD Question2 ChoiceA\"),\n\t\t\tselenium.getText(\"//div/span[1]/span/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"b. PD Question2 ChoiceB\"),\n\t\t\tselenium.getText(\"//div/span[2]/span/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"c. PD Question2 ChoiceC\"),\n\t\t\tselenium.getText(\"//div/span[3]/span/label\"));\n\t}","commit_id":"5e30f0189372ebc41c01059b6616f6be8789e1dd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectQuestion3() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Polls Display Test Page\");\n\t\tselenium.clickAt(\"link=Polls Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Polls Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//strong/a\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\"//select[@id='_86_questionId']\");\n\t\tselenium.select(\"//select[@id='_86_questionId']\",\n\t\t\tRuntimeVariables.replace(\"PD Question3 Title\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"PD Question3 Title\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_questionId']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Polls Display Test Page\");\n\t\tselenium.clickAt(\"link=Polls Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Polls Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"//div/span[1]/span/span/input\"));\n\t\tassertTrue(selenium.isElementPresent(\"//div/span[2]/span/span/input\"));\n\t\tassertTrue(selenium.isElementPresent(\"//div/span[3]/span/span/input\"));\n\t\tassertEquals(RuntimeVariables.replace(\"a. PD Question3 ChoiceA\"),\n\t\t\tselenium.getText(\"//div/span[1]/span/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"b. PD Question3 ChoiceB\"),\n\t\t\tselenium.getText(\"//div/span[2]/span/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"c. PD Question3 ChoiceC\"),\n\t\t\tselenium.getText(\"//div/span[3]/span/label\"));\n\t}","id":53259,"modified_method":"public void testSelectQuestion3() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Polls Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Polls Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_questionId']\");\n\t\tselenium.select(\"//select[@id='_86_questionId']\",\n\t\t\tRuntimeVariables.replace(\"PD Question3 Title\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"PD Question3 Title\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_questionId']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Polls Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Polls Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"//div/span[1]/span/span/input\"));\n\t\tassertTrue(selenium.isElementPresent(\"//div/span[2]/span/span/input\"));\n\t\tassertTrue(selenium.isElementPresent(\"//div/span[3]/span/span/input\"));\n\t\tassertEquals(RuntimeVariables.replace(\"a. PD Question3 ChoiceA\"),\n\t\t\tselenium.getText(\"//div/span[1]/span/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"b. PD Question3 ChoiceB\"),\n\t\t\tselenium.getText(\"//div/span[2]/span/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"c. PD Question3 ChoiceC\"),\n\t\t\tselenium.getText(\"//div/span[3]/span/label\"));\n\t}","commit_id":"5e30f0189372ebc41c01059b6616f6be8789e1dd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectQuestionNull() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Polls Display Test Page\");\n\t\tselenium.clickAt(\"link=Polls Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Polls Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//strong/a\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\"//select[@id='_86_questionId']\");\n\t\tselenium.select(\"//select[@id='_86_questionId']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Polls Display Test Page\");\n\t\tselenium.clickAt(\"link=Polls Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Polls Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementNotPresent(\"//div/span[1]/span/span/input\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"//div/span[2]/span/span/input\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"//div/span[3]/span/span/input\"));\n\t\tassertFalse(selenium.isTextPresent(\"PD Question ChoiceA\"));\n\t\tassertFalse(selenium.isTextPresent(\"PD Question ChoiceB\"));\n\t\tassertFalse(selenium.isTextPresent(\"PD Question ChoiceC\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Please configure this portlet to make it visible to all users.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='portlet-configuration portlet-msg-info']\"));\n\t}","id":53260,"modified_method":"public void testSelectQuestionNull() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Polls Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Polls Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_questionId']\");\n\t\tselenium.select(\"//select[@id='_86_questionId']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Polls Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Polls Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementNotPresent(\"//div/span[1]/span/span/input\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"//div/span[2]/span/span/input\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"//div/span[3]/span/span/input\"));\n\t\tassertFalse(selenium.isTextPresent(\"PD Question ChoiceA\"));\n\t\tassertFalse(selenium.isTextPresent(\"PD Question ChoiceB\"));\n\t\tassertFalse(selenium.isTextPresent(\"PD Question ChoiceC\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Please configure this portlet to make it visible to all users.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='portlet-configuration portlet-msg-info']\"));\n\t}","commit_id":"5e30f0189372ebc41c01059b6616f6be8789e1dd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectQuestion() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Polls Display Test Page\");\n\t\tselenium.clickAt(\"link=Polls Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Polls Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//strong/a\"));\n\t\tselenium.clickAt(\"//strong/a\", RuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\"//select[@id='_86_questionId']\");\n\t\tselenium.select(\"//select[@id='_86_questionId']\",\n\t\t\tRuntimeVariables.replace(\"PD Question Title\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"PD Question Title\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_questionId']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Polls Display Test Page\");\n\t\tselenium.clickAt(\"link=Polls Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Polls Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"//div/span[1]/span/span/input\"));\n\t\tassertTrue(selenium.isElementPresent(\"//div/span[2]/span/span/input\"));\n\t\tassertTrue(selenium.isElementPresent(\"//div/span[3]/span/span/input\"));\n\t\tassertEquals(RuntimeVariables.replace(\"a. PD Question ChoiceA\"),\n\t\t\tselenium.getText(\"//div/span[1]/span/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"b. PD Question ChoiceB\"),\n\t\t\tselenium.getText(\"//div/span[2]/span/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"c. PD Question ChoiceC\"),\n\t\t\tselenium.getText(\"//div/span[3]/span/label\"));\n\t}","id":53261,"modified_method":"public void testSelectQuestion() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Polls Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Polls Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_questionId']\");\n\t\tselenium.select(\"//select[@id='_86_questionId']\",\n\t\t\tRuntimeVariables.replace(\"PD Question Title\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"PD Question Title\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_questionId']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Polls Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Polls Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"//div/span[1]/span/span/input\"));\n\t\tassertTrue(selenium.isElementPresent(\"//div/span[2]/span/span/input\"));\n\t\tassertTrue(selenium.isElementPresent(\"//div/span[3]/span/span/input\"));\n\t\tassertEquals(RuntimeVariables.replace(\"a. PD Question ChoiceA\"),\n\t\t\tselenium.getText(\"//div/span[1]/span/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"b. PD Question ChoiceB\"),\n\t\t\tselenium.getText(\"//div/span[2]/span/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"c. PD Question ChoiceC\"),\n\t\t\tselenium.getText(\"//div/span[3]/span/label\"));\n\t}","commit_id":"5e30f0189372ebc41c01059b6616f6be8789e1dd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownArchivedSetup() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.waitForVisible(\"link=Polls Display Test Page\");\n\t\t\t\tselenium.clickAt(\"link=Polls Display Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Polls Display Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\t\t\tselenium.getText(\"//strong/a\"));\n\t\t\t\tselenium.clickAt(\"//strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='archived-setups']/span/a/span\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Archive/Restore Setup\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='archived-setups']/span/a/span\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='archived-setups']/span/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Archive/Restore Setup\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean pdArchivedSetup1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//tr[3]/td[4]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!pdArchivedSetup1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\"));\n\t\t\t\tselenium.clickAt(\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean pdArchivedSetup2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//tr[3]/td[4]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!pdArchivedSetup2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\"));\n\t\t\t\tselenium.clickAt(\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean pdArchivedSetup3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//tr[3]/td[4]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!pdArchivedSetup3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\"));\n\t\t\t\tselenium.clickAt(\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean pdArchivedSetup4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//tr[3]/td[4]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!pdArchivedSetup4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\"));\n\t\t\t\tselenium.clickAt(\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean pdArchivedSetup5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//tr[3]/td[4]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!pdArchivedSetup5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\"));\n\t\t\t\tselenium.clickAt(\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":53262,"modified_method":"public void testTearDownArchivedSetup() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"link=Polls Display Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Polls Display Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\t\t\tselenium.selectFrame(\n\t\t\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='archived-setups']/span/a/span\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Archive/Restore Setup\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='archived-setups']/span/a/span\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='archived-setups']/span/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Archive/Restore Setup\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean pdArchivedSetup1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\");\n\n\t\t\t\tif (!pdArchivedSetup1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\"));\n\t\t\t\tselenium.clickAt(\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\t\tboolean pdArchivedSetup2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\");\n\n\t\t\t\tif (!pdArchivedSetup2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\"));\n\t\t\t\tselenium.clickAt(\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\t\tboolean pdArchivedSetup3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\");\n\n\t\t\t\tif (!pdArchivedSetup3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\"));\n\t\t\t\tselenium.clickAt(\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\t\tboolean pdArchivedSetup4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\");\n\n\t\t\t\tif (!pdArchivedSetup4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\"));\n\t\t\t\tselenium.clickAt(\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\t\tboolean pdArchivedSetup5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\");\n\n\t\t\t\tif (!pdArchivedSetup5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\"));\n\t\t\t\tselenium.clickAt(\"//a[@id='_86_ocerSearchContainer_1_menu_delete']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"5e30f0189372ebc41c01059b6616f6be8789e1dd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownQuestion() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.waitForElementPresent(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"Polls\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean question1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!question1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[5]/span/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean question2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!question2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[5]/span/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean question3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!question3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[5]/span/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean question4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!question4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[5]/span/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean question5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!question5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//td[5]/span/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//td[5]/span/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":53263,"modified_method":"public void testTearDownQuestion() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"Polls\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean question1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\");\n\n\t\t\t\tif (!question1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\t\tboolean question2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\");\n\n\t\t\t\tif (!question2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\t\tboolean question3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\");\n\n\t\t\t\tif (!question3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\t\tboolean question4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\");\n\n\t\t\t\tif (!question4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\t\tboolean question5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\");\n\n\t\t\t\tif (!question5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"5e30f0189372ebc41c01059b6616f6be8789e1dd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testVoteQuestionNull() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Polls Display Test Page\");\n\t\tselenium.clickAt(\"link=Polls Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Polls Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Vote']\",\n\t\t\tRuntimeVariables.replace(\"Vote\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Please select an option.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-error']\"));\n\t}","id":53264,"modified_method":"public void testVoteQuestionNull() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Polls Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Polls Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Vote']\",\n\t\t\tRuntimeVariables.replace(\"Vote\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Please select an option.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-error']\"));\n\t}","commit_id":"5e30f0189372ebc41c01059b6616f6be8789e1dd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testVoteQuestion() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Polls Display Test Page\");\n\t\tselenium.clickAt(\"link=Polls Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Polls Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div/span[2]/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"Choice B Radio Button\"));\n\t\tselenium.clickAt(\"//input[@value='Vote']\",\n\t\t\tRuntimeVariables.replace(\"Vote\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Thank you for your vote.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0%\"),\n\t\t\tselenium.getText(\"//tr[2]/td[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0\"),\n\t\t\tselenium.getText(\"//tr[2]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"PD Question ChoiceA\"),\n\t\t\tselenium.getText(\"//tr[2]/td[5]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"100%\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"PD Question ChoiceB\"),\n\t\t\tselenium.getText(\"//tr[3]/td[7]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0%\"),\n\t\t\tselenium.getText(\"//tr[4]/td[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0\"),\n\t\t\tselenium.getText(\"//tr[4]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"PD Question ChoiceC\"),\n\t\t\tselenium.getText(\"//tr[4]/td[5]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Total Votes: 1\"),\n\t\t\tselenium.getText(\"//form/div\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"//input[@value='Vote']\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"//div/span[1]/span/span/input\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"//div/span[2]/span/span/input\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"//div/span[3]/span/span/input\"));\n\t}","id":53265,"modified_method":"public void testVoteQuestion() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Polls Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Polls Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div/span[2]/span/span/input\",\n\t\t\tRuntimeVariables.replace(\"Choice B Radio Button\"));\n\t\tselenium.clickAt(\"//input[@value='Vote']\",\n\t\t\tRuntimeVariables.replace(\"Vote\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Thank you for your vote.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0%\"),\n\t\t\tselenium.getText(\"//tr[2]/td[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0\"),\n\t\t\tselenium.getText(\"//tr[2]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"PD Question ChoiceA\"),\n\t\t\tselenium.getText(\"//tr[2]/td[5]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"100%\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"PD Question ChoiceB\"),\n\t\t\tselenium.getText(\"//tr[3]/td[5]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0%\"),\n\t\t\tselenium.getText(\"//tr[4]/td[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0\"),\n\t\t\tselenium.getText(\"//tr[4]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"PD Question ChoiceC\"),\n\t\t\tselenium.getText(\"//tr[4]/td[5]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Total Votes: 1\"),\n\t\t\tselenium.getText(\"//form/div\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"//input[@value='Vote']\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"//div/span[1]/span/span/input\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"//div/span[2]/span/span/input\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"//div/span[3]/span/span/input\"));\n\t}","commit_id":"5e30f0189372ebc41c01059b6616f6be8789e1dd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"private VariantContext phaseTrioGenotypes(VariantContext vc) {\n        Genotype mom = vc.getGenotype(SAMPLE_NAME_MOM);\n        Genotype dad = vc.getGenotype(SAMPLE_NAME_DAD);\n        Genotype child = vc.getGenotype(SAMPLE_NAME_CHILD);\n\n        Set<String> filters = new HashSet<String>();\n        filters.addAll(vc.getFilters());\n\n        Map<String, Object> attributes = new HashMap<String, Object>();\n        attributes.putAll(vc.getAttributes());\n        attributes.put(TRANSMISSION_PROBABILITY_TAG_NAME, 0.0);\n\n        ArrayList<Genotype> finalGenotypes = new ArrayList<Genotype>();\n        finalGenotypes.add(mom);\n        finalGenotypes.add(dad);\n        finalGenotypes.add(child);\n\n        if (!mom.isCalled() || !dad.isCalled() || !child.isCalled()) {\n            filters.add(INSUFFICIENT_DATA_FILTER_NAME);\n        } else {\n            ArrayList<Genotype> possibleMomGenotypes = createAllThreeGenotypes(vc.getReference(), vc.getAlternateAllele(0), mom);\n            ArrayList<Genotype> possibleDadGenotypes = createAllThreeGenotypes(vc.getReference(), vc.getAlternateAllele(0), dad);\n            ArrayList<Genotype> possibleChildGenotypes = createAllThreeGenotypes(vc.getReference(), vc.getAlternateAllele(0), child);\n\n            double bestConfigurationLikelihood = 0.0;\n            double bestPrior = 0.0;\n            Genotype bestMomGenotype = mom;\n            Genotype bestDadGenotype = dad;\n            Genotype bestChildGenotype = child;\n\n            double norm = 0.0;\n\n            for (Genotype momGenotype : possibleMomGenotypes) {\n                for (Genotype dadGenotype : possibleDadGenotypes) {\n                    for (Genotype childGenotype : possibleChildGenotypes) {\n                        double configurationLikelihood = computeTransmissionLikelihoodOfGenotypeConfiguration(momGenotype, dadGenotype, childGenotype);\n                        double prior = isMendelianViolation(vc.getReference(), vc.getAlternateAllele(0), momGenotype, dadGenotype, childGenotype) ? Math.log10(MENDELIAN_VIOLATION_PRIOR) : Math.log10(1.0 - 12*MENDELIAN_VIOLATION_PRIOR);\n\n                        if (configurationLikelihood > bestConfigurationLikelihood) {\n                            bestConfigurationLikelihood = configurationLikelihood;\n                            bestPrior = prior;\n                            bestMomGenotype = momGenotype;\n                            bestDadGenotype = dadGenotype;\n                            bestChildGenotype = childGenotype;\n                        }\n\n                        norm += Math.pow(10, configurationLikelihood)*Math.pow(10, prior);\n                    }\n                }\n            }\n\n            if (isMendelianViolation(vc.getReference(), vc.getAlternateAllele(0), bestMomGenotype, bestDadGenotype, bestChildGenotype)) {\n                filters.add(MENDELIAN_VIOLATION_FILTER_NAME);\n            } else if (bestMomGenotype.isHet() && bestDadGenotype.isHet() && bestChildGenotype.isHet()) {\n                filters.add(AMBIGUOUS_ALLELE_ORIGIN_FILTER_NAME);\n            } else {\n                finalGenotypes = getPhasedGenotypes(bestMomGenotype, bestDadGenotype, bestChildGenotype);\n\n                double normLikelihood = Math.log10(norm);\n                double logProb = bestPrior + bestConfigurationLikelihood - normLikelihood;\n                double prob = Math.pow(10.0, logProb);\n\n                attributes.put(TRANSMISSION_PROBABILITY_TAG_NAME, prob);\n            }\n        }\n\n        return new VariantContext(SOURCE_NAME, vc.getChr(), vc.getStart(), vc.getStart(), vc.getAlleles(), finalGenotypes, vc.getNegLog10PError(), noFilters ? vc.getFilters() : filters, attributes);\n    }","id":53266,"modified_method":"private VariantContext phaseTrioGenotypes(VariantContext vc) {\n        Genotype mom = vc.getGenotype(SAMPLE_NAME_MOM);\n        Genotype dad = vc.getGenotype(SAMPLE_NAME_DAD);\n        Genotype child = vc.getGenotype(SAMPLE_NAME_CHILD);\n\n        Set<String> filters = new HashSet<String>();\n        filters.addAll(vc.getFilters());\n\n        Map<String, Object> attributes = new HashMap<String, Object>();\n        attributes.putAll(vc.getAttributes());\n        attributes.put(TRANSMISSION_PROBABILITY_TAG_NAME, 0.0);\n\n        ArrayList<Genotype> finalGenotypes = new ArrayList<Genotype>();\n        finalGenotypes.add(mom);\n        finalGenotypes.add(dad);\n        finalGenotypes.add(child);\n\n        if (!mom.isCalled() || !dad.isCalled() || !child.isCalled()) {\n            filters.add(INSUFFICIENT_DATA_FILTER_NAME);\n        } else {\n            ArrayList<Genotype> possibleMomGenotypes = createAllThreeGenotypes(vc.getReference(), vc.getAlternateAllele(0), mom);\n            ArrayList<Genotype> possibleDadGenotypes = createAllThreeGenotypes(vc.getReference(), vc.getAlternateAllele(0), dad);\n            ArrayList<Genotype> possibleChildGenotypes = createAllThreeGenotypes(vc.getReference(), vc.getAlternateAllele(0), child);\n\n            double bestConfigurationLikelihood = 0.0;\n            double bestPrior = 0.0;\n            Genotype bestMomGenotype = mom;\n            Genotype bestDadGenotype = dad;\n            Genotype bestChildGenotype = child;\n\n            double norm = 0.0;\n\n            GATKReport report = new GATKReport();\n            report.addTable(\"TransmissionProbability\", \"Reports various quantities used to compute transmission probability\");\n\n            GATKReportTable table = report.getTable(\"TransmissionProbability\");\n            table.addPrimaryKey(\"config\", false);\n            table.addColumn(\"mom\", \"unknown\");\n            table.addColumn(\"momProbability\", \"unknown\");\n            table.addColumn(\"dad\", \"unknown\");\n            table.addColumn(\"dadProbability\", \"unknown\");\n            table.addColumn(\"child\", \"unknown\");\n            table.addColumn(\"childProbability\", \"unknown\");\n            table.addColumn(\"configLikelihood\", \"unknown\");\n\n            for (Genotype momGenotype : possibleMomGenotypes) {\n                for (Genotype dadGenotype : possibleDadGenotypes) {\n                    for (Genotype childGenotype : possibleChildGenotypes) {\n                        double prior = isMendelianViolation(vc.getReference(), vc.getAlternateAllele(0), momGenotype, dadGenotype, childGenotype) ? MENDELIAN_VIOLATION_PRIOR : 1.0 - 12*MENDELIAN_VIOLATION_PRIOR;\n                        double configurationLikelihood = computeTransmissionLikelihoodOfGenotypeConfiguration(momGenotype, dadGenotype, childGenotype);\n                        norm += prior*configurationLikelihood;\n\n                        if (prior*configurationLikelihood > bestPrior*bestConfigurationLikelihood) {\n                            bestConfigurationLikelihood = configurationLikelihood;\n                            bestPrior = prior;\n                            bestMomGenotype = momGenotype;\n                            bestDadGenotype = dadGenotype;\n                            bestChildGenotype = childGenotype;\n                        }\n\n                        String config = momGenotype.toString() + dadGenotype.toString() + childGenotype.toString();\n\n                        double[] momLikelihoods = MathUtils.normalizeFromLog10(momGenotype.getLikelihoods().getAsVector());\n                        double momProbability = momLikelihoods[momGenotype.getType().ordinal() - 1];\n\n                        table.set(config, \"mom\", momGenotype.toString());\n                        table.set(config, \"momProbability\", momProbability);\n\n                        double[] dadLikelihoods = MathUtils.normalizeFromLog10(dadGenotype.getLikelihoods().getAsVector());\n                        double dadProbability = dadLikelihoods[dadGenotype.getType().ordinal() - 1];\n\n                        table.set(config, \"dad\", dadGenotype.toString());\n                        table.set(config, \"dadProbability\", dadProbability);\n\n                        double[] childLikelihoods = MathUtils.normalizeFromLog10(childGenotype.getLikelihoods().getAsVector());\n                        double childProbability = childLikelihoods[childGenotype.getType().ordinal() - 1];\n\n                        table.set(config, \"child\", childGenotype.toString());\n                        table.set(config, \"childProbability\", childProbability);\n\n                        table.set(config, \"configLikelihood\", prior*configurationLikelihood);\n                    }\n                }\n            }\n\n            /*\n            if (!mom.sameGenotype(bestMomGenotype) || !dad.sameGenotype(bestDadGenotype) || !child.sameGenotype(bestChildGenotype)) {\n                System.out.println(\"Found a better genotype configuration!\");\n                table.write(System.out);\n                System.out.println(mom.toBriefString() + \" \" + dad.toBriefString() + \" \" + child.toBriefString());\n                System.out.println(bestMomGenotype.toBriefString() + \" \" + bestDadGenotype.toBriefString() + \" \" + bestChildGenotype.toBriefString());\n                System.out.println(bestPrior*bestConfigurationLikelihood / norm);\n                System.out.println(\"\");\n            }\n            */\n\n            if (isMendelianViolation(vc.getReference(), vc.getAlternateAllele(0), bestMomGenotype, bestDadGenotype, bestChildGenotype)) {\n                filters.add(MENDELIAN_VIOLATION_FILTER_NAME);\n            } else if (bestMomGenotype.isHet() && bestDadGenotype.isHet() && bestChildGenotype.isHet()) {\n                filters.add(AMBIGUOUS_ALLELE_ORIGIN_FILTER_NAME);\n            } else {\n                finalGenotypes = getPhasedGenotypes(bestMomGenotype, bestDadGenotype, bestChildGenotype);\n\n                attributes.put(TRANSMISSION_PROBABILITY_TAG_NAME, bestPrior*bestConfigurationLikelihood / norm);\n            }\n        }\n\n        return new VariantContext(SOURCE_NAME, vc.getChr(), vc.getStart(), vc.getStart(), vc.getAlleles(), finalGenotypes, vc.getNegLog10PError(), noFilters ? vc.getFilters() : filters, attributes);\n    }","commit_id":"f3b38c0d3e5e8325df836927ab95de453cb66eed","url":"https://github.com/broadgsa/gatk"},{"original_method":"private double computeTransmissionLikelihoodOfGenotypeConfiguration(Genotype mom, Genotype dad, Genotype child) {\n        double[] momLikelihoods = mom.getLikelihoods().getAsVector();\n        double[] dadLikelihoods = dad.getLikelihoods().getAsVector();\n        double[] childLikelihoods = child.getLikelihoods().getAsVector();\n\n        int momIndex = genotypeToIndex(mom);\n        int dadIndex = genotypeToIndex(dad);\n        int childIndex = genotypeToIndex(child);\n\n        return momLikelihoods[momIndex] + dadLikelihoods[dadIndex] + childLikelihoods[childIndex];\n    }","id":53267,"modified_method":"private double computeTransmissionLikelihoodOfGenotypeConfiguration(Genotype mom, Genotype dad, Genotype child) {\n        double[] momLikelihoods = MathUtils.normalizeFromLog10(mom.getLikelihoods().getAsVector());\n        double[] dadLikelihoods = MathUtils.normalizeFromLog10(dad.getLikelihoods().getAsVector());\n        double[] childLikelihoods = MathUtils.normalizeFromLog10(child.getLikelihoods().getAsVector());\n\n        int momIndex = mom.getType().ordinal() - 1;\n        int dadIndex = dad.getType().ordinal() - 1;\n        int childIndex = child.getType().ordinal() - 1;\n\n        return momLikelihoods[momIndex]*dadLikelihoods[dadIndex]*childLikelihoods[childIndex];\n    }","commit_id":"f3b38c0d3e5e8325df836927ab95de453cb66eed","url":"https://github.com/broadgsa/gatk"},{"original_method":"/**\n     * Unloads components of the given bundle. If no components have been loaded\n     * for the bundle, this method has no effect.\n     */\n    private void disposeComponents( Bundle bundle )\n    {\n        String name = bundle.getSymbolicName();\n        BundleComponentActivator ga = ( BundleComponentActivator ) m_componentBundles.remove( name );\n        if ( ga != null )\n        {\n            try\n            {\n                ga.dispose( ComponentConstants.DEACTIVATION_REASON_BUNDLE_STOPPED );\n            }\n            catch ( Exception e )\n            {\n                log( LogService.LOG_ERROR, m_context.getBundle(), \"Error while disposing components of bundle \" + name,\n                    e );\n            }\n        }\n    }","id":53268,"modified_method":"/**\n     * Unloads components of the given bundle. If no components have been loaded\n     * for the bundle, this method has no effect.\n     */\n    private void disposeComponents( Bundle bundle )\n    {\n        BundleComponentActivator ga = ( BundleComponentActivator ) m_componentBundles.remove( new Long( bundle\n            .getBundleId() ) );\n        if ( ga != null )\n        {\n            try\n            {\n                ga.dispose( ComponentConstants.DEACTIVATION_REASON_BUNDLE_STOPPED );\n            }\n            catch ( Exception e )\n            {\n                log( LogService.LOG_ERROR, m_context.getBundle(), \"Error while disposing components of bundle \"\n                    + bundle.getSymbolicName() + \"/\" + bundle.getBundleId(), e );\n            }\n        }\n    }","commit_id":"64e99f9fdce5482378d417a0490b04532fd6ffad","url":"https://github.com/apache/felix"},{"original_method":"/**\n     * Loads and unloads any components provided by the bundle whose state\n     * changed. If the bundle has been started, the components are loaded. If\n     * the bundle is about to stop, the components are unloaded.\n     *\n     * @param event The <code>BundleEvent<\/code> representing the bundle state\n     *      change.\n     */\n    public void bundleChanged( BundleEvent event )\n    {\n        if ( event.getType() == BundleEvent.STARTED )\n        {\n            loadComponents( event.getBundle() );\n        }\n        else if ( event.getType() == BundleEvent.STOPPING )\n        {\n            disposeComponents( event.getBundle() );\n        }\n    }","id":53269,"modified_method":"/**\n     * Loads and unloads any components provided by the bundle whose state\n     * changed. If the bundle has been started, the components are loaded. If\n     * the bundle is about to stop, the components are unloaded.\n     *\n     * @param event The <code>BundleEvent<\/code> representing the bundle state\n     *      change.\n     */\n    public void bundleChanged( BundleEvent event )\n    {\n        if ( event.getType() == BundleEvent.LAZY_ACTIVATION || event.getType() == BundleEvent.STARTED )\n        {\n            // FELIX-1666 LAZY_ACTIVATION event is sent if the bundle has lazy\n            // activation policy and is waiting for class loader access to\n            // actually load it; STARTED event is sent if bundle has regular\n            // activation policy or if the lazily activated bundle finally is\n            // really started. In both cases just try to load the components\n            loadComponents( event.getBundle() );\n        }\n        else if ( event.getType() == BundleEvent.STOPPING )\n        {\n            disposeComponents( event.getBundle() );\n        }\n    }","commit_id":"64e99f9fdce5482378d417a0490b04532fd6ffad","url":"https://github.com/apache/felix"},{"original_method":"/**\n     * Loads the components of the given bundle. If the bundle has no\n     * <i>Service-Component<\/i> header, this method has no effect. The\n     * fragments of a bundle are not checked for the header (112.4.1).\n     * <p>\n     * This method calls the {@link #getBundleContext(Bundle)} method to find\n     * the <code>BundleContext<\/code> of the bundle. If the context cannot be\n     * found, this method does not load components for the bundle.\n     */\n    private void loadComponents( Bundle bundle )\n    {\n        if ( bundle.getHeaders().get( \"Service-Component\" ) == null )\n        {\n            // no components in the bundle, abandon\n            return;\n        }\n\n        // there should be components, load them with a bundle context\n        BundleContext context = getBundleContext( bundle );\n        if ( context == null )\n        {\n            log( LogService.LOG_ERROR, m_context.getBundle(), \"Cannot get BundleContext of bundle \"\n                + bundle.getSymbolicName(), null );\n            return;\n        }\n\n        try\n        {\n            BundleComponentActivator ga = new BundleComponentActivator( m_componentRegistry, m_componentActor, context,\n                m_logLevel );\n            m_componentBundles.put( bundle.getSymbolicName(), ga );\n        }\n        catch ( Exception e )\n        {\n            if ( e instanceof IllegalStateException && bundle.getState() != Bundle.ACTIVE )\n            {\n                log(\n                    LogService.LOG_INFO,\n                    m_context.getBundle(),\n                    \"Bundle \"\n                        + bundle.getSymbolicName()\n                        + \" has been stopped while trying to activate its components. Trying again when the bundles gets startet again.\",\n                    e );\n            }\n            else\n            {\n                log( LogService.LOG_ERROR, m_context.getBundle(), \"Error while loading components of bundle \"\n                    + bundle.getSymbolicName(), e );\n            }\n        }\n    }","id":53270,"modified_method":"/**\n     * Loads the components of the given bundle. If the bundle has no\n     * <i>Service-Component<\/i> header, this method has no effect. The\n     * fragments of a bundle are not checked for the header (112.4.1).\n     * <p>\n     * This method calls the {@link #getBundleContext(Bundle)} method to find\n     * the <code>BundleContext<\/code> of the bundle. If the context cannot be\n     * found, this method does not load components for the bundle.\n     */\n    private void loadComponents( Bundle bundle )\n    {\n        if ( bundle.getHeaders().get( \"Service-Component\" ) == null )\n        {\n            // no components in the bundle, abandon\n            return;\n        }\n\n        // FELIX-1666 method is called for the LAZY_ACTIVATION event and\n        // the started event. Both events cause this method to be called;\n        // so we have to make sure to not load components twice\n        if ( m_componentBundles.containsKey( bundle.getBundleId() ) )\n        {\n            log( LogService.LOG_DEBUG, m_context.getBundle(), \"Components for bundle  \" + bundle.getSymbolicName()\n                + \"/\" + bundle.getBundleId() + \" already loaded. Nothing to do\", null );\n            return;\n        }\n\n        // there should be components, load them with a bundle context\n        BundleContext context = getBundleContext( bundle );\n        if ( context == null )\n        {\n            log( LogService.LOG_ERROR, m_context.getBundle(), \"Cannot get BundleContext of bundle \"\n                + bundle.getSymbolicName() + \"/\" + bundle.getBundleId(), null );\n            return;\n        }\n\n        try\n        {\n            BundleComponentActivator ga = new BundleComponentActivator( m_componentRegistry, m_componentActor, context,\n                m_logLevel );\n            m_componentBundles.put( new Long( bundle.getBundleId() ), ga );\n        }\n        catch ( Exception e )\n        {\n            if ( e instanceof IllegalStateException && bundle.getState() != Bundle.ACTIVE )\n            {\n                log(\n                    LogService.LOG_INFO,\n                    m_context.getBundle(),\n                    \"Bundle \"\n                        + bundle.getSymbolicName()\n                        + \"/\"\n                        + bundle.getBundleId()\n                        + \" has been stopped while trying to activate its components. Trying again when the bundles gets startet again.\",\n                    e );\n            }\n            else\n            {\n                log( LogService.LOG_ERROR, m_context.getBundle(), \"Error while loading components of bundle \"\n                    + bundle.getSymbolicName() + \"/\" + bundle.getBundleId(), e );\n            }\n        }\n    }","commit_id":"64e99f9fdce5482378d417a0490b04532fd6ffad","url":"https://github.com/apache/felix"},{"original_method":"@Override\n\tpublic void logged(LogEntry logEntry) {\n\t\tint level = logEntry.getLevel();\n\n\t\tBundle bundle = logEntry.getBundle();\n\n\t\tString symbolicName = StringUtil.replace(\n\t\t\tbundle.getSymbolicName(), StringPool.PERIOD, StringPool.UNDERLINE);\n\n\t\tLog log = LogFactoryUtil.getLog(\"osgi.logging.\" + symbolicName);\n\n\t\tString message = logEntry.getMessage();\n\n\t\tServiceReference<?> serviceReference = logEntry.getServiceReference();\n\n\t\tif (serviceReference != null) {\n\t\t\tmessage += \" \" + serviceReference.toString();\n\t\t}\n\n\t\tif ((level == LogService.LOG_DEBUG) && log.isDebugEnabled()) {\n\t\t\tlog.debug(message, logEntry.getException());\n\t\t}\n\t\telse if ((level == LogService.LOG_ERROR) && log.isErrorEnabled()) {\n\t\t\tlog.error(message, logEntry.getException());\n\t\t}\n\t\telse if ((level == LogService.LOG_INFO) && log.isInfoEnabled()) {\n\t\t\tlog.info(message, logEntry.getException());\n\t\t}\n\t\telse if ((level == LogService.LOG_WARNING) && log.isWarnEnabled()) {\n\t\t\tlog.warn(message, logEntry.getException());\n\t\t}\n\t}","id":53271,"modified_method":"public void logged(LogEntry logEntry) {\n\t\tif (!(logEntry instanceof ExtendedLogEntry)) {\n\t\t\treturn;\n\t\t}\n\n\t\tExtendedLogEntry extendedLogEntry = (ExtendedLogEntry)logEntry;\n\n\t\tObject context = extendedLogEntry.getContext();\n\n\t\tif (context instanceof FrameworkLogEntry) {\n\t\t\tFrameworkLogEntry frameworkLogEntry = (FrameworkLogEntry)context;\n\n\t\t\t_log(\n\t\t\t\tframeworkLogEntry.getEntry(), frameworkLogEntry.getSeverity(),\n\t\t\t\tframeworkLogEntry.getBundleCode(),\n\t\t\t\tframeworkLogEntry.getMessage(), frameworkLogEntry.getContext(),\n\t\t\t\tframeworkLogEntry.getThrowable());\n\n\t\t\tFrameworkLogEntry[] children = frameworkLogEntry.getChildren();\n\n\t\t\tif ((children != null) && (children.length > 0)) {\n\t\t\t\tfor (FrameworkLogEntry curFrameworkLogEntry : children) {\n\t\t\t\t\t_log(\n\t\t\t\t\t\tcurFrameworkLogEntry.getEntry(),\n\t\t\t\t\t\tcurFrameworkLogEntry.getSeverity(),\n\t\t\t\t\t\tcurFrameworkLogEntry.getBundleCode(),\n\t\t\t\t\t\tcurFrameworkLogEntry.getMessage(),\n\t\t\t\t\t\tcurFrameworkLogEntry.getContext(),\n\t\t\t\t\t\tcurFrameworkLogEntry.getThrowable());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tBundle bundle = extendedLogEntry.getBundle();\n\n\t\t_log(\n\t\t\tbundle.getSymbolicName(), extendedLogEntry.getLevel(),\n\t\t\tbundle.getBundleId(), extendedLogEntry.getMessage(),\n\t\t\tcontext, extendedLogEntry.getException());\n\t}","commit_id":"66da3baa5326e8df9c4a087ee86e62d58aa6fe32","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected CompressExtension()\n    {\n        compressor = new Deflater(Deflater.BEST_COMPRESSION, true);\n        decompressor = new Inflater(true);\n        tailDrop = getTailDropMode();\n        rsvUse = getRsvUseMode();\n    }","id":53272,"modified_method":"protected CompressExtension()\n    {\n        deflater = new Deflater(Deflater.DEFAULT_COMPRESSION,NOWRAP);\n        inflater = new Inflater(NOWRAP);\n        tailDrop = getTailDropMode();\n        rsvUse = getRsvUseMode();\n    }","commit_id":"f4f5157ab6579fea149fe633e44b5b878c187d3f","url":"https://github.com/eclipse/jetty.project"},{"original_method":"private void compress(FrameEntry entry, boolean first)\n        {\n            // Get a chunk of the payload to avoid to blow\n            // the heap if the payload is a huge mapped file.\n            Frame frame = entry.frame;\n            ByteBuffer data = frame.getPayload();\n            int remaining = data.remaining();\n            int inputLength = Math.min(remaining, INPUT_BUFSIZE);\n            if (LOG.isDebugEnabled())\n                LOG.debug(\"Compressing {}: {} bytes in {} bytes chunk\", entry, remaining, inputLength);\n\n            // Avoid to copy the bytes if the ByteBuffer\n            // is backed by an array.\n            int inputOffset;\n            byte[] input;\n            if (data.hasArray())\n            {\n                input = data.array();\n                int position = data.position();\n                inputOffset = position + data.arrayOffset();\n                data.position(position + inputLength);\n            }\n            else\n            {\n                input = new byte[inputLength];\n                inputOffset = 0;\n                data.get(input, 0, inputLength);\n            }\n            finished = inputLength == remaining;\n\n            compressor.setInput(input, inputOffset, inputLength);\n\n            // Use an additional space in case the content is not compressible.\n            byte[] output = new byte[inputLength + 64];\n            int outputOffset = 0;\n            int outputLength = 0;\n            while (true)\n            {\n                int space = output.length - outputOffset;\n                int compressed = compressor.deflate(output, outputOffset, space, Deflater.SYNC_FLUSH);\n                outputLength += compressed;\n                if (compressed < space)\n                {\n                    // Everything was compressed.\n                    break;\n                }\n                else\n                {\n                    // The compressed output is bigger than the uncompressed input.\n                    byte[] newOutput = new byte[output.length * 2];\n                    System.arraycopy(output, 0, newOutput, 0, output.length);\n                    outputOffset += output.length;\n                    output = newOutput;\n                }\n            }\n\n            boolean fin = frame.isFin() && finished;\n\n            // Handle tail bytes generated by SYNC_FLUSH.\n            if(tailDrop == TAIL_DROP_ALWAYS) {\n                payload = ByteBuffer.wrap(output, 0, outputLength - TAIL_BYTES.length);\n            } else if(tailDrop == TAIL_DROP_FIN_ONLY) {\n                payload = ByteBuffer.wrap(output, 0, outputLength - (fin?TAIL_BYTES.length:0));\n            } else {\n                // always include\n                payload = ByteBuffer.wrap(output, 0, outputLength);\n            }\n            if (LOG.isDebugEnabled())\n            {\n                LOG.debug(\"Compressed {}: {}->{} chunk bytes\",entry,inputLength,outputLength);\n            }\n\n            boolean continuation = frame.getType().isContinuation() || !first;\n            DataFrame chunk = new DataFrame(frame, continuation);\n            if(rsvUse == RSV_USE_ONLY_FIRST) {\n                chunk.setRsv1(!continuation);\n            } else {\n                // always set\n                chunk.setRsv1(true);\n            }\n            chunk.setPayload(payload);\n            chunk.setFin(fin);\n\n            nextOutgoingFrame(chunk, this, entry.batchMode);\n        }","id":53273,"modified_method":"private void compress(FrameEntry entry, boolean first)\n        {\n            final int flush = Deflater.SYNC_FLUSH;\n\n            // Get a chunk of the payload to avoid to blow\n            // the heap if the payload is a huge mapped file.\n            Frame frame = entry.frame;\n            ByteBuffer data = frame.getPayload();\n            int remaining = data.remaining();\n            int chunkSize = Math.min(remaining,INPUT_BUFSIZE);\n            if (LOG.isDebugEnabled())\n                LOG.debug(\"Compressing {}: {} bytes in {} bytes chunk\",entry,remaining,chunkSize);\n            \n            boolean needsCompress = true;\n            \n            if (deflater.needsInput() && !supplyInput(deflater,data))\n            {\n                // no input supplied\n                needsCompress = false;\n            }\n            \n            ByteArrayOutputStream out = new ByteArrayOutputStream();\n\n            byte[] output = new byte[chunkSize];\n\n            // Compress the data\n            while (needsCompress)\n            {\n                int read = deflater.deflate(output,0,chunkSize,flush);\n                if (read == 0)\n                {\n                    if (deflater.finished())\n                    {\n                        // done\n                        break;\n                    }\n                    else if (deflater.needsInput())\n                    {\n                        if (!supplyInput(deflater,data))\n                        {\n                            // done\n                            needsCompress = false;\n                        }\n                    }\n                }\n                else\n                {\n                    // Append the output for the eventual frame.\n                    out.write(output,0,read);\n                }\n            }\n\n            boolean fin = frame.isFin();\n            \n            ByteBuffer payload = ByteBuffer.wrap(out.toByteArray());\n            \n            if (payload.remaining()>0)\n            {\n                // Handle tail bytes generated by SYNC_FLUSH.\n                LOG.debug(\"compressed bytes[] = {}\",BufferUtil.toDetailString(payload));\n\n                if (tailDrop == TAIL_DROP_ALWAYS)\n                {\n                    if (endsWithTail(payload))\n                    {\n                        payload.limit(payload.limit() - TAIL_BYTES.length);\n                    }\n                    LOG.debug(\"payload (TAIL_DROP_ALWAYS) = {}\",BufferUtil.toDetailString(payload));\n                }\n                else if (tailDrop == TAIL_DROP_FIN_ONLY)\n                {\n                    if (frame.isFin() && endsWithTail(payload))\n                    {\n                        payload.limit(payload.limit() - TAIL_BYTES.length);\n                    }\n                    LOG.debug(\"payload (TAIL_DROP_FIN_ONLY) = {}\",BufferUtil.toDetailString(payload));\n                }\n            }\n            else if (fin)\n            {\n                // Special case: 8.2.3.6.  Generating an Empty Fragment Manually\n                payload = ByteBuffer.wrap(new byte[] { 0x00 });\n            }\n            \n            if (LOG.isDebugEnabled())\n            {\n                LOG.debug(\"Compressed {}: input:{} -> payload:{}\",entry,chunkSize,payload.remaining());\n            }\n\n            boolean continuation = frame.getType().isContinuation() || !first;\n            DataFrame chunk = new DataFrame(frame,continuation);\n            if (rsvUse == RSV_USE_ONLY_FIRST)\n            {\n                chunk.setRsv1(!continuation);\n            }\n            else\n            {\n                // always set\n                chunk.setRsv1(true);\n            }\n            chunk.setPayload(payload);\n            chunk.setFin(fin);\n\n            nextOutgoingFrame(chunk,this,entry.batchMode);\n        }","commit_id":"f4f5157ab6579fea149fe633e44b5b878c187d3f","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public Inflater getInflater()\n    {\n        return decompressor;\n    }","id":53274,"modified_method":"public Inflater getInflater()\n    {\n        return inflater;\n    }","commit_id":"f4f5157ab6579fea149fe633e44b5b878c187d3f","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public Deflater getDeflater()\n    {\n        return compressor;\n    }","id":53275,"modified_method":"public Deflater getDeflater()\n    {\n        return deflater;\n    }","commit_id":"f4f5157ab6579fea149fe633e44b5b878c187d3f","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Override\n    public String toString()\n    {\n        return String.format(\"%s[requested=%s,negotiated=%s]\",\n                getClass().getSimpleName(),\n                configRequested.getParameterizedName(),\n                configNegotiated.getParameterizedName());\n    }","id":53276,"modified_method":"@Override\n    public String toString()\n    {\n        return String.format(\"%s[requested=\\\"%s\\\", negotiated=\\\"%s\\\"]\",\n                getClass().getSimpleName(),\n                configRequested.getParameterizedName(),\n                configNegotiated.getParameterizedName());\n    }","commit_id":"f4f5157ab6579fea149fe633e44b5b878c187d3f","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Override\n    public void incomingFrame(Frame frame)\n    {\n        // Incoming frames are always non concurrent because\n        // they are read and parsed with a single thread, and\n        // therefore there is no need for synchronization.\n\n        // This extension requires the RSV1 bit set only in the first frame.\n        // Subsequent continuation frames don't have RSV1 set, but are compressed.\n        if (frame.getType().isData())\n            incomingCompressed = frame.isRsv1();\n\n        if (OpCode.isControlFrame(frame.getOpCode()) || !frame.hasPayload() || !incomingCompressed)\n        {\n            nextIncomingFrame(frame);\n            return;\n        }\n\n        boolean appendTail = frame.isFin();\n        ByteBuffer payload = frame.getPayload();\n        int remaining = payload.remaining();\n        byte[] input = new byte[remaining + (appendTail ? TAIL_BYTES.length : 0)];\n        payload.get(input, 0, remaining);\n        if (appendTail)\n            System.arraycopy(TAIL_BYTES, 0, input, remaining, TAIL_BYTES.length);\n\n        forwardIncoming(frame, decompress(input));\n\n        if (frame.isFin())\n            incomingCompressed = false;\n    }","id":53277,"modified_method":"@Override\n    public void incomingFrame(Frame frame)\n    {\n        // Incoming frames are always non concurrent because\n        // they are read and parsed with a single thread, and\n        // therefore there is no need for synchronization.\n\n        // This extension requires the RSV1 bit set only in the first frame.\n        // Subsequent continuation frames don't have RSV1 set, but are compressed.\n        if (frame.getType().isData())\n        {\n            incomingCompressed = frame.isRsv1();\n        }\n\n        if (OpCode.isControlFrame(frame.getOpCode()) || !incomingCompressed)\n        {\n            nextIncomingFrame(frame);\n            return;\n        }\n        \n        ByteAccumulator accumulator = newByteAccumulator();\n        \n        try \n        {\n            ByteBuffer payload = frame.getPayload();\n            decompress(accumulator, payload);\n            if (frame.isFin())\n            {\n                decompress(accumulator, TAIL_BYTES_BUF.slice());\n            }\n            \n            forwardIncoming(frame, accumulator);\n        }\n        catch (DataFormatException e)\n        {\n            throw new BadPayloadException(e);\n        }\n\n        if (frame.isFin())\n            incomingCompressed = false;\n    }","commit_id":"f4f5157ab6579fea149fe633e44b5b878c187d3f","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Override\n    protected void nextIncomingFrame(Frame frame)\n    {\n        if (frame.isFin() && !incomingContextTakeover)\n        {\n            LOG.debug(\"Incoming Context Reset\");\n            getInflater().reset();\n        }\n        super.nextIncomingFrame(frame);\n    }","id":53278,"modified_method":"@Override\n    protected void nextIncomingFrame(Frame frame)\n    {\n        if (frame.isFin() && !incomingContextTakeover)\n        {\n            LOG.debug(\"Incoming Context Reset\");\n            decompressCount.set(0);\n            getInflater().reset();\n        }\n        super.nextIncomingFrame(frame);\n    }","commit_id":"f4f5157ab6579fea149fe633e44b5b878c187d3f","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Override\n    public void setConfig(final ExtensionConfig config)\n    {\n        configRequested = new ExtensionConfig(config);\n        configNegotiated = new ExtensionConfig(config.getName());\n        \n        for (String key : config.getParameterKeys())\n        {\n            key = key.trim();\n            switch (key)\n            {\n                case \"client_max_window_bits\":\n                case \"server_max_window_bits\":\n                {\n                    // Not supported by Jetty\n                    // Don't negotiate these parameters\n                    break;\n                }\n                case \"client_no_context_takeover\":\n                {\n                    configNegotiated.setParameter(\"client_no_context_takeover\");\n                    switch (getPolicy().getBehavior())\n                    {\n                        case CLIENT:\n                            incomingContextTakeover = false;\n                            break;\n                        case SERVER:\n                            outgoingContextTakeover = false;\n                            break;\n                    }\n                    break;\n                }\n                case \"server_no_context_takeover\":\n                {\n                    configNegotiated.setParameter(\"server_no_context_takeover\");\n                    switch (getPolicy().getBehavior())\n                    {\n                        case CLIENT:\n                            outgoingContextTakeover = false;\n                            break;\n                        case SERVER:\n                            incomingContextTakeover = false;\n                            break;\n                    }\n                    break;\n                }\n                default:\n                {\n                    throw new IllegalArgumentException();\n                }\n            }\n        }\n\n        super.setConfig(configNegotiated);\n    }","id":53279,"modified_method":"@Override\n    public void setConfig(final ExtensionConfig config)\n    {\n        configRequested = new ExtensionConfig(config);\n        configNegotiated = new ExtensionConfig(config.getName());\n        \n        for (String key : config.getParameterKeys())\n        {\n            key = key.trim();\n            switch (key)\n            {\n                case \"client_max_window_bits\":\n                case \"server_max_window_bits\":\n                {\n                    // Not supported by Jetty\n                    // Don't negotiate these parameters\n                    break;\n                }\n                case \"client_no_context_takeover\":\n                {\n                    configNegotiated.setParameter(\"client_no_context_takeover\");\n                    switch (getPolicy().getBehavior())\n                    {\n                        case CLIENT:\n                            incomingContextTakeover = false;\n                            break;\n                        case SERVER:\n                            outgoingContextTakeover = false;\n                            break;\n                    }\n                    break;\n                }\n                case \"server_no_context_takeover\":\n                {\n                    configNegotiated.setParameter(\"server_no_context_takeover\");\n                    switch (getPolicy().getBehavior())\n                    {\n                        case CLIENT:\n                            outgoingContextTakeover = false;\n                            break;\n                        case SERVER:\n                            incomingContextTakeover = false;\n                            break;\n                    }\n                    break;\n                }\n                default:\n                {\n                    throw new IllegalArgumentException();\n                }\n            }\n        }\n        \n        LOG.debug(\"config: outgoingContextTakover={}, incomingContextTakeover={} : {}\", outgoingContextTakeover, incomingContextTakeover, this);\n\n        super.setConfig(configNegotiated);\n    }","commit_id":"f4f5157ab6579fea149fe633e44b5b878c187d3f","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public BadFrame(byte opcode)\n        {\n            super();\n            super.opcode = opcode;\n            // NOTE: Not setting Frame.Type intentionally\n        }","id":53280,"modified_method":"public BadFrame(byte opcode)\n        {\n            super();\n            super.finRsvOp = (byte)((finRsvOp & 0xF0) | (opcode & 0x0F));\n            // NOTE: Not setting Frame.Type intentionally\n        }","commit_id":"980effaedeea8e81322a2a7b836834a9a7a0883c","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public boolean isDataFrame()\n    {\n        return OpCode.isDataFrame(opcode);\n    }","id":53281,"modified_method":"public boolean isDataFrame()\n    {\n        return OpCode.isDataFrame(getOpCode());\n    }","commit_id":"980effaedeea8e81322a2a7b836834a9a7a0883c","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Override\n    public boolean isRsv3()\n    {\n        return rsv3;\n    }","id":53282,"modified_method":"@Override\n    public boolean isRsv3()\n    {\n        return (byte)(finRsvOp & 0x10) != 0;\n    }","commit_id":"980effaedeea8e81322a2a7b836834a9a7a0883c","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public WebSocketFrame setRsv2(boolean rsv2)\n    {\n        this.rsv2 = rsv2;\n        return this;\n    }","id":53283,"modified_method":"public WebSocketFrame setRsv2(boolean rsv2)\n    {\n        // set bit 3\n        this.finRsvOp = (byte)((finRsvOp & 0xDF) | (rsv2? 0x20:0x00));\n        return this;\n    }","commit_id":"980effaedeea8e81322a2a7b836834a9a7a0883c","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public boolean isControlFrame()\n    {\n        return OpCode.isControlFrame(opcode);\n    }","id":53284,"modified_method":"public boolean isControlFrame()\n    {\n        return OpCode.isControlFrame(getOpCode());\n    }","commit_id":"980effaedeea8e81322a2a7b836834a9a7a0883c","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public WebSocketFrame setRsv3(boolean rsv3)\n    {\n        this.rsv3 = rsv3;\n        return this;\n    }","id":53285,"modified_method":"public WebSocketFrame setRsv3(boolean rsv3)\n    {\n        // set bit 4\n        this.finRsvOp = (byte)((finRsvOp & 0xEF) | (rsv3? 0x10:0x00));\n        return this;\n    }","commit_id":"980effaedeea8e81322a2a7b836834a9a7a0883c","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public boolean isLastFrame()\n    {\n        return fin;\n    }","id":53286,"modified_method":"public boolean isLastFrame()\n    {\n        return isFin();\n    }","commit_id":"980effaedeea8e81322a2a7b836834a9a7a0883c","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Override\n    public boolean isFin()\n    {\n        return fin;\n    }","id":53287,"modified_method":"@Override\n    public boolean isFin()\n    {\n        return (byte)(finRsvOp & 0x80) != 0;\n    }","commit_id":"980effaedeea8e81322a2a7b836834a9a7a0883c","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Override\n    public String toString()\n    {\n        StringBuilder b = new StringBuilder();\n        b.append(OpCode.name(opcode));\n        b.append('[');\n        b.append(\"len=\").append(payloadLength);\n        b.append(\",fin=\").append(fin);\n        b.append(\",rsv=\");\n        b.append(rsv1?'1':'.');\n        b.append(rsv2?'1':'.');\n        b.append(rsv3?'1':'.');\n        b.append(\",masked=\").append(masked);\n        b.append(\",continuation=\").append(continuation);\n        b.append(\",remaining=\").append(remaining());\n        b.append(\",position=\").append(position());\n        b.append(']');\n        return b.toString();\n    }","id":53288,"modified_method":"@Override\n    public String toString()\n    {\n        StringBuilder b = new StringBuilder();\n        b.append(OpCode.name((byte)(finRsvOp & 0x0F)));\n        b.append('[');\n        b.append(\"len=\").append(payloadLength);\n        b.append(\",fin=\").append((finRsvOp & 0x80)!=0);\n        b.append(\",rsv=\");\n        b.append(((finRsvOp&0x40)!=0)?'1':'.');\n        b.append(((finRsvOp&0x20)!=0)?'1':'.');\n        b.append(((finRsvOp&0x10)!=0)?'1':'.');\n        b.append(\",masked=\").append(masked);\n        b.append(\",continuation=\").append(continuation);\n        b.append(\",remaining=\").append(remaining());\n        b.append(\",position=\").append(position());\n        b.append(']');\n        return b.toString();\n    }","commit_id":"980effaedeea8e81322a2a7b836834a9a7a0883c","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public void assertValid()\n    {\n        if (OpCode.isControlFrame(opcode))\n        {\n            if (getPayloadLength() > WebSocketFrame.MAX_CONTROL_PAYLOAD)\n            {\n                throw new ProtocolException(\"Desired payload length [\" + getPayloadLength() + \"] exceeds maximum control payload length [\"\n                        + MAX_CONTROL_PAYLOAD + \"]\");\n            }\n\n            if (fin == false)\n            {\n                throw new ProtocolException(\"Cannot have FIN==false on Control frames\");\n            }\n\n            if (rsv1 == true)\n            {\n                throw new ProtocolException(\"Cannot have RSV1==true on Control frames\");\n            }\n\n            if (rsv2 == true)\n            {\n                throw new ProtocolException(\"Cannot have RSV2==true on Control frames\");\n            }\n\n            if (rsv3 == true)\n            {\n                throw new ProtocolException(\"Cannot have RSV3==true on Control frames\");\n            }\n\n            if (isContinuation())\n            {\n                throw new ProtocolException(\"Control frames cannot be Continuations\");\n            }\n        }\n    }","id":53289,"modified_method":"public void assertValid()\n    {\n        if (isControlFrame())\n        {\n            if (getPayloadLength() > WebSocketFrame.MAX_CONTROL_PAYLOAD)\n            {\n                throw new ProtocolException(\"Desired payload length [\" + getPayloadLength() + \"] exceeds maximum control payload length [\"\n                        + MAX_CONTROL_PAYLOAD + \"]\");\n            }\n\n            if ((finRsvOp & 0x80) == 0)\n            {\n                throw new ProtocolException(\"Cannot have FIN==false on Control frames\");\n            }\n\n            if ((finRsvOp & 0x40) != 0)\n            {\n                throw new ProtocolException(\"Cannot have RSV1==true on Control frames\");\n            }\n\n            if ((finRsvOp & 0x20) != 0)\n            {\n                throw new ProtocolException(\"Cannot have RSV2==true on Control frames\");\n            }\n\n            if ((finRsvOp & 0x10) != 0)\n            {\n                throw new ProtocolException(\"Cannot have RSV3==true on Control frames\");\n            }\n\n            if (isContinuation())\n            {\n                throw new ProtocolException(\"Control frames cannot be Continuations\");\n            }\n        }\n    }","commit_id":"980effaedeea8e81322a2a7b836834a9a7a0883c","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Override\n    public boolean isLast()\n    {\n        return fin;\n    }","id":53290,"modified_method":"@Override\n    public boolean isLast()\n    {\n        return isFin();\n    }","commit_id":"980effaedeea8e81322a2a7b836834a9a7a0883c","url":"https://github.com/eclipse/jetty.project"},{"original_method":"/**\n     * Set the data and payload length.\n     * \n     * @param buf\n     *            the bytebuffer to set\n     */\n    public WebSocketFrame setPayload(byte buf[], int offset, int len)\n    {\n        if (buf == null)\n        {\n            data = null;\n            return this;\n        }\n\n        if (OpCode.isControlFrame(opcode))\n        {\n            if (len > WebSocketFrame.MAX_CONTROL_PAYLOAD)\n            {\n                throw new ProtocolException(\"Control Payloads can not exceed 125 bytes in length.\");\n            }\n        }\n\n        data = BufferUtil.toBuffer(buf,offset,len);\n        payloadLength = data.limit();\n        return this;\n    }","id":53291,"modified_method":"/**\n     * Set the data and payload length.\n     * \n     * @param buf\n     *            the bytebuffer to set\n     */\n    public WebSocketFrame setPayload(byte buf[], int offset, int len)\n    {\n        if (buf == null)\n        {\n            data = null;\n            return this;\n        }\n\n        if (isControlFrame())\n        {\n            if (len > WebSocketFrame.MAX_CONTROL_PAYLOAD)\n            {\n                throw new ProtocolException(\"Control Payloads can not exceed 125 bytes in length.\");\n            }\n        }\n\n        data = BufferUtil.toBuffer(buf,offset,len);\n        payloadLength = data.limit();\n        return this;\n    }","commit_id":"980effaedeea8e81322a2a7b836834a9a7a0883c","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Override\n    public boolean equals(Object obj)\n    {\n        if (this == obj)\n        {\n            return true;\n        }\n        if (obj == null)\n        {\n            return false;\n        }\n        if (getClass() != obj.getClass())\n        {\n            return false;\n        }\n        WebSocketFrame other = (WebSocketFrame)obj;\n        if (continuation != other.continuation)\n        {\n            return false;\n        }\n        if (continuationIndex != other.continuationIndex)\n        {\n            return false;\n        }\n        if (data == null)\n        {\n            if (other.data != null)\n            {\n                return false;\n            }\n        }\n        else if (!data.equals(other.data))\n        {\n            return false;\n        }\n        if (fin != other.fin)\n        {\n            return false;\n        }\n        if (!Arrays.equals(mask,other.mask))\n        {\n            return false;\n        }\n        if (masked != other.masked)\n        {\n            return false;\n        }\n        if (opcode != other.opcode)\n        {\n            return false;\n        }\n        if (rsv1 != other.rsv1)\n        {\n            return false;\n        }\n        if (rsv2 != other.rsv2)\n        {\n            return false;\n        }\n        if (rsv3 != other.rsv3)\n        {\n            return false;\n        }\n        return true;\n    }","id":53292,"modified_method":"@Override\n    public boolean equals(Object obj)\n    {\n        if (this == obj)\n        {\n            return true;\n        }\n        if (obj == null)\n        {\n            return false;\n        }\n        if (getClass() != obj.getClass())\n        {\n            return false;\n        }\n        WebSocketFrame other = (WebSocketFrame)obj;\n        if (continuation != other.continuation)\n        {\n            return false;\n        }\n        if (continuationIndex != other.continuationIndex)\n        {\n            return false;\n        }\n        if (data == null)\n        {\n            if (other.data != null)\n            {\n                return false;\n            }\n        }\n        else if (!data.equals(other.data))\n        {\n            return false;\n        }\n        if (finRsvOp != other.finRsvOp)\n        {\n            return false;\n        }\n        if (!Arrays.equals(mask,other.mask))\n        {\n            return false;\n        }\n        if (masked != other.masked)\n        {\n            return false;\n        }\n        return true;\n    }","commit_id":"980effaedeea8e81322a2a7b836834a9a7a0883c","url":"https://github.com/eclipse/jetty.project"},{"original_method":"private final void copy(WebSocketFrame copy, ByteBuffer payload)\n    {\n        fin = copy.fin;\n        rsv1 = copy.rsv1;\n        rsv2 = copy.rsv2;\n        rsv3 = copy.rsv3;\n        opcode = copy.opcode;\n        type = copy.type;\n        masked = copy.masked;\n        mask = null;\n        if (copy.mask != null)\n        {\n            mask = new byte[copy.mask.length];\n            System.arraycopy(copy.mask,0,mask,0,mask.length);\n        }\n        continuationIndex = copy.continuationIndex;\n        continuation = copy.continuation;\n\n        setPayload(payload);\n    }","id":53293,"modified_method":"private final void copy(WebSocketFrame copy, ByteBuffer payload)\n    {\n        finRsvOp = copy.finRsvOp;\n        type = copy.type;\n        masked = copy.masked;\n        mask = null;\n        if (copy.mask != null)\n        {\n            mask = new byte[copy.mask.length];\n            System.arraycopy(copy.mask,0,mask,0,mask.length);\n        }\n        continuationIndex = copy.continuationIndex;\n        continuation = copy.continuation;\n\n        setPayload(payload);\n    }","commit_id":"980effaedeea8e81322a2a7b836834a9a7a0883c","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Override\n    public boolean isRsv2()\n    {\n        return rsv2;\n    }","id":53294,"modified_method":"@Override\n    public boolean isRsv2()\n    {\n        return (byte)(finRsvOp & 0x20) != 0;\n    }","commit_id":"980effaedeea8e81322a2a7b836834a9a7a0883c","url":"https://github.com/eclipse/jetty.project"},{"original_method":"/**\n     * Copy constructor for the websocket frame.\n     * \n     * @param copy\n     *            the websocket to copy.\n     */\n    public WebSocketFrame(Frame frame)\n    {\n        if (frame instanceof WebSocketFrame)\n        {\n            WebSocketFrame wsf = (WebSocketFrame)frame;\n            copy(wsf,wsf.data);\n        }\n        else\n        {\n            // Copy manually\n            fin = frame.isFin();\n            rsv1 = frame.isRsv1();\n            rsv2 = frame.isRsv2();\n            rsv3 = frame.isRsv3();\n            opcode = frame.getType().getOpCode();\n            type = frame.getType();\n            masked = frame.isMasked();\n            mask = null;\n            byte maskCopy[] = frame.getMask();\n            if (maskCopy != null)\n            {\n                mask = new byte[maskCopy.length];\n                System.arraycopy(maskCopy,0,mask,0,mask.length);\n            }\n\n            setPayload(frame.getPayload());\n        }\n    }","id":53295,"modified_method":"/**\n     * Copy constructor for the websocket frame.\n     * \n     * @param copy\n     *            the websocket to copy.\n     */\n    public WebSocketFrame(Frame frame)\n    {\n        if (frame instanceof WebSocketFrame)\n        {\n            WebSocketFrame wsf = (WebSocketFrame)frame;\n            copy(wsf,wsf.data);\n        }\n        else\n        {\n            // Copy manually\n            finRsvOp = 0x00;\n            finRsvOp |= frame.isFin() ? 0x80 : 0x00;\n            finRsvOp |= frame.isRsv1() ? 0x40 : 0x00;\n            finRsvOp |= frame.isRsv2() ? 0x20 : 0x00;\n            finRsvOp |= frame.isRsv3() ? 0x10 : 0x00;\n            finRsvOp |= frame.getOpCode() & 0x0F;\n            \n            type = frame.getType();\n            masked = frame.isMasked();\n            mask = null;\n            byte maskCopy[] = frame.getMask();\n            if (maskCopy != null)\n            {\n                mask = new byte[maskCopy.length];\n                System.arraycopy(maskCopy,0,mask,0,mask.length);\n            }\n\n            setPayload(frame.getPayload());\n        }\n    }","commit_id":"980effaedeea8e81322a2a7b836834a9a7a0883c","url":"https://github.com/eclipse/jetty.project"},{"original_method":"/**\n     * Set the data and payload length.\n     * \n     * @param buf\n     *            the bytebuffer to set\n     */\n    public WebSocketFrame setPayload(byte buf[])\n    {\n        if (buf == null)\n        {\n            data = null;\n            return this;\n        }\n\n        if (OpCode.isControlFrame(opcode))\n        {\n            if (buf.length > WebSocketFrame.MAX_CONTROL_PAYLOAD)\n            {\n                throw new ProtocolException(\"Control Payloads can not exceed 125 bytes in length.\");\n            }\n        }\n\n        data = ByteBuffer.wrap(buf);\n        payloadLength = data.remaining();\n        return this;\n    }","id":53296,"modified_method":"/**\n     * Set the data and payload length.\n     * \n     * @param buf\n     *            the bytebuffer to set\n     */\n    public WebSocketFrame setPayload(byte buf[])\n    {\n        if (buf == null)\n        {\n            data = null;\n            return this;\n        }\n\n        if (isControlFrame())\n        {\n            if (buf.length > WebSocketFrame.MAX_CONTROL_PAYLOAD)\n            {\n                throw new ProtocolException(\"Control Payloads can not exceed 125 bytes in length.\");\n            }\n        }\n\n        data = ByteBuffer.wrap(buf);\n        payloadLength = data.remaining();\n        return this;\n    }","commit_id":"980effaedeea8e81322a2a7b836834a9a7a0883c","url":"https://github.com/eclipse/jetty.project"},{"original_method":"/**\n     * Set the data payload.\n     * <p>\n     * The provided buffer will be used as is, no copying of bytes performed.\n     * <p>\n     * The provided buffer should be flipped and ready to READ from.\n     * \n     * @param buf\n     *            the bytebuffer to set\n     */\n    public WebSocketFrame setPayload(ByteBuffer buf)\n    {\n        if (buf == null)\n        {\n            data = null;\n            return this;\n        }\n\n        if (OpCode.isControlFrame(opcode))\n        {\n            if (buf.remaining() > WebSocketFrame.MAX_CONTROL_PAYLOAD)\n            {\n                throw new ProtocolException(\"Control Payloads can not exceed 125 bytes in length. (was \" + buf.remaining() + \" bytes)\");\n            }\n        }\n\n        data = buf.slice();\n        payloadLength = data.limit();\n        return this;\n    }","id":53297,"modified_method":"/**\n     * Set the data payload.\n     * <p>\n     * The provided buffer will be used as is, no copying of bytes performed.\n     * <p>\n     * The provided buffer should be flipped and ready to READ from.\n     * \n     * @param buf\n     *            the bytebuffer to set\n     */\n    public WebSocketFrame setPayload(ByteBuffer buf)\n    {\n        if (buf == null)\n        {\n            data = null;\n            return this;\n        }\n\n        if (isControlFrame())\n        {\n            if (buf.remaining() > WebSocketFrame.MAX_CONTROL_PAYLOAD)\n            {\n                throw new ProtocolException(\"Control Payloads can not exceed 125 bytes in length. (was \" + buf.remaining() + \" bytes)\");\n            }\n        }\n\n        data = buf.slice();\n        payloadLength = data.limit();\n        return this;\n    }","commit_id":"980effaedeea8e81322a2a7b836834a9a7a0883c","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Override\n    public boolean isRsv1()\n    {\n        return rsv1;\n    }","id":53298,"modified_method":"@Override\n    public boolean isRsv1()\n    {\n        return (byte)(finRsvOp & 0x40) != 0;\n    }","commit_id":"980effaedeea8e81322a2a7b836834a9a7a0883c","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public WebSocketFrame setFin(boolean fin)\n    {\n        this.fin = fin;\n        return this;\n    }","id":53299,"modified_method":"public WebSocketFrame setFin(boolean fin)\n    {\n        // set bit 1\n        this.finRsvOp = (byte)((finRsvOp & 0x7F) | (fin? 0x80:0x00));\n        return this;\n    }","commit_id":"980effaedeea8e81322a2a7b836834a9a7a0883c","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public WebSocketFrame setRsv1(boolean rsv1)\n    {\n        this.rsv1 = rsv1;\n        return this;\n    }","id":53300,"modified_method":"public WebSocketFrame setRsv1(boolean rsv1)\n    {\n        // set bit 2\n        this.finRsvOp = (byte)((finRsvOp & 0xBF) | (rsv1? 0x40:0x00));\n        return this;\n    }","commit_id":"980effaedeea8e81322a2a7b836834a9a7a0883c","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Override\n    public int hashCode()\n    {\n        final int prime = 31;\n        int result = 1;\n        result = (prime * result) + (continuation?1231:1237);\n        result = (prime * result) + continuationIndex;\n        result = (prime * result) + ((data == null)?0:data.hashCode());\n        result = (prime * result) + (fin?1231:1237);\n        result = (prime * result) + Arrays.hashCode(mask);\n        result = (prime * result) + (masked?1231:1237);\n        result = (prime * result) + opcode;\n        result = (prime * result) + (rsv1?1231:1237);\n        result = (prime * result) + (rsv2?1231:1237);\n        result = (prime * result) + (rsv3?1231:1237);\n        return result;\n    }","id":53301,"modified_method":"@Override\n    public int hashCode()\n    {\n        final int prime = 31;\n        int result = 1;\n        result = (prime * result) + (continuation?1231:1237);\n        result = (prime * result) + continuationIndex;\n        result = (prime * result) + ((data == null)?0:data.hashCode());\n        result = (prime * result) + finRsvOp;\n        result = (prime * result) + Arrays.hashCode(mask);\n        return result;\n    }","commit_id":"980effaedeea8e81322a2a7b836834a9a7a0883c","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public void reset()\n    {\n        fin = true;\n        rsv1 = false;\n        rsv2 = false;\n        rsv3 = false;\n        opcode = -1;\n        masked = false;\n        data = null;\n        payloadLength = 0;\n        mask = null;\n        continuationIndex = 0;\n        continuation = false;\n    }","id":53302,"modified_method":"public void reset()\n    {\n        finRsvOp = (byte) 0x80; // FIN (!RSV, opcode 0) \n        masked = false;\n        data = null;\n        payloadLength = 0;\n        mask = null;\n        continuationIndex = 0;\n        continuation = false;\n    }","commit_id":"980effaedeea8e81322a2a7b836834a9a7a0883c","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public WebSocketFrame setOpCode(byte op)\n    {\n        this.opcode = op;\n\n        if (op == OpCode.UNDEFINED)\n        {\n            this.type = null;\n        }\n        else\n        {\n            this.type = Frame.Type.from(op);\n        }\n        return this;\n    }","id":53303,"modified_method":"public WebSocketFrame setOpCode(byte op)\n    {\n        this.finRsvOp = (byte)((finRsvOp & 0xF0) | (op & 0x0F));\n\n        if (op == OpCode.UNDEFINED)\n        {\n            this.type = null;\n        }\n        else\n        {\n            this.type = Frame.Type.from(op);\n        }\n        return this;\n    }","commit_id":"980effaedeea8e81322a2a7b836834a9a7a0883c","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Override\n    public final byte getOpCode()\n    {\n        return opcode;\n    }","id":53304,"modified_method":"@Override\n    public final byte getOpCode()\n    {\n        return (byte)(finRsvOp & 0x0F);\n    }","commit_id":"980effaedeea8e81322a2a7b836834a9a7a0883c","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    public void testLaxInvalidPing()\n    {\n        WebSocketFrame frame = new WebSocketFrame(OpCode.PING).setFin(false);\n        ByteBuffer actual = generateWholeFrame(laxGenerator,frame);\n        ByteBuffer expected = ByteBuffer.allocate(2);\n        expected.put((byte)0x09);\n        expected.put((byte)0x00);\n\n        assertEqual(\"Lax Invalid Ping Frame\",expected,actual);\n    }","id":53305,"modified_method":"@Test\n    public void testLaxInvalidPing()\n    {\n        WebSocketFrame frame = new WebSocketFrame(OpCode.PING).setFin(false);\n        ByteBuffer actual = generateWholeFrame(laxGenerator,frame);\n        String expected = \"0900\";\n        assertFrameHex(\"Lax Invalid Ping Frame\",expected,actual);\n    }","commit_id":"980effaedeea8e81322a2a7b836834a9a7a0883c","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    public void testStrictValidClose()\n    {\n        CloseInfo close = new CloseInfo(StatusCode.NORMAL);\n        ByteBuffer actual = generateWholeFrame(strictGenerator,close.asFrame());\n        ByteBuffer expected = ByteBuffer.allocate(4);\n        expected.put((byte)0x88);\n        expected.put((byte)0x02);\n        expected.put((byte)0x03);\n        expected.put((byte)0xE8);\n\n        assertEqual(\"Strict Valid Close Frame\",expected,actual);\n    }","id":53306,"modified_method":"@Test\n    public void testStrictValidClose()\n    {\n        CloseInfo close = new CloseInfo(StatusCode.NORMAL);\n        ByteBuffer actual = generateWholeFrame(strictGenerator,close.asFrame());\n        String expected = \"880203E8\";\n        assertFrameHex(\"Strict Valid Close Frame\",expected,actual);\n    }","commit_id":"980effaedeea8e81322a2a7b836834a9a7a0883c","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    public void testLaxInvalidClose()\n    {\n        WebSocketFrame frame = new WebSocketFrame(OpCode.CLOSE).setFin(false);\n        ByteBuffer actual = generateWholeFrame(laxGenerator,frame);\n        ByteBuffer expected = ByteBuffer.allocate(2);\n        expected.put((byte)0x08);\n        expected.put((byte)0x00);\n\n        assertEqual(\"Lax Invalid Close Frame\",expected,actual);\n    }","id":53307,"modified_method":"@Test\n    public void testLaxInvalidClose()\n    {\n        WebSocketFrame frame = new WebSocketFrame(OpCode.CLOSE).setFin(false);\n        ByteBuffer actual = generateWholeFrame(laxGenerator,frame);\n        String expected = \"0800\";\n        assertFrameHex(\"Lax Invalid Close Frame\",expected,actual);\n    }","commit_id":"980effaedeea8e81322a2a7b836834a9a7a0883c","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    public void testStrictValidPing()\n    {\n        WebSocketFrame frame = new WebSocketFrame(OpCode.PING);\n        ByteBuffer actual = generateWholeFrame(strictGenerator,frame);\n        ByteBuffer expected = ByteBuffer.allocate(2);\n        expected.put((byte)0x89);\n        expected.put((byte)0x00);\n\n        assertEqual(\"Strict Valid Ping Frame\",expected,actual);\n    }","id":53308,"modified_method":"@Test\n    public void testStrictValidPing()\n    {\n        WebSocketFrame frame = new WebSocketFrame(OpCode.PING);\n        ByteBuffer actual = generateWholeFrame(strictGenerator,frame);\n        String expected = \"8900\";\n        assertFrameHex(\"Strict Valid Ping Frame\",expected,actual);\n    }","commit_id":"980effaedeea8e81322a2a7b836834a9a7a0883c","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public Inflater getInflater()\n    {\n        return decompressor;\n    }","id":53309,"modified_method":"public Inflater getInflater()\n    {\n        return inflater;\n    }","commit_id":"aac9568a30e133dad5633dd22f0a43f58346513f","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public Deflater getDeflater()\n    {\n        return compressor;\n    }","id":53310,"modified_method":"public Deflater getDeflater()\n    {\n        return deflater;\n    }","commit_id":"aac9568a30e133dad5633dd22f0a43f58346513f","url":"https://github.com/eclipse/jetty.project"},{"original_method":"protected CompressExtension()\n    {\n        compressor = new Deflater(Deflater.BEST_COMPRESSION, true);\n        decompressor = new Inflater(true);\n        tailDrop = getTailDropMode();\n        rsvUse = getRsvUseMode();\n    }","id":53311,"modified_method":"protected CompressExtension()\n    {\n        deflater = new Deflater(Deflater.DEFAULT_COMPRESSION,NOWRAP);\n        inflater = new Inflater(NOWRAP);\n        tailDrop = getTailDropMode();\n        rsvUse = getRsvUseMode();\n    }","commit_id":"aac9568a30e133dad5633dd22f0a43f58346513f","url":"https://github.com/eclipse/jetty.project"},{"original_method":"private void compress(FrameEntry entry, boolean first)\n        {\n            // Get a chunk of the payload to avoid to blow\n            // the heap if the payload is a huge mapped file.\n            Frame frame = entry.frame;\n            ByteBuffer data = frame.getPayload();\n            int remaining = data.remaining();\n            int inputLength = Math.min(remaining, INPUT_BUFSIZE);\n            if (LOG.isDebugEnabled())\n                LOG.debug(\"Compressing {}: {} bytes in {} bytes chunk\", entry, remaining, inputLength);\n\n            // Avoid to copy the bytes if the ByteBuffer\n            // is backed by an array.\n            int inputOffset;\n            byte[] input;\n            if (data.hasArray())\n            {\n                input = data.array();\n                int position = data.position();\n                inputOffset = position + data.arrayOffset();\n                data.position(position + inputLength);\n            }\n            else\n            {\n                input = new byte[inputLength];\n                inputOffset = 0;\n                data.get(input, 0, inputLength);\n            }\n            finished = inputLength == remaining;\n\n            compressor.setInput(input, inputOffset, inputLength);\n\n            // Use an additional space in case the content is not compressible.\n            byte[] output = new byte[inputLength + 64];\n            int outputOffset = 0;\n            int outputLength = 0;\n            while (true)\n            {\n                int space = output.length - outputOffset;\n                int compressed = compressor.deflate(output, outputOffset, space, Deflater.SYNC_FLUSH);\n                outputLength += compressed;\n                if (compressed < space)\n                {\n                    // Everything was compressed.\n                    break;\n                }\n                else\n                {\n                    // The compressed output is bigger than the uncompressed input.\n                    byte[] newOutput = new byte[output.length * 2];\n                    System.arraycopy(output, 0, newOutput, 0, output.length);\n                    outputOffset += output.length;\n                    output = newOutput;\n                }\n            }\n\n            boolean fin = frame.isFin() && finished;\n\n            // Handle tail bytes generated by SYNC_FLUSH.\n            if(tailDrop == TAIL_DROP_ALWAYS) {\n                payload = ByteBuffer.wrap(output, 0, outputLength - TAIL_BYTES.length);\n            } else if(tailDrop == TAIL_DROP_FIN_ONLY) {\n                payload = ByteBuffer.wrap(output, 0, outputLength - (fin?TAIL_BYTES.length:0));\n            } else {\n                // always include\n                payload = ByteBuffer.wrap(output, 0, outputLength);\n            }\n            if (LOG.isDebugEnabled())\n            {\n                LOG.debug(\"Compressed {}: {}->{} chunk bytes\",entry,inputLength,outputLength);\n            }\n\n            boolean continuation = frame.getType().isContinuation() || !first;\n            DataFrame chunk = new DataFrame(frame, continuation);\n            if(rsvUse == RSV_USE_ONLY_FIRST) {\n                chunk.setRsv1(!continuation);\n            } else {\n                // always set\n                chunk.setRsv1(true);\n            }\n            chunk.setPayload(payload);\n            chunk.setFin(fin);\n\n            nextOutgoingFrame(chunk, this, entry.batchMode);\n        }","id":53312,"modified_method":"private void compress(FrameEntry entry, boolean first)\n        {\n            final int flush = Deflater.SYNC_FLUSH;\n\n            // Get a chunk of the payload to avoid to blow\n            // the heap if the payload is a huge mapped file.\n            Frame frame = entry.frame;\n            ByteBuffer data = frame.getPayload();\n            int remaining = data.remaining();\n            int chunkSize = Math.min(remaining,INPUT_BUFSIZE);\n            if (LOG.isDebugEnabled())\n                LOG.debug(\"Compressing {}: {} bytes in {} bytes chunk\",entry,remaining,chunkSize);\n            \n            boolean needsCompress = true;\n            \n            if (deflater.needsInput() && !supplyInput(deflater,data))\n            {\n                // no input supplied\n                needsCompress = false;\n            }\n            \n            ByteArrayOutputStream out = new ByteArrayOutputStream();\n\n            byte[] output = new byte[chunkSize];\n\n            // Compress the data\n            while (needsCompress)\n            {\n                int read = deflater.deflate(output,0,chunkSize,flush);\n                if (read == 0)\n                {\n                    if (deflater.finished())\n                    {\n                        // done\n                        break;\n                    }\n                    else if (deflater.needsInput())\n                    {\n                        if (!supplyInput(deflater,data))\n                        {\n                            // done\n                            needsCompress = false;\n                        }\n                    }\n                }\n                else\n                {\n                    // Append the output for the eventual frame.\n                    out.write(output,0,read);\n                }\n            }\n\n            boolean fin = frame.isFin();\n            \n            ByteBuffer payload = ByteBuffer.wrap(out.toByteArray());\n            \n            if (payload.remaining()>0)\n            {\n                // Handle tail bytes generated by SYNC_FLUSH.\n                LOG.debug(\"compressed bytes[] = {}\",BufferUtil.toDetailString(payload));\n\n                if (tailDrop == TAIL_DROP_ALWAYS)\n                {\n                    if (endsWithTail(payload))\n                    {\n                        payload.limit(payload.limit() - TAIL_BYTES.length);\n                    }\n                    LOG.debug(\"payload (TAIL_DROP_ALWAYS) = {}\",BufferUtil.toDetailString(payload));\n                }\n                else if (tailDrop == TAIL_DROP_FIN_ONLY)\n                {\n                    if (frame.isFin() && endsWithTail(payload))\n                    {\n                        payload.limit(payload.limit() - TAIL_BYTES.length);\n                    }\n                    LOG.debug(\"payload (TAIL_DROP_FIN_ONLY) = {}\",BufferUtil.toDetailString(payload));\n                }\n            }\n            else if (fin)\n            {\n                // Special case: 8.2.3.6.  Generating an Empty Fragment Manually\n                payload = ByteBuffer.wrap(new byte[] { 0x00 });\n            }\n            \n            if (LOG.isDebugEnabled())\n            {\n                LOG.debug(\"Compressed {}: input:{} -> payload:{}\",entry,chunkSize,payload.remaining());\n            }\n\n            boolean continuation = frame.getType().isContinuation() || !first;\n            DataFrame chunk = new DataFrame(frame,continuation);\n            if (rsvUse == RSV_USE_ONLY_FIRST)\n            {\n                chunk.setRsv1(!continuation);\n            }\n            else\n            {\n                // always set\n                chunk.setRsv1(true);\n            }\n            chunk.setPayload(payload);\n            chunk.setFin(fin);\n\n            nextOutgoingFrame(chunk,this,entry.batchMode);\n        }","commit_id":"aac9568a30e133dad5633dd22f0a43f58346513f","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Override\n    protected void nextIncomingFrame(Frame frame)\n    {\n        if (frame.isFin() && !incomingContextTakeover)\n        {\n            LOG.debug(\"Incoming Context Reset\");\n            getInflater().reset();\n        }\n        super.nextIncomingFrame(frame);\n    }","id":53313,"modified_method":"@Override\n    protected void nextIncomingFrame(Frame frame)\n    {\n        if (frame.isFin() && !incomingContextTakeover)\n        {\n            LOG.debug(\"Incoming Context Reset\");\n            decompressCount.set(0);\n            getInflater().reset();\n        }\n        super.nextIncomingFrame(frame);\n    }","commit_id":"aac9568a30e133dad5633dd22f0a43f58346513f","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Override\n    public String toString()\n    {\n        return String.format(\"%s[requested=%s,negotiated=%s]\",\n                getClass().getSimpleName(),\n                configRequested.getParameterizedName(),\n                configNegotiated.getParameterizedName());\n    }","id":53314,"modified_method":"@Override\n    public String toString()\n    {\n        return String.format(\"%s[requested=\\\"%s\\\", negotiated=\\\"%s\\\"]\",\n                getClass().getSimpleName(),\n                configRequested.getParameterizedName(),\n                configNegotiated.getParameterizedName());\n    }","commit_id":"aac9568a30e133dad5633dd22f0a43f58346513f","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Override\n    public void incomingFrame(Frame frame)\n    {\n        // Incoming frames are always non concurrent because\n        // they are read and parsed with a single thread, and\n        // therefore there is no need for synchronization.\n\n        // This extension requires the RSV1 bit set only in the first frame.\n        // Subsequent continuation frames don't have RSV1 set, but are compressed.\n        if (frame.getType().isData())\n            incomingCompressed = frame.isRsv1();\n\n        if (OpCode.isControlFrame(frame.getOpCode()) || !frame.hasPayload() || !incomingCompressed)\n        {\n            nextIncomingFrame(frame);\n            return;\n        }\n\n        boolean appendTail = frame.isFin();\n        ByteBuffer payload = frame.getPayload();\n        int remaining = payload.remaining();\n        byte[] input = new byte[remaining + (appendTail ? TAIL_BYTES.length : 0)];\n        payload.get(input, 0, remaining);\n        if (appendTail)\n            System.arraycopy(TAIL_BYTES, 0, input, remaining, TAIL_BYTES.length);\n\n        forwardIncoming(frame, decompress(input));\n\n        if (frame.isFin())\n            incomingCompressed = false;\n    }","id":53315,"modified_method":"@Override\n    public void incomingFrame(Frame frame)\n    {\n        // Incoming frames are always non concurrent because\n        // they are read and parsed with a single thread, and\n        // therefore there is no need for synchronization.\n\n        // This extension requires the RSV1 bit set only in the first frame.\n        // Subsequent continuation frames don't have RSV1 set, but are compressed.\n        if (frame.getType().isData())\n        {\n            incomingCompressed = frame.isRsv1();\n        }\n\n        if (OpCode.isControlFrame(frame.getOpCode()) || !incomingCompressed)\n        {\n            nextIncomingFrame(frame);\n            return;\n        }\n        \n        ByteAccumulator accumulator = newByteAccumulator();\n        \n        try \n        {\n            ByteBuffer payload = frame.getPayload();\n            decompress(accumulator, payload);\n            if (frame.isFin())\n            {\n                decompress(accumulator, TAIL_BYTES_BUF.slice());\n            }\n            \n            forwardIncoming(frame, accumulator);\n        }\n        catch (DataFormatException e)\n        {\n            throw new BadPayloadException(e);\n        }\n\n        if (frame.isFin())\n            incomingCompressed = false;\n    }","commit_id":"aac9568a30e133dad5633dd22f0a43f58346513f","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Override\n    public void setConfig(final ExtensionConfig config)\n    {\n        configRequested = new ExtensionConfig(config);\n        configNegotiated = new ExtensionConfig(config.getName());\n        \n        for (String key : config.getParameterKeys())\n        {\n            key = key.trim();\n            switch (key)\n            {\n                case \"client_max_window_bits\":\n                case \"server_max_window_bits\":\n                {\n                    // Not supported by Jetty\n                    // Don't negotiate these parameters\n                    break;\n                }\n                case \"client_no_context_takeover\":\n                {\n                    configNegotiated.setParameter(\"client_no_context_takeover\");\n                    switch (getPolicy().getBehavior())\n                    {\n                        case CLIENT:\n                            incomingContextTakeover = false;\n                            break;\n                        case SERVER:\n                            outgoingContextTakeover = false;\n                            break;\n                    }\n                    break;\n                }\n                case \"server_no_context_takeover\":\n                {\n                    configNegotiated.setParameter(\"server_no_context_takeover\");\n                    switch (getPolicy().getBehavior())\n                    {\n                        case CLIENT:\n                            outgoingContextTakeover = false;\n                            break;\n                        case SERVER:\n                            incomingContextTakeover = false;\n                            break;\n                    }\n                    break;\n                }\n                default:\n                {\n                    throw new IllegalArgumentException();\n                }\n            }\n        }\n\n        super.setConfig(configNegotiated);\n    }","id":53316,"modified_method":"@Override\n    public void setConfig(final ExtensionConfig config)\n    {\n        configRequested = new ExtensionConfig(config);\n        configNegotiated = new ExtensionConfig(config.getName());\n        \n        for (String key : config.getParameterKeys())\n        {\n            key = key.trim();\n            switch (key)\n            {\n                case \"client_max_window_bits\":\n                case \"server_max_window_bits\":\n                {\n                    // Not supported by Jetty\n                    // Don't negotiate these parameters\n                    break;\n                }\n                case \"client_no_context_takeover\":\n                {\n                    configNegotiated.setParameter(\"client_no_context_takeover\");\n                    switch (getPolicy().getBehavior())\n                    {\n                        case CLIENT:\n                            incomingContextTakeover = false;\n                            break;\n                        case SERVER:\n                            outgoingContextTakeover = false;\n                            break;\n                    }\n                    break;\n                }\n                case \"server_no_context_takeover\":\n                {\n                    configNegotiated.setParameter(\"server_no_context_takeover\");\n                    switch (getPolicy().getBehavior())\n                    {\n                        case CLIENT:\n                            outgoingContextTakeover = false;\n                            break;\n                        case SERVER:\n                            incomingContextTakeover = false;\n                            break;\n                    }\n                    break;\n                }\n                default:\n                {\n                    throw new IllegalArgumentException();\n                }\n            }\n        }\n        \n        LOG.debug(\"config: outgoingContextTakover={}, incomingContextTakeover={} : {}\", outgoingContextTakeover, incomingContextTakeover, this);\n\n        super.setConfig(configNegotiated);\n    }","commit_id":"aac9568a30e133dad5633dd22f0a43f58346513f","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public void testDeleteFolders() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Delete\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Delete\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tThread.sleep(1000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Your request processed successfully.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isElementPresent(\"link=Test Folder\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Delete\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Delete\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tThread.sleep(1000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Your request processed successfully.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isElementPresent(\"link=Test Folder 2\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertFalse(selenium.isElementPresent(\"link=Test Folder 2\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Test Subfolder 2\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Test Folder\"));\n\t}","id":53317,"modified_method":"public void testDeleteFolders() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//td[4]/ul/li/strong/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//td[4]/ul/li/strong/span\");\n\t\tselenium.click(RuntimeVariables.replace(\"//div[2]/ul/li[3]/nobr/a/img\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tThread.sleep(1000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Your request processed successfully.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isElementPresent(\"link=Test Folder\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Delete\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//td[4]/ul/li/strong/span\");\n\t\tselenium.click(RuntimeVariables.replace(\"//div[2]/ul/li[3]/nobr/a/img\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tThread.sleep(1000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Your request processed successfully.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isElementPresent(\"link=Test Folder 2\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertFalse(selenium.isElementPresent(\"link=Test Folder 2\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Test Subfolder 2\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Test Folder\"));\n\t}","commit_id":"b0b9692f8240dbdd6d8b214f00a75c6786eb0897","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testMoveDocument() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Test Folder\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Folder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Test Subfolder\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Subfolder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//td[5]/ul/li/strong/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//td[5]/ul/li/strong/span\");\n\t\tselenium.click(\"//div[2]/ul/li[2]/nobr/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Select']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='Select']\");\n\t\tselenium.waitForPopUp(\"folder\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"title=Document Library Test Page\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Folders\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Folders\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Another\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Another\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Another1\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Choose']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='Choose']\");\n\t\tselenium.selectWindow(\"null\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_20_folderName\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Folders\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Folders\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Return to Full Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Another\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Another1\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Test Document.txt\\nThis is a test document!\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Test Document.txt\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Return to Full Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":53318,"modified_method":"public void testMoveDocument() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Test Folder\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Folder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Test Subfolder\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Subfolder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//td[5]/ul/li/strong/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//td[5]/ul/li/strong/span\");\n\t\tselenium.click(RuntimeVariables.replace(\"//div[2]/ul/li[2]/nobr/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Select']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='Select']\");\n\t\tselenium.waitForPopUp(\"folder\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"folder\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Folders\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Folders\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Another\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Another\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Another1\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Choose']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='Choose']\");\n\t\tselenium.selectWindow(\"null\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_20_folderName\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Folders\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Folders\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Return to Full Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Another\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Another1\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Test Document.txt\\nThis is a test document!\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//td[5]/ul/li/strong/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//td[5]/ul/li/strong/span\");\n\t\tselenium.click(RuntimeVariables.replace(\"//div[2]/ul/li[2]/nobr/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Test Document.txt\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Return to Full Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"b0b9692f8240dbdd6d8b214f00a75c6786eb0897","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testMoveImage() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Test Subfolder\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Subfolder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Image']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//img[@alt='Image']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Edit\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Edit\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//img[@alt='This is the Liferay logo!']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Select']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='Select']\");\n\t\tselenium.waitForPopUp(\"folder\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"title=Image Gallery Test Page\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Folders\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Folders\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Test Folder 2\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Folder 2\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Choose']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='Choose']\");\n\t\tselenium.selectWindow(\"null\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_31_folderName\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\"//img[@alt='This is the Liferay logo!']\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Return to Full Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Test Subfolder 2\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Subfolder 2\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Image']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Return to Full Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":53319,"modified_method":"public void testMoveImage() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Test Subfolder\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Subfolder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Image']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//img[@alt='Image']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Edit\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Edit\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//img[@alt='This is the Liferay logo!']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Select']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='Select']\");\n\t\tselenium.waitForPopUp(\"folder\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"folder\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Folders\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Folders\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Test Folder 2\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Folder 2\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Choose']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='Choose']\");\n\t\tselenium.selectWindow(\"null\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_31_folderName\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\"//img[@alt='This is the Liferay logo!']\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Return to Full Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Test Subfolder 2\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Subfolder 2\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Image']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Return to Full Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"b0b9692f8240dbdd6d8b214f00a75c6786eb0897","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testMoveItem() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id=\\\"portlet-wrapper-34\\\"]/div[2]/div/div/form/div[3]/table/tbody/tr[2]/td[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@id=\\\"portlet-wrapper-34\\\"]/div[2]/div/div/form/div[3]/table/tbody/tr[2]/td[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Edit\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//strong/span\");\n\t\tselenium.click(RuntimeVariables.replace(\"//nobr/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//input[@value='Select']\");\n\t\tselenium.waitForPopUp(\"category\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"category\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Categories\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Categories\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.selectWindow(\"name=category\");\n\t\tselenium.click(RuntimeVariables.replace(\"document.forms[0].elements[2]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.selectWindow(\"null\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Video\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectWindow(\"null\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Save']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isTextPresent(\"Jona Lyons - Wheel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id=\\\"portlet-wrapper-34\\\"]/div[2]/div/div/form/div[3]/table/tbody/tr[3]/td[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@id=\\\"portlet-wrapper-34\\\"]/div[2]/div/div/form/div[3]/table/tbody/tr[3]/td[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id=\\\"portlet-wrapper-34\\\"]/div[2]/div/div/form[2]/div[3]/table/tbody/tr[2]/td[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectWindow(\"name=null\");\n\t\tselenium.click(\"//strong/span\");\n\t\tselenium.click(RuntimeVariables.replace(\"//div[2]/ul/li[1]/nobr/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Sounds like: The middle of a vacation.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='Select']\");\n\t\tselenium.waitForPopUp(\"category\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"category\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Categories\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Categories\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Choose']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='Choose']\");\n\t\tselenium.selectWindow(\"null\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Music\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Save']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isTextPresent(\"Jona Lyons - Wheel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id=\\\"portlet-wrapper-34\\\"]/div[2]/div/div/form/div[3]/table/tbody/tr[2]/td[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@id=\\\"portlet-wrapper-34\\\"]/div[2]/div/div/form/div[3]/table/tbody/tr[2]/td[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\"Jona Lyons - Wheel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":53320,"modified_method":"public void testMoveItem() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id=\\\"portlet-wrapper-34\\\"]/div[2]/div/div/form/div[3]/table/tbody/tr[2]/td[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@id=\\\"portlet-wrapper-34\\\"]/div[2]/div/div/form/div[3]/table/tbody/tr[2]/td[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Edit\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//strong/span\");\n\t\tselenium.click(RuntimeVariables.replace(\"//nobr/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//input[@value='Select']\");\n\t\tselenium.waitForPopUp(\"category\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"category\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Categories\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Categories\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.selectWindow(\"name=category\");\n\t\tselenium.click(RuntimeVariables.replace(\"document.forms[0].elements[2]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.selectWindow(\"null\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Video\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Save']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isTextPresent(\"Jona Lyons - Wheel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id=\\\"portlet-wrapper-34\\\"]/div[2]/div/div/form/div[3]/table/tbody/tr[3]/td[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@id=\\\"portlet-wrapper-34\\\"]/div[2]/div/div/form/div[3]/table/tbody/tr[3]/td[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id=\\\"portlet-wrapper-34\\\"]/div[2]/div/div/form[2]/div[3]/table/tbody/tr[2]/td[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectWindow(\"name=null\");\n\t\tselenium.click(\"//strong/span\");\n\t\tselenium.click(RuntimeVariables.replace(\"//div[2]/ul/li[1]/nobr/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Sounds like: The middle of a vacation.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='Select']\");\n\t\tselenium.waitForPopUp(\"category\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"category\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Categories\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Categories\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Choose']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='Choose']\");\n\t\tselenium.selectWindow(\"null\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Music\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Save']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isTextPresent(\"Jona Lyons - Wheel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id=\\\"portlet-wrapper-34\\\"]/div[2]/div/div/form/div[3]/table/tbody/tr[2]/td[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@id=\\\"portlet-wrapper-34\\\"]/div[2]/div/div/form/div[3]/table/tbody/tr[2]/td[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\"Jona Lyons - Wheel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"b0b9692f8240dbdd6d8b214f00a75c6786eb0897","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public PollsTests() {\n\t\taddTestSuite(AddPageTest.class);\n\t\taddTestSuite(AddPortletTest.class);\n\t\taddTestSuite(AddQuestionTest.class);\n\t\taddTestSuite(AddVoteTest.class);\n\t\taddTestSuite(ViewQuestionGraphsTest.class);\n\t\taddTestSuite(DeletePageTest.class);\n\t}","id":53321,"modified_method":"public PollsTests() {\n\t\taddTestSuite(AddPageTest.class);\n\t\taddTestSuite(AddPortletTest.class);\n\t\taddTestSuite(AddQuestionTest.class);\n\t\taddTestSuite(AddVoteTest.class);\n\t\t//addTestSuite(ViewQuestionGraphsTest.class);\n\t\taddTestSuite(DeletePageTest.class);\n\t}","commit_id":"b0b9692f8240dbdd6d8b214f00a75c6786eb0897","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public PortalWebTestSuite() {\n\t\taddTestSuite(LoginTests.class);\n\t\taddTestSuite(EnterpriseAdminTests.class);\n\t\taddTestSuite(AdminTests.class);\n\t\taddTestSuite(AnnouncementsTests.class);\n\t\taddTestSuite(BibleGatewayTests.class);\n\t\taddTestSuite(BlogsTests.class);\n\t\taddTestSuite(BlogsAggregatorTests.class);\n\t\taddTestSuite(AssetPublisherTests.class);\n\t\taddTestSuite(BookmarksTests.class);\n\t\taddTestSuite(BreadcrumbTests.class);\n\t\taddTestSuite(CalendarTests.class);\n\t\taddTestSuite(CommunitiesTests.class);\n\t\taddTestSuite(CurrencyConverterTests.class);\n\t\taddTestSuite(DictionaryTests.class);\n\t\taddTestSuite(DirectoryTests.class);\n\t\taddTestSuite(DocumentLibraryTests.class);\n\t\taddTestSuite(DocumentLibraryDisplayTests.class);\n\t\taddTestSuite(GlobalPrayerDigestTests.class);\n\t\taddTestSuite(GospelForAsiaTests.class);\n\t\taddTestSuite(HelloVelocityTests.class);\n\t\taddTestSuite(HelloWorldTests.class);\n\t\taddTestSuite(IFrameTests.class);\n\t\taddTestSuite(ImageGalleryTests.class);\n\t\taddTestSuite(InvitationTests.class);\n\t\taddTestSuite(JournalTests.class);\n\t\taddTestSuite(JournalArticlesTests.class);\n\t\taddTestSuite(JournalContentTests.class);\n\t\taddTestSuite(JournalContentSearchTests.class);\n\t\taddTestSuite(LanguageTests.class);\n\t\taddTestSuite(LoanCalculatorTests.class);\n\t\taddTestSuite(ManagePagesTests.class);\n\t\taddTestSuite(MessageBoardsTests.class);\n\t\taddTestSuite(NavigationTests.class);\n\t\taddTestSuite(NestedPortletsTests.class);\n\t\taddTestSuite(NetworkUtilitiesTests.class);\n\t\taddTestSuite(OpenIDSignInTests.class);\n\t\taddTestSuite(OrganizationAdminTests.class);\n\t\taddTestSuite(PageCommentsTests.class);\n\t\taddTestSuite(PageRatingsTests.class);\n\t\taddTestSuite(PasswordGeneratorTests.class);\n\t\t//addTestSuite(PluginInstallerTests.class);\n\t\t//addTestSuite(PollsTests.class);\n\t\t//addTestSuite(PollsDisplayTests.class);\n\t\taddTestSuite(QuickNoteTests.class);\n\t\taddTestSuite(RandomBibleVerseTests.class);\n\t\taddTestSuite(RecentBloggersTests.class);\n\t\taddTestSuite(RecentDocumentsTests.class);\n\t\taddTestSuite(ReverendFunTests.class);\n\t\taddTestSuite(RSSTests.class);\n\t\taddTestSuite(SearchTests.class);\n\t\taddTestSuite(SessionExpirationTests.class);\n\t\taddTestSuite(ShoppingTests.class);\n\t\t//addTestSuite(SiteMapTests.class);\n\t\taddTestSuite(SMSTextMessengerTests.class);\n\t\taddTestSuite(SoftwareCatalogTests.class);\n\t\t//addTestSuite(StagingTests.class);\n\t\taddTestSuite(StocksTests.class);\n\t\taddTestSuite(TagsAdminTests.class);\n\t\taddTestSuite(TranslatorTests.class);\n\t\taddTestSuite(UnitConverterTests.class);\n\t\taddTestSuite(UpdateManagerTests.class);\n\t\taddTestSuite(WebFormTests.class);\n\t\taddTestSuite(WebProxyTests.class);\n\t\taddTestSuite(WikiTests.class);\n\t\taddTestSuite(WikiDisplayTests.class);\n\t\taddTestSuite(WordsTests.class);\n\t\taddTestSuite(XSLContentTests.class);\n\n\t\taddTestSuite(StopSeleniumTest.class);\n\t}","id":53322,"modified_method":"public PortalWebTestSuite() {\n\t\taddTestSuite(LoginTests.class);\n\t\taddTestSuite(EnterpriseAdminTests.class);\n\t\taddTestSuite(AdminTests.class);\n\t\taddTestSuite(AnnouncementsTests.class);\n\t\taddTestSuite(BibleGatewayTests.class);\n\t\taddTestSuite(BlogsTests.class);\n\t\taddTestSuite(BlogsAggregatorTests.class);\n\t\taddTestSuite(AssetPublisherTests.class);\n\t\taddTestSuite(BookmarksTests.class);\n\t\taddTestSuite(BreadcrumbTests.class);\n\t\taddTestSuite(CalendarTests.class);\n\t\taddTestSuite(CommunitiesTests.class);\n\t\taddTestSuite(CurrencyConverterTests.class);\n\t\taddTestSuite(DictionaryTests.class);\n\t\taddTestSuite(DirectoryTests.class);\n\t\taddTestSuite(DocumentLibraryTests.class);\n\t\taddTestSuite(DocumentLibraryDisplayTests.class);\n\t\taddTestSuite(GlobalPrayerDigestTests.class);\n\t\taddTestSuite(GospelForAsiaTests.class);\n\t\taddTestSuite(HelloVelocityTests.class);\n\t\taddTestSuite(HelloWorldTests.class);\n\t\taddTestSuite(IFrameTests.class);\n\t\taddTestSuite(ImageGalleryTests.class);\n\t\taddTestSuite(InvitationTests.class);\n\t\taddTestSuite(JournalTests.class);\n\t\taddTestSuite(JournalArticlesTests.class);\n\t\taddTestSuite(JournalContentTests.class);\n\t\taddTestSuite(JournalContentSearchTests.class);\n\t\taddTestSuite(LanguageTests.class);\n\t\taddTestSuite(LoanCalculatorTests.class);\n\t\taddTestSuite(ManagePagesTests.class);\n\t\taddTestSuite(MessageBoardsTests.class);\n\t\taddTestSuite(NavigationTests.class);\n\t\taddTestSuite(NestedPortletsTests.class);\n\t\taddTestSuite(NetworkUtilitiesTests.class);\n\t\taddTestSuite(OpenIDSignInTests.class);\n\t\taddTestSuite(OrganizationAdminTests.class);\n\t\taddTestSuite(PageCommentsTests.class);\n\t\taddTestSuite(PageRatingsTests.class);\n\t\taddTestSuite(PasswordGeneratorTests.class);\n\t\t//addTestSuite(PluginInstallerTests.class);\n\t\taddTestSuite(PollsTests.class);\n\t\taddTestSuite(PollsDisplayTests.class);\n\t\taddTestSuite(QuickNoteTests.class);\n\t\taddTestSuite(RandomBibleVerseTests.class);\n\t\taddTestSuite(RecentBloggersTests.class);\n\t\taddTestSuite(RecentDocumentsTests.class);\n\t\taddTestSuite(ReverendFunTests.class);\n\t\taddTestSuite(RSSTests.class);\n\t\taddTestSuite(SearchTests.class);\n\t\taddTestSuite(SessionExpirationTests.class);\n\t\taddTestSuite(ShoppingTests.class);\n\t\t//addTestSuite(SiteMapTests.class);\n\t\taddTestSuite(SMSTextMessengerTests.class);\n\t\taddTestSuite(SoftwareCatalogTests.class);\n\t\t//addTestSuite(StagingTests.class);\n\t\taddTestSuite(StocksTests.class);\n\t\taddTestSuite(TagsAdminTests.class);\n\t\taddTestSuite(TranslatorTests.class);\n\t\taddTestSuite(UnitConverterTests.class);\n\t\taddTestSuite(UpdateManagerTests.class);\n\t\taddTestSuite(WebFormTests.class);\n\t\taddTestSuite(WebProxyTests.class);\n\t\taddTestSuite(WikiTests.class);\n\t\taddTestSuite(WikiDisplayTests.class);\n\t\taddTestSuite(WordsTests.class);\n\t\taddTestSuite(XSLContentTests.class);\n\n\t\taddTestSuite(StopSeleniumTest.class);\n\t}","commit_id":"b0b9692f8240dbdd6d8b214f00a75c6786eb0897","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewQuestionGraphs() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Poll Question\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Area\");\n\t\tselenium.waitForPopUp(\"viewChart\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"viewChartWindow\");\n\t\tselenium.close();\n\t\tselenium.selectWindow(\"null\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Horizontal Bar\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Horizontal Bar\");\n\t\tselenium.waitForPopUp(\"viewChart\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"viewChartWindow\");\n\t\tselenium.close();\n\t\tselenium.selectWindow(\"null\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Line\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Line\");\n\t\tselenium.waitForPopUp(\"viewChart\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"viewChartWindow\");\n\t\tselenium.close();\n\t\tselenium.selectWindow(\"null\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Pie\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Pie\");\n\t\tselenium.waitForPopUp(\"viewChart\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"viewChartWindow\");\n\t\tselenium.close();\n\t\tselenium.selectWindow(\"null\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Vertical Bar\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Vertical Bar\");\n\t\tselenium.waitForPopUp(\"viewChart\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"viewChartWindow\");\n\t\tselenium.close();\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":53323,"modified_method":"public void testViewQuestionGraphs() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Poll Question\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Area\");\n\t\tselenium.waitForPopUp(\"viewChart\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"viewChart\");\n\t\tselenium.close();\n\t\tselenium.selectWindow(\"null\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Horizontal Bar\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Horizontal Bar\");\n\t\tselenium.waitForPopUp(\"viewChart\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"viewChart\");\n\t\tselenium.close();\n\t\tselenium.selectWindow(\"null\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Line\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Line\");\n\t\tselenium.waitForPopUp(\"viewChart\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"viewChart\");\n\t\tselenium.close();\n\t\tselenium.selectWindow(\"null\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Pie\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Pie\");\n\t\tselenium.waitForPopUp(\"viewChart\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"viewChart\");\n\t\tselenium.close();\n\t\tselenium.selectWindow(\"null\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Vertical Bar\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Vertical Bar\");\n\t\tselenium.waitForPopUp(\"viewChart\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"viewChart\");\n\t\tselenium.close();\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"b0b9692f8240dbdd6d8b214f00a75c6786eb0897","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddOrganization() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tboolean InControlPanel = selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Back to My Community\");\n\n\t\t\t\tif (InControlPanel) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"my-community-private-pages\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Organizations\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Add\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.typeKeys(\"_126_name\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.type(\"_126_name\", RuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.select(\"_126_type\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=Regular Organization\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Save']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(\"addressesLink\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"_126_addressStreet10\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.typeKeys(\"_126_addressStreet10\",\n\t\t\t\t\tRuntimeVariables.replace(\"12345 Selenium St\"));\n\t\t\t\tselenium.type(\"_126_addressStreet10\",\n\t\t\t\t\tRuntimeVariables.replace(\"12345 Selenium St\"));\n\t\t\t\tselenium.type(\"_126_addressStreet10\",\n\t\t\t\t\tRuntimeVariables.replace(\"12345 Selenium St\"));\n\t\t\t\tselenium.select(\"_126_addressCountryId0\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=United States\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.select(\"_126_addressRegionId0\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=California\"));\n\t\t\t\tselenium.select(\"_126_addressTypeId0\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=Billing\"));\n\t\t\t\tselenium.type(\"_126_addressZip0\",\n\t\t\t\t\tRuntimeVariables.replace(\"41111\"));\n\t\t\t\tselenium.type(\"_126_addressCity0\",\n\t\t\t\t\tRuntimeVariables.replace(\"Diamond Bar\"));\n\t\t\t\tselenium.click(\"_126_addressPrimary0\");\n\t\t\t\tselenium.click(\"phoneNumbersLink\");\n\t\t\t\tselenium.type(\"_126_phoneNumber0\",\n\t\t\t\t\tRuntimeVariables.replace(\"555-555-5555\"));\n\t\t\t\tselenium.type(\"_126_phoneExtension0\",\n\t\t\t\t\tRuntimeVariables.replace(\"555\"));\n\t\t\t\tselenium.click(\"_126_phonePrimary0\");\n\t\t\t\tselenium.click(\"additionalEmailAddressesLink\");\n\t\t\t\tselenium.type(\"_126_emailAddressAddress0\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium@Selenium.com\"));\n\t\t\t\tselenium.select(\"_126_emailAddressTypeId0\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=E-mail\"));\n\t\t\t\tselenium.click(\"_126_emailAddressPrimary0\");\n\t\t\t\tselenium.click(\"websitesLink\");\n\t\t\t\tselenium.type(\"_126_websiteUrl0\",\n\t\t\t\t\tRuntimeVariables.replace(\"http://www.liferay.com\"));\n\t\t\t\tselenium.select(\"_126_websiteTypeId0\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=Public\"));\n\t\t\t\tselenium.click(\"_126_websitePrimary0\");\n\t\t\t\tselenium.click(\"servicesLink\");\n\t\t\t\tselenium.select(\"_126_orgLaborTypeId0\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=Training\"));\n\t\t\t\tselenium.select(\"_126_sunOpen0\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=09:00\"));\n\t\t\t\tselenium.select(\"_126_sunClose0\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=05:00\"));\n\t\t\t\tselenium.select(\"_126_monOpen0\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=09:00\"));\n\t\t\t\tselenium.select(\"_126_monClose0\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=05:00\"));\n\t\t\t\tselenium.select(\"_126_tueOpen0\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=09:00\"));\n\t\t\t\tselenium.select(\"_126_tueClose0\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=05:00\"));\n\t\t\t\tselenium.select(\"_126_wedOpen0\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=09:00\"));\n\t\t\t\tselenium.select(\"_126_wedClose0\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=05:00\"));\n\t\t\t\tselenium.select(\"_126_thuOpen0\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=09:00\"));\n\t\t\t\tselenium.select(\"_126_thuClose0\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=05:00\"));\n\t\t\t\tselenium.select(\"_126_friOpen0\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=09:00\"));\n\t\t\t\tselenium.select(\"_126_friClose0\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=05:00\"));\n\t\t\t\tselenium.select(\"_126_satOpen0\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=09:00\"));\n\t\t\t\tselenium.select(\"_126_satClose0\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=05:00\"));\n\t\t\t\tselenium.click(\"commentsLink\");\n\t\t\t\tselenium.type(\"_126_comments\",\n\t\t\t\t\tRuntimeVariables.replace(\"This is a test comment!\"));\n\t\t\t\tassertTrue(selenium.isTextPresent(\"(Modified)\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Save']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":53324,"modified_method":"public void testAddOrganization() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tboolean InControlPanel = selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Back to My Community\");\n\n\t\t\t\tif (InControlPanel) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@id='_145_myPlacesContainer']/ul/li[2]/a/span[1]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Organizations\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Add\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.typeKeys(\"_126_name\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.type(\"_126_name\", RuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.select(\"_126_type\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=Regular Organization\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Save']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(\"addressesLink\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"_126_addressStreet10\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.typeKeys(\"_126_addressStreet10\",\n\t\t\t\t\tRuntimeVariables.replace(\"12345 Selenium St\"));\n\t\t\t\tselenium.type(\"_126_addressStreet10\",\n\t\t\t\t\tRuntimeVariables.replace(\"12345 Selenium St\"));\n\t\t\t\tselenium.type(\"_126_addressStreet10\",\n\t\t\t\t\tRuntimeVariables.replace(\"12345 Selenium St\"));\n\t\t\t\tselenium.select(\"_126_addressCountryId0\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=United States\"));\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.select(\"_126_addressRegionId0\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=California\"));\n\t\t\t\tselenium.select(\"_126_addressTypeId0\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=Billing\"));\n\t\t\t\tselenium.type(\"_126_addressZip0\",\n\t\t\t\t\tRuntimeVariables.replace(\"41111\"));\n\t\t\t\tselenium.type(\"_126_addressCity0\",\n\t\t\t\t\tRuntimeVariables.replace(\"Diamond Bar\"));\n\t\t\t\tselenium.click(\"_126_addressPrimary0\");\n\t\t\t\tselenium.click(\"phoneNumbersLink\");\n\t\t\t\tselenium.type(\"_126_phoneNumber0\",\n\t\t\t\t\tRuntimeVariables.replace(\"555-555-5555\"));\n\t\t\t\tselenium.type(\"_126_phoneExtension0\",\n\t\t\t\t\tRuntimeVariables.replace(\"555\"));\n\t\t\t\tselenium.click(\"_126_phonePrimary0\");\n\t\t\t\tselenium.click(\"additionalEmailAddressesLink\");\n\t\t\t\tselenium.type(\"_126_emailAddressAddress0\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium@Selenium.com\"));\n\t\t\t\tselenium.select(\"_126_emailAddressTypeId0\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=E-mail\"));\n\t\t\t\tselenium.click(\"_126_emailAddressPrimary0\");\n\t\t\t\tselenium.click(\"websitesLink\");\n\t\t\t\tselenium.type(\"_126_websiteUrl0\",\n\t\t\t\t\tRuntimeVariables.replace(\"http://www.liferay.com\"));\n\t\t\t\tselenium.select(\"_126_websiteTypeId0\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=Public\"));\n\t\t\t\tselenium.click(\"_126_websitePrimary0\");\n\t\t\t\tselenium.click(\"servicesLink\");\n\t\t\t\tselenium.select(\"_126_orgLaborTypeId0\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=Training\"));\n\t\t\t\tselenium.select(\"_126_sunOpen0\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=09:00\"));\n\t\t\t\tselenium.select(\"_126_sunClose0\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=05:00\"));\n\t\t\t\tselenium.select(\"_126_monOpen0\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=09:00\"));\n\t\t\t\tselenium.select(\"_126_monClose0\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=05:00\"));\n\t\t\t\tselenium.select(\"_126_tueOpen0\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=09:00\"));\n\t\t\t\tselenium.select(\"_126_tueClose0\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=05:00\"));\n\t\t\t\tselenium.select(\"_126_wedOpen0\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=09:00\"));\n\t\t\t\tselenium.select(\"_126_wedClose0\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=05:00\"));\n\t\t\t\tselenium.select(\"_126_thuOpen0\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=09:00\"));\n\t\t\t\tselenium.select(\"_126_thuClose0\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=05:00\"));\n\t\t\t\tselenium.select(\"_126_friOpen0\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=09:00\"));\n\t\t\t\tselenium.select(\"_126_friClose0\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=05:00\"));\n\t\t\t\tselenium.select(\"_126_satOpen0\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=09:00\"));\n\t\t\t\tselenium.select(\"_126_satClose0\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=05:00\"));\n\t\t\t\tselenium.click(\"commentsLink\");\n\t\t\t\tselenium.type(\"_126_comments\",\n\t\t\t\t\tRuntimeVariables.replace(\"This is a test comment!\"));\n\t\t\t\tassertTrue(selenium.isTextPresent(\"(Modified)\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Save']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"c0e20c73806c20ff7b6944b67028ebcd73425897","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddUserGroup() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tboolean InControlPanel = selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Back to My Community\");\n\n\t\t\t\tif (InControlPanel) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"my-community-private-pages\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=User Groups\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=User Groups\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Add\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.typeKeys(\"_127_name\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.type(\"_127_name\", RuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.type(\"_127_description\",\n\t\t\t\t\tRuntimeVariables.replace(\"This is a selenium user group.\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Save']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":53325,"modified_method":"public void testAddUserGroup() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tboolean InControlPanel = selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Back to My Community\");\n\n\t\t\t\tif (InControlPanel) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@id='_145_myPlacesContainer']/ul/li[2]/a/span[1]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=User Groups\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=User Groups\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Add\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.typeKeys(\"_127_name\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.type(\"_127_name\", RuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.type(\"_127_description\",\n\t\t\t\t\tRuntimeVariables.replace(\"This is a selenium user group.\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Save']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"c0e20c73806c20ff7b6944b67028ebcd73425897","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertCommunityDropDown() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Back to My Community\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Back to My Community\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Community\"));\n\t\tassertTrue(selenium.isElementPresent(\"//li[5]/ul/li[1]/a[1]\"));\n\t\tassertTrue(selenium.isElementPresent(\"//li[5]/ul/li[2]/a[1]\"));\n\t}","id":53326,"modified_method":"public void testAssertCommunityDropDown() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Back to My Community\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Back to My Community\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(\"Test Community\",\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@id='_145_myPlacesContainer']/ul/li[6]/a/span[1]\"));\n\t\tassertEquals(\"Public\",\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@id='_145_myPlacesContainer']/ul/li[6]/a/span[2]\"));\n\t\tassertEquals(\"Test Community\",\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@id='_145_myPlacesContainer']/ul/li[7]/a/span[1]\"));\n\t\tassertEquals(\"Private\",\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@id='_145_myPlacesContainer']/ul/li[7]/a/span[2]\"));\n\t}","commit_id":"c0e20c73806c20ff7b6944b67028ebcd73425897","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertCommunityLARImport() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Back to My Community\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Back to My Community\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//li[6]/ul/li[1]/a[1]/span\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"link=Community LAR Import Test Page\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Community LAR Import Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"Message Boards\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=LAR Import Test Category\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=LAR Import Test Category\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Hello LAR Files\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Hello LAR Files\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"I hope that you are working. If you are not working. I will be sad.\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Community LAR Import Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"my-community-private-pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":53327,"modified_method":"public void testAssertCommunityLARImport() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Back to My Community\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Back to My Community\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@id='_145_myPlacesContainer']/ul/li[8]/a/span\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"link=Community LAR Import Test Page\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Community LAR Import Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"Message Boards\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=LAR Import Test Category\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=LAR Import Test Category\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Hello LAR Files\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Hello LAR Files\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"I hope that you are working. If you are not working. I will be sad.\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Community LAR Import Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@id='_145_myPlacesContainer']/ul/li[2]/a/span[1]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"c0e20c73806c20ff7b6944b67028ebcd73425897","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertMergeOrganizationPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tboolean InControlPanel = selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Back to My Community\");\n\n\t\t\t\tif (!InControlPanel) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Back to My Community\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 2:\n\t\t\t\tassertTrue(selenium.isElementPresent(\"link=Selenium\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//li[2]/ul/li[1]/a[1]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isElementPresent(\"link=Welcome\"));\n\t\t\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Selenium Test Home Page\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//li[5]/ul/li[1]/a[1]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isElementPresent(\"link=Welcome\"));\n\t\t\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Selenium Test Home Page\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"my-community-public-pages\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":53328,"modified_method":"public void testAssertMergeOrganizationPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tboolean InControlPanel = selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Back to My Community\");\n\n\t\t\t\tif (!InControlPanel) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Back to My Community\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 2:\n\t\t\t\tassertTrue(selenium.isElementPresent(\"link=Selenium\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Guest\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isElementPresent(\"link=Welcome\"));\n\t\t\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Selenium Test Home Page\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@id='_145_myPlacesContainer']/ul/li[3]/a/span\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isElementPresent(\"link=Welcome\"));\n\t\t\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Selenium Test Home Page\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@id='_145_myPlacesContainer']/ul/li[2]/a/span[1]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"c0e20c73806c20ff7b6944b67028ebcd73425897","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertNoLARCommunityContent() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Back to My Community\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Back to My Community\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//li[6]/ul/li[2]/a[2]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=New Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\"//img[@alt='Configuration']\"));\n\t}","id":53329,"modified_method":"public void testAssertNoLARCommunityContent() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Communities\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Communities\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_134_name\", RuntimeVariables.replace(\"LAR Communit\"));\n\t\tselenium.type(\"_134_name\", RuntimeVariables.replace(\"LAR Community\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Search']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\"link=New Page\"));\n\t}","commit_id":"c0e20c73806c20ff7b6944b67028ebcd73425897","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertNotMergeOrganizationPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tboolean InControlPanel = selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Back to My Community\");\n\n\t\t\t\tif (!InControlPanel) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Back to My Community\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 2:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//li[5]/ul/li[1]/a[1]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Selenium Test Home Page\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//li[2]/ul/li[1]/a[1]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertFalse(selenium.isElementPresent(\"link=Welcome\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//a[@id='my-community-public-pages']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":53330,"modified_method":"public void testAssertNotMergeOrganizationPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tboolean InControlPanel = selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Back to My Community\");\n\n\t\t\t\tif (!InControlPanel) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Back to My Community\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 2:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Guest\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Selenium Test Home Page\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@id='_145_myPlacesContainer']/ul/li[3]/a/span\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertFalse(selenium.isElementPresent(\"link=Welcome\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@id='_145_myPlacesContainer']/ul/li[2]/a/span[1]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"c0e20c73806c20ff7b6944b67028ebcd73425897","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTestSuite(ControlPanelTest.class);\n\t\ttestSuite.addTestSuite(SetupTest.class);\n\t\ttestSuite.addTestSuite(AddCommunitiesTest.class);\n\t\ttestSuite.addTestSuite(AssertCommunityDropDownTest.class);\n\t\ttestSuite.addTestSuite(AddAsteriskCommunityNameTest.class);\n\t\ttestSuite.addTestSuite(AddCommaCommunityNameTest.class);\n\t\ttestSuite.addTestSuite(AddDuplicateCommunityNameTest.class);\n\t\ttestSuite.addTestSuite(AddNullCommunityNameTest.class);\n\t\ttestSuite.addTestSuite(AddNumberCommunityNameTest.class);\n\t\ttestSuite.addTestSuite(ApplyCommunityTest.class);\n\t\ttestSuite.addTestSuite(AssertApplyCommunityTest.class);\n\t\ttestSuite.addTestSuite(RemoveApplyCommunityTest.class);\n\t\ttestSuite.addTestSuite(AssertRemoveApplyCommunityTest.class);\n\t\ttestSuite.addTestSuite(SearchCommunityTest.class);\n\t\ttestSuite.addTestSuite(AddTemporaryCommunityTest.class);\n\t\ttestSuite.addTestSuite(EditCommunityTest.class);\n\t\ttestSuite.addTestSuite(DeleteTemporaryCommunityTest.class);\n\t\ttestSuite.addTestSuite(DeleteInvalidCommunityTest.class);\n\t\ttestSuite.addTestSuite(AddTemporaryLARCommunityTest.class);\n\t\ttestSuite.addTestSuite(AssertNoLARCommunityContentTest.class);\n\t\ttestSuite.addTestSuite(ImportCommunityLARTest.class);\n\t\ttestSuite.addTestSuite(AssertCommunityLARImportTest.class);\n\t\ttestSuite.addTestSuite(AddVirtualHostCommunityTest.class);\n\t\ttestSuite.addTestSuite(AddContentVirtualHostCommunityTest.class);\n\t\ttestSuite.addTestSuite(AssertVirtualHostDefaultTest.class);\n\t\ttestSuite.addTestSuite(EnableVirtualHostingTest.class);\n\t\ttestSuite.addTestSuite(AssertVirtualHostingAddressTest.class);\n\t\ttestSuite.addTestSuite(DeleteVirtualHostCommunityContentTest.class);\n\t\ttestSuite.addTestSuite(DeleteVirtualHostCommunityTest.class);\n\t\ttestSuite.addTestSuite(TearDownTest.class);\n\t\ttestSuite.addTestSuite(EndControlPanelTest.class);\n\n\t\treturn testSuite;\n\t}","id":53331,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTestSuite(ControlPanelTest.class);\n\t\ttestSuite.addTestSuite(SetupTest.class);\n\t\ttestSuite.addTestSuite(AddCommunitiesTest.class);\n\t\ttestSuite.addTestSuite(AddCommunitiesPublicPageTest.class);\n\t\ttestSuite.addTestSuite(AddCommunitiesPrivatePageTest.class);\n\t\ttestSuite.addTestSuite(AssertCommunityDropDownTest.class);\n\t\ttestSuite.addTestSuite(AddAsteriskCommunityNameTest.class);\n\t\ttestSuite.addTestSuite(AddCommaCommunityNameTest.class);\n\t\ttestSuite.addTestSuite(AddDuplicateCommunityNameTest.class);\n\t\ttestSuite.addTestSuite(AddNullCommunityNameTest.class);\n\t\ttestSuite.addTestSuite(AddNumberCommunityNameTest.class);\n\t\ttestSuite.addTestSuite(ApplyCommunityTest.class);\n\t\ttestSuite.addTestSuite(AssertApplyCommunityTest.class);\n\t\ttestSuite.addTestSuite(RemoveApplyCommunityTest.class);\n\t\ttestSuite.addTestSuite(AssertRemoveApplyCommunityTest.class);\n\t\ttestSuite.addTestSuite(SearchCommunityTest.class);\n\t\ttestSuite.addTestSuite(AddTemporaryCommunityTest.class);\n\t\ttestSuite.addTestSuite(EditCommunityTest.class);\n\t\ttestSuite.addTestSuite(DeleteTemporaryCommunityTest.class);\n\t\ttestSuite.addTestSuite(DeleteInvalidCommunityTest.class);\n\t\ttestSuite.addTestSuite(AddTemporaryLARCommunityTest.class);\n\t\ttestSuite.addTestSuite(AssertNoLARCommunityContentTest.class);\n\t\ttestSuite.addTestSuite(ImportCommunityLARTest.class);\n\t\ttestSuite.addTestSuite(AssertCommunityLARImportTest.class);\n\t\ttestSuite.addTestSuite(TearDownTest.class);\n\t\ttestSuite.addTestSuite(EndControlPanelTest.class);\n\n\t\treturn testSuite;\n\t}","commit_id":"c0e20c73806c20ff7b6944b67028ebcd73425897","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testControlPanel() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//a[@id='my-community-private-pages']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//a[@id='my-community-private-pages']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":53332,"modified_method":"public void testControlPanel() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id='_145_myPlacesContainer']/ul/li[2]/a/span[1]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@id='_145_myPlacesContainer']/ul/li[2]/a/span[1]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"c0e20c73806c20ff7b6944b67028ebcd73425897","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testControlPanel() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//a[@id='my-community-private-pages']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//a[@id='my-community-private-pages']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":53333,"modified_method":"public void testControlPanel() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id='_145_myPlacesContainer']/ul/li[2]/a/span[1]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@id='_145_myPlacesContainer']/ul/li[2]/a/span[1]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"c0e20c73806c20ff7b6944b67028ebcd73425897","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testControlPanel() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//a[@id='my-community-private-pages']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//a[@id='my-community-private-pages']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":53334,"modified_method":"public void testControlPanel() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id='_145_myPlacesContainer']/ul/li[2]/a/span[1]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@id='_145_myPlacesContainer']/ul/li[2]/a/span[1]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"c0e20c73806c20ff7b6944b67028ebcd73425897","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testImportCommunityLAR() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tboolean MyCommunityPage = selenium.isElementPresent(\n\t\t\t\t\t\t\"my-community-private-pages\");\n\n\t\t\t\tif (!MyCommunityPage) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"my-community-private-pages\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 2:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Communities\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.typeKeys(\"_134_name\",\n\t\t\t\t\tRuntimeVariables.replace(\"LAR Communit\"));\n\t\t\t\tselenium.type(\"_134_name\",\n\t\t\t\t\tRuntimeVariables.replace(\"LAR Community\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Search']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(\"//strong/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//body/div[2]/ul/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//body/div[2]/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Export / Import\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Import\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"_134_importFileName\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.type(\"_134_importFileName\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portal\\\\controlpanel\\\\communities\\\\Community.Selenium.portlet.lar\"));\n\t\t\t\tselenium.click(\"_134_PERMISSIONS\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Import']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":53335,"modified_method":"public void testImportCommunityLAR() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Communities\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Communities\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_134_name\", RuntimeVariables.replace(\"LAR Communit\"));\n\t\tselenium.type(\"_134_name\", RuntimeVariables.replace(\"LAR Community\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Search']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//body/div[2]/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//body/div[2]/ul/li[2]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Export / Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_134_importFileName\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_134_importFileName\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portal\\\\controlpanel\\\\communities\\\\Community.Selenium.portlet.lar\"));\n\t\tselenium.click(\"_134_PERMISSIONS\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Import']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","commit_id":"c0e20c73806c20ff7b6944b67028ebcd73425897","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testMergeOrganizationPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tboolean NotInControlPanel = selenium.isElementPresent(\n\t\t\t\t\t\t\"my-community-public-pages\");\n\n\t\t\t\tif (!NotInControlPanel) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//a[@id='my-community-public-pages']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Organizations\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.typeKeys(\"_126_keywords\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.type(\"_126_keywords\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Search']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(\"//td[8]/ul/li/strong/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//body/div[2]/ul/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//body/div[2]/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//li[@id='_126_tabs1settingsTabsId']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Merge Pages\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(\"_126_mergeGuestPublicPagesCheckbox\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Save']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":53336,"modified_method":"public void testMergeOrganizationPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tboolean NotInControlPanel = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[4]/ul/li[2]/a/span[1]\");\n\n\t\t\t\tif (!NotInControlPanel) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@id='_145_myPlacesContainer']/ul/li[2]/a/span[1]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 2:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Organizations\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.typeKeys(\"_126_keywords\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.type(\"_126_keywords\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Search']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(\"//td[8]/ul/li/strong/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//body/div[2]/ul/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//body/div[2]/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//li[@id='_126_tabs1settingsTabsId']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Merge Pages\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(\"_126_mergeGuestPublicPagesCheckbox\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Save']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"c0e20c73806c20ff7b6944b67028ebcd73425897","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testRemoveApplyOrganization() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tboolean InControlPanel = selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Back to My Community\");\n\n\t\t\t\tif (InControlPanel) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"my-community-private-pages\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 2:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.typeKeys(\"_126_keywords\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.type(\"_126_keywords\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Search']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(\"//td[8]/ul/li/strong/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Assign Members\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Assign Members\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(\"_126_allRowIds\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Update Associations']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":53337,"modified_method":"public void testRemoveApplyOrganization() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tboolean InControlPanel = selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Back to My Community\");\n\n\t\t\t\tif (InControlPanel) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@id='_145_myPlacesContainer']/ul/li[2]/a/span[1]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 2:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.typeKeys(\"_126_keywords\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.type(\"_126_keywords\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Search']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(\"//td[8]/ul/li/strong/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Assign Members\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Assign Members\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(\"_126_allRowIds\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Update Associations']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"c0e20c73806c20ff7b6944b67028ebcd73425897","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSettings() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Settings\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Settings\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_130_legalId\", RuntimeVariables.replace(\"LIFE\"));\n\t\tselenium.type(\"_130_legalId\", RuntimeVariables.replace(\"LIFE\"));\n\t\tselenium.type(\"_130_sicCode\", RuntimeVariables.replace(\"1234\"));\n\t\tselenium.type(\"_130_tickerSymbol\", RuntimeVariables.replace(\"LFRY\"));\n\t\tselenium.type(\"_130_industry\", RuntimeVariables.replace(\"Web Portal\"));\n\t\tselenium.type(\"_130_type\", RuntimeVariables.replace(\"Open Source\"));\n\t\tselenium.select(\"_130_timeZoneId\",\n\t\t\tRuntimeVariables.replace(\"label=(UTC -08:00) Pacific Standard Time\"));\n\t\tselenium.click(\"additionalEmailAddressesLink\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_130_emailAddressAddress0\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_130_emailAddressAddress0\",\n\t\t\tRuntimeVariables.replace(\"Admin@Liferay.com\"));\n\t\tselenium.select(\"_130_emailAddressTypeId0\",\n\t\t\tRuntimeVariables.replace(\"label=E-mail\"));\n\t\tselenium.click(\"_130_emailAddressPrimary0\");\n\t\tselenium.click(\"addressesLink\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_130_addressStreet10\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_130_addressStreet10\",\n\t\t\tRuntimeVariables.replace(\"123. Liferay Ln.\"));\n\t\tselenium.type(\"_130_addressCity0\",\n\t\t\tRuntimeVariables.replace(\"Rays of Light\"));\n\t\tselenium.type(\"_130_addressZip0\", RuntimeVariables.replace(\"12345\"));\n\t\tselenium.select(\"_130_addressCountryId0\",\n\t\t\tRuntimeVariables.replace(\"label=United States\"));\n\t\tThread.sleep(5000);\n\t\tselenium.select(\"_130_addressRegionId0\",\n\t\t\tRuntimeVariables.replace(\"label=California\"));\n\t\tselenium.select(\"_130_addressTypeId0\",\n\t\t\tRuntimeVariables.replace(\"label=Billing\"));\n\t\tselenium.click(\"_130_addressPrimary0\");\n\t\tselenium.click(\"_130_addressMailing0Checkbox\");\n\t\tselenium.click(\"websitesLink\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_130_websiteUrl0\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_130_websiteUrl0\",\n\t\t\tRuntimeVariables.replace(\"http://www.liferay.com\"));\n\t\tselenium.select(\"_130_websiteTypeId0\",\n\t\t\tRuntimeVariables.replace(\"label=Public\"));\n\t\tselenium.click(\"_130_websitePrimary0\");\n\t\tselenium.click(\"phoneNumbersLink\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_130_phoneNumber0\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_130_phoneNumber0\",\n\t\t\tRuntimeVariables.replace(\"123-123-1234\"));\n\t\tselenium.type(\"_130_phoneExtension0\", RuntimeVariables.replace(\"123\"));\n\t\tselenium.select(\"_130_phoneTypeId0\",\n\t\t\tRuntimeVariables.replace(\"label=Other\"));\n\t\tselenium.click(\"_130_phonePrimary0\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tselenium.click(\"authenticationLink\");\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"_130_settings(company.security.auto.login)Checkbox\"));\n\t\tselenium.click(\"link=LDAP\");\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"_130_settings(ldap.auth.enabled)Checkbox\"));\n\t\tselenium.click(\"link=CAS\");\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"_130_settings(cas.auth.enabled)Checkbox\"));\n\t\tselenium.click(\"link=NTLM\");\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"_130_settings(ntlm.auth.enabled)Checkbox\"));\n\t\tselenium.click(\"link=OpenID\");\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"_130_settings(open.id.auth.enabled)Checkbox\"));\n\t\tselenium.click(\"link=Open SSO\");\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"_130_settings(open.sso.auth.enabled)Checkbox\"));\n\t\tselenium.click(\"link=SiteMinder\");\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"_130_settings(siteminder.auth.enabled)Checkbox\"));\n\t\tselenium.click(\"defaultUserAssociationsLink\");\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"_130_settings(admin.default.group.names)\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"_130_settings(admin.default.role.names)\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"_130_settings(admin.default.user.group.names)\"));\n\t\tselenium.click(\"reservedCredentialsLink\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"_130_settings(admin.reserved.screen.names)\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_130_settings(admin.reserved.screen.names)\",\n\t\t\tRuntimeVariables.replace(\"Lifera\"));\n\t\tselenium.type(\"_130_settings(admin.reserved.screen.names)\",\n\t\t\tRuntimeVariables.replace(\"Liferay\"));\n\t\tselenium.type(\"_130_settings(admin.reserved.email.addresses)\",\n\t\t\tRuntimeVariables.replace(\"liferay@liferay.com\"));\n\t\tselenium.click(\"mailHostNamesLink\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"_130_settings(admin.mail.host.names)\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_130_settings(admin.mail.host.names)\",\n\t\t\tRuntimeVariables.replace(\"raysoflight.com\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tselenium.click(\"emailNotificationsLink\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"_130_settings(admin.email.from.name)\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(\"Joe Bloggs\",\n\t\t\tselenium.getValue(\"_130_settings(admin.email.from.name)\"));\n\t\tassertEquals(\"test@liferay.com\",\n\t\t\tselenium.getValue(\"_130_settings(admin.email.from.address)\"));\n\t\tselenium.click(\"link=Account Created Notification\");\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"_130_settings(admin.email.user.added.enabled)Checkbox\"));\n\t\tselenium.click(\"link=Password Changed Notification\");\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"_130_settings(admin.email.password.sent.enabled)Checkbox\"));\n\t}","id":53338,"modified_method":"public void testSettings() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Settings\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Settings\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_130_legalId\", RuntimeVariables.replace(\"LIFE\"));\n\t\tselenium.type(\"_130_legalId\", RuntimeVariables.replace(\"LIFE\"));\n\t\tselenium.type(\"_130_sicCode\", RuntimeVariables.replace(\"1234\"));\n\t\tselenium.type(\"_130_tickerSymbol\", RuntimeVariables.replace(\"LFRY\"));\n\t\tselenium.type(\"_130_industry\", RuntimeVariables.replace(\"Web Portal\"));\n\t\tselenium.type(\"_130_type\", RuntimeVariables.replace(\"Open Source\"));\n\t\tselenium.click(\"displaySettingsLink\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_130_timeZoneId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.select(\"_130_timeZoneId\",\n\t\t\tRuntimeVariables.replace(\"label=(UTC -08:00) Pacific Standard Time\"));\n\t\tselenium.click(\"additionalEmailAddressesLink\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_130_emailAddressAddress0\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_130_emailAddressAddress0\",\n\t\t\tRuntimeVariables.replace(\"Admin@Liferay.com\"));\n\t\tselenium.select(\"_130_emailAddressTypeId0\",\n\t\t\tRuntimeVariables.replace(\"label=E-mail\"));\n\t\tselenium.click(\"_130_emailAddressPrimary0\");\n\t\tselenium.click(\"addressesLink\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_130_addressStreet10\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_130_addressStreet10\",\n\t\t\tRuntimeVariables.replace(\"123. Liferay Ln.\"));\n\t\tselenium.type(\"_130_addressCity0\",\n\t\t\tRuntimeVariables.replace(\"Rays of Light\"));\n\t\tselenium.type(\"_130_addressZip0\", RuntimeVariables.replace(\"12345\"));\n\t\tselenium.select(\"_130_addressCountryId0\",\n\t\t\tRuntimeVariables.replace(\"label=United States\"));\n\t\tThread.sleep(5000);\n\t\tselenium.select(\"_130_addressRegionId0\",\n\t\t\tRuntimeVariables.replace(\"label=California\"));\n\t\tselenium.select(\"_130_addressTypeId0\",\n\t\t\tRuntimeVariables.replace(\"label=Billing\"));\n\t\tselenium.click(\"_130_addressPrimary0\");\n\t\tselenium.click(\"_130_addressMailing0Checkbox\");\n\t\tselenium.click(\"websitesLink\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_130_websiteUrl0\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_130_websiteUrl0\",\n\t\t\tRuntimeVariables.replace(\"http://www.liferay.com\"));\n\t\tselenium.select(\"_130_websiteTypeId0\",\n\t\t\tRuntimeVariables.replace(\"label=Public\"));\n\t\tselenium.click(\"_130_websitePrimary0\");\n\t\tselenium.click(\"phoneNumbersLink\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_130_phoneNumber0\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_130_phoneNumber0\",\n\t\t\tRuntimeVariables.replace(\"123-123-1234\"));\n\t\tselenium.type(\"_130_phoneExtension0\", RuntimeVariables.replace(\"123\"));\n\t\tselenium.select(\"_130_phoneTypeId0\",\n\t\t\tRuntimeVariables.replace(\"label=Other\"));\n\t\tselenium.click(\"_130_phonePrimary0\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tselenium.click(\"authenticationLink\");\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"_130_settings(company.security.auto.login)Checkbox\"));\n\t\tselenium.click(\"link=LDAP\");\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"_130_settings(ldap.auth.enabled)Checkbox\"));\n\t\tselenium.click(\"link=CAS\");\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"_130_settings(cas.auth.enabled)Checkbox\"));\n\t\tselenium.click(\"link=NTLM\");\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"_130_settings(ntlm.auth.enabled)Checkbox\"));\n\t\tselenium.click(\"link=OpenID\");\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"_130_settings(open.id.auth.enabled)Checkbox\"));\n\t\tselenium.click(\"link=Open SSO\");\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"_130_settings(open.sso.auth.enabled)Checkbox\"));\n\t\tselenium.click(\"link=SiteMinder\");\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"_130_settings(siteminder.auth.enabled)Checkbox\"));\n\t\tselenium.click(\"usersLink\");\n\t\tselenium.click(\"link=Default User Associations\");\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"_130_settings(admin.default.group.names)\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"_130_settings(admin.default.role.names)\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"_130_settings(admin.default.user.group.names)\"));\n\t\tselenium.click(\"link=Reserved Credentials\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"_130_settings(admin.reserved.screen.names)\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_130_settings(admin.reserved.screen.names)\",\n\t\t\tRuntimeVariables.replace(\"Lifera\"));\n\t\tselenium.type(\"_130_settings(admin.reserved.screen.names)\",\n\t\t\tRuntimeVariables.replace(\"Liferay\"));\n\t\tselenium.type(\"_130_settings(admin.reserved.email.addresses)\",\n\t\t\tRuntimeVariables.replace(\"liferay@liferay.com\"));\n\t\tselenium.click(\"mailHostNamesLink\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"_130_settings(admin.mail.host.names)\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_130_settings(admin.mail.host.names)\",\n\t\t\tRuntimeVariables.replace(\"raysoflight.com\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tselenium.click(\"emailNotificationsLink\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"_130_settings(admin.email.from.name)\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertEquals(\"Joe Bloggs\",\n\t\t\tselenium.getValue(\"_130_settings(admin.email.from.name)\"));\n\t\tassertEquals(\"test@liferay.com\",\n\t\t\tselenium.getValue(\"_130_settings(admin.email.from.address)\"));\n\t\tselenium.click(\"link=Account Created Notification\");\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"_130_settings(admin.email.user.added.enabled)Checkbox\"));\n\t\tselenium.click(\"link=Password Changed Notification\");\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"_130_settings(admin.email.password.sent.enabled)Checkbox\"));\n\t}","commit_id":"c0e20c73806c20ff7b6944b67028ebcd73425897","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDown() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Back to My Community\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//li[6]/ul/li[1]/a[1]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean PagePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Community LAR Import Test Page\");\n\n\t\t\t\tif (!PagePresent) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Community LAR Import Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean PortletPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[3]/a/img\");\n\n\t\t\t\tif (!PortletPresent) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tboolean CategoryPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/ul/li/strong\");\n\n\t\t\t\tif (!CategoryPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"//td[5]/ul/li/strong\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Delete\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to remove this component[\\\\s\\\\S]$\"));\n\n\t\t\tcase 3:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=New Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Manage Pages\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div/ul/li[2]/ul/li[2]/a/span\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Return to Full Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean MyCommunityPage = selenium.isElementPresent(\n\t\t\t\t\t\t\"my-community-private-pages\");\n\n\t\t\t\tif (!MyCommunityPage) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"my-community-private-pages\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 5:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Users\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.typeKeys(\"_125_keywords\",\n\t\t\t\t\tRuntimeVariables.replace(\"communit\"));\n\t\t\t\tselenium.type(\"_125_keywords\",\n\t\t\t\t\tRuntimeVariables.replace(\"community\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Search']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean UserPresent = selenium.isElementPresent(\"_125_rowIds\");\n\n\t\t\t\tif (!UserPresent) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"_125_allRowIds\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.click(\"link=Advanced \\u00bb\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"_125_active\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.select(\"_125_active\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=No\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Search']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(\"_125_allRowIds\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.click(\"link=\\u00ab Basic\");\n\n\t\t\tcase 6:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Communities\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.typeKeys(\"_134_name\",\n\t\t\t\t\tRuntimeVariables.replace(\"communit\"));\n\t\t\t\tselenium.type(\"_134_name\", RuntimeVariables.replace(\"community\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Search']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean CommunityAPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//strong/span\");\n\n\t\t\t\tif (!CommunityAPresent) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"//strong/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//body/div[2]/ul/li[6]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//body/div[2]/ul/li[6]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 7:\n\n\t\t\t\tboolean CommunityBPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//strong/span\");\n\n\t\t\t\tif (!CommunityBPresent) {\n\t\t\t\t\tlabel = 8;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"//strong/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//body/div[2]/ul/li[6]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//body/div[2]/ul/li[6]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 8:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":53339,"modified_method":"public void testTearDown() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Back to My Community\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@id='_145_myPlacesContainer']/ul/li[8]/a/span\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean PagePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Community LAR Import Test Page\");\n\n\t\t\t\tif (!PagePresent) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Community LAR Import Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean PortletPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[3]/a/img\");\n\n\t\t\t\tif (!PortletPresent) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tboolean CategoryPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/ul/li/strong\");\n\n\t\t\t\tif (!CategoryPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"//td[5]/ul/li/strong\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Delete\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to remove this component[\\\\s\\\\S]$\"));\n\n\t\t\tcase 3:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=New Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Manage Pages\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@id='_88_layoutsTreeOutput']/ul/li[2]/ul/li[2]/a/span\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//li[@id='_88_tabs3pageTabsId']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Return to Full Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean MyCommunityPage = selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[4]/ul/li[2]/a/span[1]\");\n\n\t\t\t\tif (!MyCommunityPage) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@id='_145_myPlacesContainer']/ul/li[2]/a/span[1]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 5:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Users\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.typeKeys(\"_125_keywords\",\n\t\t\t\t\tRuntimeVariables.replace(\"communit\"));\n\t\t\t\tselenium.type(\"_125_keywords\",\n\t\t\t\t\tRuntimeVariables.replace(\"community\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Search']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean UserPresent = selenium.isElementPresent(\"_125_rowIds\");\n\n\t\t\t\tif (!UserPresent) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"_125_allRowIds\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.click(\"link=Advanced \\u00bb\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"_125_active\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.select(\"_125_active\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=No\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Search']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(\"_125_allRowIds\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.click(\"link=\\u00ab Basic\");\n\n\t\t\tcase 6:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Communities\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.typeKeys(\"_134_name\",\n\t\t\t\t\tRuntimeVariables.replace(\"communit\"));\n\t\t\t\tselenium.type(\"_134_name\", RuntimeVariables.replace(\"community\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Search']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean CommunityAPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//strong/span\");\n\n\t\t\t\tif (!CommunityAPresent) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"//strong/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//body/div[2]/ul/li[6]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//body/div[2]/ul/li[6]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 7:\n\n\t\t\t\tboolean CommunityBPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//strong/span\");\n\n\t\t\t\tif (!CommunityBPresent) {\n\t\t\t\t\tlabel = 8;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"//strong/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//body/div[2]/ul/li[6]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//body/div[2]/ul/li[6]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 8:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"c0e20c73806c20ff7b6944b67028ebcd73425897","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDown() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Users\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Users\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.typeKeys(\"_125_keywords\",\n\t\t\t\t\tRuntimeVariables.replace(\"selenium\"));\n\t\t\t\tselenium.type(\"_125_keywords\",\n\t\t\t\t\tRuntimeVariables.replace(\"selenium\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Search']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean UserPresent = selenium.isElementPresent(\"_125_rowIds\");\n\n\t\t\t\tif (!UserPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"_125_allRowIds\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.click(\"link=Advanced \\u00bb\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"_125_active\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.select(\"_125_active\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=No\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Search']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(\"_125_allRowIds\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.click(\"link=\\u00ab Basic\");\n\n\t\t\tcase 2:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.typeKeys(\"_126_keywords\",\n\t\t\t\t\tRuntimeVariables.replace(\"selenium\"));\n\t\t\t\tselenium.type(\"_126_keywords\",\n\t\t\t\t\tRuntimeVariables.replace(\"selenium\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Search']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean OrganizationPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"_126_rowIds\");\n\n\t\t\t\tif (!OrganizationPresent) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"_126_allRowIds\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 3:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=User Groups\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean UserGroupPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"_127_rowIds\");\n\n\t\t\t\tif (!UserGroupPresent) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"_127_allRowIds\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 4:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Password Policies\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.typeKeys(\"_129_name\", RuntimeVariables.replace(\"Test\"));\n\t\t\t\tselenium.type(\"_129_name\", RuntimeVariables.replace(\"Test\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Search']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean PasswordPolicyPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//strong/span\");\n\n\t\t\t\tif (!PasswordPolicyPresent) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"//strong/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Delete\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 5:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Settings\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.type(\"_130_legalId\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.type(\"_130_sicCode\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.type(\"_130_tickerSymbol\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.type(\"_130_industry\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.type(\"_130_type\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.select(\"_130_timeZoneId\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"label=(UTC ) Coordinated Universal Time\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Save']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(\"additionalEmailAddressesLink\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@id='additionalEmailAddresses']/fieldset/div[2]/div/span/a[2]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\n\t\t\t\t\t\"//div[@id='additionalEmailAddresses']/fieldset/div[2]/div/span/a[2]\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Undo (1)\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"addressesLink\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@id='addresses']/fieldset/div[2]/div/span/a[2]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\n\t\t\t\t\t\"//div[@id='addresses']/fieldset/div[2]/div/span/a[2]\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Undo (2)\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"websitesLink\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@id='websites']/fieldset/div[2]/div/span/a[2]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\n\t\t\t\t\t\"//div[@id='websites']/fieldset/div[2]/div/span/a[2]\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Undo (3)\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"phoneNumbersLink\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@id='phoneNumbers']/fieldset/div[2]/div/span/a[2]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\n\t\t\t\t\t\"//div[@id='phoneNumbers']/fieldset/div[2]/div/span/a[2]\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Undo (4)\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"reservedCredentialsLink\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"_130_settings(admin.reserved.screen.names)\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.type(\"_130_settings(admin.reserved.screen.names)\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.type(\"_130_settings(admin.reserved.email.addresses)\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"mailHostNamesLink\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"mailHostNamesLink\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"_130_settings(admin.mail.host.names)\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.type(\"_130_settings(admin.mail.host.names)\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Save']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":53340,"modified_method":"public void testTearDown() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Users\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Users\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.typeKeys(\"_125_keywords\",\n\t\t\t\t\tRuntimeVariables.replace(\"selenium\"));\n\t\t\t\tselenium.type(\"_125_keywords\",\n\t\t\t\t\tRuntimeVariables.replace(\"selenium\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Search']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean UserPresent = selenium.isElementPresent(\"_125_rowIds\");\n\n\t\t\t\tif (!UserPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"_125_allRowIds\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.click(\"link=Advanced \\u00bb\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"_125_active\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.select(\"_125_active\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=No\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Search']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(\"_125_allRowIds\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.click(\"link=\\u00ab Basic\");\n\n\t\t\tcase 2:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.typeKeys(\"_126_keywords\",\n\t\t\t\t\tRuntimeVariables.replace(\"selenium\"));\n\t\t\t\tselenium.type(\"_126_keywords\",\n\t\t\t\t\tRuntimeVariables.replace(\"selenium\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Search']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean OrganizationPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"_126_rowIds\");\n\n\t\t\t\tif (!OrganizationPresent) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"_126_allRowIds\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 3:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=User Groups\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean UserGroupPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"_127_rowIds\");\n\n\t\t\t\tif (!UserGroupPresent) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"_127_allRowIds\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 4:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Password Policies\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.typeKeys(\"_129_name\", RuntimeVariables.replace(\"Test\"));\n\t\t\t\tselenium.type(\"_129_name\", RuntimeVariables.replace(\"Test\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Search']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean PasswordPolicyPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//strong/span\");\n\n\t\t\t\tif (!PasswordPolicyPresent) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"//strong/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Delete\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 5:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Settings\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.type(\"_130_legalId\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.type(\"_130_sicCode\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.type(\"_130_tickerSymbol\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.type(\"_130_industry\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.type(\"_130_type\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.select(\"_130_timeZoneId\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"label=(UTC ) Coordinated Universal Time\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Save']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(\"additionalEmailAddressesLink\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@id='additionalEmailAddresses']/fieldset/div[2]/div/span/a[2]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\n\t\t\t\t\t\"//div[@id='additionalEmailAddresses']/fieldset/div[2]/div/span/a[2]\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Undo (1)\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"addressesLink\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@id='addresses']/fieldset/div[2]/div/span/a[2]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\n\t\t\t\t\t\"//div[@id='addresses']/fieldset/div[2]/div/span/a[2]\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Undo (2)\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"websitesLink\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@id='websites']/fieldset/div[2]/div/span/a[2]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\n\t\t\t\t\t\"//div[@id='websites']/fieldset/div[2]/div/span/a[2]\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Undo (3)\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"phoneNumbersLink\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//div[@id='phoneNumbers']/fieldset/div[2]/div/span/a[2]\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\n\t\t\t\t\t\"//div[@id='phoneNumbers']/fieldset/div[2]/div/span/a[2]\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Undo (4)\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"usersLink\");\n\t\t\t\tselenium.click(\"link=Reserved Credentials\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"_130_settings(admin.reserved.screen.names)\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.type(\"_130_settings(admin.reserved.screen.names)\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.type(\"_130_settings(admin.reserved.email.addresses)\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"mailHostNamesLink\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"mailHostNamesLink\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"_130_settings(admin.mail.host.names)\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.type(\"_130_settings(admin.mail.host.names)\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Save']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"c0e20c73806c20ff7b6944b67028ebcd73425897","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Test\n\tpublic void testAddNodePage() throws Exception {\n\t      \n\t\tverifyTrue(selenium.isTextPresent(\"Category:\"));\n\t\tverifyEquals(\"Provision\", selenium.getValue(\"css=input[type=submit]\"));\n\t\tverifyTrue(selenium.isElementPresent(\"css=input[type=reset]\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Enable Password:\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Node Quick-Add\"));\n\t\tverifyTrue(selenium.isTextPresent(\"CLI Authentication Parameters (optional)\"));\n\t\tverifyTrue(selenium.isTextPresent(\"SNMP Parameters (optional)\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Surveillance Category Memberships (optional)\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Basic Attributes (required)\"));\n\t\tselenium.click(\"link=Log out\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":53341,"modified_method":"@Test\n    public void testAddNodePage() throws Exception {\n\n        assertTrue(selenium.isTextPresent(\"Category:\"));\n        assertEquals(\"Provision\", selenium.getValue(\"css=input[type=submit]\"));\n        assertTrue(selenium.isElementPresent(\"css=input[type=reset]\"));\n        assertTrue(selenium.isTextPresent(\"Enable Password:\"));\n        assertTrue(selenium.isTextPresent(\"Node Quick-Add\"));\n        assertTrue(selenium.isTextPresent(\"CLI Authentication Parameters (optional)\"));\n        assertTrue(selenium.isTextPresent(\"SNMP Parameters (optional)\"));\n        assertTrue(selenium.isTextPresent(\"Surveillance Category Memberships (optional)\"));\n        assertTrue(selenium.isTextPresent(\"Basic Attributes (required)\"));\n        selenium.click(\"link=Log out\");\n        selenium.waitForPageToLoad(\"30000\");\n    }","commit_id":"09dfb964c5824dca11025386d57eb98754a1e30d","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    public void testAllLinksArePresent() throws Exception  {\n\n        verifyTrue(selenium.isElementPresent(\"link=Configure Users, Groups and Roles\"));\n        verifyTrue(selenium.isElementPresent(\"link=System Information\"));\n        verifyTrue(selenium.isElementPresent(\"link=Instrumentation Log Reader\"));\n        verifyTrue(selenium.isElementPresent(\"link=Configure Discovery\"));\n        verifyTrue(selenium.isElementPresent(\"link=Configure SNMP Community Names by IP\"));\n        verifyTrue(selenium.isElementPresent(\"link=Configure SNMP Data Collection per Interface\"));\n        verifyTrue(selenium.isElementPresent(\"link=Manage and Unmanage Interfaces and Services\"));\n        verifyTrue(selenium.isElementPresent(\"link=Manage Thresholds\"));\n        verifyTrue(selenium.isElementPresent(\"link=Configure Notifications\"));\n        verifyTrue(selenium.isElementPresent(\"link=Scheduled Outages\"));\n        verifyTrue(selenium.isElementPresent(\"link=Add Interface\"));\n        verifyTrue(selenium.isElementPresent(\"link=Manage Provisioning Groups\"));\n        verifyTrue(selenium.isElementPresent(\"link=Import and Export Asset Information\"));\n        verifyTrue(selenium.isElementPresent(\"link=Manage Surveillance Categories\"));\n        verifyTrue(selenium.isElementPresent(\"link=Delete Nodes\"));\n        verifyTrue(selenium.isElementPresent(\"link=Manage Applications\"));\n        verifyTrue(selenium.isElementPresent(\"link=Manage Location Monitors\"));\n        verifyTrue(selenium.isElementPresent(\"link=the OpenNMS wiki\"));\n    }","id":53342,"modified_method":"@Test\n    public void testAllLinksArePresent() throws Exception  {\n\n        assertTrue(selenium.isElementPresent(\"link=Configure Users, Groups and Roles\"));\n        assertTrue(selenium.isElementPresent(\"link=System Information\"));\n        assertTrue(selenium.isElementPresent(\"link=Instrumentation Log Reader\"));\n        assertTrue(selenium.isElementPresent(\"link=Configure Discovery\"));\n        assertTrue(selenium.isElementPresent(\"link=Configure SNMP Community Names by IP\"));\n        assertTrue(selenium.isElementPresent(\"link=Configure SNMP Data Collection per Interface\"));\n        assertTrue(selenium.isElementPresent(\"link=Manage and Unmanage Interfaces and Services\"));\n        assertTrue(selenium.isElementPresent(\"link=Manage Thresholds\"));\n        assertTrue(selenium.isElementPresent(\"link=Configure Notifications\"));\n        assertTrue(selenium.isElementPresent(\"link=Scheduled Outages\"));\n        assertTrue(selenium.isElementPresent(\"link=Add Interface\"));\n        assertTrue(selenium.isElementPresent(\"link=Manage Provisioning Groups\"));\n        assertTrue(selenium.isElementPresent(\"link=Import and Export Asset Information\"));\n        assertTrue(selenium.isElementPresent(\"link=Manage Surveillance Categories\"));\n        assertTrue(selenium.isElementPresent(\"link=Delete Nodes\"));\n        assertTrue(selenium.isElementPresent(\"link=Manage Applications\"));\n        assertTrue(selenium.isElementPresent(\"link=Manage Location Monitors\"));\n        assertTrue(selenium.isElementPresent(\"link=the OpenNMS wiki\"));\n    }","commit_id":"09dfb964c5824dca11025386d57eb98754a1e30d","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    public void testLinkGroupOne() throws Exception {\n        selenium.click(\"link=Configure Users, Groups and Roles\");\n        selenium.waitForPageToLoad(\"30000\");\n        verifyTrue(selenium.isTextPresent(\"Users and Groups\"));\n        verifyTrue(selenium.isTextPresent(\"Users\"));\n        verifyTrue(selenium.isTextPresent(\"Groups\"));\n        verifyTrue(selenium.isTextPresent(\"Roles\"));\n        selenium.click(\"link=Admin\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=System Information\");\n        selenium.waitForPageToLoad(\"30000\");\n        verifyTrue(selenium.isTextPresent(\"OpenNMS Configuration\"));\n        verifyTrue(selenium.isTextPresent(\"System Configuration\"));\n        verifyTrue(selenium.isTextPresent(\"Reports directory:\"));\n        selenium.click(\"link=Admin\");\n        selenium.waitForPageToLoad(\"30000\");\n    }","id":53343,"modified_method":"@Test\n    public void testLinkGroupOne() throws Exception {\n        selenium.click(\"link=Configure Users, Groups and Roles\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isTextPresent(\"Users and Groups\"));\n        assertTrue(selenium.isTextPresent(\"Users\"));\n        assertTrue(selenium.isTextPresent(\"Groups\"));\n        assertTrue(selenium.isTextPresent(\"Roles\"));\n        selenium.click(\"link=Admin\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=System Information\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isTextPresent(\"OpenNMS Configuration\"));\n        assertTrue(selenium.isTextPresent(\"System Configuration\"));\n        assertTrue(selenium.isTextPresent(\"Reports directory:\"));\n        selenium.click(\"link=Admin\");\n        selenium.waitForPageToLoad(\"30000\");\n    }","commit_id":"09dfb964c5824dca11025386d57eb98754a1e30d","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    public void testLinkGroupFive() throws Exception {\n        selenium.click(\"link=the OpenNMS wiki\");\n        verifyTrue(selenium.isTextPresent(\"Events\"));\n        verifyTrue(selenium.isTextPresent(\"license keys\"));\n        verifyTrue(selenium.isTextPresent(\"Stay Connected\"));\n        // goBack\n        selenium.click(\"link=Log out\");\n        selenium.waitForPageToLoad(\"30000\");\n    }","id":53344,"modified_method":"@Test\n    public void testLinkGroupFive() throws Exception {\n        selenium.click(\"link=the OpenNMS wiki\");\n        assertTrue(selenium.isTextPresent(\"Events\"));\n        assertTrue(selenium.isTextPresent(\"license keys\"));\n        assertTrue(selenium.isTextPresent(\"Stay Connected\"));\n        // goBack\n        selenium.click(\"link=Log out\");\n        selenium.waitForPageToLoad(\"30000\");\n    }","commit_id":"09dfb964c5824dca11025386d57eb98754a1e30d","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    public void testLinkGroupThree() throws Exception {\n        selenium.click(\"link=Add Interface\");\n        selenium.waitForPageToLoad(\"30000\");\n        verifyTrue(selenium.isTextPresent(\"Enter IP address\"));\n        verifyTrue(selenium.isTextPresent(\"Add Interface\"));\n        verifyTrue(selenium.isTextPresent(\"valid IP address\"));\n        selenium.click(\"link=Admin\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=Manage Provisioning Groups\");\n        selenium.waitForPageToLoad(\"30000\");\n        verifyEquals(\"Add New Group\", selenium.getValue(\"css=input[type=submit]\"));\n        verifyEquals(\"Edit Default Foreign Source\", selenium.getValue(\"css=input[type=button]\"));\n        verifyEquals(\"Reset Default Foreign Source\", selenium.getValue(\"//input[@value='Reset Default Foreign Source']\"));\n        selenium.click(\"//div[@id='content']/div/h2/a[2]\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=Import and Export Asset Information\");\n        selenium.waitForPageToLoad(\"30000\");\n        verifyTrue(selenium.isTextPresent(\"Import and Export Assets\"));\n        verifyTrue(selenium.isTextPresent(\"Importing Asset Information\"));\n        verifyTrue(selenium.isTextPresent(\"Exporting Asset Information\"));\n        selenium.click(\"//div[@id='content']/div/h2/a[2]\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=Manage Surveillance Categories\");\n        selenium.waitForPageToLoad(\"30000\");\n        verifyTrue(selenium.isTextPresent(\"Surveillance Categories\"));\n        verifyTrue(selenium.isTextPresent(\"Category\"));\n        verifyEquals(\"Add New Category\", selenium.getValue(\"css=input[type=submit]\"));\n        selenium.click(\"//div[@id='content']/div/h2/a[2]\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=Delete Nodes\");\n        selenium.waitForPageToLoad(\"30000\");\n        verifyTrue(selenium.isTextPresent(\"Delete Nodes\"));\n        verifyTrue(selenium.isTextPresent(\"Node Label\"));\n        selenium.click(\"link=Admin\");\n        selenium.waitForPageToLoad(\"30000\");\n    }","id":53345,"modified_method":"@Test\n    public void testLinkGroupThree() throws Exception {\n        selenium.click(\"link=Add Interface\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isTextPresent(\"Enter IP address\"));\n        assertTrue(selenium.isTextPresent(\"Add Interface\"));\n        assertTrue(selenium.isTextPresent(\"valid IP address\"));\n        selenium.click(\"link=Admin\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=Manage Provisioning Groups\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertEquals(\"Add New Group\", selenium.getValue(\"css=input[type=submit]\"));\n        assertEquals(\"Edit Default Foreign Source\", selenium.getValue(\"css=input[type=button]\"));\n        assertEquals(\"Reset Default Foreign Source\", selenium.getValue(\"//input[@value='Reset Default Foreign Source']\"));\n        selenium.click(\"//div[@id='content']/div/h2/a[2]\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=Import and Export Asset Information\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isTextPresent(\"Import and Export Assets\"));\n        assertTrue(selenium.isTextPresent(\"Importing Asset Information\"));\n        assertTrue(selenium.isTextPresent(\"Exporting Asset Information\"));\n        selenium.click(\"//div[@id='content']/div/h2/a[2]\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=Manage Surveillance Categories\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isTextPresent(\"Surveillance Categories\"));\n        assertTrue(selenium.isTextPresent(\"Category\"));\n        assertEquals(\"Add New Category\", selenium.getValue(\"css=input[type=submit]\"));\n        selenium.click(\"//div[@id='content']/div/h2/a[2]\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=Delete Nodes\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isTextPresent(\"Delete Nodes\"));\n        assertTrue(selenium.isTextPresent(\"Node Label\"));\n        selenium.click(\"link=Admin\");\n        selenium.waitForPageToLoad(\"30000\");\n    }","commit_id":"09dfb964c5824dca11025386d57eb98754a1e30d","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    public void testLinkGroupTwo() throws Exception {\n        selenium.click(\"link=Configure Discovery\");\n        selenium.waitForPageToLoad(\"30000\");\n        verifyTrue(selenium.isTextPresent(\"General settings\"));\n        verifyTrue(selenium.isTextPresent(\"Specifics\"));\n        verifyTrue(selenium.isTextPresent(\"Include URLs\"));\n        verifyTrue(selenium.isTextPresent(\"Include Ranges\"));\n        verifyTrue(selenium.isTextPresent(\"Exclude Ranges\"));\n        selenium.click(\"link=Admin\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=Configure SNMP Community Names by IP\");\n        selenium.waitForPageToLoad(\"30000\");\n        verifyTrue(selenium.isTextPresent(\"Please enter an IP or a range of IPs and the read community string below\"));\n        verifyTrue(selenium.isTextPresent(\"Updating SNMP Community Names\"));\n        verifyTrue(selenium.isTextPresent(\"optimize this list\"));\n        selenium.click(\"link=Admin\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=Configure SNMP Data Collection per Interface\");\n        selenium.waitForPageToLoad(\"30000\");\n        verifyTrue(selenium.isTextPresent(\"Manage SNMP Data Collection per Interface\"));\n        verifyTrue(selenium.isTextPresent(\"datacollection-config.xml file\"));\n        verifyTrue(selenium.isTextPresent(\"Node Label\"));\n        selenium.click(\"link=Admin\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=Manage and Unmanage Interfaces and Services\");\n        selenium.waitForPageToLoad(\"30000\");\n        verifyTrue(selenium.isTextPresent(\"Manage and Unmanage Interfaces and Services\"));\n        verifyTrue(selenium.isTextPresent(\"unchecked meaning\"));\n        verifyTrue(selenium.isTextPresent(\"mark each service\"));\n        selenium.click(\"link=Admin\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=Manage Thresholds\");\n        selenium.waitForPageToLoad(\"30000\");\n        verifyTrue(selenium.isTextPresent(\"Threshold Configuration\"));\n        verifyTrue(selenium.isTextPresent(\"Name\"));\n        verifyTrue(selenium.isTextPresent(\"RRD Repository\"));\n        selenium.click(\"//div[@id='content']/div/h2/a[2]\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=Configure Notifications\");\n        selenium.waitForPageToLoad(\"30000\");\n        verifyTrue(selenium.isTextPresent(\"Configure Notifications\"));\n        verifyTrue(selenium.isTextPresent(\"Event Notifications\"));\n        verifyTrue(selenium.isTextPresent(\"Destination Paths\"));\n        verifyTrue(selenium.isTextPresent(\"Path Outages\"));\n        selenium.click(\"//div[@id='content']/div/h2/a[2]\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=Scheduled Outages\");\n        selenium.waitForPageToLoad(\"30000\");\n        verifyTrue(selenium.isTextPresent(\"Affects...\"));\n        verifyTrue(selenium.isTextPresent(\"Notifications\"));\n        verifyTrue(selenium.isTextPresent(\"Data collection\"));\n        selenium.click(\"link=Admin\");\n        selenium.waitForPageToLoad(\"30000\");\n    }","id":53346,"modified_method":"@Test\n    public void testLinkGroupTwo() throws Exception {\n        selenium.click(\"link=Configure Discovery\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isTextPresent(\"General settings\"));\n        assertTrue(selenium.isTextPresent(\"Specifics\"));\n        assertTrue(selenium.isTextPresent(\"Include URLs\"));\n        assertTrue(selenium.isTextPresent(\"Include Ranges\"));\n        assertTrue(selenium.isTextPresent(\"Exclude Ranges\"));\n        selenium.click(\"link=Admin\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=Configure SNMP Community Names by IP\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isTextPresent(\"Please enter an IP or a range of IPs and the read community string below\"));\n        assertTrue(selenium.isTextPresent(\"Updating SNMP Community Names\"));\n        assertTrue(selenium.isTextPresent(\"optimize this list\"));\n        selenium.click(\"link=Admin\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=Configure SNMP Data Collection per Interface\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isTextPresent(\"Manage SNMP Data Collection per Interface\"));\n        assertTrue(selenium.isTextPresent(\"datacollection-config.xml file\"));\n        assertTrue(selenium.isTextPresent(\"Node Label\"));\n        selenium.click(\"link=Admin\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=Manage and Unmanage Interfaces and Services\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isTextPresent(\"Manage and Unmanage Interfaces and Services\"));\n        assertTrue(selenium.isTextPresent(\"unchecked meaning\"));\n        assertTrue(selenium.isTextPresent(\"mark each service\"));\n        selenium.click(\"link=Admin\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=Manage Thresholds\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isTextPresent(\"Threshold Configuration\"));\n        assertTrue(selenium.isTextPresent(\"Name\"));\n        assertTrue(selenium.isTextPresent(\"RRD Repository\"));\n        selenium.click(\"//div[@id='content']/div/h2/a[2]\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=Configure Notifications\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isTextPresent(\"Configure Notifications\"));\n        assertTrue(selenium.isTextPresent(\"Event Notifications\"));\n        assertTrue(selenium.isTextPresent(\"Destination Paths\"));\n        assertTrue(selenium.isTextPresent(\"Path Outages\"));\n        selenium.click(\"//div[@id='content']/div/h2/a[2]\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=Scheduled Outages\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isTextPresent(\"Affects...\"));\n        assertTrue(selenium.isTextPresent(\"Notifications\"));\n        assertTrue(selenium.isTextPresent(\"Data collection\"));\n        selenium.click(\"link=Admin\");\n        selenium.waitForPageToLoad(\"30000\");\n    }","commit_id":"09dfb964c5824dca11025386d57eb98754a1e30d","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    public void testAllTextIsPresent() throws Exception {\n        verifyTrue(selenium.isTextPresent(\"OpenNMS System\"));\n        verifyTrue(selenium.isTextPresent(\"Operations\"));\n        verifyTrue(selenium.isTextPresent(\"Nodes\"));\n        verifyTrue(selenium.isTextPresent(\"Distributed Monitoring\"));\n        verifyTrue(selenium.isTextPresent(\"Descriptions\"));\n        verifyTrue(selenium.isTextPresent(\"Scheduled Outages: Add\"));\n        verifyTrue(selenium.isTextPresent(\"Notification Status:\"));\n    }","id":53347,"modified_method":"@Test\n    public void testAllTextIsPresent() throws Exception {\n        assertTrue(selenium.isTextPresent(\"OpenNMS System\"));\n        assertTrue(selenium.isTextPresent(\"Operations\"));\n        assertTrue(selenium.isTextPresent(\"Nodes\"));\n        assertTrue(selenium.isTextPresent(\"Distributed Monitoring\"));\n        assertTrue(selenium.isTextPresent(\"Descriptions\"));\n        assertTrue(selenium.isTextPresent(\"Scheduled Outages: Add\"));\n        assertTrue(selenium.isTextPresent(\"Notification Status:\"));\n    }","commit_id":"09dfb964c5824dca11025386d57eb98754a1e30d","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    public void testLinkGroupFour() throws Exception {\n        selenium.click(\"link=Manage Applications\");\n        selenium.waitForPageToLoad(\"30000\");\n        verifyTrue(selenium.isTextPresent(\"Applications\"));\n        verifyTrue(selenium.isTextPresent(\"Edit\"));\n        verifyEquals(\"Add New Application\", selenium.getValue(\"css=input[type=submit]\"));\n        selenium.click(\"//div[@id='content']/div/h2/a[2]\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=Manage Location Monitors\");\n        selenium.waitForPageToLoad(\"30000\");\n        verifyTrue(selenium.isTextPresent(\"Distributed Poller Status\"));\n        verifyTrue(selenium.isTextPresent(\"Hostname\"));\n        verifyEquals(\"Resume All\", selenium.getValue(\"//input[@value='Resume All']\"));\n        selenium.click(\"link=Admin\");\n        selenium.waitForPageToLoad(\"30000\");\n    }","id":53348,"modified_method":"@Test\n    public void testLinkGroupFour() throws Exception {\n        selenium.click(\"link=Manage Applications\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isTextPresent(\"Applications\"));\n        assertTrue(selenium.isTextPresent(\"Edit\"));\n        assertEquals(\"Add New Application\", selenium.getValue(\"css=input[type=submit]\"));\n        selenium.click(\"//div[@id='content']/div/h2/a[2]\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=Manage Location Monitors\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isTextPresent(\"Distributed Poller Status\"));\n        assertTrue(selenium.isTextPresent(\"Hostname\"));\n        assertEquals(\"Resume All\", selenium.getValue(\"//input[@value='Resume All']\"));\n        selenium.click(\"link=Admin\");\n        selenium.waitForPageToLoad(\"30000\");\n    }","commit_id":"09dfb964c5824dca11025386d57eb98754a1e30d","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n\tpublic void testAlarmsPage() throws Exception {\n\t\tverifyTrue(selenium.isTextPresent(\"Alarm Queries\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Outstanding and acknowledged alarms\"));\n\t\tverifyTrue(selenium.isTextPresent(\"To view acknowledged alarms\"));\n\t\tverifyTrue(selenium.isElementPresent(\"css=input[type=submit]\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Alarm ID:\"));\n\t\tverifyTrue(selenium.isElementPresent(\"link=All alarms (summary)\"));\n\t\tverifyTrue(selenium.isElementPresent(\"link=All alarms (detail)\"));\n\t\tverifyTrue(selenium.isElementPresent(\"link=Advanced Search\"));\n\t\tselenium.click(\"link=All alarms (summary)\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\"alarm is outstanding\"));\n\t\tverifyTrue(selenium.isTextPresent(\"alarm is outstanding\"));\n\t\tverifyTrue(selenium.isElementPresent(\"//input[@value='Go']\"));\n\t\tverifyTrue(selenium.isElementPresent(\"css=input[type=submit]\"));\n\t\tselenium.click(\"css=a[title=Alarms System Page]\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=All alarms (detail)\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isElementPresent(\"link=First Event Time\"));\n\t\tverifyTrue(selenium.isElementPresent(\"link=Last Event Time\"));\n\t\tverifyTrue(selenium.isElementPresent(\"css=input[type=reset]\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Ack\"));\n\t\tselenium.click(\"css=a[title=Alarms System Page]\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Advanced Search\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\"Alarm Text Contains:\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Advanced Alarm Search\"));\n\t\tselenium.open(\"/opennms/alarm/advsearch.jsp\");\n\t\tverifyTrue(selenium.isTextPresent(\"Advanced Alarm Search page\"));\n\t\tverifyTrue(selenium.isElementPresent(\"css=input[type=submit]\"));\n\t\tverifyTrue(selenium.isElementPresent(\"name=beforefirsteventtimemonth\"));\n\t\tselenium.click(\"//div[@id='content']/div/h2/a[2]\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Log out\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":53349,"modified_method":"@Test\n    public void testAlarmsPage() throws Exception {\n        assertTrue(selenium.isTextPresent(\"Alarm Queries\"));\n        assertTrue(selenium.isTextPresent(\"Outstanding and acknowledged alarms\"));\n        assertTrue(selenium.isTextPresent(\"To view acknowledged alarms\"));\n        assertTrue(selenium.isElementPresent(\"css=input[type=submit]\"));\n        assertTrue(selenium.isTextPresent(\"Alarm ID:\"));\n        assertTrue(selenium.isElementPresent(\"link=All alarms (summary)\"));\n        assertTrue(selenium.isElementPresent(\"link=All alarms (detail)\"));\n        assertTrue(selenium.isElementPresent(\"link=Advanced Search\"));\n        selenium.click(\"link=All alarms (summary)\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isTextPresent(\"alarm is outstanding\"));\n        assertTrue(selenium.isTextPresent(\"alarm is outstanding\"));\n        assertTrue(selenium.isElementPresent(\"//input[@value='Go']\"));\n        assertTrue(selenium.isElementPresent(\"css=input[type=submit]\"));\n        selenium.click(\"css=a[title=Alarms System Page]\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=All alarms (detail)\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isElementPresent(\"link=First Event Time\"));\n        assertTrue(selenium.isElementPresent(\"link=Last Event Time\"));\n        assertTrue(selenium.isElementPresent(\"css=input[type=reset]\"));\n        assertTrue(selenium.isTextPresent(\"Ack\"));\n        selenium.click(\"css=a[title=Alarms System Page]\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=Advanced Search\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isTextPresent(\"Alarm Text Contains:\"));\n        assertTrue(selenium.isTextPresent(\"Advanced Alarm Search\"));\n        selenium.open(\"/opennms/alarm/advsearch.jsp\");\n        assertTrue(selenium.isTextPresent(\"Advanced Alarm Search page\"));\n        assertTrue(selenium.isElementPresent(\"css=input[type=submit]\"));\n        assertTrue(selenium.isElementPresent(\"name=beforefirsteventtimemonth\"));\n        selenium.click(\"//div[@id='content']/div/h2/a[2]\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=Log out\");\n        selenium.waitForPageToLoad(\"30000\");\n    }","commit_id":"09dfb964c5824dca11025386d57eb98754a1e30d","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n\tpublic void testAssetsPage() throws Exception {\n\t\tverifyTrue(selenium.isTextPresent(\"Search Asset Information\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Assets Inventory\"));\n\t\tverifyTrue(selenium.isTextPresent(\"nter the data by hand\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Assets with asset numbers\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Assets in category\"));\n\t\tverifyTrue(selenium.isElementPresent(\"css=input[type=submit]\"));\n\t\tverifyTrue(selenium.isElementPresent(\"name=searchvalue\"));\n\t\tverifyTrue(selenium.isElementPresent(\"link=All nodes with asset info\"));\n\t\tselenium.click(\"link=All nodes with asset info\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\"Assets\"));\n\t\tselenium.click(\"//div[@id='content']/div/h2/a[2]\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Log out\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":53350,"modified_method":"@Test\n    public void testAssetsPage() throws Exception {\n        assertTrue(selenium.isTextPresent(\"Search Asset Information\"));\n        assertTrue(selenium.isTextPresent(\"Assets Inventory\"));\n        assertTrue(selenium.isTextPresent(\"nter the data by hand\"));\n        assertTrue(selenium.isTextPresent(\"Assets with asset numbers\"));\n        assertTrue(selenium.isTextPresent(\"Assets in category\"));\n        assertTrue(selenium.isElementPresent(\"css=input[type=submit]\"));\n        assertTrue(selenium.isElementPresent(\"name=searchvalue\"));\n        assertTrue(selenium.isElementPresent(\"link=All nodes with asset info\"));\n        selenium.click(\"link=All nodes with asset info\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isTextPresent(\"Assets\"));\n        selenium.click(\"//div[@id='content']/div/h2/a[2]\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=Log out\");\n        selenium.waitForPageToLoad(\"30000\");\n    }","commit_id":"09dfb964c5824dca11025386d57eb98754a1e30d","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n\tpublic void testChartsPage() throws Exception {\n\t\tverifyTrue(selenium.isElementPresent(\"css=img[alt=sample-bar-chart]\"));\n\t\tverifyTrue(selenium.isElementPresent(\"css=img[alt=sample-bar-chart2]\"));\n\t\tverifyTrue(selenium.isElementPresent(\"css=img[alt=sample-bar-chart3]\"));\n\t\tselenium.click(\"link=Log out\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":53351,"modified_method":"@Test\n    public void testChartsPage() throws Exception {\n        assertTrue(selenium.isElementPresent(\"css=img[alt=sample-bar-chart]\"));\n        assertTrue(selenium.isElementPresent(\"css=img[alt=sample-bar-chart2]\"));\n        assertTrue(selenium.isElementPresent(\"css=img[alt=sample-bar-chart3]\"));\n        selenium.click(\"link=Log out\");\n        selenium.waitForPageToLoad(\"30000\");\n    }","commit_id":"09dfb964c5824dca11025386d57eb98754a1e30d","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n\tpublic void testDashboardPage() throws Exception {\n\t\tverifyTrue(selenium.isTextPresent(\"Alarms\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Notifications\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Node Status\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Resource Graphs\"));\n\t\tverifyTrue(selenium.isTextPresent(\"24 Hour Availability\"));\n\t\tselenium.click(\"link=Log out\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":53352,"modified_method":"@Test\n    public void testDashboardPage() throws Exception {\n        assertTrue(selenium.isTextPresent(\"Alarms\"));\n        assertTrue(selenium.isTextPresent(\"Notifications\"));\n        assertTrue(selenium.isTextPresent(\"Node Status\"));\n        assertTrue(selenium.isTextPresent(\"Resource Graphs\"));\n        assertTrue(selenium.isTextPresent(\"24 Hour Availability\"));\n        selenium.click(\"link=Log out\");\n        selenium.waitForPageToLoad(\"30000\");\n    }","commit_id":"09dfb964c5824dca11025386d57eb98754a1e30d","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n\tpublic void testEventsPage() throws Exception {\n\t\tverifyTrue(selenium.isTextPresent(\"Event Queries\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Outstanding and acknowledged events\"));\n\t\tverifyTrue(selenium.isTextPresent(\"hit [Enter]\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Event ID:\"));\n\t\tverifyEquals(\"Get details\", selenium.getValue(\"css=input[type=submit]\"));\n\t\tselenium.click(\"link=All events\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\"Ack\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Event(s) outstanding\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Event Text\"));\n\t\tverifyTrue(selenium.isElementPresent(\"link=Interface\"));\n\t\tselenium.click(\"css=a[title=Events System Page]\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Advanced Search\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\"Advanced Event Search\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Searching Instructions\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Advanced Event Search\"));\n\t\tverifyTrue(selenium.isElementPresent(\"name=usebeforetime\"));\n\t\tverifyTrue(selenium.isElementPresent(\"name=limit\"));\n\t\tverifyTrue(selenium.isElementPresent(\"css=input[type=submit]\"));\n\t\tselenium.click(\"//div[@id='content']/div/h2/a[2]\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Log out\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":53353,"modified_method":"@Test\n    public void testEventsPage() throws Exception {\n        assertTrue(selenium.isTextPresent(\"Event Queries\"));\n        assertTrue(selenium.isTextPresent(\"Outstanding and acknowledged events\"));\n        assertTrue(selenium.isTextPresent(\"hit [Enter]\"));\n        assertTrue(selenium.isTextPresent(\"Event ID:\"));\n        assertEquals(\"Get details\", selenium.getValue(\"css=input[type=submit]\"));\n        selenium.click(\"link=All events\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isTextPresent(\"Ack\"));\n        assertTrue(selenium.isTextPresent(\"Event(s) outstanding\"));\n        assertTrue(selenium.isTextPresent(\"Event Text\"));\n        assertTrue(selenium.isElementPresent(\"link=Interface\"));\n        selenium.click(\"css=a[title=Events System Page]\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=Advanced Search\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isTextPresent(\"Advanced Event Search\"));\n        assertTrue(selenium.isTextPresent(\"Searching Instructions\"));\n        assertTrue(selenium.isTextPresent(\"Advanced Event Search\"));\n        assertTrue(selenium.isElementPresent(\"name=usebeforetime\"));\n        assertTrue(selenium.isElementPresent(\"name=limit\"));\n        assertTrue(selenium.isElementPresent(\"css=input[type=submit]\"));\n        selenium.click(\"//div[@id='content']/div/h2/a[2]\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=Log out\");\n        selenium.waitForPageToLoad(\"30000\");\n    }","commit_id":"09dfb964c5824dca11025386d57eb98754a1e30d","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n\tpublic void testInstrumentationLogReaderPage() throws Exception {\n\t\tselenium.type(\"name=searchString\", \"test\");\n\t\tselenium.click(\"css=input[type=submit]\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyEquals(\"test\", selenium.getValue(\"name=searchString\"));\n\t\tselenium.click(\"css=form > input[type=submit]\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyEquals(\"\", selenium.getValue(\"name=searchString\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Service\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Threads Used:\"));\n\t\tverifyTrue(selenium.isElementPresent(\"link=Collections\"));\n\t\tverifyTrue(selenium.isElementPresent(\"link=Average Collection Time\"));\n\t\tverifyTrue(selenium.isElementPresent(\"link=Unsuccessful Percentage\"));\n\t\tverifyTrue(selenium.isElementPresent(\"link=Average Persistence Time\"));\n\t\tselenium.click(\"link=Collections\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isElementPresent(\"link=Collections ^\"));\n\t\tselenium.click(\"link=Collections ^\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isElementPresent(\"link=Collections v\"));\n\t\tselenium.click(\"link=Average Successful Collection Time\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isElementPresent(\"link=Average Successful Collection Time ^\"));\n\t\tselenium.click(\"link=Average Successful Collection Time ^\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isElementPresent(\"link=Average Successful Collection Time v\"));\n\t\tselenium.click(\"link=Average Persistence Time\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isElementPresent(\"link=Average Persistence Time ^\"));\n\t\tselenium.click(\"link=Average Persistence Time ^\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isElementPresent(\"link=Average Persistence Time v\"));\n\t\tselenium.click(\"link=Log out\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":53354,"modified_method":"@Test\n    public void testInstrumentationLogReaderPage() throws Exception {\n        selenium.type(\"name=searchString\", \"test\");\n        selenium.click(\"css=input[type=submit]\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertEquals(\"test\", selenium.getValue(\"name=searchString\"));\n        selenium.click(\"css=form > input[type=submit]\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertEquals(\"\", selenium.getValue(\"name=searchString\"));\n        assertTrue(selenium.isTextPresent(\"Service\"));\n        assertTrue(selenium.isTextPresent(\"Threads Used:\"));\n        assertTrue(selenium.isElementPresent(\"link=Collections\"));\n        assertTrue(selenium.isElementPresent(\"link=Average Collection Time\"));\n        assertTrue(selenium.isElementPresent(\"link=Unsuccessful Percentage\"));\n        assertTrue(selenium.isElementPresent(\"link=Average Persistence Time\"));\n        selenium.click(\"link=Collections\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isElementPresent(\"link=Collections ^\"));\n        selenium.click(\"link=Collections ^\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isElementPresent(\"link=Collections v\"));\n        selenium.click(\"link=Average Successful Collection Time\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isElementPresent(\"link=Average Successful Collection Time ^\"));\n        selenium.click(\"link=Average Successful Collection Time ^\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isElementPresent(\"link=Average Successful Collection Time v\"));\n        selenium.click(\"link=Average Persistence Time\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isElementPresent(\"link=Average Persistence Time ^\"));\n        selenium.click(\"link=Average Persistence Time ^\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isElementPresent(\"link=Average Persistence Time v\"));\n        selenium.click(\"link=Log out\");\n        selenium.waitForPageToLoad(\"30000\");\n    }","commit_id":"09dfb964c5824dca11025386d57eb98754a1e30d","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n\tpublic void testMapPage() throws Exception {\n\t\tverifyTrue(selenium.isElementPresent(\"id=mainSvgDocument\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Network Topology Maps\"));\n\t\tselenium.click(\"link=Log out\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":53355,"modified_method":"@Test\n    public void testMapPage() throws Exception {\n        assertTrue(selenium.isElementPresent(\"id=mainSvgDocument\"));\n        assertTrue(selenium.isTextPresent(\"Network Topology Maps\"));\n        selenium.click(\"link=Log out\");\n        selenium.waitForPageToLoad(\"30000\");\n    }","commit_id":"09dfb964c5824dca11025386d57eb98754a1e30d","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n\tpublic void testNotificationsPage() throws Exception {\n\t\tverifyTrue(selenium.isTextPresent(\"Notification queries\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Outstanding and Acknowledged Notices\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Notification Escalation\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Check your outstanding notices\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Once a notice is sent\"));\n\t\tverifyTrue(selenium.isTextPresent(\"User:\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Notice:\"));\n\t\tverifyTrue(selenium.isElementPresent(\"css=input[type=submit]\"));\n\t\tverifyTrue(selenium.isElementPresent(\"//input[@value='Get details']\"));\n\t\tverifyTrue(selenium.isElementPresent(\"link=Your outstanding notices\"));\n\t\tverifyTrue(selenium.isElementPresent(\"link=All outstanding notices\"));\n\t\tverifyTrue(selenium.isElementPresent(\"link=All acknowledged notices\"));\n\t\tselenium.click(\"link=Your outstanding notices\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\"admin was notified\"));\n\t\tverifyTrue(selenium.isElementPresent(\"link=[Remove all]\"));\n\t\tverifyTrue(selenium.isElementPresent(\"link=Sent Time\"));\n\t\tverifyTrue(selenium.isElementPresent(\"//input[@value='Acknowledge Notices']\"));\n\t\tselenium.click(\"link=Notices\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=All outstanding notices\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\"only outstanding notices\"));\n\t\tverifyTrue(selenium.isElementPresent(\"link=Respond Time\"));\n\t\tverifyTrue(selenium.isElementPresent(\"css=input[type=button]\"));\n\t\tselenium.click(\"link=Notices\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=All acknowledged notices\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\"only acknowledged notices\"));\n\t\tverifyTrue(selenium.isElementPresent(\"link=Node\"));\n\t\tverifyTrue(selenium.isElementPresent(\"css=input[type=submit]\"));\n\t\tselenium.click(\"link=Notices\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Log out\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":53356,"modified_method":"@Test\n    public void testNotificationsPage() throws Exception {\n        assertTrue(selenium.isTextPresent(\"Notification queries\"));\n        assertTrue(selenium.isTextPresent(\"Outstanding and Acknowledged Notices\"));\n        assertTrue(selenium.isTextPresent(\"Notification Escalation\"));\n        assertTrue(selenium.isTextPresent(\"Check your outstanding notices\"));\n        assertTrue(selenium.isTextPresent(\"Once a notice is sent\"));\n        assertTrue(selenium.isTextPresent(\"User:\"));\n        assertTrue(selenium.isTextPresent(\"Notice:\"));\n        assertTrue(selenium.isElementPresent(\"css=input[type=submit]\"));\n        assertTrue(selenium.isElementPresent(\"//input[@value='Get details']\"));\n        assertTrue(selenium.isElementPresent(\"link=Your outstanding notices\"));\n        assertTrue(selenium.isElementPresent(\"link=All outstanding notices\"));\n        assertTrue(selenium.isElementPresent(\"link=All acknowledged notices\"));\n        selenium.click(\"link=Your outstanding notices\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isTextPresent(\"admin was notified\"));\n        assertTrue(selenium.isElementPresent(\"link=[Remove all]\"));\n        assertTrue(selenium.isElementPresent(\"link=Sent Time\"));\n        assertTrue(selenium.isElementPresent(\"//input[@value='Acknowledge Notices']\"));\n        selenium.click(\"link=Notices\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=All outstanding notices\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isTextPresent(\"only outstanding notices\"));\n        assertTrue(selenium.isElementPresent(\"link=Respond Time\"));\n        assertTrue(selenium.isElementPresent(\"css=input[type=button]\"));\n        selenium.click(\"link=Notices\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=All acknowledged notices\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isTextPresent(\"only acknowledged notices\"));\n        assertTrue(selenium.isElementPresent(\"link=Node\"));\n        assertTrue(selenium.isElementPresent(\"css=input[type=submit]\"));\n        selenium.click(\"link=Notices\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=Log out\");\n        selenium.waitForPageToLoad(\"30000\");\n    }","commit_id":"09dfb964c5824dca11025386d57eb98754a1e30d","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n\tpublic void testOutagePage() throws Exception {\n\t\tverifyTrue(selenium.isTextPresent(\"Outage Menu\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Outages and Service Level Availability\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Outage ID\"));\n\t\tverifyTrue(selenium.isTextPresent(\"create notifications\"));\n\t\tverifyEquals(\"Get details\", selenium.getValue(\"css=input[type=submit]\"));\n\t\tverifyTrue(selenium.isElementPresent(\"link=Current outages\"));\n\t\tverifyTrue(selenium.isElementPresent(\"link=All outages\"));\n\t\tselenium.click(\"link=Current outages\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isElementPresent(\"name=outtype\"));\n\t\tverifyTrue(selenium.isElementPresent(\"css=input[type=submit]\"));\n\t\tverifyTrue(selenium.isElementPresent(\"link=Interface\"));\n\t\tselenium.click(\"css=a[title=Outages System Page]\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=All outages\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isElementPresent(\"name=outtype\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Current Resolved Both Current & Resolved\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Interface\"));\n\t\tselenium.click(\"css=a[title=Outages System Page]\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"css=input[type=submit]\");\n\t\tassertEquals(\"Please enter a valid outage ID.\", selenium.getAlert());\n\t\tselenium.click(\"link=Log out\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":53357,"modified_method":"@Test\n    public void testOutagePage() throws Exception {\n        assertTrue(selenium.isTextPresent(\"Outage Menu\"));\n        assertTrue(selenium.isTextPresent(\"Outages and Service Level Availability\"));\n        assertTrue(selenium.isTextPresent(\"Outage ID\"));\n        assertTrue(selenium.isTextPresent(\"create notifications\"));\n        assertEquals(\"Get details\", selenium.getValue(\"css=input[type=submit]\"));\n        assertTrue(selenium.isElementPresent(\"link=Current outages\"));\n        assertTrue(selenium.isElementPresent(\"link=All outages\"));\n        selenium.click(\"link=Current outages\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isElementPresent(\"name=outtype\"));\n        assertTrue(selenium.isElementPresent(\"css=input[type=submit]\"));\n        assertTrue(selenium.isElementPresent(\"link=Interface\"));\n        selenium.click(\"css=a[title=Outages System Page]\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=All outages\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isElementPresent(\"name=outtype\"));\n        assertTrue(selenium.isTextPresent(\"Current Resolved Both Current & Resolved\"));\n        assertTrue(selenium.isTextPresent(\"Interface\"));\n        selenium.click(\"css=a[title=Outages System Page]\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"css=input[type=submit]\");\n        assertEquals(\"Please enter a valid outage ID.\", selenium.getAlert());\n        selenium.click(\"link=Log out\");\n        selenium.waitForPageToLoad(\"30000\");\n    }","commit_id":"09dfb964c5824dca11025386d57eb98754a1e30d","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n\tpublic void testPathOutagesPage() throws Exception {\n\t\tverifyTrue(selenium.isTextPresent(\"All path outages\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Critical Path IP\"));\n\t\tverifyTrue(selenium.isTextPresent(\"# of Nodes\"));\n\t\tselenium.click(\"link=Log out\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":53358,"modified_method":"@Test\n    public void testPathOutagesPage() throws Exception {\n        assertTrue(selenium.isTextPresent(\"All path outages\"));\n        assertTrue(selenium.isTextPresent(\"Critical Path IP\"));\n        assertTrue(selenium.isTextPresent(\"# of Nodes\"));\n        selenium.click(\"link=Log out\");\n        selenium.waitForPageToLoad(\"30000\");\n    }","commit_id":"09dfb964c5824dca11025386d57eb98754a1e30d","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n\tpublic void testReportsPage() throws Exception {\n\t\tverifyTrue(selenium.isTextPresent(\"Reports\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Descriptions\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Key SNMP Customized\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Name contains\"));\n\t\tverifyTrue(selenium.isElementPresent(\"css=input[type=submit]\"));\n\t\tverifyTrue(selenium.isElementPresent(\"//input[@value='KSC Reports']\"));\n\t\tverifyTrue(selenium.isElementPresent(\"link=Resource Graphs\"));\n\t\tverifyTrue(selenium.isElementPresent(\"link=KSC Performance, Nodes, Domains\"));\n\t\tverifyTrue(selenium.isElementPresent(\"link=Database Reports\"));\n\t\tverifyTrue(selenium.isElementPresent(\"link=Statistics Reports\"));\n\t\tselenium.click(\"link=Resource Graphs\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\"Standard Resource\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Performance Reports\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Custom Resource\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Performance Reports\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Network Performance Data\"));\n\t\tverifyTrue(selenium.isTextPresent(\"The Standard Performance\"));\n\t\tverifyTrue(selenium.isElementPresent(\"id=ext-gen110\"));\n\t\tselenium.click(\"//div[@id='content']/div/h2/a[2]\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=KSC Performance, Nodes, Domains\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isElementPresent(\"id=ext-gen189\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Customized Reports\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Node SNMP Interface Reports\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Descriptions\"));\n\t\tselenium.click(\"//div[@id='content']/div/h2/a[2]\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Database Reports\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\"Database Reports\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Descriptions\"));\n\t\tverifyTrue(selenium.isTextPresent(\"You may run or schedule\"));\n\t\tverifyTrue(selenium.isElementPresent(\"link=Batch reports\"));\n\t\tverifyTrue(selenium.isElementPresent(\"link=Online reports\"));\n\t\tverifyTrue(selenium.isElementPresent(\"//div[@id='content']/div[2]/div/ul/li[3]\"));\n\t\tverifyTrue(selenium.isElementPresent(\"link=Manage the batch report schedule\"));\n\t\tselenium.click(\"//div[@id='content']/div/h2/a[2]\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Statistics Reports\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\"Statistics Report List\"));\n\t\tverifyTrue(selenium.isElementPresent(\"css=img[alt=Filter]\"));\n\t\tverifyTrue(selenium.isElementPresent(\"css=img[alt=Clear]\"));\n\t\tverifyTrue(selenium.isElementPresent(\"name=reportList_f_duration\"));\n\t\tselenium.click(\"link=Log out\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"css=strong\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"id=input_j_username\", \"admin\");\n\t\tselenium.type(\"name=j_password\", \"admin\");\n\t\tselenium.click(\"name=Login\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Log out\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"css=strong\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":53359,"modified_method":"@Test\n    public void testReportsPage() throws Exception {\n        assertTrue(selenium.isTextPresent(\"Reports\"));\n        assertTrue(selenium.isTextPresent(\"Descriptions\"));\n        assertTrue(selenium.isTextPresent(\"Key SNMP Customized\"));\n        assertTrue(selenium.isTextPresent(\"Name contains\"));\n        assertTrue(selenium.isElementPresent(\"css=input[type=submit]\"));\n        assertTrue(selenium.isElementPresent(\"//input[@value='KSC Reports']\"));\n        assertTrue(selenium.isElementPresent(\"link=Resource Graphs\"));\n        assertTrue(selenium.isElementPresent(\"link=KSC Performance, Nodes, Domains\"));\n        assertTrue(selenium.isElementPresent(\"link=Database Reports\"));\n        assertTrue(selenium.isElementPresent(\"link=Statistics Reports\"));\n        selenium.click(\"link=Resource Graphs\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isTextPresent(\"Standard Resource\"));\n        assertTrue(selenium.isTextPresent(\"Performance Reports\"));\n        assertTrue(selenium.isTextPresent(\"Custom Resource\"));\n        assertTrue(selenium.isTextPresent(\"Performance Reports\"));\n        assertTrue(selenium.isTextPresent(\"Network Performance Data\"));\n        assertTrue(selenium.isTextPresent(\"The Standard Performance\"));\n        assertTrue(selenium.isElementPresent(\"id=ext-gen110\"));\n        selenium.click(\"//div[@id='content']/div/h2/a[2]\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=KSC Performance, Nodes, Domains\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isElementPresent(\"id=ext-gen189\"));\n        assertTrue(selenium.isTextPresent(\"Customized Reports\"));\n        assertTrue(selenium.isTextPresent(\"Node SNMP Interface Reports\"));\n        assertTrue(selenium.isTextPresent(\"Descriptions\"));\n        selenium.click(\"//div[@id='content']/div/h2/a[2]\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=Database Reports\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isTextPresent(\"Database Reports\"));\n        assertTrue(selenium.isTextPresent(\"Descriptions\"));\n        assertTrue(selenium.isTextPresent(\"You may run or schedule\"));\n        assertTrue(selenium.isElementPresent(\"link=Batch reports\"));\n        assertTrue(selenium.isElementPresent(\"link=Online reports\"));\n        assertTrue(selenium.isElementPresent(\"//div[@id='content']/div[2]/div/ul/li[3]\"));\n        assertTrue(selenium.isElementPresent(\"link=Manage the batch report schedule\"));\n        selenium.click(\"//div[@id='content']/div/h2/a[2]\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=Statistics Reports\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isTextPresent(\"Statistics Report List\"));\n        assertTrue(selenium.isElementPresent(\"css=img[alt=Filter]\"));\n        assertTrue(selenium.isElementPresent(\"css=img[alt=Clear]\"));\n        assertTrue(selenium.isElementPresent(\"name=reportList_f_duration\"));\n        selenium.click(\"link=Log out\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"css=strong\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.type(\"id=input_j_username\", \"admin\");\n        selenium.type(\"name=j_password\", \"admin\");\n        selenium.click(\"name=Login\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=Log out\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"css=strong\");\n        selenium.waitForPageToLoad(\"30000\");\n    }","commit_id":"09dfb964c5824dca11025386d57eb98754a1e30d","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n\tpublic void testSearchPage() throws Exception {\n\t\tverifyTrue(selenium.isTextPresent(\"Search for Nodes\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Search Asset Information\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Search Options\"));\n\t\tverifyTrue(selenium.isTextPresent(\"MAC Address\"));\n\t\tverifyTrue(selenium.isElementPresent(\"link=All nodes\"));\n\t\tverifyTrue(selenium.isElementPresent(\"link=All nodes and their interfaces\"));\n\t\tverifyTrue(selenium.isElementPresent(\"link=All nodes with asset info\"));\n\t\tverifyTrue(selenium.isElementPresent(\"css=input[type=submit]\"));\n\t\tverifyEquals(\"Search\", selenium.getValue(\"css=input[type=submit]\"));\n\t\tselenium.click(\"link=All nodes\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\"Nodes\"));\n\t\tverifyTrue(selenium.isElementPresent(\"link=Show interfaces\"));\n\t\tselenium.click(\"//div[@id='content']/div/h2/a[2]\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=All nodes and their interfaces\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\"Nodes and their interfaces\"));\n\t\tverifyTrue(selenium.isElementPresent(\"link=Hide interfaces\"));\n\t\tselenium.click(\"//div[@id='content']/div/h2/a[2]\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=All nodes with asset info\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\"Assets\"));\n\t\tselenium.click(\"link=Log out\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":53360,"modified_method":"@Test\n    public void testSearchPage() throws Exception {\n        assertTrue(selenium.isTextPresent(\"Search for Nodes\"));\n        assertTrue(selenium.isTextPresent(\"Search Asset Information\"));\n        assertTrue(selenium.isTextPresent(\"Search Options\"));\n        assertTrue(selenium.isTextPresent(\"MAC Address\"));\n        assertTrue(selenium.isElementPresent(\"link=All nodes\"));\n        assertTrue(selenium.isElementPresent(\"link=All nodes and their interfaces\"));\n        assertTrue(selenium.isElementPresent(\"link=All nodes with asset info\"));\n        assertTrue(selenium.isElementPresent(\"css=input[type=submit]\"));\n        assertEquals(\"Search\", selenium.getValue(\"css=input[type=submit]\"));\n        selenium.click(\"link=All nodes\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isTextPresent(\"Nodes\"));\n        assertTrue(selenium.isElementPresent(\"link=Show interfaces\"));\n        selenium.click(\"//div[@id='content']/div/h2/a[2]\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=All nodes and their interfaces\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isTextPresent(\"Nodes and their interfaces\"));\n        assertTrue(selenium.isElementPresent(\"link=Hide interfaces\"));\n        selenium.click(\"//div[@id='content']/div/h2/a[2]\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=All nodes with asset info\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isTextPresent(\"Assets\"));\n        selenium.click(\"link=Log out\");\n        selenium.waitForPageToLoad(\"30000\");\n    }","commit_id":"09dfb964c5824dca11025386d57eb98754a1e30d","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    public void testAllTopLevelLinks () {\n        selenium.click(\"link=Node List\");\n        selenium.waitForPageToLoad(\"30000\");\n        verifyTrue(selenium.isTextPresent(\"Nodes\"));\n        verifyTrue(selenium.isElementPresent(\"link=Show interfaces\"));\n        selenium.click(\"link=Search\");\n        selenium.waitForPageToLoad(\"30000\");\n        verifyTrue(selenium.isTextPresent(\"Search for Nodes\"));\n        verifyTrue(selenium.isTextPresent(\"Search Asset Information\"));\n        verifyTrue(selenium.isTextPresent(\"Search Options\"));\n        verifyTrue(selenium.isElementPresent(\"link=All nodes with asset info\"));\n        selenium.click(\"link=Outages\");\n        selenium.waitForPageToLoad(\"30000\");\n        verifyTrue(selenium.isElementPresent(\"link=Current outages\"));\n        verifyTrue(selenium.isTextPresent(\"Outages and Service Level Availability\"));\n        verifyTrue(selenium.isTextPresent(\"All path outages\"));\n        verifyTrue(selenium.isTextPresent(\"Critical Path Service\"));\n        verifyTrue(selenium.isTextPresent(\"Alarms\"));\n        verifyTrue(selenium.isTextPresent(\"Resource Graphs\"));\n        verifyTrue(selenium.isTextPresent(\"Event Queries\"));\n        verifyTrue(selenium.isTextPresent(\"Outstanding and acknowledged events\"));\n        verifyTrue(selenium.isTextPresent(\"Alarm Queries\"));\n        verifyTrue(selenium.isTextPresent(\"Outstanding and acknowledged alarms\"));\n        verifyTrue(selenium.isTextPresent(\"Notification queries\"));\n        verifyTrue(selenium.isTextPresent(\"Outstanding and Acknowledged Notices\"));\n        verifyTrue(selenium.isTextPresent(\"Notification Escalation\"));\n        verifyTrue(selenium.isTextPresent(\"Search Asset Information\"));\n        verifyTrue(selenium.isTextPresent(\"Assets with asset numbers\"));\n        verifyTrue(selenium.isTextPresent(\"Assets Inventory\"));\n        verifyTrue(selenium.isTextPresent(\"Reports\"));\n        verifyTrue(selenium.isTextPresent(\"Descriptions\"));\n        verifyTrue(selenium.isTextPresent(\"Nodes Down\"));\n        verifyTrue(selenium.isTextPresent(\"TEST\"));\n        verifyTrue(selenium.isTextPresent(\"Surveillance View: default\"));\n        verifyTrue(selenium.isTextPresent(\"Network Topology Maps\"));\n        verifyTrue(selenium.isTextPresent(\"Node Quick-Add\"));\n        verifyTrue(selenium.isTextPresent(\"will override\"));\n        verifyTrue(selenium.isTextPresent(\"OpenNMS System\"));\n        verifyTrue(selenium.isTextPresent(\"Operations\"));\n        verifyTrue(selenium.isTextPresent(\"Nodes\"));\n        verifyTrue(selenium.isTextPresent(\"Distributed Monitoring\"));\n        verifyTrue(selenium.isTextPresent(\"Descriptions\"));\n        verifyTrue(selenium.isTextPresent(\"Commercial Support\"));\n        verifyTrue(selenium.isTextPresent(\"About\"));\n        verifyTrue(selenium.isTextPresent(\"Other Support Options\"));\n    }","id":53361,"modified_method":"@Test\n    public void testAllTopLevelLinks () throws InterruptedException {\n        selenium.click(\"link=Node List\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isTextPresent(\"Nodes\"));\n        assertTrue(selenium.isElementPresent(\"link=Show interfaces\"));\n        selenium.click(\"link=Search\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isTextPresent(\"Search for Nodes\"));\n        assertTrue(selenium.isTextPresent(\"Search Asset Information\"));\n        assertTrue(selenium.isTextPresent(\"Search Options\"));\n        assertTrue(selenium.isElementPresent(\"link=All nodes with asset info\"));\n        selenium.click(\"link=Outages\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isElementPresent(\"link=Current outages\"));\n        assertTrue(selenium.isTextPresent(\"Outages and Service Level Availability\"));\n        assertTrue(selenium.isTextPresent(\"Outage Menu\"));\n        selenium.click(\"link=Path Outages\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isTextPresent(\"All path outages\"));\n        assertTrue(selenium.isTextPresent(\"Critical Path Service\"));\n        selenium.click(\"link=Dashboard\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isTextPresent(\"Node Status\"));\n        assertTrue(selenium.isTextPresent(\"24 Hour Availability\"));\n        selenium.click(\"link=Alarms\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isTextPresent(\"Alarm Queries\"));\n        assertTrue(selenium.isTextPresent(\"Outstanding and acknowledged alarms\"));\n        assertTrue(selenium.isTextPresent(\"Alarm ID:\"));\n        selenium.click(\"link=Events\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isTextPresent(\"Event Queries\"));\n        assertTrue(selenium.isTextPresent(\"Outstanding and acknowledged events\"));     \n        selenium.click(\"link=Notifications\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isTextPresent(\"Notification queries\"));\n        assertTrue(selenium.isTextPresent(\"Outstanding and Acknowledged Notices\"));\n        assertTrue(selenium.isTextPresent(\"Notification Escalation\"));\n        selenium.click(\"link=Assets\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isTextPresent(\"Search Asset Information\"));\n        assertTrue(selenium.isTextPresent(\"Assets with asset numbers\"));\n        assertTrue(selenium.isTextPresent(\"Assets Inventory\"));\n        selenium.click(\"link=Reports\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isTextPresent(\"Reports\"));\n        assertTrue(selenium.isTextPresent(\"Descriptions\"));\n        selenium.click(\"link=Charts\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=Surveillance\");\n        for (int second = 0 ;;  second++) {\n            if (second >= 60){\n                fail(\"timeout waiting for surveillance\");\n            }\n            if (selenium.isTextPresent(\"Routers\") && selenium.isTextPresent(\"Surveillance View: default\")) {\n                break;\n            }\n            Thread.sleep(1000);\n        }\n        assertTrue(selenium.isTextPresent(\"Routers\"));\n        assertTrue(selenium.isTextPresent(\"Surveillance View: default\"));\n        selenium.click(\"link=Distributed Map\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isElementPresent(\"link=Applications\"));\n        selenium.goBack();\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=Map\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isTextPresent(\"Network Topology Maps\"));\n        selenium.click(\"link=Add Node\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isTextPresent(\"Node Quick-Add\"));\n        assertTrue(selenium.isTextPresent(\"CLI Authentication Parameters\"));\n        selenium.click(\"link=Admin\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isTextPresent(\"OpenNMS System\"));\n        assertTrue(selenium.isTextPresent(\"Operations\"));\n        assertTrue(selenium.isTextPresent(\"Nodes\"));\n        assertTrue(selenium.isTextPresent(\"Distributed Monitoring\"));\n        assertTrue(selenium.isTextPresent(\"Descriptions\"));\n    }","commit_id":"09dfb964c5824dca11025386d57eb98754a1e30d","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test  \n    public void testCreateGroup() {\n        selenium.click(\"link=Admin\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=Configure Users, Groups and Roles\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=Configure Groups\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=Add new group\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.type(\"id=groupName\", \"SmokeTestGroup\");\n        selenium.type(\"id=groupComment\", \"Test\");\n        selenium.click(\"id=doOK\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"name=finish\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"//div[@id='content']/form/table/tbody/tr[4]/td[2]/a/img\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.addSelection(\"name=availableUsers\", \"label=SmokeTestUser\");\n        selenium.click(\"xpath=/html/body/div[2]/form/table[2]/tbody/tr[2]/td/table/tbody/tr[2]/td/p/input[2]\");\n        selenium.click(\"name=finish\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=SmokeTestGroup\");\n        selenium.waitForPageToLoad(\"30000\");\n        verifyTrue(selenium.isTextPresent(\"SmokeTestUser\"));\n    }","id":53362,"modified_method":"@Test  \n    public void testCreateGroup() {\n        selenium.click(\"link=Admin\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=Configure Users, Groups and Roles\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=Configure Groups\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=Add new group\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.type(\"id=groupName\", \"SmokeTestGroup\");\n        selenium.type(\"id=groupComment\", \"Test\");\n        selenium.click(\"id=doOK\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"name=finish\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"//div[@id='content']/form/table/tbody/tr[4]/td[2]/a/img\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.addSelection(\"name=availableUsers\", \"label=SmokeTestUser\");\n        selenium.click(\"xpath=/html/body/div[2]/form/table[2]/tbody/tr[2]/td/table/tbody/tr[2]/td/p/input[2]\");\n        selenium.click(\"name=finish\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=SmokeTestGroup\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isTextPresent(\"SmokeTestUser\"));\n    }","commit_id":"09dfb964c5824dca11025386d57eb98754a1e30d","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    public void testProvisioningGroupWasCreated() throws InterruptedException {\n        selenium.click(\"link=Node List\");\n        selenium.waitForPageToLoad(\"30000\");\n        for (int second = 0 ;;  second++) {\n            if (second >= 60){\n                fail(\"Timeout in testProvsioningGroupWasCreated(). Failed after: \"+ second + \" seconds\" + \"\\nhtml source: \" + \n                     selenium.getHtmlSource() + \"\\n\" +\n                     \t\t\"Title: \" + selenium.getTitle() + \"\\nurl: \" + selenium.getLocation());\n            }\n            if (selenium.isElementPresent(\"link=localNode\")) {\n                break;\n            }\n            Thread.sleep(1000);\n            selenium.refresh();\n        }\n        selenium.click(\"link=localNode\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=HTTP-8980\");\n        selenium.waitForPageToLoad(\"30000\");\n        verifyTrue(selenium.isTextPresent(\"Polling Status \tManaged\"));\n        verifyTrue(selenium.isTextPresent(\"Interface \t0000:0000:0000:0000:0000:0000:0000:0001\"));\n        verifyTrue(selenium.isTextPresent(\"Node \tlocalNode\"));\n        selenium.click(\"link=Admin\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=Manage Provisioning Groups\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=Edit\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"css=li > a > img\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"css=input[type=button]\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"//input[@value='Synchronize']\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"css=span > input[type=button]\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=Log out\");\n        selenium.waitForPageToLoad(\"30000\");\n    }","id":53363,"modified_method":"@Test\n    public void testProvisioningGroupWasCreated() throws InterruptedException {\n        selenium.click(\"link=Node List\");\n        selenium.waitForPageToLoad(\"30000\");\n        for (int second = 0 ;;  second++) {\n            if (second >= 60){\n                fail(\"Timeout in testProvsioningGroupWasCreated(). Failed after: \"+ second + \" seconds\" + \"\\nhtml source: \" + \n                     selenium.getHtmlSource() + \"\\n\" +\n                     \"Title: \" + selenium.getTitle() + \"\\nurl: \" + selenium.getLocation());\n            }\n            if (selenium.isElementPresent(\"link=localNode\")) {\n                break;\n            }\n            Thread.sleep(1000);\n            selenium.refresh();\n        }\n        selenium.click(\"link=localNode\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=HTTP-8980\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isTextPresent(\"Managed\"));\n        assertTrue(selenium.isTextPresent(\"0000:0000:0000:0000:0000:0000:0000:0001\"));\n        assertTrue(selenium.isTextPresent(\"localNode\"));\n        selenium.click(\"link=Admin\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=Manage Provisioning Groups\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"//input[@value='Delete Nodes']\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"//input[@value='Synchronize']\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"//input[@value='Delete Group']\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=Log out\");\n        selenium.waitForPageToLoad(\"30000\");\n    }","commit_id":"09dfb964c5824dca11025386d57eb98754a1e30d","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n    public void testCreateUser() { \n        selenium.click(\"link=Admin\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=Configure Users, Groups and Roles\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=Configure Users\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=Add New User\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.type(\"id=userID\", \"SmokeTestUser\");\n        selenium.type(\"id=pass1\", \"SmokeTestPassword\");\n        selenium.type(\"id=pass2\", \"SmokeTestPassword\");\n        selenium.click(\"id=doOK\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"id=saveUserButton\");\n        selenium.waitForPageToLoad(\"30000\");\n        verifyTrue(selenium.isElementPresent(\"id=users(SmokeTestUser).doDetails\"));\n        selenium.click(\"link=Log out\");\n        selenium.waitForPageToLoad(\"30000\");\n    }","id":53364,"modified_method":"@Test\n    public void testCreateUser() { \n        selenium.click(\"link=Admin\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=Configure Users, Groups and Roles\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=Configure Users\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"link=Add New User\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.type(\"id=userID\", \"SmokeTestUser\");\n        selenium.type(\"id=pass1\", \"SmokeTestPassword\");\n        selenium.type(\"id=pass2\", \"SmokeTestPassword\");\n        selenium.click(\"id=doOK\");\n        selenium.waitForPageToLoad(\"30000\");\n        selenium.click(\"id=saveUserButton\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isElementPresent(\"id=users(SmokeTestUser).doDetails\"));\n        selenium.click(\"link=Log out\");\n        selenium.waitForPageToLoad(\"30000\");\n    }","commit_id":"09dfb964c5824dca11025386d57eb98754a1e30d","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n\tpublic void testAllLinksArePresent() {\t\t\n\t\tverifyTrue(selenium.isElementPresent(\"link=About the OpenNMS Web Console\"));\n\t\tverifyTrue(selenium.isElementPresent(\"link=Release Notes\"));\n\t\tverifyTrue(selenium.isElementPresent(\"link=Online Documentation\"));\n\t\tverifyTrue(selenium.isElementPresent(\"link=Generate a System Report\"));\n\t\tverifyTrue(selenium.isElementPresent(\"link=Open a Bug or Enhancement Request\"));\n\t\tverifyTrue(selenium.isElementPresent(\"link=Chat with Developers on IRC\"));\n\t\tverifyTrue(selenium.isElementPresent(\"link=the OpenNMS.com support page\"));\n\t}","id":53365,"modified_method":"@Test\n    public void testAllLinksArePresent() {\t\t\n        assertTrue(selenium.isElementPresent(\"link=About the OpenNMS Web Console\"));\n        assertTrue(selenium.isElementPresent(\"link=Release Notes\"));\n        assertTrue(selenium.isElementPresent(\"link=Online Documentation\"));\n        assertTrue(selenium.isElementPresent(\"link=Generate a System Report\"));\n        assertTrue(selenium.isElementPresent(\"link=Open a Bug or Enhancement Request\"));\n        assertTrue(selenium.isElementPresent(\"link=Chat with Developers on IRC\"));\n        assertTrue(selenium.isElementPresent(\"link=the OpenNMS.com support page\"));\n    }","commit_id":"09dfb964c5824dca11025386d57eb98754a1e30d","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n\tpublic void testAllFormsArePresent() {\n\t\tverifyTrue(selenium.isTextPresent(\"Username:\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Password:\"));\n\t\tverifyTrue(selenium.isElementPresent(\"css=input[type=reset]\"));\n\t\tverifyEquals(\"Log In\", selenium.getValue(\"css=input[type=submit]\"));\n\t}","id":53366,"modified_method":"@Test\n    public void testAllFormsArePresent() {\n        assertTrue(selenium.isTextPresent(\"Username:\"));\n        assertTrue(selenium.isTextPresent(\"Password:\"));\n        assertTrue(selenium.isElementPresent(\"css=input[type=reset]\"));\n        assertEquals(\"Log In\", selenium.getValue(\"css=input[type=submit]\"));\n    }","commit_id":"09dfb964c5824dca11025386d57eb98754a1e30d","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n\tpublic void testAllLinks() {\n\t\tselenium.click(\"link=About the OpenNMS Web Console\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\"OpenNMS Web Console\"));\n\t\tverifyTrue(selenium.isTextPresent(\"License and Copyright\"));\n\t\tverifyTrue(selenium.isTextPresent(\"OSI Certified Open Source Software\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Version:\"));\n\t\tselenium.goBack();\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isElementPresent(\"//a[@href='http://www.opennms.org/documentation/ReleaseNotesStable.html#whats-new']\"));\n\t\tverifyTrue(selenium.isElementPresent(\"//a[@href='http://www.opennms.org/wiki/']\"));\n\t\tselenium.click(\"link=Generate a System Report\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\"Plugins\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Report Type\"));\n\t\tverifyTrue(selenium.isElementPresent(\"name=formatter\"));\n\t\tverifyEquals(\"\", selenium.getValue(\"css=input[type=submit]\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Output\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Choose which plugins to enable:\"));\n\t\tselenium.goBack();\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isElementPresent(\"//a[@href='http://issues.opennms.org/']\"));\n\t\tverifyTrue(selenium.isElementPresent(\"//a[@href='irc://irc.freenode.net/%23opennms']\"));\n                selenium.click(\"link=Log out\");\n                selenium.waitForPageToLoad(\"30000\");\n\t}","id":53367,"modified_method":"@Test\n    public void testAllLinks() {\n        selenium.click(\"link=About the OpenNMS Web Console\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isTextPresent(\"OpenNMS Web Console\"));\n        assertTrue(selenium.isTextPresent(\"License and Copyright\"));\n        assertTrue(selenium.isTextPresent(\"OSI Certified Open Source Software\"));\n        assertTrue(selenium.isTextPresent(\"Version:\"));\n        selenium.goBack();\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isElementPresent(\"//a[@href='http://www.opennms.org/documentation/ReleaseNotesStable.html#whats-new']\"));\n        assertTrue(selenium.isElementPresent(\"//a[@href='http://www.opennms.org/wiki/']\"));\n        selenium.click(\"link=Generate a System Report\");\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isTextPresent(\"Plugins\"));\n        assertTrue(selenium.isTextPresent(\"Report Type\"));\n        assertTrue(selenium.isElementPresent(\"name=formatter\"));\n        assertEquals(\"\", selenium.getValue(\"css=input[type=submit]\"));\n        assertTrue(selenium.isTextPresent(\"Output\"));\n        assertTrue(selenium.isTextPresent(\"Choose which plugins to enable:\"));\n        selenium.goBack();\n        selenium.waitForPageToLoad(\"30000\");\n        assertTrue(selenium.isElementPresent(\"//a[@href='http://issues.opennms.org/']\"));\n        assertTrue(selenium.isElementPresent(\"//a[@href='irc://irc.freenode.net/%23opennms']\"));\n        selenium.click(\"link=Log out\");\n        selenium.waitForPageToLoad(\"30000\");\n    }","commit_id":"09dfb964c5824dca11025386d57eb98754a1e30d","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n\tpublic void testAllTextIsPresent() throws Exception {\n\t\tverifyTrue(selenium.isTextPresent(\"Commercial Support\"));\n\t\tverifyTrue(selenium.isTextPresent(\"About\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Other Support Options\"));\n\t}","id":53368,"modified_method":"@Test\n    public void testAllTextIsPresent() throws Exception {\n        assertTrue(selenium.isTextPresent(\"Commercial Support\"));\n        assertTrue(selenium.isTextPresent(\"About\"));\n        assertTrue(selenium.isTextPresent(\"Other Support Options\"));\n    }","commit_id":"09dfb964c5824dca11025386d57eb98754a1e30d","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Test\n\tpublic void testSurveillancePage() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) fail(\"timeout\");\n\t\t\ttry { if (selenium.isTextPresent(\"Surveillance View:\")) break; } catch (Exception e) {}\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tverifyTrue(selenium.isTextPresent(\"Routers\"));\n\t\tverifyTrue(selenium.isTextPresent(\"Nodes Down\"));\n\t\tverifyTrue(selenium.isTextPresent(\"DEV\"));\n\t\tselenium.click(\"link=Log out\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":53369,"modified_method":"@Test\n    public void testSurveillancePage() throws Exception {\n        for (int second = 0;; second++) {\n            if (second >= 60) fail(\"timeout\");\n            try { if (selenium.isTextPresent(\"Surveillance View:\")) break; } catch (Exception e) {}\n            Thread.sleep(1000);\n        }\n\n        assertTrue(selenium.isTextPresent(\"Routers\"));\n        assertTrue(selenium.isTextPresent(\"Nodes Down\"));\n        assertTrue(selenium.isTextPresent(\"DEV\"));\n        selenium.click(\"link=Log out\");\n        selenium.waitForPageToLoad(\"30000\");\n    }","commit_id":"09dfb964c5824dca11025386d57eb98754a1e30d","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testAddTemporaryItem() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id=\\\"portlet-wrapper-34\\\"]/div[2]/div/div/form/div[3]/table/tbody/tr[2]/td[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@id=\\\"portlet-wrapper-34\\\"]/div[2]/div/div/form/div[3]/table/tbody/tr[2]/td[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Add Item']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Add Item']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_34_sku\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_34_sku\", RuntimeVariables.replace(\"2222\"));\n\t\tselenium.type(\"_34_name\",\n\t\t\tRuntimeVariables.replace(\"The Prodigal Project - J. H.\"));\n\t\tselenium.type(\"_34_description\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"For those on a journey, the end of which is faintly out of sight.\"));\n\t\tselenium.type(\"_34_price0\", RuntimeVariables.replace(\"$2.99\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\"The Prodigal Project\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":53370,"modified_method":"public void testAddTemporaryItem() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//td[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//td[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Add Item']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Add Item']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_34_sku\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_34_sku\", RuntimeVariables.replace(\"2222\"));\n\t\tselenium.type(\"_34_name\",\n\t\t\tRuntimeVariables.replace(\"The Prodigal Project - J. H.\"));\n\t\tselenium.type(\"_34_description\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"For those on a journey, the end of which is faintly out of sight.\"));\n\t\tselenium.type(\"_34_price0\", RuntimeVariables.replace(\"$2.99\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\"The Prodigal Project\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"aa4a4331352ef24c81670e5de57441df72967ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddVote() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Poll Question\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"document._25_fm._25_choiceId[2]\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Vote']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\"100%\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Test Poll Question\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":53371,"modified_method":"public void testAddVote() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Poll Question\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"document.forms[0].elements[4]\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Vote']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\"100%\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Test Poll Question\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"aa4a4331352ef24c81670e5de57441df72967ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteTemporaryCategory() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Delete\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isTextPresent(\"Horses\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":53372,"modified_method":"public void testDeleteTemporaryCategory() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Delete\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//td[4]/ul/li/strong/span\");\n\t\tselenium.click(RuntimeVariables.replace(\"//div[2]/ul/li[3]/nobr/a/img\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isTextPresent(\"Horses\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"aa4a4331352ef24c81670e5de57441df72967ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteTemporaryCoupon() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id=\\\"portlet-wrapper-34\\\"]/div[2]/div/div/form/div[4]/table/tbody/tr[3]/td[7]/ul/li/ul/li[2]/nobr/a/img\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\n\t\t\t\"//div[@id=\\\"portlet-wrapper-34\\\"]/div[2]/div/div/form/div[4]/table/tbody/tr[3]/td[7]/ul/li/ul/li[2]/nobr/a/img\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Your request processed successfully.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isTextPresent(\"Temporary Coupon\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":53373,"modified_method":"public void testDeleteTemporaryCoupon() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//tr[3]/td[7]/ul/li/strong/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//tr[3]/td[7]/ul/li/strong/span\");\n\t\tselenium.click(RuntimeVariables.replace(\"//li[2]/nobr/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Your request processed successfully.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isTextPresent(\"Temporary Coupon\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"aa4a4331352ef24c81670e5de57441df72967ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteTemporaryItem() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id=\\\"portlet-wrapper-34\\\"]/div[2]/div/div/form[2]/div[3]/table/tbody/tr[3]/td[5]/ul/li/ul/li[3]/nobr/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\n\t\t\t\"//div[@id=\\\"portlet-wrapper-34\\\"]/div[2]/div/div/form[2]/div[3]/table/tbody/tr[3]/td[5]/ul/li/ul/li[3]/nobr/a\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isTextPresent(\"The Prodigal Project\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":53374,"modified_method":"public void testDeleteTemporaryItem() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//tr[3]/td[5]/ul/li/strong/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//tr[3]/td[5]/ul/li/strong/span\");\n\t\tselenium.click(RuntimeVariables.replace(\"//div[2]/ul/li[3]/nobr/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isTextPresent(\"The Prodigal Project\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"aa4a4331352ef24c81670e5de57441df72967ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditCategory() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Edit\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_34_name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_34_name\", RuntimeVariables.replace(\"Music\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\"Music\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":53375,"modified_method":"public void testEditCategory() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Edit\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//td[4]/ul/li/strong/span\");\n\t\tselenium.click(RuntimeVariables.replace(\"//div[2]/ul/li[1]/nobr/a/img\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_34_name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_34_name\", RuntimeVariables.replace(\"Music\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\"Music\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"aa4a4331352ef24c81670e5de57441df72967ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditCoupon() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Edit\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_34_name\", RuntimeVariables.replace(\"Family Discount\"));\n\t\tselenium.type(\"_34_description\",\n\t\t\tRuntimeVariables.replace(\"Discount for family only!\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Save']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\"Family Discount\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":53376,"modified_method":"public void testEditCoupon() throws Exception {\n\t\tselenium.click(\"//strong/span\");\n\t\tselenium.click(RuntimeVariables.replace(\"//img[@alt='Edit']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_34_name\", RuntimeVariables.replace(\"Family Discount\"));\n\t\tselenium.type(\"_34_description\",\n\t\t\tRuntimeVariables.replace(\"Discount for family only!\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Save']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\"Family Discount\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"aa4a4331352ef24c81670e5de57441df72967ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditItem() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id=\\\"portlet-wrapper-34\\\"]/div[2]/div/div/form/div[3]/table/tbody/tr[2]/td[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@id=\\\"portlet-wrapper-34\\\"]/div[2]/div/div/form/div[3]/table/tbody/tr[2]/td[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Edit\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_34_stockQuantity\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_34_stockQuantity\", RuntimeVariables.replace(\"250\"));\n\t\tselenium.type(\"_34_price0\", RuntimeVariables.replace(\"$11.99\"));\n\t\tselenium.type(\"_34_shipping0\", RuntimeVariables.replace(\"$2.50\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\"$11.99\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@id=\\\"portlet-wrapper-34\\\"]/div[2]/div/div/form[2]/div[3]/table/tbody/tr[2]/td[2]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\"$11.99\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Configuration']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":53377,"modified_method":"public void testEditItem() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//td[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//td[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Edit\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//strong/span\");\n\t\tselenium.click(RuntimeVariables.replace(\"//img[@alt='Edit']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_34_stockQuantity\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_34_stockQuantity\", RuntimeVariables.replace(\"250\"));\n\t\tselenium.type(\"_34_price0\", RuntimeVariables.replace(\"$11.99\"));\n\t\tselenium.type(\"_34_shipping0\", RuntimeVariables.replace(\"$2.50\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\"$11.99\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@id=\\\"portlet-wrapper-34\\\"]/div[2]/div/div/form[2]/div[3]/table/tbody/tr[2]/td[2]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\"$11.99\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Configuration']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"aa4a4331352ef24c81670e5de57441df72967ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditWikiNode() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Second Wiki Test\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id=\\\"portlet-wrapper-36\\\"]/div[2]/div/div/form/div[3]/table/tbody/tr[3]/td[4]/ul/li/ul/li/nobr/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@id=\\\"portlet-wrapper-36\\\"]/div[2]/div/div/form/div[3]/table/tbody/tr[3]/td[4]/ul/li/ul/li/nobr/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_36_name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_36_name\",\n\t\t\tRuntimeVariables.replace(\"Second Edited Wiki Test\"));\n\t\tselenium.type(\"_36_description\",\n\t\t\tRuntimeVariables.replace(\"This is a second edited test wiki!\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Your request processed successfully.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Second Edited Wiki Test\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":53378,"modified_method":"public void testEditWikiNode() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Second Wiki Test\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//tr[3]/td[4]/ul/li/strong/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//tr[3]/td[4]/ul/li/strong/span\");\n\t\tselenium.click(RuntimeVariables.replace(\"//div[2]/ul/li[1]/nobr/a/img\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_36_name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_36_name\",\n\t\t\tRuntimeVariables.replace(\"Second Edited Wiki Test\"));\n\t\tselenium.type(\"_36_description\",\n\t\t\tRuntimeVariables.replace(\"This is a second edited test wiki!\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Your request processed successfully.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Second Edited Wiki Test\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"aa4a4331352ef24c81670e5de57441df72967ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testMoveItem() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id=\\\"portlet-wrapper-34\\\"]/div[2]/div/div/form/div[3]/table/tbody/tr[2]/td[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@id=\\\"portlet-wrapper-34\\\"]/div[2]/div/div/form/div[3]/table/tbody/tr[2]/td[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Edit\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//input[@value='Select']\");\n\t\tselenium.waitForPopUp(\"category\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"category\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Categories\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\n\t\t\t\"//div[@id=\\\"p_p_id_34_\\\"]/div/form/div[2]/table/tbody/tr[3]/td[4]/input\");\n\t\tselenium.selectWindow(\"null\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Video\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectWindow(\"null\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Save']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isTextPresent(\"Jona Lyons - Wheel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id=\\\"portlet-wrapper-34\\\"]/div[2]/div/div/form/div[3]/table/tbody/tr[3]/td[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@id=\\\"portlet-wrapper-34\\\"]/div[2]/div/div/form/div[3]/table/tbody/tr[3]/td[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id=\\\"portlet-wrapper-34\\\"]/div[2]/div/div/form[2]/div[3]/table/tbody/tr[2]/td[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Sounds like: The middle of a vacation.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='Select']\");\n\t\tselenium.waitForPopUp(\"category\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"category\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Categories\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Choose']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='Choose']\");\n\t\tselenium.selectWindow(\"null\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Music\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Save']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isTextPresent(\"Jona Lyons - Wheel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id=\\\"portlet-wrapper-34\\\"]/div[2]/div/div/form/div[3]/table/tbody/tr[2]/td[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@id=\\\"portlet-wrapper-34\\\"]/div[2]/div/div/form/div[3]/table/tbody/tr[2]/td[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\"Jona Lyons - Wheel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":53379,"modified_method":"public void testMoveItem() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id=\\\"portlet-wrapper-34\\\"]/div[2]/div/div/form/div[3]/table/tbody/tr[2]/td[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@id=\\\"portlet-wrapper-34\\\"]/div[2]/div/div/form/div[3]/table/tbody/tr[2]/td[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Edit\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//strong/span\");\n\t\tselenium.click(RuntimeVariables.replace(\"//nobr/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//input[@value='Select']\");\n\t\tselenium.waitForPopUp(\"category\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"category\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Categories\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Categories\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.selectWindow(\"name=category\");\n\t\tselenium.click(RuntimeVariables.replace(\"document.forms[0].elements[2]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.selectWindow(\"null\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Video\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectWindow(\"null\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Save']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isTextPresent(\"Jona Lyons - Wheel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id=\\\"portlet-wrapper-34\\\"]/div[2]/div/div/form/div[3]/table/tbody/tr[3]/td[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@id=\\\"portlet-wrapper-34\\\"]/div[2]/div/div/form/div[3]/table/tbody/tr[3]/td[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id=\\\"portlet-wrapper-34\\\"]/div[2]/div/div/form[2]/div[3]/table/tbody/tr[2]/td[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.selectWindow(\"name=null\");\n\t\tselenium.click(\"//strong/span\");\n\t\tselenium.click(RuntimeVariables.replace(\"//div[2]/ul/li[1]/nobr/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Sounds like: The middle of a vacation.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='Select']\");\n\t\tselenium.waitForPopUp(\"category\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"category\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Categories\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Categories\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Choose']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='Choose']\");\n\t\tselenium.selectWindow(\"null\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Music\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Save']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isTextPresent(\"Jona Lyons - Wheel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id=\\\"portlet-wrapper-34\\\"]/div[2]/div/div/form/div[3]/table/tbody/tr[2]/td[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@id=\\\"portlet-wrapper-34\\\"]/div[2]/div/div/form/div[3]/table/tbody/tr[2]/td[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\"Jona Lyons - Wheel\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"aa4a4331352ef24c81670e5de57441df72967ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testRestoreArchivedSetup() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Configuration']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//img[@alt='Configuration']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Archived\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Archived\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\"Test Setup\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Restore\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Restore\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":53380,"modified_method":"public void testRestoreArchivedSetup() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Configuration']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//img[@alt='Configuration']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Archived\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Archived\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\"Test Setup\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Restore\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//strong/span\");\n\t\tselenium.click(RuntimeVariables.replace(\"//nobr/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Cart\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\"$11.99 \")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"aa4a4331352ef24c81670e5de57441df72967ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public ShoppingTests() {\n\t\taddTestSuite(AddPageTest.class);\n\t\taddTestSuite(AddPortletTest.class);\n\t\taddTestSuite(AddCategoryTest.class);\n\t\taddTestSuite(EditCategoryTest.class);\n\t\taddTestSuite(AddTemporaryCategoryTest.class);\n\t\taddTestSuite(DeleteTemporaryCategoryTest.class);\n\t\taddTestSuite(AddSecondCategoryTest.class);\n\t\taddTestSuite(AddItemTest.class);\n\t\taddTestSuite(EditItemTest.class);\n\t\taddTestSuite(AddTemporaryItemTest.class);\n\t\taddTestSuite(DeleteTemporaryItemTest.class);\n\t\taddTestSuite(AddSecondItemTest.class);\n\t\taddTestSuite(SearchItemsTest.class);\n\t\taddTestSuite(MoveItemTest.class);\n\t\taddTestSuite(AddBlankItemTest.class);\n\t\taddTestSuite(AddCouponTest.class);\n\t\taddTestSuite(EditCouponTest.class);\n\t\taddTestSuite(AddBlankCouponTest.class);\n\t\taddTestSuite(AddTemporaryCouponTest.class);\n\t\taddTestSuite(DeleteTemporaryCouponTest.class);\n\t\taddTestSuite(SearchCouponsTest.class);\n\t\taddTestSuite(AddItemToCartTest.class);\n\t\taddTestSuite(ConfirmCartTest.class);\n\t\taddTestSuite(RemoveItemFromCartTest.class);\n\t\taddTestSuite(AddSecondItemToCartTest.class);\n\t\t//addTestSuite(UpdateCartQuantityTest.class);\n\t\taddTestSuite(CheckoutTest.class);\n\t\taddTestSuite(ConfirmOrderTest.class);\n\t\taddTestSuite(ViewInvoiceTest.class);\n\t\taddTestSuite(ConfigureAcceptedCCTest.class);\n\t\taddTestSuite(VerifyAcceptedCCTest.class);\n\t\taddTestSuite(ConfigureStateTaxTest.class);\n\t\taddTestSuite(AddThirdItemToCartTest.class);\n\t\taddTestSuite(VerifyStateTaxTest.class);\n\t\taddTestSuite(ConfigureFlatRateShippingCostTest.class);\n\t\taddTestSuite(VerifyFlatRateShippingCostTest.class);\n\t\taddTestSuite(ConfigurePercentageShippingTest.class);\n\t\taddTestSuite(VerifyPercentageShippingTest.class);\n\t\taddTestSuite(ConfigureFlatRateInsuranceTest.class);\n\t\taddTestSuite(VerifyFlatRateInsuranceTest.class);\n\t\taddTestSuite(ConfigurePercentageInsuranceTest.class);\n\t\taddTestSuite(VerifyPercentageInsuranceTest.class);\n\t\taddTestSuite(SaveCurrentSetupTest.class);\n\t\taddTestSuite(ChangeCurrentSetupTest.class);\n\t\t//addTestSuite(RestoreArchivedSetupTest.class);\n\t\taddTestSuite(DeletePageTest.class);\n\t}","id":53381,"modified_method":"public ShoppingTests() {\n\t\taddTestSuite(AddPageTest.class);\n\t\taddTestSuite(AddPortletTest.class);\n\t\taddTestSuite(AddCategoryTest.class);\n\t\taddTestSuite(EditCategoryTest.class);\n\t\taddTestSuite(AddTemporaryCategoryTest.class);\n\t\taddTestSuite(DeleteTemporaryCategoryTest.class);\n\t\taddTestSuite(AddSecondCategoryTest.class);\n\t\taddTestSuite(AddItemTest.class);\n\t\taddTestSuite(EditItemTest.class);\n\t\taddTestSuite(AddTemporaryItemTest.class);\n\t\taddTestSuite(DeleteTemporaryItemTest.class);\n\t\taddTestSuite(AddSecondItemTest.class);\n\t\taddTestSuite(SearchItemsTest.class);\n\t\taddTestSuite(MoveItemTest.class);\n\t\taddTestSuite(AddBlankItemTest.class);\n\t\taddTestSuite(AddCouponTest.class);\n\t\taddTestSuite(EditCouponTest.class);\n\t\taddTestSuite(AddBlankCouponTest.class);\n\t\taddTestSuite(AddTemporaryCouponTest.class);\n\t\taddTestSuite(DeleteTemporaryCouponTest.class);\n\t\taddTestSuite(SearchCouponsTest.class);\n\t\taddTestSuite(AddItemToCartTest.class);\n\t\taddTestSuite(ConfirmCartTest.class);\n\t\taddTestSuite(RemoveItemFromCartTest.class);\n\t\taddTestSuite(AddSecondItemToCartTest.class);\n\t\t//addTestSuite(UpdateCartQuantityTest.class);\n\t\taddTestSuite(CheckoutTest.class);\n\t\taddTestSuite(ConfirmOrderTest.class);\n\t\taddTestSuite(ViewInvoiceTest.class);\n\t\taddTestSuite(ConfigureAcceptedCCTest.class);\n\t\taddTestSuite(VerifyAcceptedCCTest.class);\n\t\taddTestSuite(ConfigureStateTaxTest.class);\n\t\taddTestSuite(AddThirdItemToCartTest.class);\n\t\taddTestSuite(VerifyStateTaxTest.class);\n\t\taddTestSuite(ConfigureFlatRateShippingCostTest.class);\n\t\taddTestSuite(VerifyFlatRateShippingCostTest.class);\n\t\taddTestSuite(ConfigurePercentageShippingTest.class);\n\t\taddTestSuite(VerifyPercentageShippingTest.class);\n\t\taddTestSuite(ConfigureFlatRateInsuranceTest.class);\n\t\taddTestSuite(VerifyFlatRateInsuranceTest.class);\n\t\taddTestSuite(ConfigurePercentageInsuranceTest.class);\n\t\taddTestSuite(VerifyPercentageInsuranceTest.class);\n\t\taddTestSuite(SaveCurrentSetupTest.class);\n\t\taddTestSuite(ChangeCurrentSetupTest.class);\n\t\taddTestSuite(RestoreArchivedSetupTest.class);\n\t\taddTestSuite(DeletePageTest.class);\n\t}","commit_id":"aa4a4331352ef24c81670e5de57441df72967ce8","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddOrganization() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"link=Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Add Organization']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_79_name\", RuntimeVariables.replace(\"Selenium\"));\n\t\tselenium.type(\"_79_name\", RuntimeVariables.replace(\"Selenium\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_79_type\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_79_countryId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_79_regionId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.select(\"_79_type\", RuntimeVariables.replace(\"label=Regular\"));\n\t\tselenium.select(\"_79_countryId\",\n\t\t\tRuntimeVariables.replace(\"label=United States\"));\n\t\tThread.sleep(5000);\n\t\tselenium.select(\"_79_regionId\",\n\t\t\tRuntimeVariables.replace(\"label=California\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Add']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_79_address\",\n\t\t\tRuntimeVariables.replace(\"Selenium@selenium.com\"));\n\t\tselenium.select(\"_79_typeId\", RuntimeVariables.replace(\"label=E-mail\"));\n\t\tselenium.click(\"_79_primaryCheckbox\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_79_comments\",\n\t\t\tRuntimeVariables.replace(\"This is a test comment!\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":53382,"modified_method":"public void testAddOrganization() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"link=Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Add Organization\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_79_name\", RuntimeVariables.replace(\"Selenium\"));\n\t\tselenium.type(\"_79_name\", RuntimeVariables.replace(\"Selenium\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_79_type\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.select(\"_79_type\", RuntimeVariables.replace(\"label=Regular\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"websitesLink\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_79_url00\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_79_url00\",\n\t\t\tRuntimeVariables.replace(\"http://www.selenium.com\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_79_primary00Checkbox\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"_79_primary00Checkbox\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"commentsLink\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_79_comments\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_79_comments\",\n\t\t\tRuntimeVariables.replace(\"This is a test comment!\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"01309d9bf637296c2715a3b4d0baaf36758b2d46","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testApplyOrganization() throws Exception {\n\t\tselenium.typeKeys(\"toggle_id_enterprise_admin_user_searchkeywords\",\n\t\t\tRuntimeVariables.replace(\"selenium\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Search Users']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//strong/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[2]/ul/li[1]/nobr/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//div[2]/ul/li[1]/nobr/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//input[@value='Select']\");\n\t\tselenium.waitForPopUp(\"organization\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"name=organization\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Liferay, Inc.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tThread.sleep(2000);\n\t\tselenium.selectWindow(\"name=organization\");\n\t\tselenium.click(\"link=Liferay, Inc.\");\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\"Liferay, Inc.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":53383,"modified_method":"public void testApplyOrganization() throws Exception {\n\t\tselenium.typeKeys(\"toggle_id_enterprise_admin_user_searchkeywords\",\n\t\t\tRuntimeVariables.replace(\"selenium\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Search Users']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//strong/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[2]/ul/li[1]/nobr/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//div[2]/ul/li[1]/nobr/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//input[@value='Select']\");\n\t\tselenium.waitForPopUp(\"organization\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"name=organization\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Selenium\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tThread.sleep(2000);\n\t\tselenium.selectWindow(\"name=organization\");\n\t\tselenium.click(\"link=Selenium\");\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\"Selenium\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"01309d9bf637296c2715a3b4d0baaf36758b2d46","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddSecondSubfolder() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Another\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Another\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Add Subfolder']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_20_name\", RuntimeVariables.replace(\"Another1\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Save']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Another1\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@id='portlet-wrapper-20']/div[2]/div/div/form[1]/div[1]/a[1]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":53384,"modified_method":"public void testAddSecondSubfolder() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Another\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Another\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Add Subfolder']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_20_name\", RuntimeVariables.replace(\"Another1\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Save']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Another1\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"52bb6ebcd634f1e0727e77f3d9dbf2bf9aedf574","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddTemporaryEvent() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Add Event']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_8_timeZoneSensitiveCheckbox\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"_8_timeZoneSensitiveCheckbox\");\n\t\tselenium.type(\"_8_title\", RuntimeVariables.replace(\"Test Event 2\"));\n\t\tselenium.type(\"_8_description\",\n\t\t\tRuntimeVariables.replace(\"This is a test event!\"));\n\t\tselenium.select(\"_8_type\", RuntimeVariables.replace(\"label=Appointment\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"Link=Test Event 2\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":53385,"modified_method":"public void testAddTemporaryEvent() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Add Event']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_8_timeZoneSensitiveCheckbox\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"_8_timeZoneSensitiveCheckbox\");\n\t\tselenium.type(\"_8_title\", RuntimeVariables.replace(\"Temporary Event\"));\n\t\tselenium.type(\"_8_description\",\n\t\t\tRuntimeVariables.replace(\"This is a temporary event!\"));\n\t\tselenium.select(\"_8_type\", RuntimeVariables.replace(\"label=Appointment\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"Link=Temporary Event\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"52bb6ebcd634f1e0727e77f3d9dbf2bf9aedf574","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCompareVersions() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//td[5]/ul/li/strong/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//td[5]/ul/li/strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Edit\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_20_file\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\documentlibrary\\\\test_document.txt\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//td[5]/ul/li/strong/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//td[5]/ul/li/strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Edit\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\"1.1\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@name='_20_rowIds' and @value='1.0']\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Compare Versions']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"There are no differences between Test Document.txt 1.0 and Test Document.txt 1.1. \")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_20_tabs1TabsBack\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"_20_tabs1TabsBack\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_20_file\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\documentlibrary\\\\test_CompareVersionsTest.txt\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//td[5]/ul/li/strong/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//td[5]/ul/li/strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Edit\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\"1.2\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@name='_20_rowIds' and @value='1.0']\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Compare Versions']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\"CompareVersionsTest\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_20_tabs1TabsBack\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"_20_tabs1TabsBack\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":53386,"modified_method":"public void testCompareVersions() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//td[5]/ul/li/strong/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//td[5]/ul/li/strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Edit\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_20_file\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\documentlibrary\\\\test_document.txt\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//td[5]/ul/li/strong/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//td[5]/ul/li/strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Edit\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\"1.1\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@name='_20_rowIds' and @value='1.0']\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Compare Versions']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"There are no differences between Test Document.txt 1.0 and Test Document.txt 1.1.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_20_tabs1TabsBack\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"_20_tabs1TabsBack\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_20_file\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\documentlibrary\\\\test_CompareVersionsTest.txt\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//td[5]/ul/li/strong/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//td[5]/ul/li/strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Edit\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\"1.2\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@name='_20_rowIds' and @value='1.0']\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Compare Versions']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\"CompareVersionsTest\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_20_tabs1TabsBack\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"_20_tabs1TabsBack\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"52bb6ebcd634f1e0727e77f3d9dbf2bf9aedf574","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteAllEvents() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Off to Yosemite!\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Test Event\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Edited Test Event\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//td[4]/ul/li/strong/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//td[4]/ul/li/strong/span\");\n\t\tselenium.click(RuntimeVariables.replace(\"//div[2]/ul/li[4]/nobr/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Your request processed successfully.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isElementPresent(\"link=Off to Yosemite!\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//td[4]/ul/li/strong/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//td[4]/ul/li/strong/span\");\n\t\tselenium.click(RuntimeVariables.replace(\"//div[2]/ul/li[4]/nobr/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Your request processed successfully.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isElementPresent(\"link=Test Event\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//td[4]/ul/li/strong/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//td[4]/ul/li/strong/span\");\n\t\tselenium.click(RuntimeVariables.replace(\"//div[2]/ul/li[4]/nobr/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Your request processed successfully.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isElementPresent(\"link=Edited Test Event\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":53387,"modified_method":"public void testDeleteAllEvents() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Off to Yosemite!\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Caedmon's Call Concert!\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Edited Test Event\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//td[4]/ul/li/strong/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//td[4]/ul/li/strong/span\");\n\t\tselenium.click(RuntimeVariables.replace(\"//div[2]/ul/li[4]/nobr/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Your request processed successfully.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isElementPresent(\"link=Caedmon's Call Concert!\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//td[4]/ul/li/strong/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//td[4]/ul/li/strong/span\");\n\t\tselenium.click(RuntimeVariables.replace(\"//div[2]/ul/li[4]/nobr/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Your request processed successfully.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isElementPresent(\"link=Off to Yosemite!\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//td[4]/ul/li/strong/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//td[4]/ul/li/strong/span\");\n\t\tselenium.click(RuntimeVariables.replace(\"//div[2]/ul/li[4]/nobr/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Your request processed successfully.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isElementPresent(\"link=Edited Test Event\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"52bb6ebcd634f1e0727e77f3d9dbf2bf9aedf574","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteTemporaryEvent() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Test Event 2\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//tr[4]/td[4]/ul/li/strong/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//tr[4]/td[4]/ul/li/strong/span\");\n\t\tselenium.click(\"//div[2]/ul/li[4]/nobr/a\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isElementPresent(\"link=Test Event 2\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":53388,"modified_method":"public void testDeleteTemporaryEvent() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Temporary Event\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//tr[5]/td[4]/ul/li/strong/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//tr[5]/td[4]/ul/li/strong/span\");\n\t\tselenium.click(\"//div[2]/ul/li[4]/nobr/a\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (!selenium.isElementPresent(\"link=Temporary Event\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"52bb6ebcd634f1e0727e77f3d9dbf2bf9aedf574","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditComments() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Edit\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Edit\");\n\t\tselenium.typeKeys(\"_20_postReplyBody0\", RuntimeVariables.replace(\"\"));\n\t\tselenium.type(\"_20_postReplyBody0\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_20_updateReplyButton1\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"_20_updateReplyButton1\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":53389,"modified_method":"public void testEditComments() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Edit\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Edit\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_20_editBody1\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_20_editBody1\",\n\t\t\tRuntimeVariables.replace(\"This comment has been edited!\"));\n\t\tselenium.type(\"_20_editBody1\",\n\t\t\tRuntimeVariables.replace(\"This comment has been edited!\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_20_updateReplyButton1\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"_20_updateReplyButton1\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"This comment has been edited!\"));\n\t}","commit_id":"52bb6ebcd634f1e0727e77f3d9dbf2bf9aedf574","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditEvent() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Test Event\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//td[4]/ul/li/strong/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//td[4]/ul/li/strong/span\");\n\t\tselenium.click(\"//div[2]/ul/li[1]/nobr/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_8_description\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_8_description\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This is a test event! This test event has been edited.\"));\n\t\tselenium.type(\"_8_title\", RuntimeVariables.replace(\"Edited Test Event\"));\n\t\tselenium.select(\"_8_startDateHour\", RuntimeVariables.replace(\"label=5\"));\n\t\tselenium.select(\"_8_startDateAmPm\", RuntimeVariables.replace(\"label=AM\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Edited Test Event\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":53390,"modified_method":"public void testEditEvent() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Test Event\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//tr[5]/td[4]/ul/li/strong/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//tr[5]/td[4]/ul/li/strong/span\");\n\t\tselenium.click(\"//div[2]/ul/li[1]/nobr/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_8_description\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_8_description\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This is a test event! This test event has been edited.\"));\n\t\tselenium.type(\"_8_title\", RuntimeVariables.replace(\"Edited Test Event\"));\n\t\tselenium.select(\"_8_startDateHour\", RuntimeVariables.replace(\"label=5\"));\n\t\tselenium.select(\"_8_startDateAmPm\", RuntimeVariables.replace(\"label=AM\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Edited Test Event\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"52bb6ebcd634f1e0727e77f3d9dbf2bf9aedf574","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditSecondFolder() throws Exception {\n\t\tselenium.click(\"//li[2]/ul/li/strong/span\");\n\t\tselenium.click(RuntimeVariables.replace(\"//div[2]/ul/li[1]/nobr/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_20_name\",\n\t\t\tRuntimeVariables.replace(\"EditSecondFolderTest\"));\n\t\tselenium.type(\"_20_name\",\n\t\t\tRuntimeVariables.replace(\"EditSecondFolderTest\"));\n\t\tselenium.typeKeys(\"_20_description\",\n\t\t\tRuntimeVariables.replace(\"This second folder was edited!\"));\n\t\tselenium.type(\"_20_description\",\n\t\t\tRuntimeVariables.replace(\"This second folder was edited!\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully. \"));\n\t}","id":53391,"modified_method":"public void testEditSecondFolder() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"link=Another\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//strong/span\");\n\t\tselenium.click(RuntimeVariables.replace(\"//nobr/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_20_name\",\n\t\t\tRuntimeVariables.replace(\"Edit Second Folder Test\"));\n\t\tselenium.type(\"_20_name\",\n\t\t\tRuntimeVariables.replace(\"Edit Second Folder Test\"));\n\t\tselenium.typeKeys(\"_20_description\",\n\t\t\tRuntimeVariables.replace(\"This second folder was edited!\"));\n\t\tselenium.type(\"_20_description\",\n\t\t\tRuntimeVariables.replace(\"This second folder was edited!\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tverifyTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Edit Second Folder Test\"));\n\t}","commit_id":"52bb6ebcd634f1e0727e77f3d9dbf2bf9aedf574","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testMoveEntry() throws Exception {\n\t\tselenium.click(\"//strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[2]/ul/li[1]/nobr/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//div[2]/ul/li[1]/nobr/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Select']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='Select']\");\n\t\tselenium.waitForPopUp(\"folder\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"folder\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id=\\\"p_p_id_28_\\\"]/div/form/div[1]/a[1]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@id=\\\"p_p_id_28_\\\"]/div/form/div[1]/a[1]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Choose']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='Choose']\");\n\t\tselenium.selectWindow(\"null\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Save']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Your request processed successfully.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Folder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=exact:http://www.digg.com\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":53392,"modified_method":"public void testMoveEntry() throws Exception {\n\t\tselenium.click(\"//strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[2]/ul/li[1]/nobr/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//div[2]/ul/li[1]/nobr/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Select']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='Select']\");\n\t\tselenium.waitForPopUp(\"folder\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"folder\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id=\\\"p_p_id_28_\\\"]/div/form/div[1]/a[1]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Folders\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Choose']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='Choose']\");\n\t\tselenium.selectWindow(\"null\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Save']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Your request processed successfully.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Folder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=exact:http://www.digg.com\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"52bb6ebcd634f1e0727e77f3d9dbf2bf9aedf574","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public PortalWebTestSuite() {\n\t\taddTestSuite(LoginTests.class);\n\t\taddTestSuite(EnterpriseAdminTests.class);\n\t\taddTestSuite(AdminTests.class);\n\t\taddTestSuite(AnnouncementsTests.class);\n\t\taddTestSuite(BibleGatewayTests.class);\n\t\taddTestSuite(BlogsTests.class);\n\t\taddTestSuite(BlogsAggregatorTests.class);\n\t\taddTestSuite(AssetPublisherTests.class);\n\t\taddTestSuite(BookmarksTests.class);\n\t\taddTestSuite(BreadcrumbTests.class);\n\t\taddTestSuite(CalendarTests.class);\n\t\taddTestSuite(CommunitiesTests.class);\n\t\taddTestSuite(CurrencyConverterTests.class);\n\t\taddTestSuite(DictionaryTests.class);\n\t\taddTestSuite(DirectoryTests.class);\n\t\taddTestSuite(DocumentLibraryTests.class);\n\t\taddTestSuite(DocumentLibraryDisplayTests.class);\n\t\taddTestSuite(GlobalPrayerDigestTests.class);\n\t\taddTestSuite(GospelForAsiaTests.class);\n\t\taddTestSuite(HelloVelocityTests.class);\n\t\taddTestSuite(HelloWorldTests.class);\n\t\taddTestSuite(IFrameTests.class);\n\t\taddTestSuite(ImageGalleryTests.class);\n\t\taddTestSuite(InvitationTests.class);\n\t\taddTestSuite(JournalTests.class);\n\t\taddTestSuite(JournalArticlesTests.class);\n\t\taddTestSuite(JournalContentTests.class);\n\t\taddTestSuite(JournalContentSearchTests.class);\n\t\taddTestSuite(LanguageTests.class);\n\t\taddTestSuite(LoanCalculatorTests.class);\n\t\taddTestSuite(ManagePagesTests.class);\n\t\taddTestSuite(MessageBoardsTests.class);\n\t\taddTestSuite(NavigationTests.class);\n\t\taddTestSuite(NestedPortletsTests.class);\n\t\taddTestSuite(NetworkUtilitiesTests.class);\n\t\taddTestSuite(OpenIDSignInTests.class);\n\t\t//addTestSuite(OrganizationAdminTests.class);\n\t\taddTestSuite(PageCommentsTests.class);\n\t\taddTestSuite(PageRatingsTests.class);\n\t\taddTestSuite(PasswordGeneratorTests.class);\n\t\t//addTestSuite(PluginInstallerTests.class);\n\t\taddTestSuite(PollsTests.class);\n\t\taddTestSuite(PollsDisplayTests.class);\n\t\taddTestSuite(QuickNoteTests.class);\n\t\t//addTestSuite(RandomBibleVerseTests.class);\n\t\taddTestSuite(RecentBloggersTests.class);\n\t\taddTestSuite(RecentDocumentsTests.class);\n\t\taddTestSuite(ReverendFunTests.class);\n\t\taddTestSuite(RSSTests.class);\n\t\taddTestSuite(SearchTests.class);\n\t\taddTestSuite(SessionExpirationTests.class);\n\t\taddTestSuite(ShoppingTests.class);\n\t\t//addTestSuite(SiteMapTests.class);\n\t\t//addTestSuite(SMSTextMessengerTests.class);\n\t\taddTestSuite(SoftwareCatalogTests.class);\n\t\t//addTestSuite(StagingTests.class);\n\t\taddTestSuite(StocksTests.class);\n\t\taddTestSuite(TagsAdminTests.class);\n\t\taddTestSuite(TranslatorTests.class);\n\t\taddTestSuite(UnitConverterTests.class);\n\t\taddTestSuite(UpdateManagerTests.class);\n\t\taddTestSuite(WebFormTests.class);\n\t\taddTestSuite(WebProxyTests.class);\n\t\taddTestSuite(WikiTests.class);\n\t\taddTestSuite(WikiDisplayTests.class);\n\t\taddTestSuite(WordsTests.class);\n\t\taddTestSuite(XSLContentTests.class);\n\n\t\taddTestSuite(StopSeleniumTest.class);\n\t}","id":53393,"modified_method":"public PortalWebTestSuite() {\n\t\taddTestSuite(LoginTests.class);\n//\t\taddTestSuite(EnterpriseAdminTests.class);\n\t\taddTestSuite(AdminTests.class);\n\t\taddTestSuite(AnnouncementsTests.class);\n\t\taddTestSuite(BibleGatewayTests.class);\n\t\taddTestSuite(BlogsTests.class);\n\t\taddTestSuite(BlogsAggregatorTests.class);\n\t\taddTestSuite(AssetPublisherTests.class);\n\t\taddTestSuite(BookmarksTests.class);\n\t\taddTestSuite(BreadcrumbTests.class);\n\t\taddTestSuite(CalendarTests.class);\n//\t\taddTestSuite(CommunitiesTests.class);\n\t\taddTestSuite(CurrencyConverterTests.class);\n\t\taddTestSuite(DictionaryTests.class);\n\t\taddTestSuite(DirectoryTests.class);\n\t\taddTestSuite(DocumentLibraryTests.class);\n\t\taddTestSuite(DocumentLibraryDisplayTests.class);\n\t\taddTestSuite(GlobalPrayerDigestTests.class);\n\t\taddTestSuite(GospelForAsiaTests.class);\n\t\taddTestSuite(HelloVelocityTests.class);\n\t\taddTestSuite(HelloWorldTests.class);\n\t\taddTestSuite(IFrameTests.class);\n\t\taddTestSuite(ImageGalleryTests.class);\n\t\taddTestSuite(InvitationTests.class);\n\t\taddTestSuite(JournalTests.class);\n\t\taddTestSuite(JournalArticlesTests.class);\n\t\taddTestSuite(JournalContentTests.class);\n\t\taddTestSuite(JournalContentSearchTests.class);\n\t\taddTestSuite(LanguageTests.class);\n\t\taddTestSuite(LoanCalculatorTests.class);\n\t\taddTestSuite(ManagePagesTests.class);\n\t\taddTestSuite(MessageBoardsTests.class);\n\t\taddTestSuite(NavigationTests.class);\n\t\taddTestSuite(NestedPortletsTests.class);\n\t\taddTestSuite(NetworkUtilitiesTests.class);\n\t\taddTestSuite(OpenIDSignInTests.class);\n\t\t//addTestSuite(OrganizationAdminTests.class);\n\t\taddTestSuite(PageCommentsTests.class);\n\t\taddTestSuite(PageRatingsTests.class);\n\t\taddTestSuite(PasswordGeneratorTests.class);\n\t\t//addTestSuite(PluginInstallerTests.class);\n\t\taddTestSuite(PollsTests.class);\n\t\taddTestSuite(PollsDisplayTests.class);\n\t\taddTestSuite(QuickNoteTests.class);\n\t\t//addTestSuite(RandomBibleVerseTests.class);\n\t\taddTestSuite(RecentBloggersTests.class);\n\t\taddTestSuite(RecentDocumentsTests.class);\n\t\taddTestSuite(ReverendFunTests.class);\n\t\taddTestSuite(RSSTests.class);\n\t\taddTestSuite(SearchTests.class);\n\t\taddTestSuite(SessionExpirationTests.class);\n\t\taddTestSuite(ShoppingTests.class);\n\t\t//addTestSuite(SiteMapTests.class);\n\t\t//addTestSuite(SMSTextMessengerTests.class);\n\t\taddTestSuite(SoftwareCatalogTests.class);\n\t\t//addTestSuite(StagingTests.class);\n\t\taddTestSuite(StocksTests.class);\n\t\taddTestSuite(TagsAdminTests.class);\n\t\taddTestSuite(TranslatorTests.class);\n\t\taddTestSuite(UnitConverterTests.class);\n\t\taddTestSuite(UpdateManagerTests.class);\n\t\taddTestSuite(WebFormTests.class);\n\t\taddTestSuite(WebProxyTests.class);\n\t\taddTestSuite(WikiTests.class);\n\t\taddTestSuite(WikiDisplayTests.class);\n\t\taddTestSuite(WordsTests.class);\n\t\taddTestSuite(XSLContentTests.class);\n\n\t\taddTestSuite(StopSeleniumTest.class);\n\t}","commit_id":"52bb6ebcd634f1e0727e77f3d9dbf2bf9aedf574","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSetTimezone() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=My Account\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=My Account\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_2_timeZoneId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.select(\"_2_timeZoneId\",\n\t\t\tRuntimeVariables.replace(\"label=(UTC -08:00) Pacific Standard Time\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Save']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":53394,"modified_method":"public void testSetTimezone() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=My Account\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=My Account\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_2_timeZoneId\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.select(\"_2_timeZoneId\",\n\t\t\tRuntimeVariables.replace(\"label=(UTC -08:00) Pacific Standard Time\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Save']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Cancel']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"52bb6ebcd634f1e0727e77f3d9dbf2bf9aedf574","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testUploadLARFile() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Configuration']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//img[@alt='Configuration']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Export / Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_86_importFileName\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_86_importFileName\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\calendar\\\\Calendar-Selenium.portlet.lar\"));\n\t\tselenium.click(\"_86_PORTLET_ARCHIVED_SETUPSCheckbox\");\n\t\tselenium.click(\"_86_PORTLET_USER_PREFERENCESCheckbox\");\n\t\tselenium.click(\"_86_DELETE_PORTLET_DATA\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Import']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='Import']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Your request processed successfully.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Events\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Edited Test Event\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Off to Yosemite!\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Event\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":53395,"modified_method":"public void testUploadLARFile() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Configuration']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//img[@alt='Configuration']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Export / Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_86_importFileName\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_86_importFileName\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\calendar\\\\Calendar-Selenium.portlet.lar\"));\n\t\tselenium.click(\"_86_PORTLET_ARCHIVED_SETUPSCheckbox\");\n\t\tselenium.click(\"_86_PORTLET_USER_PREFERENCESCheckbox\");\n\t\tselenium.click(\"_86_DELETE_PORTLET_DATA\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Import']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='Import']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Your request processed successfully.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Events\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Edited Test Event\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Off to Yosemite!\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Caedmon's Call Concert!\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"52bb6ebcd634f1e0727e77f3d9dbf2bf9aedf574","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteInvalidCommunity() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Communities\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Communities\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//strong/span\");\n\t\tselenium.click(RuntimeVariables.replace(\"//body/div[2]/ul/li[5]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You have entered invalid data. Please try again.\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"The group cannot be deleted because it is a required system group.\"));\n\t}","id":53396,"modified_method":"public void testDeleteInvalidCommunity() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Communities\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Communities\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//td[6]/ul/li/strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//body/div[2]/ul/li[5]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//body/div[2]/ul/li[5]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You have entered invalid data. Please try again.\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"The group cannot be deleted because it is a required system group.\"));\n\t}","commit_id":"64a7b82d28f4a46af14d8d867cb48e3b18edb0a1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteTemporaryCommunity() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Communities\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Communities\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_134_name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Test Community 2 Edited\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Search']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"Test Community 2 Edited\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//strong\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//strong\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertFalse(selenium.isTextPresent(\"Test Community 2 Edited\"));\n\t}","id":53397,"modified_method":"public void testDeleteTemporaryCommunity() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Communities\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Communities\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_134_name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Test Community 2 Edited\"));\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Test Community 2 Edited\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Search']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//td[6]/ul/li/strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Delete\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertFalse(selenium.isTextPresent(\"Test Community 2 Edited\"));\n\t}","commit_id":"64a7b82d28f4a46af14d8d867cb48e3b18edb0a1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteTemporaryUserGroup() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=User Groups\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=User Groups\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_127_name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_127_name\", RuntimeVariables.replace(\"Temporary\"));\n\t\tselenium.type(\"_127_name\", RuntimeVariables.replace(\"Temporary\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Search']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"_127_allRowIds\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Delete']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tassertTrue(selenium.isTextPresent(\"You request processed successfully.\"));\n\t}","id":53398,"modified_method":"public void testDeleteTemporaryUserGroup() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=User Groups\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=User Groups\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_127_name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_127_name\", RuntimeVariables.replace(\"Temporar\"));\n\t\tselenium.type(\"_127_name\", RuntimeVariables.replace(\"Temporary\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Search']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"_127_allRowIds\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Delete']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","commit_id":"64a7b82d28f4a46af14d8d867cb48e3b18edb0a1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditCommunity() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Communities\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Communities\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_134_name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Test Community 2\"));\n\t\tselenium.type(\"_134_name\", RuntimeVariables.replace(\"Test Community 2\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Search']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"Test Community 2\"));\n\t\tselenium.click(\"//strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Edit\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_134_name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Test Communit 2 Edited\"));\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Test Community 2 Edited\"));\n\t\tselenium.type(\"_134_description\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This is a second temporary Test Community! This community has been edited.\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Test Community 2 Edited\"));\n\t}","id":53399,"modified_method":"public void testEditCommunity() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Communities\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Communities\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_134_name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Test Community 2\"));\n\t\tselenium.type(\"_134_name\", RuntimeVariables.replace(\"Test Community 2\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Search']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"Test Community 2\"));\n\t\tselenium.click(\"//td[6]/ul/li/strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Edit\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_134_name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Test Communit 2 Edited\"));\n\t\tselenium.type(\"_134_name\",\n\t\t\tRuntimeVariables.replace(\"Test Community 2 Edited\"));\n\t\tselenium.type(\"_134_description\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This is a second temporary Test Community! This community has been edited.\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Test Community 2 Edited\"));\n\t}","commit_id":"64a7b82d28f4a46af14d8d867cb48e3b18edb0a1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testRemoveApplyCommunity() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Communities\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Communities\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_134_name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_134_name\", RuntimeVariables.replace(\"Test Communit\"));\n\t\tselenium.type(\"_134_name\", RuntimeVariables.replace(\"Test Community\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Search']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Assign Members\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Assign Members\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//div[5]/table/tbody/tr[4]/td[1]/input\");\n\t\tselenium.click(\"//tr[5]/td[1]/input\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Update Associations']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","id":53400,"modified_method":"public void testRemoveApplyCommunity() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Communities\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Communities\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_134_name\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_134_name\", RuntimeVariables.replace(\"Test Communit\"));\n\t\tselenium.type(\"_134_name\", RuntimeVariables.replace(\"Test Community\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Search']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//td[6]/ul/li/strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Assign Members\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Assign Members\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//div[5]/table/tbody/tr[4]/td[1]/input\");\n\t\tselenium.click(\"//tr[5]/td[1]/input\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Update Associations']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","commit_id":"64a7b82d28f4a46af14d8d867cb48e3b18edb0a1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testRemoveApplyOrganization() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Organizations\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_126_keywords\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_126_keywords\", RuntimeVariables.replace(\"Selenium\"));\n\t\tselenium.type(\"_126_keywords\", RuntimeVariables.replace(\"Selenium\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Search']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Assign Members\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Assign Members\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"_126_allRowIds\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Update Associations']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","id":53401,"modified_method":"public void testRemoveApplyOrganization() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Organizations\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Organizations\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_126_keywords\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_126_keywords\", RuntimeVariables.replace(\"Selenium\"));\n\t\tselenium.type(\"_126_keywords\", RuntimeVariables.replace(\"Selenium\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Search']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//td[8]/ul/li/strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Assign Members\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Assign Members\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"_126_allRowIds\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Update Associations']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","commit_id":"64a7b82d28f4a46af14d8d867cb48e3b18edb0a1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testRemoveApplyUserGroup() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=User Groups\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=User Groups\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Assign Members\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Assign Members\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"_127_allRowIds\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Update Associations']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","id":53402,"modified_method":"public void testRemoveApplyUserGroup() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=User Groups\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=User Groups\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//td[4]/ul/li/strong\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Assign Members\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Assign Members\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"_127_allRowIds\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Update Associations']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","commit_id":"64a7b82d28f4a46af14d8d867cb48e3b18edb0a1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDown() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Users\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Users\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"_125_keywords\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.typeKeys(\"_125_keywords\",\n\t\t\t\t\tRuntimeVariables.replace(\"selen\"));\n\t\t\t\tselenium.type(\"_125_keywords\", RuntimeVariables.replace(\"selen\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Search']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean UsersPresent = selenium.isElementPresent(\"_125_rowIds\");\n\n\t\t\t\tif (!UsersPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"_125_allRowIds\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\t\t\t\tselenium.click(\"link=Advanced \\u00bb\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"_125_active\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.select(\"_125_active\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=No\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Search']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(\"_125_allRowIds\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\t\t\t\tselenium.click(\"link=\\u00ab Basic\");\n\n\t\t\tcase 2:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"_126_keywords\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.typeKeys(\"_126_keywords\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.type(\"_126_keywords\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Search']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean OrganizationPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"_126_rowIds\");\n\n\t\t\t\tif (!OrganizationPresent) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"_126_allRowIds\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\tcase 3:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Communities\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"_134_name\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.typeKeys(\"_134_name\",\n\t\t\t\t\tRuntimeVariables.replace(\"Test Communit\"));\n\t\t\t\tselenium.type(\"_134_name\",\n\t\t\t\t\tRuntimeVariables.replace(\"Test Community\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Search']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean CommunityPresent = selenium.isElementPresent(\"//strong\");\n\n\t\t\t\tif (!CommunityPresent) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"//strong\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Delete\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\tcase 4:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=User Groups\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"_127_name\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.typeKeys(\"_127_name\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.type(\"_127_name\", RuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Search']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean UserGroupPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"_127_rowIds\");\n\n\t\t\t\tif (!UserGroupPresent) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"_127_allRowIds\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\tcase 5:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Password Policies\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"_129_name\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.typeKeys(\"_129_name\", RuntimeVariables.replace(\"Test\"));\n\t\t\t\tselenium.type(\"_129_name\", RuntimeVariables.replace(\"Test\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Search']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean PasswordPolicyPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//strong\");\n\n\t\t\t\tif (!PasswordPolicyPresent) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"//strong\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Delete\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\tcase 6:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Settings\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"_130_legalId\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.type(\"_130_legalId\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.type(\"_130_sicCode\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.type(\"_130_tickerSymbol\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.type(\"_130_industry\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.type(\"_130_type\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.select(\"_130_timeZoneId\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"label=(UTC ) Coordinated Universal Time\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Save']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\t\tboolean EmailAddressPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//strong/span\");\n\n\t\t\t\tif (!EmailAddressPresent) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"//strong/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//body/div[2]/ul/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//body/div[2]/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\tcase 7:\n\t\t\t\tselenium.click(\"link=Addresses\");\n\n\t\t\t\tboolean AddressPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//strong/span\");\n\n\t\t\t\tif (!AddressPresent) {\n\t\t\t\t\tlabel = 8;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"//strong/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//body/div[2]/ul/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//body/div[2]/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\tcase 8:\n\t\t\t\tselenium.click(\"link=Websites\");\n\n\t\t\t\tboolean WebsitePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//strong/span\");\n\n\t\t\t\tif (!WebsitePresent) {\n\t\t\t\t\tlabel = 9;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"//strong/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//body/div[2]/ul/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//body/div[2]/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\tcase 9:\n\t\t\t\tselenium.click(\"link=Phone Numbers\");\n\n\t\t\t\tboolean PhoneNumberPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//strong/span\");\n\n\t\t\t\tif (!PhoneNumberPresent) {\n\t\t\t\t\tlabel = 10;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"//strong/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//body/div[2]/ul/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//body/div[2]/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\tcase 10:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Reserved Screen Names\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"_130_reservedScreenNames\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.type(\"_130_reservedScreenNames\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.type(\"_130_reservedEmailAddresses\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Save']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Mail Host Names\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"_130_mailHostNames\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.type(\"_130_mailHostNames\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Save']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Server Administration\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Log Levels\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Update Categories\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean CategoryPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"_137_logLevelCategoryTest!\");\n\n\t\t\t\tif (!CategoryPresent) {\n\t\t\t\t\tlabel = 11;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.select(\"_137_logLevelCategoryTest!\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=OFF\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Save']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\tcase 11:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":53403,"modified_method":"public void testTearDown() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Users\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Users\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"_125_keywords\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.typeKeys(\"_125_keywords\",\n\t\t\t\t\tRuntimeVariables.replace(\"selen\"));\n\t\t\t\tselenium.type(\"_125_keywords\", RuntimeVariables.replace(\"selen\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Search']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean UsersPresent = selenium.isElementPresent(\"_125_rowIds\");\n\n\t\t\t\tif (!UsersPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"_125_allRowIds\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Deactivate']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to deactivate the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\t\t\t\tselenium.click(\"link=Advanced \\u00bb\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"_125_active\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.select(\"_125_active\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=No\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Search']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(\"_125_allRowIds\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to permanently delete the selected users[\\\\s\\\\S]$\"));\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\t\t\t\tselenium.click(\"link=\\u00ab Basic\");\n\n\t\t\tcase 2:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Organizations\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"_126_keywords\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.typeKeys(\"_126_keywords\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.type(\"_126_keywords\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Search']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean OrganizationPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"_126_rowIds\");\n\n\t\t\t\tif (!OrganizationPresent) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"_126_allRowIds\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\tcase 3:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Communities\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"_134_name\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.typeKeys(\"_134_name\",\n\t\t\t\t\tRuntimeVariables.replace(\"Test Communit\"));\n\t\t\t\tselenium.type(\"_134_name\",\n\t\t\t\t\tRuntimeVariables.replace(\"Test Community\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Search']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean CommunityPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[6]/ul/li/strong/span\");\n\n\t\t\t\tif (!CommunityPresent) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"//td[6]/ul/li/strong/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Delete\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\tcase 4:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=User Groups\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"_127_name\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.typeKeys(\"_127_name\",\n\t\t\t\t\tRuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.type(\"_127_name\", RuntimeVariables.replace(\"Selenium\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Search']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean UserGroupPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"_127_rowIds\");\n\n\t\t\t\tif (!UserGroupPresent) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"_127_allRowIds\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\tcase 5:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Password Policies\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"_129_name\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.typeKeys(\"_129_name\", RuntimeVariables.replace(\"Test\"));\n\t\t\t\tselenium.type(\"_129_name\", RuntimeVariables.replace(\"Test\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Search']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean PasswordPolicyPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[3]/ul/li/strong/span\");\n\n\t\t\t\tif (!PasswordPolicyPresent) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"//td[3]/ul/li/strong/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Delete\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\tcase 6:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Settings\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"_130_legalId\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.type(\"_130_legalId\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.type(\"_130_sicCode\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.type(\"_130_tickerSymbol\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.type(\"_130_industry\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.type(\"_130_type\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.select(\"_130_timeZoneId\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"label=(UTC ) Coordinated Universal Time\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Save']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\t\tboolean EmailAddressPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/ul/li/strong/span\");\n\n\t\t\t\tif (!EmailAddressPresent) {\n\t\t\t\t\tlabel = 7;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"//td[4]/ul/li/strong/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//body/div[2]/ul/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//body/div[2]/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\tcase 7:\n\t\t\t\tselenium.click(\"link=Addresses\");\n\n\t\t\t\tboolean AddressPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[7]/ul/li/strong\");\n\n\t\t\t\tif (!AddressPresent) {\n\t\t\t\t\tlabel = 8;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"//td[7]/ul/li/strong\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//body/div[2]/ul/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//body/div[2]/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\tcase 8:\n\t\t\t\tselenium.click(\"link=Websites\");\n\n\t\t\t\tboolean WebsitePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/ul/li/strong/span\");\n\n\t\t\t\tif (!WebsitePresent) {\n\t\t\t\t\tlabel = 9;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"//td[4]/ul/li/strong/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//body/div[2]/ul/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//body/div[2]/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\tcase 9:\n\t\t\t\tselenium.click(\"link=Phone Numbers\");\n\n\t\t\t\tboolean PhoneNumberPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/ul/li/strong/span\");\n\n\t\t\t\tif (!PhoneNumberPresent) {\n\t\t\t\t\tlabel = 10;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"//td[5]/ul/li/strong/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"//body/div[2]/ul/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//body/div[2]/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\tcase 10:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Reserved Screen Names\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"_130_reservedScreenNames\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.type(\"_130_reservedScreenNames\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.type(\"_130_reservedEmailAddresses\",\n\t\t\t\t\tRuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Save']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Mail Host Names\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"_130_mailHostNames\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.type(\"_130_mailHostNames\", RuntimeVariables.replace(\"\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Save']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Server Administration\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Log Levels\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Update Categories\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean CategoryPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"_137_logLevelCategoryTest!\");\n\n\t\t\t\tif (!CategoryPresent) {\n\t\t\t\t\tlabel = 11;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.select(\"_137_logLevelCategoryTest!\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=OFF\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Save']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\tcase 11:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"64a7b82d28f4a46af14d8d867cb48e3b18edb0a1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddImage() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Image Gallery Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Add Image']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Use the classic uploader.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Use the classic uploader.\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_31_file\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_31_file\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\imagegallery\\\\test_image.jpg\"));\n\t\tselenium.typeKeys(\"_31_name\", RuntimeVariables.replace(\"test_image\"));\n\t\tselenium.type(\"_31_name\", RuntimeVariables.replace(\"test_image\"));\n\t\tselenium.typeKeys(\"_31_description\",\n\t\t\tRuntimeVariables.replace(\"This is the Lifera logo!\"));\n\t\tselenium.type(\"_31_description\",\n\t\t\tRuntimeVariables.replace(\"This is the Liferay logo!\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertTrue(selenium.isElementPresent(\"//img[@alt='Image']\"));\n\t\tassertTrue(selenium.isTextPresent(\"test_image\"));\n\t}","id":53404,"modified_method":"public void testAddImage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"link=Image Gallery Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Add Image']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(5000);\n\n\t\t\t\tboolean IGClassicUploaderPresentA = selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Use the classic uploader.\");\n\n\t\t\t\tif (IGClassicUploaderPresentA) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Add Image']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(5000);\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean IGClassicUploaderPresentB = selenium.isElementPresent(\n\t\t\t\t\t\t\"link=Use the classic uploader.\");\n\n\t\t\t\tif (IGClassicUploaderPresentB) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Image Gallery Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Add Image']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(5000);\n\n\t\t\tcase 3:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"link=Use the classic uploader.\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"link=Use the classic uploader.\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"_31_file\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.type(\"_31_file\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\imagegallery\\\\test_image.jpg\"));\n\t\t\t\tselenium.typeKeys(\"_31_name\",\n\t\t\t\t\tRuntimeVariables.replace(\"test_image\"));\n\t\t\t\tselenium.type(\"_31_name\", RuntimeVariables.replace(\"test_image\"));\n\t\t\t\tselenium.typeKeys(\"_31_description\",\n\t\t\t\t\tRuntimeVariables.replace(\"This is the Lifera logo!\"));\n\t\t\t\tselenium.type(\"_31_description\",\n\t\t\t\t\tRuntimeVariables.replace(\"This is the Liferay logo!\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Save']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertTrue(selenium.isElementPresent(\"//img[@alt='Image']\"));\n\t\t\t\tassertTrue(selenium.isTextPresent(\"test_image\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"e1a5784963fbfecd8f96cdd5ad8a38e0a4b7e597","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testImageEditting() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Image Gallery Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//tr[4]/td[1]/a[1]/b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Image']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//img[@alt='Image']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@class=\\\"ui-dialog-titlebar\\\"]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tThread.sleep(5000);\n\t\tassertTrue(selenium.isElementPresent(\"link=Edit\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Permissions\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Delete\"));\n\t\tselenium.click(\"link=X\");\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Image']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//img[@alt='Image']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@class=\\\"ui-dialog-titlebar\\\"]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tThread.sleep(2000);\n\t\tassertTrue(selenium.isElementPresent(\"link=Edit\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Permissions\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Delete\"));\n\t\tselenium.click(\"link=X\");\n\t\tThread.sleep(2000);\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":53405,"modified_method":"public void testImageEditting() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Image Gallery Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//tr[4]/td[1]/a[1]/b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Image']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//img[@alt='Image']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@class=\\\"ui-dialog-titlebar\\\"]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tThread.sleep(5000);\n\t\tassertTrue(selenium.isElementPresent(\"link=Edit\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Permissions\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Delete\"));\n\t\tselenium.click(\"link=X\");\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Image']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//img[@alt='Image']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//body/div[4]/div[1]/div[1]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tThread.sleep(2000);\n\t\tassertTrue(selenium.isElementPresent(\"link=Edit\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Permissions\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Delete\"));\n\t\tselenium.click(\"//div[4]/div[1]/div[1]/a\");\n\t\tThread.sleep(2000);\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"e1a5784963fbfecd8f96cdd5ad8a38e0a4b7e597","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testImportLARFile() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Breadcrumb Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Breadcrumb Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[2]/div/div/div/ul/li/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//div[2]/div/div/div/ul/li/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//div[2]/div/div[1]/div/ul/li/strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//body/div[2]/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//body/div[2]/ul/li[2]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Export / Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_86_importFileName\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\breadcrumb\\\\Breadcrumb-LAR.portlet.lar\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Import']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","id":53406,"modified_method":"public void testImportLARFile() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Breadcrumb Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Breadcrumb Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[2]/div/div/div/ul/li/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//div[2]/div/div/div/ul/li/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//div[2]/div/div[1]/div/ul/li/strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//body/div[2]/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//body/div[2]/ul/li[3]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_86_importFileName\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\breadcrumb\\\\Breadcrumb-LAR.portlet.lar\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Import']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","commit_id":"e1a5784963fbfecd8f96cdd5ad8a38e0a4b7e597","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testImportLAR() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Export / Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Import\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_86_importFileName\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_86_importFileName\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\messageboards\\\\Message_Boards-LAR.portlet.lar\"));\n\t\tselenium.click(\"_86_DELETE_PORTLET_DATA\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Import']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","id":53407,"modified_method":"public void testImportLAR() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=M\\u00e9ssag\\u00e9 Boards T\\u00e9st Pag\\u00e9\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Export / Import\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Export / Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Import\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_86_importFileName\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_86_importFileName\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\messageboards\\\\Message_Boards-LAR.portlet.lar\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Import']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","commit_id":"e1a5784963fbfecd8f96cdd5ad8a38e0a4b7e597","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testImportLAR() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Bookmarks Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Configuration']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//img[@alt='Configuration']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Export / Import\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Export / Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Import\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_86_importFileName\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_86_importFileName\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\bookmarks\\\\Bookmarks-LAR.portlet.lar\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Import']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Import']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","id":53408,"modified_method":"public void testImportLAR() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Bookmarks Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Bookmarks Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Export / Import\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Export / Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Import\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_86_importFileName\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_86_importFileName\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\bookmarks\\\\Bookmarks-LAR.portlet.lar\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Import']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Import']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","commit_id":"e1a5784963fbfecd8f96cdd5ad8a38e0a4b7e597","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testMoveThread() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This m\\u00e9ssag\\u00e9 will b\\u00e9 d\\u00e9l\\u00e9t\\u00e9d! \"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Move Thread\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"_19_addExplanationPost\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_19_subject\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_19_subject\", RuntimeVariables.replace(\"Moved to Sujr\"));\n\t\tselenium.type(\"_19_textArea\",\n\t\t\tRuntimeVariables.replace(\"Trust and paths will be straightened.\"));\n\t\tselenium.click(\"//input[@value='Select']\");\n\t\tselenium.waitForPopUp(\"category\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"name=category\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Categories\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Categories\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//input[@value='Choose']\");\n\t\tselenium.selectWindow(\"null\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Sujr\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value=\\\"Move Thread\\\"]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Sujr\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"link=T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This m\\u00e9ssag\\u00e9 will b\\u00e9 d\\u00e9l\\u00e9t\\u00e9d! \"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Trust and paths will be straightened. \"));\n\t\tassertFalse(selenium.isElementPresent(\"link=T\\u00e9st Subcat\\u00e9gory\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=T\\u00e9st Cat\\u00e9gory\"));\n\t}","id":53409,"modified_method":"public void testMoveThread() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=T\\u00e9st Subcat\\u00e9gory\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This m\\u00e9ssag\\u00e9 will b\\u00e9 d\\u00e9l\\u00e9t\\u00e9d! \"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Move Thread\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"_19_addExplanationPost\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_19_subject\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_19_subject\", RuntimeVariables.replace(\"Moved to Sujr\"));\n\t\tselenium.type(\"_19_textArea\",\n\t\t\tRuntimeVariables.replace(\"Trust and paths will be straightened.\"));\n\t\tselenium.click(\"//input[@value='Select']\");\n\t\tselenium.waitForPopUp(\"category\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"category\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Categories\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Categories\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Choose']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='Choose']\");\n\t\tselenium.selectWindow(\"null\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Sujr\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value=\\\"Move Thread\\\"]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Sujr\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"link=T\\u00e9st M\\u00e9ssag\\u00e9 to b\\u00e9 D\\u00e9l\\u00e9t\\u00e9d\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This m\\u00e9ssag\\u00e9 will b\\u00e9 d\\u00e9l\\u00e9t\\u00e9d! \"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Trust and paths will be straightened. \"));\n\t\tassertFalse(selenium.isElementPresent(\"link=T\\u00e9st Subcat\\u00e9gory\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=T\\u00e9st Cat\\u00e9gory\"));\n\t}","commit_id":"e1a5784963fbfecd8f96cdd5ad8a38e0a4b7e597","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testUploadLARFile() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Configuration']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//img[@alt='Configuration']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Export / Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_86_importFileName\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_86_importFileName\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\calendar\\\\Calendar-Selenium.portlet.lar\"));\n\t\tselenium.click(\"_86_PORTLET_ARCHIVED_SETUPSCheckbox\");\n\t\tselenium.click(\"_86_PORTLET_USER_PREFERENCESCheckbox\");\n\t\tselenium.click(\"_86_DELETE_PORTLET_DATA\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Import']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='Import']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Your request processed successfully.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Events\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Edited Test Event\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Off to Yosemite!\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Caedmon's Call Concert!\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":53410,"modified_method":"public void testUploadLARFile() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Calendar Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Calendar Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//body/div[2]/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//body/div[2]/ul/li[3]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_86_importFileName\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_86_importFileName\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\calendar\\\\Calendar-Selenium.portlet.lar\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Import']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//input[@value='Import']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Your request processed successfully.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Events\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Edited Test Event\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Off to Yosemite!\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Caedmon's Call Concert!\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"e1a5784963fbfecd8f96cdd5ad8a38e0a4b7e597","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testUploadLARFile() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Configuration']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//img[@alt='Configuration']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Export / Import\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Export / Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Import\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_86_importFileName\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//li[4]/input[2]\");\n\t\tselenium.type(\"_86_importFileName\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\blogs\\\\Blogs-Selenium.portlet.lar\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Import']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Import']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Return to Full Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Entry\"));\n\t}","id":53411,"modified_method":"public void testUploadLARFile() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Export / Import\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Export / Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Import\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_86_importFileName\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//li[4]/input[2]\");\n\t\tselenium.type(\"_86_importFileName\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\blogs\\\\Blogs-Selenium.portlet.lar\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Import']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Import']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Return to Full Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Entry\"));\n\t}","commit_id":"e1a5784963fbfecd8f96cdd5ad8a38e0a4b7e597","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testUploadLARFile() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Image Gallery Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Configuration']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//img[@alt='Configuration']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Export / Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_86_importFileName\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"_86_DELETE_PORTLET_DATA\");\n\t\tselenium.type(\"_86_importFileName\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\imagegallery\\\\ImageGallery-Selenium.portlet.lar\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Import']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","id":53412,"modified_method":"public void testUploadLARFile() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Image Gallery Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Export / Import\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Export / Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_86_importFileName\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"_86_DELETE_PORTLET_DATA\");\n\t\tselenium.type(\"_86_importFileName\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\imagegallery\\\\ImageGallery-Selenium.portlet.lar\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Import']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","commit_id":"e1a5784963fbfecd8f96cdd5ad8a38e0a4b7e597","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCA_AddPage() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//div/a/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"new_page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"new_page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.type(\"new_page\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.click(\"link=Save\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":53413,"modified_method":"public void testCA_AddPage() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"link=Welcome\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Manage Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@id='_88_layoutsTreeOutput']/ul/li[2]/a/span\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_88_name_en_US\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.type(\"_88_name_en_US\",\n\t\t\tRuntimeVariables.replace(\"Blogs Permissions Page\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Add Page']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"d22ddd9b6d3ed437311bec4c3f65cdad8d24588f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCA_AddPage() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//div/a/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"new_page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"new_page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Permissions Page\"));\n\t\tselenium.type(\"new_page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Permissions Page\"));\n\t\tselenium.click(\"link=Save\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Message Boards Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Message Boards Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":53414,"modified_method":"public void testCA_AddPage() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"link=Welcome\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Manage Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@id='_88_layoutsTreeOutput']/ul/li[2]/a/span\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_88_name_en_US\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Permissions Page\"));\n\t\tselenium.type(\"_88_name_en_US\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Permissions Page\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Add Page']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Message Boards Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"d22ddd9b6d3ed437311bec4c3f65cdad8d24588f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCA_AddPortlet() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Add Application\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id=\\\"Collaboration-Blogs\\\"]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//div[@id=\\\"Collaboration-Blogs\\\"]/p/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//input[@value='Add Blog Entry']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":53415,"modified_method":"public void testCA_AddPortlet() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Application\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id=\\\"Collaboration-Blogs\\\"]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//div[@id=\\\"Collaboration-Blogs\\\"]/p/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//input[@value='Add Blog Entry']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"d22ddd9b6d3ed437311bec4c3f65cdad8d24588f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCA_AddPortlet() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Add Application\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Add Application\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id=\\\"Collaboration-MessageBoards\\\"]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//div[@id=\\\"Collaboration-MessageBoards\\\"]/p/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Add Category']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":53416,"modified_method":"public void testCA_AddPortlet() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Application\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Application\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id=\\\"Collaboration-MessageBoards\\\"]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//div[@id=\\\"Collaboration-MessageBoards\\\"]/p/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//input[@value='Add Category']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"d22ddd9b6d3ed437311bec4c3f65cdad8d24588f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCA_AnnouncementsRoles() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"link=Define Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"add-content-permission\", \"label=Announcements\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.check(\"_128_rowIds\");\n\t\tselenium.check(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.announcements.model.AnnouncementsEntryUPDATE']\");\n\t\tselenium.check(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.announcements.model.AnnouncementsEntryVIEW']\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"The role permissions were updated.\"));\n\t}","id":53417,"modified_method":"public void testCA_AnnouncementsRoles() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"link=Define Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"add-content-permission\", \"label=Announcements\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.check(\"_128_rowIds\");\n\t\tselenium.check(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.announcements.model.AnnouncementsEntryUPDATE']\");\n\t\tselenium.check(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.announcements.model.AnnouncementsEntryVIEW']\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"The role permissions were updated.\"));\n\t\tselenium.select(\"add-application-permission\", \"label=Announcements\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.check(\"_128_rowIds\");\n\t\tselenium.check(\n\t\t\t\"//input[@name='_128_rowIds' and @value='84CONFIGURATION']\");\n\t\tselenium.check(\"//input[@name='_128_rowIds' and @value='84VIEW']\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"The role permissions were updated.\"));\n\t}","commit_id":"d22ddd9b6d3ed437311bec4c3f65cdad8d24588f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCA_AssertAction() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Image Gallery Permissions Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Image Gallery Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Configuration\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Look and Feel\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Export / Import\"));\n\t\tassertTrue(selenium.isElementPresent(\"//img[@alt='Remove']\"));\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Add Folder']\"));\n\t\tselenium.click(\"//td[4]/ul/li/strong\");\n\t\tassertTrue(selenium.isElementPresent(\"//div[4]/ul/li[1]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//div[4]/ul/li[2]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//div[4]/ul/li[3]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Add Subfolder']\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Image Gallery Permissions Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Image Gallery Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=My Images\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"Edited Permissions Image\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Recent Images\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"Edited Permissions Image\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Image Gallery Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Export / Import\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Export / Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Export']\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Import']\"));\n\t}","id":53418,"modified_method":"public void testCA_AssertAction() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Image Gallery Permissions Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Image Gallery Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Configuration\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Look and Feel\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Export / Import\"));\n\t\tassertTrue(selenium.isElementPresent(\"//img[@alt='Remove']\"));\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Add Folder']\"));\n\t\tselenium.click(\"//td[4]/ul/li/strong\");\n\t\tassertTrue(selenium.isElementPresent(\"//div[5]/ul/li[1]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//div[5]/ul/li[2]/a\"));\n\t\tassertTrue(selenium.isElementPresent(\"//div[5]/ul/li[3]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Add Subfolder']\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Image Gallery Permissions Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Image Gallery Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=My Images\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"Edited Permissions Image\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Recent Images\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"Edited Permissions Image\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Image Gallery Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Export / Import\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Export / Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Export']\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Import']\"));\n\t}","commit_id":"d22ddd9b6d3ed437311bec4c3f65cdad8d24588f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCA_AssertActions() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Configuration\"));\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Add Blog Entry']\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Edit\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Permissions\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Delete\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Subscribe to this blog.\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Entry 1\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(\"Edit\", selenium.getText(\"//td[4]/span/a[2]\"));\n\t\tassertEquals(\"Delete\", selenium.getText(\"//td[5]/span/a[2]\"));\n\t}","id":53419,"modified_method":"public void testCA_AssertActions() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Configuration\"));\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Add Blog Entry']\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Edit\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Permissions\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Delete\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Subscribe to this blog.\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Entry 1\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(\"Edit\", selenium.getText(\"//span/a[2]\"));\n\t\tassertEquals(\"Delete\", selenium.getText(\"//td[3]/span/a[2]\"));\n\t}","commit_id":"d22ddd9b6d3ed437311bec4c3f65cdad8d24588f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCA_AssertEditPermissions() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Document Library Permissions Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Document Library Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Submit']\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Document Library Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//td[4]/ul/li/strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[4]/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//div[4]/ul/li[2]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Submit']\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Document Library Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Permissions Edited Test Folder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Permissions Test Subfolder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Permissions\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Submit']\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Edit Permissions for Document Library Document: Admin Permissions Edited Test Document.txt\"));\n\t}","id":53420,"modified_method":"public void testCA_AssertEditPermissions() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Document Library Permissions Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Document Library Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Configuration\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Submit']\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Document Library Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//td[4]/ul/li/strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[5]/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//div[5]/ul/li[2]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Submit']\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Document Library Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Permissions Edited Test Folder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Permissions Test Subfolder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Permissions\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Submit']\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Edit Permissions for Document Library Document: Admin Permissions Edited Test Document.txt\"));\n\t}","commit_id":"d22ddd9b6d3ed437311bec4c3f65cdad8d24588f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCA_DeleteFolder() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Image Gallery Permissions Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Image Gallery Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//tr[4]/td[4]/ul/li/strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[4]/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//div[4]/ul/li[3]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertFalse(selenium.isTextPresent(\"Image Permissions Test Folder 2\"));\n\t}","id":53421,"modified_method":"public void testCA_DeleteFolder() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Image Gallery Permissions Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Image Gallery Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//tr[4]/td[4]/ul/li/strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[5]/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//div[5]/ul/li[3]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertFalse(selenium.isTextPresent(\"Image Permissions Test Folder 2\"));\n\t}","commit_id":"d22ddd9b6d3ed437311bec4c3f65cdad8d24588f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCA_EditFolder() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Image Gallery Permissions Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Image Gallery Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//tr[4]/td[4]/ul/li/strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[4]/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//div[4]/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_31_name\",\n\t\t\tRuntimeVariables.replace(\"Edited Image Permissions Folder 2\"));\n\t\tselenium.type(\"_31_name\",\n\t\t\tRuntimeVariables.replace(\"Edited Image Permissions Folder 2\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Edited Image Permissions Folder 2\"));\n\t}","id":53422,"modified_method":"public void testCA_EditFolder() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Image Gallery Permissions Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Image Gallery Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//tr[4]/td[4]/ul/li/strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[5]/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//div[5]/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_31_name\",\n\t\t\tRuntimeVariables.replace(\"Edited Image Permissions Folder 2\"));\n\t\tselenium.type(\"_31_name\",\n\t\t\tRuntimeVariables.replace(\"Edited Image Permissions Folder 2\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isTextPresent(\"Edited Image Permissions Folder 2\"));\n\t}","commit_id":"d22ddd9b6d3ed437311bec4c3f65cdad8d24588f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCA_EditFolder() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Document Library Permissions Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Document Library Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//td[4]/ul/li/strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[4]/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//div[4]/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_20_name\",\n\t\t\tRuntimeVariables.replace(\"Permissions Edited Test Folder\"));\n\t\tselenium.type(\"_20_name\",\n\t\t\tRuntimeVariables.replace(\"Permissions Edited Test Folder\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"link=Permissions Edited Test Folder\"));\n\t}","id":53423,"modified_method":"public void testCA_EditFolder() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Document Library Permissions Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Document Library Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//td[4]/ul/li/strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[5]/ul/li[1]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//div[5]/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_20_name\",\n\t\t\tRuntimeVariables.replace(\"Permissions Edited Test Folder\"));\n\t\tselenium.type(\"_20_name\",\n\t\t\tRuntimeVariables.replace(\"Permissions Edited Test Folder\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"link=Permissions Edited Test Folder\"));\n\t}","commit_id":"d22ddd9b6d3ed437311bec4c3f65cdad8d24588f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCA_EditPermissions() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Document Library Permissions Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Document Library Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//td[4]/ul/li/strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[4]/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//div[4]/ul/li[2]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.uncheck(\"13_ACTION_VIEW\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Submit']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Document Library Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Permissions Edited Test Folder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Permissions\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.uncheck(\"13_ACTION_VIEW\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Submit']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Document Library Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Permissions Edited Test Folder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Permissions Test Subfolder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Permissions\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.uncheck(\"13_ACTION_VIEW\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Submit']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","id":53424,"modified_method":"public void testCA_EditPermissions() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Document Library Permissions Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Document Library Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//td[4]/ul/li/strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[5]/ul/li[2]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//div[5]/ul/li[2]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.check(\"15_ACTION_VIEW\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Submit']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Document Library Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Permissions Edited Test Folder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Permissions\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.check(\"15_ACTION_VIEW\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Submit']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Document Library Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Permissions Edited Test Folder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Permissions Test Subfolder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Permissions\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.check(\"15_ACTION_VIEW\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Submit']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","commit_id":"d22ddd9b6d3ed437311bec4c3f65cdad8d24588f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCA_RemoveGuestViewFolderPermissions()\n\t\tthrows Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"link=Image Gallery Permissions Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Image Gallery Permissions Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(\"//td[4]/ul/li/strong/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/ul/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//div[4]/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Edit Permissions for Image Gallery Folder: Image Permissions Test Folder\"));\n\n\t\t\t\tboolean AbleToView = selenium.isChecked(\"13_ACTION_VIEW\");\n\n\t\t\t\tif (!AbleToView) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"13_ACTION_VIEW\");\n\n\t\t\tcase 2:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Submit']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":53425,"modified_method":"public void testCA_RemoveGuestViewFolderPermissions()\n\t\tthrows Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"link=Image Gallery Permissions Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Image Gallery Permissions Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(\"//td[4]/ul/li/strong/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[5]/ul/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//div[5]/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Edit Permissions for Image Gallery Folder: Image Permissions Test Folder\"));\n\n\t\t\t\tboolean AbleToView = selenium.isChecked(\"15_ACTION_VIEW\");\n\n\t\t\t\tif (!AbleToView) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"15_ACTION_VIEW\");\n\n\t\t\tcase 2:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Submit']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"d22ddd9b6d3ed437311bec4c3f65cdad8d24588f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCA_RemoveGuestViewImagePermissions()\n\t\tthrows Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"link=Image Gallery Permissions Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Image Gallery Permissions Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//tr[4]/td[1]/a[1]/b\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(\"//img[@alt='Image']\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Permissions\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"link=Permissions\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"13_ACTION_VIEW\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tboolean AbleToView = selenium.isChecked(\"13_ACTION_VIEW\");\n\n\t\t\t\tif (!AbleToView) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"13_ACTION_VIEW\");\n\n\t\t\tcase 2:\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Edit Permissions for Image Gallery Image:\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Submit']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":53426,"modified_method":"public void testCA_RemoveGuestViewImagePermissions()\n\t\tthrows Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"link=Image Gallery Permissions Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Image Gallery Permissions Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//tr[4]/td[1]/a[1]/b\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(\"//img[@alt='Image']\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Permissions\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"link=Permissions\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"15_ACTION_VIEW\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tboolean AbleToView = selenium.isChecked(\"15_ACTION_VIEW\");\n\n\t\t\t\tif (!AbleToView) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"15_ACTION_VIEW\");\n\n\t\t\tcase 2:\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Edit Permissions for Image Gallery Image:\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Submit']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"d22ddd9b6d3ed437311bec4c3f65cdad8d24588f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCA_RemoveGuestViewPortletPermissions()\n\t\tthrows Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"link=Image Gallery Permissions Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Image Gallery Permissions Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Configuration\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Permissions\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean AbleToView = selenium.isChecked(\"13_ACTION_VIEW\");\n\n\t\t\t\tif (!AbleToView) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"13_ACTION_VIEW\");\n\n\t\t\tcase 2:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Submit']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":53427,"modified_method":"public void testCA_RemoveGuestViewPortletPermissions()\n\t\tthrows Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"link=Image Gallery Permissions Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Image Gallery Permissions Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Configuration\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Permissions\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean AbleToView = selenium.isChecked(\"15_ACTION_VIEW\");\n\n\t\t\t\tif (!AbleToView) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"15_ACTION_VIEW\");\n\n\t\t\tcase 2:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Submit']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"d22ddd9b6d3ed437311bec4c3f65cdad8d24588f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCA_RestoreGuestPermissions() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"link=Image Gallery Permissions Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Image Gallery Permissions Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//tr[4]/td[1]/a[1]/b\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(\"//img[@alt='Image']\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Permissions\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"link=Permissions\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"13_ACTION_VIEW\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tboolean GuestCanViewA = selenium.isChecked(\"13_ACTION_VIEW\");\n\n\t\t\t\tif (GuestCanViewA) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"13_ACTION_VIEW\");\n\n\t\t\tcase 2:\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Edit Permissions for Image Gallery Image:\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Submit']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"link=Image Gallery Permissions Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Image Gallery Permissions Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(\"//td[4]/ul/li/strong/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/ul/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//div[4]/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Edit Permissions for Image Gallery Folder: Image Permissions Test Folder\"));\n\n\t\t\t\tboolean GuestCanViewB = selenium.isChecked(\"13_ACTION_VIEW\");\n\n\t\t\t\tif (GuestCanViewB) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"13_ACTION_VIEW\");\n\n\t\t\tcase 3:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Submit']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"link=Image Gallery Permissions Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Image Gallery Permissions Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Configuration\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Permissions\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean GuestCanViewC = selenium.isChecked(\"13_ACTION_VIEW\");\n\n\t\t\t\tif (GuestCanViewC) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"13_ACTION_VIEW\");\n\n\t\t\tcase 4:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Submit']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":53428,"modified_method":"public void testCA_RestoreGuestPermissions() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"link=Image Gallery Permissions Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Image Gallery Permissions Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//tr[4]/td[1]/a[1]/b\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(\"//img[@alt='Image']\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Permissions\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"link=Permissions\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"15_ACTION_VIEW\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tboolean GuestCanViewA = selenium.isChecked(\"15_ACTION_VIEW\");\n\n\t\t\t\tif (GuestCanViewA) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"15_ACTION_VIEW\");\n\n\t\t\tcase 2:\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Edit Permissions for Image Gallery Image:\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Submit']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"link=Image Gallery Permissions Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Image Gallery Permissions Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(\"//td[4]/ul/li/strong/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[5]/ul/li[2]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//div[5]/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Edit Permissions for Image Gallery Folder: Image Permissions Test Folder\"));\n\n\t\t\t\tboolean GuestCanViewB = selenium.isChecked(\"15_ACTION_VIEW\");\n\n\t\t\t\tif (GuestCanViewB) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"15_ACTION_VIEW\");\n\n\t\t\tcase 3:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Submit']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"link=Image Gallery Permissions Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Image Gallery Permissions Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Configuration\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Permissions\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean GuestCanViewC = selenium.isChecked(\"15_ACTION_VIEW\");\n\n\t\t\t\tif (GuestCanViewC) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"15_ACTION_VIEW\");\n\n\t\t\tcase 4:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Submit']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\t\t\"Your request processed successfully.\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"d22ddd9b6d3ed437311bec4c3f65cdad8d24588f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testControlPanel() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//li[4]/ul/li[1]/a[1]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//li[4]/ul/li[1]/a[1]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":53429,"modified_method":"public void testControlPanel() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Guest\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Guest\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"d22ddd9b6d3ed437311bec4c3f65cdad8d24588f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDefineCARoles() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"link=Roles\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//tr[4]/td[4]/ul/li/strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//body/div[2]/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//body/div[2]/ul/li[3]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"add-portal-permission\"));\n\t\tassertTrue(selenium.isTextPresent(\"add-content-permission\"));\n\t\tassertTrue(selenium.isTextPresent(\"add-application-permission\"));\n\t\tassertTrue(selenium.isTextPresent(\"Community Admin\"));\n\t}","id":53430,"modified_method":"public void testDefineCARoles() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"link=Roles\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//tr[4]/td[4]/ul/li/strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//body/div[2]/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//body/div[2]/ul/li[3]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"Add Portal Permission\"));\n\t\tassertTrue(selenium.isTextPresent(\"Add Content Permission\"));\n\t\tassertTrue(selenium.isTextPresent(\"Add Application Permission\"));\n\t\tassertTrue(selenium.isTextPresent(\"Community Admin\"));\n\t}","commit_id":"d22ddd9b6d3ed437311bec4c3f65cdad8d24588f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDefineMemberRoles() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"link=Roles\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//tr[9]/td[4]/ul/li/strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//body/div[2]/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//body/div[2]/ul/li[3]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"add-portal-permission\"));\n\t\tassertTrue(selenium.isTextPresent(\"add-content-permission\"));\n\t\tassertTrue(selenium.isTextPresent(\"add-application-permission\"));\n\t\tassertTrue(selenium.isTextPresent(\"Member\"));\n\t}","id":53431,"modified_method":"public void testDefineMemberRoles() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"link=Roles\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//tr[9]/td[4]/ul/li/strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//body/div[2]/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//body/div[2]/ul/li[3]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"Add Portal Permission\"));\n\t\tassertTrue(selenium.isTextPresent(\"Add Content Permission\"));\n\t\tassertTrue(selenium.isTextPresent(\"Add Application Permission\"));\n\t\tassertTrue(selenium.isTextPresent(\"Member\"));\n\t}","commit_id":"d22ddd9b6d3ed437311bec4c3f65cdad8d24588f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDefinePublisherRoles() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"link=Roles\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//tr[15]/td[4]/ul/li/strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//body/div[2]/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//body/div[2]/ul/li[3]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"add-portal-permission\"));\n\t\tassertTrue(selenium.isTextPresent(\"add-content-permission\"));\n\t\tassertTrue(selenium.isTextPresent(\"add-application-permission\"));\n\t\tassertTrue(selenium.isTextPresent(\"Publisher\"));\n\t}","id":53432,"modified_method":"public void testDefinePublisherRoles() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"link=Roles\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//tr[15]/td[4]/ul/li/strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//body/div[2]/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//body/div[2]/ul/li[3]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"Add Portal Permission\"));\n\t\tassertTrue(selenium.isTextPresent(\"Add Content Permission\"));\n\t\tassertTrue(selenium.isTextPresent(\"Add Application Permission\"));\n\t\tassertTrue(selenium.isTextPresent(\"Publisher\"));\n\t}","commit_id":"d22ddd9b6d3ed437311bec4c3f65cdad8d24588f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDefineWriterRoles() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"link=Roles\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//tr[17]/td[4]/ul/li/strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//body/div[2]/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//body/div[2]/ul/li[3]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"add-portal-permission\"));\n\t\tassertTrue(selenium.isTextPresent(\"add-content-permission\"));\n\t\tassertTrue(selenium.isTextPresent(\"add-application-permission\"));\n\t\tassertTrue(selenium.isTextPresent(\"Writer\"));\n\t}","id":53433,"modified_method":"public void testDefineWriterRoles() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"link=Roles\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//tr[17]/td[4]/ul/li/strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//body/div[2]/ul/li[3]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//body/div[2]/ul/li[3]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"Add Portal Permission\"));\n\t\tassertTrue(selenium.isTextPresent(\"Add Content Permission\"));\n\t\tassertTrue(selenium.isTextPresent(\"Add Application Permission\"));\n\t\tassertTrue(selenium.isTextPresent(\"Writer\"));\n\t}","commit_id":"d22ddd9b6d3ed437311bec4c3f65cdad8d24588f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeletePage() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"link=Welcome\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_58_login\", RuntimeVariables.replace(\"test@liferay.com\"));\n\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Sign In']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Manage Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div/ul/li[2]/ul/li[2]/a/span\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Delete']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Sign Out\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":53434,"modified_method":"public void testDeletePage() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"link=Welcome\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_58_login\", RuntimeVariables.replace(\"test@liferay.com\"));\n\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Sign In']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Manage Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@id='_88_layoutsTreeOutput']/ul/li[2]/ul/li[2]/a/span\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//li[@id='_88_tabs3pageTabsId']/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Delete']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Return to Full Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Sign Out\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"d22ddd9b6d3ed437311bec4c3f65cdad8d24588f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGuest_AssertAction() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Image Gallery Permissions Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Image Gallery Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\"link=Configuration\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Look and Feel\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Export / Import\"));\n\t\tassertFalse(selenium.isElementPresent(\"//img[@alt='Remove']\"));\n\t\tassertFalse(selenium.isElementPresent(\"//input[@value='Add Folder']\"));\n\t\tassertFalse(selenium.isElementPresent(\"//div[4]/ul/li[1]/a\"));\n\t\tassertFalse(selenium.isElementPresent(\"//div[4]/ul/li[2]/a\"));\n\t\tassertFalse(selenium.isElementPresent(\"//div[4]/ul/li[3]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\"//input[@value='Add Subfolder']\"));\n\t\tassertFalse(selenium.isElementPresent(\"//input[@value='Add Image']\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Image Gallery Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Recent Images\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"Second Permissions Image Test\"));\n\t}","id":53435,"modified_method":"public void testGuest_AssertAction() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Image Gallery Permissions Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Image Gallery Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\"link=Configuration\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Look and Feel\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Export / Import\"));\n\t\tassertFalse(selenium.isElementPresent(\"//img[@alt='Remove']\"));\n\t\tassertFalse(selenium.isElementPresent(\"//input[@value='Add Folder']\"));\n\t\tassertFalse(selenium.isElementPresent(\"//div[5]/ul/li[1]/a\"));\n\t\tassertFalse(selenium.isElementPresent(\"//div[5]/ul/li[2]/a\"));\n\t\tassertFalse(selenium.isElementPresent(\"//div[5]/ul/li[3]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\"//input[@value='Add Subfolder']\"));\n\t\tassertFalse(selenium.isElementPresent(\"//input[@value='Add Image']\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Image Gallery Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Recent Images\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"Second Permissions Image Test\"));\n\t}","commit_id":"d22ddd9b6d3ed437311bec4c3f65cdad8d24588f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGuest_AssertCannotAddFolders() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Document Library Permissions Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Document Library Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\"//input[@value='Add Folder']\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Permissions2 Test2 Folder2\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\"//input[@value='Add Subfolder']\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Permissions2 Test2 Subfolder2\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\"//input[@value='Add Subfolder']\"));\n\t}","id":53436,"modified_method":"public void testGuest_AssertCannotAddFolders() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Document Library Permissions Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Document Library Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\"//input[@value='Add Folder']\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Permissions Edited Test Folder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\"//input[@value='Add Subfolder']\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Permissions Test Subfolder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\"//input[@value='Add Subfolder']\"));\n\t}","commit_id":"d22ddd9b6d3ed437311bec4c3f65cdad8d24588f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGuest_AssertCannotEditDocuments() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Document Library Permissions Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Document Library Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Permissions2 Test2 Folder2\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Permissions2 Test2 Subfolder2\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\"link=Edit\"));\n\t\tassertFalse(selenium.isElementPresent(\"//strong/span\"));\n\t}","id":53437,"modified_method":"public void testGuest_AssertCannotEditDocuments() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Document Library Permissions Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Document Library Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Permissions Edited Test Folder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Permissions Test Subfolder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\"link=Edit\"));\n\t\tassertFalse(selenium.isElementPresent(\"//strong/span\"));\n\t}","commit_id":"d22ddd9b6d3ed437311bec4c3f65cdad8d24588f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGuest_AssertCannotViewDocument() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Document Library Permissions Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Document Library Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=My Documents\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Admin Permissions Edited Test Document.txt\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"Forbidden\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You do not have permission to access the requested resource\"));\n\t}","id":53438,"modified_method":"public void testGuest_AssertCannotViewDocument() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Document Library Permissions Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Document Library Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=My Documents\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Member Permissions Edited Test Document.txt\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"Forbidden\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You do not have permission to access the requested resource\"));\n\t}","commit_id":"d22ddd9b6d3ed437311bec4c3f65cdad8d24588f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGuest_AssertCannotViewFolder() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Document Library Permissions Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Document Library Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Permissions Edited Test Folder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You do not have the required permissions.\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Document Library Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Permissions Test Subfolder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You do not have the required permissions.\"));\n\t}","id":53439,"modified_method":"public void testGuest_AssertCannotViewFolder() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Document Library Permissions Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Document Library Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Permissions2 Test2 Folder2\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You do not have the required permissions.\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Document Library Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Permissions2 Test2 Subfolder2\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"You do not have the required permissions.\"));\n\t}","commit_id":"d22ddd9b6d3ed437311bec4c3f65cdad8d24588f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGuest_AssertNotSignedIn() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Welcome\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Welcome\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_58_login\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isElementPresent(\"link=Sign In\"));\n\t\tassertTrue(selenium.isTextPresent(\"Welcome!\"));\n\t}","id":53440,"modified_method":"public void testGuest_AssertNotSignedIn() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Welcome\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Welcome\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_58_login\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tassertTrue(selenium.isElementPresent(\"link=Sign In\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Welcome to Liferay Portal Standard Edition 5.3.0\"));\n\t}","commit_id":"d22ddd9b6d3ed437311bec4c3f65cdad8d24588f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGuest_AssertViewDocuments() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Document Library Permissions Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Document Library Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=My Documents\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"link=Member Permissions Edited Test Document.txt\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"link=Admin Permissions Edited Test Document.txt\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Recent Documents\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"link=Member Permissions Edited Test Document.txt\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"link=Admin Permissions Edited Test Document.txt\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=View\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=TXT\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"link=Member Permissions Edited Test Document.txt\"));\n\t}","id":53441,"modified_method":"public void testGuest_AssertViewDocuments() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Document Library Permissions Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Document Library Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=My Documents\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"link=Member Permissions Edited Test Document.txt\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"link=Admin Permissions Edited Test Document.txt\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Recent Documents\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"link=Member Permissions Edited Test Document.txt\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"link=Admin Permissions Edited Test Document.txt\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=View\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=TXT\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"link=Admin Permissions Edited Test Document.txt\"));\n\t}","commit_id":"d22ddd9b6d3ed437311bec4c3f65cdad8d24588f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGuest_AssertViewFolders() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Document Library Permissions Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Document Library Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"link=Permissions Edited Test Folder\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Permissions Test Subfolder\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Permissions2 Test2 Folder2\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"link=Permissions2 Test2 Subfolder2\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Permissions2 Test2 Folder2\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"link=Permissions2 Test2 Subfolder2\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Permissions2 Test2 Subfolder2\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"link=Member Permissions Edited Test Document.txt\"));\n\t}","id":53442,"modified_method":"public void testGuest_AssertViewFolders() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Document Library Permissions Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Document Library Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"link=Permissions Edited Test Folder\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Permissions Test Subfolder\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Permissions2 Test2 Folder2\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"link=Permissions2 Test2 Subfolder2\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Permissions Edited Test Folder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Permissions Test Subfolder\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Permissions Test Subfolder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"link=Admin Permissions Edited Test Document.txt\"));\n\t}","commit_id":"d22ddd9b6d3ed437311bec4c3f65cdad8d24588f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGuest_SearchPortlet() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Document Library Permissions Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Document Library Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_20_keywords1\", RuntimeVariables.replace(\"Member\"));\n\t\tselenium.type(\"_20_keywords1\", RuntimeVariables.replace(\"Member\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Search Folders']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"link=Member Permissions Edited Test Document\"));\n\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\"link=Admin Permissions Edited Test Document\"));\n\t}","id":53443,"modified_method":"public void testGuest_SearchPortlet() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Document Library Permissions Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Document Library Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_20_keywords1\", RuntimeVariables.replace(\"Admin\"));\n\t\tselenium.type(\"_20_keywords1\", RuntimeVariables.replace(\"Admin\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//input[@value='Search Folders']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"link=Admin Permissions Edited Test Document\"));\n\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\"link=Member Permissions Edited Test Document\"));\n\t}","commit_id":"d22ddd9b6d3ed437311bec4c3f65cdad8d24588f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGuest_ViewComments() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Entry 1\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"Test Comment 1\"));\n\t\tassertTrue(selenium.isTextPresent(\"Member Comment Test\"));\n\t}","id":53444,"modified_method":"public void testGuest_ViewComments() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Blogs Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Blogs Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Entry 1\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"Test Entry 1\"));\n\t\tassertTrue(selenium.isTextPresent(\"Member Comment Test\"));\n\t}","commit_id":"d22ddd9b6d3ed437311bec4c3f65cdad8d24588f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testMember_AnnouncementsRoles() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"link=Define Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"add-content-permission\", \"label=Announcements\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.check(\"_128_rowIds\");\n\t\tselenium.check(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.announcements.model.AnnouncementsEntryUPDATE']\");\n\t\tselenium.check(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.announcements.model.AnnouncementsEntryVIEW']\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"The role permissions were updated.\"));\n\t}","id":53445,"modified_method":"public void testMember_AnnouncementsRoles() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"link=Define Permissions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"add-content-permission\", \"label=Announcements\");\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.uncheck(\"_128_rowIds\");\n\t\tselenium.uncheck(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.announcements.model.AnnouncementsEntryUPDATE']\");\n\t\tselenium.check(\n\t\t\t\"//input[@name='_128_rowIds' and @value='com.liferay.portlet.announcements.model.AnnouncementsEntryVIEW']\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"The role permissions were updated.\"));\n\t}","commit_id":"d22ddd9b6d3ed437311bec4c3f65cdad8d24588f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testMember_AssertAction() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Image Gallery Permissions Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Image Gallery Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\"link=Configuration\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Look and Feel\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Export / Import\"));\n\t\tassertFalse(selenium.isElementPresent(\"//img[@alt='Remove']\"));\n\t\tassertFalse(selenium.isElementPresent(\"//input[@value='Add Folder']\"));\n\t\tassertFalse(selenium.isElementPresent(\"//div[4]/ul/li[1]/a\"));\n\t\tassertFalse(selenium.isElementPresent(\"//div[4]/ul/li[2]/a\"));\n\t\tassertFalse(selenium.isElementPresent(\"//div[4]/ul/li[3]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\"//input[@value='Add Subfolder']\"));\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Add Image']\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Image Gallery Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=My Images\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"Edited Third Permissions Image\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Recent Images\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"Second Permissions Image Test\"));\n\t\tassertTrue(selenium.isTextPresent(\"Edited Third Permissions Image\"));\n\t}","id":53446,"modified_method":"public void testMember_AssertAction() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Image Gallery Permissions Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Image Gallery Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\"link=Configuration\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Look and Feel\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Export / Import\"));\n\t\tassertFalse(selenium.isElementPresent(\"//img[@alt='Remove']\"));\n\t\tassertFalse(selenium.isElementPresent(\"//input[@value='Add Folder']\"));\n\t\tassertFalse(selenium.isElementPresent(\"//div[5]/ul/li[1]/a\"));\n\t\tassertFalse(selenium.isElementPresent(\"//div[5]/ul/li[2]/a\"));\n\t\tassertFalse(selenium.isElementPresent(\"//div[5]/ul/li[3]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\"//input[@value='Add Subfolder']\"));\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Add Image']\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Image Gallery Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=My Images\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"Edited Third Permissions Image\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Recent Images\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"Second Permissions Image Test\"));\n\t\tassertTrue(selenium.isTextPresent(\"Edited Third Permissions Image\"));\n\t}","commit_id":"d22ddd9b6d3ed437311bec4c3f65cdad8d24588f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testMember_AssertCannotDeleteFolders()\n\t\tthrows Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Document Library Permissions Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Document Library Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\"link=Delete\"));\n\t\tassertFalse(selenium.isElementPresent(\"//td[4]/ul/li/strong/span\"));\n\t\tassertFalse(selenium.isElementPresent(\"//div[2]/ul/li[3]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Permissions2 Test2 Folder2\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\"//strong/span\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Delete\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Document Library Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Permissions Edited Test Folder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\"//strong/span\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Delete\"));\n\t}","id":53447,"modified_method":"public void testMember_AssertCannotDeleteFolders()\n\t\tthrows Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Document Library Permissions Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Document Library Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\"//tr[4]/td[4]/ul/li/strong/span\"));\n\t\tassertFalse(selenium.isElementPresent(\"//td[4]/ul/li/strong/span\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Delete\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Permissions2 Test2 Folder2\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\"//strong/span\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Delete\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Document Library Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Permissions Edited Test Folder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isElementPresent(\"//strong/span\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Delete\"));\n\t}","commit_id":"d22ddd9b6d3ed437311bec4c3f65cdad8d24588f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testMember_Login() throws Exception {\n\t\tselenium.type(\"_58_login\",\n\t\t\tRuntimeVariables.replace(\"member@liferay.com\"));\n\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Sign In']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Message Boards Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Categories\"));\n\t}","id":53448,"modified_method":"public void testMember_Login() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"link=Welcome\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"_58_login\",\n\t\t\tRuntimeVariables.replace(\"member@liferay.com\"));\n\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Sign In']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Message Boards Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"link=Categories\"));\n\t}","commit_id":"d22ddd9b6d3ed437311bec4c3f65cdad8d24588f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSA_AddPage() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//div/a/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"new_page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"new_page\",\n\t\t\tRuntimeVariables.replace(\"Announcements Permissions Page\"));\n\t\tselenium.type(\"new_page\",\n\t\t\tRuntimeVariables.replace(\"Announcements Permissions Page\"));\n\t\tselenium.click(\"link=Save\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Announcements Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Announcements Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":53449,"modified_method":"public void testSA_AddPage() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Welcome\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Welcome\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Manage Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@id='_88_layoutsTreeOutput']/ul/li[2]/a/span\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_88_name_en_US\",\n\t\t\tRuntimeVariables.replace(\"Announcements Permissions Page\"));\n\t\tselenium.type(\"_88_name_en_US\",\n\t\t\tRuntimeVariables.replace(\"Announcements Permissions Page\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Add Page']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Announcements Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","commit_id":"d22ddd9b6d3ed437311bec4c3f65cdad8d24588f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSA_AddPortlet() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Announcements Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Announcements Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Add Application\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Add Application\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id=\\\"News-Announcements\\\"]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//div[@id=\\\"News-Announcements\\\"]/p/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Entries\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":53450,"modified_method":"public void testSA_AddPortlet() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Announcements Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Announcements Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Application\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Application\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id=\\\"News-Announcements\\\"]\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//div[@id=\\\"News-Announcements\\\"]/p/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Entries\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"d22ddd9b6d3ed437311bec4c3f65cdad8d24588f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSA_Setup() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//div[@id='add-page']/a/span\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//div[@id='add-page']/a/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"new_page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"new_page\",\n\t\t\tRuntimeVariables.replace(\"Document Library Permissions Test Page\"));\n\t\tselenium.type(\"new_page\",\n\t\t\tRuntimeVariables.replace(\"Document Library Permissions Test Page\"));\n\t\tselenium.click(\"link=Save\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Document Library Permissions Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Document Library Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Add Application\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id='ContentManagement-DocumentLibrary']/p\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//div[@id='ContentManagement-DocumentLibrary']/p/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Configuration']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":53451,"modified_method":"public void testSA_Setup() throws Exception {\n\t\tselenium.click(RuntimeVariables.replace(\"link=Welcome\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Manage Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@id='_88_layoutsTreeOutput']/ul/li[2]/a/span\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.typeKeys(\"_88_name_en_US\",\n\t\t\tRuntimeVariables.replace(\"Document Librar Permissions Test Page\"));\n\t\tselenium.type(\"_88_name_en_US\",\n\t\t\tRuntimeVariables.replace(\"Document Library Permissions Test Page\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Add Page']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Document Library Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Application\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id='ContentManagement-DocumentLibrary']/p\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//div[@id='ContentManagement-DocumentLibrary']/p/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Configuration']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"d22ddd9b6d3ed437311bec4c3f65cdad8d24588f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSA_Setup() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Welcome\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Welcome\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//div[@id='add-page']/a/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"new_page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"new_page\",\n\t\t\tRuntimeVariables.replace(\"Image Gallery Permissions Test Page\"));\n\t\tselenium.type(\"new_page\",\n\t\t\tRuntimeVariables.replace(\"Image Gallery Permissions Test Page\"));\n\t\tselenium.click(\"link=Save\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Image Gallery Permissions Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Image Gallery Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Add Application\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id='ContentManagement-ImageGallery']/p\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//div[@id='ContentManagement-ImageGallery']/p/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Configuration']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","id":53452,"modified_method":"public void testSA_Setup() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Welcome\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Welcome\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Manage Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@id='_88_layoutsTreeOutput']/ul/li[2]/a/span\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_88_name_en_US\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.typeKeys(\"_88_name_en_US\",\n\t\t\tRuntimeVariables.replace(\"Image Gallery Permissions Test Page\"));\n\t\tselenium.type(\"_88_name_en_US\",\n\t\t\tRuntimeVariables.replace(\"Image Gallery Permissions Test Page\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Add Page']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"link=Image Gallery Permissions Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"link=Image Gallery Permissions Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"link=Application\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@id='ContentManagement-ImageGallery']/p\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"//div[@id='ContentManagement-ImageGallery']/p/a\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"//img[@alt='Configuration']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\t}","commit_id":"d22ddd9b6d3ed437311bec4c3f65cdad8d24588f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSA_TearDown() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"link=Document Library Permissions Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Document Library Permissions Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean DLFoldersNotPresent1 = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/ul/li/strong/span\");\n\n\t\t\t\tif (!DLFoldersNotPresent1) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"//td[4]/ul/li/strong/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//div[4]/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean DLFoldersNotPresent2 = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/ul/li/strong/span\");\n\n\t\t\t\tif (!DLFoldersNotPresent2) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"//td[4]/ul/li/strong/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[4]/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//div[4]/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 3:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Document Library Permissions Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to remove this component[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Welcome\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Manage Pages\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div/ul/li[2]/ul/li[2]/a/span\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Welcome\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":53453,"modified_method":"public void testSA_TearDown() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"link=Document Library Permissions Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Document Library Permissions Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean DLFoldersNotPresent1 = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/ul/li/strong/span\");\n\n\t\t\t\tif (!DLFoldersNotPresent1) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"//td[4]/ul/li/strong/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[5]/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//div[5]/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean DLFoldersNotPresent2 = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/ul/li/strong/span\");\n\n\t\t\t\tif (!DLFoldersNotPresent2) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"//td[4]/ul/li/strong/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"//div[5]/ul/li[3]/a\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"//div[5]/ul/li[3]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 3:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Document Library Permissions Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to remove this component[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Welcome\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Manage Pages\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@id='_88_layoutsTreeOutput']/ul/li[2]/ul/li[2]/a/span\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//li[@id='_88_tabs3pageTabsId']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Return to Full Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"d22ddd9b6d3ed437311bec4c3f65cdad8d24588f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSA_TearDown() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Welcome\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Welcome\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.typeKeys(\"_58_login\",\n\t\t\t\t\tRuntimeVariables.replace(\"test@lifera.com\"));\n\t\t\t\tselenium.type(\"_58_login\",\n\t\t\t\t\tRuntimeVariables.replace(\"test@liferay.com\"));\n\t\t\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Sign In']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Announcements Permissions Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Manage Entries\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.select(\"_84_distributionScope\", \"label=Guest\");\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean GuestAnnouncementPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//strong/span\");\n\n\t\t\t\tif (!GuestAnnouncementPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"//strong/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Delete\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.select(\"_84_distributionScope\", \"label=General\");\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean GeneralAnnouncementPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//strong/span\");\n\n\t\t\t\tif (!GeneralAnnouncementPresent) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"//strong/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Delete\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 3:\n\t\t\t\tselenium.select(\"_84_distributionScope\", \"label=Community Admin\");\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean CAAnnouncementPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//strong/span\");\n\n\t\t\t\tif (!CAAnnouncementPresent) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"//strong/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Delete\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 4:\n\t\t\t\tselenium.select(\"_84_distributionScope\", \"label=Member\");\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean MemberAnnouncementPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//strong/span\");\n\n\t\t\t\tif (!MemberAnnouncementPresent) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"//strong/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Delete\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 5:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Announcements Permissions Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to remove this component[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Welcome\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Manage Pages\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div/ul/li[2]/ul/li[2]/a/span\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Welcome\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Sign Out\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"_58_login\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":53454,"modified_method":"public void testSA_TearDown() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Welcome\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Welcome\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.typeKeys(\"_58_login\",\n\t\t\t\t\tRuntimeVariables.replace(\"test@lifera.com\"));\n\t\t\t\tselenium.type(\"_58_login\",\n\t\t\t\t\tRuntimeVariables.replace(\"test@liferay.com\"));\n\t\t\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Sign In']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Announcements Permissions Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Manage Entries\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.select(\"_84_distributionScope\", \"label=Guest\");\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean GuestAnnouncementPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//strong/span\");\n\n\t\t\t\tif (!GuestAnnouncementPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"//strong/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Delete\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.select(\"_84_distributionScope\", \"label=General\");\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean GeneralAnnouncementPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//strong/span\");\n\n\t\t\t\tif (!GeneralAnnouncementPresent) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"//strong/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Delete\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 3:\n\t\t\t\tselenium.select(\"_84_distributionScope\", \"label=Community Admin\");\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean CAAnnouncementPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//strong/span\");\n\n\t\t\t\tif (!CAAnnouncementPresent) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"//strong/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Delete\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 4:\n\t\t\t\tselenium.select(\"_84_distributionScope\", \"label=Member\");\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean MemberAnnouncementPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//strong/span\");\n\n\t\t\t\tif (!MemberAnnouncementPresent) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"//strong/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Delete\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 5:\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Announcements Permissions Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to remove this component[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Welcome\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Manage Pages\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@id='_88_layoutsTreeOutput']/ul/li[2]/ul/li[2]/a/span\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//li[@id='_88_tabs3pageTabsId']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Return to Full Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Sign Out\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"_58_login\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"d22ddd9b6d3ed437311bec4c3f65cdad8d24588f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSA_TearDown() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"link=Image Gallery Permissions Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Image Gallery Permissions Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean FolderPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/ul/li/strong/span\");\n\n\t\t\t\tif (!FolderPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"//td[4]/ul/li/strong/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Delete\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to remove this component[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Welcome\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Manage Pages\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div/ul/li[2]/ul/li[2]/a/span\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Welcome\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":53455,"modified_method":"public void testSA_TearDown() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"link=Image Gallery Permissions Test Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Image Gallery Permissions Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean FolderPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[4]/ul/li/strong/span\");\n\n\t\t\t\tif (!FolderPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(\"//td[4]/ul/li/strong/span\");\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\"link=Delete\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to remove this component[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Welcome\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Manage Pages\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@id='_88_layoutsTreeOutput']/ul/li[2]/ul/li[2]/a/span\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//li[@id='_88_tabs3pageTabsId']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Return to Full Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"d22ddd9b6d3ed437311bec4c3f65cdad8d24588f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSA_TearDown() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"link=Blogs Permissions Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Blogs Permissions Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean EntryPresent = selenium.isElementPresent(\"link=Delete\");\n\n\t\t\t\tif (!EntryPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to remove this component[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Welcome\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Manage Pages\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div/ul/li[2]/ul/li[2]/a/span\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Return to Full Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":53456,"modified_method":"public void testSA_TearDown() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\n\t\t\t\tfor (int second = 0;; second++) {\n\t\t\t\t\tif (second >= 60) {\n\t\t\t\t\t\tfail(\"timeout\");\n\t\t\t\t\t}\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\t\t\"link=Blogs Permissions Page\")) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (Exception e) {\n\t\t\t\t\t}\n\n\t\t\t\t\tThread.sleep(1000);\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Blogs Permissions Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean EntryPresent = selenium.isElementPresent(\"link=Delete\");\n\n\t\t\t\tif (!EntryPresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\n\t\t\tcase 2:\n\t\t\t\tselenium.click(\"//img[@alt='Remove']\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to remove this component[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Welcome\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\"link=Manage Pages\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@id='_88_layoutsTreeOutput']/ul/li[2]/ul/li[2]/a/span\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//li[@id='_88_tabs3pageTabsId']/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//input[@value='Delete']\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete the selected page[\\\\s\\\\S]$\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"link=Return to Full Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"d22ddd9b6d3ed437311bec4c3f65cdad8d24588f","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n     * Sets the default locale (see {@see Locale#setDefault(Locale)} to the local\n     * given by <code>localName<\/code>.\n     *\n     * Ignored if localName is null. If the locale with name <code>localName<\/code>\n     * isn't found the default local is set to <tt>en<\/tt> (english).\n     *\n     * @param localeName the locale name. Ignored if null.\n     */\n    public static void set(String localeName){\n        if (localeName != null) {\n            Locale l;\n            if (localeName.equals(\"he\")) {\n                localeName = \"iw_IL\";\n            }\n            int i = localeName.indexOf('_');\n            if (i > 0) {\n                l = new Locale(localeName.substring(0, i), localeName.substring(i + 1));\n            } else {\n                l = new Locale(localeName);\n            }\n            if(load(localeName)) {\n                Locale.setDefault(l);\n            } else {\n                if (!l.getLanguage().equals(\"en\")) {\n                    System.out.println(tr(\"Unable to find translation for the locale {0}. Reverting to {1}.\",\n                            l.getDisplayName(), Locale.getDefault().getDisplayName()));\n                } else {\n                    strings = null;\n                    pstrings = null;\n                }\n            }\n        }\n    }","id":53457,"modified_method":"/**\n     * Sets the default locale (see {@see Locale#setDefault(Locale)} to the local\n     * given by <code>localName<\/code>.\n     *\n     * Ignored if localName is null. If the locale with name <code>localName<\/code>\n     * isn't found the default local is set to <tt>en<\/tt> (english).\n     *\n     * @param localeName the locale name. Ignored if null.\n     */\n    public static void set(String localeName){\n        if (localeName != null) {\n            Locale l;\n            if (localeName.equals(\"he\")) {\n                localeName = \"iw_IL\";\n            }\n            int i = localeName.indexOf('_');\n            if (i > 0) {\n                l = new Locale(localeName.substring(0, i), localeName.substring(i + 1));\n            } else {\n                l = new Locale(localeName);\n            }\n            if (load(localeName)) {\n                Locale.setDefault(l);\n                \n                // localization for file chooser dialog\n                JFileChooser.setDefaultLocale(l);\n                for (String key : fileChooserDialogStringKeys) {\n                    String us = UIManager.getString(key, Locale.US);\n                    String loc = UIManager.getString(key, l);\n                    // only provide custom translation if it is not already localized by Java\n                    if (us.equals(loc)) {\n                        UIManager.put(key, tr(us));\n                    }\n                }\n            } else {\n                if (!l.getLanguage().equals(\"en\")) {\n                    System.out.println(tr(\"Unable to find translation for the locale {0}. Reverting to {1}.\",\n                            l.getDisplayName(), Locale.getDefault().getDisplayName()));\n                } else {\n                    strings = null;\n                    pstrings = null;\n                }\n            }\n        }\n    }","commit_id":"8ef305e70c82963d931c666b9914ba94d590d7e4","url":"https://github.com/openstreetmap/josm"},{"original_method":"/**\n     * Create an <code>Exception<\/code> message if a file is duplicate.\n     *\n     * @param duplicate a map of duplicate files\n     * @param locale the current locale\n     * @return the Message to throw\n     */\n    private String createDuplicateExceptionMsg( Map duplicate, Locale locale )\n    {\n        if ( duplicate.size() > 0 )\n        {\n            StringBuffer sb = null;\n\n            for ( Iterator it = duplicate.entrySet().iterator(); it.hasNext(); )\n            {\n                Map.Entry entry = (Map.Entry) it.next();\n                Collection values = (Collection) entry.getValue();\n\n                if ( values.size() > 1 )\n                {\n                    if ( sb == null )\n                    {\n                        sb = new StringBuffer(\n                            \"Some files are duplicates in the site directory or in the generated-site directory. \" );\n                        sb.append( \"\\n\" );\n                        sb.append(\n                            \"Review the following files for the \\\"\" + getDisplayLanguage( locale ) + \"\\\" version:\" );\n                    }\n\n                    sb.append( \"\\n\" );\n                    sb.append( entry.getKey() );\n                    sb.append( \"\\n\" );\n\n                    for ( Iterator it2 = values.iterator(); it2.hasNext(); )\n                    {\n                        String current = (String) it2.next();\n\n                        sb.append( \"\\t\" );\n                        sb.append( current );\n\n                        if ( it2.hasNext() )\n                        {\n                            sb.append( \"\\n\" );\n                        }\n                    }\n                }\n            }\n\n            if ( sb != null )\n            {\n                return sb.toString();\n            }\n        }\n\n        return null;\n    }","id":53458,"modified_method":"/**\n     * Create an <code>Exception<\/code> message if a file is duplicate.\n     *\n     * @param duplicate a map of duplicate files\n     * @param locale the current locale\n     * @return the Message to throw\n     */\n    private String createDuplicateExceptionMsg( Map duplicate, Locale locale )\n    {\n        if ( duplicate.size() > 0 )\n        {\n            StringBuffer sb = null;\n\n            for ( Iterator it = duplicate.entrySet().iterator(); it.hasNext(); )\n            {\n                Map.Entry entry = (Map.Entry) it.next();\n                Collection values = (Collection) entry.getValue();\n\n                if ( values.size() > 1 )\n                {\n                    if ( sb == null )\n                    {\n                        sb = new StringBuffer(\n                            \"Some files are duplicates in the site directory or in the generated-site directory. \" );\n                        sb.append( \"\\n\" );\n                        sb.append( \"Review the following files for the \\\"\" );\n                        sb.append( locale.getDisplayLanguage( Locale.ENGLISH ) );\n                        sb.append( \"\\\" version:\" );\n                    }\n\n                    sb.append( \"\\n\" );\n                    sb.append( entry.getKey() );\n                    sb.append( \"\\n\" );\n\n                    for ( Iterator it2 = values.iterator(); it2.hasNext(); )\n                    {\n                        String current = (String) it2.next();\n\n                        sb.append( \"\\t\" );\n                        sb.append( current );\n\n                        if ( it2.hasNext() )\n                        {\n                            sb.append( \"\\n\" );\n                        }\n                    }\n                }\n            }\n\n            if ( sb != null )\n            {\n                return sb.toString();\n            }\n        }\n\n        return null;\n    }","commit_id":"1ce458552677b901b80372415319d7aff09e0438","url":"https://github.com/apache/maven"},{"original_method":"/**\n     * @param reports a list of reports\n     * @param locale the current locale\n     * @return the inpustream\n     * @throws MojoExecutionException is any\n     * @todo should only be needed once\n     */\n    private InputStream getSiteDescriptor( List reports, Locale locale )\n        throws MojoExecutionException\n    {\n        File siteDescriptor = new File( siteDirectory, \"site_\" + locale.getLanguage() + \".xml\" );\n\n        String siteDescriptorContent;\n\n        try\n        {\n            if ( siteDescriptor.exists() )\n            {\n                siteDescriptorContent = FileUtils.fileRead( siteDescriptor );\n            }\n            else\n            {\n                siteDescriptor = new File( siteDirectory, \"site.xml\" );\n\n                if ( siteDescriptor.exists() )\n                {\n                    siteDescriptorContent = FileUtils.fileRead( siteDescriptor );\n                }\n                else\n                {\n                    siteDescriptorContent = IOUtil.toString( getClass().getResourceAsStream( \"/default-site.xml\" ) );\n                }\n            }\n        }\n        catch ( IOException e )\n        {\n            throw new MojoExecutionException( \"The site descriptor cannot be read!\", e );\n        }\n\n        Map props = new HashMap();\n\n        props.put( \"outputEncoding\", outputEncoding );\n\n        if ( reports != null )\n        {\n            props.put( \"reports\", getReportsMenu( locale ) );\n        }\n\n        if ( project.getParent() != null )\n        {\n            /* See the Not working section*/\n            //props.put( \"parentProject\", getProjectParentMenu( locale ) );\n        }\n\n        if ( addModules )\n        {\n            if ( project.getModules() != null && project.getModules().size() > 0 )\n            {\n                /* See the Not working section*/\n                //props.put( \"modules\", getModulesMenu( locale ) );\n            }\n        }\n\n        // TODO: interpolate ${project.*} in general\n\n        if ( project.getName() != null )\n        {\n            props.put( \"project.name\", project.getName() );\n        }\n        else\n        {\n            props.put( \"project.name\", \"NO_PROJECT_NAME_SET\" );\n        }\n\n        if ( project.getUrl() != null )\n        {\n            props.put( \"project.url\", project.getUrl() );\n        }\n        else\n        {\n            props.put( \"project.url\", \"NO_PROJECT_URL_SET\" );\n        }\n\n        siteDescriptorContent = StringUtils.interpolate( siteDescriptorContent, props );\n\n        return new StringInputStream( siteDescriptorContent );\n    }","id":53459,"modified_method":"/**\n     * @param reports a list of reports\n     * @param locale the current locale\n     * @return the inpustream\n     * @throws org.apache.maven.plugin.MojoExecutionException is any\n     */\n    private String getSiteDescriptor( List reports, Locale locale, List projectInfos, List projectReports )\n        throws MojoExecutionException\n    {\n        File siteDescriptor = new File( siteDirectory, \"site_\" + locale.getLanguage() + \".xml\" );\n\n        String siteDescriptorContent;\n\n        try\n        {\n            if ( siteDescriptor.exists() )\n            {\n                siteDescriptorContent = FileUtils.fileRead( siteDescriptor );\n            }\n            else\n            {\n                siteDescriptor = new File( siteDirectory, \"site.xml\" );\n\n                if ( siteDescriptor.exists() )\n                {\n                    siteDescriptorContent = FileUtils.fileRead( siteDescriptor );\n                }\n                else\n                {\n                    siteDescriptorContent = IOUtil.toString( getClass().getResourceAsStream( \"/default-site.xml\" ) );\n                }\n            }\n        }\n        catch ( IOException e )\n        {\n            throw new MojoExecutionException( \"The site descriptor cannot be read!\", e );\n        }\n\n        Map props = new HashMap();\n\n        props.put( \"outputEncoding\", outputEncoding );\n\n        if ( reports != null )\n        {\n            props.put( \"reports\", getReportsMenu( locale, projectInfos, projectReports ) );\n        }\n\n        if ( project.getParent() != null )\n        {\n            /* See the Not working section*/\n            //props.put( \"parentProject\", getProjectParentMenu( locale ) );\n        }\n\n        if ( addModules )\n        {\n            if ( project.getModules() != null && project.getModules().size() > 0 )\n            {\n                /* See the Not working section*/\n                //props.put( \"modules\", getModulesMenu( locale ) );\n            }\n        }\n\n        // TODO: interpolate ${project.*} in general\n\n        if ( project.getName() != null )\n        {\n            props.put( \"project.name\", project.getName() );\n        }\n        else\n        {\n            props.put( \"project.name\", \"NO_PROJECT_NAME_SET\" );\n        }\n\n        if ( project.getUrl() != null )\n        {\n            props.put( \"project.url\", project.getUrl() );\n        }\n        else\n        {\n            props.put( \"project.url\", \"NO_PROJECT_URL_SET\" );\n        }\n\n        siteDescriptorContent = StringUtils.interpolate( siteDescriptorContent, props );\n\n        return siteDescriptorContent;\n    }","commit_id":"1ce458552677b901b80372415319d7aff09e0438","url":"https://github.com/apache/maven"},{"original_method":"private File getOuputDirectory( Locale locale )\n    {\n        if ( localesList.size() == 1 )\n        {\n            return new File( outputDirectory );\n        }\n\n        if ( locale.getLanguage().equals( defaultLocale.getLanguage() ) )\n        {\n            return new File( outputDirectory );\n        }\n\n        return new File( outputDirectory, locale.getLanguage() );\n    }","id":53460,"modified_method":"private File getOutputDirectory( Locale locale, Locale defaultLocale )\n    {\n        if ( locale.getLanguage().equals( defaultLocale.getLanguage() ) )\n        {\n            return new File( outputDirectory );\n        }\n\n        return new File( outputDirectory, locale.getLanguage() );\n    }","commit_id":"1ce458552677b901b80372415319d7aff09e0438","url":"https://github.com/apache/maven"},{"original_method":"private void generateProjectInfoPage( InputStream siteDescriptor, Locale locale )\n        throws Exception\n    {\n        String outputFileName = \"project-info.html\";\n\n        SiteRendererSink sink = siteRenderer.createSink( new File( siteDirectory ), outputFileName, siteDescriptor );\n\n        String title = i18n.getString( \"site-plugin\", locale, \"report.information.title\" );\n\n        sink.head();\n        sink.title();\n        sink.text( title );\n        sink.title_();\n        sink.head_();\n        sink.body();\n\n        sink.section1();\n        sink.sectionTitle1();\n        sink.text( title );\n        sink.sectionTitle1_();\n\n        sink.paragraph();\n        sink.text( i18n.getString( \"site-plugin\", locale, \"report.information.description1\" ) + \" \" );\n        sink.link( \"http://maven.apache.org\" );\n        sink.text( \"Maven\" );\n        sink.link_();\n        sink.text( \" \" + i18n.getString( \"site-plugin\", locale, \"report.information.description2\" ) );\n        sink.paragraph_();\n\n        sink.section2();\n\n        sink.sectionTitle2();\n        sink.text( i18n.getString( \"site-plugin\", locale, \"report.information.sectionTitle\" ) );\n        sink.sectionTitle2_();\n\n        sink.table();\n\n        sink.tableRow();\n        sink.tableHeaderCell();\n        sink.text( i18n.getString( \"site-plugin\", locale, \"report.information.column.document\" ) );\n        sink.tableHeaderCell_();\n        sink.tableHeaderCell();\n        sink.text( i18n.getString( \"site-plugin\", locale, \"report.information.column.description\" ) );\n        sink.tableHeaderCell_();\n        sink.tableRow_();\n\n        for ( Iterator i = projectInfos.iterator(); i.hasNext(); )\n        {\n            MavenReport report = (MavenReport) i.next();\n\n            sink.tableRow();\n            sink.tableCell();\n            sink.link( report.getOutputName() + \".html\" );\n            sink.text( report.getName( locale ) );\n            sink.link_();\n            sink.tableCell_();\n            sink.tableCell();\n            sink.text( report.getDescription( locale ) );\n            sink.tableCell_();\n            sink.tableRow_();\n        }\n\n        sink.table_();\n\n        sink.section2_();\n\n        sink.section1_();\n\n        sink.body_();\n\n        sink.flush();\n\n        sink.close();\n\n        File outputFile = new File( getOuputDirectory( locale ), outputFileName );\n\n        siteRenderer.generateDocument( new OutputStreamWriter( new FileOutputStream( outputFile ), outputEncoding ),\n                                       template, attributes, sink, locale );\n    }","id":53461,"modified_method":"private void generateProjectInfoPage( String siteDescriptor, Locale locale, List projectInfos,\n                                          File outputDirectory )\n        throws RendererException, IOException\n    {\n        String outputFileName = \"project-info.html\";\n\n        SiteRendererSink sink = siteRenderer.createSink( new File( siteDirectory ), outputFileName, siteDescriptor );\n\n        String title = i18n.getString( \"site-plugin\", locale, \"report.information.title\" );\n\n        sink.head();\n        sink.title();\n        sink.text( title );\n        sink.title_();\n        sink.head_();\n        sink.body();\n\n        sink.section1();\n        sink.sectionTitle1();\n        sink.text( title );\n        sink.sectionTitle1_();\n\n        sink.paragraph();\n        sink.text( i18n.getString( \"site-plugin\", locale, \"report.information.description1\" ) + \" \" );\n        sink.link( \"http://maven.apache.org\" );\n        sink.text( \"Maven\" );\n        sink.link_();\n        sink.text( \" \" + i18n.getString( \"site-plugin\", locale, \"report.information.description2\" ) );\n        sink.paragraph_();\n\n        sink.section2();\n\n        sink.sectionTitle2();\n        sink.text( i18n.getString( \"site-plugin\", locale, \"report.information.sectionTitle\" ) );\n        sink.sectionTitle2_();\n\n        sink.table();\n\n        sink.tableRow();\n        sink.tableHeaderCell();\n        sink.text( i18n.getString( \"site-plugin\", locale, \"report.information.column.document\" ) );\n        sink.tableHeaderCell_();\n        sink.tableHeaderCell();\n        sink.text( i18n.getString( \"site-plugin\", locale, \"report.information.column.description\" ) );\n        sink.tableHeaderCell_();\n        sink.tableRow_();\n\n        for ( Iterator i = projectInfos.iterator(); i.hasNext(); )\n        {\n            MavenReport report = (MavenReport) i.next();\n\n            sink.tableRow();\n            sink.tableCell();\n            sink.link( report.getOutputName() + \".html\" );\n            sink.text( report.getName( locale ) );\n            sink.link_();\n            sink.tableCell_();\n            sink.tableCell();\n            sink.text( report.getDescription( locale ) );\n            sink.tableCell_();\n            sink.tableRow_();\n        }\n\n        sink.table_();\n\n        sink.section2_();\n\n        sink.section1_();\n\n        sink.body_();\n\n        sink.flush();\n\n        sink.close();\n\n        File outputFile = new File( outputDirectory, outputFileName );\n\n        siteRenderer.generateDocument( new OutputStreamWriter( new FileOutputStream( outputFile ), outputEncoding ),\n                                       template, attributes, sink, locale );\n    }","commit_id":"1ce458552677b901b80372415319d7aff09e0438","url":"https://github.com/apache/maven"},{"original_method":"/**\n     * Generated an index page.\n     *\n     * @param siteDescriptor\n     * @param locale\n     * @throws Exception\n     */\n    private void generateIndexPage( InputStream siteDescriptor, Locale locale )\n        throws Exception\n    {\n        String outputFileName = \"index.html\";\n\n        SiteRendererSink sink = siteRenderer.createSink( new File( siteDirectory ), outputFileName, siteDescriptor );\n\n        String title = i18n.getString( \"site-plugin\", locale, \"report.index.title\" ).trim() + \" \" + project.getName();\n\n        sink.head();\n        sink.title();\n        sink.text( title );\n        sink.title_();\n        sink.head_();\n        sink.body();\n\n        sink.section1();\n        sink.sectionTitle1();\n        sink.text( title );\n        sink.sectionTitle1_();\n\n        sink.paragraph();\n        if ( project.getDescription() != null )\n        {\n            // TODO How to handle i18n?\n            sink.text( project.getDescription() );\n        }\n        else\n        {\n            sink.text( i18n.getString( \"site-plugin\", locale, \"report.index.nodescription\" ) );\n        }\n        sink.paragraph_();\n\n        sink.body_();\n\n        sink.flush();\n\n        sink.close();\n\n        File outputFile = new File( getOuputDirectory( locale ), outputFileName );\n\n        siteRenderer.generateDocument( new OutputStreamWriter( new FileOutputStream( outputFile ), outputEncoding ),\n                                       template, attributes, sink, locale );\n    }","id":53462,"modified_method":"/**\n     * Generated an index page.\n     *\n     * @param siteDescriptor\n     * @param locale\n     * @param outputDirectory\n     */\n    private void generateIndexPage( String siteDescriptor, Locale locale, File outputDirectory )\n        throws RendererException, IOException\n    {\n        String outputFileName = \"index.html\";\n\n        SiteRendererSink sink = siteRenderer.createSink( new File( siteDirectory ), outputFileName, siteDescriptor );\n\n        String title = i18n.getString( \"site-plugin\", locale, \"report.index.title\" ).trim() + \" \" + project.getName();\n\n        sink.head();\n        sink.title();\n        sink.text( title );\n        sink.title_();\n        sink.head_();\n        sink.body();\n\n        sink.section1();\n        sink.sectionTitle1();\n        sink.text( title );\n        sink.sectionTitle1_();\n\n        sink.paragraph();\n        if ( project.getDescription() != null )\n        {\n            // TODO How to handle i18n?\n            sink.text( project.getDescription() );\n        }\n        else\n        {\n            sink.text( i18n.getString( \"site-plugin\", locale, \"report.index.nodescription\" ) );\n        }\n        sink.paragraph_();\n\n        sink.body_();\n\n        sink.flush();\n\n        sink.close();\n\n        File outputFile = new File( outputDirectory, outputFileName );\n\n        siteRenderer.generateDocument( new OutputStreamWriter( new FileOutputStream( outputFile ), outputEncoding ),\n                                       template, attributes, sink, locale );\n    }","commit_id":"1ce458552677b901b80372415319d7aff09e0438","url":"https://github.com/apache/maven"},{"original_method":"private void generateProjectReportsPage( InputStream siteDescriptor, Locale locale )\n        throws Exception\n    {\n        String outputFileName = \"maven-reports.html\";\n\n        SiteRendererSink sink = siteRenderer.createSink( new File( siteDirectory ), outputFileName, siteDescriptor );\n\n        String title = i18n.getString( \"site-plugin\", locale, \"report.project.title\" );\n\n        sink.head();\n        sink.title();\n        sink.text( title );\n        sink.title_();\n        sink.head_();\n        sink.body();\n\n        sink.section1();\n        sink.sectionTitle1();\n        sink.text( title );\n        sink.sectionTitle1_();\n\n        sink.paragraph();\n        sink.text( i18n.getString( \"site-plugin\", locale, \"report.project.description1\" ) + \" \" );\n        sink.link( \"http://maven.apache.org\" );\n        sink.text( \"Maven\" );\n        sink.link_();\n        sink.text( \". \" + i18n.getString( \"site-plugin\", locale, \"report.project.description2\" ) );\n        sink.paragraph_();\n\n        sink.section2();\n\n        sink.sectionTitle2();\n        sink.text( i18n.getString( \"site-plugin\", locale, \"report.project.sectionTitle\" ) );\n        sink.sectionTitle2_();\n\n        sink.table();\n\n        sink.tableRow();\n        sink.tableHeaderCell();\n        sink.text( i18n.getString( \"site-plugin\", locale, \"report.project.column.document\" ) );\n        sink.tableHeaderCell_();\n        sink.tableHeaderCell();\n        sink.text( i18n.getString( \"site-plugin\", locale, \"report.project.column.description\" ) );\n        sink.tableHeaderCell_();\n        sink.tableRow_();\n\n        for ( Iterator i = projectReports.iterator(); i.hasNext(); )\n        {\n            MavenReport report = (MavenReport) i.next();\n\n            sink.tableRow();\n            sink.tableCell();\n            sink.link( report.getOutputName() + \".html\" );\n            sink.text( report.getName( locale ) );\n            sink.link_();\n            sink.tableCell_();\n            sink.tableCell();\n            sink.text( report.getDescription( locale ) );\n            sink.tableCell_();\n            sink.tableRow_();\n        }\n\n        sink.table_();\n\n        sink.section2_();\n\n        sink.section1_();\n\n        sink.body_();\n\n        File outputFile = new File( getOuputDirectory( locale ), outputFileName );\n\n        siteRenderer.generateDocument( new OutputStreamWriter( new FileOutputStream( outputFile ), outputEncoding ),\n                                       template, attributes, sink, locale );\n    }","id":53463,"modified_method":"private void generateProjectReportsPage( String siteDescriptor, Locale locale, List projectReports,\n                                             File outputDirectory )\n        throws RendererException, IOException\n    {\n        String outputFileName = \"maven-reports.html\";\n\n        SiteRendererSink sink = siteRenderer.createSink( new File( siteDirectory ), outputFileName, siteDescriptor );\n\n        String title = i18n.getString( \"site-plugin\", locale, \"report.project.title\" );\n\n        sink.head();\n        sink.title();\n        sink.text( title );\n        sink.title_();\n        sink.head_();\n        sink.body();\n\n        sink.section1();\n        sink.sectionTitle1();\n        sink.text( title );\n        sink.sectionTitle1_();\n\n        sink.paragraph();\n        sink.text( i18n.getString( \"site-plugin\", locale, \"report.project.description1\" ) + \" \" );\n        sink.link( \"http://maven.apache.org\" );\n        sink.text( \"Maven\" );\n        sink.link_();\n        sink.text( \". \" + i18n.getString( \"site-plugin\", locale, \"report.project.description2\" ) );\n        sink.paragraph_();\n\n        sink.section2();\n\n        sink.sectionTitle2();\n        sink.text( i18n.getString( \"site-plugin\", locale, \"report.project.sectionTitle\" ) );\n        sink.sectionTitle2_();\n\n        sink.table();\n\n        sink.tableRow();\n        sink.tableHeaderCell();\n        sink.text( i18n.getString( \"site-plugin\", locale, \"report.project.column.document\" ) );\n        sink.tableHeaderCell_();\n        sink.tableHeaderCell();\n        sink.text( i18n.getString( \"site-plugin\", locale, \"report.project.column.description\" ) );\n        sink.tableHeaderCell_();\n        sink.tableRow_();\n\n        for ( Iterator i = projectReports.iterator(); i.hasNext(); )\n        {\n            MavenReport report = (MavenReport) i.next();\n\n            sink.tableRow();\n            sink.tableCell();\n            sink.link( report.getOutputName() + \".html\" );\n            sink.text( report.getName( locale ) );\n            sink.link_();\n            sink.tableCell_();\n            sink.tableCell();\n            sink.text( report.getDescription( locale ) );\n            sink.tableCell_();\n            sink.tableRow_();\n        }\n\n        sink.table_();\n\n        sink.section2_();\n\n        sink.section1_();\n\n        sink.body_();\n\n        File outputFile = new File( outputDirectory, outputFileName );\n\n        siteRenderer.generateDocument( new OutputStreamWriter( new FileOutputStream( outputFile ), outputEncoding ),\n                                       template, attributes, sink, locale );\n    }","commit_id":"1ce458552677b901b80372415319d7aff09e0438","url":"https://github.com/apache/maven"},{"original_method":"/**\n     * Converts a locale code like \"en\", \"en_US\" or \"en_US_win\" to a <code>java.util.Locale<\/code>\n     * object.\n     * <p>If localeCode = <code>default<\/code>, return the current value of the default locale for this instance\n     * of the Java Virtual Machine.<\/p>\n     *\n     * @param localeCode the locale code string.\n     * @return a java.util.Locale object instancied or null if errors occurred\n     * @see <a href=\"http://java.sun.com/j2se/1.4.2/docs/api/java/util/Locale.html\">java.util.Locale#getDefault()<\/a>\n     */\n    private Locale codeToLocale( final String localeCode )\n    {\n        if ( localeCode == null )\n        {\n            return null;\n        }\n\n        if ( localeCode.equalsIgnoreCase( \"default\" ) )\n        {\n            return Locale.getDefault();\n        }\n\n        String language = \"\";\n        String country = \"\";\n        String variant = \"\";\n\n        StringTokenizer tokenizer = new StringTokenizer( localeCode, \"_\" );\n        if ( tokenizer.countTokens() > 3 )\n        {\n            getLog().warn( \"Invalid java.util.Locale format for '\" + localeCode + \"' entry - IGNORING\" );\n            return null;\n        }\n\n        if ( tokenizer.hasMoreTokens() )\n        {\n            language = tokenizer.nextToken();\n            if ( tokenizer.hasMoreTokens() )\n            {\n                country = tokenizer.nextToken();\n                if ( tokenizer.hasMoreTokens() )\n                {\n                    variant = tokenizer.nextToken();\n                }\n            }\n        }\n\n        return new Locale( language, country, variant );\n    }","id":53464,"modified_method":"/**\n     * Converts a locale code like \"en\", \"en_US\" or \"en_US_win\" to a <code>java.util.Locale<\/code>\n     * object.\n     * <p>If localeCode = <code>default<\/code>, return the current value of the default locale for this instance\n     * of the Java Virtual Machine.<\/p>\n     *\n     * @param localeCode the locale code string.\n     * @return a java.util.Locale object instancied or null if errors occurred\n     * @see <a href=\"http://java.sun.com/j2se/1.4.2/docs/api/java/util/Locale.html\">java.util.Locale#getDefault()<\/a>\n     */\n    private Locale codeToLocale( String localeCode )\n    {\n        if ( localeCode == null )\n        {\n            return null;\n        }\n\n        if ( \"default\".equalsIgnoreCase( localeCode ) )\n        {\n            return Locale.getDefault();\n        }\n\n        String language = \"\";\n        String country = \"\";\n        String variant = \"\";\n\n        StringTokenizer tokenizer = new StringTokenizer( localeCode, \"_\" );\n        if ( tokenizer.countTokens() > 3 )\n        {\n            getLog().warn( \"Invalid java.util.Locale format for '\" + localeCode + \"' entry - IGNORING\" );\n            return null;\n        }\n\n        if ( tokenizer.hasMoreTokens() )\n        {\n            language = tokenizer.nextToken();\n            if ( tokenizer.hasMoreTokens() )\n            {\n                country = tokenizer.nextToken();\n                if ( tokenizer.hasMoreTokens() )\n                {\n                    variant = tokenizer.nextToken();\n                }\n            }\n        }\n\n        return new Locale( language, country, variant );\n    }","commit_id":"1ce458552677b901b80372415319d7aff09e0438","url":"https://github.com/apache/maven"},{"original_method":"/**\n     * Init the <code>localesList<\/code> variable.\n     * <p>If <code>locales<\/code> variable is available, the first valid token will be the <code>defaultLocale<\/code>\n     * for this instance of the Java Virtual Machine.<\/p>\n     */\n    private void initLocalesList()\n    {\n        if ( locales == null )\n        {\n            localesList.add( defaultLocale );\n\n            return;\n        }\n\n        String[] localesArray = StringUtils.split( locales, \",\" );\n\n        boolean defaultLocaleWasSet = false;\n        for ( int i = 0; i < localesArray.length; i++ )\n        {\n            Locale locale = codeToLocale( localesArray[i] );\n\n            if ( locale != null )\n            {\n                if ( !Arrays.asList( Locale.getAvailableLocales() ).contains( locale ) )\n                {\n                    getLog().warn( \"The locale parsed defined by '\" + locale +\n                        \"' is not available in this Java Virtual Machine (\" + System.getProperty( \"java.version\" ) +\n                        \" from \" + System.getProperty( \"java.vendor\" ) + \") - IGNORING\" );\n                    continue;\n                }\n\n                if ( !i18n.getBundle( \"site-plugin\", locale ).getLocale().getLanguage().equals( locale.getLanguage() ) )\n                {\n                    StringBuffer sb = new StringBuffer();\n\n                    sb.append( \"The locale '\" ).append( locale ).append( \"' (\" );\n                    sb.append( locale.getDisplayName( Locale.ENGLISH ) );\n                    sb.append( \") is not currently support by Maven - IGNORING. \" );\n                    sb.append( \"\\n\" );\n                    sb.append( \"Contribution are welcome and greatly appreciated! \" );\n                    sb.append( \"\\n\" );\n                    sb.append( \"If you want to contribute a new translation, please visit \" );\n                    sb.append( \"http://maven.apache.org/maven2/plugins/maven-site-plugin/i18n.html \" );\n                    sb.append( \"for detailed instructions.\" );\n\n                    getLog().warn( sb.toString() );\n\n                    continue;\n                }\n\n                localesList.add( locale );\n\n                if ( !defaultLocaleWasSet )\n                {\n                    defaultLocale = locale;\n                    defaultLocaleWasSet = true;\n                }\n            }\n        }\n    }","id":53465,"modified_method":"/**\n     * Init the <code>localesList<\/code> variable.\n     * <p>If <code>locales<\/code> variable is available, the first valid token will be the <code>defaultLocale<\/code>\n     * for this instance of the Java Virtual Machine.<\/p>\n     */\n    private List initLocalesList()\n    {\n        if ( locales == null )\n        {\n            return Collections.EMPTY_LIST;\n        }\n        String[] localesArray = StringUtils.split( locales, \",\" );\n\n        List localesList = new ArrayList();\n        for ( int i = 0; i < localesArray.length; i++ )\n        {\n            Locale locale = codeToLocale( localesArray[i] );\n\n            if ( locale != null )\n            {\n                if ( !Arrays.asList( Locale.getAvailableLocales() ).contains( locale ) )\n                {\n                    getLog().warn( \"The locale parsed defined by '\" + locale +\n                        \"' is not available in this Java Virtual Machine (\" + System.getProperty( \"java.version\" ) +\n                        \" from \" + System.getProperty( \"java.vendor\" ) + \") - IGNORING\" );\n                    continue;\n                }\n\n                if ( !i18n.getBundle( \"site-plugin\", locale ).getLocale().getLanguage().equals( locale.getLanguage() ) )\n                {\n                    StringBuffer sb = new StringBuffer();\n\n                    sb.append( \"The locale '\" ).append( locale ).append( \"' (\" );\n                    sb.append( locale.getDisplayName( Locale.ENGLISH ) );\n                    sb.append( \") is not currently support by Maven - IGNORING. \" );\n                    sb.append( \"\\n\" );\n                    sb.append( \"Contribution are welcome and greatly appreciated! \" );\n                    sb.append( \"\\n\" );\n                    sb.append( \"If you want to contribute a new translation, please visit \" );\n                    sb.append( \"http://maven.apache.org/maven2/plugins/maven-site-plugin/i18n.html \" );\n                    sb.append( \"for detailed instructions.\" );\n\n                    getLog().warn( sb.toString() );\n\n                    continue;\n                }\n\n                localesList.add( locale );\n            }\n        }\n        return localesList;\n    }","commit_id":"1ce458552677b901b80372415319d7aff09e0438","url":"https://github.com/apache/maven"},{"original_method":"/**\n     * @see org.apache.maven.plugin.Mojo#execute()\n     */\n    public void execute()\n        throws MojoExecutionException\n    {\n        if ( templateDirectory == null )\n        {\n            siteRenderer.setTemplateClassLoader( DoxiaMojo.class.getClassLoader() );\n        }\n        else\n        {\n            try\n            {\n                URL templateDirectoryUrl = new URL( templateDirectory );\n\n                URL[] urls = {templateDirectoryUrl};\n\n                URLClassLoader urlClassloader = new URLClassLoader( urls );\n\n                siteRenderer.setTemplateClassLoader( urlClassloader );\n            }\n            catch ( MalformedURLException e )\n            {\n                throw new MojoExecutionException( templateDirectory + \" isn't a valid URL.\", e );\n            }\n        }\n\n        List reports = getReports();\n\n        if ( attributes == null )\n        {\n            attributes = new HashMap();\n        }\n\n        if ( attributes.get( \"project\" ) == null )\n        {\n            attributes.put( \"project\", project );\n        }\n\n        if ( attributes.get( \"outputEncoding\" ) == null )\n        {\n            attributes.put( \"outputEncoding\", outputEncoding );\n        }\n\n        try\n        {\n            categorizeReports( reports );\n\n            initLocalesList();\n\n            Locale.setDefault( defaultLocale );\n\n            for ( Iterator iterator = localesList.iterator(); iterator.hasNext(); )\n            {\n                Locale locale = (Locale) iterator.next();\n\n                File localeOutputDirectory = getOuputDirectory( locale );\n\n                // Safety\n                if ( !localeOutputDirectory.exists() )\n                {\n                    localeOutputDirectory.mkdirs();\n                }\n\n                // Handle the GeneratedSite Directory\n                File generatedSiteFile = new File( generatedSiteDirectory );\n                if ( generatedSiteFile.exists() )\n                {\n                    InputStream siteDescriptor = getSiteDescriptor( reports, locale );\n                    siteRenderer.render( generatedSiteFile, localeOutputDirectory, siteDescriptor, template, attributes,\n                                         locale );\n                }\n\n                // Generate static site\n                File siteDirectoryFile = new File( siteDirectory );\n                if ( !locale.getLanguage().equals( defaultLocale.getLanguage() ) )\n                {\n                    siteDirectoryFile = new File( siteDirectory, locale.getLanguage() );\n                }\n\n                // Try to find duplicate files\n                Map duplicate = new LinkedHashMap();\n                if ( siteDirectoryFile.exists() )\n                {\n                    tryToFindDuplicates( siteDirectoryFile, duplicate );\n                }\n                if ( generatedSiteFile.exists() )\n                {\n                    tryToFindDuplicates( generatedSiteFile, duplicate );\n                }\n\n                // Exception if a file is duplicate\n                String msg = createDuplicateExceptionMsg( duplicate, locale );\n                if ( msg != null )\n                {\n                    throw new MavenReportException( msg );\n                }\n\n                //Generate reports\n                if ( reports != null )\n                {\n                    try\n                    {\n                        generateReportsPages( reports, locale, localeOutputDirectory );\n                    }\n                    catch ( Exception e )\n                    {\n                        throw new MojoExecutionException( \"An error is occurred in reports pages generation.\", e );\n                    }\n                }\n\n                //Generate overview pages\n                if ( projectInfos.size() > 0 )\n                {\n                    try\n                    {\n                        generateProjectInfoPage( getSiteDescriptor( reports, locale ), locale );\n                    }\n                    catch ( Exception e )\n                    {\n                        throw new MojoExecutionException( \"An error is occurred in project info page generation.\", e );\n                    }\n                }\n\n                if ( projectReports.size() > 0 )\n                {\n                    try\n                    {\n                        generateProjectReportsPage( getSiteDescriptor( reports, locale ), locale );\n                    }\n                    catch ( Exception e )\n                    {\n                        throw new MojoExecutionException( \"An error is occurred in project reports page generation.\",\n                                                          e );\n                    }\n                }\n\n                // Try to generate the index.html\n                if ( duplicate.get( \"index\" ) != null )\n                {\n                    getLog().info( \"Ignoring the index file generation for the \\\"\" + getDisplayLanguage( locale ) +\n                        \"\\\" version.\" );\n                }\n                else\n                {\n                    getLog().info( \"Generate an index file for the \\\"\" + getDisplayLanguage( locale ) + \"\\\" version.\" );\n                    generateIndexPage( getSiteDescriptor( reports, locale ), locale );\n                }\n\n                // Log if a user override a report file\n                for ( Iterator it = generatedReportsFileName.iterator(); it.hasNext(); )\n                {\n                    String reportFileName = (String) it.next();\n\n                    if ( duplicate.get( reportFileName ) != null )\n                    {\n                        getLog().info( \"Override the generated file \\\"\" + reportFileName + \"\\\" for the \\\"\" +\n                            getDisplayLanguage( locale ) + \"\\\" version.\" );\n                    }\n                }\n\n                siteRenderer.render( siteDirectoryFile, localeOutputDirectory, getSiteDescriptor( reports, locale ),\n                                     template, attributes, locale );\n\n                File cssDirectory = new File( siteDirectory, \"css\" );\n                File imagesDirectory = new File( siteDirectory, \"images\" );\n\n                // special case for backwards compatibility\n                if ( cssDirectory.exists() || imagesDirectory.exists() )\n                {\n                    getLog().warn( \"DEPRECATED: the css and images directories are deprecated, please use resources\" );\n\n                    copyDirectory( cssDirectory, new File( localeOutputDirectory, \"css\" ) );\n\n                    copyDirectory( imagesDirectory, new File( localeOutputDirectory, \"images\" ) );\n                }\n\n                copyResources( localeOutputDirectory );\n\n                // Copy site resources\n                if ( resourcesDirectory != null && resourcesDirectory.exists() )\n                {\n                    copyDirectory( resourcesDirectory, localeOutputDirectory );\n                }\n\n                // Copy the generated site in parent site if needed to provide module links\n                if ( addModules )\n                {\n                    MavenProject parentProject = project.getParent();\n                    if ( parentProject != null )\n                    {\n                        // TODO Handle user plugin configuration\n/* TODO: Not working, and would be better working as a top-level aggregation rather than pushing from the subprojects...\n                        File basedir = parentProject.getBasedir();\n                        if ( basedir != null )\n                        {\n                            String path = parentProject.getBuild().getDirectory() + \"/site/\" + project.getArtifactId();\n                            File parentSiteDir = new File( basedir, path );\n\n                            if ( !parentSiteDir.exists() )\n                            {\n                                parentSiteDir.mkdirs();\n                            }\n\n                            File siteDir = new File( outputDirectory );\n                            FileUtils.copyDirectoryStructure( siteDir, parentSiteDir );\n                        }\n                        else\n                        {\n                            getLog().info( \"Not using parent as it was not located on the filesystem\" );\n                        }\n*/\n                    }\n                }\n            }\n        }\n        catch ( MavenReportException e )\n        {\n            throw new MojoExecutionException( \"Error during report generation\", e );\n        }\n        catch ( RendererException e )\n        {\n            throw new MojoExecutionException( \"Error during page generation\", e );\n        }\n        catch ( Exception e )\n        {\n            throw new MojoExecutionException( \"Error during site generation\", e );\n        }\n    }","id":53466,"modified_method":"/**\n     * @see org.apache.maven.plugin.Mojo#execute()\n     */\n    public void execute()\n        throws MojoExecutionException\n    {\n        if ( templateDirectory == null )\n        {\n            siteRenderer.setTemplateClassLoader( DoxiaMojo.class.getClassLoader() );\n        }\n        else\n        {\n            try\n            {\n                URL templateDirectoryUrl = new URL( templateDirectory );\n\n                URL[] urls = {templateDirectoryUrl};\n\n                URLClassLoader urlClassloader = new URLClassLoader( urls );\n\n                siteRenderer.setTemplateClassLoader( urlClassloader );\n            }\n            catch ( MalformedURLException e )\n            {\n                throw new MojoExecutionException( templateDirectory + \" isn't a valid URL.\", e );\n            }\n        }\n\n        List reports = getReports();\n\n        if ( attributes == null )\n        {\n            attributes = new HashMap();\n        }\n\n        if ( attributes.get( \"project\" ) == null )\n        {\n            attributes.put( \"project\", project );\n        }\n\n        if ( attributes.get( \"outputEncoding\" ) == null )\n        {\n            attributes.put( \"outputEncoding\", outputEncoding );\n        }\n\n        try\n        {\n            List localesList = initLocalesList();\n            if ( localesList.isEmpty() )\n            {\n                localesList = Collections.singletonList( Locale.ENGLISH );\n            }\n\n            // Default is first in the list\n            Locale defaultLocale = (Locale) localesList.get( 0 );\n            Locale.setDefault( defaultLocale );\n\n            List projectInfos = new ArrayList();\n            List projectReports = new ArrayList();\n            categorizeReports( reports, defaultLocale, projectInfos, projectReports );\n\n            for ( Iterator iterator = localesList.iterator(); iterator.hasNext(); )\n            {\n                Locale locale = (Locale) iterator.next();\n\n                String siteDescriptor = getSiteDescriptor( reports, locale, projectInfos, projectReports );\n\n                File outputDirectory = getOutputDirectory( locale, defaultLocale );\n\n                // Safety\n                if ( !outputDirectory.exists() )\n                {\n                    outputDirectory.mkdirs();\n                }\n\n                // Handle the GeneratedSite Directory\n                File generatedSiteFile = new File( generatedSiteDirectory );\n                if ( generatedSiteFile.exists() )\n                {\n                    siteRenderer.render( generatedSiteFile, outputDirectory, siteDescriptor, template, attributes,\n                                         locale );\n                }\n\n                // Generate static site\n                File siteDirectoryFile = new File( siteDirectory );\n                if ( !locale.getLanguage().equals( defaultLocale.getLanguage() ) )\n                {\n                    siteDirectoryFile = new File( siteDirectory, locale.getLanguage() );\n                }\n\n                // Try to find duplicate files\n                Map duplicate = new LinkedHashMap();\n                if ( siteDirectoryFile.exists() )\n                {\n                    tryToFindDuplicates( siteDirectoryFile, duplicate );\n                }\n                if ( generatedSiteFile.exists() )\n                {\n                    tryToFindDuplicates( generatedSiteFile, duplicate );\n                }\n\n                // Exception if a file is duplicate\n                String msg = createDuplicateExceptionMsg( duplicate, locale );\n                if ( msg != null )\n                {\n                    throw new MavenReportException( msg );\n                }\n\n                //Generate reports\n                if ( reports != null )\n                {\n                    generateReportsPages( reports, locale, outputDirectory, defaultLocale, siteDescriptor );\n                }\n\n                //Generate overview pages\n                if ( projectInfos.size() > 0 )\n                {\n                    generateProjectInfoPage( siteDescriptor, locale, projectInfos, outputDirectory );\n                }\n\n                if ( projectReports.size() > 0 )\n                {\n                    generateProjectReportsPage( siteDescriptor, locale, projectReports, outputDirectory );\n                }\n\n                // Try to generate the index.html\n                String displayLanguage = locale.getDisplayLanguage( Locale.ENGLISH );\n                if ( duplicate.get( \"index\" ) != null )\n                {\n                    getLog().info( \"Ignoring the index file generation for the \" + displayLanguage + \" version.\" );\n                }\n                else\n                {\n                    getLog().info( \"Generate an index file for the \" + displayLanguage + \" version.\" );\n                    generateIndexPage( siteDescriptor, locale, outputDirectory );\n                }\n\n                // Log if a user override a report file\n                for ( Iterator it = generatedReportsFileName.iterator(); it.hasNext(); )\n                {\n                    String reportFileName = (String) it.next();\n\n                    if ( duplicate.get( reportFileName ) != null )\n                    {\n                        getLog().info( \"Override the generated file \\\"\" + reportFileName + \"\\\" for the \" +\n                            displayLanguage + \" version.\" );\n                    }\n                }\n\n                siteRenderer.render( siteDirectoryFile, outputDirectory, siteDescriptor, template, attributes, locale );\n\n                File cssDirectory = new File( siteDirectory, \"css\" );\n                File imagesDirectory = new File( siteDirectory, \"images\" );\n\n                // special case for backwards compatibility\n                if ( cssDirectory.exists() || imagesDirectory.exists() )\n                {\n                    getLog().warn( \"DEPRECATED: the css and images directories are deprecated, please use resources\" );\n\n                    copyDirectory( cssDirectory, new File( outputDirectory, \"css\" ) );\n\n                    copyDirectory( imagesDirectory, new File( outputDirectory, \"images\" ) );\n                }\n\n                copyResources( outputDirectory );\n\n                // Copy site resources\n                if ( resourcesDirectory != null && resourcesDirectory.exists() )\n                {\n                    copyDirectory( resourcesDirectory, outputDirectory );\n                }\n\n                // Copy the generated site in parent site if needed to provide module links\n                if ( addModules )\n                {\n                    MavenProject parentProject = project.getParent();\n                    if ( parentProject != null )\n                    {\n                        // TODO Handle user plugin configuration\n/* TODO: Not working, and would be better working as a top-level aggregation rather than pushing from the subprojects...\n                        File basedir = parentProject.getBasedir();\n                        if ( basedir != null )\n                        {\n                            String path = parentProject.getBuild().getDirectory() + \"/site/\" + project.getArtifactId();\n                            File parentSiteDir = new File( basedir, path );\n\n                            if ( !parentSiteDir.exists() )\n                            {\n                                parentSiteDir.mkdirs();\n                            }\n\n                            File siteDir = new File( outputDirectory );\n                            FileUtils.copyDirectoryStructure( siteDir, parentSiteDir );\n                        }\n                        else\n                        {\n                            getLog().info( \"Not using parent as it was not located on the filesystem\" );\n                        }\n*/\n                    }\n                }\n            }\n        }\n        catch ( MavenReportException e )\n        {\n            throw new MojoExecutionException( \"Error during report generation\", e );\n        }\n        catch ( RendererException e )\n        {\n            throw new MojoExecutionException( \"Error during page generation\", e );\n        }\n        catch ( IOException e )\n        {\n            throw new MojoExecutionException( \"Error during site generation\", e );\n        }\n    }","commit_id":"1ce458552677b901b80372415319d7aff09e0438","url":"https://github.com/apache/maven"},{"original_method":"private void copyResources( File outputDir )\n        throws Exception\n    {\n        InputStream resourceList = getStream( RESOURCE_DIR + \"/resources.txt\" );\n\n        if ( resourceList != null )\n        {\n            LineNumberReader reader = new LineNumberReader( new InputStreamReader( resourceList ) );\n\n            String line;\n\n            while ( ( line = reader.readLine() ) != null )\n            {\n                InputStream is = getStream( RESOURCE_DIR + \"/\" + line );\n\n                if ( is == null )\n                {\n                    throw new IOException(\n                        \"The resource \" + line + \" doesn't exists in \" + DEFAULT_TEMPLATE + \" template.\" );\n                }\n\n                File outputFile = new File( outputDir, line );\n\n                if ( !outputFile.getParentFile().exists() )\n                {\n                    outputFile.getParentFile().mkdirs();\n                }\n\n                FileOutputStream w = new FileOutputStream( outputFile );\n\n                IOUtil.copy( is, w );\n\n                IOUtil.close( is );\n\n                IOUtil.close( w );\n            }\n        }\n    }","id":53467,"modified_method":"private void copyResources( File outputDir )\n        throws IOException\n    {\n        InputStream resourceList = getStream( RESOURCE_DIR + \"/resources.txt\" );\n\n        if ( resourceList != null )\n        {\n            LineNumberReader reader = new LineNumberReader( new InputStreamReader( resourceList ) );\n\n            String line = reader.readLine();\n\n            while ( line != null )\n            {\n                InputStream is = getStream( RESOURCE_DIR + \"/\" + line );\n\n                if ( is == null )\n                {\n                    throw new IOException(\n                        \"The resource \" + line + \" doesn't exists in \" + DEFAULT_TEMPLATE + \" template.\" );\n                }\n\n                File outputFile = new File( outputDir, line );\n\n                if ( !outputFile.getParentFile().exists() )\n                {\n                    outputFile.getParentFile().mkdirs();\n                }\n\n                FileOutputStream w = new FileOutputStream( outputFile );\n\n                IOUtil.copy( is, w );\n\n                IOUtil.close( is );\n\n                IOUtil.close( w );\n\n                line = reader.readLine();\n            }\n        }\n    }","commit_id":"1ce458552677b901b80372415319d7aff09e0438","url":"https://github.com/apache/maven"},{"original_method":"/**\n     * Generate reports pages\n     *\n     * @param reports\n     * @param locale\n     * @param localeOutputDirectory\n     * @throws Exception\n     */\n    private void generateReportsPages( List reports, Locale locale, File localeOutputDirectory )\n        throws Exception\n    {\n        for ( Iterator j = reports.iterator(); j.hasNext(); )\n        {\n            MavenReport report = (MavenReport) j.next();\n\n            getLog().info( \"Generate \\\"\" + report.getName( locale ) + \"\\\" report.\" );\n\n            report.setReportOutputDirectory( localeOutputDirectory );\n\n            String reportFileName = report.getOutputName();\n\n            if ( locale.equals( defaultLocale ) )\n            {\n                generatedReportsFileName.add( reportFileName );\n            }\n            else\n            {\n                generatedReportsFileName.add( locale.getLanguage() + File.separator + reportFileName );\n            }\n\n            String outputFileName = reportFileName + \".html\";\n\n            SiteRendererSink sink = siteRenderer.createSink( new File( siteDirectory ), outputFileName,\n                                                             getSiteDescriptor( reports, locale ) );\n\n            report.generate( sink, locale );\n\n            if ( !report.isExternalReport() )\n            {\n                File outputFile = new File( localeOutputDirectory, outputFileName );\n\n                if ( !outputFile.getParentFile().exists() )\n                {\n                    outputFile.getParentFile().mkdirs();\n                }\n\n                siteRenderer.generateDocument(\n                    new OutputStreamWriter( new FileOutputStream( outputFile ), outputEncoding ), template, attributes,\n                    sink, locale );\n            }\n        }\n    }","id":53468,"modified_method":"/**\n     * Generate reports pages\n     *\n     * @param reports\n     * @param locale\n     * @param localeOutputDirectory\n     */\n    private void generateReportsPages( List reports, Locale locale, File localeOutputDirectory, Locale defaultLocale,\n                                       String siteDescriptor )\n        throws RendererException, IOException, MavenReportException\n    {\n        for ( Iterator j = reports.iterator(); j.hasNext(); )\n        {\n            MavenReport report = (MavenReport) j.next();\n\n            getLog().info( \"Generate \\\"\" + report.getName( locale ) + \"\\\" report.\" );\n\n            report.setReportOutputDirectory( localeOutputDirectory );\n\n            String reportFileName = report.getOutputName();\n\n            if ( locale.equals( defaultLocale ) )\n            {\n                generatedReportsFileName.add( reportFileName );\n            }\n            else\n            {\n                generatedReportsFileName.add( locale.getLanguage() + File.separator + reportFileName );\n            }\n\n            String outputFileName = reportFileName + \".html\";\n\n            SiteRendererSink sink = siteRenderer.createSink( new File( siteDirectory ), outputFileName,\n                                                             siteDescriptor );\n\n            report.generate( sink, locale );\n\n            if ( !report.isExternalReport() )\n            {\n                File outputFile = new File( localeOutputDirectory, outputFileName );\n\n                if ( !outputFile.getParentFile().exists() )\n                {\n                    outputFile.getParentFile().mkdirs();\n                }\n\n                siteRenderer.generateDocument(\n                    new OutputStreamWriter( new FileOutputStream( outputFile ), outputEncoding ), template, attributes,\n                    sink, locale );\n            }\n        }\n    }","commit_id":"1ce458552677b901b80372415319d7aff09e0438","url":"https://github.com/apache/maven"},{"original_method":"private void categorizeReports( List reports )\n        throws MojoExecutionException\n    {\n        for ( Iterator i = reports.iterator(); i.hasNext(); )\n        {\n            MavenReport report = (MavenReport) i.next();\n            if ( MavenReport.CATEGORY_PROJECT_INFORMATION.equals( report.getCategoryName() ) )\n            {\n                projectInfos.add( report );\n            }\n            else if ( MavenReport.CATEGORY_PROJECT_REPORTS.equals( report.getCategoryName() ) )\n            {\n                projectReports.add( report );\n            }\n            else\n            {\n                throw new MojoExecutionException( \"'\" + report.getCategoryName() + \"' category define for \" +\n                    report.getName( defaultLocale ) + \" mojo isn't valid.\" );\n            }\n        }\n    }","id":53469,"modified_method":"private void categorizeReports( List reports, Locale defaultLocale, List projectInfos, List projectReports )\n        throws MojoExecutionException\n    {\n        for ( Iterator i = reports.iterator(); i.hasNext(); )\n        {\n            MavenReport report = (MavenReport) i.next();\n            if ( MavenReport.CATEGORY_PROJECT_INFORMATION.equals( report.getCategoryName() ) )\n            {\n                projectInfos.add( report );\n            }\n            else if ( MavenReport.CATEGORY_PROJECT_REPORTS.equals( report.getCategoryName() ) )\n            {\n                projectReports.add( report );\n            }\n            else\n            {\n                throw new MojoExecutionException( \"'\" + report.getCategoryName() + \"' category define for \" +\n                    report.getName( defaultLocale ) + \" mojo isn't valid.\" );\n            }\n        }\n    }","commit_id":"1ce458552677b901b80372415319d7aff09e0438","url":"https://github.com/apache/maven"},{"original_method":"private String getReportsMenu( Locale locale )\n    {\n        StringBuffer buffer = new StringBuffer();\n        buffer.append( \"<menu name=\\\"\" );\n        buffer.append( i18n.getString( \"site-plugin\", locale, \"report.menu.projectdocumentation\" ) );\n        buffer.append( \"\\\">\\n\" );\n        buffer.append( \"    <item name=\\\"\" );\n        buffer.append( i18n.getString( \"site-plugin\", locale, \"report.menu.about\" ) );\n        buffer.append( \" \" );\n        buffer.append( project.getName() );\n        buffer.append( \"\\\" href=\\\"/index.html\\\"/>\\n\" );\n\n        writeReportSubMenu( projectInfos, buffer, locale, \"report.menu.projectinformation\", \"project-info.html\" );\n        writeReportSubMenu( projectReports, buffer, locale, \"report.menu.projectreports\", \"maven-reports.html\" );\n\n        buffer.append( \"<\/menu>\\n\" );\n\n        return buffer.toString();\n    }","id":53470,"modified_method":"private String getReportsMenu( Locale locale, List projectInfos, List projectReports )\n    {\n        StringBuffer buffer = new StringBuffer();\n        buffer.append( \"<menu name=\\\"\" );\n        buffer.append( i18n.getString( \"site-plugin\", locale, \"report.menu.projectdocumentation\" ) );\n        buffer.append( \"\\\">\\n\" );\n        buffer.append( \"    <item name=\\\"\" );\n        buffer.append( i18n.getString( \"site-plugin\", locale, \"report.menu.about\" ) );\n        buffer.append( \" \" );\n        buffer.append( project.getName() );\n        buffer.append( \"\\\" href=\\\"/index.html\\\"/>\\n\" );\n\n        writeReportSubMenu( projectInfos, buffer, locale, \"report.menu.projectinformation\", \"project-info.html\" );\n        writeReportSubMenu( projectReports, buffer, locale, \"report.menu.projectreports\", \"maven-reports.html\" );\n\n        buffer.append( \"<\/menu>\\n\" );\n\n        return buffer.toString();\n    }","commit_id":"1ce458552677b901b80372415319d7aff09e0438","url":"https://github.com/apache/maven"},{"original_method":"/**\n     * @param reports a list of reports\n     * @param locale the current locale\n     * @return the inpustream\n     * @throws MojoExecutionException is any\n     * @todo should only be needed once\n     */\n    private InputStream getSiteDescriptor( List reports, Locale locale )\n        throws MojoExecutionException\n    {\n        File siteDescriptor = new File( siteDirectory, \"site_\" + locale.getLanguage() + \".xml\" );\n\n        String siteDescriptorContent;\n\n        try\n        {\n            if ( siteDescriptor.exists() )\n            {\n                siteDescriptorContent = FileUtils.fileRead( siteDescriptor );\n            }\n            else\n            {\n                siteDescriptor = new File( siteDirectory, \"site.xml\" );\n\n                if ( siteDescriptor.exists() )\n                {\n                    siteDescriptorContent = FileUtils.fileRead( siteDescriptor );\n                }\n                else\n                {\n                    siteDescriptorContent = IOUtil.toString( getClass().getResourceAsStream( \"/default-site.xml\" ) );\n                }\n            }\n        }\n        catch ( IOException e )\n        {\n            throw new MojoExecutionException( \"The site descriptor cannot be read!\", e );\n        }\n\n        Map props = new HashMap();\n\n        props.put( \"outputEncoding\", outputEncoding );\n\n        if ( reports != null )\n        {\n            props.put( \"reports\", getReportsMenu( locale ) );\n        }\n\n        if ( project.getParent() != null )\n        {\n            /* See the Not working section*/\n            //props.put( \"parentProject\", getProjectParentMenu( locale ) );\n        }\n\n        if ( addModules )\n        {\n            if ( project.getModules() != null && project.getModules().size() > 0 )\n            {\n                /* See the Not working section*/\n                //props.put( \"modules\", getModulesMenu( locale ) );\n            }\n        }\n\n        // TODO: interpolate ${project.*} in general\n\n        if ( project.getName() != null )\n        {\n            props.put( \"project.name\", project.getName() );\n        }\n        else\n        {\n            props.put( \"project.name\", \"NO_PROJECT_NAME_SET\" );\n        }\n\n        if ( project.getUrl() != null )\n        {\n            props.put( \"project.url\", project.getUrl() );\n        }\n        else\n        {\n            props.put( \"project.url\", \"NO_PROJECT_URL_SET\" );\n        }\n\n        siteDescriptorContent = StringUtils.interpolate( siteDescriptorContent, props );\n\n        return new StringInputStream( siteDescriptorContent );\n    }","id":53471,"modified_method":"/**\n     * @param reports a list of reports\n     * @param locale the current locale\n     * @return the inpustream\n     * @throws org.apache.maven.plugin.MojoExecutionException is any\n     */\n    private String getSiteDescriptor( List reports, Locale locale, List projectInfos, List projectReports )\n        throws MojoExecutionException\n    {\n        File siteDescriptor = new File( siteDirectory, \"site_\" + locale.getLanguage() + \".xml\" );\n\n        String siteDescriptorContent;\n\n        try\n        {\n            if ( siteDescriptor.exists() )\n            {\n                siteDescriptorContent = FileUtils.fileRead( siteDescriptor );\n            }\n            else\n            {\n                siteDescriptor = new File( siteDirectory, \"site.xml\" );\n\n                if ( siteDescriptor.exists() )\n                {\n                    siteDescriptorContent = FileUtils.fileRead( siteDescriptor );\n                }\n                else\n                {\n                    siteDescriptorContent = IOUtil.toString( getClass().getResourceAsStream( \"/default-site.xml\" ) );\n                }\n            }\n        }\n        catch ( IOException e )\n        {\n            throw new MojoExecutionException( \"The site descriptor cannot be read!\", e );\n        }\n\n        Map props = new HashMap();\n\n        props.put( \"outputEncoding\", outputEncoding );\n\n        if ( reports != null )\n        {\n            props.put( \"reports\", getReportsMenu( locale, projectInfos, projectReports ) );\n        }\n\n        if ( project.getParent() != null )\n        {\n            /* See the Not working section*/\n            //props.put( \"parentProject\", getProjectParentMenu( locale ) );\n        }\n\n        if ( addModules )\n        {\n            if ( project.getModules() != null && project.getModules().size() > 0 )\n            {\n                /* See the Not working section*/\n                //props.put( \"modules\", getModulesMenu( locale ) );\n            }\n        }\n\n        // TODO: interpolate ${project.*} in general\n\n        if ( project.getName() != null )\n        {\n            props.put( \"project.name\", project.getName() );\n        }\n        else\n        {\n            props.put( \"project.name\", \"NO_PROJECT_NAME_SET\" );\n        }\n\n        if ( project.getUrl() != null )\n        {\n            props.put( \"project.url\", project.getUrl() );\n        }\n        else\n        {\n            props.put( \"project.url\", \"NO_PROJECT_URL_SET\" );\n        }\n\n        siteDescriptorContent = StringUtils.interpolate( siteDescriptorContent, props );\n\n        return siteDescriptorContent;\n    }","commit_id":"488ada90997f57611a02f3bace67d21c56aae861","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Create an <code>Exception<\/code> message if a file is duplicate.\n     *\n     * @param duplicate a map of duplicate files\n     * @param locale the current locale\n     * @return the Message to throw\n     */\n    private String createDuplicateExceptionMsg( Map duplicate, Locale locale )\n    {\n        if ( duplicate.size() > 0 )\n        {\n            StringBuffer sb = null;\n\n            for ( Iterator it = duplicate.entrySet().iterator(); it.hasNext(); )\n            {\n                Map.Entry entry = (Map.Entry) it.next();\n                Collection values = (Collection) entry.getValue();\n\n                if ( values.size() > 1 )\n                {\n                    if ( sb == null )\n                    {\n                        sb = new StringBuffer(\n                            \"Some files are duplicates in the site directory or in the generated-site directory. \" );\n                        sb.append( \"\\n\" );\n                        sb.append(\n                            \"Review the following files for the \\\"\" + getDisplayLanguage( locale ) + \"\\\" version:\" );\n                    }\n\n                    sb.append( \"\\n\" );\n                    sb.append( entry.getKey() );\n                    sb.append( \"\\n\" );\n\n                    for ( Iterator it2 = values.iterator(); it2.hasNext(); )\n                    {\n                        String current = (String) it2.next();\n\n                        sb.append( \"\\t\" );\n                        sb.append( current );\n\n                        if ( it2.hasNext() )\n                        {\n                            sb.append( \"\\n\" );\n                        }\n                    }\n                }\n            }\n\n            if ( sb != null )\n            {\n                return sb.toString();\n            }\n        }\n\n        return null;\n    }","id":53472,"modified_method":"/**\n     * Create an <code>Exception<\/code> message if a file is duplicate.\n     *\n     * @param duplicate a map of duplicate files\n     * @param locale the current locale\n     * @return the Message to throw\n     */\n    private String createDuplicateExceptionMsg( Map duplicate, Locale locale )\n    {\n        if ( duplicate.size() > 0 )\n        {\n            StringBuffer sb = null;\n\n            for ( Iterator it = duplicate.entrySet().iterator(); it.hasNext(); )\n            {\n                Map.Entry entry = (Map.Entry) it.next();\n                Collection values = (Collection) entry.getValue();\n\n                if ( values.size() > 1 )\n                {\n                    if ( sb == null )\n                    {\n                        sb = new StringBuffer(\n                            \"Some files are duplicates in the site directory or in the generated-site directory. \" );\n                        sb.append( \"\\n\" );\n                        sb.append( \"Review the following files for the \\\"\" );\n                        sb.append( locale.getDisplayLanguage( Locale.ENGLISH ) );\n                        sb.append( \"\\\" version:\" );\n                    }\n\n                    sb.append( \"\\n\" );\n                    sb.append( entry.getKey() );\n                    sb.append( \"\\n\" );\n\n                    for ( Iterator it2 = values.iterator(); it2.hasNext(); )\n                    {\n                        String current = (String) it2.next();\n\n                        sb.append( \"\\t\" );\n                        sb.append( current );\n\n                        if ( it2.hasNext() )\n                        {\n                            sb.append( \"\\n\" );\n                        }\n                    }\n                }\n            }\n\n            if ( sb != null )\n            {\n                return sb.toString();\n            }\n        }\n\n        return null;\n    }","commit_id":"488ada90997f57611a02f3bace67d21c56aae861","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Converts a locale code like \"en\", \"en_US\" or \"en_US_win\" to a <code>java.util.Locale<\/code>\n     * object.\n     * <p>If localeCode = <code>default<\/code>, return the current value of the default locale for this instance\n     * of the Java Virtual Machine.<\/p>\n     *\n     * @param localeCode the locale code string.\n     * @return a java.util.Locale object instancied or null if errors occurred\n     * @see <a href=\"http://java.sun.com/j2se/1.4.2/docs/api/java/util/Locale.html\">java.util.Locale#getDefault()<\/a>\n     */\n    private Locale codeToLocale( final String localeCode )\n    {\n        if ( localeCode == null )\n        {\n            return null;\n        }\n\n        if ( localeCode.equalsIgnoreCase( \"default\" ) )\n        {\n            return Locale.getDefault();\n        }\n\n        String language = \"\";\n        String country = \"\";\n        String variant = \"\";\n\n        StringTokenizer tokenizer = new StringTokenizer( localeCode, \"_\" );\n        if ( tokenizer.countTokens() > 3 )\n        {\n            getLog().warn( \"Invalid java.util.Locale format for '\" + localeCode + \"' entry - IGNORING\" );\n            return null;\n        }\n\n        if ( tokenizer.hasMoreTokens() )\n        {\n            language = tokenizer.nextToken();\n            if ( tokenizer.hasMoreTokens() )\n            {\n                country = tokenizer.nextToken();\n                if ( tokenizer.hasMoreTokens() )\n                {\n                    variant = tokenizer.nextToken();\n                }\n            }\n        }\n\n        return new Locale( language, country, variant );\n    }","id":53473,"modified_method":"/**\n     * Converts a locale code like \"en\", \"en_US\" or \"en_US_win\" to a <code>java.util.Locale<\/code>\n     * object.\n     * <p>If localeCode = <code>default<\/code>, return the current value of the default locale for this instance\n     * of the Java Virtual Machine.<\/p>\n     *\n     * @param localeCode the locale code string.\n     * @return a java.util.Locale object instancied or null if errors occurred\n     * @see <a href=\"http://java.sun.com/j2se/1.4.2/docs/api/java/util/Locale.html\">java.util.Locale#getDefault()<\/a>\n     */\n    private Locale codeToLocale( String localeCode )\n    {\n        if ( localeCode == null )\n        {\n            return null;\n        }\n\n        if ( \"default\".equalsIgnoreCase( localeCode ) )\n        {\n            return Locale.getDefault();\n        }\n\n        String language = \"\";\n        String country = \"\";\n        String variant = \"\";\n\n        StringTokenizer tokenizer = new StringTokenizer( localeCode, \"_\" );\n        if ( tokenizer.countTokens() > 3 )\n        {\n            getLog().warn( \"Invalid java.util.Locale format for '\" + localeCode + \"' entry - IGNORING\" );\n            return null;\n        }\n\n        if ( tokenizer.hasMoreTokens() )\n        {\n            language = tokenizer.nextToken();\n            if ( tokenizer.hasMoreTokens() )\n            {\n                country = tokenizer.nextToken();\n                if ( tokenizer.hasMoreTokens() )\n                {\n                    variant = tokenizer.nextToken();\n                }\n            }\n        }\n\n        return new Locale( language, country, variant );\n    }","commit_id":"488ada90997f57611a02f3bace67d21c56aae861","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Generated an index page.\n     *\n     * @param siteDescriptor\n     * @param locale\n     * @throws Exception\n     */\n    private void generateIndexPage( InputStream siteDescriptor, Locale locale )\n        throws Exception\n    {\n        String outputFileName = \"index.html\";\n\n        SiteRendererSink sink = siteRenderer.createSink( new File( siteDirectory ), outputFileName, siteDescriptor );\n\n        String title = i18n.getString( \"site-plugin\", locale, \"report.index.title\" ).trim() + \" \" + project.getName();\n\n        sink.head();\n        sink.title();\n        sink.text( title );\n        sink.title_();\n        sink.head_();\n        sink.body();\n\n        sink.section1();\n        sink.sectionTitle1();\n        sink.text( title );\n        sink.sectionTitle1_();\n\n        sink.paragraph();\n        if ( project.getDescription() != null )\n        {\n            // TODO How to handle i18n?\n            sink.text( project.getDescription() );\n        }\n        else\n        {\n            sink.text( i18n.getString( \"site-plugin\", locale, \"report.index.nodescription\" ) );\n        }\n        sink.paragraph_();\n\n        sink.body_();\n\n        sink.flush();\n\n        sink.close();\n\n        File outputFile = new File( getOuputDirectory( locale ), outputFileName );\n\n        siteRenderer.generateDocument( new OutputStreamWriter( new FileOutputStream( outputFile ), outputEncoding ),\n                                       template, attributes, sink, locale );\n    }","id":53474,"modified_method":"/**\n     * Generated an index page.\n     *\n     * @param siteDescriptor\n     * @param locale\n     * @param outputDirectory\n     */\n    private void generateIndexPage( String siteDescriptor, Locale locale, File outputDirectory )\n        throws RendererException, IOException\n    {\n        String outputFileName = \"index.html\";\n\n        SiteRendererSink sink = siteRenderer.createSink( new File( siteDirectory ), outputFileName, siteDescriptor );\n\n        String title = i18n.getString( \"site-plugin\", locale, \"report.index.title\" ).trim() + \" \" + project.getName();\n\n        sink.head();\n        sink.title();\n        sink.text( title );\n        sink.title_();\n        sink.head_();\n        sink.body();\n\n        sink.section1();\n        sink.sectionTitle1();\n        sink.text( title );\n        sink.sectionTitle1_();\n\n        sink.paragraph();\n        if ( project.getDescription() != null )\n        {\n            // TODO How to handle i18n?\n            sink.text( project.getDescription() );\n        }\n        else\n        {\n            sink.text( i18n.getString( \"site-plugin\", locale, \"report.index.nodescription\" ) );\n        }\n        sink.paragraph_();\n\n        sink.body_();\n\n        sink.flush();\n\n        sink.close();\n\n        File outputFile = new File( outputDirectory, outputFileName );\n\n        siteRenderer.generateDocument( new OutputStreamWriter( new FileOutputStream( outputFile ), outputEncoding ),\n                                       template, attributes, sink, locale );\n    }","commit_id":"488ada90997f57611a02f3bace67d21c56aae861","url":"https://github.com/apache/maven-plugins"},{"original_method":"private void generateProjectReportsPage( InputStream siteDescriptor, Locale locale )\n        throws Exception\n    {\n        String outputFileName = \"maven-reports.html\";\n\n        SiteRendererSink sink = siteRenderer.createSink( new File( siteDirectory ), outputFileName, siteDescriptor );\n\n        String title = i18n.getString( \"site-plugin\", locale, \"report.project.title\" );\n\n        sink.head();\n        sink.title();\n        sink.text( title );\n        sink.title_();\n        sink.head_();\n        sink.body();\n\n        sink.section1();\n        sink.sectionTitle1();\n        sink.text( title );\n        sink.sectionTitle1_();\n\n        sink.paragraph();\n        sink.text( i18n.getString( \"site-plugin\", locale, \"report.project.description1\" ) + \" \" );\n        sink.link( \"http://maven.apache.org\" );\n        sink.text( \"Maven\" );\n        sink.link_();\n        sink.text( \". \" + i18n.getString( \"site-plugin\", locale, \"report.project.description2\" ) );\n        sink.paragraph_();\n\n        sink.section2();\n\n        sink.sectionTitle2();\n        sink.text( i18n.getString( \"site-plugin\", locale, \"report.project.sectionTitle\" ) );\n        sink.sectionTitle2_();\n\n        sink.table();\n\n        sink.tableRow();\n        sink.tableHeaderCell();\n        sink.text( i18n.getString( \"site-plugin\", locale, \"report.project.column.document\" ) );\n        sink.tableHeaderCell_();\n        sink.tableHeaderCell();\n        sink.text( i18n.getString( \"site-plugin\", locale, \"report.project.column.description\" ) );\n        sink.tableHeaderCell_();\n        sink.tableRow_();\n\n        for ( Iterator i = projectReports.iterator(); i.hasNext(); )\n        {\n            MavenReport report = (MavenReport) i.next();\n\n            sink.tableRow();\n            sink.tableCell();\n            sink.link( report.getOutputName() + \".html\" );\n            sink.text( report.getName( locale ) );\n            sink.link_();\n            sink.tableCell_();\n            sink.tableCell();\n            sink.text( report.getDescription( locale ) );\n            sink.tableCell_();\n            sink.tableRow_();\n        }\n\n        sink.table_();\n\n        sink.section2_();\n\n        sink.section1_();\n\n        sink.body_();\n\n        File outputFile = new File( getOuputDirectory( locale ), outputFileName );\n\n        siteRenderer.generateDocument( new OutputStreamWriter( new FileOutputStream( outputFile ), outputEncoding ),\n                                       template, attributes, sink, locale );\n    }","id":53475,"modified_method":"private void generateProjectReportsPage( String siteDescriptor, Locale locale, List projectReports,\n                                             File outputDirectory )\n        throws RendererException, IOException\n    {\n        String outputFileName = \"maven-reports.html\";\n\n        SiteRendererSink sink = siteRenderer.createSink( new File( siteDirectory ), outputFileName, siteDescriptor );\n\n        String title = i18n.getString( \"site-plugin\", locale, \"report.project.title\" );\n\n        sink.head();\n        sink.title();\n        sink.text( title );\n        sink.title_();\n        sink.head_();\n        sink.body();\n\n        sink.section1();\n        sink.sectionTitle1();\n        sink.text( title );\n        sink.sectionTitle1_();\n\n        sink.paragraph();\n        sink.text( i18n.getString( \"site-plugin\", locale, \"report.project.description1\" ) + \" \" );\n        sink.link( \"http://maven.apache.org\" );\n        sink.text( \"Maven\" );\n        sink.link_();\n        sink.text( \". \" + i18n.getString( \"site-plugin\", locale, \"report.project.description2\" ) );\n        sink.paragraph_();\n\n        sink.section2();\n\n        sink.sectionTitle2();\n        sink.text( i18n.getString( \"site-plugin\", locale, \"report.project.sectionTitle\" ) );\n        sink.sectionTitle2_();\n\n        sink.table();\n\n        sink.tableRow();\n        sink.tableHeaderCell();\n        sink.text( i18n.getString( \"site-plugin\", locale, \"report.project.column.document\" ) );\n        sink.tableHeaderCell_();\n        sink.tableHeaderCell();\n        sink.text( i18n.getString( \"site-plugin\", locale, \"report.project.column.description\" ) );\n        sink.tableHeaderCell_();\n        sink.tableRow_();\n\n        for ( Iterator i = projectReports.iterator(); i.hasNext(); )\n        {\n            MavenReport report = (MavenReport) i.next();\n\n            sink.tableRow();\n            sink.tableCell();\n            sink.link( report.getOutputName() + \".html\" );\n            sink.text( report.getName( locale ) );\n            sink.link_();\n            sink.tableCell_();\n            sink.tableCell();\n            sink.text( report.getDescription( locale ) );\n            sink.tableCell_();\n            sink.tableRow_();\n        }\n\n        sink.table_();\n\n        sink.section2_();\n\n        sink.section1_();\n\n        sink.body_();\n\n        File outputFile = new File( outputDirectory, outputFileName );\n\n        siteRenderer.generateDocument( new OutputStreamWriter( new FileOutputStream( outputFile ), outputEncoding ),\n                                       template, attributes, sink, locale );\n    }","commit_id":"488ada90997f57611a02f3bace67d21c56aae861","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Generate reports pages\n     *\n     * @param reports\n     * @param locale\n     * @param localeOutputDirectory\n     * @throws Exception\n     */\n    private void generateReportsPages( List reports, Locale locale, File localeOutputDirectory )\n        throws Exception\n    {\n        for ( Iterator j = reports.iterator(); j.hasNext(); )\n        {\n            MavenReport report = (MavenReport) j.next();\n\n            getLog().info( \"Generate \\\"\" + report.getName( locale ) + \"\\\" report.\" );\n\n            report.setReportOutputDirectory( localeOutputDirectory );\n\n            String reportFileName = report.getOutputName();\n\n            if ( locale.equals( defaultLocale ) )\n            {\n                generatedReportsFileName.add( reportFileName );\n            }\n            else\n            {\n                generatedReportsFileName.add( locale.getLanguage() + File.separator + reportFileName );\n            }\n\n            String outputFileName = reportFileName + \".html\";\n\n            SiteRendererSink sink = siteRenderer.createSink( new File( siteDirectory ), outputFileName,\n                                                             getSiteDescriptor( reports, locale ) );\n\n            report.generate( sink, locale );\n\n            if ( !report.isExternalReport() )\n            {\n                File outputFile = new File( localeOutputDirectory, outputFileName );\n\n                if ( !outputFile.getParentFile().exists() )\n                {\n                    outputFile.getParentFile().mkdirs();\n                }\n\n                siteRenderer.generateDocument(\n                    new OutputStreamWriter( new FileOutputStream( outputFile ), outputEncoding ), template, attributes,\n                    sink, locale );\n            }\n        }\n    }","id":53476,"modified_method":"/**\n     * Generate reports pages\n     *\n     * @param reports\n     * @param locale\n     * @param localeOutputDirectory\n     */\n    private void generateReportsPages( List reports, Locale locale, File localeOutputDirectory, Locale defaultLocale,\n                                       String siteDescriptor )\n        throws RendererException, IOException, MavenReportException\n    {\n        for ( Iterator j = reports.iterator(); j.hasNext(); )\n        {\n            MavenReport report = (MavenReport) j.next();\n\n            getLog().info( \"Generate \\\"\" + report.getName( locale ) + \"\\\" report.\" );\n\n            report.setReportOutputDirectory( localeOutputDirectory );\n\n            String reportFileName = report.getOutputName();\n\n            if ( locale.equals( defaultLocale ) )\n            {\n                generatedReportsFileName.add( reportFileName );\n            }\n            else\n            {\n                generatedReportsFileName.add( locale.getLanguage() + File.separator + reportFileName );\n            }\n\n            String outputFileName = reportFileName + \".html\";\n\n            SiteRendererSink sink = siteRenderer.createSink( new File( siteDirectory ), outputFileName,\n                                                             siteDescriptor );\n\n            report.generate( sink, locale );\n\n            if ( !report.isExternalReport() )\n            {\n                File outputFile = new File( localeOutputDirectory, outputFileName );\n\n                if ( !outputFile.getParentFile().exists() )\n                {\n                    outputFile.getParentFile().mkdirs();\n                }\n\n                siteRenderer.generateDocument(\n                    new OutputStreamWriter( new FileOutputStream( outputFile ), outputEncoding ), template, attributes,\n                    sink, locale );\n            }\n        }\n    }","commit_id":"488ada90997f57611a02f3bace67d21c56aae861","url":"https://github.com/apache/maven-plugins"},{"original_method":"private String getReportsMenu( Locale locale )\n    {\n        StringBuffer buffer = new StringBuffer();\n        buffer.append( \"<menu name=\\\"\" );\n        buffer.append( i18n.getString( \"site-plugin\", locale, \"report.menu.projectdocumentation\" ) );\n        buffer.append( \"\\\">\\n\" );\n        buffer.append( \"    <item name=\\\"\" );\n        buffer.append( i18n.getString( \"site-plugin\", locale, \"report.menu.about\" ) );\n        buffer.append( \" \" );\n        buffer.append( project.getName() );\n        buffer.append( \"\\\" href=\\\"/index.html\\\"/>\\n\" );\n\n        writeReportSubMenu( projectInfos, buffer, locale, \"report.menu.projectinformation\", \"project-info.html\" );\n        writeReportSubMenu( projectReports, buffer, locale, \"report.menu.projectreports\", \"maven-reports.html\" );\n\n        buffer.append( \"<\/menu>\\n\" );\n\n        return buffer.toString();\n    }","id":53477,"modified_method":"private String getReportsMenu( Locale locale, List projectInfos, List projectReports )\n    {\n        StringBuffer buffer = new StringBuffer();\n        buffer.append( \"<menu name=\\\"\" );\n        buffer.append( i18n.getString( \"site-plugin\", locale, \"report.menu.projectdocumentation\" ) );\n        buffer.append( \"\\\">\\n\" );\n        buffer.append( \"    <item name=\\\"\" );\n        buffer.append( i18n.getString( \"site-plugin\", locale, \"report.menu.about\" ) );\n        buffer.append( \" \" );\n        buffer.append( project.getName() );\n        buffer.append( \"\\\" href=\\\"/index.html\\\"/>\\n\" );\n\n        writeReportSubMenu( projectInfos, buffer, locale, \"report.menu.projectinformation\", \"project-info.html\" );\n        writeReportSubMenu( projectReports, buffer, locale, \"report.menu.projectreports\", \"maven-reports.html\" );\n\n        buffer.append( \"<\/menu>\\n\" );\n\n        return buffer.toString();\n    }","commit_id":"488ada90997f57611a02f3bace67d21c56aae861","url":"https://github.com/apache/maven-plugins"},{"original_method":"private void copyResources( File outputDir )\n        throws Exception\n    {\n        InputStream resourceList = getStream( RESOURCE_DIR + \"/resources.txt\" );\n\n        if ( resourceList != null )\n        {\n            LineNumberReader reader = new LineNumberReader( new InputStreamReader( resourceList ) );\n\n            String line;\n\n            while ( ( line = reader.readLine() ) != null )\n            {\n                InputStream is = getStream( RESOURCE_DIR + \"/\" + line );\n\n                if ( is == null )\n                {\n                    throw new IOException(\n                        \"The resource \" + line + \" doesn't exists in \" + DEFAULT_TEMPLATE + \" template.\" );\n                }\n\n                File outputFile = new File( outputDir, line );\n\n                if ( !outputFile.getParentFile().exists() )\n                {\n                    outputFile.getParentFile().mkdirs();\n                }\n\n                FileOutputStream w = new FileOutputStream( outputFile );\n\n                IOUtil.copy( is, w );\n\n                IOUtil.close( is );\n\n                IOUtil.close( w );\n            }\n        }\n    }","id":53478,"modified_method":"private void copyResources( File outputDir )\n        throws IOException\n    {\n        InputStream resourceList = getStream( RESOURCE_DIR + \"/resources.txt\" );\n\n        if ( resourceList != null )\n        {\n            LineNumberReader reader = new LineNumberReader( new InputStreamReader( resourceList ) );\n\n            String line = reader.readLine();\n\n            while ( line != null )\n            {\n                InputStream is = getStream( RESOURCE_DIR + \"/\" + line );\n\n                if ( is == null )\n                {\n                    throw new IOException(\n                        \"The resource \" + line + \" doesn't exists in \" + DEFAULT_TEMPLATE + \" template.\" );\n                }\n\n                File outputFile = new File( outputDir, line );\n\n                if ( !outputFile.getParentFile().exists() )\n                {\n                    outputFile.getParentFile().mkdirs();\n                }\n\n                FileOutputStream w = new FileOutputStream( outputFile );\n\n                IOUtil.copy( is, w );\n\n                IOUtil.close( is );\n\n                IOUtil.close( w );\n\n                line = reader.readLine();\n            }\n        }\n    }","commit_id":"488ada90997f57611a02f3bace67d21c56aae861","url":"https://github.com/apache/maven-plugins"},{"original_method":"private File getOuputDirectory( Locale locale )\n    {\n        if ( localesList.size() == 1 )\n        {\n            return new File( outputDirectory );\n        }\n\n        if ( locale.getLanguage().equals( defaultLocale.getLanguage() ) )\n        {\n            return new File( outputDirectory );\n        }\n\n        return new File( outputDirectory, locale.getLanguage() );\n    }","id":53479,"modified_method":"private File getOutputDirectory( Locale locale, Locale defaultLocale )\n    {\n        if ( locale.getLanguage().equals( defaultLocale.getLanguage() ) )\n        {\n            return new File( outputDirectory );\n        }\n\n        return new File( outputDirectory, locale.getLanguage() );\n    }","commit_id":"488ada90997f57611a02f3bace67d21c56aae861","url":"https://github.com/apache/maven-plugins"},{"original_method":"private void generateProjectInfoPage( InputStream siteDescriptor, Locale locale )\n        throws Exception\n    {\n        String outputFileName = \"project-info.html\";\n\n        SiteRendererSink sink = siteRenderer.createSink( new File( siteDirectory ), outputFileName, siteDescriptor );\n\n        String title = i18n.getString( \"site-plugin\", locale, \"report.information.title\" );\n\n        sink.head();\n        sink.title();\n        sink.text( title );\n        sink.title_();\n        sink.head_();\n        sink.body();\n\n        sink.section1();\n        sink.sectionTitle1();\n        sink.text( title );\n        sink.sectionTitle1_();\n\n        sink.paragraph();\n        sink.text( i18n.getString( \"site-plugin\", locale, \"report.information.description1\" ) + \" \" );\n        sink.link( \"http://maven.apache.org\" );\n        sink.text( \"Maven\" );\n        sink.link_();\n        sink.text( \" \" + i18n.getString( \"site-plugin\", locale, \"report.information.description2\" ) );\n        sink.paragraph_();\n\n        sink.section2();\n\n        sink.sectionTitle2();\n        sink.text( i18n.getString( \"site-plugin\", locale, \"report.information.sectionTitle\" ) );\n        sink.sectionTitle2_();\n\n        sink.table();\n\n        sink.tableRow();\n        sink.tableHeaderCell();\n        sink.text( i18n.getString( \"site-plugin\", locale, \"report.information.column.document\" ) );\n        sink.tableHeaderCell_();\n        sink.tableHeaderCell();\n        sink.text( i18n.getString( \"site-plugin\", locale, \"report.information.column.description\" ) );\n        sink.tableHeaderCell_();\n        sink.tableRow_();\n\n        for ( Iterator i = projectInfos.iterator(); i.hasNext(); )\n        {\n            MavenReport report = (MavenReport) i.next();\n\n            sink.tableRow();\n            sink.tableCell();\n            sink.link( report.getOutputName() + \".html\" );\n            sink.text( report.getName( locale ) );\n            sink.link_();\n            sink.tableCell_();\n            sink.tableCell();\n            sink.text( report.getDescription( locale ) );\n            sink.tableCell_();\n            sink.tableRow_();\n        }\n\n        sink.table_();\n\n        sink.section2_();\n\n        sink.section1_();\n\n        sink.body_();\n\n        sink.flush();\n\n        sink.close();\n\n        File outputFile = new File( getOuputDirectory( locale ), outputFileName );\n\n        siteRenderer.generateDocument( new OutputStreamWriter( new FileOutputStream( outputFile ), outputEncoding ),\n                                       template, attributes, sink, locale );\n    }","id":53480,"modified_method":"private void generateProjectInfoPage( String siteDescriptor, Locale locale, List projectInfos,\n                                          File outputDirectory )\n        throws RendererException, IOException\n    {\n        String outputFileName = \"project-info.html\";\n\n        SiteRendererSink sink = siteRenderer.createSink( new File( siteDirectory ), outputFileName, siteDescriptor );\n\n        String title = i18n.getString( \"site-plugin\", locale, \"report.information.title\" );\n\n        sink.head();\n        sink.title();\n        sink.text( title );\n        sink.title_();\n        sink.head_();\n        sink.body();\n\n        sink.section1();\n        sink.sectionTitle1();\n        sink.text( title );\n        sink.sectionTitle1_();\n\n        sink.paragraph();\n        sink.text( i18n.getString( \"site-plugin\", locale, \"report.information.description1\" ) + \" \" );\n        sink.link( \"http://maven.apache.org\" );\n        sink.text( \"Maven\" );\n        sink.link_();\n        sink.text( \" \" + i18n.getString( \"site-plugin\", locale, \"report.information.description2\" ) );\n        sink.paragraph_();\n\n        sink.section2();\n\n        sink.sectionTitle2();\n        sink.text( i18n.getString( \"site-plugin\", locale, \"report.information.sectionTitle\" ) );\n        sink.sectionTitle2_();\n\n        sink.table();\n\n        sink.tableRow();\n        sink.tableHeaderCell();\n        sink.text( i18n.getString( \"site-plugin\", locale, \"report.information.column.document\" ) );\n        sink.tableHeaderCell_();\n        sink.tableHeaderCell();\n        sink.text( i18n.getString( \"site-plugin\", locale, \"report.information.column.description\" ) );\n        sink.tableHeaderCell_();\n        sink.tableRow_();\n\n        for ( Iterator i = projectInfos.iterator(); i.hasNext(); )\n        {\n            MavenReport report = (MavenReport) i.next();\n\n            sink.tableRow();\n            sink.tableCell();\n            sink.link( report.getOutputName() + \".html\" );\n            sink.text( report.getName( locale ) );\n            sink.link_();\n            sink.tableCell_();\n            sink.tableCell();\n            sink.text( report.getDescription( locale ) );\n            sink.tableCell_();\n            sink.tableRow_();\n        }\n\n        sink.table_();\n\n        sink.section2_();\n\n        sink.section1_();\n\n        sink.body_();\n\n        sink.flush();\n\n        sink.close();\n\n        File outputFile = new File( outputDirectory, outputFileName );\n\n        siteRenderer.generateDocument( new OutputStreamWriter( new FileOutputStream( outputFile ), outputEncoding ),\n                                       template, attributes, sink, locale );\n    }","commit_id":"488ada90997f57611a02f3bace67d21c56aae861","url":"https://github.com/apache/maven-plugins"},{"original_method":"private void categorizeReports( List reports )\n        throws MojoExecutionException\n    {\n        for ( Iterator i = reports.iterator(); i.hasNext(); )\n        {\n            MavenReport report = (MavenReport) i.next();\n            if ( MavenReport.CATEGORY_PROJECT_INFORMATION.equals( report.getCategoryName() ) )\n            {\n                projectInfos.add( report );\n            }\n            else if ( MavenReport.CATEGORY_PROJECT_REPORTS.equals( report.getCategoryName() ) )\n            {\n                projectReports.add( report );\n            }\n            else\n            {\n                throw new MojoExecutionException( \"'\" + report.getCategoryName() + \"' category define for \" +\n                    report.getName( defaultLocale ) + \" mojo isn't valid.\" );\n            }\n        }\n    }","id":53481,"modified_method":"private void categorizeReports( List reports, Locale defaultLocale, List projectInfos, List projectReports )\n        throws MojoExecutionException\n    {\n        for ( Iterator i = reports.iterator(); i.hasNext(); )\n        {\n            MavenReport report = (MavenReport) i.next();\n            if ( MavenReport.CATEGORY_PROJECT_INFORMATION.equals( report.getCategoryName() ) )\n            {\n                projectInfos.add( report );\n            }\n            else if ( MavenReport.CATEGORY_PROJECT_REPORTS.equals( report.getCategoryName() ) )\n            {\n                projectReports.add( report );\n            }\n            else\n            {\n                throw new MojoExecutionException( \"'\" + report.getCategoryName() + \"' category define for \" +\n                    report.getName( defaultLocale ) + \" mojo isn't valid.\" );\n            }\n        }\n    }","commit_id":"488ada90997f57611a02f3bace67d21c56aae861","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * Init the <code>localesList<\/code> variable.\n     * <p>If <code>locales<\/code> variable is available, the first valid token will be the <code>defaultLocale<\/code>\n     * for this instance of the Java Virtual Machine.<\/p>\n     */\n    private void initLocalesList()\n    {\n        if ( locales == null )\n        {\n            localesList.add( defaultLocale );\n\n            return;\n        }\n\n        String[] localesArray = StringUtils.split( locales, \",\" );\n\n        boolean defaultLocaleWasSet = false;\n        for ( int i = 0; i < localesArray.length; i++ )\n        {\n            Locale locale = codeToLocale( localesArray[i] );\n\n            if ( locale != null )\n            {\n                if ( !Arrays.asList( Locale.getAvailableLocales() ).contains( locale ) )\n                {\n                    getLog().warn( \"The locale parsed defined by '\" + locale +\n                        \"' is not available in this Java Virtual Machine (\" + System.getProperty( \"java.version\" ) +\n                        \" from \" + System.getProperty( \"java.vendor\" ) + \") - IGNORING\" );\n                    continue;\n                }\n\n                if ( !i18n.getBundle( \"site-plugin\", locale ).getLocale().getLanguage().equals( locale.getLanguage() ) )\n                {\n                    StringBuffer sb = new StringBuffer();\n\n                    sb.append( \"The locale '\" ).append( locale ).append( \"' (\" );\n                    sb.append( locale.getDisplayName( Locale.ENGLISH ) );\n                    sb.append( \") is not currently support by Maven - IGNORING. \" );\n                    sb.append( \"\\n\" );\n                    sb.append( \"Contribution are welcome and greatly appreciated! \" );\n                    sb.append( \"\\n\" );\n                    sb.append( \"If you want to contribute a new translation, please visit \" );\n                    sb.append( \"http://maven.apache.org/maven2/plugins/maven-site-plugin/i18n.html \" );\n                    sb.append( \"for detailed instructions.\" );\n\n                    getLog().warn( sb.toString() );\n\n                    continue;\n                }\n\n                localesList.add( locale );\n\n                if ( !defaultLocaleWasSet )\n                {\n                    defaultLocale = locale;\n                    defaultLocaleWasSet = true;\n                }\n            }\n        }\n    }","id":53482,"modified_method":"/**\n     * Init the <code>localesList<\/code> variable.\n     * <p>If <code>locales<\/code> variable is available, the first valid token will be the <code>defaultLocale<\/code>\n     * for this instance of the Java Virtual Machine.<\/p>\n     */\n    private List initLocalesList()\n    {\n        if ( locales == null )\n        {\n            return Collections.EMPTY_LIST;\n        }\n        String[] localesArray = StringUtils.split( locales, \",\" );\n\n        List localesList = new ArrayList();\n        for ( int i = 0; i < localesArray.length; i++ )\n        {\n            Locale locale = codeToLocale( localesArray[i] );\n\n            if ( locale != null )\n            {\n                if ( !Arrays.asList( Locale.getAvailableLocales() ).contains( locale ) )\n                {\n                    getLog().warn( \"The locale parsed defined by '\" + locale +\n                        \"' is not available in this Java Virtual Machine (\" + System.getProperty( \"java.version\" ) +\n                        \" from \" + System.getProperty( \"java.vendor\" ) + \") - IGNORING\" );\n                    continue;\n                }\n\n                if ( !i18n.getBundle( \"site-plugin\", locale ).getLocale().getLanguage().equals( locale.getLanguage() ) )\n                {\n                    StringBuffer sb = new StringBuffer();\n\n                    sb.append( \"The locale '\" ).append( locale ).append( \"' (\" );\n                    sb.append( locale.getDisplayName( Locale.ENGLISH ) );\n                    sb.append( \") is not currently support by Maven - IGNORING. \" );\n                    sb.append( \"\\n\" );\n                    sb.append( \"Contribution are welcome and greatly appreciated! \" );\n                    sb.append( \"\\n\" );\n                    sb.append( \"If you want to contribute a new translation, please visit \" );\n                    sb.append( \"http://maven.apache.org/maven2/plugins/maven-site-plugin/i18n.html \" );\n                    sb.append( \"for detailed instructions.\" );\n\n                    getLog().warn( sb.toString() );\n\n                    continue;\n                }\n\n                localesList.add( locale );\n            }\n        }\n        return localesList;\n    }","commit_id":"488ada90997f57611a02f3bace67d21c56aae861","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * @see org.apache.maven.plugin.Mojo#execute()\n     */\n    public void execute()\n        throws MojoExecutionException\n    {\n        if ( templateDirectory == null )\n        {\n            siteRenderer.setTemplateClassLoader( DoxiaMojo.class.getClassLoader() );\n        }\n        else\n        {\n            try\n            {\n                URL templateDirectoryUrl = new URL( templateDirectory );\n\n                URL[] urls = {templateDirectoryUrl};\n\n                URLClassLoader urlClassloader = new URLClassLoader( urls );\n\n                siteRenderer.setTemplateClassLoader( urlClassloader );\n            }\n            catch ( MalformedURLException e )\n            {\n                throw new MojoExecutionException( templateDirectory + \" isn't a valid URL.\", e );\n            }\n        }\n\n        List reports = getReports();\n\n        if ( attributes == null )\n        {\n            attributes = new HashMap();\n        }\n\n        if ( attributes.get( \"project\" ) == null )\n        {\n            attributes.put( \"project\", project );\n        }\n\n        if ( attributes.get( \"outputEncoding\" ) == null )\n        {\n            attributes.put( \"outputEncoding\", outputEncoding );\n        }\n\n        try\n        {\n            categorizeReports( reports );\n\n            initLocalesList();\n\n            Locale.setDefault( defaultLocale );\n\n            for ( Iterator iterator = localesList.iterator(); iterator.hasNext(); )\n            {\n                Locale locale = (Locale) iterator.next();\n\n                File localeOutputDirectory = getOuputDirectory( locale );\n\n                // Safety\n                if ( !localeOutputDirectory.exists() )\n                {\n                    localeOutputDirectory.mkdirs();\n                }\n\n                // Handle the GeneratedSite Directory\n                File generatedSiteFile = new File( generatedSiteDirectory );\n                if ( generatedSiteFile.exists() )\n                {\n                    InputStream siteDescriptor = getSiteDescriptor( reports, locale );\n                    siteRenderer.render( generatedSiteFile, localeOutputDirectory, siteDescriptor, template, attributes,\n                                         locale );\n                }\n\n                // Generate static site\n                File siteDirectoryFile = new File( siteDirectory );\n                if ( !locale.getLanguage().equals( defaultLocale.getLanguage() ) )\n                {\n                    siteDirectoryFile = new File( siteDirectory, locale.getLanguage() );\n                }\n\n                // Try to find duplicate files\n                Map duplicate = new LinkedHashMap();\n                if ( siteDirectoryFile.exists() )\n                {\n                    tryToFindDuplicates( siteDirectoryFile, duplicate );\n                }\n                if ( generatedSiteFile.exists() )\n                {\n                    tryToFindDuplicates( generatedSiteFile, duplicate );\n                }\n\n                // Exception if a file is duplicate\n                String msg = createDuplicateExceptionMsg( duplicate, locale );\n                if ( msg != null )\n                {\n                    throw new MavenReportException( msg );\n                }\n\n                //Generate reports\n                if ( reports != null )\n                {\n                    try\n                    {\n                        generateReportsPages( reports, locale, localeOutputDirectory );\n                    }\n                    catch ( Exception e )\n                    {\n                        throw new MojoExecutionException( \"An error is occurred in reports pages generation.\", e );\n                    }\n                }\n\n                //Generate overview pages\n                if ( projectInfos.size() > 0 )\n                {\n                    try\n                    {\n                        generateProjectInfoPage( getSiteDescriptor( reports, locale ), locale );\n                    }\n                    catch ( Exception e )\n                    {\n                        throw new MojoExecutionException( \"An error is occurred in project info page generation.\", e );\n                    }\n                }\n\n                if ( projectReports.size() > 0 )\n                {\n                    try\n                    {\n                        generateProjectReportsPage( getSiteDescriptor( reports, locale ), locale );\n                    }\n                    catch ( Exception e )\n                    {\n                        throw new MojoExecutionException( \"An error is occurred in project reports page generation.\",\n                                                          e );\n                    }\n                }\n\n                // Try to generate the index.html\n                if ( duplicate.get( \"index\" ) != null )\n                {\n                    getLog().info( \"Ignoring the index file generation for the \\\"\" + getDisplayLanguage( locale ) +\n                        \"\\\" version.\" );\n                }\n                else\n                {\n                    getLog().info( \"Generate an index file for the \\\"\" + getDisplayLanguage( locale ) + \"\\\" version.\" );\n                    generateIndexPage( getSiteDescriptor( reports, locale ), locale );\n                }\n\n                // Log if a user override a report file\n                for ( Iterator it = generatedReportsFileName.iterator(); it.hasNext(); )\n                {\n                    String reportFileName = (String) it.next();\n\n                    if ( duplicate.get( reportFileName ) != null )\n                    {\n                        getLog().info( \"Override the generated file \\\"\" + reportFileName + \"\\\" for the \\\"\" +\n                            getDisplayLanguage( locale ) + \"\\\" version.\" );\n                    }\n                }\n\n                siteRenderer.render( siteDirectoryFile, localeOutputDirectory, getSiteDescriptor( reports, locale ),\n                                     template, attributes, locale );\n\n                File cssDirectory = new File( siteDirectory, \"css\" );\n                File imagesDirectory = new File( siteDirectory, \"images\" );\n\n                // special case for backwards compatibility\n                if ( cssDirectory.exists() || imagesDirectory.exists() )\n                {\n                    getLog().warn( \"DEPRECATED: the css and images directories are deprecated, please use resources\" );\n\n                    copyDirectory( cssDirectory, new File( localeOutputDirectory, \"css\" ) );\n\n                    copyDirectory( imagesDirectory, new File( localeOutputDirectory, \"images\" ) );\n                }\n\n                copyResources( localeOutputDirectory );\n\n                // Copy site resources\n                if ( resourcesDirectory != null && resourcesDirectory.exists() )\n                {\n                    copyDirectory( resourcesDirectory, localeOutputDirectory );\n                }\n\n                // Copy the generated site in parent site if needed to provide module links\n                if ( addModules )\n                {\n                    MavenProject parentProject = project.getParent();\n                    if ( parentProject != null )\n                    {\n                        // TODO Handle user plugin configuration\n/* TODO: Not working, and would be better working as a top-level aggregation rather than pushing from the subprojects...\n                        File basedir = parentProject.getBasedir();\n                        if ( basedir != null )\n                        {\n                            String path = parentProject.getBuild().getDirectory() + \"/site/\" + project.getArtifactId();\n                            File parentSiteDir = new File( basedir, path );\n\n                            if ( !parentSiteDir.exists() )\n                            {\n                                parentSiteDir.mkdirs();\n                            }\n\n                            File siteDir = new File( outputDirectory );\n                            FileUtils.copyDirectoryStructure( siteDir, parentSiteDir );\n                        }\n                        else\n                        {\n                            getLog().info( \"Not using parent as it was not located on the filesystem\" );\n                        }\n*/\n                    }\n                }\n            }\n        }\n        catch ( MavenReportException e )\n        {\n            throw new MojoExecutionException( \"Error during report generation\", e );\n        }\n        catch ( RendererException e )\n        {\n            throw new MojoExecutionException( \"Error during page generation\", e );\n        }\n        catch ( Exception e )\n        {\n            throw new MojoExecutionException( \"Error during site generation\", e );\n        }\n    }","id":53483,"modified_method":"/**\n     * @see org.apache.maven.plugin.Mojo#execute()\n     */\n    public void execute()\n        throws MojoExecutionException\n    {\n        if ( templateDirectory == null )\n        {\n            siteRenderer.setTemplateClassLoader( DoxiaMojo.class.getClassLoader() );\n        }\n        else\n        {\n            try\n            {\n                URL templateDirectoryUrl = new URL( templateDirectory );\n\n                URL[] urls = {templateDirectoryUrl};\n\n                URLClassLoader urlClassloader = new URLClassLoader( urls );\n\n                siteRenderer.setTemplateClassLoader( urlClassloader );\n            }\n            catch ( MalformedURLException e )\n            {\n                throw new MojoExecutionException( templateDirectory + \" isn't a valid URL.\", e );\n            }\n        }\n\n        List reports = getReports();\n\n        if ( attributes == null )\n        {\n            attributes = new HashMap();\n        }\n\n        if ( attributes.get( \"project\" ) == null )\n        {\n            attributes.put( \"project\", project );\n        }\n\n        if ( attributes.get( \"outputEncoding\" ) == null )\n        {\n            attributes.put( \"outputEncoding\", outputEncoding );\n        }\n\n        try\n        {\n            List localesList = initLocalesList();\n            if ( localesList.isEmpty() )\n            {\n                localesList = Collections.singletonList( Locale.ENGLISH );\n            }\n\n            // Default is first in the list\n            Locale defaultLocale = (Locale) localesList.get( 0 );\n            Locale.setDefault( defaultLocale );\n\n            List projectInfos = new ArrayList();\n            List projectReports = new ArrayList();\n            categorizeReports( reports, defaultLocale, projectInfos, projectReports );\n\n            for ( Iterator iterator = localesList.iterator(); iterator.hasNext(); )\n            {\n                Locale locale = (Locale) iterator.next();\n\n                String siteDescriptor = getSiteDescriptor( reports, locale, projectInfos, projectReports );\n\n                File outputDirectory = getOutputDirectory( locale, defaultLocale );\n\n                // Safety\n                if ( !outputDirectory.exists() )\n                {\n                    outputDirectory.mkdirs();\n                }\n\n                // Handle the GeneratedSite Directory\n                File generatedSiteFile = new File( generatedSiteDirectory );\n                if ( generatedSiteFile.exists() )\n                {\n                    siteRenderer.render( generatedSiteFile, outputDirectory, siteDescriptor, template, attributes,\n                                         locale );\n                }\n\n                // Generate static site\n                File siteDirectoryFile = new File( siteDirectory );\n                if ( !locale.getLanguage().equals( defaultLocale.getLanguage() ) )\n                {\n                    siteDirectoryFile = new File( siteDirectory, locale.getLanguage() );\n                }\n\n                // Try to find duplicate files\n                Map duplicate = new LinkedHashMap();\n                if ( siteDirectoryFile.exists() )\n                {\n                    tryToFindDuplicates( siteDirectoryFile, duplicate );\n                }\n                if ( generatedSiteFile.exists() )\n                {\n                    tryToFindDuplicates( generatedSiteFile, duplicate );\n                }\n\n                // Exception if a file is duplicate\n                String msg = createDuplicateExceptionMsg( duplicate, locale );\n                if ( msg != null )\n                {\n                    throw new MavenReportException( msg );\n                }\n\n                //Generate reports\n                if ( reports != null )\n                {\n                    generateReportsPages( reports, locale, outputDirectory, defaultLocale, siteDescriptor );\n                }\n\n                //Generate overview pages\n                if ( projectInfos.size() > 0 )\n                {\n                    generateProjectInfoPage( siteDescriptor, locale, projectInfos, outputDirectory );\n                }\n\n                if ( projectReports.size() > 0 )\n                {\n                    generateProjectReportsPage( siteDescriptor, locale, projectReports, outputDirectory );\n                }\n\n                // Try to generate the index.html\n                String displayLanguage = locale.getDisplayLanguage( Locale.ENGLISH );\n                if ( duplicate.get( \"index\" ) != null )\n                {\n                    getLog().info( \"Ignoring the index file generation for the \" + displayLanguage + \" version.\" );\n                }\n                else\n                {\n                    getLog().info( \"Generate an index file for the \" + displayLanguage + \" version.\" );\n                    generateIndexPage( siteDescriptor, locale, outputDirectory );\n                }\n\n                // Log if a user override a report file\n                for ( Iterator it = generatedReportsFileName.iterator(); it.hasNext(); )\n                {\n                    String reportFileName = (String) it.next();\n\n                    if ( duplicate.get( reportFileName ) != null )\n                    {\n                        getLog().info( \"Override the generated file \\\"\" + reportFileName + \"\\\" for the \" +\n                            displayLanguage + \" version.\" );\n                    }\n                }\n\n                siteRenderer.render( siteDirectoryFile, outputDirectory, siteDescriptor, template, attributes, locale );\n\n                File cssDirectory = new File( siteDirectory, \"css\" );\n                File imagesDirectory = new File( siteDirectory, \"images\" );\n\n                // special case for backwards compatibility\n                if ( cssDirectory.exists() || imagesDirectory.exists() )\n                {\n                    getLog().warn( \"DEPRECATED: the css and images directories are deprecated, please use resources\" );\n\n                    copyDirectory( cssDirectory, new File( outputDirectory, \"css\" ) );\n\n                    copyDirectory( imagesDirectory, new File( outputDirectory, \"images\" ) );\n                }\n\n                copyResources( outputDirectory );\n\n                // Copy site resources\n                if ( resourcesDirectory != null && resourcesDirectory.exists() )\n                {\n                    copyDirectory( resourcesDirectory, outputDirectory );\n                }\n\n                // Copy the generated site in parent site if needed to provide module links\n                if ( addModules )\n                {\n                    MavenProject parentProject = project.getParent();\n                    if ( parentProject != null )\n                    {\n                        // TODO Handle user plugin configuration\n/* TODO: Not working, and would be better working as a top-level aggregation rather than pushing from the subprojects...\n                        File basedir = parentProject.getBasedir();\n                        if ( basedir != null )\n                        {\n                            String path = parentProject.getBuild().getDirectory() + \"/site/\" + project.getArtifactId();\n                            File parentSiteDir = new File( basedir, path );\n\n                            if ( !parentSiteDir.exists() )\n                            {\n                                parentSiteDir.mkdirs();\n                            }\n\n                            File siteDir = new File( outputDirectory );\n                            FileUtils.copyDirectoryStructure( siteDir, parentSiteDir );\n                        }\n                        else\n                        {\n                            getLog().info( \"Not using parent as it was not located on the filesystem\" );\n                        }\n*/\n                    }\n                }\n            }\n        }\n        catch ( MavenReportException e )\n        {\n            throw new MojoExecutionException( \"Error during report generation\", e );\n        }\n        catch ( RendererException e )\n        {\n            throw new MojoExecutionException( \"Error during page generation\", e );\n        }\n        catch ( IOException e )\n        {\n            throw new MojoExecutionException( \"Error during site generation\", e );\n        }\n    }","commit_id":"488ada90997f57611a02f3bace67d21c56aae861","url":"https://github.com/apache/maven-plugins"},{"original_method":"public void populateTextStyle(String id, TextStyle style, TextStyle defaults) {\n\t\t// prepare\n\t\tString colorKey = PREFERENCE_TAG + PreferenceStoreAccessor.getTokenColorPreferenceKey(id);\n\t\tString backgroundKey = PREFERENCE_TAG + getTokenBackgroundColorPreferenceKey(id);\n\t\tString fontKey = PREFERENCE_TAG + getTokenFontPreferenceKey(id);\n\t\tString styleKey = PREFERENCE_TAG + getTokenStylePreferenceKey(id);\n\n\t\t// DefaultDefault\n\t\tIPreferenceStore editorsStore = EditorsUI.getPreferenceStore();\n\t\tRGB fontColorDefaultDefault = editorsStore.getBoolean(AbstractTextEditor.PREFERENCE_COLOR_FOREGROUND_SYSTEM_DEFAULT) ? getDisplay()\n\t\t\t\t.getSystemColor(SWT.COLOR_LIST_FOREGROUND).getRGB()\n\t\t\t\t: PreferenceConverter.getColor(editorsStore, AbstractTextEditor.PREFERENCE_COLOR_FOREGROUND);\n\t\tRGB backgrounColorDefaultDefault = editorsStore\n\t\t\t\t.getBoolean(AbstractTextEditor.PREFERENCE_COLOR_BACKGROUND_SYSTEM_DEFAULT) ? getDisplay().getSystemColor(\n\t\t\t\tSWT.COLOR_LIST_BACKGROUND).getRGB() : PreferenceConverter.getColor(editorsStore,\n\t\t\t\tAbstractTextEditor.PREFERENCE_COLOR_BACKGROUND);\n\t\tFontData[] fontDataDefaultDefault = JFaceResources.getTextFont().getFontData();\n\n\t\t// set defaults\n\t\tIPreferenceStore preferenceStore = getPreferenceStore();\n\t\tif (defaults.getColor() != null)\n\t\t\tPreferenceConverter.setDefault(preferenceStore, colorKey, defaults.getColor());\n\t\telse {\n\t\t\tPreferenceConverter.setDefault(preferenceStore, colorKey, fontColorDefaultDefault);\n\t\t}\n\t\tif (defaults.getBackgroundColor() != null)\n\t\t\tPreferenceConverter.setDefault(preferenceStore, backgroundKey, defaults.getBackgroundColor());\n\t\telse {\n\t\t\tPreferenceConverter.setDefault(preferenceStore, backgroundKey, backgrounColorDefaultDefault);\n\t\t}\n\t\tif (defaults.getFontData() != null)\n\t\t\tPreferenceConverter.setDefault(preferenceStore, fontKey, defaults.getFontData());\n\t\telse {\n\t\t\tPreferenceConverter.setDefault(preferenceStore, fontKey, fontDataDefaultDefault);\n\t\t}\n\t\tpreferenceStore.setDefault(styleKey, defaults.getStyle());\n\n\t\t// populate\n\t\tRGB color = PreferenceConverter.getColor(preferenceStore, colorKey);\n\t\tif (!color.equals(fontColorDefaultDefault))\n\t\t\tstyle.setColor(color);\n\t\tRGB background = PreferenceConverter.getColor(preferenceStore, backgroundKey);\n\t\tif (!background.equals(backgrounColorDefaultDefault))\n\t\t\tstyle.setBackgroundColor(background);\n\t\tFontData[] fontDataArray = PreferenceConverter.getFontDataArray(preferenceStore, fontKey);\n\t\tif (!Arrays.equals(fontDataArray, fontDataDefaultDefault)) {\n\t\t\tstyle.setFontData(fontDataArray);\n\t\t}\n\t\tstyle.setStyle(preferenceStore.getInt(styleKey));\n\t}","id":53484,"modified_method":"public void populateTextStyle(String id, TextStyle style, TextStyle defaults) {\n\t\tIPreferenceStore editorsStore = EditorsUI.getPreferenceStore();\n\t\tRGB fontColorDefaultDefault = editorsStore.getBoolean(AbstractTextEditor.PREFERENCE_COLOR_FOREGROUND_SYSTEM_DEFAULT) \n\t\t\t\t? getDisplay().getSystemColor(SWT.COLOR_LIST_FOREGROUND).getRGB()\n\t\t\t\t: PreferenceConverter.getColor(editorsStore, AbstractTextEditor.PREFERENCE_COLOR_FOREGROUND);\n\t\tRGB backgrounColorDefaultDefault = editorsStore.getBoolean(AbstractTextEditor.PREFERENCE_COLOR_BACKGROUND_SYSTEM_DEFAULT) \n\t\t\t\t? getDisplay().getSystemColor(SWT.COLOR_LIST_BACKGROUND).getRGB() \n\t\t\t\t: PreferenceConverter.getColor(editorsStore, AbstractTextEditor.PREFERENCE_COLOR_BACKGROUND);\n\t\tFontData[] fontDataDefaultDefault = JFaceResources.getTextFont().getFontData();\n\n\t\tIPreferenceStore preferenceStore = getPreferenceStore();\n\t\tString cssID = CSS_PREFIX + id;\n\t\tIPreferenceStore cssPrefStore = getPluginCssPreferenceStore();\n\t\t\n\t\tString colorKey = PREFERENCE_TAG + getTokenColorPreferenceKey(id);\n\t\tString cssFontColor = cssPrefStore.getString(getTokenColorPreferenceKey(cssID));\n\t\tif(!Strings.isEmpty(cssFontColor)) {\n\t\t\tpreferenceStore.setDefault(colorKey, cssFontColor);\n\t\t} else if (defaults.getColor() != null) {\n\t\t\tPreferenceConverter.setDefault(preferenceStore, colorKey, defaults.getColor());\n\t\t} else {\n\t\t\tPreferenceConverter.setDefault(preferenceStore, colorKey, fontColorDefaultDefault);\n\t\t}\n\t\t\n\t\tString backgroundKey = PREFERENCE_TAG + getTokenBackgroundColorPreferenceKey(id);\n\t\tString cssBgColor = cssPrefStore.getString(getTokenBackgroundColorPreferenceKey(cssID));\n\t\tif(!Strings.isEmpty(cssBgColor)) {\n\t\t\tpreferenceStore.setDefault(backgroundKey, cssBgColor);\n\t\t} else if (defaults.getBackgroundColor() != null) {\n\t\t\tPreferenceConverter.setDefault(preferenceStore, backgroundKey, defaults.getBackgroundColor());\n\t\t} else {\n\t\t\tPreferenceConverter.setDefault(preferenceStore, backgroundKey, backgrounColorDefaultDefault);\n\t\t}\n\t\t\n\t\tString fontKey = PREFERENCE_TAG + getTokenFontPreferenceKey(id);\n\t\tString cssFont = cssPrefStore.getString(getTokenFontPreferenceKey(cssID));\n\t\tif(!Strings.isEmpty(cssFont)) {\n\t\t\tpreferenceStore.setDefault(fontKey, cssFont);\n\t\t} else if (defaults.getFontData() != null)\n\t\t\tPreferenceConverter.setDefault(preferenceStore, fontKey, defaults.getFontData());\n\t\telse {\n\t\t\tPreferenceConverter.setDefault(preferenceStore, fontKey, fontDataDefaultDefault);\n\t\t}\n\t\t\n\t\tString styleKey = PREFERENCE_TAG + getTokenStylePreferenceKey(id);\n\t\tint cssStyle = cssPrefStore.getInt(getTokenStylePreferenceKey(cssID));\n\t\tif(cssStyle != 0) {\n\t\t\tpreferenceStore.setDefault(styleKey, cssStyle);\n\t\t} else {\n\t\t\tpreferenceStore.setDefault(styleKey, defaults.getStyle());\n\t\t}\n\t\t\n\t\t// populate\n\t\tRGB color = PreferenceConverter.getColor(preferenceStore, colorKey);\n\t\tif (!color.equals(fontColorDefaultDefault))\n\t\t\tstyle.setColor(color);\n\t\tRGB background = PreferenceConverter.getColor(preferenceStore, backgroundKey);\n\t\tif (!background.equals(backgrounColorDefaultDefault))\n\t\t\tstyle.setBackgroundColor(background);\n\t\tFontData[] fontDataArray = PreferenceConverter.getFontDataArray(preferenceStore, fontKey);\n\t\tif (!Arrays.equals(fontDataArray, fontDataDefaultDefault)) {\n\t\t\tstyle.setFontData(fontDataArray);\n\t\t}\n\t\tstyle.setStyle(preferenceStore.getInt(styleKey));\n\t}","commit_id":"6006b51f4f9e16c6ed27b223f494927bc571a5dc","url":"https://github.com/eclipse/xtext"},{"original_method":"/**\n\t * @see org.apache.wicket.Component#onBeforeRender()\n\t */\n\t@Override\n\tprotected void onBeforeRender()\n\t{\n\t\tdateField.setRequired(isRequired());\n\t\thoursField.setRequired(isRequired());\n\t\tminutesField.setRequired(isRequired());\n\n\t\tboolean use12HourFormat = use12HourFormat();\n\t\tamOrPmChoice.setVisible(use12HourFormat);\n\n\t\tDate modelObject = (Date)getDefaultModelObject();\n\t\tif (modelObject == null)\n\t\t{\n\t\t\tdate = null;\n\t\t\thours = null;\n\t\t\tminutes = null;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tMutableDateTime mDate;\n\t\t\t// convert date to the client's time zone if we have that info\n\t\t\tTimeZone zone = getClientTimeZone();\n\t\t\tif (zone != null)\n\t\t\t{\n\t\t\t\tmDate = new MutableDateTime(modelObject, DateTimeZone.forTimeZone(zone));\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmDate = new MutableDateTime(modelObject);\n\t\t\t}\n\n\t\t\tdate = mDate.toDate();\n\n\t\t\tif (use12HourFormat)\n\t\t\t{\n\t\t\t\tint hourOfHalfDay = mDate.get(DateTimeFieldType.hourOfHalfday());\n\t\t\t\thours = hourOfHalfDay == 0 ? 12 : hourOfHalfDay;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\thours = mDate.get(DateTimeFieldType.hourOfDay());\n\t\t\t}\n\n\t\t\tamOrPm = (mDate.get(DateTimeFieldType.halfdayOfDay()) == 0) ? AM_PM.AM : AM_PM.PM;\n\t\t\tminutes = mDate.getMinuteOfHour();\n\t\t}\n\n\t\tsuper.onBeforeRender();\n\t}","id":53485,"modified_method":"/**\n\t * @see org.apache.wicket.Component#onBeforeRender()\n\t */\n\t@Override\n\tprotected void onBeforeRender()\n\t{\n\t\tdateField.setRequired(isRequired());\n\t\thoursField.setRequired(isRequired());\n\t\tminutesField.setRequired(isRequired());\n\n\t\tboolean use12HourFormat = use12HourFormat();\n\t\tamOrPmChoice.setVisible(use12HourFormat);\n\n\t\tDate modelObject = (Date)getDefaultModelObject();\n\t\tif (modelObject == null)\n\t\t{\n\t\t\tdate = null;\n\t\t\thours = null;\n\t\t\tminutes = null;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tMutableDateTime mDate = new MutableDateTime(modelObject);\n\t\t\t// convert date to the client's time zone if we have that info\n\t\t\tTimeZone zone = getClientTimeZone();\n\t\t\tif (zone != null)\n\t\t\t{\n\t\t\t\tmDate.setZone(DateTimeZone.forTimeZone(zone));\n\t\t\t}\n\n\t\t\tdate = mDate.toDateTime().toLocalDate().toDate();\n\n\t\t\tif (use12HourFormat)\n\t\t\t{\n\t\t\t\tint hourOfHalfDay = mDate.get(DateTimeFieldType.hourOfHalfday());\n\t\t\t\thours = hourOfHalfDay == 0 ? 12 : hourOfHalfDay;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\thours = mDate.get(DateTimeFieldType.hourOfDay());\n\t\t\t}\n\n\t\t\tamOrPm = (mDate.get(DateTimeFieldType.halfdayOfDay()) == 0) ? AM_PM.AM : AM_PM.PM;\n\t\t\tminutes = mDate.getMinuteOfHour();\n\t\t}\n\n\t\tsuper.onBeforeRender();\n\t}","commit_id":"9e6efa619c144eb654e321a1409feb2804a1e2d5","url":"https://github.com/apache/wicket"},{"original_method":"/**\r\n\t * Simulate what DateTimeField does\r\n\t * \r\n\t * @param dateStr\r\n\t * @param hours\r\n\t * @param minutes\r\n\t * @param amOrPm\r\n\t * @param use12HourFormat\r\n\t * @param tzClient\r\n\t * @return Date\r\n\t * @throws ParseException\r\n\t */\r\n\tpublic Date convertDateNew(final String dateStr, final Integer hours, final Integer minutes,\r\n\t\tfinal AM_PM amOrPm, final boolean use12HourFormat, final TimeZone tzClient)\r\n\t\tthrows ParseException\r\n\t{\r\n\t\tlog.error(\">>> convertDateNew()\");\r\n\t\t// This is what I get from field.getConvertedInput()\r\n\t\tDate dateFieldInput = (dateStr != null ? DateFormat.getDateInstance().parse(dateStr) : null);\r\n\r\n\t\t// Default with \"now\"\r\n\t\tif (dateFieldInput == null)\r\n\t\t{\r\n\t\t\tdateFieldInput = new Date();\r\n\t\t}\r\n\r\n\t\t// Get year, month and day ignoring any timezone of the Date object\r\n\t\tCalendar cal = Calendar.getInstance();\r\n\t\tcal.setTime(dateFieldInput);\r\n\t\tint year = cal.get(Calendar.YEAR);\r\n\t\tint month = cal.get(Calendar.MONTH) + 1;\r\n\t\tint day = cal.get(Calendar.DAY_OF_MONTH);\r\n\t\tint iHours = (hours == null ? 0 : hours % 24);\r\n\t\tint iMins = (minutes == null ? 0 : minutes);\r\n\r\n\t\t// Use the input to create a date object with proper timezone\r\n\t\tMutableDateTime date = new MutableDateTime(year, month, day, iHours, iMins, 0, 0,\r\n\t\t\tDateTimeZone.forTimeZone(tzClient));\r\n\t\tlog.error(\"1. date: \" + date.getMillis() + \"  \" + date);\r\n\r\n\t\t// Adjust for halfday if needed\r\n\t\tint halfday = 0;\r\n\t\tif (use12HourFormat)\r\n\t\t{\r\n\t\t\thalfday = (amOrPm == AM_PM.PM ? 1 : 0);\r\n\t\t\tdate.set(DateTimeFieldType.halfdayOfDay(), halfday);\r\n\t\t\tdate.set(DateTimeFieldType.hourOfDay(), hours % 12);\r\n\t\t}\r\n\t\tlog.error(\"2. halfday adjustments: \" + date.getMillis() + \"  \" + date);\r\n\r\n\t\tDate rtn = new Date(date.getMillis());\r\n\t\tlog.error(\"3. final date: \" + rtn.getTime() + \"  \" + rtn);\r\n\t\treturn rtn;\r\n\t}","id":53486,"modified_method":"/**\r\n\t * Simulate what DateTimeField does\r\n\t * \r\n\t * @param dateStr\r\n\t * @param hours\r\n\t * @param minutes\r\n\t * @param amOrPm\r\n\t * @param use12HourFormat\r\n\t * @param tzClient\r\n\t * @return Date\r\n\t * @throws ParseException\r\n\t */\r\n\tpublic Date convertDateNew(final String dateStr, final Integer hours, final Integer minutes,\r\n\t\tfinal AM_PM amOrPm, final boolean use12HourFormat, final TimeZone tzClient)\r\n\t\tthrows ParseException\r\n\t{\r\n\t\tlog.error(\">>> convertDateNew()\");\r\n\t\t// This is what I get from field.getConvertedInput()\r\n\t\tDate dateFieldInput = (dateStr != null ? DateFormat.getDateInstance().parse(dateStr) : null);\r\n\r\n\t\t// Default with \"now\"\r\n\t\tif (dateFieldInput == null)\r\n\t\t{\r\n\t\t\tdateFieldInput = new Date();\r\n\t\t}\r\n\r\n\t\t// Get year, month and day ignoring any timezone of the Date object\r\n// Calendar cal = Calendar.getInstance();\r\n// cal.setTime(dateFieldInput);\r\n// int year = cal.get(Calendar.YEAR);\r\n// int month = cal.get(Calendar.MONTH) + 1;\r\n// int day = cal.get(Calendar.DAY_OF_MONTH);\r\n// int iHours = (hours == null ? 0 : hours % 24);\r\n// int iMins = (minutes == null ? 0 : minutes);\r\n//\r\n// // Use the input to create a date object with proper timezone\r\n// MutableDateTime date = new MutableDateTime(year, month, day, iHours, iMins, 0, 0,\r\n// DateTimeZone.forTimeZone(tzClient));\r\n\r\n\t\t// Use the input to create a date object. Ignore the timezone provided by dateFieldInput and\r\n\t\t// use tzClient instead. No re-calculation will happen. It should be the same as above.\r\n\t\tMutableDateTime date = new MutableDateTime(dateFieldInput,\r\n\t\t\tDateTimeZone.forTimeZone(tzClient));\r\n\t\tlog.error(\"1. date: \" + date.getMillis() + \"  \" + date);\r\n\r\n\t\t// Adjust for halfday if needed\r\n\t\tint halfday = 0;\r\n\t\tif (use12HourFormat)\r\n\t\t{\r\n\t\t\thalfday = (amOrPm == AM_PM.PM ? 1 : 0);\r\n\t\t\tdate.set(DateTimeFieldType.halfdayOfDay(), halfday);\r\n\t\t\tdate.set(DateTimeFieldType.hourOfDay(), hours % 12);\r\n\t\t}\r\n\t\tlog.error(\"2. halfday adjustments: \" + date.getMillis() + \"  \" + date);\r\n\r\n\t\tDate rtn = new Date(date.getMillis());\r\n\t\tlog.error(\"3. final date: \" + rtn.getTime() + \"  \" + rtn);\r\n\t\treturn rtn;\r\n\t}","commit_id":"9553a048ce6a97f3b9bf3b923d4db9695981964a","url":"https://github.com/apache/wicket"},{"original_method":"/**\r\n\t * \r\n\t * @throws ParseException\r\n\t */\r\n\tpublic void testDates1() throws ParseException\r\n\t{\r\n\t\tlog.error(\"=========== testDates1() =================\");\r\n\t\tTimeZone tzClient = TimeZone.getTimeZone(\"America/Los_Angeles\");\r\n\t\tTimeZone tzServer = TimeZone.getTimeZone(\"Europe/Berlin\");\r\n\r\n\t\tTimeZone.setDefault(tzServer);\r\n\t\tDateTimeZone.setDefault(DateTimeZone.forTimeZone(tzServer));\r\n\t\tLocale.setDefault(Locale.GERMAN);\r\n\r\n\t\tDate orig = convertDate(\"06.11.2010\", null, null, null, false, tzClient);\r\n\t\tDate origJoda = convertDateJoda(\"06.11.2010\", null, null, null, false, tzClient);\r\n\t\tDate orig3 = convertDateNew(\"06.11.2010\", null, null, null, false, tzClient);\r\n\r\n\t\tMutableDateTime dt = new MutableDateTime(DateTimeZone.forTimeZone(tzClient));\r\n\t\tdt.setDateTime(2010, 11, 06, 0, 0, 0, 0);\r\n\t\tDate date = new Date(dt.getMillis());\r\n\r\n\t\tlog.error(\"actual: \" + orig.getTime() + \"; joda: \" + origJoda.getTime() + \"; origNew: \" +\r\n\t\t\torig3.getTime() + \"; expected: \" + date.getTime());\r\n\t\tlog.error(\"actual: \" + orig + \"; joda: \" + origJoda + \"; origNew: \" + orig3 +\r\n\t\t\t\"; expected: \" + date);\r\n\t\tassertEquals(date.getTime(), orig3.getTime());\r\n\t\tassertEquals(date.getTime(), orig.getTime());\r\n\t\tassertEquals(origJoda.getTime(), orig.getTime());\r\n\t}","id":53487,"modified_method":"/**\r\n\t * \r\n\t * @throws ParseException\r\n\t */\r\n\tpublic void testDates1() throws ParseException\r\n\t{\r\n\t\tlog.error(\"=========== testDates1() =================\");\r\n\t\tTimeZone tzClient = TimeZone.getTimeZone(\"America/Los_Angeles\");\r\n\t\tTimeZone tzServer = TimeZone.getTimeZone(\"Europe/Berlin\");\r\n\r\n\t\tTimeZone.setDefault(tzServer);\r\n\t\tDateTimeZone.setDefault(DateTimeZone.forTimeZone(tzServer));\r\n\t\tLocale.setDefault(Locale.GERMAN);\r\n\r\n// Date orig = convertDate(\"06.11.2010\", null, null, null, false, tzClient);\r\n// Date origJoda = convertDateJoda(\"06.11.2010\", null, null, null, false, tzClient);\r\n\t\tDate orig3 = convertDateNew(\"06.11.2010\", null, null, null, false, tzClient);\r\n\r\n\t\tMutableDateTime dt = new MutableDateTime(DateTimeZone.forTimeZone(tzClient));\r\n\t\tdt.setDateTime(2010, 11, 06, 0, 0, 0, 0);\r\n\t\tDate date = new Date(dt.getMillis());\r\n\r\n\t\tlog.error(/* \"actual: \" + orig.getTime() + \"; joda: \" + origJoda.getTime() + */\"; origNew: \" +\r\n\t\t\torig3.getTime() + \"; expected: \" + date.getTime());\r\n\t\tlog.error(/* \"actual: \" + orig + \"; joda: \" + origJoda + */\"; origNew: \" + orig3 +\r\n\t\t\t\"; expected: \" + date);\r\n\t\tassertEquals(date.getTime(), orig3.getTime());\r\n// assertEquals(date.getTime(), orig.getTime());\r\n// assertEquals(origJoda.getTime(), orig.getTime());\r\n\t}","commit_id":"9b41a5c6520b4c54247591207fffdfc5dee8df06","url":"https://github.com/apache/wicket"},{"original_method":"/**\r\n\t * \r\n\t * @throws ParseException\r\n\t */\r\n\tpublic void testDates2() throws ParseException\r\n\t{\r\n\t\tlog.error(\"=========== testDates2() =================\");\r\n\t\tTimeZone tzClient = TimeZone.getTimeZone(\"America/Los_Angeles\");\r\n\t\tTimeZone tzServer = TimeZone.getTimeZone(\"Europe/Berlin\");\r\n\r\n\t\tTimeZone.setDefault(tzServer);\r\n\t\tDateTimeZone.setDefault(DateTimeZone.forTimeZone(tzServer));\r\n\t\tLocale.setDefault(Locale.GERMAN);\r\n\r\n\t\tDate orig = convertDate(\"06.11.2010\", 0, 0, AM_PM.AM, false, tzClient);\r\n\t\tDate origJoda = convertDateJoda(\"06.11.2010\", 0, 0, AM_PM.AM, false, tzClient);\r\n\t\tDate orig3 = convertDateNew(\"06.11.2010\", 0, 0, AM_PM.AM, false, tzClient);\r\n\r\n\t\tMutableDateTime dt = new MutableDateTime(DateTimeZone.forTimeZone(tzClient));\r\n\t\tdt.setDateTime(2010, 11, 06, 0, 0, 0, 0);\r\n\t\tDate date = new Date(dt.getMillis());\r\n\r\n\t\tlog.error(\"actual: \" + orig.getTime() + \"; joda: \" + origJoda.getTime() + \"; origNew: \" +\r\n\t\t\torig3.getTime() + \"; expected: \" + date.getTime());\r\n\t\tlog.error(\"actual: \" + orig + \"; joda: \" + origJoda + \"; origNew: \" + orig3 +\r\n\t\t\t\"; expected: \" + date);\r\n\t\tassertEquals(date.getTime(), orig3.getTime());\r\n\t\tassertEquals(date.getTime(), orig.getTime());\r\n\t\tassertEquals(origJoda.getTime(), orig.getTime());\r\n\t}","id":53488,"modified_method":"/**\r\n\t * \r\n\t * @throws ParseException\r\n\t */\r\n\tpublic void testDates2() throws ParseException\r\n\t{\r\n\t\tlog.error(\"=========== testDates2() =================\");\r\n\t\tTimeZone tzClient = TimeZone.getTimeZone(\"America/Los_Angeles\");\r\n\t\tTimeZone tzServer = TimeZone.getTimeZone(\"Europe/Berlin\");\r\n\r\n\t\tTimeZone.setDefault(tzServer);\r\n\t\tDateTimeZone.setDefault(DateTimeZone.forTimeZone(tzServer));\r\n\t\tLocale.setDefault(Locale.GERMAN);\r\n\r\n// Date orig = convertDate(\"06.11.2010\", 0, 0, AM_PM.AM, false, tzClient);\r\n// Date origJoda = convertDateJoda(\"06.11.2010\", 0, 0, AM_PM.AM, false, tzClient);\r\n\t\tDate orig3 = convertDateNew(\"06.11.2010\", 0, 0, AM_PM.AM, false, tzClient);\r\n\r\n\t\tMutableDateTime dt = new MutableDateTime(DateTimeZone.forTimeZone(tzClient));\r\n\t\tdt.setDateTime(2010, 11, 06, 0, 0, 0, 0);\r\n\t\tDate date = new Date(dt.getMillis());\r\n\r\n\t\tlog.error(/* \"actual: \" + orig.getTime() + \"; joda: \" + origJoda.getTime() + */\"; origNew: \" +\r\n\t\t\torig3.getTime() + \"; expected: \" + date.getTime());\r\n\t\tlog.error(/* \"actual: \" + orig + \"; joda: \" + origJoda + */\"; origNew: \" + orig3 +\r\n\t\t\t\"; expected: \" + date);\r\n\t\tassertEquals(date.getTime(), orig3.getTime());\r\n// assertEquals(date.getTime(), orig.getTime());\r\n// assertEquals(origJoda.getTime(), orig.getTime());\r\n\t}","commit_id":"9b41a5c6520b4c54247591207fffdfc5dee8df06","url":"https://github.com/apache/wicket"},{"original_method":"/**\r\n\t * Simulate what DateTimeField does\r\n\t * \r\n\t * @param dateStr\r\n\t * @param hours\r\n\t * @param minutes\r\n\t * @param amOrPm\r\n\t * @param use12HourFormat\r\n\t * @param tzClient\r\n\t * @return Date\r\n\t * @throws ParseException\r\n\t */\r\n\tpublic Date convertDateNew(final String dateStr, final Integer hours, final Integer minutes,\r\n\t\tfinal AM_PM amOrPm, final boolean use12HourFormat, final TimeZone tzClient)\r\n\t\tthrows ParseException\r\n\t{\r\n\t\tlog.error(\">>> convertDateNew()\");\r\n\t\t// This is what I get from field.getConvertedInput()\r\n\t\tDate dateFieldInput = (dateStr != null ? DateFormat.getDateInstance().parse(dateStr) : null);\r\n\r\n\t\t// Default with \"now\"\r\n\t\tif (dateFieldInput == null)\r\n\t\t{\r\n\t\t\tdateFieldInput = new Date();\r\n\t\t}\r\n\r\n\t\t// Get year, month and day ignoring any timezone of the Date object\r\n// Calendar cal = Calendar.getInstance();\r\n// cal.setTime(dateFieldInput);\r\n// int year = cal.get(Calendar.YEAR);\r\n// int month = cal.get(Calendar.MONTH) + 1;\r\n// int day = cal.get(Calendar.DAY_OF_MONTH);\r\n// int iHours = (hours == null ? 0 : hours % 24);\r\n// int iMins = (minutes == null ? 0 : minutes);\r\n//\r\n// // Use the input to create a date object with proper timezone\r\n// MutableDateTime date = new MutableDateTime(year, month, day, iHours, iMins, 0, 0,\r\n// DateTimeZone.forTimeZone(tzClient));\r\n\r\n\t\t// Use the input to create a date object. Ignore the timezone provided by dateFieldInput and\r\n\t\t// use tzClient instead. No re-calculation will happen. It should be the same as above.\r\n\t\tMutableDateTime date = new MutableDateTime(dateFieldInput,\r\n\t\t\tDateTimeZone.forTimeZone(tzClient));\r\n\t\tlog.error(\"1. date: \" + date.getMillis() + \"  \" + date);\r\n\r\n\t\t// Adjust for halfday if needed\r\n\t\tint halfday = 0;\r\n\t\tif (use12HourFormat)\r\n\t\t{\r\n\t\t\thalfday = (amOrPm == AM_PM.PM ? 1 : 0);\r\n\t\t\tdate.set(DateTimeFieldType.halfdayOfDay(), halfday);\r\n\t\t\tdate.set(DateTimeFieldType.hourOfDay(), hours % 12);\r\n\t\t}\r\n\t\tlog.error(\"2. halfday adjustments: \" + date.getMillis() + \"  \" + date);\r\n\r\n\t\tDate rtn = new Date(date.getMillis());\r\n\t\tlog.error(\"3. final date: \" + rtn.getTime() + \"  \" + rtn);\r\n\t\treturn rtn;\r\n\t}","id":53489,"modified_method":"/**\r\n\t * Simulate what DateTimeField does\r\n\t * \r\n\t * @param dateStr\r\n\t * @param hours\r\n\t * @param minutes\r\n\t * @param amOrPm\r\n\t * @param use12HourFormat\r\n\t * @param tzClient\r\n\t * @return Date\r\n\t * @throws ParseException\r\n\t */\r\n\tpublic Date convertDateNew(final String dateStr, final Integer hours, final Integer minutes,\r\n\t\tfinal AM_PM amOrPm, final boolean use12HourFormat, final TimeZone tzClient)\r\n\t\tthrows ParseException\r\n\t{\r\n\t\tlog.error(\">>> convertDateNew()\");\r\n\t\t// This is what I get from field.getConvertedInput()\r\n\t\tDate dateFieldInput = (dateStr != null ? DateFormat.getDateInstance().parse(dateStr) : null);\r\n\r\n\t\t// Default with \"now\"\r\n\t\tif (dateFieldInput == null)\r\n\t\t{\r\n\t\t\tdateFieldInput = new Date();\r\n\t\t}\r\n\r\n\t\t// Get year, month and day ignoring any timezone of the Date object\r\n\t\tCalendar cal = Calendar.getInstance();\r\n\t\tcal.setTime(dateFieldInput);\r\n\t\tint year = cal.get(Calendar.YEAR);\r\n\t\tint month = cal.get(Calendar.MONTH) + 1;\r\n\t\tint day = cal.get(Calendar.DAY_OF_MONTH);\r\n\t\tint iHours = (hours == null ? 0 : hours % 24);\r\n\t\tint iMins = (minutes == null ? 0 : minutes);\r\n\r\n\t\t// Use the input to create a date object with proper timezone\r\n\t\tMutableDateTime date = new MutableDateTime(year, month, day, iHours, iMins, 0, 0,\r\n\t\t\tDateTimeZone.forTimeZone(tzClient));\r\n\r\n\t\t// Use the input to create a date object. Ignore the timezone provided by dateFieldInput and\r\n\t\t// use tzClient instead. No re-calculation will happen. It should be the same as above.\r\n// MutableDateTime date = new MutableDateTime(dateFieldInput,\r\n// DateTimeZone.forTimeZone(tzClient));\r\n\t\tlog.error(\"1. date: \" + date.getMillis() + \"  \" + date);\r\n\r\n\t\t// Adjust for halfday if needed\r\n\t\tint halfday = 0;\r\n\t\tif (use12HourFormat)\r\n\t\t{\r\n\t\t\thalfday = (amOrPm == AM_PM.PM ? 1 : 0);\r\n\t\t\tdate.set(DateTimeFieldType.halfdayOfDay(), halfday);\r\n\t\t\tdate.set(DateTimeFieldType.hourOfDay(), hours % 12);\r\n\t\t}\r\n\t\tlog.error(\"2. halfday adjustments: \" + date.getMillis() + \"  \" + date);\r\n\r\n\t\tDate rtn = new Date(date.getMillis());\r\n\t\tlog.error(\"3. final date: \" + rtn.getTime() + \"  \" + rtn);\r\n\t\treturn rtn;\r\n\t}","commit_id":"9b41a5c6520b4c54247591207fffdfc5dee8df06","url":"https://github.com/apache/wicket"},{"original_method":"/**\r\n\t * \r\n\t * @throws ParseException\r\n\t */\r\n\tpublic void testDates3() throws ParseException\r\n\t{\r\n\t\tlog.error(\"=========== testDates3() =================\");\r\n\t\tTimeZone tzClient = TimeZone.getTimeZone(\"America/Los_Angeles\");\r\n\t\tTimeZone tzServer = TimeZone.getTimeZone(\"Europe/Berlin\");\r\n\r\n\t\tTimeZone.setDefault(tzServer);\r\n\t\tDateTimeZone.setDefault(DateTimeZone.forTimeZone(tzServer));\r\n\t\tLocale.setDefault(Locale.GERMAN);\r\n\r\n\t\tDate orig = convertDate(\"06.11.2010\", 12, 0, null, false, tzClient);\r\n\t\tDate origJoda = convertDateJoda(\"06.11.2010\", 12, 0, null, false, tzClient);\r\n\t\tDate orig3 = convertDateNew(\"06.11.2010\", 12, 0, null, false, tzClient);\r\n\r\n\t\tMutableDateTime dt = new MutableDateTime(DateTimeZone.forTimeZone(tzClient));\r\n\t\tdt.setDateTime(2010, 11, 06, 12, 0, 0, 0);\r\n\t\tDate date = new Date(dt.getMillis());\r\n\r\n\t\tlog.error(\"actual: \" + orig.getTime() + \"; joda: \" + origJoda.getTime() + \"; origNew: \" +\r\n\t\t\torig3.getTime() + \"; expected: \" + date.getTime());\r\n\t\tlog.error(\"actual: \" + orig + \"; joda: \" + origJoda + \"; origNew: \" + orig3 +\r\n\t\t\t\"; expected: \" + date);\r\n\t\tassertEquals(date.getTime(), orig3.getTime());\r\n\t\tassertEquals(date.getTime(), orig.getTime());\r\n\t\tassertEquals(origJoda.getTime(), orig.getTime());\r\n\t}","id":53490,"modified_method":"/**\r\n\t * \r\n\t * @throws ParseException\r\n\t */\r\n\tpublic void testDates3() throws ParseException\r\n\t{\r\n\t\tlog.error(\"=========== testDates3() =================\");\r\n\t\tTimeZone tzClient = TimeZone.getTimeZone(\"America/Los_Angeles\");\r\n\t\tTimeZone tzServer = TimeZone.getTimeZone(\"Europe/Berlin\");\r\n\r\n\t\tTimeZone.setDefault(tzServer);\r\n\t\tDateTimeZone.setDefault(DateTimeZone.forTimeZone(tzServer));\r\n\t\tLocale.setDefault(Locale.GERMAN);\r\n\r\n// Date orig = convertDate(\"06.11.2010\", 12, 0, null, false, tzClient);\r\n// Date origJoda = convertDateJoda(\"06.11.2010\", 12, 0, null, false, tzClient);\r\n\t\tDate orig3 = convertDateNew(\"06.11.2010\", 12, 0, null, false, tzClient);\r\n\r\n\t\tMutableDateTime dt = new MutableDateTime(DateTimeZone.forTimeZone(tzClient));\r\n\t\tdt.setDateTime(2010, 11, 06, 12, 0, 0, 0);\r\n\t\tDate date = new Date(dt.getMillis());\r\n\r\n\t\tlog.error(/* \"actual: \" + orig.getTime() + \"; joda: \" + origJoda.getTime() + */\"; origNew: \" +\r\n\t\t\torig3.getTime() + \"; expected: \" + date.getTime());\r\n\t\tlog.error(/* \"actual: \" + orig + \"; joda: \" + origJoda + */\"; origNew: \" + orig3 +\r\n\t\t\t\"; expected: \" + date);\r\n\t\tassertEquals(date.getTime(), orig3.getTime());\r\n// assertEquals(date.getTime(), orig.getTime());\r\n// assertEquals(origJoda.getTime(), orig.getTime());\r\n\t}","commit_id":"9b41a5c6520b4c54247591207fffdfc5dee8df06","url":"https://github.com/apache/wicket"},{"original_method":"/**\n\t * Sets the converted input, which is an instance of {@link Date}, possibly null. It combines\n\t * the inputs of the nested date, hours, minutes and am/pm fields and constructs a date from it.\n\t * <p>\n\t * Note that overriding this method is a better option than overriding {@link #updateModel()}\n\t * like the first versions of this class did. The reason for that is that this method can be\n\t * used by form validators without having to depend on the actual model being updated, and this\n\t * method is called by the default implementation of {@link #updateModel()} anyway (so we don't\n\t * have to override that anymore).\n\t */\n\t@Override\n\tprotected void convertInput()\n\t{\n\t\ttry\n\t\t{\n\t\t\t// Get the converted input values\n\t\t\tDate dateFieldInput = dateField.getConvertedInput();\n\t\t\tInteger hours = hoursField.getConvertedInput();\n\t\t\tInteger minutes = minutesField.getConvertedInput();\n\t\t\tAM_PM amOrPm = amOrPmChoice.getConvertedInput();\n\n\t\t\t// Default to today, if date entry was invisible\n\t\t\tfinal MutableDateTime date;\n\t\t\tif (dateFieldInput != null)\n\t\t\t{\n\t\t\t\tdate = new MutableDateTime(dateFieldInput);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t// Current date\n\t\t\t\tdate = new MutableDateTime();\n\t\t\t}\n\n\t\t\t// always set secs to 0\n\t\t\tdate.setSecondOfMinute(0);\n\n\t\t\t// \"Calculate\" the date with the different input parameters\n\n\t\t\t// The AM/PM field\n\t\t\tboolean use12HourFormat = use12HourFormat();\n\t\t\tif (use12HourFormat)\n\t\t\t{\n\t\t\t\tdate.set(DateTimeFieldType.halfdayOfDay(), amOrPm == AM_PM.PM ? 1 : 0);\n\t\t\t}\n\n\t\t\t// The hours\n\t\t\tif ((hoursField.isVisibleInHierarchy() == false) || (hours == null))\n\t\t\t{\n\t\t\t\tdate.setHourOfDay(0);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdate.set(DateTimeFieldType.hourOfDay(), hours % getMaximumHours(use12HourFormat));\n\t\t\t}\n\n\t\t\t// The minutes\n\t\t\tif ((minutesField.isVisibleInHierarchy() == false) || (minutes == null))\n\t\t\t{\n\t\t\t\tdate.setMinuteOfHour(0);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdate.setMinuteOfHour(minutes);\n\t\t\t}\n\n\t\t\t// Use the client timezone to properly calculate the millisecs\n\t\t\tTimeZone zone = getClientTimeZone();\n\t\t\tif (zone != null)\n\t\t\t{\n\t\t\t\tdate.setZoneRetainFields(DateTimeZone.forTimeZone(zone));\n\t\t\t}\n\n\t\t\t// The date will be in the server's timezone\n\t\t\tsetConvertedInput(new Date(date.getMillis()));\n\t\t}\n\t\tcatch (RuntimeException e)\n\t\t{\n\t\t\tDateTimeField.this.error(e.getMessage());\n\t\t\tinvalid();\n\t\t}\n\t}","id":53491,"modified_method":"/**\n\t * Sets the converted input, which is an instance of {@link Date}, possibly null. It combines\n\t * the inputs of the nested date, hours, minutes and am/pm fields and constructs a date from it.\n\t * <p>\n\t * Note that overriding this method is a better option than overriding {@link #updateModel()}\n\t * like the first versions of this class did. The reason for that is that this method can be\n\t * used by form validators without having to depend on the actual model being updated, and this\n\t * method is called by the default implementation of {@link #updateModel()} anyway (so we don't\n\t * have to override that anymore).\n\t */\n\t@Override\n\tprotected void convertInput()\n\t{\n\t\ttry\n\t\t{\n\t\t\t// Get the converted input values\n\t\t\tDate dateFieldInput = dateField.getConvertedInput();\n\t\t\tInteger hoursInput = hoursField.getConvertedInput();\n\t\t\tInteger minutesInput = minutesField.getConvertedInput();\n\t\t\tAM_PM amOrPmInput = amOrPmChoice.getConvertedInput();\n\n\t\t\t// Default with \"now\"\n\t\t\tif (dateFieldInput == null)\n\t\t\t{\n\t\t\t\tdateFieldInput = new Date();\n\t\t\t}\n\n\t\t\t// Get year, month and day ignoring any timezone of the Date object\n\t\t\tCalendar cal = Calendar.getInstance();\n\t\t\tcal.setTime(dateFieldInput);\n\t\t\tint year = cal.get(Calendar.YEAR);\n\t\t\tint month = cal.get(Calendar.MONTH) + 1;\n\t\t\tint day = cal.get(Calendar.DAY_OF_MONTH);\n\t\t\tint hours = (hoursInput == null ? 0 : hoursInput % 24);\n\t\t\tint minutes = (minutesInput == null ? 0 : minutesInput);\n\n\t\t\t// Use the input to create a date object with proper timezone\n\t\t\tMutableDateTime date = new MutableDateTime(year, month, day, hours, minutes, 0, 0,\n\t\t\t\tDateTimeZone.forTimeZone(getClientTimeZone()));\n\n\t\t\t// Adjust for halfday if needed\n\t\t\tif (use12HourFormat())\n\t\t\t{\n\t\t\t\tint halfday = (amOrPm == AM_PM.PM ? 1 : 0);\n\t\t\t\tdate.set(DateTimeFieldType.halfdayOfDay(), halfday);\n\t\t\t\tdate.set(DateTimeFieldType.hourOfDay(), hours % 12);\n\t\t\t}\n\n\t\t\t// The date will be in the server's timezone\n\t\t\tsetConvertedInput(new Date(date.getMillis()));\n\t\t}\n\t\tcatch (RuntimeException e)\n\t\t{\n\t\t\tDateTimeField.this.error(e.getMessage());\n\t\t\tinvalid();\n\t\t}\n\t}","commit_id":"9b41a5c6520b4c54247591207fffdfc5dee8df06","url":"https://github.com/apache/wicket"},{"original_method":"public void executeIndependentResolve(TemplateModelGenerator_New generator) {\n    {\n      // try to find target node if it was reduced from the copied node\n      SNode outputTargetNode = generator.findCopyingOutputNodeForInputNode(myInputTargetNode);\n      if (outputTargetNode != null) {\n        getOutputNode().addReferent(myInputReference.getRole(), outputTargetNode);\n        setSuccess(true);\n        return;\n      }\n    }\n\n    {\n      List<INodeBuilder> builders = generator.findTopBuildersForSource(myInputTargetNode);\n      if (!builders.isEmpty()) {\n        String wasConcept = myInputTargetNode.getConceptFqName();\n        SNode outputTargetNode = null;\n        for (INodeBuilder builder : builders) {\n          SNode _outputNode = builder.getTargetNode();\n          // same concept?\n          if (_outputNode.getConceptFqName().equals(wasConcept)) {\n            if (outputTargetNode != null) {\n              // no uniquess\n              outputTargetNode = null;\n              break;\n            }\n            outputTargetNode = _outputNode;\n          }\n        }\n\n        if (outputTargetNode != null) {\n          getOutputNode().addReferent(myInputReference.getRole(), outputTargetNode);\n          setSuccess(true);\n          return;\n        }\n      }\n    }\n  }","id":53492,"modified_method":"public void executeIndependentResolve(TemplateModelGenerator_New generator) {\n    {\n      // try to find target node if it was reduced from the copied node\n      SNode outputTargetNode = generator.findCopiedOutputNodeForInputNode(myInputTargetNode);\n      if (outputTargetNode != null) {\n        getOutputNode().addReferent(myInputReference.getRole(), outputTargetNode);\n        setSuccess(true);\n        return;\n      }\n    }\n\n    {\n      List<INodeBuilder> builders = generator.findTopBuildersForSource(myInputTargetNode);\n      if (!builders.isEmpty()) {\n        String wasConcept = myInputTargetNode.getConceptFqName();\n        SNode outputTargetNode = null;\n        for (INodeBuilder builder : builders) {\n          SNode _outputNode = builder.getTargetNode();\n          // same concept?\n          if (_outputNode.getConceptFqName().equals(wasConcept)) {\n            if (outputTargetNode != null) {\n              // no uniquess\n              outputTargetNode = null;\n              break;\n            }\n            outputTargetNode = _outputNode;\n          }\n        }\n\n        if (outputTargetNode != null) {\n          getOutputNode().addReferent(myInputReference.getRole(), outputTargetNode);\n          setSuccess(true);\n          return;\n        }\n      }\n    }\n  }","commit_id":"81db956eb605ceedc45f34c7b8f4cc017a187e12","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode findCopyingOutputNodeForInputNode(SNode inputNode) {\n    INodeBuilder builder = findCopyingNodeBuilderForSource(inputNode);\n    if (builder == null) {\n      return null;\n    }\n    return builder.getTargetNode();\n  }","id":53493,"modified_method":"public SNode findCopiedOutputNodeForInputNode(SNode inputNode) {\n    return findOutputNodeByInputAndTemplateNode(inputNode, inputNode);\n  }","commit_id":"81db956eb605ceedc45f34c7b8f4cc017a187e12","url":"https://github.com/JetBrains/MPS"},{"original_method":"/**\n   * @deprecated\n   */\n  public INodeBuilder findNodeBuilderForSourceAndTemplate(SNode inputNode, SNode templateNode) {\n//    INodeBuilder builder = myTemplateNodeAndInputNodeToOutputNodeMap.get(new Pair<SNode, SNode>(templateNode, inputNode));\n//    if (builder != null) return builder;\n//    if (inputNode == templateNode) {\n//      SNode outputNode = findOutputNodeByInputNodeWithSameId(inputNode);\n//      if (outputNode == null) {\n//        return null;\n//      }\n//      return new SimpleNodeBuilder(this, outputNode, inputNode, inputNode);\n//    }\n//    return null;\n    SNode outputNode = findOutputNodeByInputAndTemplateNode(inputNode, templateNode);\n    if(outputNode != null) {\n      return new SimpleNodeBuilder(this, outputNode, inputNode, inputNode);\n    }\n    return null;\n  }","id":53494,"modified_method":"/**\n   * @deprecated\n   */\n  public INodeBuilder findNodeBuilderForSourceAndTemplate(SNode inputNode, SNode templateNode) {\n    SNode outputNode = findOutputNodeByInputAndTemplateNode(inputNode, templateNode);\n    if (outputNode != null) {\n      return new SimpleNodeBuilder(this, outputNode, templateNode, inputNode);\n    }\n    return null;\n  }","commit_id":"81db956eb605ceedc45f34c7b8f4cc017a187e12","url":"https://github.com/JetBrains/MPS"},{"original_method":"public INodeBuilder findCopyingNodeBuilderForSource(SNode inputNode) {\n    return findNodeBuilderForSourceAndTemplate(inputNode, inputNode);\n  }","id":53495,"modified_method":"/**\n   * @deprecated\n   */\n  public INodeBuilder findCopyingNodeBuilderForSource(SNode inputNode) {\n    SNode outputNode = findOutputNodeByInputAndTemplateNode(inputNode, inputNode);\n    if (outputNode != null) {\n      return new SimpleNodeBuilder(this, outputNode, inputNode, inputNode);\n    }\n    return null;\n  }","commit_id":"81db956eb605ceedc45f34c7b8f4cc017a187e12","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static SNode resolve_MethodParm_CopyOfParm(SNode paramDecl, SNode templateNode, ITemplateGenerator generator) {\n    // suppose that parm is simply copied to target model\n    INodeBuilder builder = generator.findNodeBuilderForSourceAndTemplate(paramDecl, paramDecl);\n    if (builder == null) {\n      generator.showErrorMessage(paramDecl, templateNode, \"couldn't find builder for method parameter\");\n      return null;\n    }\n    return builder.getTargetNode();\n  }","id":53496,"modified_method":"public static SNode resolve_MethodParm_CopyOfParm(SNode paramDecl_input, SNode templateNode, ITemplateGenerator generator) {\n    // suppose that parm is simply copied to target model\n    SNode paramDecl_output = generator.findCopiedOutputNodeForInputNode(paramDecl_input);\n    if (paramDecl_output == null) {\n      generator.showErrorMessage(paramDecl_input, templateNode, \"couldn't output method parameter\");\n    }\n    return paramDecl_output;\n  }","commit_id":"81db956eb605ceedc45f34c7b8f4cc017a187e12","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Nullable\n  /*package*/ static SNode getTemplateNodeFromRuleConsequence(RuleConsequence ruleConsequence, SNode inputNode, SNode ruleNode, ITemplateGenerator generator) throws DismissTopMappingRuleException {\n    if (ruleConsequence instanceof DismissTopMappingRule) {\n      GeneratorMessage message = ((DismissTopMappingRule) ruleConsequence).getGeneratorMessage();\n      String text = message.getMessageText();\n      if (message.getMessageType() == GeneratorMessageType.error) {\n        generator.showErrorMessage(inputNode, null, ruleNode, text);\n      } else if (message.getMessageType() == GeneratorMessageType.warning) {\n        generator.showWarningMessage(inputNode, text);\n      } else {\n        generator.showInformationMessage(inputNode, text);\n      }\n      throw new DismissTopMappingRuleException();\n    } else if (ruleConsequence instanceof TemplateDeclarationReference) {\n      TemplateDeclaration templateDecl = ((TemplateDeclarationReference) ruleConsequence).getTemplate();\n//      return getTemplateNodeFromFragment(templateDecl, inputNode, ruleNode, generator);\n      TemplateFragment fragment = getFragmentFromTemplate(templateDecl, inputNode, ruleNode, generator);\n      if (fragment != null) {\n        // todo: fragment can have name (mapping name)\n        return fragment.getParent().getNode();\n      }\n      return null;\n\n    } else if (ruleConsequence instanceof InlineTemplate_RuleConsequence) {\n      return BaseAdapter.fromAdapter(((InlineTemplate_RuleConsequence) ruleConsequence).getTemplateNode());\n    }\n\n    generator.showErrorMessage(inputNode, null, ruleNode, \"failed to process $SWITCH$ : unsupported rule consequence\");\n    return null;\n  }","id":53497,"modified_method":"@Nullable\n  /*package*/ static Pair<SNode, String> getTemplateNodeFromRuleConsequence(RuleConsequence ruleConsequence, SNode inputNode, SNode ruleNode, ITemplateGenerator generator) throws DismissTopMappingRuleException {\n    if (ruleConsequence instanceof DismissTopMappingRule) {\n      GeneratorMessage message = ((DismissTopMappingRule) ruleConsequence).getGeneratorMessage();\n      String text = message.getMessageText();\n      if (message.getMessageType() == GeneratorMessageType.error) {\n        generator.showErrorMessage(inputNode, null, ruleNode, text);\n      } else if (message.getMessageType() == GeneratorMessageType.warning) {\n        generator.showWarningMessage(inputNode, text);\n      } else {\n        generator.showInformationMessage(inputNode, text);\n      }\n      throw new DismissTopMappingRuleException();\n\n    } else if (ruleConsequence instanceof TemplateDeclarationReference) {\n      TemplateDeclaration template = ((TemplateDeclarationReference) ruleConsequence).getTemplate();\n      TemplateFragment fragment = getFragmentFromTemplate(template, inputNode, ruleNode, generator);\n      if (fragment != null) {\n        return new Pair<SNode, String>(fragment.getParent().getNode(), fragment.getName());\n      }\n\n    } else if (ruleConsequence instanceof InlineTemplate_RuleConsequence) {\n      BaseConcept templateNode = ((InlineTemplate_RuleConsequence) ruleConsequence).getTemplateNode();\n      if (templateNode != null) {\n        return new Pair<SNode, String>(templateNode.getNode(), null);\n      } else {\n        generator.showErrorMessage(inputNode, null, ruleConsequence.getNode(), \"no template node\");\n      }\n\n    } else {\n      generator.showErrorMessage(inputNode, null, ruleNode, \"unsupported rule consequence\");\n    }\n\n    return null;\n  }","commit_id":"aea6260433c0048dc47b85208aff7e3e0bd798ca","url":"https://github.com/JetBrains/MPS"},{"original_method":"protected List<SNode> createOutputNodesForTemplateNode(String mappingName,\n                                                         SNode templateNode,\n                                                         SNode inputNode,\n                                                         int nodeMacrosToSkip,\n                                                         boolean registerTopOutput) throws DismissTopMappingRuleException {\n    int macroCount = 0;\n    List<SNode> outputNodes = new ArrayList<SNode>();\n    // templateNode has unprocessed node-macros?\n    for (INodeAdapter templateChildNode : templateNode.getAdapter().getChildren()) {\n      if (!(templateChildNode instanceof NodeMacro)) continue;\n      macroCount++;\n      if (macroCount <= nodeMacrosToSkip) continue;\n      NodeMacro nodeMacro = (NodeMacro) templateChildNode;\n      String mappingName_ = nodeMacro.getMappingId() != null ? nodeMacro.getMappingId() : mappingName;\n      if (nodeMacro instanceof LoopMacro) {\n        // $LOOP$\n        List<SNode> newInputNodes = TemplateGenUtil.createSourceNodeListForTemplateNode(inputNode, templateNode, nodeMacrosToSkip, myGenerator);\n        for (SNode newInputNode : newInputNodes) {\n          boolean inputChanged = (newInputNode != inputNode);\n          List<SNode> _outputNodes = createOutputNodesForTemplateNode(mappingName_, templateNode, newInputNode, nodeMacrosToSkip + 1, inputChanged);\n          if (_outputNodes != null) {\n            outputNodes.addAll(_outputNodes);\n            if (registerTopOutput && !inputChanged) {\n              myGenerator.addTopOutputNodesByInputNode(inputNode, _outputNodes);\n            }\n          }\n        }\n        return outputNodes;\n      } else if (nodeMacro instanceof CopySrcNodeMacro || nodeMacro instanceof CopySrcListMacro) {\n        // $COPY-SRC$\n        List<SNode> newInputNodes = TemplateGenUtil.createSourceNodeListForTemplateNode(inputNode, templateNode, nodeMacrosToSkip, myGenerator);\n        for (SNode newInputNode : newInputNodes) {\n          List<SNode> _outputNodes = copyNodeFromInputNode(mappingName_, templateNode, newInputNode);\n          outputNodes.addAll(_outputNodes);\n        }\n        return outputNodes;\n      } else if (nodeMacro instanceof IfMacro) {\n        // $IF$\n        List<SNode> _outputNodes = null;\n        if (TemplateGenUtil.checkConditionForIfMacro(inputNode, (IfMacro) nodeMacro, myGenerator)) {\n          _outputNodes = createOutputNodesForTemplateNode(mappingName_, templateNode, inputNode, nodeMacrosToSkip + 1, false);\n        } else {\n          // alternative consequence\n          RuleConsequence altConsequence = ((IfMacro) nodeMacro).getAlternativeConsequence();\n          if (altConsequence != null) {\n            SNode altTemplateNode = getTemplateNodeFromRuleConsequence(altConsequence, inputNode, nodeMacro.getNode(), myGenerator);\n            if (altTemplateNode == null) {\n              myGenerator.showErrorMessage(inputNode, null, nodeMacro.getNode(), \"error processing $IF$/alternative\");\n              return null;\n            }\n            List<SNode> outputChildNodes = createOutputNodesForTemplateNode(mappingName_, altTemplateNode, inputNode, 0, false);\n            if (outputChildNodes != null) {\n              outputNodes.addAll(outputChildNodes);\n            }\n          }\n        }\n        if (_outputNodes != null) {\n          outputNodes.addAll(_outputNodes);\n          if (registerTopOutput) {\n            myGenerator.addTopOutputNodesByInputNode(inputNode, _outputNodes);\n          }\n        }\n        return outputNodes;\n      } else if (nodeMacro instanceof MapSrcNodeMacro || nodeMacro instanceof MapSrcListMacro) {\n        // $MAP-SRC$ or $MAP-SRCL$\n        MapSrcMacro_MapperFunction macro_mapperFunction;\n        String mapperId; // old\n        if (nodeMacro instanceof MapSrcNodeMacro) {\n          macro_mapperFunction = ((MapSrcNodeMacro) nodeMacro).getMapperFunction();\n          mapperId = ((MapSrcNodeMacro) nodeMacro).getSourceNodeMapperId();\n        } else {\n          macro_mapperFunction = ((MapSrcListMacro) nodeMacro).getMapperFunction();\n          mapperId = ((MapSrcListMacro) nodeMacro).getSourceNodeMapperId();\n        }\n\n        List<SNode> newInputNodes = TemplateGenUtil.createSourceNodeListForTemplateNode(inputNode, templateNode, nodeMacrosToSkip, myGenerator);\n        for (SNode newInputNode : newInputNodes) {\n          boolean inputChanged = (newInputNode != inputNode);\n          if (mapperId != null || macro_mapperFunction != null) {\n            SNode childToReplaceLater = SModelUtil_new.instantiateConceptDeclaration(templateNode.getConceptFqName(), myOutputModel, myGenerator.getScope(), false);\n            outputNodes.add(childToReplaceLater);\n            // execute the 'mapper' function later\n            myGenerator.getDelayedChanges().addExecuteMapSrcNodeMacroChange(nodeMacro, childToReplaceLater, newInputNode, myGenerator);\n          } else {\n            List<SNode> outputChildNodes = createOutputNodesForTemplateNode(mappingName_, templateNode, newInputNode, nodeMacrosToSkip + 1, inputChanged);\n            if (outputChildNodes != null) {\n              outputNodes.addAll(outputChildNodes);\n              if (registerTopOutput && !inputChanged) {\n                myGenerator.addTopOutputNodesByInputNode(inputNode, outputNodes);\n              }\n            }\n          }\n        }\n        return outputNodes;\n      } else if (nodeMacro instanceof SwitchMacro) {\n        // $SWITCH$\n        TemplateSwitch templateSwitch = ((SwitchMacro) nodeMacro).getTemplateSwitch();\n        List<SNode> newInputNodes = TemplateGenUtil.createSourceNodeListForTemplateNode(inputNode, templateNode, macroCount - 1, myGenerator);\n        for (SNode newInputNode : newInputNodes) {\n          boolean inputChanged = (newInputNode != inputNode);\n          RuleConsequence consequenceForCase = (RuleConsequence) myGenerator.getConsequenceForSwitchCase(newInputNode, templateSwitch);\n          SNode templateNodeForCase = null;\n          if (consequenceForCase != null) {\n            templateNodeForCase = getTemplateNodeFromRuleConsequence(consequenceForCase, newInputNode, nodeMacro.getNode(), myGenerator);\n            if (templateNodeForCase == null) {\n              myGenerator.showErrorMessage(newInputNode, null, nodeMacro.getNode(), \"error processing $SWITCH$\");\n              return null;\n            }\n          } else {\n            // for back compatibility\n            TemplateDeclaration templateForSwitchCase = myGenerator.getTemplateForSwitchCase_deprecated(newInputNode, templateSwitch);\n            if (templateForSwitchCase != null) {\n              TemplateFragment fragment = getFragmentFromTemplate(templateForSwitchCase, newInputNode, nodeMacro.getNode(), myGenerator);\n              if (fragment != null) {\n                // todo: fragment can have name (mapping name)\n                templateNodeForCase = fragment.getParent().getNode();\n              }\n//              \n//              templateNodeForCase = getTemplateNodeFromFragment(templateForSwitchCase, newInputNode, nodeMacro.getNode(), myGenerator);\n            }\n          }\n\n          if (templateNodeForCase != null) {\n            List<SNode> outputChildNodes = createOutputNodesForTemplateNode(mappingName_, templateNodeForCase, newInputNode, 0, inputChanged);\n            if (outputChildNodes != null) {\n              outputNodes.addAll(outputChildNodes);\n            }\n          } else {\n            // no switch-case found for the inputNode - continue with templateNode under the $switch$\n            List<SNode> outputChildNodes = createOutputNodesForTemplateNode(mappingName_, templateNode, newInputNode, nodeMacrosToSkip + 1, inputChanged);\n            if (outputChildNodes != null) {\n              outputNodes.addAll(outputChildNodes);\n            }\n          }\n\n          if (registerTopOutput && !inputChanged) {\n            myGenerator.addTopOutputNodesByInputNode(inputNode, outputNodes);\n          }\n        } // for (SNode newInputNode : newInputNodes)\n\n        return outputNodes;\n\n      } else if (nodeMacro instanceof IncludeMacro) {\n        // $INCLUDE$\n        IncludeMacro includeMacro = (IncludeMacro) nodeMacro;\n        List<SNode> newInputNodes = TemplateGenUtil.createSourceNodeListForTemplateNode(inputNode, templateNode, macroCount - 1, myGenerator);\n        for (SNode newInputNode : newInputNodes) {\n          boolean inputChanged = (newInputNode != inputNode);\n          TemplateDeclaration includeTemplate = includeMacro.getIncludeTemplate();\n          if (includeTemplate == null) {\n            myGenerator.showErrorMessage(newInputNode, null, nodeMacro.getNode(), \"failed to process $INCLIDE$ : no 'include template'\");\n            return null;\n          }\n//          SNode templateForInclude = getTemplateNodeFromFragment(includeTemplate, newInputNode, nodeMacro.getNode(), myGenerator);\n          SNode templateForInclude;\n          TemplateFragment fragment = getFragmentFromTemplate(includeTemplate, newInputNode, nodeMacro.getNode(), myGenerator);\n          if (fragment != null) {\n            // todo: fragment can have name (mapping name)\n            templateForInclude = fragment.getParent().getNode();\n          } else {\n            myGenerator.showErrorMessage(newInputNode, null, nodeMacro.getNode(), \"failed to process $INCLIDE$\");\n            return null;\n          }\n\n          List<SNode> outputChildNodes = createOutputNodesForTemplateNode(mappingName_, templateForInclude, newInputNode, 0, inputChanged);\n          if (outputChildNodes != null) {\n            outputNodes.addAll(outputChildNodes);\n          }\n\n          if (registerTopOutput && !inputChanged) {\n            myGenerator.addTopOutputNodesByInputNode(inputNode, outputNodes);\n          }\n        } // for (SNode newInputNode : newInputNodes)\n\n        return outputNodes;\n      } else {\n        // $$\n        List<SNode> newInputNodes = TemplateGenUtil.createSourceNodeListForTemplateNode(inputNode, templateNode, nodeMacrosToSkip, myGenerator);\n        for (SNode newInputNode : newInputNodes) {\n          boolean inputChanged = (newInputNode != inputNode);\n          List<SNode> outputChildNodes = createOutputNodesForTemplateNode(mappingName_, templateNode, newInputNode, nodeMacrosToSkip + 1, inputChanged);\n          if (outputChildNodes != null) {\n            outputNodes.addAll(outputChildNodes);\n          }\n          if (registerTopOutput && !inputChanged) {\n            myGenerator.addTopOutputNodesByInputNode(inputNode, outputNodes);\n          }\n        }\n        return outputNodes;\n      }\n    } // templateNode has unprocessed node-macros?\n\n    // templateNode has no unprocessed node-macros - create output instance for the tempate node\n    SNode outputNode = SModelUtil_new.instantiateConceptDeclaration(templateNode.getConceptFqName(), myOutputModel, myGenerator.getScope(), false);\n    if (outputNode == null) {\n      myGenerator.showErrorMessage(null, templateNode, \"'createOutputNodesForTemplateNode' cannot create output node\");\n      return null;\n    }\n    outputNodes.add(outputNode);\n    if (registerTopOutput) {\n      myGenerator.addTopOutputNodeByInputNode(inputNode, outputNode);\n    }\n    myGenerator.addOutputNodeByInputAndTemplateNode(inputNode, templateNode, outputNode);\n    myGenerator.addOutputNodeByInputNodeAndMappingName(inputNode, mappingName, outputNode);\n    myGenerator.addTemplateNodeByOutputNode(outputNode, templateNode);\n    myGenerator.addOutputNodeByTemplateNode(templateNode, outputNode);\n    outputNode.putProperties(templateNode);\n\n    SModel templateModel = templateNode.getModel();\n    for (SReference reference : templateNode.getReferences()) {\n      if (templateNode.getLinkAttribute(\"referenceMacro\", reference.getRole()) != null) {\n        continue;\n      }\n      SNode templateReferentNode = reference.getTargetNode();\n      if (templateReferentNode == null) {\n        myGenerator.showErrorMessage(null, templateNode, \"'createOutputNodesForTemplateNode()' referent '\" + reference.getRole() + \"' is null in template model\");\n        continue;\n      }\n      if (templateReferentNode.getModel().equals(templateModel)) {\n        myGenerator.addReferenceInfo(new ReferenceInfo_TemplateNode(outputNode, reference, inputNode));\n      } else {\n        outputNode.setReferent(reference.getRole(), templateReferentNode);\n      }\n    }\n\n    // process property and reference macros, then children\n    List<INodeAdapter> templateChildNodes = new ArrayList<INodeAdapter>();\n    for (INodeAdapter templateChildNode : templateNode.getAdapter().getChildren()) {\n      if (templateChildNode instanceof PropertyMacro) {\n        MacroUtil.expandPropertyMacro(myGenerator, (PropertyMacro) templateChildNode, inputNode, templateNode, outputNode);\n      } else if (templateChildNode instanceof ReferenceMacro) {\n        myGenerator.addReferenceInfo(new ReferenceInfo_Macro((ReferenceMacro) templateChildNode, inputNode, templateNode, outputNode));\n      } else if (!TemplateGenUtil.isTemplateLanguageElement(templateChildNode)) {\n        templateChildNodes.add(templateChildNode);\n      }\n    }\n    for (INodeAdapter templateChildNode : templateChildNodes) {\n      List<SNode> outputChildNodes = createOutputNodesForTemplateNode(null, templateChildNode.getNode(), inputNode, 0, false);\n      if (outputChildNodes != null) {\n        String role = templateChildNode.getRole_();\n        for (SNode outputChildNode : outputChildNodes) {\n          outputNode.addChild(role, outputChildNode);\n        }\n      }\n    }\n    return outputNodes;\n  }","id":53498,"modified_method":"protected List<SNode> createOutputNodesForTemplateNode(String mappingName,\n                                                         SNode templateNode,\n                                                         SNode inputNode,\n                                                         int nodeMacrosToSkip,\n                                                         boolean registerTopOutput) throws DismissTopMappingRuleException {\n    int macroCount = 0;\n    List<SNode> outputNodes = new ArrayList<SNode>();\n    // templateNode has unprocessed node-macros?\n    for (INodeAdapter templateChildNode : templateNode.getAdapter().getChildren()) {\n      if (!(templateChildNode instanceof NodeMacro)) continue;\n      macroCount++;\n      if (macroCount <= nodeMacrosToSkip) continue;\n      NodeMacro nodeMacro = (NodeMacro) templateChildNode;\n      String mappingName_ = nodeMacro.getMappingId() != null ? nodeMacro.getMappingId() : mappingName;\n      if (nodeMacro instanceof LoopMacro) {\n        // $LOOP$\n        List<SNode> newInputNodes = TemplateGenUtil.createSourceNodeListForTemplateNode(inputNode, templateNode, nodeMacrosToSkip, myGenerator);\n        for (SNode newInputNode : newInputNodes) {\n          boolean inputChanged = (newInputNode != inputNode);\n          List<SNode> _outputNodes = createOutputNodesForTemplateNode(mappingName_, templateNode, newInputNode, nodeMacrosToSkip + 1, inputChanged);\n          if (_outputNodes != null) {\n            outputNodes.addAll(_outputNodes);\n            if (registerTopOutput && !inputChanged) {\n              myGenerator.addTopOutputNodesByInputNode(inputNode, _outputNodes);\n            }\n          }\n        }\n        return outputNodes;\n      } else if (nodeMacro instanceof CopySrcNodeMacro || nodeMacro instanceof CopySrcListMacro) {\n        // $COPY-SRC$\n        List<SNode> newInputNodes = TemplateGenUtil.createSourceNodeListForTemplateNode(inputNode, templateNode, nodeMacrosToSkip, myGenerator);\n        for (SNode newInputNode : newInputNodes) {\n          List<SNode> _outputNodes = copyNodeFromInputNode(mappingName_, templateNode, newInputNode);\n          outputNodes.addAll(_outputNodes);\n        }\n        return outputNodes;\n      } else if (nodeMacro instanceof IfMacro) {\n        // $IF$\n        List<SNode> _outputNodes = null;\n        if (TemplateGenUtil.checkConditionForIfMacro(inputNode, (IfMacro) nodeMacro, myGenerator)) {\n          _outputNodes = createOutputNodesForTemplateNode(mappingName_, templateNode, inputNode, nodeMacrosToSkip + 1, false);\n        } else {\n          // alternative consequence\n          RuleConsequence altConsequence = ((IfMacro) nodeMacro).getAlternativeConsequence();\n          if (altConsequence != null) {\n            Pair<SNode, String> nodeAndMappingName = getTemplateNodeFromRuleConsequence(altConsequence, inputNode, nodeMacro.getNode(), myGenerator);\n            if (nodeAndMappingName == null) {\n              myGenerator.showErrorMessage(inputNode, null, nodeMacro.getNode(), \"error processing $IF$/alternative\");\n              return null;\n            }\n            SNode altTemplateNode = nodeAndMappingName.o1;\n            // todo: what about mapping name\n            List<SNode> outputChildNodes = createOutputNodesForTemplateNode(mappingName_, altTemplateNode, inputNode, 0, false);\n            if (outputChildNodes != null) {\n              outputNodes.addAll(outputChildNodes);\n            }\n          }\n        }\n        if (_outputNodes != null) {\n          outputNodes.addAll(_outputNodes);\n          if (registerTopOutput) {\n            myGenerator.addTopOutputNodesByInputNode(inputNode, _outputNodes);\n          }\n        }\n        return outputNodes;\n      } else if (nodeMacro instanceof MapSrcNodeMacro || nodeMacro instanceof MapSrcListMacro) {\n        // $MAP-SRC$ or $MAP-SRCL$\n        MapSrcMacro_MapperFunction macro_mapperFunction;\n        String mapperId; // old\n        if (nodeMacro instanceof MapSrcNodeMacro) {\n          macro_mapperFunction = ((MapSrcNodeMacro) nodeMacro).getMapperFunction();\n          mapperId = ((MapSrcNodeMacro) nodeMacro).getSourceNodeMapperId();\n        } else {\n          macro_mapperFunction = ((MapSrcListMacro) nodeMacro).getMapperFunction();\n          mapperId = ((MapSrcListMacro) nodeMacro).getSourceNodeMapperId();\n        }\n\n        List<SNode> newInputNodes = TemplateGenUtil.createSourceNodeListForTemplateNode(inputNode, templateNode, nodeMacrosToSkip, myGenerator);\n        for (SNode newInputNode : newInputNodes) {\n          boolean inputChanged = (newInputNode != inputNode);\n          if (mapperId != null || macro_mapperFunction != null) {\n            SNode childToReplaceLater = SModelUtil_new.instantiateConceptDeclaration(templateNode.getConceptFqName(), myOutputModel, myGenerator.getScope(), false);\n            outputNodes.add(childToReplaceLater);\n            // execute the 'mapper' function later\n            myGenerator.getDelayedChanges().addExecuteMapSrcNodeMacroChange(nodeMacro, childToReplaceLater, newInputNode, myGenerator);\n          } else {\n            List<SNode> outputChildNodes = createOutputNodesForTemplateNode(mappingName_, templateNode, newInputNode, nodeMacrosToSkip + 1, inputChanged);\n            if (outputChildNodes != null) {\n              outputNodes.addAll(outputChildNodes);\n              if (registerTopOutput && !inputChanged) {\n                myGenerator.addTopOutputNodesByInputNode(inputNode, outputNodes);\n              }\n            }\n          }\n        }\n        return outputNodes;\n      } else if (nodeMacro instanceof SwitchMacro) {\n        // $SWITCH$\n        TemplateSwitch templateSwitch = ((SwitchMacro) nodeMacro).getTemplateSwitch();\n        List<SNode> newInputNodes = TemplateGenUtil.createSourceNodeListForTemplateNode(inputNode, templateNode, macroCount - 1, myGenerator);\n        for (SNode newInputNode : newInputNodes) {\n          boolean inputChanged = (newInputNode != inputNode);\n          RuleConsequence consequenceForCase = (RuleConsequence) myGenerator.getConsequenceForSwitchCase(newInputNode, templateSwitch);\n          SNode templateNodeForCase = null;\n          if (consequenceForCase != null) {\n            Pair<SNode, String> nodeAndMappingName = getTemplateNodeFromRuleConsequence(consequenceForCase, newInputNode, nodeMacro.getNode(), myGenerator);\n            if (nodeAndMappingName == null) {\n              myGenerator.showErrorMessage(newInputNode, nodeMacro.getNode(), consequenceForCase.getNode(), \"error processing $SWITCH$\");\n              return null;\n            }\n            // todo: what about mapping name?\n            templateNodeForCase = nodeAndMappingName.o1;\n          } else {\n            // for back compatibility\n            TemplateDeclaration templateForSwitchCase = myGenerator.getTemplateForSwitchCase_deprecated(newInputNode, templateSwitch);\n            if (templateForSwitchCase != null) {\n              TemplateFragment fragment = getFragmentFromTemplate(templateForSwitchCase, newInputNode, nodeMacro.getNode(), myGenerator);\n              if (fragment != null) {\n                // todo: fragment can have name (mapping name)\n                templateNodeForCase = fragment.getParent().getNode();\n              }\n//              \n//              templateNodeForCase = getTemplateNodeFromFragment(templateForSwitchCase, newInputNode, nodeMacro.getNode(), myGenerator);\n            }\n          }\n\n          if (templateNodeForCase != null) {\n            List<SNode> outputChildNodes = createOutputNodesForTemplateNode(mappingName_, templateNodeForCase, newInputNode, 0, inputChanged);\n            if (outputChildNodes != null) {\n              outputNodes.addAll(outputChildNodes);\n            }\n          } else {\n            // no switch-case found for the inputNode - continue with templateNode under the $switch$\n            List<SNode> outputChildNodes = createOutputNodesForTemplateNode(mappingName_, templateNode, newInputNode, nodeMacrosToSkip + 1, inputChanged);\n            if (outputChildNodes != null) {\n              outputNodes.addAll(outputChildNodes);\n            }\n          }\n\n          if (registerTopOutput && !inputChanged) {\n            myGenerator.addTopOutputNodesByInputNode(inputNode, outputNodes);\n          }\n        } // for (SNode newInputNode : newInputNodes)\n\n        return outputNodes;\n\n      } else if (nodeMacro instanceof IncludeMacro) {\n        // $INCLUDE$\n        IncludeMacro includeMacro = (IncludeMacro) nodeMacro;\n        List<SNode> newInputNodes = TemplateGenUtil.createSourceNodeListForTemplateNode(inputNode, templateNode, macroCount - 1, myGenerator);\n        for (SNode newInputNode : newInputNodes) {\n          boolean inputChanged = (newInputNode != inputNode);\n          TemplateDeclaration includeTemplate = includeMacro.getIncludeTemplate();\n          if (includeTemplate == null) {\n            myGenerator.showErrorMessage(newInputNode, null, nodeMacro.getNode(), \"error processing $INCLIDE$ : no 'include template'\");\n            return null;\n          }\n//          SNode templateForInclude = getTemplateNodeFromFragment(includeTemplate, newInputNode, nodeMacro.getNode(), myGenerator);\n          SNode templateForInclude;\n          TemplateFragment fragment = getFragmentFromTemplate(includeTemplate, newInputNode, nodeMacro.getNode(), myGenerator);\n          if (fragment != null) {\n            // todo: fragment can have name (mapping name)\n            templateForInclude = fragment.getParent().getNode();\n          } else {\n            myGenerator.showErrorMessage(newInputNode, null, nodeMacro.getNode(), \"error processing $INCLIDE$\");\n            return null;\n          }\n\n          List<SNode> outputChildNodes = createOutputNodesForTemplateNode(mappingName_, templateForInclude, newInputNode, 0, inputChanged);\n          if (outputChildNodes != null) {\n            outputNodes.addAll(outputChildNodes);\n          }\n\n          if (registerTopOutput && !inputChanged) {\n            myGenerator.addTopOutputNodesByInputNode(inputNode, outputNodes);\n          }\n        } // for (SNode newInputNode : newInputNodes)\n\n        return outputNodes;\n      } else {\n        // $$\n        List<SNode> newInputNodes = TemplateGenUtil.createSourceNodeListForTemplateNode(inputNode, templateNode, nodeMacrosToSkip, myGenerator);\n        for (SNode newInputNode : newInputNodes) {\n          boolean inputChanged = (newInputNode != inputNode);\n          List<SNode> outputChildNodes = createOutputNodesForTemplateNode(mappingName_, templateNode, newInputNode, nodeMacrosToSkip + 1, inputChanged);\n          if (outputChildNodes != null) {\n            outputNodes.addAll(outputChildNodes);\n          }\n          if (registerTopOutput && !inputChanged) {\n            myGenerator.addTopOutputNodesByInputNode(inputNode, outputNodes);\n          }\n        }\n        return outputNodes;\n      }\n    } // templateNode has unprocessed node-macros?\n\n    // templateNode has no unprocessed node-macros - create output instance for the tempate node\n    SNode outputNode = SModelUtil_new.instantiateConceptDeclaration(templateNode.getConceptFqName(), myOutputModel, myGenerator.getScope(), false);\n    if (outputNode == null) {\n      myGenerator.showErrorMessage(null, templateNode, \"'createOutputNodesForTemplateNode' cannot create output node\");\n      return null;\n    }\n    outputNodes.add(outputNode);\n    if (registerTopOutput) {\n      myGenerator.addTopOutputNodeByInputNode(inputNode, outputNode);\n    }\n    myGenerator.addOutputNodeByInputAndTemplateNode(inputNode, templateNode, outputNode);\n    myGenerator.addOutputNodeByInputNodeAndMappingName(inputNode, mappingName, outputNode);\n    myGenerator.addTemplateNodeByOutputNode(outputNode, templateNode);\n    myGenerator.addOutputNodeByTemplateNode(templateNode, outputNode);\n    outputNode.putProperties(templateNode);\n\n    SModel templateModel = templateNode.getModel();\n    for (SReference reference : templateNode.getReferences()) {\n      if (templateNode.getLinkAttribute(\"referenceMacro\", reference.getRole()) != null) {\n        continue;\n      }\n      SNode templateReferentNode = reference.getTargetNode();\n      if (templateReferentNode == null) {\n        myGenerator.showErrorMessage(null, templateNode, \"'createOutputNodesForTemplateNode()' referent '\" + reference.getRole() + \"' is null in template model\");\n        continue;\n      }\n      if (templateReferentNode.getModel().equals(templateModel)) {\n        myGenerator.addReferenceInfo(new ReferenceInfo_TemplateNode(outputNode, reference, inputNode));\n      } else {\n        outputNode.setReferent(reference.getRole(), templateReferentNode);\n      }\n    }\n\n    // process property and reference macros, then children\n    List<INodeAdapter> templateChildNodes = new ArrayList<INodeAdapter>();\n    for (INodeAdapter templateChildNode : templateNode.getAdapter().getChildren()) {\n      if (templateChildNode instanceof PropertyMacro) {\n        MacroUtil.expandPropertyMacro(myGenerator, (PropertyMacro) templateChildNode, inputNode, templateNode, outputNode);\n      } else if (templateChildNode instanceof ReferenceMacro) {\n        myGenerator.addReferenceInfo(new ReferenceInfo_Macro((ReferenceMacro) templateChildNode, inputNode, templateNode, outputNode));\n      } else if (!TemplateGenUtil.isTemplateLanguageElement(templateChildNode)) {\n        templateChildNodes.add(templateChildNode);\n      }\n    }\n    for (INodeAdapter templateChildNode : templateChildNodes) {\n      List<SNode> outputChildNodes = createOutputNodesForTemplateNode(null, templateChildNode.getNode(), inputNode, 0, false);\n      if (outputChildNodes != null) {\n        String role = templateChildNode.getRole_();\n        for (SNode outputChildNode : outputChildNodes) {\n          outputNode.addChild(role, outputChildNode);\n        }\n      }\n    }\n    return outputNodes;\n  }","commit_id":"aea6260433c0048dc47b85208aff7e3e0bd798ca","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void showErrorMessage(SNode sourceNode, SNode templateNode, SNode ruleNode, String message) {\n    myLogger.showErrorMessage(sourceNode, templateNode, ruleNode, message);\n  }","id":53499,"modified_method":"public void showErrorMessage(SNode inputNode, SNode templateNode, SNode ruleNode, String message) {\n    myLogger.showErrorMessage(inputNode, templateNode, ruleNode, message);\n  }","commit_id":"d0a5bf1edc67ddaea47dada13f9e1cc7c0d110e8","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void showErrorMessage(SNode sourceNode, SNode templateNode, String message) {\n    myLogger.showErrorMessage(sourceNode, templateNode, message);\n  }","id":53500,"modified_method":"public void showErrorMessage(SNode inputNode, SNode templateNode, String message) {\n    myLogger.showErrorMessage(inputNode, templateNode, message);\n  }","commit_id":"d0a5bf1edc67ddaea47dada13f9e1cc7c0d110e8","url":"https://github.com/JetBrains/MPS"},{"original_method":"private SModel generateModel_stepIntern(SModel inputModel, ITemplateGenerator generator) {\n    GenerationSessionContext generationContext = generator.getGeneratorSessionContext();\n    IModule module = generationContext.getModule();\n    String modelsLongName = inputModel.getLongName();\n    SModel currentInputModel = inputModel;\n\n    // -----------------------\n    // run pre-processing scripts\n    // -----------------------\n    List<MappingScript> preMappingScripts = generationContext.getPreMappingScripts();\n    if (!preMappingScripts.isEmpty()) {\n      // need to clone input model?\n      boolean needToCloneInputMode = !myDiscardTransients;  // clone model if save transients (needed for tracing)\n      if (!needToCloneInputMode) {\n        for (MappingScript preMappingScript : preMappingScripts) {\n          if (preMappingScript.getScriptKind() == MappingScriptKind.pre_process_input_model) {\n            if (preMappingScript.getModifiesModel()) {\n              needToCloneInputMode = true;\n              break;\n            }\n          }\n        }\n      }\n      if (needToCloneInputMode) {\n        SModel currentInputModel_clone = createTransientModel(modelsLongName, module);\n        addMessage(MessageKind.INFORMATION, \"clone model '\" + currentInputModel.getUID() + \"' --> '\" + currentInputModel_clone.getUID() + \"'\");\n        CloneUtil.cloneModel(currentInputModel, currentInputModel_clone, generator.getScope());\n\n        if (!myDiscardTransients) { // tracing\n          generationContext.getGenerationTracer().registerPreMappingScripts(currentInputModel, currentInputModel_clone, preMappingScripts);\n        }\n\n        // probably we can forget about former input model here\n        recycleWasteModel(currentInputModel);\n        currentInputModel = currentInputModel_clone;\n      }\n    }\n\n    for (MappingScript preMappingScript : preMappingScripts) {\n      if (preMappingScript.getScriptKind() != MappingScriptKind.pre_process_input_model) {\n        addMessage(MessageKind.WARNING, \"skip script '\" + preMappingScript + \"' (\" + preMappingScript.getModel().getUID() + \") - wrong script kind\");\n        continue;\n      }\n      addMessage(MessageKind.INFORMATION, \"pre-process '\" + preMappingScript + \"' (\" + preMappingScript.getModel().getUID() + \")\");\n      GeneratorUtil.executeMappingScript(preMappingScript, currentInputModel, generator);\n    }\n\n    SModel currentOutputModel = createTransientModel(modelsLongName, module);\n    generationContext.getGenerationTracer().startTracing(currentInputModel, currentOutputModel);\n\n    // -----------------------\n    // primary mapping\n    // -----------------------\n    currentInputModel.setLoading(false);\n    boolean somethingHasBeenGenerated = generator.doPrimaryMapping(currentInputModel, currentOutputModel);\n    if (!somethingHasBeenGenerated) {\n      currentOutputModel.validateLanguagesAndImports();\n      recycleWasteModel(currentInputModel);\n      return currentOutputModel;\n    }\n\n    // -----------------------\n    // secondary mapping (infinite cycle untill 'exit condition' is true)\n    // -----------------------\n    int secondaryMappingRepeatCount = 1;\n    while (true) {\n      currentOutputModel.validateLanguagesAndImports();\n\n      // apply mapping to the output model\n      addMessage(MessageKind.INFORMATION, \"generating model '\" + currentOutputModel.getUID() + \"'\");\n      generationContext.replaceInputModel(currentOutputModel);\n      SModel transientModel = createTransientModel(modelsLongName, module);\n      // probably we can forget about former input model here\n      recycleWasteModel(currentInputModel);\n      currentInputModel = currentOutputModel;\n      currentInputModel.setLoading(false);\n      generationContext.getGenerationTracer().startTracing(currentInputModel, transientModel);\n      if (!generator.doSecondaryMapping(currentInputModel, transientModel)) {\n        // nothing has been generated\n        generationContext.getGenerationTracer().discardTracing(currentInputModel, transientModel);\n        addMessage(MessageKind.INFORMATION, \"remove empty model '\" + transientModel.getUID() + \"'\");\n        SModelRepository.getInstance().removeModelDescriptor(transientModel.getModelDescriptor());\n        myTransientModelsCount--;\n        break;\n      }\n\n      if (++secondaryMappingRepeatCount > 10) {\n        generator.showErrorMessage(null, \"Failed to generate output after 10 repeated mappings\");\n        throw new GenerationFailedException(\"Failed to generate output after 10 repeated mappings\");\n      }\n\n      // next iteration ...\n      currentOutputModel = transientModel;\n    }\n    currentOutputModel.setLoading(true);\n\n    // -----------------------\n    // run post-processing scripts\n    // -----------------------\n    List<MappingScript> postMappingScripts = generationContext.getPostMappingScripts();\n    if (!postMappingScripts.isEmpty() &&\n      !myDiscardTransients) {  // clone model - needed for tracing\n      SModel currentOutputModel_clone = createTransientModel(modelsLongName, module);\n      addMessage(MessageKind.INFORMATION, \"clone model '\" + currentOutputModel.getUID() + \"' --> '\" + currentOutputModel_clone.getUID() + \"'\");\n      CloneUtil.cloneModel(currentOutputModel, currentOutputModel_clone, generator.getScope());\n\n      generationContext.getGenerationTracer().registerPostMappingScripts(currentOutputModel, currentOutputModel_clone, postMappingScripts);\n      currentOutputModel = currentOutputModel_clone;\n    }\n\n\n    for (MappingScript postMappingScript : postMappingScripts) {\n      if (postMappingScript.getScriptKind() != MappingScriptKind.post_process_output_model) {\n        addMessage(MessageKind.WARNING, \"skip script '\" + postMappingScript + \"' (\" + postMappingScript.getModel().getUID() + \") - wrong script kind\");\n        continue;\n      }\n      addMessage(MessageKind.INFORMATION, \"post-process '\" + postMappingScript + \"' (\" + postMappingScript.getModel().getLongName() + \")\");\n      GeneratorUtil.executeMappingScript(postMappingScript, currentOutputModel, generator);\n    }\n\n    return currentOutputModel;\n  }","id":53501,"modified_method":"private SModel generateModel_stepIntern(SModel inputModel, ITemplateGenerator generator) {\n    GenerationSessionContext generationContext = generator.getGeneratorSessionContext();\n    IModule module = generationContext.getModule();\n    String modelsLongName = inputModel.getLongName();\n    SModel currentInputModel = inputModel;\n\n    // -----------------------\n    // run pre-processing scripts\n    // -----------------------\n    List<MappingScript> preMappingScripts = generationContext.getPreMappingScripts();\n    if (!preMappingScripts.isEmpty()) {\n      // need to clone input model?\n      boolean needToCloneInputMode = !myDiscardTransients;  // clone model if save transients (needed for tracing)\n      if (!needToCloneInputMode) {\n        for (MappingScript preMappingScript : preMappingScripts) {\n          if (preMappingScript.getScriptKind() == MappingScriptKind.pre_process_input_model) {\n            if (preMappingScript.getModifiesModel()) {\n              needToCloneInputMode = true;\n              break;\n            }\n          }\n        }\n      }\n      if (needToCloneInputMode) {\n        SModel currentInputModel_clone = createTransientModel(modelsLongName, module);\n        addMessage(MessageKind.INFORMATION, \"clone model '\" + currentInputModel.getUID() + \"' --> '\" + currentInputModel_clone.getUID() + \"'\");\n        CloneUtil.cloneModel(currentInputModel, currentInputModel_clone, generator.getScope());\n\n        if (!myDiscardTransients) { // tracing\n          generationContext.getGenerationTracer().registerPreMappingScripts(currentInputModel, currentInputModel_clone, preMappingScripts);\n        }\n\n        // probably we can forget about former input model here\n        recycleWasteModel(currentInputModel);\n        currentInputModel = currentInputModel_clone;\n      }\n    }\n\n    for (MappingScript preMappingScript : preMappingScripts) {\n      if (preMappingScript.getScriptKind() != MappingScriptKind.pre_process_input_model) {\n        addMessage(MessageKind.WARNING, \"skip script '\" + preMappingScript + \"' (\" + preMappingScript.getModel().getUID() + \") - wrong script kind\");\n        continue;\n      }\n      addMessage(MessageKind.INFORMATION, \"pre-process '\" + preMappingScript + \"' (\" + preMappingScript.getModel().getUID() + \")\");\n      GeneratorUtil.executeMappingScript(preMappingScript, currentInputModel, generator);\n    }\n\n    SModel currentOutputModel = createTransientModel(modelsLongName, module);\n    generationContext.getGenerationTracer().startTracing(currentInputModel, currentOutputModel);\n\n    // -----------------------\n    // primary mapping\n    // -----------------------\n    currentInputModel.setLoading(false);\n    boolean somethingHasBeenGenerated = generator.doPrimaryMapping(currentInputModel, currentOutputModel);\n    if (!somethingHasBeenGenerated) {\n      currentOutputModel.validateLanguagesAndImports();\n      recycleWasteModel(currentInputModel);\n      return currentOutputModel;\n    }\n\n    // -----------------------\n    // secondary mapping (infinite cycle untill 'exit condition' is true)\n    // -----------------------\n    int secondaryMappingRepeatCount = 1;\n    while (true) {\n      currentOutputModel.validateLanguagesAndImports();\n\n      // apply mapping to the output model\n      addMessage(MessageKind.INFORMATION, \"generating model '\" + currentOutputModel.getUID() + \"'\");\n      generationContext.replaceInputModel(currentOutputModel);\n      SModel transientModel = createTransientModel(modelsLongName, module);\n      // probably we can forget about former input model here\n      recycleWasteModel(currentInputModel);\n      currentInputModel = currentOutputModel;\n      currentInputModel.setLoading(false);\n      generationContext.getGenerationTracer().startTracing(currentInputModel, transientModel);\n      if (!generator.doSecondaryMapping(currentInputModel, transientModel)) {\n        // nothing has been generated\n        generationContext.getGenerationTracer().discardTracing(currentInputModel, transientModel);\n        addMessage(MessageKind.INFORMATION, \"remove empty model '\" + transientModel.getUID() + \"'\");\n        SModelRepository.getInstance().removeModelDescriptor(transientModel.getModelDescriptor());\n        myTransientModelsCount--;\n        break;\n      }\n\n      if (++secondaryMappingRepeatCount > 10) {\n        generator.showErrorMessage(null, \"failed to generate output after 10 repeated mappings\");\n        if (generationContext.getGenerationTracer().hasTracebackData(transientModel.getUID())) {\n          generator.showErrorMessage(null, \"last rules applied:\");\n          List<Pair<SNode, SNode>> pairs = generationContext.getGenerationTracer().getAllAppiedRulesWithInputNodes(transientModel.getUID());\n          for (Pair<SNode, SNode> pair : pairs) {\n            generator.showErrorMessage(pair.o1, \"rule: \" + pair.o1.getDebugText());\n            generator.showErrorMessage(pair.o2, \"-- input: \" + (pair.o2 != null ? pair.o2.getDebugText() : \"n/a\"));\n          }\n        }\n        throw new GenerationFailedException(\"failed to generate output after 10 repeated mappings\");\n      }\n\n      // next iteration ...\n      currentOutputModel = transientModel;\n    }\n    currentOutputModel.setLoading(true);\n\n    // -----------------------\n    // run post-processing scripts\n    // -----------------------\n    List<MappingScript> postMappingScripts = generationContext.getPostMappingScripts();\n    if (!postMappingScripts.isEmpty() &&\n      !myDiscardTransients) {  // clone model - needed for tracing\n      SModel currentOutputModel_clone = createTransientModel(modelsLongName, module);\n      addMessage(MessageKind.INFORMATION, \"clone model '\" + currentOutputModel.getUID() + \"' --> '\" + currentOutputModel_clone.getUID() + \"'\");\n      CloneUtil.cloneModel(currentOutputModel, currentOutputModel_clone, generator.getScope());\n\n      generationContext.getGenerationTracer().registerPostMappingScripts(currentOutputModel, currentOutputModel_clone, postMappingScripts);\n      currentOutputModel = currentOutputModel_clone;\n    }\n\n\n    for (MappingScript postMappingScript : postMappingScripts) {\n      if (postMappingScript.getScriptKind() != MappingScriptKind.post_process_output_model) {\n        addMessage(MessageKind.WARNING, \"skip script '\" + postMappingScript + \"' (\" + postMappingScript.getModel().getUID() + \") - wrong script kind\");\n        continue;\n      }\n      addMessage(MessageKind.INFORMATION, \"post-process '\" + postMappingScript + \"' (\" + postMappingScript.getModel().getLongName() + \")\");\n      GeneratorUtil.executeMappingScript(postMappingScript, currentOutputModel, generator);\n    }\n\n    return currentOutputModel;\n  }","commit_id":"d0a5bf1edc67ddaea47dada13f9e1cc7c0d110e8","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void showErrorMessage(SNode sourceNode, SNode templateNode, SNode ruleNode, String message) {\n    myErrorsCount++;\n    if (ruleNode != null) {\n      if (myFailedRules.contains(ruleNode)) {\n        // do not show duplicating messages\n        return;\n      }\n      myFailedRules.add(ruleNode);\n    }\n\n    showErrorMessage((templateNode != null ? templateNode : ruleNode), message);\n    if (sourceNode != null) {\n      LOG.error(\"-- was source node: \" + sourceNode.getDebugText(),\n        new NodeWithContext(sourceNode, myOperationContext));\n    }\n    if (ruleNode != null) {\n      LOG.error(\"-- was rule: \" + ruleNode.getDebugText(),\n        new NodeWithContext(ruleNode, myOperationContext));\n    }\n    if (templateNode != null) {\n      LOG.error(\"-- was template: \" + templateNode.getDebugText(),\n        new NodeWithContext(templateNode, myOperationContext));\n    }\n  }","id":53502,"modified_method":"public void showErrorMessage(SNode inputNode, SNode templateNode, SNode ruleNode, String message) {\n    myErrorsCount++;\n    if (ruleNode != null) {\n      if (myFailedRules.contains(ruleNode)) {\n        // do not show duplicating messages\n        return;\n      }\n      myFailedRules.add(ruleNode);\n    }\n\n    showErrorMessage((templateNode != null ? templateNode : ruleNode), message);\n    if (inputNode != null) {\n      LOG.error(\"-- was input node: \" + inputNode.getDebugText(),\n        new NodeWithContext(inputNode, myOperationContext));\n    }\n    if (ruleNode != null) {\n      LOG.error(\"-- was rule: \" + ruleNode.getDebugText(),\n        new NodeWithContext(ruleNode, myOperationContext));\n    }\n    if (templateNode != null) {\n      LOG.error(\"-- was template: \" + templateNode.getDebugText(),\n        new NodeWithContext(templateNode, myOperationContext));\n    }\n  }","commit_id":"d0a5bf1edc67ddaea47dada13f9e1cc7c0d110e8","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void showErrorMessage(SNode sourceNode, SNode templateNode, String message) {\n    myErrorsCount++;\n    showErrorMessage(sourceNode, templateNode, null, message);\n  }","id":53503,"modified_method":"public void showErrorMessage(SNode inputNode, SNode templateNode, String message) {\n    myErrorsCount++;\n    showErrorMessage(inputNode, templateNode, null, message);\n  }","commit_id":"d0a5bf1edc67ddaea47dada13f9e1cc7c0d110e8","url":"https://github.com/JetBrains/MPS"},{"original_method":"public TracerNode find(SNode node) {\n    if (myNodePointer.getNode() == node) return this;\n    if (getDepth() > 1000) return null;\n    for (TracerNode child : myChildren) {\n      TracerNode tracerNode = child.find(node);\n      if (tracerNode != null) {\n        return tracerNode;\n      }\n    }\n    return null;\n  }","id":53504,"modified_method":"TracerNode find(SNode node) {\n    if (myNodePointer.getNode() == node) return this;\n    if (getDepth() > 1000) return null;\n    for (TracerNode child : myChildren) {\n      TracerNode tracerNode = child.find(node);\n      if (tracerNode != null) {\n        return tracerNode;\n      }\n    }\n    return null;\n  }","commit_id":"d0a5bf1edc67ddaea47dada13f9e1cc7c0d110e8","url":"https://github.com/JetBrains/MPS"},{"original_method":"public TracerNode find(Kind kind, SNode node) {\n    if (isThis(kind, node)) return this;\n    if (getDepth() > 1000) return null;\n    for (TracerNode child : myChildren) {\n      TracerNode tracerNode = child.find(kind, node);\n      if (tracerNode != null) {\n        return tracerNode;\n      }\n    }\n    return null;\n  }","id":53505,"modified_method":"TracerNode find(Kind kind, SNode node) {\n    if (isThis(kind, node)) return this;\n    if (getDepth() > 1000) return null;\n    for (TracerNode child : myChildren) {\n      TracerNode tracerNode = child.find(kind, node);\n      if (tracerNode != null) {\n        return tracerNode;\n      }\n    }\n    return null;\n  }","commit_id":"d0a5bf1edc67ddaea47dada13f9e1cc7c0d110e8","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void findAllTopmost(Kind kind, SNode node, List<TracerNode> result) {\n    if (isThis(kind, node)) {\n      result.add(this);\n      return;\n    }\n    if (getDepth() > 1000) return;\n    for (TracerNode child : myChildren) {\n      child.findAllTopmost(kind, node, result);\n    }\n  }","id":53506,"modified_method":"void findAllTopmost(Kind kind, SNode node, List<TracerNode> result) {\n    if (isThis(kind, node)) {\n      result.add(this);\n      return;\n    }\n    if (getDepth() > 1000) return;\n    for (TracerNode child : myChildren) {\n      child.findAllTopmost(kind, node, result);\n    }\n  }","commit_id":"d0a5bf1edc67ddaea47dada13f9e1cc7c0d110e8","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void main() {\n    {\n      int e = 5;\n      int i = 1;\n      i *= 287;\n      e *= (i + 5);\n      i = e * i;\n\n      if (!(e != 10 || i != 43)) {\n        boolean res = true;\n        for (int qq = 0; qq < 10; qq++) {\n          res = !(!(res) || !((i - e > qq)));\n        }\n      }\n\n      {\n        // extraWorktrue extraWork \n        int var12 = 55;\n      }\n      {\n        // myWork1true myWork1 \n        int var12 = 175 * (1 + e);\n      }\n      int e33 = 42;\n      int e32 = (22 + \"myWork1\".length());\n      int e31 = 58 + (\"extraWork\".length());\n    }\n  }","id":53507,"modified_method":"public void main() {\n    {\n      int e = 5;\n      int i = 1;\n      i *= 287;\n      e *= (i + 5);\n      i = e * i;\n\n      if (!(e != 10 || i != 43)) {\n        boolean res = true;\n        for (int qq = 0; qq < 10; qq++) {\n          res = !(!(res) || !((i - e > qq)));\n        }\n      }\n\n      {\n        // extraWorktrue extraWork \n        int var12 = 55;\n      }\n      {\n        // myWork1true myWork1 \n        int var12 = 175 * (1 + e);\n      }\n      int e33 = 42;\n      int e32 = (22 + \"myWork1\".length());\n      int e31 = 58 + (\"extraWork\".length());\n      int e30 = \n      {\n      };\n    }\n  }","commit_id":"4a3d8c39a154b71a765366b08f12432e4aee4b6f","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Nullable\n  private List<SNode> createOutputNodesForTemplateNodeWithMacro(NodeMacro nodeMacro, SNode templateNode, SNode inputNode, int nodeMacrosToSkip) throws DismissTopMappingRuleException, GenerationFailureException, GenerationCanceledException {\n    IGenerationTracer generationTracer = myGenerator.getGenerationTracer();\n    List<SNode> outputNodes = new ArrayList<SNode>();\n    String mappingName = GeneratorUtil.getMappingName(nodeMacro, null);\n\n    if (nodeMacro instanceof LoopMacro) {\n      // $LOOP$\n      List<SNode> newInputNodes = getNewInputNodes(nodeMacro, inputNode);\n      for (SNode newInputNode : newInputNodes) {\n        boolean inputChanged = (newInputNode != inputNode);\n        if (inputChanged) {\n          pushInputHistory(inputNode);\n          generationTracer.pushInputNode(newInputNode);\n        }\n        try {\n          List<SNode> _outputNodes = createOutputNodesForTemplateNode(mappingName, templateNode, newInputNode, nodeMacrosToSkip + 1);\n          if (_outputNodes != null) outputNodes.addAll(_outputNodes);\n        } finally {\n          if (inputChanged) {\n            popInputHistory();\n            generationTracer.closeInputNode(newInputNode);\n          }\n        }\n      }\n      return outputNodes;\n\n    } else if (nodeMacro instanceof CopySrcNodeMacro || nodeMacro instanceof CopySrcListMacro) {\n      // $COPY-SRC$ / $COPY-SRCL$\n      List<SNode> newInputNodes = getNewInputNodes(nodeMacro, inputNode);\n      for (SNode newInputNode : newInputNodes) {\n        List<SNode> _outputNodes = copyNodeFromInputNode(mappingName, templateNode, newInputNode);\n        if (_outputNodes != null) {\n          // check node languages : prevent 'input node' query from returning node, which language was not counted when\n          // planning the generation steps.\n          for (SNode outputNode : _outputNodes) {\n            Language outputNodeLang = outputNode.getNodeLanguage();\n            if (!myGenerator.getGeneratorSessionContext().getGenerationPlan().isCountedLanguage(outputNodeLang)) {\n              if (!outputNodeLang.getGenerators().isEmpty()) {\n                myGenerator.showErrorMessage(outputNode, \"language of output node is '\" + outputNodeLang.getNamespace() + \"' - this language did not show up when computing generation steps!\");\n                myGenerator.showErrorMessage(inputNode, \" -- was input: \" + inputNode.getDebugText());\n                myGenerator.showErrorMessage(nodeMacro.getNode(), \" -- was template: \" + nodeMacro.getDebugText());\n                myGenerator.showErrorMessage(null, \" -- workaround: add the language '\" + outputNodeLang.getNamespace() + \"' to list of 'Languages Engaged On Generation' in model '\" + myGenerator.getGeneratorSessionContext().getOriginalInputModel().getSModelFqName() + \"'\");\n              }\n            }\n          }\n          outputNodes.addAll(_outputNodes);\n        }\n      }\n      return outputNodes;\n\n    } else if (nodeMacro instanceof IfMacro) {\n      // $IF$\n      List<SNode> _outputNodes = null;\n      if (myGenerator.getExecutor().checkConditionForIfMacro(inputNode, (IfMacro) nodeMacro, myContext)) {\n        _outputNodes = createOutputNodesForTemplateNode(mappingName, templateNode, inputNode, nodeMacrosToSkip + 1);\n      } else {\n        // alternative consequence\n        RuleConsequence altConsequence = ((IfMacro) nodeMacro).getAlternativeConsequence();\n        if (altConsequence != null) {\n          try {\n            List<Pair<SNode, String>> nodeAndMappingNamePairs = GeneratorUtil.getTemplateNodesFromRuleConsequence(altConsequence, inputNode, nodeMacro.getNode(), myGenerator);\n            if (nodeAndMappingNamePairs == null) {\n              myGenerator.showErrorMessage(inputNode, null, nodeMacro.getNode(), \"error processing $IF$/alternative\");\n              return null;\n            }\n//            SNode altTemplateNode = nodeAndMappingNamePairs.o1;\n//            if (nodeAndMappingNamePairs.o2 != null) {\n//              mappingName = nodeAndMappingNamePairs.o2;\n//            }\n//            _outputNodes = createOutputNodesForExternalTemplateNode(mappingName, altTemplateNode, inputNode);\n            for (Pair<SNode, String> nodeAndMappingNamePair : nodeAndMappingNamePairs) {\n              SNode altTemplateNode = nodeAndMappingNamePair.o1;\n              if (nodeAndMappingNamePair.o2 != null) {\n                mappingName = nodeAndMappingNamePair.o2;\n              }\n\n              List<SNode> __outputNodes = createOutputNodesForExternalTemplateNode(mappingName, altTemplateNode, inputNode, myContext);\n              if (__outputNodes != null) {\n                if (_outputNodes == null) _outputNodes = new ArrayList<SNode>();\n                _outputNodes.addAll(__outputNodes);\n              }\n            }\n          } catch (AbandonRuleInputException e) {\n            // it's ok. just ignore\n          }\n        }\n      }\n      if (_outputNodes != null) outputNodes.addAll(_outputNodes);\n      return outputNodes;\n\n    } else if (nodeMacro instanceof MapSrcNodeMacro || nodeMacro instanceof MapSrcListMacro) {\n      // $MAP-SRC$ or $MAP-SRCL$\n      MapSrcMacro_MapperFunction macro_mapperFunction;\n      if (nodeMacro instanceof MapSrcNodeMacro) {\n        macro_mapperFunction = ((MapSrcNodeMacro) nodeMacro).getMapperFunction();\n      } else {\n        macro_mapperFunction = ((MapSrcListMacro) nodeMacro).getMapperFunction();\n      }\n\n      List<SNode> newInputNodes = getNewInputNodes(nodeMacro, inputNode);\n      for (SNode newInputNode : newInputNodes) {\n        boolean inputChanged = (newInputNode != inputNode);\n        if (inputChanged) {\n          pushInputHistory(inputNode);\n          generationTracer.pushInputNode(newInputNode);\n        }\n        try {\n          if (macro_mapperFunction != null) {\n            SNode childToReplaceLater = SModelUtil_new.instantiateConceptDeclaration(templateNode.getConceptFqName(), myOutputModel, myGenerator.getScope(), false);\n            generationTracer.pushOutputNodeToReplaceLater(childToReplaceLater);\n            outputNodes.add(childToReplaceLater);\n            // execute the 'mapper' function later\n            putInputNodeByMappingName(mappingName, newInputNode);\n            myGenerator.getDelayedChanges().addExecuteMapSrcNodeMacroChange(\n              nodeMacro, childToReplaceLater, newInputNode,\n              new HashMap<String, SNode>(myInputNodesByMappingName), myContext);\n          } else {\n            List<SNode> _outputNodes = createOutputNodesForTemplateNode(mappingName, templateNode, newInputNode, nodeMacrosToSkip + 1);\n            if (_outputNodes != null) {\n              outputNodes.addAll(_outputNodes);\n              // do post-processing here (it's not really a post-processing because model is not completed yet - output nodes are not added to parent node).\n              for (SNode outputNode : _outputNodes) {\n                myGenerator.getDelayedChanges().addExecuteMapSrcNodeMacroPostProcChange(\n                  nodeMacro, outputNode, newInputNode,\n                  new HashMap<String, SNode>(myInputNodesByMappingName), myContext);\n              }\n            }\n          }\n        } finally {\n          if (inputChanged) {\n            popInputHistory();\n            generationTracer.closeInputNode(newInputNode);\n          }\n        }\n      }\n      return outputNodes;\n\n    } else if (nodeMacro instanceof SwitchMacro) {\n      // $SWITCH$\n      TemplateSwitch templateSwitch = ((SwitchMacro) nodeMacro).getTemplateSwitch();\n      if (templateSwitch == null) {\n        myGenerator.showErrorMessage(inputNode, nodeMacro.getNode(), \"error processing $SWITCH$ - bad TemplateSwitch reference\");\n        return null;\n      }\n\n      SNode newInputNode = getNewInputNode(nodeMacro, inputNode);\n      if (newInputNode == null) {\n        GeneratorMessage generatorMessage = templateSwitch.getNullInputMessage();\n        if (generatorMessage != null) {\n          GeneratorUtil.processGeneratorMessage(generatorMessage, inputNode, nodeMacro.getNode(), null, myGenerator);\n        }\n        return outputNodes; // skip template\n      }\n\n      boolean inputChanged = (newInputNode != inputNode);\n      if (inputChanged) {\n        pushInputHistory(inputNode);\n        generationTracer.pushInputNode(newInputNode);\n      }\n      generationTracer.pushSwitch(templateSwitch.getNode());\n      try {\n        List<SNode> _outputNodes = null;\n        RuleConsequence consequenceForCase = (RuleConsequence) myGenerator.getRuleManager().getConsequenceForSwitchCase(newInputNode, templateSwitch, myGenerator);\n        if (consequenceForCase == null) {\n          // no switch-case found for the inputNode - continue with templateNode under the $switch$\n          _outputNodes = createOutputNodesForTemplateNode(mappingName, templateNode, newInputNode, nodeMacrosToSkip + 1);\n\n        } else {\n          List<Pair<SNode, String>> nodeAndMappingNamePairs = GeneratorUtil.getTemplateNodesFromRuleConsequence(consequenceForCase, newInputNode, nodeMacro.getNode(), myGenerator);\n          if (nodeAndMappingNamePairs == null) {\n            myGenerator.showErrorMessage(newInputNode, nodeMacro.getNode(), consequenceForCase.getNode(), \"error processing $SWITCH$\");\n            return null;\n          }\n\n          for (Pair<SNode, String> nodeAndMappingNamePair : nodeAndMappingNamePairs) {\n            SNode templateNodeForCase = nodeAndMappingNamePair.o1;\n            if (nodeAndMappingNamePair.o2 != null) {\n              mappingName = nodeAndMappingNamePair.o2;\n            }\n            List<SNode> __outputNodes = createOutputNodesForExternalTemplateNode(mappingName, templateNodeForCase, newInputNode, null);\n            if (__outputNodes != null) {\n              if (_outputNodes == null) _outputNodes = new ArrayList<SNode>();\n              _outputNodes.addAll(__outputNodes);\n            }\n          }\n        }\n\n        if (_outputNodes != null) outputNodes.addAll(_outputNodes);\n\n      } catch (AbandonRuleInputException e) {\n        // it's ok. just ignore.\n      } finally {\n        if (inputChanged) {\n          popInputHistory();\n          generationTracer.closeInputNode(newInputNode);\n        }\n      }\n      return outputNodes;\n\n    } else if (nodeMacro instanceof IncludeMacro) {\n      // $INCLUDE$\n      SNode newInputNode = getNewInputNode(nodeMacro, inputNode);\n      if (newInputNode == null) {\n        return outputNodes; // skip template\n      }\n\n      IncludeMacro includeMacro = (IncludeMacro) nodeMacro;\n      TemplateDeclaration includeTemplate = includeMacro.getIncludeTemplate();\n      if (includeTemplate == null) {\n        myGenerator.showErrorMessage(newInputNode, null, nodeMacro.getNode(), \"error processing $INCLIDE$ : no 'include template'\");\n        return null;\n      }\n/*\n      TemplateFragment fragment = GeneratorUtil.getFragmentFromTemplate(includeTemplate, newInputNode, nodeMacro.getNode(), myGenerator);\n      if (fragment == null) {\n        myGenerator.showErrorMessage(newInputNode, null, nodeMacro.getNode(), \"error processing $INCLIDE$\");\n        return null;\n      }\n*/\n      List<TemplateFragment> fragments = GeneratorUtil.getTemplateFragments(includeTemplate);\n      if (!GeneratorUtil.checkIfOneOrMaryAdjacentFragments(fragments, includeTemplate, newInputNode, nodeMacro.getNode(), myGenerator)) {\n        myGenerator.showErrorMessage(newInputNode, null, nodeMacro.getNode(), \"error processing $INCLIDE$\");\n        return null;\n      }\n\n      boolean inputChanged = (newInputNode != inputNode);\n      if (inputChanged) {\n        pushInputHistory(inputNode);\n        generationTracer.pushInputNode(newInputNode);\n      }\n      generationTracer.pushTemplateNode(includeTemplate.getNode());\n\n      try {\n        for (TemplateFragment fragment : fragments) {\n          SNode templateForInclude = fragment.getParent().getNode();\n          mappingName = GeneratorUtil.getMappingName(fragment, mappingName);\n          List<SNode> _outputNodes = createOutputNodesForExternalTemplateNode(mappingName, templateForInclude, newInputNode, null /* FIXME add parameters */);\n          if (_outputNodes != null) outputNodes.addAll(_outputNodes);\n        }\n      } finally {\n        if (inputChanged) {\n          popInputHistory();\n          generationTracer.closeInputNode(newInputNode);\n        }\n      }\n\n      return outputNodes;\n    }\n\n    // $$\n    List<SNode> newInputNodes = getNewInputNodes(nodeMacro, inputNode);\n    for (SNode newInputNode : newInputNodes) {\n      boolean inputChanged = (newInputNode != inputNode);\n      if (inputChanged) {\n        pushInputHistory(inputNode);\n        generationTracer.pushInputNode(newInputNode);\n      }\n      try {\n        List<SNode> _outputNodes = createOutputNodesForTemplateNode(mappingName, templateNode, newInputNode, nodeMacrosToSkip + 1);\n        if (_outputNodes != null) outputNodes.addAll(_outputNodes);\n      } finally {\n        if (inputChanged) {\n          popInputHistory();\n          generationTracer.closeInputNode(newInputNode);\n        }\n      }\n    }\n    return outputNodes;\n  }","id":53508,"modified_method":"@Nullable\n  private List<SNode> createOutputNodesForTemplateNodeWithMacro(NodeMacro nodeMacro, SNode templateNode, SNode inputNode, int nodeMacrosToSkip) throws DismissTopMappingRuleException, GenerationFailureException, GenerationCanceledException {\n    IGenerationTracer generationTracer = myGenerator.getGenerationTracer();\n    List<SNode> outputNodes = new ArrayList<SNode>();\n    String mappingName = GeneratorUtil.getMappingName(nodeMacro, null);\n\n    if (nodeMacro instanceof LoopMacro) {\n      // $LOOP$\n      List<SNode> newInputNodes = getNewInputNodes(nodeMacro, inputNode);\n      for (SNode newInputNode : newInputNodes) {\n        boolean inputChanged = (newInputNode != inputNode);\n        if (inputChanged) {\n          pushInputHistory(inputNode);\n          generationTracer.pushInputNode(newInputNode);\n        }\n        try {\n          List<SNode> _outputNodes = createOutputNodesForTemplateNode(mappingName, templateNode, newInputNode, nodeMacrosToSkip + 1);\n          if (_outputNodes != null) outputNodes.addAll(_outputNodes);\n        } finally {\n          if (inputChanged) {\n            popInputHistory();\n            generationTracer.closeInputNode(newInputNode);\n          }\n        }\n      }\n      return outputNodes;\n\n    } else if (nodeMacro instanceof CopySrcNodeMacro || nodeMacro instanceof CopySrcListMacro) {\n      // $COPY-SRC$ / $COPY-SRCL$\n      List<SNode> newInputNodes = getNewInputNodes(nodeMacro, inputNode);\n      for (SNode newInputNode : newInputNodes) {\n        List<SNode> _outputNodes = copyNodeFromInputNode(mappingName, templateNode, newInputNode);\n        if (_outputNodes != null) {\n          // check node languages : prevent 'input node' query from returning node, which language was not counted when\n          // planning the generation steps.\n          for (SNode outputNode : _outputNodes) {\n            Language outputNodeLang = outputNode.getNodeLanguage();\n            if (!myGenerator.getGeneratorSessionContext().getGenerationPlan().isCountedLanguage(outputNodeLang)) {\n              if (!outputNodeLang.getGenerators().isEmpty()) {\n                myGenerator.showErrorMessage(outputNode, \"language of output node is '\" + outputNodeLang.getNamespace() + \"' - this language did not show up when computing generation steps!\");\n                myGenerator.showErrorMessage(inputNode, \" -- was input: \" + inputNode.getDebugText());\n                myGenerator.showErrorMessage(nodeMacro.getNode(), \" -- was template: \" + nodeMacro.getDebugText());\n                myGenerator.showErrorMessage(null, \" -- workaround: add the language '\" + outputNodeLang.getNamespace() + \"' to list of 'Languages Engaged On Generation' in model '\" + myGenerator.getGeneratorSessionContext().getOriginalInputModel().getSModelFqName() + \"'\");\n              }\n            }\n          }\n          outputNodes.addAll(_outputNodes);\n        }\n      }\n      return outputNodes;\n\n    } else if (nodeMacro instanceof IfMacro) {\n      // $IF$\n      List<SNode> _outputNodes = null;\n      if (myGenerator.getExecutor().checkConditionForIfMacro(inputNode, (IfMacro) nodeMacro, myContext)) {\n        _outputNodes = createOutputNodesForTemplateNode(mappingName, templateNode, inputNode, nodeMacrosToSkip + 1);\n      } else {\n        // alternative consequence\n        RuleConsequence altConsequence = ((IfMacro) nodeMacro).getAlternativeConsequence();\n        if (altConsequence != null) {\n          try {\n            List<Pair<SNode, String>> nodeAndMappingNamePairs = GeneratorUtil.getTemplateNodesFromRuleConsequence(altConsequence, inputNode, nodeMacro.getNode(), myGenerator);\n            if (nodeAndMappingNamePairs == null) {\n              myGenerator.showErrorMessage(inputNode, null, nodeMacro.getNode(), \"error processing $IF$/alternative\");\n              return null;\n            }\n//            SNode altTemplateNode = nodeAndMappingNamePairs.o1;\n//            if (nodeAndMappingNamePairs.o2 != null) {\n//              mappingName = nodeAndMappingNamePairs.o2;\n//            }\n//            _outputNodes = createOutputNodesForExternalTemplateNode(mappingName, altTemplateNode, inputNode);\n            for (Pair<SNode, String> nodeAndMappingNamePair : nodeAndMappingNamePairs) {\n              SNode altTemplateNode = nodeAndMappingNamePair.o1;\n              if (nodeAndMappingNamePair.o2 != null) {\n                mappingName = nodeAndMappingNamePair.o2;\n              }\n\n              List<SNode> __outputNodes = createOutputNodesForExternalTemplateNode(mappingName, altTemplateNode, inputNode, myContext);\n              if (__outputNodes != null) {\n                if (_outputNodes == null) _outputNodes = new ArrayList<SNode>();\n                _outputNodes.addAll(__outputNodes);\n              }\n            }\n          } catch (AbandonRuleInputException e) {\n            // it's ok. just ignore\n          }\n        }\n      }\n      if (_outputNodes != null) outputNodes.addAll(_outputNodes);\n      return outputNodes;\n\n    } else if (nodeMacro instanceof MapSrcNodeMacro || nodeMacro instanceof MapSrcListMacro) {\n      // $MAP-SRC$ or $MAP-SRCL$\n      MapSrcMacro_MapperFunction macro_mapperFunction;\n      if (nodeMacro instanceof MapSrcNodeMacro) {\n        macro_mapperFunction = ((MapSrcNodeMacro) nodeMacro).getMapperFunction();\n      } else {\n        macro_mapperFunction = ((MapSrcListMacro) nodeMacro).getMapperFunction();\n      }\n\n      List<SNode> newInputNodes = getNewInputNodes(nodeMacro, inputNode);\n      for (SNode newInputNode : newInputNodes) {\n        boolean inputChanged = (newInputNode != inputNode);\n        if (inputChanged) {\n          pushInputHistory(inputNode);\n          generationTracer.pushInputNode(newInputNode);\n        }\n        try {\n          if (macro_mapperFunction != null) {\n            SNode childToReplaceLater = SModelUtil_new.instantiateConceptDeclaration(templateNode.getConceptFqName(), myOutputModel, myGenerator.getScope(), false);\n            generationTracer.pushOutputNodeToReplaceLater(childToReplaceLater);\n            outputNodes.add(childToReplaceLater);\n            // execute the 'mapper' function later\n            putInputNodeByMappingName(mappingName, newInputNode);\n            myGenerator.getDelayedChanges().addExecuteMapSrcNodeMacroChange(\n              nodeMacro, childToReplaceLater, newInputNode,\n              new HashMap<String, SNode>(myInputNodesByMappingName), myContext);\n          } else {\n            List<SNode> _outputNodes = createOutputNodesForTemplateNode(mappingName, templateNode, newInputNode, nodeMacrosToSkip + 1);\n            if (_outputNodes != null) {\n              outputNodes.addAll(_outputNodes);\n              // do post-processing here (it's not really a post-processing because model is not completed yet - output nodes are not added to parent node).\n              for (SNode outputNode : _outputNodes) {\n                myGenerator.getDelayedChanges().addExecuteMapSrcNodeMacroPostProcChange(\n                  nodeMacro, outputNode, newInputNode,\n                  new HashMap<String, SNode>(myInputNodesByMappingName), myContext);\n              }\n            }\n          }\n        } finally {\n          if (inputChanged) {\n            popInputHistory();\n            generationTracer.closeInputNode(newInputNode);\n          }\n        }\n      }\n      return outputNodes;\n\n    } else if (nodeMacro instanceof SwitchMacro) {\n      // $SWITCH$\n      TemplateSwitch templateSwitch = ((SwitchMacro) nodeMacro).getTemplateSwitch();\n      if (templateSwitch == null) {\n        myGenerator.showErrorMessage(inputNode, nodeMacro.getNode(), \"error processing $SWITCH$ - bad TemplateSwitch reference\");\n        return null;\n      }\n\n      SNode newInputNode = getNewInputNode(nodeMacro, inputNode);\n      if (newInputNode == null) {\n        GeneratorMessage generatorMessage = templateSwitch.getNullInputMessage();\n        if (generatorMessage != null) {\n          GeneratorUtil.processGeneratorMessage(generatorMessage, inputNode, nodeMacro.getNode(), null, myGenerator);\n        }\n        return outputNodes; // skip template\n      }\n\n      boolean inputChanged = (newInputNode != inputNode);\n      if (inputChanged) {\n        pushInputHistory(inputNode);\n        generationTracer.pushInputNode(newInputNode);\n      }\n      generationTracer.pushSwitch(templateSwitch.getNode());\n      try {\n        List<SNode> _outputNodes = null;\n        RuleConsequence consequenceForCase = (RuleConsequence) myGenerator.getRuleManager().getConsequenceForSwitchCase(newInputNode, templateSwitch, myGenerator);\n        if (consequenceForCase == null) {\n          // no switch-case found for the inputNode - continue with templateNode under the $switch$\n          _outputNodes = createOutputNodesForTemplateNode(mappingName, templateNode, newInputNode, nodeMacrosToSkip + 1);\n\n        } else {\n          List<Pair<SNode, String>> nodeAndMappingNamePairs = GeneratorUtil.getTemplateNodesFromRuleConsequence(consequenceForCase, newInputNode, nodeMacro.getNode(), myGenerator);\n          if (nodeAndMappingNamePairs == null) {\n            myGenerator.showErrorMessage(newInputNode, nodeMacro.getNode(), consequenceForCase.getNode(), \"error processing $SWITCH$\");\n            return null;\n          }\n\n          for (Pair<SNode, String> nodeAndMappingNamePair : nodeAndMappingNamePairs) {\n            SNode templateNodeForCase = nodeAndMappingNamePair.o1;\n            if (nodeAndMappingNamePair.o2 != null) {\n              mappingName = nodeAndMappingNamePair.o2;\n            }\n            List<SNode> __outputNodes = createOutputNodesForExternalTemplateNode(mappingName, templateNodeForCase, newInputNode, null);\n            if (__outputNodes != null) {\n              if (_outputNodes == null) _outputNodes = new ArrayList<SNode>();\n              _outputNodes.addAll(__outputNodes);\n            }\n          }\n        }\n\n        if (_outputNodes != null) outputNodes.addAll(_outputNodes);\n\n      } catch (AbandonRuleInputException e) {\n        // it's ok. just ignore.\n      } finally {\n        if (inputChanged) {\n          popInputHistory();\n          generationTracer.closeInputNode(newInputNode);\n        }\n      }\n      return outputNodes;\n\n    } else if (nodeMacro instanceof IncludeMacro) {\n      // $INCLUDE$\n      SNode newInputNode = getNewInputNode(nodeMacro, inputNode);\n      if (newInputNode == null) {\n        return outputNodes; // skip template\n      }\n\n      IncludeMacro includeMacro = (IncludeMacro) nodeMacro;\n      TemplateDeclaration includeTemplate = includeMacro.getIncludeTemplate();\n      if (includeTemplate == null) {\n        myGenerator.showErrorMessage(newInputNode, null, nodeMacro.getNode(), \"error processing $INCLUDE$ : no 'include template'\");\n        return null;\n      }\n\n      final List<TemplateParameterDeclaration> parameterDeclarations = includeTemplate.getParameters();\n      if(parameterDeclarations != null && parameterDeclarations.size() > 0) {\n        if(myContext == null) {\n          myGenerator.showErrorMessage(newInputNode, null, nodeMacro.getNode(), \"error processing $INCLUDE$: no parameters\");\n        } else {\n          for(TemplateParameterDeclaration decl : parameterDeclarations) {\n            String name = decl.getName();\n            if(name != null && !myContext.hasVariable(name)) {\n              myGenerator.showErrorMessage(newInputNode, null, nodeMacro.getNode(), \"error processing $INCLUDE$: parameter `\" + name + \"' is missing\");\n            }\n          }\n        }\n      }\n/*\n      TemplateFragment fragment = GeneratorUtil.getFragmentFromTemplate(includeTemplate, newInputNode, nodeMacro.getNode(), myGenerator);\n      if (fragment == null) {\n        myGenerator.showErrorMessage(newInputNode, null, nodeMacro.getNode(), \"error processing $INCLUDE$\");\n        return null;\n      }\n*/\n      List<TemplateFragment> fragments = GeneratorUtil.getTemplateFragments(includeTemplate);\n      if (!GeneratorUtil.checkIfOneOrMaryAdjacentFragments(fragments, includeTemplate, newInputNode, nodeMacro.getNode(), myGenerator)) {\n        myGenerator.showErrorMessage(newInputNode, null, nodeMacro.getNode(), \"error processing $INCLUDE$\");\n        return null;\n      }\n\n      boolean inputChanged = (newInputNode != inputNode);\n      if (inputChanged) {\n        pushInputHistory(inputNode);\n        generationTracer.pushInputNode(newInputNode);\n      }\n      generationTracer.pushTemplateNode(includeTemplate.getNode());\n\n      try {\n        for (TemplateFragment fragment : fragments) {\n          SNode templateForInclude = fragment.getParent().getNode();\n          mappingName = GeneratorUtil.getMappingName(fragment, mappingName);\n          List<SNode> _outputNodes = createOutputNodesForExternalTemplateNode(mappingName, templateForInclude, newInputNode, myContext);\n          if (_outputNodes != null) outputNodes.addAll(_outputNodes);\n        }\n      } finally {\n        if (inputChanged) {\n          popInputHistory();\n          generationTracer.closeInputNode(newInputNode);\n        }\n      }\n\n      return outputNodes;\n    }\n\n    // $$\n    List<SNode> newInputNodes = getNewInputNodes(nodeMacro, inputNode);\n    for (SNode newInputNode : newInputNodes) {\n      boolean inputChanged = (newInputNode != inputNode);\n      if (inputChanged) {\n        pushInputHistory(inputNode);\n        generationTracer.pushInputNode(newInputNode);\n      }\n      try {\n        List<SNode> _outputNodes = createOutputNodesForTemplateNode(mappingName, templateNode, newInputNode, nodeMacrosToSkip + 1);\n        if (_outputNodes != null) outputNodes.addAll(_outputNodes);\n      } finally {\n        if (inputChanged) {\n          popInputHistory();\n          generationTracer.closeInputNode(newInputNode);\n        }\n      }\n    }\n    return outputNodes;\n  }","commit_id":"4a3d8c39a154b71a765366b08f12432e4aee4b6f","url":"https://github.com/JetBrains/MPS"},{"original_method":"private IssueDto getIssue() {\n    return new IssueDto()\n      .setIssueCreationDate(DateUtils.parseDate(\"2014-09-04\"))\n      .setIssueUpdateDate(DateUtils.parseDate(\"2014-12-04\"))\n      .setRule(rule)\n      .setDebt(10L)\n      .setRootComponent(project)\n      .setComponent(resource)\n      .setStatus(\"OPEN\").setResolution(\"OPEN\")\n      .setSeverity(\"MAJOR\")\n      .setKee(UUID.randomUUID().toString());\n  }","id":53509,"modified_method":"private IssueDto getIssue() {\n    return new IssueDto()\n      .setIssueCreationDate(DateUtils.parseDate(\"2014-09-04\"))\n      .setIssueUpdateDate(DateUtils.parseDate(\"2014-12-04\"))\n      .setRule(rule)\n      .setDebt(10L)\n      .setRootComponent(project)\n      .setComponent(resource)\n      .setStatus(Issue.STATUS_OPEN)\n      .setResolution(null)\n      .setSeverity(Severity.MAJOR)\n      .setKee(UUID.randomUUID().toString());\n  }","commit_id":"185b72b5051f9a88e6cc35cf7c59fa91880ef883","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Before\n  public void setUp() throws Exception {\n    tester.clearDbAndIndexes();\n    db = tester.get(DbClient.class);\n    session = db.openSession(false);\n    service = tester.get(IssueService.class);\n\n    rule = RuleTesting.newXooX1();\n    tester.get(RuleDao.class).insert(session, rule);\n\n    project = new ComponentDto()\n      .setEnabled(true)\n      .setId(1L)\n      .setKey(\"MyProject\")\n      .setProjectId(1L);\n    tester.get(ComponentDao.class).insert(session, project);\n\n    resource = new ComponentDto()\n      .setEnabled(true)\n      .setProjectId(1L)\n      .setKey(\"MyComponent\")\n      .setId(2L);\n    tester.get(ComponentDao.class).insert(session, resource);\n\n    // project can be seen by anyone\n    tester.get(PermissionFacade.class).insertGroupPermission(project.getId(), DefaultGroups.ANYONE, UserRole.USER, session);\n    db.issueAuthorizationDao().synchronizeAfter(session, new Date(0));\n\n    session.commit();\n  }","id":53510,"modified_method":"@Before\n  public void setUp() throws Exception {\n    tester.clearDbAndIndexes();\n    db = tester.get(DbClient.class);\n    indexClient = tester.get(IndexClient.class);\n    session = db.openSession(false);\n    service = tester.get(IssueService.class);\n\n    rule = RuleTesting.newXooX1();\n    tester.get(RuleDao.class).insert(session, rule);\n\n    project = new ComponentDto()\n      .setId(1L)\n      .setProjectId(1L)\n      .setKey(\"MyProject\")\n      .setLongName(\"My Project\")\n      .setQualifier(Qualifiers.PROJECT)\n      .setScope(Scopes.PROJECT);\n    tester.get(ComponentDao.class).insert(session, project);\n    tester.get(SnapshotDao.class).insert(session, SnapshotTesting.createForComponent(project));\n\n    resource = new ComponentDto()\n      .setId(2L)\n      .setProjectId(1L)\n      .setKey(\"MyComponent\")\n      .setLongName(\"My Component\");\n    tester.get(ComponentDao.class).insert(session, resource);\n    tester.get(SnapshotDao.class).insert(session, SnapshotTesting.createForComponent(resource));\n\n    // project can be seen by anyone\n    tester.get(PermissionFacade.class).insertGroupPermission(project.getId(), DefaultGroups.ANYONE, UserRole.USER, session);\n    db.issueAuthorizationDao().synchronizeAfter(session, new Date(0));\n\n    UserDto user = new UserDto().setLogin(\"gandalf\").setName(\"Gandalf\");\n    db.userDao().insert(session, user);\n    tester.get(PermissionFacade.class).insertUserPermission(project.getId(), user.getId(), UserRole.USER, session);\n\n    userSession = MockUserSession.create().setLogin(user.getLogin()).setGlobalPermissions(GlobalPermissions.SYSTEM_ADMIN)\n      .addProjectPermissions(UserRole.USER, project.key());\n\n    session.commit();\n  }","commit_id":"185b72b5051f9a88e6cc35cf7c59fa91880ef883","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void can_facet() throws Exception {\n    IssueDto issue1 = getIssue().setActionPlanKey(\"P1\");\n    IssueDto issue2 = getIssue().setActionPlanKey(\"P2\");\n    tester.get(IssueDao.class).insert(session, issue1, issue2);\n    session.commit();\n\n    org.sonar.server.search.Result<Issue> result = service.search(IssueQuery.builder().build(), new QueryContext());\n    assertThat(result.getHits()).hasSize(2);\n    assertThat(result.getFacets()).isEmpty();\n\n    result = service.search(IssueQuery.builder().build(), new QueryContext().setFacet(true));\n    assertThat(result.getFacets().keySet()).hasSize(4);\n    assertThat(result.getFacetKeys(\"actionPlan\")).hasSize(2);\n  }","id":53511,"modified_method":"@Test\n  public void can_facet() throws Exception {\n    IssueDto issue1 = getIssue().setActionPlanKey(\"P1\");\n    IssueDto issue2 = getIssue().setActionPlanKey(\"P2\").setResolution(\"NONE\");\n    tester.get(IssueDao.class).insert(session, issue1, issue2);\n    session.commit();\n\n    org.sonar.server.search.Result<Issue> result = service.search(IssueQuery.builder().build(), new QueryContext());\n    assertThat(result.getHits()).hasSize(2);\n    assertThat(result.getFacets()).isEmpty();\n\n    result = service.search(IssueQuery.builder().build(), new QueryContext().setFacet(true));\n    assertThat(result.getFacets().keySet()).hasSize(4);\n    assertThat(result.getFacetKeys(\"actionPlan\")).hasSize(2);\n  }","commit_id":"185b72b5051f9a88e6cc35cf7c59fa91880ef883","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void insert_and_find_after_date() throws Exception {\n\n    RuleDto rule = RuleTesting.newXooX1();\n    tester.get(RuleDao.class).insert(dbSession, rule);\n\n    ComponentDto project = new ComponentDto()\n      .setId(1L)\n      .setProjectId(1L);\n    tester.get(ComponentDao.class).insert(dbSession, project);\n\n    ComponentDto resource = new ComponentDto()\n      .setProjectId(1L)\n      .setId(2L);\n    tester.get(ComponentDao.class).insert(dbSession, resource);\n\n    IssueDto issue = new IssueDto().setId(1L).setRuleId(50).setComponentId(123l).setRootComponentId(100l)\n      .setRuleId(rule.getId())\n      .setRootComponentId(project.getId())\n      .setComponentId(resource.getId())\n      .setStatus(\"OPEN\").setResolution(\"OPEN\")\n      .setKee(UUID.randomUUID().toString());\n    dbClient.issueDao().insert(dbSession, issue);\n\n    dbSession.commit();\n    assertThat(issue.getId()).isNotNull();\n\n    // Find Issues since forever\n    Date t0 = new Date(0);\n    assertThat(dbClient.issueDao().findAfterDate(dbSession, t0)).hasSize(1);\n\n    // Should not find any new issues\n    Date t1 = new Date();\n    assertThat(dbClient.issueDao().findAfterDate(dbSession, t1)).hasSize(0);\n\n    // Should synchronise\n    tester.clearIndexes();\n    assertThat(indexClient.get(IssueIndex.class).countAll()).isEqualTo(0);\n    tester.get(Platform.class).executeStartupTasks();\n    assertThat(indexClient.get(IssueIndex.class).countAll()).isEqualTo(1);\n\n  }","id":53512,"modified_method":"@Test\n  public void insert_and_find_after_date() throws Exception {\n\n    RuleDto rule = RuleTesting.newXooX1();\n    tester.get(RuleDao.class).insert(dbSession, rule);\n\n    ComponentDto project = new ComponentDto()\n      .setId(1L)\n      .setKey(\"MyProject\")\n      .setProjectId(1L);\n    tester.get(ComponentDao.class).insert(dbSession, project);\n\n    ComponentDto resource = new ComponentDto()\n      .setId(2L)\n      .setKey(\"MyComponent\")\n      .setProjectId(1L);\n    tester.get(ComponentDao.class).insert(dbSession, resource);\n\n    IssueDto issue = new IssueDto().setId(1L)\n      .setRuleId(rule.getId())\n      .setRootComponentId(project.getId())\n      .setRootComponentKey_unit_test_only(project.key())\n      .setComponentId(resource.getId())\n      .setComponentKey_unit_test_only(resource.key())\n      .setStatus(\"OPEN\").setResolution(\"OPEN\")\n      .setKee(UUID.randomUUID().toString());\n    dbClient.issueDao().insert(dbSession, issue);\n\n    dbSession.commit();\n    assertThat(issue.getId()).isNotNull();\n\n    // Find Issues since forever\n    Date t0 = new Date(0);\n    assertThat(dbClient.issueDao().findAfterDate(dbSession, t0)).hasSize(1);\n\n    // Should not find any new issues\n    Date t1 = new Date();\n    assertThat(dbClient.issueDao().findAfterDate(dbSession, t1)).hasSize(0);\n\n    // Should synchronise\n    tester.clearIndexes();\n    assertThat(indexClient.get(IssueIndex.class).countAll()).isEqualTo(0);\n    tester.get(Platform.class).executeStartupTasks();\n    assertThat(indexClient.get(IssueIndex.class).countAll()).isEqualTo(1);\n  }","commit_id":"0b7ea43a238daaa1081bbe159418488e043a7ca1","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void insert_and_find_by_key() throws Exception {\n    RuleDto rule = RuleTesting.newXooX1();\n    tester.get(RuleDao.class).insert(dbSession, rule);\n\n    ComponentDto project = new ComponentDto()\n      .setKey(\"MyProject\")\n  .setId(1L)\n      .setProjectId(1L);\n    tester.get(ComponentDao.class).insert(dbSession, project);\n\n    ComponentDto resource = new ComponentDto()\n      .setKey(\"MyComponent\")\n      .setProjectId(1L)\n      .setId(2L);\n    tester.get(ComponentDao.class).insert(dbSession, resource);\n\n    IssueDto issue = new IssueDto()\n      .setIssueCreationDate(new Date())\n      .setIssueUpdateDate(new Date())\n      .setRule(rule)\n      .setRootComponent(project)\n      .setComponent(resource)\n      .setStatus(\"OPEN\").setResolution(\"OPEN\")\n      .setKee(UUID.randomUUID().toString())\n      .setSeverity(\"MAJOR\");\n    dbClient.issueDao().insert(dbSession, issue);\n\n    dbSession.commit();\n\n    // Check that Issue is in Index\n    assertThat(indexClient.get(IssueIndex.class).countAll()).isEqualTo(1);\n\n    // should find by key\n    IssueDoc issueDoc = indexClient.get(IssueIndex.class).getByKey(issue.getKey());\n    assertThat(issueDoc).isNotNull();\n\n    // Check all normalized fields\n    assertThat(issueDoc.actionPlanKey()).isEqualTo(issue.getActionPlanKey());\n    assertThat(issueDoc.assignee()).isEqualTo(issue.getAssignee());\n    assertThat(issueDoc.authorLogin()).isEqualTo(issue.getAuthorLogin());\n    assertThat(issueDoc.closeDate()).isEqualTo(issue.getIssueCloseDate());\n    assertThat(issueDoc.componentKey()).isEqualTo(issue.getComponentKey());\n    assertThat(issueDoc.creationDate()).isEqualTo(issue.getCreatedAt());\n    assertThat(issueDoc.effortToFix()).isEqualTo(issue.getEffortToFix());\n    assertThat(issueDoc.resolution()).isEqualTo(issue.getResolution());\n    assertThat(issueDoc.ruleKey()).isEqualTo(RuleKey.of(issue.getRuleRepo(), issue.getRule()));\n    assertThat(issueDoc.line()).isEqualTo(issue.getLine());\n    assertThat(issueDoc.message()).isEqualTo(issue.getMessage());\n    assertThat(issueDoc.reporter()).isEqualTo(issue.getReporter());\n    assertThat(issueDoc.key()).isEqualTo(issue.getKey());\n    assertThat(issueDoc.updateDate()).isEqualTo(issue.getIssueUpdateDate());\n    assertThat(issueDoc.status()).isEqualTo(issue.getStatus());\n    assertThat(issueDoc.severity()).isEqualTo(issue.getSeverity());\n\n    // assertThat(issueDoc.attributes()).isEqualTo(issue.getIssueAttributes());\n    // assertThat(issueDoc.isNew()).isEqualTo(issue.isN());\n    // assertThat(issueDoc.comments()).isEqualTo(issue.());\n  }","id":53513,"modified_method":"@Test\n  public void insert_and_find_by_key() throws Exception {\n    RuleDto rule = RuleTesting.newXooX1();\n    tester.get(RuleDao.class).insert(dbSession, rule);\n\n    ComponentDto project = new ComponentDto()\n      .setId(1L)\n      .setKey(\"MyProject\")\n      .setProjectId(1L);\n    tester.get(ComponentDao.class).insert(dbSession, project);\n\n    ComponentDto resource = new ComponentDto()\n      .setProjectId(1L)\n      .setKey(\"MyComponent\")\n      .setId(2L);\n    tester.get(ComponentDao.class).insert(dbSession, resource);\n\n    IssueDto issue = new IssueDto()\n      .setIssueCreationDate(new Date())\n      .setIssueUpdateDate(new Date())\n      .setRule(rule)\n      .setRootComponent(project)\n      .setComponent(resource)\n      .setStatus(\"OPEN\").setResolution(\"OPEN\")\n      .setKee(UUID.randomUUID().toString())\n      .setSeverity(\"MAJOR\");\n    dbClient.issueDao().insert(dbSession, issue);\n\n    dbSession.commit();\n\n    // Check that Issue is in Index\n    assertThat(indexClient.get(IssueIndex.class).countAll()).isEqualTo(1);\n\n    // should find by key\n    IssueDoc issueDoc = indexClient.get(IssueIndex.class).getByKey(issue.getKey());\n    assertThat(issueDoc).isNotNull();\n\n    // Check all normalized fields\n    assertThat(issueDoc.actionPlanKey()).isEqualTo(issue.getActionPlanKey());\n    assertThat(issueDoc.assignee()).isEqualTo(issue.getAssignee());\n    assertThat(issueDoc.authorLogin()).isEqualTo(issue.getAuthorLogin());\n    assertThat(issueDoc.closeDate()).isEqualTo(issue.getIssueCloseDate());\n    assertThat(issueDoc.componentKey()).isEqualTo(issue.getComponentKey());\n    assertThat(issueDoc.creationDate()).isEqualTo(issue.getCreatedAt());\n    assertThat(issueDoc.effortToFix()).isEqualTo(issue.getEffortToFix());\n    assertThat(issueDoc.resolution()).isEqualTo(issue.getResolution());\n    assertThat(issueDoc.ruleKey()).isEqualTo(RuleKey.of(issue.getRuleRepo(), issue.getRule()));\n    assertThat(issueDoc.line()).isEqualTo(issue.getLine());\n    assertThat(issueDoc.message()).isEqualTo(issue.getMessage());\n    assertThat(issueDoc.reporter()).isEqualTo(issue.getReporter());\n    assertThat(issueDoc.key()).isEqualTo(issue.getKey());\n    assertThat(issueDoc.updateDate()).isEqualTo(issue.getIssueUpdateDate());\n    assertThat(issueDoc.status()).isEqualTo(issue.getStatus());\n    assertThat(issueDoc.severity()).isEqualTo(issue.getSeverity());\n\n    // assertThat(issueDoc.attributes()).isEqualTo(issue.getIssueAttributes());\n    // assertThat(issueDoc.isNew()).isEqualTo(issue.isN());\n    // assertThat(issueDoc.comments()).isEqualTo(issue.());\n  }","commit_id":"0b7ea43a238daaa1081bbe159418488e043a7ca1","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  public List<UpdateRequest> normalize(IssueDto dto) {\n    Map<String, Object> update = new HashMap<String, Object>();\n\n    update.put(IssueField.KEY.field(), dto.getKey());\n    update.put(IssueField.UPDATED_AT.field(), dto.getUpdatedAt());\n    update.put(IssueField.CREATED_AT.field(), dto.getCreatedAt());\n\n    update.put(IssueField.ACTION_PLAN.field(), dto.getActionPlanKey());\n    update.put(IssueField.ASSIGNEE.field(), dto.getAssignee());\n    update.put(IssueField.AUTHOR_LOGIN.field(), dto.getAuthorLogin());\n    update.put(IssueField.ISSUE_CLOSE_DATE.field(), dto.getIssueCloseDate());\n    update.put(IssueField.COMPONENT.field(), dto.getComponentKey());\n    update.put(IssueField.ISSUE_CREATED_AT.field(), dto.getIssueCreationDate());\n    update.put(IssueField.ISSUE_UPDATED_AT.field(), dto.getIssueUpdateDate());\n    update.put(IssueField.EFFORT.field(), dto.getEffortToFix());\n    update.put(IssueField.RESOLUTION.field(), dto.getResolution());\n    update.put(IssueField.LINE.field(), dto.getLine());\n    update.put(IssueField.MESSAGE.field(), dto.getMessage());\n    update.put(IssueField.REPORTER.field(), dto.getReporter());\n    update.put(IssueField.STATUS.field(), dto.getStatus());\n    update.put(IssueField.SEVERITY.field(), dto.getSeverity());\n\n    // issueDoc.ruleKey();\n    update.put(IssueField.RULE.field(), dto.getRule());\n    update.put(IssueField.REPOSITORY.field(), dto.getRuleRepo());\n\n    // TODO Not yet normalized\n    // IssueDoc issueDoc = new IssueDoc(null);\n    // issueDoc.isNew();\n    // issueDoc.comments();\n    // issueDoc.attributes();\n\n    /** Upsert elements */\n    Map<String, Object> upsert = getUpsertFor(IssueField.ALL_FIELDS, update);\n    upsert.put(IssueField.KEY.field(), dto.getKey().toString());\n\n    return ImmutableList.of(\n      new UpdateRequest()\n        .id(dto.getKey().toString())\n        .doc(update)\n        .upsert(upsert));\n }","id":53514,"modified_method":"@Override\n  public List<UpdateRequest> normalize(IssueDto dto) {\n    Map<String, Object> update = new HashMap<String, Object>();\n\n    update.put(\"_parent\", dto.getRootComponentKey());\n    update.put(IssueField.KEY.field(), dto.getKey());\n    update.put(IssueField.UPDATED_AT.field(), dto.getUpdatedAt());\n    update.put(IssueField.CREATED_AT.field(), dto.getCreatedAt());\n\n    update.put(IssueField.ACTION_PLAN.field(), dto.getActionPlanKey());\n    update.put(IssueField.ASSIGNEE.field(), dto.getAssignee());\n    update.put(IssueField.AUTHOR_LOGIN.field(), dto.getAuthorLogin());\n    update.put(IssueField.ISSUE_CLOSE_DATE.field(), dto.getIssueCloseDate());\n    update.put(IssueField.PROJECT.field(), dto.getRootComponentKey());\n    update.put(IssueField.COMPONENT.field(), dto.getComponentKey());\n    update.put(IssueField.ISSUE_CREATED_AT.field(), dto.getIssueCreationDate());\n    update.put(IssueField.ISSUE_UPDATED_AT.field(), dto.getIssueUpdateDate());\n    update.put(IssueField.EFFORT.field(), dto.getEffortToFix());\n    update.put(IssueField.RESOLUTION.field(), dto.getResolution());\n    update.put(IssueField.LINE.field(), dto.getLine());\n    update.put(IssueField.MESSAGE.field(), dto.getMessage());\n    update.put(IssueField.REPORTER.field(), dto.getReporter());\n    update.put(IssueField.STATUS.field(), dto.getStatus());\n    update.put(IssueField.SEVERITY.field(), dto.getSeverity());\n\n    // issueDoc.ruleKey();\n    update.put(IssueField.RULE.field(), dto.getRule());\n    update.put(IssueField.REPOSITORY.field(), dto.getRuleRepo());\n\n    // TODO Not yet normalized\n    // IssueDoc issueDoc = new IssueDoc(null);\n    // issueDoc.isNew();\n    // issueDoc.comments();\n    // issueDoc.attributes();\n\n    /** Upsert elements */\n    Map<String, Object> upsert = getUpsertFor(IssueField.ALL_FIELDS, update);\n    upsert.put(IssueField.KEY.field(), dto.getKey().toString());\n\n    return ImmutableList.of(\n      new UpdateRequest()\n        .id(dto.getKey().toString())\n        .routing(dto.getRootComponentKey())\n        .parent(dto.getRootComponentKey())\n        .doc(update)\n        .upsert(upsert));\n }","commit_id":"0b7ea43a238daaa1081bbe159418488e043a7ca1","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  public IssueQueryResult find(IssueQuery query) {\n    LOG.debug(\"IssueQuery : {}\", query);\n    long start = System.currentTimeMillis();\n    SqlSession sqlSession = myBatis.openSession(false);\n    try {\n      // 1. Select the authorized ids of all the issues that match the query\n      List<IssueDto> authorizedIssues = issueDao.selectIssueIds(query, UserSession.get().userId(), sqlSession);\n\n      // 2. Sort all authorized issues\n      List<IssueDto> authorizedSortedIssues = sort(authorizedIssues, query, authorizedIssues.size());\n\n      // 3. Apply pagination\n      Paging paging = Paging.create(query.pageSize(), query.pageIndex(), authorizedSortedIssues.size());\n      Set<Long> pagedIssueIds = pagedIssueIds(authorizedSortedIssues, paging);\n\n      // 4. Load issues and their related data (rules, components, projects, comments, action plans, ...) and sort then again\n      List<IssueDto> pagedIssues = issueDao.selectByIds(pagedIssueIds, sqlSession);\n      List<IssueDto> pagedSortedIssues = sort(pagedIssues, query, authorizedIssues.size());\n\n      Map<String, DefaultIssue> issuesByKey = newHashMap();\n      List<Issue> issues = newArrayList();\n      Set<Integer> ruleIds = newHashSet();\n      Set<Long> componentIds = newHashSet();\n      Set<String> actionPlanKeys = newHashSet();\n      Set<String> users = newHashSet();\n      for (IssueDto dto : pagedSortedIssues) {\n        DefaultIssue defaultIssue = dto.toDefaultIssue();\n        issuesByKey.put(dto.getKee(), defaultIssue);\n        issues.add(defaultIssue);\n        ruleIds.add(dto.getRuleId());\n        componentIds.add(dto.getComponentId());\n        actionPlanKeys.add(dto.getActionPlanKey());\n        if (dto.getReporter() != null) {\n          users.add(dto.getReporter());\n        }\n        if (dto.getAssignee() != null) {\n          users.add(dto.getAssignee());\n        }\n      }\n      List<DefaultIssueComment> comments = issueChangeDao.selectCommentsByIssues(sqlSession, issuesByKey.keySet());\n      for (DefaultIssueComment comment : comments) {\n        DefaultIssue issue = issuesByKey.get(comment.issueKey());\n        issue.addComment(comment);\n        if (comment.userLogin() != null) {\n          users.add(comment.userLogin());\n        }\n      }\n\n      Collection<Component> components = findComponents(componentIds);\n      Collection<Component> groupComponents = findSubProjects(components);\n      Collection<Component> rootComponents = findProjects(components);\n\n      Set<Component> allComponents = newHashSet(components);\n      allComponents.addAll(groupComponents);\n      allComponents.addAll(rootComponents);\n\n      return new DefaultIssueQueryResult(issues)\n        .setMaxResultsReached(authorizedIssues.size() == query.maxResults())\n        .addRules(hideRules(query) ? Collections.<Rule>emptyList() : findRules(ruleIds))\n        .addComponents(allComponents)\n        .addProjects(rootComponents)\n        .addActionPlans(findActionPlans(actionPlanKeys))\n        .addUsers(findUsers(users))\n        .setPaging(paging);\n    } finally {\n      MyBatis.closeQuietly(sqlSession);\n      LOG.debug(\"IssueQuery execution time : {} ms\", System.currentTimeMillis() - start);\n    }\n  }","id":53515,"modified_method":"@Override\n  public IssueQueryResult find(IssueQuery query) {\n    LOG.debug(\"IssueQuery : {}\", query);\n    long start = System.currentTimeMillis();\n    DbSession sqlSession = myBatis.openSession(false);\n    try {\n      // 1. Select the authorized ids of all the issues that match the query\n      List<IssueDto> authorizedIssues = issueDao.selectIssueIds(query, UserSession.get().userId(), sqlSession);\n\n      // 2. Sort all authorized issues\n      List<IssueDto> authorizedSortedIssues = sort(authorizedIssues, query, authorizedIssues.size());\n\n      // 3. Apply pagination\n      Paging paging = Paging.create(query.pageSize(), query.pageIndex(), authorizedSortedIssues.size());\n      Set<Long> pagedIssueIds = pagedIssueIds(authorizedSortedIssues, paging);\n\n      // 4. Load issues and their related data (rules, components, projects, comments, action plans, ...) and sort then again\n      List<IssueDto> pagedIssues = issueDao.selectByIds(pagedIssueIds, sqlSession);\n      List<IssueDto> pagedSortedIssues = sort(pagedIssues, query, authorizedIssues.size());\n\n      Map<String, DefaultIssue> issuesByKey = newHashMap();\n      List<Issue> issues = newArrayList();\n      Set<Integer> ruleIds = newHashSet();\n      Set<Long> componentIds = newHashSet();\n      Set<String> actionPlanKeys = newHashSet();\n      Set<String> users = newHashSet();\n      for (IssueDto dto : pagedSortedIssues) {\n        DefaultIssue defaultIssue = dto.toDefaultIssue();\n        issuesByKey.put(dto.getKee(), defaultIssue);\n        issues.add(defaultIssue);\n        ruleIds.add(dto.getRuleId());\n        componentIds.add(dto.getComponentId());\n        actionPlanKeys.add(dto.getActionPlanKey());\n        if (dto.getReporter() != null) {\n          users.add(dto.getReporter());\n        }\n        if (dto.getAssignee() != null) {\n          users.add(dto.getAssignee());\n        }\n      }\n      List<DefaultIssueComment> comments = issueChangeDao.selectCommentsByIssues(sqlSession, issuesByKey.keySet());\n      for (DefaultIssueComment comment : comments) {\n        DefaultIssue issue = issuesByKey.get(comment.issueKey());\n        issue.addComment(comment);\n        if (comment.userLogin() != null) {\n          users.add(comment.userLogin());\n        }\n      }\n\n      Collection<Component> components = findComponents(componentIds);\n      Collection<Component> groupComponents = findSubProjects(components);\n      Collection<Component> rootComponents = findProjects(components);\n\n      Set<Component> allComponents = newHashSet(components);\n      allComponents.addAll(groupComponents);\n      allComponents.addAll(rootComponents);\n\n      return new DefaultIssueQueryResult(issues)\n        .setMaxResultsReached(authorizedIssues.size() == query.maxResults())\n        .addRules(hideRules(query) ? Collections.<Rule>emptyList() : findRules(ruleIds))\n        .addComponents(allComponents)\n        .addProjects(rootComponents)\n        .addActionPlans(findActionPlans(actionPlanKeys))\n        .addUsers(findUsers(users))\n        .setPaging(paging);\n    } finally {\n      MyBatis.closeQuietly(sqlSession);\n      LOG.debug(\"IssueQuery execution time : {} ms\", System.currentTimeMillis() - start);\n    }\n  }","commit_id":"f76df3e934c7b76141c58f24ac3303ae358cdcf4","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"/**\n   * Never return null, but an empty list if the issue does not exist.\n   * No security check is done since it should already have been done to get the issue\n   */\n  @Override\n  public List<Transition> listTransitions(@Nullable Issue issue) {\n    if (issue == null) {\n      return Collections.emptyList();\n    }\n    List<Transition> outTransitions = workflow.outTransitions(issue);\n    List<Transition> allowedTransitions = new ArrayList<Transition>();\n    for (Transition transition : outTransitions) {\n      DefaultIssue defaultIssue = (DefaultIssue) issue;\n      String projectKey = defaultIssue.projectKey();\n      if (StringUtils.isBlank(transition.requiredProjectPermission()) ||\n        (projectKey != null && UserSession.get().hasProjectPermission(transition.requiredProjectPermission(), projectKey))) {\n        allowedTransitions.add(transition);\n      }\n    }\n    return allowedTransitions;\n  }","id":53516,"modified_method":"/**\n   * Never return null, but an empty list if the issue does not exist.\n   * No security check is done since it should already have been done to get the issue\n   */\n  @Override\n  public List<Transition> listTransitions(@Nullable Issue issue) {\n    if (issue == null) {\n      return Collections.emptyList();\n    }\n    List<Transition> outTransitions = workflow.outTransitions(issue);\n    List<Transition> allowedTransitions = new ArrayList<Transition>();\n    for (Transition transition : outTransitions) {\n      String projectKey = issue.projectKey();\n      if (StringUtils.isBlank(transition.requiredProjectPermission()) ||\n        (projectKey != null && UserSession.get().hasProjectPermission(transition.requiredProjectPermission(), projectKey))) {\n        allowedTransitions.add(transition);\n      }\n    }\n    return allowedTransitions;\n  }","commit_id":"f76df3e934c7b76141c58f24ac3303ae358cdcf4","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public void writeTransitions(Issue issue, JsonWriter json) {\n    json.name(\"transitions\").beginArray();\n    if (UserSession.get().isLoggedIn()) {\n      List<Transition> transitions = issueService.listTransitions(issue);\n      for (Transition transition : transitions) {\n        json.value(transition.key());\n      }\n    }\n    json.endArray();\n  }","id":53517,"modified_method":"public void writeTransitions(Issue issue, JsonWriter json) {\n    json.name(\"transitions\").beginArray();\n    if (UserSession.get().isLoggedIn()) {\n      for (Transition transition : issueService.listTransitions(issue)) {\n        json.value(transition.key());\n      }\n    }\n    json.endArray();\n  }","commit_id":"f76df3e934c7b76141c58f24ac3303ae358cdcf4","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public void writeActions(Issue issue, JsonWriter json) {\n    json.name(\"actions\").beginArray();\n    for (String action : actions((DefaultIssue) issue)) {\n      json.value(action);\n    }\n    json.endArray();\n  }","id":53518,"modified_method":"public void writeActions(Issue issue, JsonWriter json) {\n    json.name(\"actions\").beginArray();\n    for (String action : actions(issue)) {\n      json.value(action);\n    }\n    json.endArray();\n  }","commit_id":"f76df3e934c7b76141c58f24ac3303ae358cdcf4","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private List<String> actions(DefaultIssue issue) {\n    List<String> actions = newArrayList();\n    String login = UserSession.get().login();\n    if (login != null) {\n      actions.add(\"comment\");\n      if (issue.resolution() == null) {\n        actions.add(\"assign\");\n        if (!login.equals(issue.assignee())) {\n          actions.add(\"assign_to_me\");\n        }\n        actions.add(\"plan\");\n        String projectKey = issue.projectKey();\n        if (projectKey != null && UserSession.get().hasProjectPermission(UserRole.ISSUE_ADMIN, projectKey)) {\n          actions.add(\"set_severity\");\n        }\n        for (Action action : actionService.listAvailableActions(issue)) {\n          actions.add(action.key());\n        }\n      }\n    }\n    return actions;\n  }","id":53519,"modified_method":"private List<String> actions(Issue issue) {\n    List<String> actions = newArrayList();\n    String login = UserSession.get().login();\n    if (login != null) {\n      actions.add(\"comment\");\n      if (issue.resolution() == null) {\n        actions.add(\"assign\");\n        if (!login.equals(issue.assignee())) {\n          actions.add(\"assign_to_me\");\n        }\n        actions.add(\"plan\");\n        String projectKey = issue.projectKey();\n        if (projectKey != null && UserSession.get().hasProjectPermission(UserRole.ISSUE_ADMIN, projectKey)) {\n          actions.add(\"set_severity\");\n        }\n        for (Action action : actionService.listAvailableActions(issue)) {\n          actions.add(action.key());\n        }\n      }\n    }\n    return actions;\n  }","commit_id":"f76df3e934c7b76141c58f24ac3303ae358cdcf4","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public List<FieldDiffs> selectChangelogByIssue(String issueKey) {\n    SqlSession session = mybatis.openSession(false);\n    try {\n      List<FieldDiffs> result = Lists.newArrayList();\n      for (IssueChangeDto dto : selectByIssuesAndType(session, Arrays.asList(issueKey), IssueChangeDto.TYPE_FIELD_CHANGE)) {\n        result.add(dto.toFieldDiffs());\n      }\n      return result;\n    } finally {\n      MyBatis.closeQuietly(session);\n    }\n  }","id":53520,"modified_method":"public List<FieldDiffs> selectChangelogByIssue(String issueKey) {\n    DbSession session = mybatis.openSession(false);\n    try {\n      List<FieldDiffs> result = Lists.newArrayList();\n      for (IssueChangeDto dto : selectByIssuesAndType(session, Arrays.asList(issueKey), IssueChangeDto.TYPE_FIELD_CHANGE)) {\n        result.add(dto.toFieldDiffs());\n      }\n      return result;\n    } finally {\n      MyBatis.closeQuietly(session);\n    }\n  }","commit_id":"f76df3e934c7b76141c58f24ac3303ae358cdcf4","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public boolean delete(String key) {\n    SqlSession session = mybatis.openSession(false);\n    try {\n      IssueChangeMapper mapper = session.getMapper(IssueChangeMapper.class);\n      int count = mapper.delete(key);\n      session.commit();\n      return count == 1;\n\n    } finally {\n      MyBatis.closeQuietly(session);\n    }\n  }","id":53521,"modified_method":"public boolean delete(String key) {\n    DbSession session = mybatis.openSession(false);\n    try {\n      IssueChangeMapper mapper = session.getMapper(IssueChangeMapper.class);\n      int count = mapper.delete(key);\n      session.commit();\n      return count == 1;\n\n    } finally {\n      MyBatis.closeQuietly(session);\n    }\n  }","commit_id":"f76df3e934c7b76141c58f24ac3303ae358cdcf4","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@CheckForNull\n  public DefaultIssueComment selectCommentByKey(String commentKey) {\n    SqlSession session = mybatis.openSession(false);\n    try {\n      IssueChangeMapper mapper = session.getMapper(IssueChangeMapper.class);\n      IssueChangeDto dto = mapper.selectByKeyAndType(commentKey, IssueChangeDto.TYPE_COMMENT);\n      return dto != null ? dto.toComment() : null;\n\n    } finally {\n      MyBatis.closeQuietly(session);\n    }\n  }","id":53522,"modified_method":"@CheckForNull\n  public DefaultIssueComment selectCommentByKey(String commentKey) {\n    DbSession session = mybatis.openSession(false);\n    try {\n      IssueChangeMapper mapper = session.getMapper(IssueChangeMapper.class);\n      IssueChangeDto dto = mapper.selectByKeyAndType(commentKey, IssueChangeDto.TYPE_COMMENT);\n      return dto != null ? dto.toComment() : null;\n\n    } finally {\n      MyBatis.closeQuietly(session);\n    }\n  }","commit_id":"f76df3e934c7b76141c58f24ac3303ae358cdcf4","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public boolean update(IssueChangeDto change) {\n    SqlSession session = mybatis.openSession(false);\n    try {\n      IssueChangeMapper mapper = session.getMapper(IssueChangeMapper.class);\n      int count = mapper.update(change);\n      session.commit();\n      return count == 1;\n\n    } finally {\n      MyBatis.closeQuietly(session);\n    }\n  }","id":53523,"modified_method":"public boolean update(IssueChangeDto change) {\n    DbSession session = mybatis.openSession(false);\n    try {\n      IssueChangeMapper mapper = session.getMapper(IssueChangeMapper.class);\n      int count = mapper.update(change);\n      session.commit();\n      return count == 1;\n\n    } finally {\n      MyBatis.closeQuietly(session);\n    }\n  }","commit_id":"f76df3e934c7b76141c58f24ac3303ae358cdcf4","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public void selectChangelogOnNonClosedIssuesByModuleAndType(Integer componentId, ResultHandler handler) {\n    SqlSession session = mybatis.openSession(false);\n    try {\n      Map<String, Object> params = newHashMap();\n      params.put(\"componentId\", componentId);\n      params.put(\"changeType\", IssueChangeDto.TYPE_FIELD_CHANGE);\n      session.select(\"org.sonar.core.issue.db.IssueChangeMapper.selectChangelogOnNonClosedIssuesByModuleAndType\", params, handler);\n\n    } finally {\n      MyBatis.closeQuietly(session);\n    }\n  }","id":53524,"modified_method":"public void selectChangelogOnNonClosedIssuesByModuleAndType(Integer componentId, ResultHandler handler) {\n    DbSession session = mybatis.openSession(false);\n    try {\n      Map<String, Object> params = newHashMap();\n      params.put(\"componentId\", componentId);\n      params.put(\"changeType\", IssueChangeDto.TYPE_FIELD_CHANGE);\n      session.select(\"org.sonar.core.issue.db.IssueChangeMapper.selectChangelogOnNonClosedIssuesByModuleAndType\", params, handler);\n\n    } finally {\n      MyBatis.closeQuietly(session);\n    }\n  }","commit_id":"f76df3e934c7b76141c58f24ac3303ae358cdcf4","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"List<IssueChangeDto> selectByIssuesAndType(SqlSession session, Collection<String> issueKeys, String changeType) {\n    if (issueKeys.isEmpty()) {\n      return Collections.emptyList();\n    }\n    IssueChangeMapper mapper = session.getMapper(IssueChangeMapper.class);\n    List<IssueChangeDto> dtosList = newArrayList();\n    List<List<String>> keysPartition = Lists.partition(newArrayList(issueKeys), 1000);\n    for (List<String> partition : keysPartition) {\n      List<IssueChangeDto> dtos = mapper.selectByIssuesAndType(partition, changeType);\n      dtosList.addAll(dtos);\n    }\n    return dtosList;\n  }","id":53525,"modified_method":"List<IssueChangeDto> selectByIssuesAndType(DbSession session, Collection<String> issueKeys, String changeType) {\n    if (issueKeys.isEmpty()) {\n      return Collections.emptyList();\n    }\n    IssueChangeMapper mapper = session.getMapper(IssueChangeMapper.class);\n    List<IssueChangeDto> dtosList = newArrayList();\n    List<List<String>> keysPartition = Lists.partition(newArrayList(issueKeys), 1000);\n    for (List<String> partition : keysPartition) {\n      List<IssueChangeDto> dtos = mapper.selectByIssuesAndType(partition, changeType);\n      dtosList.addAll(dtos);\n    }\n    return dtosList;\n  }","commit_id":"f76df3e934c7b76141c58f24ac3303ae358cdcf4","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public List<DefaultIssueComment> selectCommentsByIssues(SqlSession session, Collection<String> issueKeys) {\n    List<DefaultIssueComment> comments = Lists.newArrayList();\n    for (IssueChangeDto dto : selectByIssuesAndType(session, issueKeys, IssueChangeDto.TYPE_COMMENT)) {\n      comments.add(dto.toComment());\n    }\n    return comments;\n  }","id":53526,"modified_method":"public List<DefaultIssueComment> selectCommentsByIssues(DbSession session, Collection<String> issueKeys) {\n    List<DefaultIssueComment> comments = Lists.newArrayList();\n    for (IssueChangeDto dto : selectByIssuesAndType(session, issueKeys, IssueChangeDto.TYPE_COMMENT)) {\n      comments.add(dto.toComment());\n    }\n    return comments;\n  }","commit_id":"f76df3e934c7b76141c58f24ac3303ae358cdcf4","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void select_comments_by_issues_on_huge_number_of_issues() {\n    setupData(\"shared\");\n\n    SqlSession session = getMyBatis().openSession();\n    List<String> hugeNbOfIssues = newArrayList();\n    for (int i=0; i<4500; i++) {\n      hugeNbOfIssues.add(\"ABCD\"+i);\n    }\n    List<DefaultIssueComment> comments = dao.selectCommentsByIssues(session, hugeNbOfIssues);\n    MyBatis.closeQuietly(session);\n\n    // The goal of this test is only to check that the query do no fail, not to check the number of results\n    assertThat(comments).isEmpty();\n  }","id":53527,"modified_method":"@Test\n  public void select_comments_by_issues_on_huge_number_of_issues() {\n    setupData(\"shared\");\n\n    DbSession session = getMyBatis().openSession(false);\n    List<String> hugeNbOfIssues = newArrayList();\n    for (int i=0; i<4500; i++) {\n      hugeNbOfIssues.add(\"ABCD\"+i);\n    }\n    List<DefaultIssueComment> comments = dao.selectCommentsByIssues(session, hugeNbOfIssues);\n    MyBatis.closeQuietly(session);\n\n    // The goal of this test is only to check that the query do no fail, not to check the number of results\n    assertThat(comments).isEmpty();\n  }","commit_id":"f76df3e934c7b76141c58f24ac3303ae358cdcf4","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void select_comments_by_issues() {\n    setupData(\"shared\");\n\n    SqlSession session = getMyBatis().openSession();\n    List<DefaultIssueComment> comments = dao.selectCommentsByIssues(session, Arrays.asList(\"1000\"));\n    MyBatis.closeQuietly(session);\n    assertThat(comments).hasSize(2);\n\n    // chronological order\n    DefaultIssueComment first = comments.get(0);\n    assertThat(first.markdownText()).isEqualTo(\"old comment\");\n\n\n    DefaultIssueComment second = comments.get(1);\n    assertThat(second.userLogin()).isEqualTo(\"arthur\");\n    assertThat(second.key()).isEqualTo(\"FGHIJ\");\n    assertThat(second.markdownText()).isEqualTo(\"recent comment\");\n  }","id":53528,"modified_method":"@Test\n  public void select_comments_by_issues() {\n    setupData(\"shared\");\n\n    DbSession session = getMyBatis().openSession(false);\n    List<DefaultIssueComment> comments = dao.selectCommentsByIssues(session, Arrays.asList(\"1000\"));\n    MyBatis.closeQuietly(session);\n    assertThat(comments).hasSize(2);\n\n    // chronological order\n    DefaultIssueComment first = comments.get(0);\n    assertThat(first.markdownText()).isEqualTo(\"old comment\");\n\n\n    DefaultIssueComment second = comments.get(1);\n    assertThat(second.userLogin()).isEqualTo(\"arthur\");\n    assertThat(second.key()).isEqualTo(\"FGHIJ\");\n    assertThat(second.markdownText()).isEqualTo(\"recent comment\");\n  }","commit_id":"f76df3e934c7b76141c58f24ac3303ae358cdcf4","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void select_comments_by_issues_empty_input() {\n    // no need to connect to db\n    SqlSession session = mock(SqlSession.class);\n    List<DefaultIssueComment> comments = dao.selectCommentsByIssues(session, Collections.<String>emptyList());\n\n    assertThat(comments).isEmpty();\n  }","id":53529,"modified_method":"@Test\n  public void select_comments_by_issues_empty_input() {\n    // no need to connect to db\n    DbSession session = mock(DbSession.class);\n    List<DefaultIssueComment> comments = dao.selectCommentsByIssues(session, Collections.<String>emptyList());\n\n    assertThat(comments).isEmpty();\n  }","commit_id":"f76df3e934c7b76141c58f24ac3303ae358cdcf4","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void writeActionPlans(JsonWriter json, List<ActionPlan> plans) {\n    if (!plans.isEmpty()) {\n      json.name(\"actionPlans\").beginArray();\n      for (ActionPlan actionPlan : plans) {\n        Date deadLine = actionPlan.deadLine();\n        Date updatedAt = actionPlan.updatedAt();\n\n        json.beginObject()\n          .prop(\"key\", actionPlan.key())\n          .prop(\"name\", actionPlan.name())\n          .prop(\"status\", actionPlan.status())\n          .prop(\"project\", actionPlan.projectKey())\n          .prop(\"userLogin\", actionPlan.userLogin())\n          .prop(\"deadLine\", isoDate(deadLine))\n          .prop(\"fDeadLine\", formatDate(deadLine))\n          .prop(\"createdAt\", isoDate(actionPlan.createdAt()))\n          .prop(\"fCreatedAt\", formatDate(actionPlan.createdAt()))\n          .prop(\"updatedAt\", isoDate(actionPlan.updatedAt()))\n          .prop(\"fUpdatedAt\", formatDate(updatedAt))\n          .endObject();\n      }\n      json.endArray();\n    }\n  }","id":53530,"modified_method":"private void writeActionPlans(JsonWriter json, Collection<ActionPlan> plans) {\n    if (!plans.isEmpty()) {\n      json.name(\"actionPlans\").beginArray();\n      for (ActionPlan actionPlan : plans) {\n        Date deadLine = actionPlan.deadLine();\n        Date updatedAt = actionPlan.updatedAt();\n\n        json.beginObject()\n          .prop(\"key\", actionPlan.key())\n          .prop(\"name\", actionPlan.name())\n          .prop(\"status\", actionPlan.status())\n          .prop(\"project\", actionPlan.projectKey())\n          .prop(\"userLogin\", actionPlan.userLogin())\n          .prop(\"deadLine\", isoDate(deadLine))\n          .prop(\"fDeadLine\", formatDate(deadLine))\n          .prop(\"createdAt\", isoDate(actionPlan.createdAt()))\n          .prop(\"fCreatedAt\", formatDate(actionPlan.createdAt()))\n          .prop(\"updatedAt\", isoDate(actionPlan.updatedAt()))\n          .prop(\"fUpdatedAt\", formatDate(updatedAt))\n          .endObject();\n      }\n      json.endArray();\n    }\n  }","commit_id":"f76df3e934c7b76141c58f24ac3303ae358cdcf4","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void writeIssueExtraFields(IssueQueryResult result, Issue issue, @Nullable List<String> extraFields, JsonWriter json) {\n    if (extraFields != null && UserSession.get().isLoggedIn()) {\n      if (extraFields.contains(ACTIONS_EXTRA_FIELD)) {\n        actionsWriter.writeActions(issue, json);\n      }\n\n      if (extraFields.contains(TRANSITIONS_EXTRA_FIELD)) {\n        actionsWriter.writeTransitions(issue, json);\n      }\n\n      String assignee = issue.assignee();\n      if (extraFields.contains(ASSIGNEE_NAME_EXTRA_FIELD) && assignee != null) {\n        User user = result.user(assignee);\n        json.prop(ASSIGNEE_NAME_EXTRA_FIELD, user != null ? user.name() : null);\n      }\n\n      String reporter = issue.reporter();\n      if (extraFields.contains(REPORTER_NAME_EXTRA_FIELD) && reporter != null) {\n        User user = result.user(reporter);\n        json.prop(REPORTER_NAME_EXTRA_FIELD, user != null ? user.name() : null);\n      }\n\n      String actionPlanKey = issue.actionPlanKey();\n      if (extraFields.contains(ACTION_PLAN_NAME_EXTRA_FIELD) && actionPlanKey != null) {\n        ActionPlan actionPlan = result.actionPlan(issue);\n        json.prop(ACTION_PLAN_NAME_EXTRA_FIELD, actionPlan != null ? actionPlan.name() : null);\n      }\n    }\n  }","id":53531,"modified_method":"private void writeIssueExtraFields(Issue issue, Map<String, User> usersByLogin, Map<String, ActionPlan> actionPlanByKeys, @Nullable List<String> extraFields, JsonWriter json) {\n    if (extraFields != null && UserSession.get().isLoggedIn()) {\n      if (extraFields.contains(ACTIONS_EXTRA_FIELD)) {\n        actionsWriter.writeActions(issue, json);\n      }\n\n      if (extraFields.contains(TRANSITIONS_EXTRA_FIELD)) {\n        actionsWriter.writeTransitions(issue, json);\n      }\n\n      String assignee = issue.assignee();\n      if (extraFields.contains(ASSIGNEE_NAME_EXTRA_FIELD) && assignee != null) {\n        User user = usersByLogin.get(assignee);\n        json.prop(ASSIGNEE_NAME_EXTRA_FIELD, user != null ? user.name() : null);\n      }\n\n      String reporter = issue.reporter();\n      if (extraFields.contains(REPORTER_NAME_EXTRA_FIELD) && reporter != null) {\n        User user = usersByLogin.get(reporter);\n        json.prop(REPORTER_NAME_EXTRA_FIELD, user != null ? user.name() : null);\n      }\n\n      String actionPlanKey = issue.actionPlanKey();\n      if (extraFields.contains(ACTION_PLAN_NAME_EXTRA_FIELD) && actionPlanKey != null) {\n        ActionPlan actionPlan = actionPlanByKeys.get(actionPlanKey);\n        json.prop(ACTION_PLAN_NAME_EXTRA_FIELD, actionPlan != null ? actionPlan.name() : null);\n      }\n    }\n  }","commit_id":"f76df3e934c7b76141c58f24ac3303ae358cdcf4","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void writeUsers(JsonWriter json, List<User> users) {\n    json.name(\"users\").beginArray();\n    for (User user : users) {\n      json.beginObject()\n        .prop(\"login\", user.login())\n        .prop(\"name\", user.name())\n        .prop(\"active\", user.active())\n        .prop(\"email\", user.email())\n        .endObject();\n    }\n    json.endArray();\n  }","id":53532,"modified_method":"private void writeUsers(JsonWriter json, Map<String, User> usersByLogin) {\n    json.name(\"users\").beginArray();\n    for (User user : usersByLogin.values()) {\n      json.beginObject()\n        .prop(\"login\", user.login())\n        .prop(\"name\", user.name())\n        .prop(\"active\", user.active())\n        .prop(\"email\", user.email())\n        .endObject();\n    }\n    json.endArray();\n  }","commit_id":"f76df3e934c7b76141c58f24ac3303ae358cdcf4","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  protected void doContextResponse(Request request, QueryContext context, Result<Issue> result, JsonWriter json) {\n    // Insert the projects and component name;\n    Set<RuleKey> ruleKeys = new HashSet<RuleKey>();\n    Set<String> projectKeys = new HashSet<String>();\n    Set<String> componentKeys = new HashSet<String>();\n    Set<String> actionPlanKeys = new HashSet<String>();\n    List<String> userLogins = new ArrayList<String>();\n\n    for (Issue issue : result.getHits()) {\n      ruleKeys.add(issue.ruleKey());\n      projectKeys.add(issue.projectKey());\n      componentKeys.add(issue.componentKey());\n      actionPlanKeys.add(issue.actionPlanKey());\n      userLogins.add(issue.authorLogin());\n    }\n\n    writeRules(json, !request.mandatoryParamAsBoolean(IssueFilterParameters.HIDE_RULES) ? ruleService.getByKeys(ruleKeys) : Collections.<Rule>emptyList());\n    writeUsers(json, userFinder.findByLogins(userLogins));\n    writeActionPlans(json, actionPlanService.findByKeys(actionPlanKeys));\n\n    DbSession session = dbClient.openSession(false);\n    try {\n      List<ComponentDto> componentDtos = dbClient.componentDao().getByKeys(session, componentKeys);\n      List<ComponentDto> projectDtos = dbClient.componentDao().getByKeys(session, projectKeys);\n      componentDtos.addAll(projectDtos);\n      writeProjects(json, projectDtos);\n      writeComponents(json, componentDtos);\n    } finally {\n      session.close();\n    }\n\n    // TODO remove legacy paging. Handled by the SearchRequestHandler\n    writeLegacyPaging(context, json, result);\n  }","id":53533,"modified_method":"@Override\n  protected void doContextResponse(Request request, QueryContext context, Result<Issue> result, JsonWriter json) {\n    List<String> issueKeys = newArrayList();\n    Set<RuleKey> ruleKeys = newHashSet();\n    Set<String> projectKeys = newHashSet();\n    Set<String> componentKeys = newHashSet();\n    Set<String> actionPlanKeys = newHashSet();\n    List<String> userLogins = newArrayList();\n    Map<String, User> usersByLogin = newHashMap();\n    Multimap<String, DefaultIssueComment> commentsByIssues = ArrayListMultimap.create();\n\n    for (Issue issue : result.getHits()) {\n      issueKeys.add(issue.key());\n      ruleKeys.add(issue.ruleKey());\n      projectKeys.add(issue.projectKey());\n      componentKeys.add(issue.componentKey());\n      actionPlanKeys.add(issue.actionPlanKey());\n      if (issue.reporter() != null) {\n        userLogins.add(issue.reporter());\n      }\n      if (issue.assignee() != null) {\n        userLogins.add(issue.assignee());\n      }\n    }\n\n    DbSession session = dbClient.openSession(false);\n    try {\n      List<DefaultIssueComment> comments = issueChangeDao.selectCommentsByIssues(session, issueKeys);\n      for (DefaultIssueComment issueComment : comments) {\n        userLogins.add(issueComment.userLogin());\n        commentsByIssues.put(issueComment.issueKey(), issueComment);\n      }\n      usersByLogin = getUsersByLogin(session, userLogins);\n\n      List<ComponentDto> componentDtos = dbClient.componentDao().getByKeys(session, componentKeys);\n      List<ComponentDto> projectDtos = dbClient.componentDao().getByKeys(session, projectKeys);\n\n      componentDtos.addAll(projectDtos);\n      writeProjects(json, projectDtos);\n      writeComponents(json, componentDtos);\n    } finally {\n      session.close();\n    }\n\n    Map<String, ActionPlan> actionPlanByKeys = getActionPlanByKeys(actionPlanKeys);\n\n    writeIssues(result, commentsByIssues, usersByLogin, actionPlanByKeys, request.paramAsStrings(EXTRA_FIELDS_PARAM), json);\n    writeRules(json, !request.mandatoryParamAsBoolean(IssueFilterParameters.HIDE_RULES) ? ruleService.getByKeys(ruleKeys) : Collections.<Rule>emptyList());\n    writeUsers(json, usersByLogin);\n    writeActionPlans(json, actionPlanByKeys.values());\n\n    // TODO remove legacy paging. Handled by the SearchRequestHandler\n    writeLegacyPaging(context, json, result);\n  }","commit_id":"f76df3e934c7b76141c58f24ac3303ae358cdcf4","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public SearchAction(IssueService service, IssueActionsWriter actionsWriter, RuleService ruleService, DbClient dbClient,\n    ActionPlanService actionPlanService, UserFinder userFinder, I18n i18n, Durations durations) {\n    super(SEARCH_ACTION);\n    this.service = service;\n    this.actionsWriter = actionsWriter;\n    this.ruleService = ruleService;\n    this.dbClient = dbClient;\n    this.actionPlanService = actionPlanService;\n    this.userFinder = userFinder;\n    this.i18n = i18n;\n    this.durations = durations;\n  }","id":53534,"modified_method":"public SearchAction(DbClient dbClient, IssueChangeDao issueChangeDao, IssueService service, IssueActionsWriter actionsWriter, RuleService ruleService,\n    ActionPlanService actionPlanService, UserFinder userFinder, I18n i18n, Durations durations) {\n    super(SEARCH_ACTION);\n    this.dbClient = dbClient;\n    this.issueChangeDao = issueChangeDao;\n    this.service = service;\n    this.actionsWriter = actionsWriter;\n    this.ruleService = ruleService;\n    this.actionPlanService = actionPlanService;\n    this.userFinder = userFinder;\n    this.i18n = i18n;\n    this.durations = durations;\n  }","commit_id":"f76df3e934c7b76141c58f24ac3303ae358cdcf4","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void writeIssues(Result<Issue> result, @Nullable List<String> extraFields, JsonWriter json) {\n    json.name(\"issues\").beginArray();\n\n    for (Issue issue : result.getHits()) {\n      json.beginObject();\n\n      String actionPlanKey = issue.actionPlanKey();\n      Duration debt = issue.debt();\n      Date updateDate = issue.updateDate();\n\n      json\n        .prop(\"key\", issue.key())\n        .prop(\"component\", issue.componentKey())\n        .prop(\"project\", issue.projectKey())\n        .prop(\"rule\", issue.ruleKey().toString())\n        .prop(\"status\", issue.status())\n        .prop(\"resolution\", issue.resolution())\n        .prop(\"severity\", issue.severity())\n        .prop(\"message\", issue.message())\n        .prop(\"line\", issue.line())\n        .prop(\"debt\", debt != null ? durations.encode(debt) : null)\n        .prop(\"reporter\", issue.reporter())\n        .prop(\"assignee\", issue.assignee())\n        .prop(\"author\", issue.authorLogin())\n        .prop(\"actionPlan\", actionPlanKey)\n        .prop(\"creationDate\", isoDate(issue.creationDate()))\n        .prop(\"updateDate\", isoDate(updateDate))\n        // TODO Remove as part of Front-end rework on Issue Domain\n        .prop(\"fUpdateAge\", formatAgeDate(updateDate))\n        .prop(\"closeDate\", isoDate(issue.closeDate()));\n\n      // TODO add comments\n      // writeIssueComments(result, issue, json);\n      writeIssueAttributes(issue, json);\n      // TODO Add fields\n      // writeIssueExtraFields(result, issue, extraFields, json);\n      json.endObject();\n    }\n\n    json.endArray();\n  }","id":53535,"modified_method":"private void writeIssues(Result<Issue> result, Multimap<String, DefaultIssueComment> commentsByIssues, Map<String, User> usersByLogin, Map<String, ActionPlan> actionPlanByKeys,\n                           @Nullable List<String> extraFields, JsonWriter json) {\n    json.name(\"issues\").beginArray();\n\n    for (Issue issue : result.getHits()) {\n      json.beginObject();\n\n      String actionPlanKey = issue.actionPlanKey();\n      Duration debt = issue.debt();\n      Date updateDate = issue.updateDate();\n\n      json\n        .prop(\"key\", issue.key())\n        .prop(\"component\", issue.componentKey())\n        .prop(\"project\", issue.projectKey())\n        .prop(\"rule\", issue.ruleKey().toString())\n        .prop(\"status\", issue.status())\n        .prop(\"resolution\", issue.resolution())\n        .prop(\"severity\", issue.severity())\n        .prop(\"message\", issue.message())\n        .prop(\"line\", issue.line())\n        .prop(\"debt\", debt != null ? durations.encode(debt) : null)\n        .prop(\"reporter\", issue.reporter())\n        .prop(\"assignee\", issue.assignee())\n        .prop(\"author\", issue.authorLogin())\n        .prop(\"actionPlan\", actionPlanKey)\n        .prop(\"creationDate\", isoDate(issue.creationDate()))\n        .prop(\"updateDate\", isoDate(updateDate))\n        // TODO Remove as part of Front-end rework on Issue Domain\n        .prop(\"fUpdateAge\", formatAgeDate(updateDate))\n        .prop(\"closeDate\", isoDate(issue.closeDate()));\n\n      writeIssueComments(commentsByIssues.get(issue.key()), usersByLogin, json);\n      writeIssueAttributes(issue, json);\n      writeIssueExtraFields(issue, usersByLogin, actionPlanByKeys, extraFields, json);\n      json.endObject();\n    }\n\n    json.endArray();\n  }","commit_id":"f76df3e934c7b76141c58f24ac3303ae358cdcf4","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Before\n  public void setUp() throws Exception {\n    tester.clearDbAndIndexes();\n    db = tester.get(DbClient.class);\n    ws = tester.get(IssuesWs.class);\n    wsTester = tester.get(WsTester.class);\n    session = db.openSession(false);\n\n    rule = RuleTesting.newXooX1()\n      .setName(\"Rule name\")\n      .setDescription(\"Rule desc\")\n      .setStatus(RuleStatus.READY);\n    tester.get(RuleDao.class).insert(session, rule);\n\n    project = new ComponentDto()\n      .setId(1L)\n      .setKey(\"MyProject\")\n      .setProjectId(1L);\n    db.componentDao().insert(session, project);\n    db.snapshotDao().insert(session, SnapshotTesting.createForComponent(project));\n\n    // project can be seen by anyone\n    tester.get(PermissionFacade.class).insertGroupPermission(project.getId(), DefaultGroups.ANYONE, UserRole.USER, session);\n    db.issueAuthorizationDao().synchronizeAfter(session, new Date(0));\n\n    file = new ComponentDto()\n      .setProjectId(1L)\n      .setKey(\"MyComponent\")\n      .setId(2L);\n    db.componentDao().insert(session, file);\n    db.snapshotDao().insert(session, SnapshotTesting.createForComponent(file));\n\n    UserDto john = new UserDto().setLogin(\"john\").setName(\"John\").setEmail(\"john@email.com\").setActive(true);\n    db.userDao().insert(session, john);\n\n    session.commit();\n\n    MockUserSession.set().setLogin(\"gandalf\");\n  }","id":53536,"modified_method":"@Before\n  public void setUp() throws Exception {\n    tester.clearDbAndIndexes();\n    db = tester.get(DbClient.class);\n    ws = tester.get(IssuesWs.class);\n    wsTester = tester.get(WsTester.class);\n    session = db.openSession(false);\n\n    rule = RuleTesting.newXooX1()\n      .setName(\"Rule name\")\n      .setDescription(\"Rule desc\")\n      .setStatus(RuleStatus.READY);\n    tester.get(RuleDao.class).insert(session, rule);\n\n    project = new ComponentDto()\n      .setKey(\"MyProject\");\n    db.componentDao().insert(session, project);\n    db.snapshotDao().insert(session, SnapshotTesting.createForComponent(project));\n\n    // project can be seen by anyone\n    tester.get(PermissionFacade.class).insertGroupPermission(project.getId(), DefaultGroups.ANYONE, UserRole.USER, session);\n    db.issueAuthorizationDao().synchronizeAfter(session, new Date(0));\n\n    file = new ComponentDto()\n      .setKey(\"MyComponent\")\n      .setProjectId(project.getId());\n    db.componentDao().insert(session, file);\n    db.snapshotDao().insert(session, SnapshotTesting.createForComponent(file));\n\n    UserDto john = new UserDto().setLogin(\"john\").setName(\"John\").setEmail(\"john@email.com\");\n    db.userDao().insert(session, john);\n\n    session.commit();\n\n    MockUserSession.set().setLogin(\"john\");\n  }","commit_id":"f76df3e934c7b76141c58f24ac3303ae358cdcf4","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void display_facets() throws Exception {\n    IssueDto issue = IssueTesting.newDto(rule, file, project)\n      .setIssueCreationDate(DateUtils.parseDate(\"2014-09-04\"))\n      .setIssueUpdateDate(DateUtils.parseDate(\"2014-12-04\"))\n      .setRule(rule)\n      .setDebt(10L)\n      .setRootComponent(project)\n      .setComponent(file)\n      .setStatus(\"OPEN\").setResolution(\"OPEN\")\n      .setKee(\"82fd47d4-b650-4037-80bc-7b112bd4eac2\")\n      .setSeverity(\"MAJOR\");\n    db.issueDao().insert(session, issue);\n    session.commit();\n\n    WsTester.TestRequest request = wsTester.newGetRequest(IssuesWs.API_ENDPOINT, SearchAction.SEARCH_ACTION);\n    request.setParam(SearchAction.PARAM_FACETS, \"true\");\n\n    WsTester.Result result = request.execute();\n    result.assertJson(this.getClass(), \"display_facets.json\", false);\n  }","id":53537,"modified_method":"@Test\n  public void display_facets() throws Exception {\n    IssueDto issue = IssueTesting.newDto(rule, file, project)\n      .setIssueCreationDate(DateUtils.parseDate(\"2014-09-04\"))\n      .setIssueUpdateDate(DateUtils.parseDate(\"2014-12-04\"))\n      .setRule(rule)\n      .setDebt(10L)\n      .setRootComponent(project)\n      .setComponent(file)\n      .setStatus(\"OPEN\").setResolution(\"OPEN\")\n      .setKee(\"82fd47d4-b650-4037-80bc-7b112bd4eac2\")\n      .setSeverity(\"MAJOR\");\n    db.issueDao().insert(session, issue);\n    session.commit();\n\n    WsTester.Result result = wsTester.newGetRequest(IssuesWs.API_ENDPOINT, SearchAction.SEARCH_ACTION).setParam(SearchAction.PARAM_FACETS, \"true\").execute();\n    result.assertJson(this.getClass(), \"display_facets.json\", false);\n  }","commit_id":"f76df3e934c7b76141c58f24ac3303ae358cdcf4","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Test\n  public void hide_rules() throws Exception {\n    IssueDto issue = IssueTesting.newDto(rule, file, project)\n      .setIssueCreationDate(DateUtils.parseDate(\"2014-09-04\"))\n      .setIssueUpdateDate(DateUtils.parseDate(\"2014-12-04\"))\n      .setRule(rule)\n      .setDebt(10L)\n      .setRootComponent(project)\n      .setComponent(file)\n      .setStatus(\"OPEN\").setResolution(\"OPEN\")\n      .setKee(\"82fd47d4-b650-4037-80bc-7b112bd4eac2\")\n      .setSeverity(\"MAJOR\");\n    db.issueDao().insert(session, issue);\n    session.commit();\n\n    WsTester.TestRequest request = wsTester.newGetRequest(IssuesWs.API_ENDPOINT, SearchAction.SEARCH_ACTION);\n    request.setParam(IssueFilterParameters.HIDE_RULES, \"true\");\n\n    WsTester.Result result = request.execute();\n    result.assertJson(this.getClass(), \"hide_rules.json\", false);\n  }","id":53538,"modified_method":"@Test\n  public void hide_rules() throws Exception {\n    IssueDto issue = IssueTesting.newDto(rule, file, project)\n      .setIssueCreationDate(DateUtils.parseDate(\"2014-09-04\"))\n      .setIssueUpdateDate(DateUtils.parseDate(\"2014-12-04\"))\n      .setRule(rule)\n      .setDebt(10L)\n      .setRootComponent(project)\n      .setComponent(file)\n      .setStatus(\"OPEN\").setResolution(\"OPEN\")\n      .setKee(\"82fd47d4-b650-4037-80bc-7b112bd4eac2\")\n      .setSeverity(\"MAJOR\");\n    db.issueDao().insert(session, issue);\n    session.commit();\n\n    WsTester.Result result = wsTester.newGetRequest(IssuesWs.API_ENDPOINT, SearchAction.SEARCH_ACTION).setParam(IssueFilterParameters.HIDE_RULES, \"true\").execute();\n    result.assertJson(this.getClass(), \"hide_rules.json\", false);\n  }","commit_id":"f76df3e934c7b76141c58f24ac3303ae358cdcf4","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n  public final void handle(Request request, Response response) throws Exception {\n    QueryContext context = getQueryContext(request);\n    QUERY query = doQuery(request);\n    Result<DOMAIN> result = doSearch(query, context);\n\n    JsonWriter json = response.newJsonWriter().beginObject();\n    this.writeStatistics(json, result, context);\n    doResultResponse(request, context, result, json);\n    doContextResponse(request, context, result, json);\n    if (context.isFacet()) {\n      writeFacets(result, json);\n    }\n    json.endObject().close();\n  }","id":53539,"modified_method":"@Override\n  public final void handle(Request request, Response response) throws Exception {\n    QueryContext context = getQueryContext(request);\n    QUERY query = doQuery(request);\n    Result<DOMAIN> result = doSearch(query, context);\n\n    JsonWriter json = response.newJsonWriter().beginObject();\n    this.writeStatistics(json, result, context);\n    doContextResponse(request, context, result, json);\n    if (context.isFacet()) {\n      writeFacets(result, json);\n    }\n    json.endObject().close();\n  }","commit_id":"f76df3e934c7b76141c58f24ac3303ae358cdcf4","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"@Override\n    public NicSecondaryIp allocateSecondaryGuestIP (Account ipOwner, long zoneId, Long nicId, Long networkId, String requestedIp) throws InsufficientAddressCapacityException {\n\n        Long accountId = null;\n        Long domainId = null;\n        Long vmId = null;\n        String ipaddr = null;\n\n        if (networkId == null) {\n            throw new InvalidParameterValueException(\"Invalid network id is given\");\n        }\n\n        Network network = _networksDao.findById(networkId);\n        if (network == null) {\n            throw new InvalidParameterValueException(\"Invalid network id is given\");\n        }\n        accountId = network.getAccountId();\n        domainId = network.getDomainId();\n\n        // Validate network offering\n        NetworkOfferingVO ntwkOff = _networkOfferingDao.findById(network.getNetworkOfferingId());\n\n        // verify permissions\n        _accountMgr.checkAccess(ipOwner, null, true, network);\n\n        //check whether the nic belongs to user vm.\n        NicVO nicVO = _nicDao.findById(nicId);\n        if (nicVO == null) {\n            throw new InvalidParameterValueException(\"There is no nic for the \" + nicId);\n        }\n\n        if (nicVO.getVmType() != VirtualMachine.Type.User) {\n            throw new InvalidParameterValueException(\"The nic is not belongs to user vm\");\n        }\n\n        DataCenter dc = _dcDao.findById(network.getDataCenterId());\n        Long id = nicVO.getInstanceId();\n\n        DataCenter zone = _configMgr.getZone(zoneId);\n        if (zone == null) {\n            throw new InvalidParameterValueException(\"Invalid zone Id is given\");\n        }\n\n        s_logger.debug(\"Calling the ip allocation ...\");\n        if (dc.getNetworkType() == NetworkType.Advanced && network.getGuestType() == Network.GuestType.Isolated) {\n            try {\n                ipaddr = _networkMgr.allocateGuestIP(ipOwner, false,  zoneId, networkId, requestedIp);\n            } catch (InsufficientAddressCapacityException e) {\n                throw new InvalidParameterValueException(\"Allocating guest ip for nic failed\");\n            }\n        } else if (dc.getNetworkType() == NetworkType.Basic || ntwkOff.getGuestType()  == Network.GuestType.Shared) {\n            Account caller = UserContext.current().getCaller();\n            long callerUserId = UserContext.current().getCallerUserId();\n            _accountMgr.checkAccess(caller, SecurityChecker.AccessType.UseNetwork, false, network);\n            //handle the basic networks here\n            VirtualMachine vm = _userVmDao.findById(nicVO.getInstanceId());\n            if (vm == null) {\n                throw new InvalidParameterValueException(\"There is no vm with the nic\");\n            }\n            VMInstanceVO vmi = (VMInstanceVO)vm;\n            Long podId = vmi.getPodIdToDeployIn();\n            if (podId == null) {\n                throw new InvalidParameterValueException(\"vm pod id is null\");\n            }\n            Pod pod = _hostPodDao.findById(podId);\n            if (pod == null) {\n                throw new InvalidParameterValueException(\"vm pod is null\");\n            }\n\n            try {\n                ipaddr = _networkMgr.allocatePublicIpForGuestNic(networkId, dc, pod, caller, requestedIp);\n                if (ipaddr == null) {\n                    throw new InvalidParameterValueException(\"Allocating ip to guest nic \" + nicId + \" failed\");\n                }\n            } catch (InsufficientAddressCapacityException e) {\n                s_logger.error(\"Allocating ip to guest nic \" + nicId + \" failed\");\n                return null;\n            }\n        } else {\n            s_logger.error(\"AddIpToVMNic is not supported in this network...\");\n            return null;\n        }\n\n        NicSecondaryIpVO secondaryIpVO;\n        if (ipaddr != null) {\n            // we got the ip addr so up the nics table and secodary ip\n            Transaction txn = Transaction.currentTxn();\n            txn.start();\n\n            boolean nicSecondaryIpSet = nicVO.getSecondaryIp();\n            if (!nicSecondaryIpSet) {\n                nicVO.setSecondaryIp(true);\n                // commit when previously set ??\n                s_logger.debug(\"Setting nics table ...\");\n                _nicDao.update(nicId, nicVO);\n            }\n\n            s_logger.debug(\"Setting nic_secondary_ip table ...\");\n            vmId = nicVO.getInstanceId();\n            secondaryIpVO = new NicSecondaryIpVO(nicId, ipaddr, vmId, accountId, domainId, networkId);\n            _nicSecondaryIpDao.persist(secondaryIpVO);\n            txn.commit();\n           return  getNicSecondaryIp(secondaryIpVO.getId());\n        } else {\n            return null;\n        }\n    }","id":53540,"modified_method":"@Override\n    public NicSecondaryIp allocateSecondaryGuestIP (Account ipOwner, long zoneId, Long nicId, Long networkId, String requestedIp) throws InsufficientAddressCapacityException {\n\n        Long accountId = null;\n        Long domainId = null;\n        Long vmId = null;\n        String ipaddr = null;\n\n        if (networkId == null) {\n            throw new InvalidParameterValueException(\"Invalid network id is given\");\n        }\n\n        Account caller = UserContext.current().getCaller();\n\n        //check whether the nic belongs to user vm.\n        NicVO nicVO = _nicDao.findById(nicId);\n        if (nicVO == null) {\n            throw new InvalidParameterValueException(\"There is no nic for the \" + nicId);\n        }\n\n        if (nicVO.getVmType() != VirtualMachine.Type.User) {\n            throw new InvalidParameterValueException(\"The nic is not belongs to user vm\");\n        }\n\n        Nic nic = _nicDao.findById(nicId);\n        VirtualMachine vm = _userVmDao.findById(nicVO.getInstanceId());\n        if (vm == null) {\n            throw new InvalidParameterValueException(\"There is no vm with the nic\");\n        }\n        // verify permissions\n        _accountMgr.checkAccess(ipOwner, null, true, vm);\n\n\n        Network network = _networksDao.findById(networkId);\n        if (network == null) {\n            throw new InvalidParameterValueException(\"Invalid network id is given\");\n        }\n        accountId = network.getAccountId();\n        domainId = network.getDomainId();\n\n        // Validate network offering\n        NetworkOfferingVO ntwkOff = _networkOfferingDao.findById(network.getNetworkOfferingId());\n\n        DataCenter dc = _dcDao.findById(network.getDataCenterId());\n        Long id = nicVO.getInstanceId();\n\n        DataCenter zone = _configMgr.getZone(zoneId);\n        if (zone == null) {\n            throw new InvalidParameterValueException(\"Invalid zone Id is given\");\n        }\n\n        s_logger.debug(\"Calling the ip allocation ...\");\n        if (dc.getNetworkType() == NetworkType.Advanced && network.getGuestType() == Network.GuestType.Isolated) {\n            try {\n                ipaddr = _networkMgr.allocateGuestIP(ipOwner, false,  zoneId, networkId, requestedIp);\n            } catch (InsufficientAddressCapacityException e) {\n                throw new InvalidParameterValueException(\"Allocating guest ip for nic failed\");\n            }\n        } else if (dc.getNetworkType() == NetworkType.Basic || ntwkOff.getGuestType()  == Network.GuestType.Shared) {\n            //handle the basic networks here\n            VMInstanceVO vmi = (VMInstanceVO)vm;\n            Long podId = vmi.getPodIdToDeployIn();\n            if (podId == null) {\n                throw new InvalidParameterValueException(\"vm pod id is null\");\n            }\n            Pod pod = _hostPodDao.findById(podId);\n            if (pod == null) {\n                throw new InvalidParameterValueException(\"vm pod is null\");\n            }\n\n            try {\n                ipaddr = _networkMgr.allocatePublicIpForGuestNic(networkId, dc, pod, caller, requestedIp);\n                if (ipaddr == null) {\n                    throw new InvalidParameterValueException(\"Allocating ip to guest nic \" + nicId + \" failed\");\n                }\n            } catch (InsufficientAddressCapacityException e) {\n                s_logger.error(\"Allocating ip to guest nic \" + nicId + \" failed\");\n                return null;\n            }\n        } else {\n            s_logger.error(\"AddIpToVMNic is not supported in this network...\");\n            return null;\n        }\n\n        NicSecondaryIpVO secondaryIpVO;\n        if (ipaddr != null) {\n            // we got the ip addr so up the nics table and secodary ip\n            Transaction txn = Transaction.currentTxn();\n            txn.start();\n\n            boolean nicSecondaryIpSet = nicVO.getSecondaryIp();\n            if (!nicSecondaryIpSet) {\n                nicVO.setSecondaryIp(true);\n                // commit when previously set ??\n                s_logger.debug(\"Setting nics table ...\");\n                _nicDao.update(nicId, nicVO);\n            }\n\n            s_logger.debug(\"Setting nic_secondary_ip table ...\");\n            vmId = nicVO.getInstanceId();\n            secondaryIpVO = new NicSecondaryIpVO(nicId, ipaddr, vmId, accountId, domainId, networkId);\n            _nicSecondaryIpDao.persist(secondaryIpVO);\n            txn.commit();\n           return  getNicSecondaryIp(secondaryIpVO.getId());\n        } else {\n            return null;\n        }\n    }","commit_id":"56e8da7890268aedf4187b66cfbaeba477591435","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    @DB\n    public boolean releaseSecondaryIpFromNic (long ipAddressId) {\n        Account caller = UserContext.current().getCaller();\n        boolean success = false;\n\n        // Verify input parameters\n        NicSecondaryIpVO secIpVO= _nicSecondaryIpDao.findById(ipAddressId);\n        if (secIpVO == null) {\n            throw new InvalidParameterValueException(\"Unable to find ip address by id\");\n        }\n\n        Network network = _networksDao.findById(secIpVO.getNetworkId());\n\n        if (network == null) {\n            throw new InvalidParameterValueException(\"Invalid network id is given\");\n        }\n\n        // Validate network offering\n        NetworkOfferingVO ntwkOff = _networkOfferingDao.findById(network.getNetworkOfferingId());\n\n        // verify permissions\n        _accountMgr.checkAccess(caller, null, true, network);\n\n        Long nicId = secIpVO.getNicId();\n        s_logger.debug(\"ip id = \" + ipAddressId + \" nic id = \" + nicId);\n        //check is this the last secondary ip for NIC\n        List<NicSecondaryIpVO> ipList = _nicSecondaryIpDao.listByNicId(nicId);\n        boolean lastIp = false;\n        if (ipList.size() == 1) {\n            // this is the last secondary ip to nic\n            lastIp = true;\n        }\n\n        DataCenter dc = _dcDao.findById(network.getDataCenterId());\n        if (dc == null) {\n            throw new InvalidParameterValueException(\"Invalid zone Id is given\");\n        }\n\n        s_logger.debug(\"Calling the ip allocation ...\");\n        if (dc.getNetworkType() == NetworkType.Advanced && network.getGuestType() == Network.GuestType.Isolated) {\n            //check PF or static NAT is configured on this ip address\n            String secondaryIp = secIpVO.getIp4Address();\n            List<PortForwardingRuleVO> pfRuleList = _portForwardingDao.listByDestIpAddr(secondaryIp);\n            if (pfRuleList.size() != 0) {\n                s_logger.debug(\"VM nic IP \" + secondaryIp + \" is associated with the port forwarding rule\");\n                throw new InvalidParameterValueException(\"Can't remove the secondary ip \" + secondaryIp + \" is associate with the port forwarding rule\");\n            }\n            //check if the secondary ip associated with any static nat rule\n            IPAddressVO publicIpVO = _ipAddressDao.findByVmIp(secondaryIp);\n            if (publicIpVO != null) {\n                s_logger.debug(\"VM nic IP \" + secondaryIp + \" is associated with the static NAT rule public IP address id \" + publicIpVO.getId());\n                throw new InvalidParameterValueException(\"Can' remove the ip \" + secondaryIp + \"is associate with static NAT rule public IP address id \" + publicIpVO.getId());\n            }\n        } else if (dc.getNetworkType() == NetworkType.Basic || ntwkOff.getGuestType()  == Network.GuestType.Shared) {\n            IPAddressVO ip = _ipAddressDao.findByIpAndNetworkId(secIpVO.getNetworkId(), secIpVO.getIp4Address());\n            if (ip != null) {\n                Transaction txn = Transaction.currentTxn();\n                txn.start();\n                _networkMgr.markIpAsUnavailable(ip.getId());\n                _ipAddressDao.unassignIpAddress(ip.getId());\n                txn.commit();\n            }\n        } else {\n            throw new InvalidParameterValueException(\"Not supported for this network now\");\n        }\n\n        success = removeNicSecondaryIP(secIpVO, lastIp);\n        return success;\n    }","id":53541,"modified_method":"@Override\n    @DB\n    public boolean releaseSecondaryIpFromNic (long ipAddressId) {\n        Account caller = UserContext.current().getCaller();\n        boolean success = false;\n\n        // Verify input parameters\n        NicSecondaryIpVO secIpVO= _nicSecondaryIpDao.findById(ipAddressId);\n        if (secIpVO == null) {\n            throw new InvalidParameterValueException(\"Unable to find ip address by id\");\n        }\n\n        VirtualMachine vm = _userVmDao.findById(secIpVO.getVmId());\n        if (vm == null) {\n            throw new InvalidParameterValueException(\"There is no vm with the nic\");\n        }\n        // verify permissions\n        _accountMgr.checkAccess(caller, null, true, vm);\n\n        Network network = _networksDao.findById(secIpVO.getNetworkId());\n\n        if (network == null) {\n            throw new InvalidParameterValueException(\"Invalid network id is given\");\n        }\n\n        // Validate network offering\n        NetworkOfferingVO ntwkOff = _networkOfferingDao.findById(network.getNetworkOfferingId());\n\n        Long nicId = secIpVO.getNicId();\n        s_logger.debug(\"ip id = \" + ipAddressId + \" nic id = \" + nicId);\n        //check is this the last secondary ip for NIC\n        List<NicSecondaryIpVO> ipList = _nicSecondaryIpDao.listByNicId(nicId);\n        boolean lastIp = false;\n        if (ipList.size() == 1) {\n            // this is the last secondary ip to nic\n            lastIp = true;\n        }\n\n        DataCenter dc = _dcDao.findById(network.getDataCenterId());\n        if (dc == null) {\n            throw new InvalidParameterValueException(\"Invalid zone Id is given\");\n        }\n\n        s_logger.debug(\"Calling the ip allocation ...\");\n        if (dc.getNetworkType() == NetworkType.Advanced && network.getGuestType() == Network.GuestType.Isolated) {\n            //check PF or static NAT is configured on this ip address\n            String secondaryIp = secIpVO.getIp4Address();\n            List<PortForwardingRuleVO> pfRuleList = _portForwardingDao.listByDestIpAddr(secondaryIp);\n            if (pfRuleList.size() != 0) {\n                s_logger.debug(\"VM nic IP \" + secondaryIp + \" is associated with the port forwarding rule\");\n                throw new InvalidParameterValueException(\"Can't remove the secondary ip \" + secondaryIp + \" is associate with the port forwarding rule\");\n            }\n            //check if the secondary ip associated with any static nat rule\n            IPAddressVO publicIpVO = _ipAddressDao.findByVmIp(secondaryIp);\n            if (publicIpVO != null) {\n                s_logger.debug(\"VM nic IP \" + secondaryIp + \" is associated with the static NAT rule public IP address id \" + publicIpVO.getId());\n                throw new InvalidParameterValueException(\"Can' remove the ip \" + secondaryIp + \"is associate with static NAT rule public IP address id \" + publicIpVO.getId());\n            }\n        } else if (dc.getNetworkType() == NetworkType.Basic || ntwkOff.getGuestType()  == Network.GuestType.Shared) {\n            IPAddressVO ip = _ipAddressDao.findByIpAndNetworkId(secIpVO.getNetworkId(), secIpVO.getIp4Address());\n            if (ip != null) {\n                Transaction txn = Transaction.currentTxn();\n                txn.start();\n                _networkMgr.markIpAsUnavailable(ip.getId());\n                _ipAddressDao.unassignIpAddress(ip.getId());\n                txn.commit();\n            }\n        } else {\n            throw new InvalidParameterValueException(\"Not supported for this network now\");\n        }\n\n        success = removeNicSecondaryIP(secIpVO, lastIp);\n        return success;\n    }","commit_id":"56e8da7890268aedf4187b66cfbaeba477591435","url":"https://github.com/apache/cloudstack"},{"original_method":"/**\n     * {@inheritDoc}\n     */\n    public boolean checkAccess(String action, XWikiDocument doc, XWikiContext context) throws XWikiException\n    {\n        Right right = actionToRight(action);\n\n        if (right == LOGIN) {\n            return handleLogin(doc, context);\n        }\n\n        DocumentReference document = doc.getDocumentReference();\n        DocumentReference user = authenticateUser(right, doc, context);\n        if (user == null) {\n            return false;\n        }\n\n        return checkAccess(right, user, document, context);\n    }","id":53542,"modified_method":"/**\n     * {@inheritDoc}\n     */\n    public boolean checkAccess(String action, XWikiDocument doc, XWikiContext context) throws XWikiException\n    {\n        Right right = actionToRight(action);\n\n        DocumentReference document = doc.getDocumentReference();\n        DocumentReference user = authenticateUser(right, doc, context);\n\n        boolean allow = false;\n\n        if (user != null) {\n            allow = checkAccess(right, user, document, context);\n        }\n\n        if (!allow && (user == null || userIsGuest(user))) {\n            showLogin(context);\n        }\n\n        return allow;\n    }","commit_id":"32a415a6bd943f94a3f68ec523cb49ed90af33ce","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * @param right Right to authenticate.\n     * @param doc Document that is being accessed.\n     * @param context The current context\n     * @return a {@link DocumentReference} that uniquely identifies\n     * the user, if the authentication was successful.  {@code null}\n     * on failure.\n     */\n    private DocumentReference authenticateUser(Right right, XWikiDocument doc, XWikiContext context)\n    {\n        XWikiUser user = context.getXWikiUser();\n        boolean needsAuth;\n        if (user == null) {\n            needsAuth = needsAuth(right, context);\n            try {\n\n                if (context.getMode() != XWikiContext.MODE_XMLRPC) {\n                    user = context.getWiki().checkAuth(context);\n                } else {\n                    user = new XWikiUser(RightService.GUEST_USER_FULLNAME);\n                }\n\n                if ((user == null) && (needsAuth)) {\n                    logDeny(null, doc.getDocumentReference(), right, \"Authentication needed\");\n                    if (context.getRequest() != null\n                        && !context.getWiki().Param(\"xwiki.hidelogin\", \"false\").equalsIgnoreCase(\"true\")) {\n                        context.getWiki().getAuthService().showLogin(context);\n                    }\n\n                    return null;\n                }\n            } catch (XWikiException e) {\n                LOG.error(\"Caught exception while authenticating user.\", e);\n                return null;\n            }\n\n            String username;\n            if (user == null) {\n                username = RightService.GUEST_USER_FULLNAME;\n            } else {\n                username = user.getUser();\n            }\n            context.setUser(username);\n            return resolveUserName(username, context.getDatabase());\n        } else {\n            return resolveUserName(user.getUser(), context.getDatabase());\n        }\n\n    }","id":53543,"modified_method":"/**\n     * @param right Right to authenticate.\n     * @param doc Document that is being accessed.\n     * @param context The current context\n     * @return a {@link DocumentReference} that uniquely identifies\n     * the user, if the authentication was successful.  {@code null}\n     * on failure.\n     */\n    private DocumentReference authenticateUser(Right right, XWikiDocument doc, XWikiContext context)\n    {\n        XWikiUser user = context.getXWikiUser();\n        boolean needsAuth;\n        if (user == null) {\n            needsAuth = needsAuth(right, context);\n            try {\n\n                if (context.getMode() != XWikiContext.MODE_XMLRPC) {\n                    user = context.getWiki().checkAuth(context);\n                } else {\n                    user = new XWikiUser(RightService.GUEST_USER_FULLNAME);\n                }\n\n                if ((user == null) && (needsAuth)) {\n                    logDeny(null, doc.getDocumentReference(), right, \"Authentication needed\");\n                    return null;\n                }\n            } catch (XWikiException e) {\n                LOG.error(\"Caught exception while authenticating user.\", e);\n                return null;\n            }\n\n            String username;\n            if (user == null) {\n                username = RightService.GUEST_USER_FULLNAME;\n            } else {\n                username = user.getUser();\n            }\n            context.setUser(username);\n            return resolveUserName(username, context.getDatabase());\n        } else {\n            return resolveUserName(user.getUser(), context.getDatabase());\n        }\n\n    }","commit_id":"32a415a6bd943f94a3f68ec523cb49ed90af33ce","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Describe <code>handleLogin<\/code> method here.\n     *\n     * @param doc a <code>XWikiDocument<\/code> value\n     * @param context a <code>XWikiContext<\/code> value\n     * @return a <code>boolean<\/code> value\n     * @exception XWikiException if an error occurs\n     */\n    private boolean handleLogin(XWikiDocument doc, XWikiContext context) throws XWikiException {\n        XWikiUser user = context.getWiki().checkAuth(context);\n        String username;\n\n        if (user == null) {\n            username = RightService.GUEST_USER_FULLNAME;\n        } else {\n            username = user.getUser();\n        }\n\n        // Save the user\n        context.setUser(username);\n        logAllow(getUserReference(context), doc.getDocumentReference(), LOGIN, \"login/logout pages\");\n\n        return true;\n    }","id":53544,"modified_method":"/**\n     * Show the login page, unless the wiki is configured otherwise.\n     * @param context the context\n     */\n    private void showLogin(XWikiContext context)\n    {\n        try {\n            if (context.getRequest() != null\n                && !context.getWiki().Param(\"xwiki.hidelogin\", \"false\").equalsIgnoreCase(\"true\")) {\n                context.getWiki().getAuthService().showLogin(context);\n            }\n        } catch (XWikiException e) {\n            LOG.error(\"Failed to show login page.\", e);\n        }\n    }","commit_id":"32a415a6bd943f94a3f68ec523cb49ed90af33ce","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n   * check for job access.\n   * @param job the job that is being accessed\n   * @return True if the requesting user has permission to view the job\n   */\n  boolean checkAccess(Job job) {\n    UserGroupInformation callerUgi = UserGroupInformation.createRemoteUser(\n        request().getRemoteUser());\n    return job.checkAccess(callerUgi, JobACL.VIEW_JOB);\n  }","id":53545,"modified_method":"/**\n   * check for job access.\n   * @param job the job that is being accessed\n   * @return True if the requesting user has permission to view the job\n   */\n  boolean checkAccess(Job job) {\n    String remoteUser = request().getRemoteUser();\n    UserGroupInformation callerUGI = null;\n    if (remoteUser != null) {\n      callerUGI = UserGroupInformation.createRemoteUser(remoteUser);\n    }\n    if (callerUGI != null && !job.checkAccess(callerUGI, JobACL.VIEW_JOB)) {\n      return false;\n    }\n    return true;\n  }","commit_id":"81f5c5933d49661b98fd392262e37f4b8aec2cea","url":"https://github.com/apache/hadoop"},{"original_method":"@Override\n    @DB\n    public boolean releaseSecondaryIpFromNic (long ipAddressId) {\n        Account caller = UserContext.current().getCaller();\n        boolean success = false;\n\n        // Verify input parameters\n        NicSecondaryIpVO secIpVO= _nicSecondaryIpDao.findById(ipAddressId);\n        if (secIpVO == null) {\n            throw new InvalidParameterValueException(\"Unable to find ip address by id\");\n        }\n\n        Network network = _networksDao.findById(secIpVO.getNetworkId());\n\n        if (network == null) {\n            throw new InvalidParameterValueException(\"Invalid network id is given\");\n        }\n\n        // Validate network offering\n        NetworkOfferingVO ntwkOff = _networkOfferingDao.findById(network.getNetworkOfferingId());\n\n        // verify permissions\n        _accountMgr.checkAccess(caller, null, true, network);\n\n        Long nicId = secIpVO.getNicId();\n        s_logger.debug(\"ip id = \" + ipAddressId + \" nic id = \" + nicId);\n        //check is this the last secondary ip for NIC\n        List<NicSecondaryIpVO> ipList = _nicSecondaryIpDao.listByNicId(nicId);\n        boolean lastIp = false;\n        if (ipList.size() == 1) {\n            // this is the last secondary ip to nic\n            lastIp = true;\n        }\n\n        DataCenter dc = _dcDao.findById(network.getDataCenterId());\n        if (dc == null) {\n            throw new InvalidParameterValueException(\"Invalid zone Id is given\");\n        }\n\n        s_logger.debug(\"Calling the ip allocation ...\");\n        if (dc.getNetworkType() == NetworkType.Advanced && network.getGuestType() == Network.GuestType.Isolated) {\n            //check PF or static NAT is configured on this ip address\n            String secondaryIp = secIpVO.getIp4Address();\n            List<PortForwardingRuleVO> pfRuleList = _portForwardingDao.listByDestIpAddr(secondaryIp);\n            if (pfRuleList.size() != 0) {\n                s_logger.debug(\"VM nic IP \" + secondaryIp + \" is associated with the port forwarding rule\");\n                throw new InvalidParameterValueException(\"Can't remove the secondary ip \" + secondaryIp + \" is associate with the port forwarding rule\");\n            }\n            //check if the secondary ip associated with any static nat rule\n            IPAddressVO publicIpVO = _ipAddressDao.findByVmIp(secondaryIp);\n            if (publicIpVO != null) {\n                s_logger.debug(\"VM nic IP \" + secondaryIp + \" is associated with the static NAT rule public IP address id \" + publicIpVO.getId());\n                throw new InvalidParameterValueException(\"Can' remove the ip \" + secondaryIp + \"is associate with static NAT rule public IP address id \" + publicIpVO.getId());\n            }\n        } else if (dc.getNetworkType() == NetworkType.Basic || ntwkOff.getGuestType()  == Network.GuestType.Shared) {\n            IPAddressVO ip = _ipAddressDao.findByIpAndNetworkId(secIpVO.getNetworkId(), secIpVO.getIp4Address());\n            if (ip != null) {\n                Transaction txn = Transaction.currentTxn();\n                txn.start();\n                _networkMgr.markIpAsUnavailable(ip.getId());\n                _ipAddressDao.unassignIpAddress(ip.getId());\n                txn.commit();\n            }\n        } else {\n            throw new InvalidParameterValueException(\"Not supported for this network now\");\n        }\n\n        success = removeNicSecondaryIP(secIpVO, lastIp);\n        return success;\n    }","id":53546,"modified_method":"@Override\n    @DB\n    public boolean releaseSecondaryIpFromNic (long ipAddressId) {\n        Account caller = UserContext.current().getCaller();\n        boolean success = false;\n\n        // Verify input parameters\n        NicSecondaryIpVO secIpVO= _nicSecondaryIpDao.findById(ipAddressId);\n        if (secIpVO == null) {\n            throw new InvalidParameterValueException(\"Unable to find ip address by id\");\n        }\n\n        VirtualMachine vm = _userVmDao.findById(secIpVO.getVmId());\n        if (vm == null) {\n            throw new InvalidParameterValueException(\"There is no vm with the nic\");\n        }\n        // verify permissions\n        _accountMgr.checkAccess(caller, null, true, vm);\n\n        Network network = _networksDao.findById(secIpVO.getNetworkId());\n\n        if (network == null) {\n            throw new InvalidParameterValueException(\"Invalid network id is given\");\n        }\n\n        // Validate network offering\n        NetworkOfferingVO ntwkOff = _networkOfferingDao.findById(network.getNetworkOfferingId());\n\n        Long nicId = secIpVO.getNicId();\n        s_logger.debug(\"ip id = \" + ipAddressId + \" nic id = \" + nicId);\n        //check is this the last secondary ip for NIC\n        List<NicSecondaryIpVO> ipList = _nicSecondaryIpDao.listByNicId(nicId);\n        boolean lastIp = false;\n        if (ipList.size() == 1) {\n            // this is the last secondary ip to nic\n            lastIp = true;\n        }\n\n        DataCenter dc = _dcDao.findById(network.getDataCenterId());\n        if (dc == null) {\n            throw new InvalidParameterValueException(\"Invalid zone Id is given\");\n        }\n\n        s_logger.debug(\"Calling the ip allocation ...\");\n        if (dc.getNetworkType() == NetworkType.Advanced && network.getGuestType() == Network.GuestType.Isolated) {\n            //check PF or static NAT is configured on this ip address\n            String secondaryIp = secIpVO.getIp4Address();\n            List<PortForwardingRuleVO> pfRuleList = _portForwardingDao.listByDestIpAddr(secondaryIp);\n            if (pfRuleList.size() != 0) {\n                s_logger.debug(\"VM nic IP \" + secondaryIp + \" is associated with the port forwarding rule\");\n                throw new InvalidParameterValueException(\"Can't remove the secondary ip \" + secondaryIp + \" is associate with the port forwarding rule\");\n            }\n            //check if the secondary ip associated with any static nat rule\n            IPAddressVO publicIpVO = _ipAddressDao.findByVmIp(secondaryIp);\n            if (publicIpVO != null) {\n                s_logger.debug(\"VM nic IP \" + secondaryIp + \" is associated with the static NAT rule public IP address id \" + publicIpVO.getId());\n                throw new InvalidParameterValueException(\"Can' remove the ip \" + secondaryIp + \"is associate with static NAT rule public IP address id \" + publicIpVO.getId());\n            }\n        } else if (dc.getNetworkType() == NetworkType.Basic || ntwkOff.getGuestType()  == Network.GuestType.Shared) {\n            IPAddressVO ip = _ipAddressDao.findByIpAndNetworkId(secIpVO.getNetworkId(), secIpVO.getIp4Address());\n            if (ip != null) {\n                Transaction txn = Transaction.currentTxn();\n                txn.start();\n                _networkMgr.markIpAsUnavailable(ip.getId());\n                _ipAddressDao.unassignIpAddress(ip.getId());\n                txn.commit();\n            }\n        } else {\n            throw new InvalidParameterValueException(\"Not supported for this network now\");\n        }\n\n        success = removeNicSecondaryIP(secIpVO, lastIp);\n        return success;\n    }","commit_id":"36a312d4b24908cad107c2ae351c2c686890b995","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n    public NicSecondaryIp allocateSecondaryGuestIP (Account ipOwner, long zoneId, Long nicId, Long networkId, String requestedIp) throws InsufficientAddressCapacityException {\n\n        Long accountId = null;\n        Long domainId = null;\n        Long vmId = null;\n        String ipaddr = null;\n\n        if (networkId == null) {\n            throw new InvalidParameterValueException(\"Invalid network id is given\");\n        }\n\n        Network network = _networksDao.findById(networkId);\n        if (network == null) {\n            throw new InvalidParameterValueException(\"Invalid network id is given\");\n        }\n        accountId = network.getAccountId();\n        domainId = network.getDomainId();\n\n        // Validate network offering\n        NetworkOfferingVO ntwkOff = _networkOfferingDao.findById(network.getNetworkOfferingId());\n\n        // verify permissions\n        _accountMgr.checkAccess(ipOwner, null, true, network);\n\n        //check whether the nic belongs to user vm.\n        NicVO nicVO = _nicDao.findById(nicId);\n        if (nicVO == null) {\n            throw new InvalidParameterValueException(\"There is no nic for the \" + nicId);\n        }\n\n        if (nicVO.getVmType() != VirtualMachine.Type.User) {\n            throw new InvalidParameterValueException(\"The nic is not belongs to user vm\");\n        }\n\n        DataCenter dc = _dcDao.findById(network.getDataCenterId());\n        Long id = nicVO.getInstanceId();\n\n        DataCenter zone = _configMgr.getZone(zoneId);\n        if (zone == null) {\n            throw new InvalidParameterValueException(\"Invalid zone Id is given\");\n        }\n\n        s_logger.debug(\"Calling the ip allocation ...\");\n        if (dc.getNetworkType() == NetworkType.Advanced && network.getGuestType() == Network.GuestType.Isolated) {\n            try {\n                ipaddr = _networkMgr.allocateGuestIP(ipOwner, false,  zoneId, networkId, requestedIp);\n            } catch (InsufficientAddressCapacityException e) {\n                throw new InvalidParameterValueException(\"Allocating guest ip for nic failed\");\n            }\n        } else if (dc.getNetworkType() == NetworkType.Basic || ntwkOff.getGuestType()  == Network.GuestType.Shared) {\n            Account caller = UserContext.current().getCaller();\n            long callerUserId = UserContext.current().getCallerUserId();\n            _accountMgr.checkAccess(caller, SecurityChecker.AccessType.UseNetwork, false, network);\n            //handle the basic networks here\n            VirtualMachine vm = _userVmDao.findById(nicVO.getInstanceId());\n            if (vm == null) {\n                throw new InvalidParameterValueException(\"There is no vm with the nic\");\n            }\n            VMInstanceVO vmi = (VMInstanceVO)vm;\n            Long podId = vmi.getPodIdToDeployIn();\n            if (podId == null) {\n                throw new InvalidParameterValueException(\"vm pod id is null\");\n            }\n            Pod pod = _hostPodDao.findById(podId);\n            if (pod == null) {\n                throw new InvalidParameterValueException(\"vm pod is null\");\n            }\n\n            try {\n                ipaddr = _networkMgr.allocatePublicIpForGuestNic(networkId, dc, pod, caller, requestedIp);\n                if (ipaddr == null) {\n                    throw new InvalidParameterValueException(\"Allocating ip to guest nic \" + nicId + \" failed\");\n                }\n            } catch (InsufficientAddressCapacityException e) {\n                s_logger.error(\"Allocating ip to guest nic \" + nicId + \" failed\");\n                return null;\n            }\n        } else {\n            s_logger.error(\"AddIpToVMNic is not supported in this network...\");\n            return null;\n        }\n\n        NicSecondaryIpVO secondaryIpVO;\n        if (ipaddr != null) {\n            // we got the ip addr so up the nics table and secodary ip\n            Transaction txn = Transaction.currentTxn();\n            txn.start();\n\n            boolean nicSecondaryIpSet = nicVO.getSecondaryIp();\n            if (!nicSecondaryIpSet) {\n                nicVO.setSecondaryIp(true);\n                // commit when previously set ??\n                s_logger.debug(\"Setting nics table ...\");\n                _nicDao.update(nicId, nicVO);\n            }\n\n            s_logger.debug(\"Setting nic_secondary_ip table ...\");\n            vmId = nicVO.getInstanceId();\n            secondaryIpVO = new NicSecondaryIpVO(nicId, ipaddr, vmId, accountId, domainId, networkId);\n            _nicSecondaryIpDao.persist(secondaryIpVO);\n            txn.commit();\n           return  getNicSecondaryIp(secondaryIpVO.getId());\n        } else {\n            return null;\n        }\n    }","id":53547,"modified_method":"@Override\n    public NicSecondaryIp allocateSecondaryGuestIP (Account ipOwner, long zoneId, Long nicId, Long networkId, String requestedIp) throws InsufficientAddressCapacityException {\n\n        Long accountId = null;\n        Long domainId = null;\n        Long vmId = null;\n        String ipaddr = null;\n\n        if (networkId == null) {\n            throw new InvalidParameterValueException(\"Invalid network id is given\");\n        }\n\n        Account caller = UserContext.current().getCaller();\n\n        //check whether the nic belongs to user vm.\n        NicVO nicVO = _nicDao.findById(nicId);\n        if (nicVO == null) {\n            throw new InvalidParameterValueException(\"There is no nic for the \" + nicId);\n        }\n\n        if (nicVO.getVmType() != VirtualMachine.Type.User) {\n            throw new InvalidParameterValueException(\"The nic is not belongs to user vm\");\n        }\n\n        Nic nic = _nicDao.findById(nicId);\n        VirtualMachine vm = _userVmDao.findById(nicVO.getInstanceId());\n        if (vm == null) {\n            throw new InvalidParameterValueException(\"There is no vm with the nic\");\n        }\n        // verify permissions\n        _accountMgr.checkAccess(ipOwner, null, true, vm);\n\n\n        Network network = _networksDao.findById(networkId);\n        if (network == null) {\n            throw new InvalidParameterValueException(\"Invalid network id is given\");\n        }\n        accountId = network.getAccountId();\n        domainId = network.getDomainId();\n\n        // Validate network offering\n        NetworkOfferingVO ntwkOff = _networkOfferingDao.findById(network.getNetworkOfferingId());\n\n        DataCenter dc = _dcDao.findById(network.getDataCenterId());\n        Long id = nicVO.getInstanceId();\n\n        DataCenter zone = _configMgr.getZone(zoneId);\n        if (zone == null) {\n            throw new InvalidParameterValueException(\"Invalid zone Id is given\");\n        }\n\n        s_logger.debug(\"Calling the ip allocation ...\");\n        if (dc.getNetworkType() == NetworkType.Advanced && network.getGuestType() == Network.GuestType.Isolated) {\n            try {\n                ipaddr = _networkMgr.allocateGuestIP(ipOwner, false,  zoneId, networkId, requestedIp);\n            } catch (InsufficientAddressCapacityException e) {\n                throw new InvalidParameterValueException(\"Allocating guest ip for nic failed\");\n            }\n        } else if (dc.getNetworkType() == NetworkType.Basic || ntwkOff.getGuestType()  == Network.GuestType.Shared) {\n            //handle the basic networks here\n            VMInstanceVO vmi = (VMInstanceVO)vm;\n            Long podId = vmi.getPodIdToDeployIn();\n            if (podId == null) {\n                throw new InvalidParameterValueException(\"vm pod id is null\");\n            }\n            Pod pod = _hostPodDao.findById(podId);\n            if (pod == null) {\n                throw new InvalidParameterValueException(\"vm pod is null\");\n            }\n\n            try {\n                ipaddr = _networkMgr.allocatePublicIpForGuestNic(networkId, dc, pod, caller, requestedIp);\n                if (ipaddr == null) {\n                    throw new InvalidParameterValueException(\"Allocating ip to guest nic \" + nicId + \" failed\");\n                }\n            } catch (InsufficientAddressCapacityException e) {\n                s_logger.error(\"Allocating ip to guest nic \" + nicId + \" failed\");\n                return null;\n            }\n        } else {\n            s_logger.error(\"AddIpToVMNic is not supported in this network...\");\n            return null;\n        }\n\n        NicSecondaryIpVO secondaryIpVO;\n        if (ipaddr != null) {\n            // we got the ip addr so up the nics table and secodary ip\n            Transaction txn = Transaction.currentTxn();\n            txn.start();\n\n            boolean nicSecondaryIpSet = nicVO.getSecondaryIp();\n            if (!nicSecondaryIpSet) {\n                nicVO.setSecondaryIp(true);\n                // commit when previously set ??\n                s_logger.debug(\"Setting nics table ...\");\n                _nicDao.update(nicId, nicVO);\n            }\n\n            s_logger.debug(\"Setting nic_secondary_ip table ...\");\n            vmId = nicVO.getInstanceId();\n            secondaryIpVO = new NicSecondaryIpVO(nicId, ipaddr, vmId, accountId, domainId, networkId);\n            _nicSecondaryIpDao.persist(secondaryIpVO);\n            txn.commit();\n           return  getNicSecondaryIp(secondaryIpVO.getId());\n        } else {\n            return null;\n        }\n    }","commit_id":"36a312d4b24908cad107c2ae351c2c686890b995","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override public boolean toHTML( StringBuilder sb ) {\n    if (classification) {\n      DocGen.HTML.title(sb,\"Confusion Matrix\");\n      if( cm == null ) return true;\n    }\n    else {\n      DocGen.HTML.title(sb,\"Mean Squared Error\");\n      if( mse == Double.NaN ) return true;\n    }\n\n    DocGen.HTML.arrayHead(sb);\n    if (classification) {\n      // Sum up predicted & actuals\n      long acts [] = new long[cm   .length];\n      long preds[] = new long[cm[0].length];\n      for( int a=0; a<cm.length; a++ ) {\n        long sum=0;\n        for( int p=0; p<cm[a].length; p++ ) { sum += cm[a][p]; preds[p] += cm[a][p]; }\n        acts[a] = sum;\n      }\n\n      String adomain[] = show(acts , domain);\n      String pdomain[] = show(preds, domain);\n      assert adomain.length == pdomain.length : \"The confusion matrix should have the same length for both directions.\";\n\n      // Top row of CM\n      sb.append(\"<tr class='warning'>\");\n      sb.append(\"<th>Actual / Predicted<\/th>\"); // Row header\n      for( int p=0; p<pdomain.length; p++ )\n        if( pdomain[p] != null )\n          sb.append(\"<th>\").append(pdomain[p]).append(\"<\/th>\");\n      sb.append(\"<th>Error<\/th>\");\n      sb.append(\"<\/tr>\");\n\n      // Main CM Body\n      long terr=0;\n      for( int a=0; a<cm.length; a++ ) { // Actual loop\n        if( adomain[a] == null ) continue;\n        sb.append(\"<tr>\");\n        sb.append(\"<th>\").append(adomain[a]).append(\"<\/th>\");// Row header\n        long correct=0;\n        for( int p=0; p<pdomain.length; p++ ) { // Predicted loop\n          if( pdomain[p] == null ) continue;\n          boolean onDiag = adomain[a].equals(pdomain[p]);\n          if( onDiag ) correct = cm[a][p];\n          sb.append(onDiag ? \"<td style='background-color:LightGreen'>\":\"<td>\").append(cm[a][p]).append(\"<\/td>\");\n        }\n        long err = acts[a]-correct;\n        terr += err;              // Bump totals\n        sb.append(String.format(\"<th>%5.3f = %d / %d<\/th>\", (double)err/acts[a], err, acts[a]));\n        sb.append(\"<\/tr>\");\n      }\n\n      // Last row of CM\n      sb.append(\"<tr>\");\n      sb.append(\"<th>Totals<\/th>\");// Row header\n      for( int p=0; p<pdomain.length; p++ ) { // Predicted loop\n        if( pdomain[p] == null ) continue;\n        sb.append(\"<td>\").append(preds[p]).append(\"<\/td>\");\n      }\n      sb.append(String.format(\"<th>%5.3f = %d / %d<\/th>\", (double)terr/vactual.length(), terr, vactual.length()));\n      sb.append(\"<\/tr>\");\n    } else{\n      // Regression\n      sb.append(\"<tr class='warning'><td>\" + mse + \"<\/td><\/tr>\"); // Row header\n    }\n    DocGen.HTML.arrayTail(sb);\n    return true;\n  }","id":53548,"modified_method":"@Override public boolean toHTML( StringBuilder sb ) {\n    if (classification) {\n      DocGen.HTML.section(sb,\"Confusion Matrix\");\n      if( cm == null ) return true;\n    }\n    else {\n      DocGen.HTML.section(sb,\"Mean Squared Error\");\n      if( mse == Double.NaN ) return true;\n    }\n\n    DocGen.HTML.arrayHead(sb);\n    if (classification) {\n      // Sum up predicted & actuals\n      long acts [] = new long[cm   .length];\n      long preds[] = new long[cm[0].length];\n      for( int a=0; a<cm.length; a++ ) {\n        long sum=0;\n        for( int p=0; p<cm[a].length; p++ ) { sum += cm[a][p]; preds[p] += cm[a][p]; }\n        acts[a] = sum;\n      }\n\n      String adomain[] = show(acts , domain);\n      String pdomain[] = show(preds, domain);\n      assert adomain.length == pdomain.length : \"The confusion matrix should have the same length for both directions.\";\n\n      // Top row of CM\n      sb.append(\"<tr class='warning'>\");\n      sb.append(\"<th>Actual / Predicted<\/th>\"); // Row header\n      for( int p=0; p<pdomain.length; p++ )\n        if( pdomain[p] != null )\n          sb.append(\"<th>\").append(pdomain[p]).append(\"<\/th>\");\n      sb.append(\"<th>Error<\/th>\");\n      sb.append(\"<\/tr>\");\n\n      // Main CM Body\n      long terr=0;\n      for( int a=0; a<cm.length; a++ ) { // Actual loop\n        if( adomain[a] == null ) continue;\n        sb.append(\"<tr>\");\n        sb.append(\"<th>\").append(adomain[a]).append(\"<\/th>\");// Row header\n        long correct=0;\n        for( int p=0; p<pdomain.length; p++ ) { // Predicted loop\n          if( pdomain[p] == null ) continue;\n          boolean onDiag = adomain[a].equals(pdomain[p]);\n          if( onDiag ) correct = cm[a][p];\n          sb.append(onDiag ? \"<td style='background-color:LightGreen'>\":\"<td>\").append(cm[a][p]).append(\"<\/td>\");\n        }\n        long err = acts[a]-correct;\n        terr += err;              // Bump totals\n        sb.append(String.format(\"<th>%5.3f = %d / %d<\/th>\", (double)err/acts[a], err, acts[a]));\n        sb.append(\"<\/tr>\");\n      }\n\n      // Last row of CM\n      sb.append(\"<tr>\");\n      sb.append(\"<th>Totals<\/th>\");// Row header\n      for( int p=0; p<pdomain.length; p++ ) { // Predicted loop\n        if( pdomain[p] == null ) continue;\n        sb.append(\"<td>\").append(preds[p]).append(\"<\/td>\");\n      }\n      sb.append(String.format(\"<th>%5.3f = %d / %d<\/th>\", (double)terr/vactual.length(), terr, vactual.length()));\n      sb.append(\"<\/tr>\");\n    } else{\n      // Regression\n      sb.append(\"<tr class='warning'><td>\" + mse + \"<\/td><\/tr>\"); // Row header\n    }\n    DocGen.HTML.arrayTail(sb);\n    return true;\n  }","commit_id":"2e1a72d6d61d3fd10233afda7ec41c3e9572a367","url":"https://github.com/h2oai/h2o-2"},{"original_method":"@Override protected void queryArgumentValueSet(Argument arg, java.util.Properties inputArgs) {\n    super.queryArgumentValueSet(arg, inputArgs);\n    if(arg._name.equals(\"initial_weight_scale\") &&\n            (initial_weight_distribution == InitialWeightDistribution.UniformAdaptive)\n            ) {\n      arg.disable(\"Using sqrt(6 / (# units + # units of previous layer)) for Uniform distribution.\", inputArgs);\n    }\n    if(arg._name.equals(\"loss\") && !classification) {\n      arg.disable(\"Using MeanSquare loss for regression.\", inputArgs);\n      loss = Loss.MeanSquare;\n    }\n    if(arg._name.equals(\"classification_stop\") && !classification) {\n      arg.disable(\"Only for classification.\", inputArgs);\n    }\n    if(arg._name.equals(\"regression_stop\") && classification) {\n      arg.disable(\"Only for regression.\", inputArgs);\n    }\n    if (arg._name.equals(\"score_validation_samples\") && validation == null) {\n      arg.disable(\"Only if a validation set is specified.\", inputArgs);\n    }\n    if (arg._name.equals(\"loss\") || arg._name.equals(\"max_w2\") || arg._name.equals(\"warmup_samples\")\n            || arg._name.equals(\"score_training_samples\")\n            || arg._name.equals(\"score_validation_samples\")\n            || arg._name.equals(\"initial_weight_distribution\")\n            || arg._name.equals(\"initial_weight_scale\")\n            || arg._name.equals(\"score_interval\")\n            || arg._name.equals(\"diagnostics\")\n            || arg._name.equals(\"rate_decay\")\n            || arg._name.equals(\"mini_batch\")\n            || arg._name.equals(\"fast_mode\")\n            || arg._name.equals(\"ignore_const_cols\")\n            || arg._name.equals(\"force_load_balance\")\n            || arg._name.equals(\"shuffle_training_data\")\n            || arg._name.equals(\"nesterov_accelerated_gradient\")\n            || arg._name.equals(\"classification_stop\")\n            || arg._name.equals(\"regression_stop\")\n            || arg._name.equals(\"quiet_mode\")\n            ) {\n      if (!expert_mode) arg.disable(\"Only in expert mode.\", inputArgs);\n    }\n  }","id":53549,"modified_method":"@Override protected void queryArgumentValueSet(Argument arg, java.util.Properties inputArgs) {\n    super.queryArgumentValueSet(arg, inputArgs);\n    if(arg._name.equals(\"initial_weight_scale\") &&\n            (initial_weight_distribution == InitialWeightDistribution.UniformAdaptive)\n            ) {\n      arg.disable(\"Using sqrt(6 / (# units + # units of previous layer)) for Uniform distribution.\", inputArgs);\n    }\n    if(arg._name.equals(\"loss\") && !classification) {\n      arg.disable(\"Using MeanSquare loss for regression.\", inputArgs);\n      loss = Loss.MeanSquare;\n    }\n    if(arg._name.equals(\"classification_stop\") && !classification) {\n      arg.disable(\"Only for classification.\", inputArgs);\n    }\n    if (expert_mode && arg._name.equals(\"force_load_balance\") && H2O.CLOUD.size()>1) {\n      force_load_balance = false;\n      arg.disable(\"Only for single-node operation.\");\n    }\n\n    if(arg._name.equals(\"regression_stop\") && classification) {\n      arg.disable(\"Only for regression.\", inputArgs);\n    }\n    if (arg._name.equals(\"score_validation_samples\") && validation == null) {\n      arg.disable(\"Only if a validation set is specified.\", inputArgs);\n    }\n    if (arg._name.equals(\"loss\") || arg._name.equals(\"max_w2\") || arg._name.equals(\"warmup_samples\")\n            || arg._name.equals(\"score_training_samples\")\n            || arg._name.equals(\"score_validation_samples\")\n            || arg._name.equals(\"initial_weight_distribution\")\n            || arg._name.equals(\"initial_weight_scale\")\n            || arg._name.equals(\"score_interval\")\n            || arg._name.equals(\"diagnostics\")\n            || arg._name.equals(\"rate_decay\")\n            || arg._name.equals(\"mini_batch\")\n            || arg._name.equals(\"fast_mode\")\n            || arg._name.equals(\"ignore_const_cols\")\n            || arg._name.equals(\"force_load_balance\")\n            || arg._name.equals(\"shuffle_training_data\")\n            || arg._name.equals(\"nesterov_accelerated_gradient\")\n            || arg._name.equals(\"classification_stop\")\n            || arg._name.equals(\"regression_stop\")\n            || arg._name.equals(\"quiet_mode\")\n            ) {\n      if (!expert_mode) arg.disable(\"Only in expert mode.\", inputArgs);\n    }\n  }","commit_id":"2e1a72d6d61d3fd10233afda7ec41c3e9572a367","url":"https://github.com/h2oai/h2o-2"},{"original_method":"@Override public float progress(){\n    if(UKV.get(dest()) == null)return 0;\n    NNModel m = UKV.get(dest());\n    if (m != null && m.model_info()!=null )\n      return (float)(m.epoch_counter / m.model_info().get_params().epochs);\n    return 0;\n  }","id":53550,"modified_method":"@Override public float progress(){\n    if(UKV.get(dest()) == null)return 0;\n    NNModel m = UKV.get(dest());\n    if (m != null && m.model_info()!=null )\n      return (float)Math.min(1, (m.epoch_counter / m.model_info().get_params().epochs));\n    return 0;\n  }","commit_id":"2e1a72d6d61d3fd10233afda7ec41c3e9572a367","url":"https://github.com/h2oai/h2o-2"},{"original_method":"public final NNModel buildModel(NNModel model) {\n    Frame[] valid_adapted = null;\n    Frame valid = null, validScoreFrame = null;\n    Frame train = null, trainScoreFrame = null;\n    try {\n      lock_data();\n      logStart();\n      if (model == null) {\n        model = UKV.get(dest());\n      }\n      model.write_lock(self());\n      final long model_size = model.model_info().size();\n      Log.info(\"Number of model parameters (weights/biases): \" + String.format(\"%,d\", model_size));\n      Log.info(\"Memory usage of the model: \" + String.format(\"%.2f\", (double)model_size*Float.SIZE / (1<<23)) + \" MB.\");\n      train = reBalance(model.model_info().data_info()._adaptedFrame, seed);\n      trainScoreFrame = sampleFrame(train, score_training_samples, seed);\n      Log.info(\"Number of chunks of the training data: \" + train.anyVec().nChunks());\n      if (validation != null) {\n        valid_adapted = model.adapt(validation, false);\n        valid = reBalance(valid_adapted[0], seed+1);\n        validScoreFrame = sampleFrame(valid, score_validation_samples, seed+1);\n        Log.info(\"Number of chunks of the validation data: \" + valid.anyVec().nChunks());\n      }\n      if (mini_batch > train.numRows()) {\n        Log.warn(\"Setting mini_batch (\" + mini_batch\n                + \") to the number of rows of the training data (\" + (mini_batch=train.numRows()) + \").\");\n      }\n      // determines the number of rows processed during NNTask, affects synchronization (happens at the end of each NNTask)\n      final float sync_fraction = mini_batch == 0l ? 1.0f : (float)mini_batch / train.numRows();\n\n      if (!quiet_mode) Log.info(\"Initial model:\\n\" + model.model_info());\n\n      Log.info(\"Starting to train the Neural Net model.\");\n      long timeStart = System.currentTimeMillis();\n\n      //main loop\n      long iter = 0;\n      Frame newtrain = new Frame(train);\n      do {\n        model.set_model_info(new NNTask(model.model_info(), sync_fraction).doAll(newtrain).model_info());\n        if (++iter % 10 != 0 && shuffle_training_data) {\n          Frame newtrain2 = reBalance(newtrain, seed+iter);\n          if (newtrain != newtrain2) {\n            newtrain.delete();\n            newtrain = newtrain2;\n            trainScoreFrame = sampleFrame(newtrain, score_training_samples, seed+iter+0xDADDAAAA);\n          }\n        }\n      }\n      while (model.doScoring(trainScoreFrame, validScoreFrame, timeStart, self()));\n\n      Log.info(\"Finished training the Neural Net model.\");\n      return model;\n    }\n    finally {\n      model.unlock(self());\n      //clean up\n      if (validScoreFrame != null && validScoreFrame != valid) validScoreFrame.delete();\n      if (trainScoreFrame != null && trainScoreFrame != train) trainScoreFrame.delete();\n      if (validation != null) valid_adapted[1].delete(); //just deleted the adapted frames for validation\n//    if (_newsource != null && _newsource != source) _newsource.delete();\n      unlock_data();\n    }\n  }","id":53551,"modified_method":"public final NNModel buildModel(NNModel model) {\n    Frame[] valid_adapted = null;\n    Frame valid = null, validScoreFrame = null;\n    Frame train = null, trainScoreFrame = null;\n    try {\n      lock_data();\n      logStart();\n      if (model == null) {\n        model = UKV.get(dest());\n      }\n      model.write_lock(self());\n      final long model_size = model.model_info().size();\n      Log.info(\"Number of model parameters (weights/biases): \" + String.format(\"%,d\", model_size));\n//      Log.info(\"Memory usage of the model: \" + String.format(\"%.2f\", (double)model_size*Float.SIZE / (1<<23)) + \" MB.\");\n      train = reBalance(model.model_info().data_info()._adaptedFrame, seed);\n      trainScoreFrame = sampleFrame(train, score_training_samples, seed);\n      Log.info(\"Number of chunks of the training data: \" + train.anyVec().nChunks());\n      if (validation != null) {\n        valid_adapted = model.adapt(validation, false);\n        valid = reBalance(valid_adapted[0], seed+1);\n        validScoreFrame = sampleFrame(valid, score_validation_samples, seed+1);\n        Log.info(\"Number of chunks of the validation data: \" + valid.anyVec().nChunks());\n      }\n      if (mini_batch > train.numRows()) {\n        Log.warn(\"Setting mini_batch (\" + mini_batch\n                + \") to the number of rows of the training data (\" + (mini_batch=train.numRows()) + \").\");\n      }\n      // determines the number of rows processed during NNTask, affects synchronization (happens at the end of each NNTask)\n      final float sync_fraction = mini_batch == 0l ? 1.0f : (float)mini_batch / train.numRows();\n\n      if (!quiet_mode) Log.info(\"Initial model:\\n\" + model.model_info());\n\n      Log.info(\"Starting to train the Neural Net model.\");\n      long timeStart = System.currentTimeMillis();\n\n      //main loop\n      long iter = 0;\n      Frame newtrain = new Frame(train);\n      do {\n        model.set_model_info(new NNTask(model.model_info(), sync_fraction).doAll(newtrain).model_info());\n        if (++iter % 10 != 0 && shuffle_training_data) {\n          Frame newtrain2 = reBalance(newtrain, seed+iter);\n          if (newtrain != newtrain2) {\n            newtrain.delete();\n            newtrain = newtrain2;\n            trainScoreFrame = sampleFrame(newtrain, score_training_samples, seed+iter+0xDADDAAAA);\n          }\n        }\n      }\n      while (model.doScoring(trainScoreFrame, validScoreFrame, timeStart, self()));\n\n      Log.info(\"Finished training the Neural Net model.\");\n      return model;\n    }\n    finally {\n      model.unlock(self());\n      //clean up\n      if (validScoreFrame != null && validScoreFrame != valid) validScoreFrame.delete();\n      if (trainScoreFrame != null && trainScoreFrame != train) trainScoreFrame.delete();\n      if (validation != null) valid_adapted[1].delete(); //just deleted the adapted frames for validation\n//    if (_newsource != null && _newsource != source) _newsource.delete();\n      unlock_data();\n    }\n  }","commit_id":"2e1a72d6d61d3fd10233afda7ec41c3e9572a367","url":"https://github.com/h2oai/h2o-2"},{"original_method":"public boolean generateHTML(String title, StringBuilder sb) {\n    if (_key == null) {\n      DocGen.HTML.title(sb, \"No model yet\");\n      return true;\n    }\n\n    final String mse_format = \"%g\";\n    final String cross_entropy_format = \"%2.6f\";\n\n    DocGen.HTML.title(sb, title);\n    DocGen.HTML.paragraph(sb, \"Model type: \" + (model_info().parameters.classification ? \" Classification\" : \" Regression\"));\n    DocGen.HTML.paragraph(sb, \"Model Key: \" + _key);\n    DocGen.HTML.paragraph(sb, \"Job Key: \" + jobKey);\n    Inspect2 is2 = new Inspect2();\n    DocGen.HTML.paragraph(sb, \"Training Data Key: \" + _dataKey);\n    if (model_info.parameters.validation != null) {\n      DocGen.HTML.paragraph(sb, \"Validation Data Key: \" + model_info.parameters.validation._key);\n    }\n    DocGen.HTML.paragraph(sb, \"Number of model parameters (weights/biases): \" + String.format(\"%,d\", model_info().size()));\n\n    model_info.job().toHTML(sb);\n    sb.append(\"<div class='alert'>Actions: \"\n            + (Job.isRunning(jobKey) ? Cancel.link(jobKey, \"Stop training\") + \", \" : \"\")\n            + is2.link(\"Inspect training data\", _dataKey) + \", \"\n            + (model_info().parameters.validation != null ? (is2.link(\"Inspect validation data\", model_info().parameters.validation._key) + \", \") : \"\")\n            + water.api.Predict.link(_key, \"Score on dataset\") + \", \" +\n            NN.link(_dataKey, \"Compute new model\") + \"<\/div>\");\n\n    // stats for training and validation\n    final Errors error = errors[errors.length - 1];\n    assert(error != null);\n\n    if (errors.length > 1) {\n      if (isClassifier()) {\n        // Plot training error\n        float[] err = new float[errors.length];\n        float[] samples = new float[errors.length];\n        for (int i=0; i<err.length; ++i) {\n          err[i] = (float)errors[i].train_err;\n          samples[i] = errors[i].training_samples;\n        }\n        new D3Plot(samples, err, \"training samples\", \"classification error\",\n                \"Classification Error on Training Set\").generate(sb);\n\n        // Plot validation error\n        if (model_info.parameters.validation != null) {\n          for (int i=0; i<err.length; ++i) {\n            err[i] = (float)errors[i].valid_err;\n          }\n          new D3Plot(samples, err, \"training samples\", \"classification error\",\n                  \"Classification Error on Validation Set\").generate(sb);\n        }\n      } else {\n        // Plot training MSE\n        float[] err = new float[errors.length-1];\n        float[] samples = new float[errors.length-1];\n        for (int i=0; i<err.length; ++i) {\n          err[i] = (float)errors[i+1].train_mse;\n          samples[i] = errors[i+1].training_samples;\n        }\n        new D3Plot(samples, err, \"training samples\", \"MSE\",\n                \"Regression Error on Training Set\").generate(sb);\n\n        // Plot validation MSE\n        if (model_info.parameters.validation != null) {\n          for (int i=0; i<err.length; ++i) {\n            err[i] = (float)errors[i+1].valid_mse;\n          }\n          new D3Plot(samples, err, \"training samples\", \"MSE\",\n                  \"Regression Error on Validation Set\").generate(sb);\n        }\n      }\n    }\n\n    DocGen.HTML.section(sb, \"Predicting: \" + responseName());\n    if (isClassifier()) {\n      DocGen.HTML.section(sb, \"Training classification error: \" + formatPct(error.train_err));\n//      DocGen.HTML.section(sb, \"Training cross entropy: \" + String.format(cross_entropy_format, error.train_mce));\n      if(error.validation) {\n        DocGen.HTML.section(sb, \"Validation classification error: \" + formatPct(error.valid_err));\n//        DocGen.HTML.section(sb, \"Validation mean cross entropy: \" + String.format(cross_entropy_format, error.valid_mce));\n      }\n    } else {\n      DocGen.HTML.section(sb, \"Training mean squared error: \" + String.format(mse_format, error.train_mse));\n      if(error.validation) {\n        DocGen.HTML.section(sb, \"Validation mean squared error: \" + String.format(mse_format, error.valid_mse));\n      }\n    }\n    if (error.training_time_ms > 0)\n      DocGen.HTML.section(sb, \"Training speed: \" + error.training_samples * 1000 / error.training_time_ms + \" samples/s\");\n    if (model_info.parameters != null && model_info.parameters.diagnostics) {\n      DocGen.HTML.section(sb, \"Status of Neuron Layers\");\n      sb.append(\"<table class='table table-striped table-bordered table-condensed'>\");\n      sb.append(\"<tr>\");\n      sb.append(\"<th>\").append(\"#\").append(\"<\/th>\");\n      sb.append(\"<th>\").append(\"Units\").append(\"<\/th>\");\n      sb.append(\"<th>\").append(\"Type\").append(\"<\/th>\");\n      sb.append(\"<th>\").append(\"Dropout\").append(\"<\/th>\");\n      sb.append(\"<th>\").append(\"Rate\").append(\"<\/th>\");\n      sb.append(\"<th>\").append(\"L1\").append(\"<\/th>\");\n      sb.append(\"<th>\").append(\"L2\").append(\"<\/th>\");\n      sb.append(\"<th>\").append(\"Momentum\").append(\"<\/th>\");\n      sb.append(\"<th>\").append(\"Weight (Mean, RMS)\").append(\"<\/th>\");\n      sb.append(\"<th>\").append(\"Bias (Mean, RMS)\").append(\"<\/th>\");\n      sb.append(\"<\/tr>\");\n      Neurons[] neurons = NNTask.makeNeuronsForTesting(model_info()); //link the weights to the neurons, for easy access\n      for (int i=0; i<neurons.length; ++i) {\n        sb.append(\"<tr>\");\n        sb.append(\"<td>\").append(\"<b>\").append(i+1).append(\"<\/b>\").append(\"<\/td>\");\n        sb.append(\"<td>\").append(\"<b>\").append(neurons[i].units).append(\"<\/b>\").append(\"<\/td>\");\n        sb.append(\"<td>\").append(neurons[i].getClass().getSimpleName()).append(\"<\/td>\");\n\n        if (i == 0) {\n          sb.append(\"<td>\");\n          sb.append(formatPct(neurons[i].params.input_dropout_ratio));\n          sb.append(\"<\/td>\");\n          sb.append(\"<td><\/td>\");\n          sb.append(\"<td><\/td>\");\n          sb.append(\"<td><\/td>\");\n          sb.append(\"<td><\/td>\");\n          sb.append(\"<td><\/td>\");\n          sb.append(\"<td><\/td>\");\n          continue;\n        }\n        else if (i < neurons.length-1) {\n          sb.append(\"<td>\");\n          sb.append( neurons[i] instanceof Neurons.TanhDropout\n                  || neurons[i] instanceof Neurons.RectifierDropout\n                  || neurons[i] instanceof Neurons.MaxoutDropout ? \"50%\" : \"0%\");\n          sb.append(\"<\/td>\");\n        } else {\n          sb.append(\"<td><\/td>\");\n        }\n\n        sb.append(\"<td>\").append(String.format(\"%.5g\", neurons[i].rate(error.training_samples))).append(\"<\/td>\");\n       sb.append(\"<td>\").append(neurons[i].params.l1).append(\"<\/td>\");\n        sb.append(\"<td>\").append(neurons[i].params.l2).append(\"<\/td>\");\n        final String format = \"%g\";\n        sb.append(\"<td>\").append(String.format(\"%.5f\", neurons[i].momentum(error.training_samples))).append(\"<\/td>\");\n        sb.append(\"<td>(\").append(String.format(format, model_info.mean_weight[i])).\n                append(\", \").append(String.format(format, model_info.rms_weight[i])).append(\")<\/td>\");\n        sb.append(\"<td>(\").append(String.format(format, model_info.mean_bias[i])).\n                append(\", \").append(String.format(format, model_info.rms_bias[i])).append(\")<\/td>\");\n        sb.append(\"<\/tr>\");\n      }\n      sb.append(\"<\/table>\");\n    }\n    if (model_info.unstable()) {\n      final String msg = \"Job was aborted due to observed numerical instability (exponential growth).\"\n              + \" Try a bounded activation function or regularization with L1, L2 or max_w2 and/or use a smaller learning rate or faster annealing.\";\n      DocGen.HTML.section(sb, \"=======================================================================================\");\n      DocGen.HTML.section(sb, msg);\n      DocGen.HTML.section(sb, \"=======================================================================================\");\n    }\n    long score_valid = error.score_validation_samples;\n    long score_train = error.score_training_samples;\n    final boolean fulltrain = score_train==0 || score_train == model_info().data_info()._adaptedFrame.numRows();\n    final boolean fullvalid = score_valid==0 || score_valid == model_info().get_params().validation.numRows();\n    if (isClassifier()) {\n      final String cmTitle = \"Confusion Matrix on \" + (error.validation ?\n              \"Validation Data\" + (fullvalid ? \"\" : \" (\" + score_valid + \" samples)\")\n              : \"Training Data\" + (fulltrain ? \"\" : \" (\" + score_train + \" samples)\"));\n      DocGen.HTML.section(sb, cmTitle);\n      if (error.train_confusion_matrix != null) {\n        if (error.train_confusion_matrix.cm != null && error.train_confusion_matrix.cm.length < 100) {\n          if (error.validation && error.valid_confusion_matrix != null && error.valid_confusion_matrix.cm != null) error.valid_confusion_matrix.toHTML(sb);\n          else if (error.train_confusion_matrix != null) error.train_confusion_matrix.toHTML(sb);\n        } else {\n          sb.append(\"<h5>Not shown here (too large).<\/h5>\");\n        }\n      }\n      else sb.append(\"<h5>Not yet computed.<\/h5>\");\n    }\n\n    sb.append(\"<h3>\" + \"Progress\" + \"<\/h3>\");\n    sb.append(\"<h4>\" + \"Epochs: \" + String.format(\"%.3f\", epoch_counter) + \"<\/h4>\");\n\n    // training\n    {\n      final long pts = fulltrain ? model_info().data_info()._adaptedFrame.numRows() : score_train;\n      String training = \"Number of training set samples for scoring: \" + (fulltrain ? \"all \" : \"\") + pts;\n      if (pts < 1000 && model_info().data_info()._adaptedFrame.numRows() >= 1000) training += \" (low, scoring might be inaccurate -> consider increasing this number in the expert mode)\";\n      if (pts > 100000) training += \" (large, scoring can be slow -> consider reducing this number in the expert mode or scoring manually)\";\n      DocGen.HTML.section(sb, training);\n    }\n    // validation\n    if (error.validation) {\n      final long ptsv = fullvalid ? model_info().get_params().validation.numRows() : score_valid;\n      String validation = \"Number of validation set samples for scoring: \" + (fullvalid ? \"all \" : \"\") + ptsv;\n      if (ptsv < 1000 && model_info().get_params().validation.numRows() >= 1000) validation += \" (low, scoring might be inaccurate -> consider increasing this number in the expert mode)\";\n      if (ptsv > 100000) validation += \" (large, scoring can be slow -> consider reducing this number in the expert mode or scoring manually)\";\n      DocGen.HTML.section(sb, validation);\n    }\n\n//    String training = \"Number of training set samples for scoring: \" + error.score_training;\n    if (error.validation) {\n//      String validation = \"Number of validation set samples for scoring: \" + error.score_validation;\n    }\n    sb.append(\"<table class='table table-striped table-bordered table-condensed'>\");\n    sb.append(\"<tr>\");\n    sb.append(\"<th>Training Time<\/th>\");\n    sb.append(\"<th>Training Epochs<\/th>\");\n    sb.append(\"<th>Training Samples<\/th>\");\n    if (isClassifier()) {\n//      sb.append(\"<th>Training MCE<\/th>\");\n      sb.append(\"<th>Training Error<\/th>\");\n    } else {\n      sb.append(\"<th>Training MSE<\/th>\");\n    }\n    if (error.validation) {\n      if (isClassifier()) {\n//      sb.append(\"<th>Validation MCE<\/th>\");\n        sb.append(\"<th>Validation Error<\/th>\");\n      } else {\n        sb.append(\"<th>Validation MSE<\/th>\");\n      }\n    }\n    sb.append(\"<\/tr>\");\n    for( int i = errors.length - 1; i >= 0; i-- ) {\n      final Errors e = errors[i];\n      sb.append(\"<tr>\");\n      sb.append(\"<td>\" + PrettyPrint.msecs(e.training_time_ms, true) + \"<\/td>\");\n      sb.append(\"<td>\" + String.format(\"%g\", e.epoch_counter) + \"<\/td>\");\n      sb.append(\"<td>\" + String.format(\"%,d\", e.training_samples) + \"<\/td>\");\n      if (isClassifier()) {\n//        sb.append(\"<td>\" + String.format(cross_entropy_format, e.train_mce) + \"<\/td>\");\n        sb.append(\"<td>\" + formatPct(e.train_err) + \"<\/td>\");\n      } else {\n        sb.append(\"<td>\" + String.format(mse_format, e.train_mse) + \"<\/td>\");\n      }\n      if(e.validation) {\n        if (isClassifier()) {\n//          sb.append(\"<td>\" + String.format(cross_entropy_format, e.valid_mce) + \"<\/td>\");\n          sb.append(\"<td>\" + formatPct(e.valid_err) + \"<\/td>\");\n        } else {\n          sb.append(\"<td>\" + String.format(mse_format, e.valid_mse) + \"<\/td>\");\n        }\n      }\n      sb.append(\"<\/tr>\");\n    }\n    sb.append(\"<\/table>\");\n    return true;\n  }","id":53552,"modified_method":"public boolean generateHTML(String title, StringBuilder sb) {\n    if (_key == null) {\n      DocGen.HTML.title(sb, \"No model yet\");\n      return true;\n    }\n\n    final String mse_format = \"%g\";\n    final String cross_entropy_format = \"%2.6f\";\n\n    // stats for training and validation\n    final Errors error = errors[errors.length - 1];\n\n    DocGen.HTML.title(sb, title);\n    DocGen.HTML.paragraph(sb, \"Model Key: \" + _key);\n    DocGen.HTML.paragraph(sb, \"Job Key: \" + jobKey);\n    DocGen.HTML.paragraph(sb, \"Model type: \" + (model_info().parameters.classification ? \" Classification\" : \" Regression\") + \", predicting: \" + responseName());\n    DocGen.HTML.paragraph(sb, \"Number of model parameters (weights/biases): \" + String.format(\"%,d\", model_info().size()));\n\n    model_info.job().toHTML(sb);\n    Inspect2 is2 = new Inspect2();\n    sb.append(\"<div class='alert'>Actions: \"\n            + (Job.isRunning(jobKey) ? Cancel.link(jobKey, \"Stop training\") + \", \" : \"\")\n            + is2.link(\"Inspect training data (\" + _dataKey + \")\", _dataKey) + \", \"\n            + (model_info().parameters.validation != null ? (is2.link(\"Inspect validation data (\" + model_info().parameters.validation._key + \")\", model_info().parameters.validation._key) + \", \") : \"\")\n            + water.api.Predict.link(_key, \"Score on dataset\") + \", \" +\n            NN.link(_dataKey, \"Compute new model\") + \"<\/div>\");\n\n    if (model_info.unstable()) {\n      final String msg = \"Job was aborted due to observed numerical instability (exponential growth).\"\n              + \" Try a bounded activation function or regularization with L1, L2 or max_w2 and/or use a smaller learning rate or faster annealing.\";\n      DocGen.HTML.section(sb, \"=======================================================================================\");\n      DocGen.HTML.section(sb, msg);\n      DocGen.HTML.section(sb, \"=======================================================================================\");\n    }\n\n    final double progress = model_info.get_params().progress();\n    DocGen.HTML.title(sb, \"Progress\");\n\n    if (model_info.parameters != null && model_info.parameters.diagnostics) {\n      DocGen.HTML.section(sb, \"Status of Neuron Layers\");\n      sb.append(\"<table class='table table-striped table-bordered table-condensed'>\");\n      sb.append(\"<tr>\");\n      sb.append(\"<th>\").append(\"#\").append(\"<\/th>\");\n      sb.append(\"<th>\").append(\"Units\").append(\"<\/th>\");\n      sb.append(\"<th>\").append(\"Type\").append(\"<\/th>\");\n      sb.append(\"<th>\").append(\"Dropout\").append(\"<\/th>\");\n      sb.append(\"<th>\").append(\"Rate\").append(\"<\/th>\");\n      sb.append(\"<th>\").append(\"L1\").append(\"<\/th>\");\n      sb.append(\"<th>\").append(\"L2\").append(\"<\/th>\");\n      sb.append(\"<th>\").append(\"Momentum\").append(\"<\/th>\");\n      sb.append(\"<th>\").append(\"Weight (Mean, RMS)\").append(\"<\/th>\");\n      sb.append(\"<th>\").append(\"Bias (Mean, RMS)\").append(\"<\/th>\");\n      sb.append(\"<\/tr>\");\n      Neurons[] neurons = NNTask.makeNeuronsForTesting(model_info()); //link the weights to the neurons, for easy access\n      for (int i=0; i<neurons.length; ++i) {\n        sb.append(\"<tr>\");\n        sb.append(\"<td>\").append(\"<b>\").append(i+1).append(\"<\/b>\").append(\"<\/td>\");\n        sb.append(\"<td>\").append(\"<b>\").append(neurons[i].units).append(\"<\/b>\").append(\"<\/td>\");\n        sb.append(\"<td>\").append(neurons[i].getClass().getSimpleName()).append(\"<\/td>\");\n\n        if (i == 0) {\n          sb.append(\"<td>\");\n          sb.append(formatPct(neurons[i].params.input_dropout_ratio));\n          sb.append(\"<\/td>\");\n          sb.append(\"<td><\/td>\");\n          sb.append(\"<td><\/td>\");\n          sb.append(\"<td><\/td>\");\n          sb.append(\"<td><\/td>\");\n          sb.append(\"<td><\/td>\");\n          sb.append(\"<td><\/td>\");\n          continue;\n        }\n        else if (i < neurons.length-1) {\n          sb.append(\"<td>\");\n          sb.append( neurons[i] instanceof Neurons.TanhDropout\n                  || neurons[i] instanceof Neurons.RectifierDropout\n                  || neurons[i] instanceof Neurons.MaxoutDropout ? \"50%\" : \"0%\");\n          sb.append(\"<\/td>\");\n        } else {\n          sb.append(\"<td><\/td>\");\n        }\n\n        sb.append(\"<td>\").append(String.format(\"%.5g\", neurons[i].rate(error.training_samples))).append(\"<\/td>\");\n        sb.append(\"<td>\").append(neurons[i].params.l1).append(\"<\/td>\");\n        sb.append(\"<td>\").append(neurons[i].params.l2).append(\"<\/td>\");\n        final String format = \"%g\";\n        sb.append(\"<td>\").append(String.format(\"%.5f\", neurons[i].momentum(error.training_samples))).append(\"<\/td>\");\n        sb.append(\"<td>(\").append(String.format(format, model_info.mean_weight[i])).\n                append(\", \").append(String.format(format, model_info.rms_weight[i])).append(\")<\/td>\");\n        sb.append(\"<td>(\").append(String.format(format, model_info.mean_bias[i])).\n                append(\", \").append(String.format(format, model_info.rms_bias[i])).append(\")<\/td>\");\n        sb.append(\"<\/tr>\");\n      }\n      sb.append(\"<\/table>\");\n    }\n\n    if (isClassifier()) {\n      DocGen.HTML.section(sb, \"Classification error on training data: \" + formatPct(error.train_err));\n//      DocGen.HTML.section(sb, \"Training cross entropy: \" + String.format(cross_entropy_format, error.train_mce));\n      if(error.validation) {\n        DocGen.HTML.section(sb, \"Classification error on validation data: \" + formatPct(error.valid_err));\n//        DocGen.HTML.section(sb, \"Validation mean cross entropy: \" + String.format(cross_entropy_format, error.valid_mce));\n      }\n    } else {\n      DocGen.HTML.section(sb, \"MSE on training data: \" + String.format(mse_format, error.train_mse));\n      if(error.validation) {\n        DocGen.HTML.section(sb, \"MSE on validation data: \" + String.format(mse_format, error.valid_mse));\n      }\n    }\n    if (error.training_time_ms > 0) {\n      DocGen.HTML.paragraph(sb, \"Epochs: \" + String.format(\"%.3f\", epoch_counter) + \" / \" + model_info.parameters.epochs);\n      DocGen.HTML.paragraph(sb, \"Training speed: \" + error.training_samples * 1000 / error.training_time_ms + \" samples/s\");\n      DocGen.HTML.paragraph(sb, \"Training time: \" + PrettyPrint.msecs(error.training_time_ms, true));\n      if (!model_info.get_params().isDone())\n        DocGen.HTML.paragraph(sb, \"Estimated time left: \" +PrettyPrint.msecs((long)(error.training_time_ms*(1-progress)/progress), true));\n    }\n\n    long score_valid = error.score_validation_samples;\n    long score_train = error.score_training_samples;\n    final boolean fulltrain = score_train==0 || score_train == model_info().data_info()._adaptedFrame.numRows();\n    final boolean fullvalid = score_valid==0 || score_valid == model_info().get_params().validation.numRows();\n    if (isClassifier()) {\n      final String cmTitle = \"<br/>Confusion Matrix reported on \" + (error.validation ?\n              \"Validation Data\" + (fullvalid ? \"\" : \" (\" + score_valid + \" samples)\") + \":\"\n              : \"Training Data\" + (fulltrain ? \"\" : \" (\" + score_train + \" samples)\") + \":\");\n      DocGen.HTML.paragraph(sb, cmTitle);\n      if (error.train_confusion_matrix != null) {\n        if (error.train_confusion_matrix.cm != null && error.train_confusion_matrix.cm.length < 30) {\n          if (error.validation && error.valid_confusion_matrix != null && error.valid_confusion_matrix.cm != null) error.valid_confusion_matrix.toHTML(sb);\n          else if (error.train_confusion_matrix != null) error.train_confusion_matrix.toHTML(sb);\n        } else {\n          sb.append(\"<h5>Not shown here (too large).<\/h5>\");\n        }\n      }\n      else sb.append(\"<h5>Not yet computed.<\/h5>\");\n    }\n\n    DocGen.HTML.title(sb, \"Scoring history\");\n    // training\n    {\n      final long pts = fulltrain ? model_info().data_info()._adaptedFrame.numRows() : score_train;\n      String training = \"Number of training set samples for scoring: \" + (fulltrain ? \"all \" : \"\") + pts;\n      if (pts < 1000 && model_info().data_info()._adaptedFrame.numRows() >= 1000) training += \" (low, scoring might be inaccurate -> consider increasing this number in the expert mode)\";\n      if (pts > 100000) training += \" (large, scoring can be slow -> consider reducing this number in the expert mode or scoring manually)\";\n      DocGen.HTML.paragraph(sb, training);\n    }\n    // validation\n    if (error.validation) {\n      final long ptsv = fullvalid ? model_info().get_params().validation.numRows() : score_valid;\n      String validation = \"Number of validation set samples for scoring: \" + (fullvalid ? \"all \" : \"\") + ptsv;\n      if (ptsv < 1000 && model_info().get_params().validation.numRows() >= 1000) validation += \" (low, scoring might be inaccurate -> consider increasing this number in the expert mode)\";\n      if (ptsv > 100000) validation += \" (large, scoring can be slow -> consider reducing this number in the expert mode or scoring manually)\";\n      DocGen.HTML.paragraph(sb, validation);\n    }\n    if (errors.length > 1) {\n      if (isClassifier()) {\n        // Plot training error\n        float[] err = new float[errors.length];\n        float[] samples = new float[errors.length];\n        for (int i=0; i<err.length; ++i) {\n          err[i] = (float)errors[i].train_err;\n          samples[i] = errors[i].training_samples;\n        }\n        new D3Plot(samples, err, \"training samples\", \"classification error\",\n                \"classification error on training data\").generate(sb);\n\n        // Plot validation error\n        if (model_info.parameters.validation != null) {\n          for (int i=0; i<err.length; ++i) {\n            err[i] = (float)errors[i].valid_err;\n          }\n          new D3Plot(samples, err, \"training samples\", \"classification error\",\n                  \"classification error on validation set\").generate(sb);\n        }\n      } else {\n        // Plot training MSE\n        float[] err = new float[errors.length-1];\n        float[] samples = new float[errors.length-1];\n        for (int i=0; i<err.length; ++i) {\n          err[i] = (float)errors[i+1].train_mse;\n          samples[i] = errors[i+1].training_samples;\n        }\n        new D3Plot(samples, err, \"training samples\", \"MSE\",\n                \"regression error on training data\").generate(sb);\n\n        // Plot validation MSE\n        if (model_info.parameters.validation != null) {\n          for (int i=0; i<err.length; ++i) {\n            err[i] = (float)errors[i+1].valid_mse;\n          }\n          new D3Plot(samples, err, \"training samples\", \"MSE\",\n                  \"regression error on validation data\").generate(sb);\n        }\n      }\n    }\n\n//    String training = \"Number of training set samples for scoring: \" + error.score_training;\n    if (error.validation) {\n//      String validation = \"Number of validation set samples for scoring: \" + error.score_validation;\n    }\n    sb.append(\"<table class='table table-striped table-bordered table-condensed'>\");\n    sb.append(\"<tr>\");\n    sb.append(\"<th>Training Time<\/th>\");\n    sb.append(\"<th>Training Epochs<\/th>\");\n    sb.append(\"<th>Training Samples<\/th>\");\n    if (isClassifier()) {\n//      sb.append(\"<th>Training MCE<\/th>\");\n      sb.append(\"<th>Training Error<\/th>\");\n    } else {\n      sb.append(\"<th>Training MSE<\/th>\");\n    }\n    if (error.validation) {\n      if (isClassifier()) {\n//      sb.append(\"<th>Validation MCE<\/th>\");\n        sb.append(\"<th>Validation Error<\/th>\");\n      } else {\n        sb.append(\"<th>Validation MSE<\/th>\");\n      }\n    }\n    sb.append(\"<\/tr>\");\n    for( int i = errors.length - 1; i >= 0; i-- ) {\n      final Errors e = errors[i];\n      sb.append(\"<tr>\");\n      sb.append(\"<td>\" + PrettyPrint.msecs(e.training_time_ms, true) + \"<\/td>\");\n      sb.append(\"<td>\" + String.format(\"%g\", e.epoch_counter) + \"<\/td>\");\n      sb.append(\"<td>\" + String.format(\"%,d\", e.training_samples) + \"<\/td>\");\n      if (isClassifier()) {\n//        sb.append(\"<td>\" + String.format(cross_entropy_format, e.train_mce) + \"<\/td>\");\n        sb.append(\"<td>\" + formatPct(e.train_err) + \"<\/td>\");\n      } else {\n        sb.append(\"<td>\" + String.format(mse_format, e.train_mse) + \"<\/td>\");\n      }\n      if(e.validation) {\n        if (isClassifier()) {\n//          sb.append(\"<td>\" + String.format(cross_entropy_format, e.valid_mce) + \"<\/td>\");\n          sb.append(\"<td>\" + formatPct(e.valid_err) + \"<\/td>\");\n        } else {\n          sb.append(\"<td>\" + String.format(mse_format, e.valid_mse) + \"<\/td>\");\n        }\n      }\n      sb.append(\"<\/tr>\");\n    }\n    sb.append(\"<\/table>\");\n    return true;\n  }","commit_id":"2e1a72d6d61d3fd10233afda7ec41c3e9572a367","url":"https://github.com/h2oai/h2o-2"},{"original_method":"public static PsiType getTargetType(final PsiExpression context) {\n    PsiType targetType = PsiTypesUtil.getExpectedTypeByParent(context);\n    if (targetType != null) {\n      return targetType;\n    }\n    final PsiElement parent = PsiUtil.skipParenthesizedExprUp(context.getParent());\n    if (parent instanceof PsiExpressionList) {\n      PsiElement gParent = parent.getParent();\n      if (gParent instanceof PsiAnonymousClass) {\n        gParent = gParent.getParent();\n      }\n      if (gParent instanceof PsiCallExpression) {\n        final PsiExpressionList argumentList = ((PsiCallExpression)gParent).getArgumentList();\n        if (argumentList != null) {\n          final MethodCandidateInfo.CurrentCandidateProperties properties = MethodCandidateInfo.getCurrentMethod(argumentList);\n          if (properties != null && properties.isApplicabilityCheck()) {\n            return getTypeByMethod(context, argumentList, properties.getMethod(), properties.isVarargs(), properties.getSubstitutor());\n          }\n          final JavaResolveResult result = properties != null ? properties.getInfo() : ((PsiCallExpression)gParent).resolveMethodGenerics();\n          final boolean varargs = properties != null && properties.isVarargs() || result instanceof MethodCandidateInfo && ((MethodCandidateInfo)result).isVarargs();\n          return getTypeByMethod(context, argumentList, result.getElement(),\n                                 varargs,\n                                 PsiResolveHelper.ourGraphGuard.doPreventingRecursion(argumentList.getParent(), false,\n                                                                                      new Computable<PsiSubstitutor>() {\n                                                                                        @Override\n                                                                                        public PsiSubstitutor compute() {\n                                                                                          return result.getSubstitutor();\n                                                                                        }\n                                                                                      }\n                                 )\n          );\n        }\n      }\n    } else if (parent instanceof PsiConditionalExpression) {\n      return getTargetType((PsiExpression)parent);\n    }\n    else if (parent instanceof PsiLambdaExpression) {\n      return getTargetTypeByContainingLambda((PsiLambdaExpression)parent);\n    }\n    else if (parent instanceof PsiReturnStatement) {\n      return getTargetTypeByContainingLambda(PsiTreeUtil.getParentOfType(parent, PsiLambdaExpression.class));\n    }\n    return null;\n  }","id":53553,"modified_method":"public static PsiType getTargetType(final PsiExpression context) {\n    PsiType targetType = PsiTypesUtil.getExpectedTypeByParent(context);\n    if (targetType != null) {\n      return targetType;\n    }\n    final PsiElement parent = PsiUtil.skipParenthesizedExprUp(context.getParent());\n    if (parent instanceof PsiExpressionList) {\n      PsiElement gParent = parent.getParent();\n      if (gParent instanceof PsiAnonymousClass) {\n        gParent = gParent.getParent();\n      }\n      if (gParent instanceof PsiCallExpression) {\n        final PsiExpressionList argumentList = ((PsiCallExpression)gParent).getArgumentList();\n        if (argumentList != null) {\n          final MethodCandidateInfo.CurrentCandidateProperties properties = MethodCandidateInfo.getCurrentMethod(argumentList);\n          if (properties != null && properties.isApplicabilityCheck()) {\n            return getTypeByMethod(context, argumentList, properties.getMethod(), properties.isVarargs(), properties.getSubstitutor());\n          }\n          final JavaResolveResult result = properties != null ? properties.getInfo() : ((PsiCallExpression)gParent).resolveMethodGenerics();\n          final boolean varargs = properties != null && properties.isVarargs() || result instanceof MethodCandidateInfo && ((MethodCandidateInfo)result).isVarargs();\n          PsiSubstitutor substitutor = PsiResolveHelper.ourGraphGuard.doPreventingRecursion(context, false,\n                                                                                            new Computable<PsiSubstitutor>() {\n                                                                                              @Override\n                                                                                              public PsiSubstitutor compute() {\n                                                                                                return result.getSubstitutor();\n                                                                                              }\n                                                                                            }\n          );\n          if (substitutor == null && properties != null) {\n            substitutor = properties.getSubstitutor();\n          }\n          return getTypeByMethod(context, argumentList, result.getElement(), varargs, substitutor);\n        }\n      }\n    } else if (parent instanceof PsiConditionalExpression) {\n      return getTargetType((PsiExpression)parent);\n    }\n    else if (parent instanceof PsiLambdaExpression) {\n      return getTargetTypeByContainingLambda((PsiLambdaExpression)parent);\n    }\n    else if (parent instanceof PsiReturnStatement) {\n      return getTargetTypeByContainingLambda(PsiTreeUtil.getParentOfType(parent, PsiLambdaExpression.class));\n    }\n    return null;\n  }","commit_id":"9a7d951e1e34a7abee4ef935f0c947566544b59f","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected PsiElement[] getVariables(Expression[] params, final ExpressionContext context) {\n    if (params.length != 0) return null;\n\n    Project project = context.getProject();\n    final int offset = context.getStartOffset();\n    PsiDocumentManager.getInstance(project).commitAllDocuments();\n    final ArrayList<PsiVariable> array = new ArrayList<PsiVariable>();\n    PsiFile file = PsiDocumentManager.getInstance(project).getPsiFile(context.getEditor().getDocument());\n    PsiElement place = file.findElementAt(offset);\n    PsiVariable[] variables = MacroUtil.getVariablesVisibleAt(place, \"\");\n    for (PsiVariable variable : variables) {\n      PsiType type = variable.getType();\n      if (type instanceof PsiArrayType) {\n        array.add(variable);\n      }\n    }\n    return array.toArray(new PsiVariable[array.size()]);\n  }","id":53554,"modified_method":"protected PsiElement[] getVariables(Expression[] params, final ExpressionContext context) {\n    if (params.length != 0) return null;\n\n    Project project = context.getProject();\n    final int offset = context.getStartOffset();\n    PsiDocumentManager.getInstance(project).commitAllDocuments();\n    final ArrayList<PsiVariable> array = new ArrayList<PsiVariable>();\n    PsiFile file = PsiDocumentManager.getInstance(project).getPsiFile(context.getEditor().getDocument());\n    PsiElement place = file.findElementAt(offset);\n    PsiVariable[] variables = MacroUtil.getVariablesVisibleAt(place, \"\");\n    for (PsiVariable variable : variables) {\n      PsiType type = VariableTypeCalculator.getVarTypeAt(variable, place);\n      if (type instanceof PsiArrayType) {\n        array.add(variable);\n      }\n    }\n    return array.toArray(new PsiVariable[array.size()]);\n  }","commit_id":"e362f6d8a39ffecafac355cf205a4062ca3c07c1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  public static GrControlFlowOwner findControlFlowOwner(PsiElement place) {\n    while (place.getParent() != null) {\n      place = place.getParent();\n      if (place instanceof GrClosableBlock) return (GrClosableBlock)place;\n      if (place instanceof GrMethod) return ((GrMethod)place).getBlock();\n      if (place instanceof GroovyFile) return (GroovyFile)place;\n    }\n    return null;\n  }","id":53555,"modified_method":"@Nullable\n  public static GrControlFlowOwner findControlFlowOwner(PsiElement place) {\n    while (true) {\n      place = place.getParent();\n      if (place == null) return null;\n      if (place instanceof GrClosableBlock) return (GrClosableBlock)place;\n      if (place instanceof GrMethod) return ((GrMethod)place).getBlock();\n      if (place instanceof GroovyFile) return (GroovyFile)place;\n      if (place instanceof GrClassInitializer) return ((GrClassInitializer)place).getBlock();\n    }\n  }","commit_id":"e362f6d8a39ffecafac355cf205a4062ca3c07c1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  protected PsiElement[] getVariables(Expression[] params, final ExpressionContext context) {\n    if (params.length != 0) return null;\n\n    final List<PsiElement> result = new ArrayList<PsiElement>();\n\n\n    Project project = context.getProject();\n    final int offset = context.getStartOffset();\n    PsiDocumentManager.getInstance(project).commitAllDocuments();\n    PsiFile file = PsiDocumentManager.getInstance(project).getPsiFile(context.getEditor().getDocument());\n    assert file != null;\n    PsiElement place = file.findElementAt(offset);\n    final PsiElementFactory elementFactory = JavaPsiFacade.getInstance(project).getElementFactory();\n    final GlobalSearchScope scope = file.getResolveScope();\n\n    PsiType iterableType = elementFactory.createTypeByFQClassName(\"java.lang.Iterable\", scope);\n    PsiType mapType = elementFactory.createTypeByFQClassName(\"java.util.Map\", scope);\n\n    PsiVariable[] variables = MacroUtil.getVariablesVisibleAt(place, \"\");\n    for (PsiVariable var : variables) {\n      final PsiElement parent = var.getParent();\n      if (parent instanceof PsiForeachStatement && parent == PsiTreeUtil.getParentOfType(place, PsiForeachStatement.class)) continue;\n\n      PsiType type = var.getType();\n      if (type instanceof PsiArrayType || iterableType.isAssignableFrom(type)) {\n        result.add(var);\n      }\n      else if (mapType.isAssignableFrom(type)) {\n        try {\n          result.add(elementFactory.createExpressionFromText(var.getName() + \".keySet()\", var.getParent()));\n          result.add(elementFactory.createExpressionFromText(var.getName() + \".values()\", var.getParent()));\n          result.add(elementFactory.createExpressionFromText(var.getName() + \".entrySet()\", var.getParent()));\n        }\n        catch (IncorrectOperationException e) {\n          LOG.error(e);\n        }\n      }\n    }\n    return PsiUtilBase.toPsiElementArray(result);\n  }","id":53556,"modified_method":"@Nullable\n  protected PsiElement[] getVariables(Expression[] params, final ExpressionContext context) {\n    if (params.length != 0) return null;\n\n    final List<PsiElement> result = new ArrayList<PsiElement>();\n\n\n    Project project = context.getProject();\n    final int offset = context.getStartOffset();\n    PsiDocumentManager.getInstance(project).commitAllDocuments();\n    PsiFile file = PsiDocumentManager.getInstance(project).getPsiFile(context.getEditor().getDocument());\n    assert file != null;\n    PsiElement place = file.findElementAt(offset);\n    final PsiElementFactory elementFactory = JavaPsiFacade.getInstance(project).getElementFactory();\n    final GlobalSearchScope scope = file.getResolveScope();\n\n    PsiType iterableType = elementFactory.createTypeByFQClassName(\"java.lang.Iterable\", scope);\n    PsiType mapType = elementFactory.createTypeByFQClassName(\"java.util.Map\", scope);\n\n    PsiVariable[] variables = MacroUtil.getVariablesVisibleAt(place, \"\");\n    for (PsiVariable var : variables) {\n      final PsiElement parent = var.getParent();\n      if (parent instanceof PsiForeachStatement && parent == PsiTreeUtil.getParentOfType(place, PsiForeachStatement.class)) continue;\n\n      PsiType type = VariableTypeCalculator.getVarTypeAt(var, place);\n      if (type instanceof PsiArrayType || iterableType.isAssignableFrom(type)) {\n        result.add(var);\n      }\n      else if (mapType.isAssignableFrom(type)) {\n        try {\n          result.add(elementFactory.createExpressionFromText(var.getName() + \".keySet()\", var.getParent()));\n          result.add(elementFactory.createExpressionFromText(var.getName() + \".values()\", var.getParent()));\n          result.add(elementFactory.createExpressionFromText(var.getName() + \".entrySet()\", var.getParent()));\n        }\n        catch (IncorrectOperationException e) {\n          LOG.error(e);\n        }\n      }\n    }\n    return PsiUtilBase.toPsiElementArray(result);\n  }","commit_id":"e362f6d8a39ffecafac355cf205a4062ca3c07c1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  public static PsiType getInferredType(@NotNull final GrReferenceExpression refExpr) {\n    return RecursionManager.doPreventingRecursion(refExpr, true, new Computable<PsiType>() {\n      @Override\n      public PsiType compute() {\n        @SuppressWarnings(\"unchecked\") GroovyPsiElement scope =\n          PsiTreeUtil.getParentOfType(refExpr, GrMethod.class, GrClosableBlock.class, GrClassInitializer.class, GroovyFileBase.class);\n        if (scope instanceof GrMethod) {\n          scope = ((GrMethod)scope).getBlock();\n        }\n        else if (scope instanceof GrClassInitializer) {\n          scope = ((GrClassInitializer)scope).getBlock();\n        }\n\n        if (scope != null) {\n          final Instruction[] flow = ((GrControlFlowOwner)scope).getControlFlow();\n          ReadWriteVariableInstruction instruction = findInstruction(refExpr, flow);\n          if (instruction == null) {\n            return null;\n          }\n          if (instruction.isWrite()) {\n            return getInitializerType(refExpr);\n          }\n\n          final Pair<ReachingDefinitionsDfaInstance, List<TIntObjectHashMap<TIntHashSet>>> pair = getDefUseMaps((GrControlFlowOwner)scope);\n\n          final int varIndex = pair.first.getVarIndex(refExpr.getReferenceName());\n          final TIntObjectHashMap<TIntHashSet> allDefs = pair.second.get(instruction.num());\n          final TIntHashSet varDefs = allDefs.get(varIndex);\n          if (varDefs != null) {\n            PsiType result = null;\n            for (int defIndex : varDefs.toArray()) {\n              PsiType defType = getDefinitionType(flow[defIndex]);\n              if (defType != null) {\n                defType = TypesUtil.boxPrimitiveType(defType, scope.getManager(), scope.getResolveScope());\n                result = result == null ? defType : TypesUtil.getLeastUpperBound(result, defType, scope.getManager());\n              }\n            }\n            return result;\n          }\n        }\n        return null;\n      }\n\n    });\n  }","id":53557,"modified_method":"@Nullable\n  public static PsiType getInferredType(@NotNull final GrReferenceExpression refExpr) {\n    return RecursionManager.doPreventingRecursion(refExpr, true, new Computable<PsiType>() {\n      @Override\n      public PsiType compute() {\n        final GrControlFlowOwner scope = ControlFlowUtils.findControlFlowOwner(refExpr);\n        if (scope == null) return null;\n\n        final Instruction[] flow = scope.getControlFlow();\n        ReadWriteVariableInstruction instruction = findInstruction(refExpr, flow);\n        if (instruction == null) return null;\n        \n        if (instruction.isWrite()) {\n          return getInitializerType(refExpr);\n        }\n\n        return getInferredType(refExpr.getReferenceName(), instruction, flow, scope);\n      }\n\n    });\n  }","commit_id":"e362f6d8a39ffecafac355cf205a4062ca3c07c1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  public static ReadWriteVariableInstruction findInstruction(final GrReferenceExpression refExpr, final Instruction[] flow) {\n    for (Instruction instruction : flow) {\n      if (instruction instanceof ReadWriteVariableInstruction && instruction.getElement() == refExpr) {\n        return (ReadWriteVariableInstruction)instruction;\n      }\n    }\n    return null;\n  }","id":53558,"modified_method":"@Nullable\n  private static ReadWriteVariableInstruction findInstruction(final GrReferenceExpression refExpr, final Instruction[] flow) {\n    for (Instruction instruction : flow) {\n      if (instruction instanceof ReadWriteVariableInstruction && instruction.getElement() == refExpr) {\n        return (ReadWriteVariableInstruction)instruction;\n      }\n    }\n    return null;\n  }","commit_id":"e362f6d8a39ffecafac355cf205a4062ca3c07c1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  protected PsiElement[] getVariables(Expression[] params, final ExpressionContext context) {\n    if (params.length != 1) return null;\n    final Result result = params[0].calculateResult(context);\n    if (result == null) return null;\n\n    Project project = context.getProject();\n    final int offset = context.getStartOffset();\n\n    PsiDocumentManager.getInstance(project).commitAllDocuments();\n\n    final ArrayList<PsiElement> array = new ArrayList<PsiElement>();\n    PsiType type = MacroUtil.resultToPsiType(result, context);\n    PsiFile file = PsiDocumentManager.getInstance(project).getPsiFile(context.getEditor().getDocument());\n    PsiElement place = file.findElementAt(offset);\n\n    PsiVariable[] variables = MacroUtil.getVariablesVisibleAt(place, \"\");\n    PsiManager manager = PsiManager.getInstance(project);\n    for (PsiVariable var : variables) {\n      if (var instanceof PsiField && var.hasModifierProperty(PsiModifier.STATIC)) {\n        PsiClass varClass = ((PsiField)var).getContainingClass();\n        PsiClass placeClass = PsiTreeUtil.getParentOfType(place, PsiClass.class);\n        if (!manager.areElementsEquivalent(varClass, placeClass)) continue;\n      }\n      else if (var instanceof PsiLocalVariable) {\n        final TextRange range = var.getNameIdentifier().getTextRange();\n        if (range != null && range.contains(offset)) {\n          continue;\n        }\n      }\n\n      PsiType type1 = var.getType();\n      if (type == null || type.isAssignableFrom(type1)) {\n        array.add(var);\n      }\n    }\n\n    PsiExpression[] expressions = MacroUtil.getStandardExpressionsOfType(place, type);\n    ContainerUtil.addAll(array, expressions);\n    return PsiUtilBase.toPsiElementArray(array);\n  }","id":53559,"modified_method":"@Nullable\n  protected PsiElement[] getVariables(Expression[] params, final ExpressionContext context) {\n    if (params.length != 1) return null;\n    final Result result = params[0].calculateResult(context);\n    if (result == null) return null;\n\n    Project project = context.getProject();\n    final int offset = context.getStartOffset();\n\n    PsiDocumentManager.getInstance(project).commitAllDocuments();\n\n    final ArrayList<PsiElement> array = new ArrayList<PsiElement>();\n    PsiType type = MacroUtil.resultToPsiType(result, context);\n    PsiFile file = PsiDocumentManager.getInstance(project).getPsiFile(context.getEditor().getDocument());\n    PsiElement place = file.findElementAt(offset);\n\n    PsiVariable[] variables = MacroUtil.getVariablesVisibleAt(place, \"\");\n    PsiManager manager = PsiManager.getInstance(project);\n    for (PsiVariable var : variables) {\n      if (var instanceof PsiField && var.hasModifierProperty(PsiModifier.STATIC)) {\n        PsiClass varClass = ((PsiField)var).getContainingClass();\n        PsiClass placeClass = PsiTreeUtil.getParentOfType(place, PsiClass.class);\n        if (!manager.areElementsEquivalent(varClass, placeClass)) continue;\n      }\n      else if (var instanceof PsiLocalVariable) {\n        final TextRange range = var.getNameIdentifier().getTextRange();\n        if (range != null && range.contains(offset)) {\n          continue;\n        }\n      }\n\n      PsiType type1 = VariableTypeCalculator.getVarTypeAt(var, place);\n      if (type == null || type.isAssignableFrom(type1)) {\n        array.add(var);\n      }\n    }\n\n    PsiExpression[] expressions = MacroUtil.getStandardExpressionsOfType(place, type);\n    ContainerUtil.addAll(array, expressions);\n    return PsiUtilBase.toPsiElementArray(array);\n  }","commit_id":"e362f6d8a39ffecafac355cf205a4062ca3c07c1","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@ApplicabilityLevelConstant\n  public int getPertinentApplicabilityLevel() {\n    if (myTypeArguments != null) {\n      return getApplicabilityLevel();\n    }\n\n    final PsiMethod method = getElement();\n    if (method != null && method.hasTypeParameters() || myArgumentList == null || !PsiUtil.isLanguageLevel8OrHigher(myArgumentList)) {\n      @ApplicabilityLevelConstant int level;\n      if (myArgumentTypes == null) {\n        return ApplicabilityLevel.NOT_APPLICABLE;\n      }\n      else {\n        final PsiSubstitutor substitutor = getSubstitutor();\n        level = ourOverloadGuard.doPreventingRecursion(myArgumentList, false, new Computable<Integer>() {\n          @Override\n          public Integer compute() {\n            return PsiUtil.getApplicabilityLevel(getElement(), substitutor, myArgumentTypes, myLanguageLevel);\n          }\n        });\n      }\n      if (level > ApplicabilityLevel.NOT_APPLICABLE && !isTypeArgumentsApplicable()) level = ApplicabilityLevel.NOT_APPLICABLE;\n      return level;\n    }\n    return ourOverloadGuard.doPreventingRecursion(myArgumentList, false, new Computable<Integer>() {\n      @Override\n      public Integer compute() {\n        return getApplicabilityLevelInner();\n      }\n    });\n  }","id":53560,"modified_method":"@ApplicabilityLevelConstant\n  public int getPertinentApplicabilityLevel() {\n    if (myTypeArguments != null) {\n      return getApplicabilityLevel();\n    }\n\n    final PsiMethod method = getElement();\n    if (method != null && method.hasTypeParameters() || myArgumentList == null || !PsiUtil.isLanguageLevel8OrHigher(myArgumentList)) {\n      @ApplicabilityLevelConstant int level;\n      if (myArgumentTypes == null) {\n        return ApplicabilityLevel.NOT_APPLICABLE;\n      }\n      else {\n        final PsiSubstitutor substitutor = getSubstitutor();\n        Integer boxedLevel = ourOverloadGuard.doPreventingRecursion(myArgumentList, false, new Computable<Integer>() {\n          @Override\n          public Integer compute() {\n            return PsiUtil.getApplicabilityLevel(getElement(), substitutor, myArgumentTypes, myLanguageLevel);\n          }\n        });\n        level = boxedLevel != null ? boxedLevel : getApplicabilityLevel();\n      }\n      if (level > ApplicabilityLevel.NOT_APPLICABLE && !isTypeArgumentsApplicable()) level = ApplicabilityLevel.NOT_APPLICABLE;\n      return level;\n    }\n    Integer boxedLevel = ourOverloadGuard.doPreventingRecursion(myArgumentList, false, new Computable<Integer>() {\n      @Override\n      public Integer compute() {\n        return getApplicabilityLevelInner();\n      }\n    });\n    return boxedLevel != null ? boxedLevel : getApplicabilityLevel();\n  }","commit_id":"8d22bd8af543ddcc4f8a1417cd238e7b79bb279e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void appendMirrorText(final int indentLevel, final StringBuffer buffer) {\n    myNameIdentifier.appendMirrorText(0, buffer);\n    buffer.append(\" = \");\n    ((ClsElementImpl)myMemberValue).appendMirrorText(0, buffer);\n  }","id":53561,"modified_method":"public void appendMirrorText(final int indentLevel, final StringBuffer buffer) {\n    if (myNameIdentifier.getText() != null) {\n      myNameIdentifier.appendMirrorText(0, buffer);\n      buffer.append(\" = \");\n    }\n    ((ClsElementImpl)myMemberValue).appendMirrorText(0, buffer);\n  }","commit_id":"38df2b3974346136a0d85dc477926d2947dd3424","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void setMirror(@NotNull TreeElement element) {\n    LOG.assertTrue(isValid());\n    LOG.assertTrue(!CHECK_MIRROR_ENABLED || myMirror == null);\n    myMirror = element;\n\n    PsiNameValuePair mirror = (PsiNameValuePair)SourceTreeToPsiMap.treeElementToPsi(element);\n      ((ClsElementImpl)getNameIdentifier()).setMirror((TreeElement)SourceTreeToPsiMap.psiElementToTree(mirror.getNameIdentifier()));\n      ((ClsElementImpl)getValue()).setMirror((TreeElement)SourceTreeToPsiMap.psiElementToTree(mirror.getValue()));\n  }","id":53562,"modified_method":"public void setMirror(@NotNull TreeElement element) {\n    LOG.assertTrue(isValid());\n    LOG.assertTrue(!CHECK_MIRROR_ENABLED || myMirror == null);\n    myMirror = element;\n\n    PsiNameValuePair mirror = (PsiNameValuePair)SourceTreeToPsiMap.treeElementToPsi(element);\n    final PsiIdentifier mirrorIdentifier = mirror.getNameIdentifier();\n    if (mirrorIdentifier != null) {\n      ((ClsElementImpl)getNameIdentifier()).setMirror((TreeElement)SourceTreeToPsiMap.psiElementToTree(mirrorIdentifier));\n    }\n    ((ClsElementImpl)getValue()).setMirror((TreeElement)SourceTreeToPsiMap.psiElementToTree(mirror.getValue()));\n  }","commit_id":"38df2b3974346136a0d85dc477926d2947dd3424","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static JavaPsiFacade getInstance(Project project) {\n    return IN_PROJECT_CACHE.get(project, null);\n  }","id":53563,"modified_method":"public static JavaPsiFacade getInstance(Project project) {\n    JavaPsiFacade facade = INSTANCE_CACHE.get(project);\n    if (facade == null) {\n      facade = ServiceManager.getService(project, JavaPsiFacade.class);\n      INSTANCE_CACHE.put(project, facade);\n    }\n\n    return facade;\n  }","commit_id":"38df2b3974346136a0d85dc477926d2947dd3424","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public PsiElement retrieve() {\n      return StubPathBuilder.resolve(myFile, myPath);\n    }","id":53564,"modified_method":"public PsiElement retrieve() {\n      return ApplicationManager.getApplication().runReadAction(new Computable<PsiElement>() {\n        public PsiElement compute() {\n          return StubPathBuilder.resolve(myFile, myPath);\n        }\n      });\n    }","commit_id":"38df2b3974346136a0d85dc477926d2947dd3424","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void appendMirrorText(final int indentLevel, final StringBuffer buffer) {\n    buffer.append(PsiBundle.message(\"psi.decompiled.text.header\"));\n    goNextLine(indentLevel, buffer);\n    goNextLine(indentLevel, buffer);\n    final PsiPackageStatement packageStatement = getPackageStatement();\n    if (packageStatement != null) {\n      ((ClsElementImpl)packageStatement).appendMirrorText(0, buffer);\n      goNextLine(indentLevel, buffer);\n      goNextLine(indentLevel, buffer);\n    }\n    PsiClass aClass = getClasses()[0];\n    ((ClsElementImpl)aClass).appendMirrorText(0, buffer);\n  }","id":53565,"modified_method":"public void appendMirrorText(final int indentLevel, final StringBuffer buffer) {\n    buffer.append(PsiBundle.message(\"psi.decompiled.text.header\"));\n    goNextLine(indentLevel, buffer);\n    goNextLine(indentLevel, buffer);\n    final PsiPackageStatement packageStatement = getPackageStatement();\n    if (packageStatement != null) {\n      ((ClsElementImpl)packageStatement).appendMirrorText(0, buffer);\n      goNextLine(indentLevel, buffer);\n      goNextLine(indentLevel, buffer);\n    }\n    \n    final PsiClass[] classes = getClasses();\n    if (classes.length > 0) {\n      PsiClass aClass = classes[0];\n      ((ClsElementImpl)aClass).appendMirrorText(0, buffer);\n    }\n  }","commit_id":"b41d5e4e1bab8e7c362eda8f4ea96feb4043640e","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static boolean nameCanBeImported(@NotNull String fqName,\n                                            @NotNull PsiElement context){\n        final PsiClass containingClass = ClassUtils.getContainingClass(context);\n        if (containingClass != null) {\n            if (fqName.equals(containingClass.getQualifiedName())) {\n                return true;\n            }\n            final String shortName = ClassUtil.extractClassName(fqName);\n            final PsiClass[] innerClasses = containingClass.getAllInnerClasses();\n            for (PsiClass innerClass : innerClasses) {\n                if (innerClass.hasModifierProperty(PsiModifier.PRIVATE)) {\n                    continue;\n                }\n                if (innerClass.hasModifierProperty(PsiModifier.PACKAGE_LOCAL)) {\n                    if (!ClassUtils.inSamePackage(innerClass, containingClass)) {\n                        continue;\n                    }\n                }\n                final String className = innerClass.getName();\n                if (shortName.equals(className)) {\n                    return false;\n                }\n            }\n        }\n        final PsiJavaFile file =\n                PsiTreeUtil.getParentOfType(context, PsiJavaFile.class);\n        if (file == null) {\n            return false;\n        }\n        if(hasExactImportConflict(fqName, file)){\n            return false;\n        }\n        if(hasOnDemandImportConflict(fqName, file, true)){\n            return false;\n        }\n        if(containsConflictingClass(fqName, file)){\n            return false;\n        }\n        return !containsConflictingClassName(fqName, file);\n    }","id":53566,"modified_method":"public static boolean nameCanBeImported(@NotNull String fqName,\n                                            @NotNull PsiElement context){\n        final PsiClass containingClass = PsiTreeUtil.getParentOfType(context, PsiClass.class);\n        if (containingClass != null) {\n            if (fqName.equals(containingClass.getQualifiedName())) {\n                return true;\n            }\n            final String shortName = ClassUtil.extractClassName(fqName);\n            final PsiClass[] innerClasses = containingClass.getAllInnerClasses();\n            for (PsiClass innerClass : innerClasses) {\n                if (innerClass.hasModifierProperty(PsiModifier.PRIVATE)) {\n                    continue;\n                }\n                if (innerClass.hasModifierProperty(PsiModifier.PACKAGE_LOCAL)) {\n                    if (!ClassUtils.inSamePackage(innerClass, containingClass)) {\n                        continue;\n                    }\n                }\n                final String className = innerClass.getName();\n                if (shortName.equals(className)) {\n                    return false;\n                }\n            }\n        }\n        final PsiJavaFile file =\n                PsiTreeUtil.getParentOfType(context, PsiJavaFile.class);\n        if (file == null) {\n            return false;\n        }\n        if(hasExactImportConflict(fqName, file)){\n            return false;\n        }\n        if(hasOnDemandImportConflict(fqName, file, true)){\n            return false;\n        }\n        if(containsConflictingClass(fqName, file)){\n            return false;\n        }\n        return !containsConflictingClassName(fqName, file);\n    }","commit_id":"8cf61b4579c00371a3bb57fc89e990cde9b6a425","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static boolean hasExactImportConflict(String fqName,\n                                                  PsiJavaFile file){\n        final PsiImportList imports = file.getImportList();\n        if(imports == null){\n            return false;\n        }\n        final PsiImportStatement[] importStatements = imports\n                .getImportStatements();\n        final int lastDotIndex = fqName.lastIndexOf((int) '.');\n        final String shortName = fqName.substring(lastDotIndex + 1);\n        final String dottedShortName = '.' + shortName;\n        for(final PsiImportStatement importStatement : importStatements){\n            if(!importStatement.isOnDemand()){\n                final String importName = importStatement.getQualifiedName();\n                if (importName ==  null){\n                    return false;\n                }\n                if(!importName.equals(fqName)){\n                    if(importName.endsWith(dottedShortName)){\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    }","id":53567,"modified_method":"private static boolean hasExactImportConflict(String fqName,\n                                                  PsiJavaFile file){\n        final PsiImportList imports = file.getImportList();\n        if(imports == null){\n            return false;\n        }\n        final PsiImportStatement[] importStatements =\n                imports.getImportStatements();\n        final int lastDotIndex = fqName.lastIndexOf((int) '.');\n        final String shortName = fqName.substring(lastDotIndex + 1);\n        final String dottedShortName = '.' + shortName;\n        for(final PsiImportStatement importStatement : importStatements){\n            if (importStatement.isOnDemand()) {\n                continue;\n            }\n            final String importName = importStatement.getQualifiedName();\n            if (importName ==  null){\n                return false;\n            }\n            if(!importName.equals(fqName)){\n                if(importName.endsWith(dottedShortName)){\n                    return true;\n                }\n            }\n        }\n        return false;\n    }","commit_id":"8cf61b4579c00371a3bb57fc89e990cde9b6a425","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void replaceAssertWithFail(\n                PsiMethodCallExpression callExpression)\n                throws IncorrectOperationException {\n            final PsiReferenceExpression methodExpression =\n                    callExpression.getMethodExpression();\n            final PsiMethod method = (PsiMethod)methodExpression.resolve();\n            assert method != null;\n            final PsiParameterList parameterList = method.getParameterList();\n            final PsiParameter[] parameters = parameterList.getParameters();\n            final PsiExpressionList argumentList =\n                    callExpression.getArgumentList();\n            final PsiExpression[] arguments = argumentList.getExpressions();\n            final PsiExpression message;\n            if (parameters.length == 2) {\n                message = arguments[0];\n            } else {\n                message = null;\n            }\n            @NonNls final StringBuilder newExpression = new StringBuilder();\n            final PsiMethod containingMethod =\n                    PsiTreeUtil.getParentOfType(callExpression, PsiMethod.class);\n            if (TestUtils.isJUnit4TestMethod(containingMethod)) {\n                newExpression.append(\"org.junit.Assert.\");\n            }\n            newExpression.append(\"fail(\");\n            if (message != null) {\n                newExpression.append(message.getText());\n            }\n            newExpression.append(')');\n            replaceExpressionAndShorten(callExpression,\n                    newExpression.toString());\n        }","id":53568,"modified_method":"private static void replaceAssertWithFail(\n                PsiMethodCallExpression callExpression)\n                throws IncorrectOperationException {\n            final PsiMethod method = callExpression.resolveMethod();\n            if (method == null) {\n                return;\n            }\n            final PsiExpressionList argumentList =\n                    callExpression.getArgumentList();\n            final PsiExpression[] arguments = argumentList.getExpressions();\n            final PsiExpression message;\n            if (arguments.length == 2) {\n                message = arguments[0];\n            } else {\n                message = null;\n            }\n            @NonNls final StringBuilder newExpression = new StringBuilder();\n            addStaticImportIfPossible(callExpression, \"fail\", newExpression);\n            newExpression.append(\"fail(\");\n            if (message != null) {\n                newExpression.append(message.getText());\n            }\n            newExpression.append(')');\n            replaceExpressionAndShorten(callExpression,\n                    newExpression.toString());\n        }","commit_id":"8cf61b4579c00371a3bb57fc89e990cde9b6a425","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void replaceAssertEqualsWithAssertLiteral(\n                PsiMethodCallExpression callExpression, Project project)\n                throws IncorrectOperationException {\n            final PsiReferenceExpression methodExpression =\n                    callExpression.getMethodExpression();\n            final PsiMethod method = (PsiMethod)methodExpression.resolve();\n            assert method != null;\n            final PsiParameterList parameterList = method.getParameterList();\n            final PsiParameter[] parameters = parameterList.getParameters();\n            final PsiManager psiManager = callExpression.getManager();\n            final GlobalSearchScope scope = GlobalSearchScope.allScope(project);\n            final PsiType stringType =\n                    PsiType.getJavaLangString(psiManager, scope);\n            final PsiType paramType1 = parameters[0].getType();\n            final PsiExpressionList argumentList =\n                    callExpression.getArgumentList();\n            final PsiExpression[] arguments = argumentList.getExpressions();\n            final int firstTestPosition;\n            final int secondTestPosition;\n            final PsiExpression message;\n            if (paramType1.equals(stringType) && parameters.length >= 3) {\n                firstTestPosition = 1;\n                secondTestPosition = 2;\n                message = arguments[0];\n            } else {\n                firstTestPosition = 0;\n                secondTestPosition = 1;\n                message = null;\n            }\n            final PsiExpression firstTestArgument = arguments[firstTestPosition];\n            final PsiExpression secondTestArgument = arguments[secondTestPosition];\n            final String literalValue;\n            final String compareValue;\n            if (isSimpleLiteral(firstTestArgument, secondTestArgument)) {\n                literalValue = firstTestArgument.getText();\n                compareValue = secondTestArgument.getText();\n            } else {\n                literalValue = secondTestArgument.getText();\n                compareValue = firstTestArgument.getText();\n            }\n            final String uppercaseLiteralValue =\n                    Character.toUpperCase(literalValue.charAt(0)) +\n                            literalValue.substring(1);\n            @NonNls final StringBuilder newExpression = new StringBuilder();\n            final PsiMethod containingMethod = PsiTreeUtil.getParentOfType(\n                    callExpression, PsiMethod.class);\n            if (TestUtils.isJUnit4TestMethod(containingMethod)) {\n                newExpression.append(\"org.junit.Assert.\");\n            }\n            newExpression.append(\"assert\");\n            newExpression.append(uppercaseLiteralValue);\n            newExpression.append('(');\n            if (message != null) {\n                newExpression.append(message.getText());\n                newExpression.append(',');\n            }\n            newExpression.append(compareValue);\n            newExpression.append(')');\n            replaceExpressionAndShorten(callExpression,\n                    newExpression.toString());\n        }","id":53569,"modified_method":"private static void replaceAssertEqualsWithAssertLiteral(\n                PsiMethodCallExpression callExpression, Project project)\n                throws IncorrectOperationException {\n            final PsiMethod method = callExpression.resolveMethod();\n            if (method == null) {\n                return;\n            }\n            final PsiParameterList parameterList = method.getParameterList();\n            final PsiParameter[] parameters = parameterList.getParameters();\n            final PsiManager psiManager = callExpression.getManager();\n            final GlobalSearchScope scope = GlobalSearchScope.allScope(project);\n            final PsiType stringType =\n                    PsiType.getJavaLangString(psiManager, scope);\n            final PsiType paramType1 = parameters[0].getType();\n            final PsiExpressionList argumentList =\n                    callExpression.getArgumentList();\n            final PsiExpression[] arguments = argumentList.getExpressions();\n            final int firstTestPosition;\n            final int secondTestPosition;\n            final PsiExpression message;\n            if (paramType1.equals(stringType) && parameters.length >= 3) {\n                firstTestPosition = 1;\n                secondTestPosition = 2;\n                message = arguments[0];\n            } else {\n                firstTestPosition = 0;\n                secondTestPosition = 1;\n                message = null;\n            }\n            final PsiExpression firstTestArgument = arguments[firstTestPosition];\n            final PsiExpression secondTestArgument = arguments[secondTestPosition];\n            final String literalValue;\n            final String compareValue;\n            if (isSimpleLiteral(firstTestArgument, secondTestArgument)) {\n                literalValue = firstTestArgument.getText();\n                compareValue = secondTestArgument.getText();\n            } else {\n                literalValue = secondTestArgument.getText();\n                compareValue = firstTestArgument.getText();\n            }\n            final String uppercaseLiteralValue =\n                    Character.toUpperCase(literalValue.charAt(0)) +\n                            literalValue.substring(1);\n            @NonNls final StringBuilder newExpression = new StringBuilder();\n            final String methodName = \"assert\" + uppercaseLiteralValue;\n            addStaticImportIfPossible(callExpression, methodName, newExpression);\n            newExpression.append(methodName);\n            newExpression.append('(');\n            if (message != null) {\n                newExpression.append(message.getText());\n                newExpression.append(',');\n            }\n            newExpression.append(compareValue);\n            newExpression.append(')');\n            replaceExpressionAndShorten(callExpression,\n                    newExpression.toString());\n        }","commit_id":"8cf61b4579c00371a3bb57fc89e990cde9b6a425","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void replaceAssertWithAssertNull(\n                PsiMethodCallExpression callExpression, Project project)\n                throws IncorrectOperationException {\n            final PsiReferenceExpression methodExpression =\n                    callExpression.getMethodExpression();\n            final PsiMethod method = (PsiMethod)methodExpression.resolve();\n            assert method != null;\n            final PsiParameterList parameterList = method.getParameterList();\n            final PsiParameter[] parameters = parameterList.getParameters();\n            final PsiManager psiManager = callExpression.getManager();\n            final GlobalSearchScope scope = GlobalSearchScope.allScope(project);\n            final PsiType stringType =\n                    PsiType.getJavaLangString(psiManager, scope);\n            final PsiType paramType1 = parameters[0].getType();\n            final PsiExpressionList argumentList =\n                    callExpression.getArgumentList();\n            final PsiExpression[] arguments = argumentList.getExpressions();\n            final int testPosition;\n            final PsiExpression message;\n            if (paramType1.equals(stringType) && parameters.length >= 2) {\n                testPosition = 1;\n                message = arguments[0];\n            } else {\n                testPosition = 0;\n                message = null;\n            }\n            final PsiBinaryExpression binaryExpression =\n                    (PsiBinaryExpression)arguments[testPosition];\n            final PsiExpression lhs = binaryExpression.getLOperand();\n            PsiExpression rhs = binaryExpression.getROperand();\n            if (rhs == null) {\n                return;\n            }\n            final IElementType tokenType =\n                    binaryExpression.getOperationTokenType();\n            if (!(lhs instanceof PsiLiteralExpression) &&\n                    rhs instanceof PsiLiteralExpression) {\n                rhs = lhs;\n            }\n            @NonNls final StringBuilder newExpression = new StringBuilder();\n            final PsiMethod containingMethod = PsiTreeUtil.getParentOfType(\n                    callExpression, PsiMethod.class);\n            if (TestUtils.isJUnit4TestMethod(containingMethod)) {\n                newExpression.append(\"org.junit.Assert.\");\n            }\n            final String methodName = methodExpression.getReferenceName();\n            if (\"assertFalse\".equals(methodName) ^\n                    tokenType.equals(JavaTokenType.NE)) {\n                newExpression.append(\"assertNotNull(\");\n            } else {\n                newExpression.append(\"assertNull(\");\n            }\n            if (message != null) {\n                newExpression.append(message.getText());\n                newExpression.append(',');\n            }\n            newExpression.append(rhs.getText());\n            newExpression.append(')');\n            replaceExpressionAndShorten(callExpression,\n                    newExpression.toString());\n        }","id":53570,"modified_method":"private static void replaceAssertWithAssertNull(\n                PsiMethodCallExpression callExpression, Project project)\n                throws IncorrectOperationException {\n            final PsiMethod method = callExpression.resolveMethod();\n            if (method == null) {\n                return;\n            }\n            final PsiParameterList parameterList = method.getParameterList();\n            final PsiParameter[] parameters = parameterList.getParameters();\n            final PsiManager psiManager = callExpression.getManager();\n            final GlobalSearchScope scope = GlobalSearchScope.allScope(project);\n            final PsiType stringType =\n                    PsiType.getJavaLangString(psiManager, scope);\n            final PsiType paramType1 = parameters[0].getType();\n            final PsiExpressionList argumentList =\n                    callExpression.getArgumentList();\n            final PsiExpression[] arguments = argumentList.getExpressions();\n            final int testPosition;\n            final PsiExpression message;\n            if (paramType1.equals(stringType) && parameters.length >= 2) {\n                testPosition = 1;\n                message = arguments[0];\n            } else {\n                testPosition = 0;\n                message = null;\n            }\n            final PsiBinaryExpression binaryExpression =\n                    (PsiBinaryExpression)arguments[testPosition];\n            final PsiExpression lhs = binaryExpression.getLOperand();\n            PsiExpression rhs = binaryExpression.getROperand();\n            if (rhs == null) {\n                return;\n            }\n            final IElementType tokenType =\n                    binaryExpression.getOperationTokenType();\n            if (!(lhs instanceof PsiLiteralExpression) &&\n                    rhs instanceof PsiLiteralExpression) {\n                rhs = lhs;\n            }\n            @NonNls final StringBuilder newExpression = new StringBuilder();\n            final PsiReferenceExpression methodExpression =\n                    callExpression.getMethodExpression();\n            final String methodName = methodExpression.getReferenceName();\n            final String memberName;\n            if (\"assertFalse\".equals(methodName) ^ tokenType.equals(JavaTokenType.NE)) {\n                memberName = \"assertNotNull\";\n            } else {\n                memberName = \"assertNull\";\n            }\n            addStaticImportIfPossible(callExpression, memberName, newExpression);\n            newExpression.append(memberName);\n            newExpression.append('(');\n            if (message != null) {\n                newExpression.append(message.getText());\n                newExpression.append(',');\n            }\n            newExpression.append(rhs.getText());\n            newExpression.append(')');\n            replaceExpressionAndShorten(callExpression,\n                    newExpression.toString());\n        }","commit_id":"8cf61b4579c00371a3bb57fc89e990cde9b6a425","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void replaceAssertWithAssertSame(\n                PsiMethodCallExpression callExpression, Project project)\n                throws IncorrectOperationException {\n            final PsiReferenceExpression methodExpression =\n                    callExpression.getMethodExpression();\n            final PsiMethod method = (PsiMethod)methodExpression.resolve();\n            assert method != null;\n            final PsiParameterList parameterList = method.getParameterList();\n            final PsiParameter[] parameters = parameterList.getParameters();\n            final PsiManager psiManager = callExpression.getManager();\n            final GlobalSearchScope scope = GlobalSearchScope.allScope(project);\n            final PsiType stringType =\n                    PsiType.getJavaLangString(psiManager, scope);\n            final PsiType paramType1 = parameters[0].getType();\n            final PsiExpressionList argumentList =\n                    callExpression.getArgumentList();\n            final PsiExpression[] arguments = argumentList.getExpressions();\n            final int testPosition;\n            final PsiExpression message;\n            if (paramType1.equals(stringType) && parameters.length >= 2) {\n                testPosition = 1;\n                message = arguments[0];\n            } else {\n                testPosition = 0;\n                message = null;\n            }\n            final PsiBinaryExpression binaryExpression =\n                    (PsiBinaryExpression)arguments[testPosition];\n            PsiExpression lhs = binaryExpression.getLOperand();\n            PsiExpression rhs = binaryExpression.getROperand();\n            final IElementType tokenType =\n                    binaryExpression.getOperationTokenType();\n            if (!(lhs instanceof PsiLiteralExpression) &&\n                    rhs instanceof PsiLiteralExpression) {\n                final PsiExpression temp = lhs;\n                lhs = rhs;\n                rhs = temp;\n            }\n            @NonNls final StringBuilder newExpression = new StringBuilder();\n            final PsiMethod containingMethod = PsiTreeUtil.getParentOfType(\n                    callExpression, PsiMethod.class);\n            if (TestUtils.isJUnit4TestMethod(containingMethod)) {\n                newExpression.append(\"org.junit.Assert.\");\n            }\n            final String methodName = methodExpression.getReferenceName();\n            if (\"assertFalse\".equals(methodName) ^\n                    tokenType.equals(JavaTokenType.NE)) {\n                newExpression.append(\"assertNotSame(\");\n            } else {\n                newExpression.append(\"assertSame(\");\n            }\n            if (message != null) {\n                newExpression.append(message.getText());\n                newExpression.append(',');\n            }\n            newExpression.append(lhs.getText());\n            newExpression.append(',');\n            assert rhs != null;\n            newExpression.append(rhs.getText());\n            newExpression.append(')');\n            replaceExpressionAndShorten(callExpression,\n                    newExpression.toString());\n        }","id":53571,"modified_method":"private static void replaceAssertWithAssertSame(\n                PsiMethodCallExpression callExpression, Project project)\n                throws IncorrectOperationException {\n            final PsiMethod method = callExpression.resolveMethod();\n            if (method == null) {\n                return;\n            }\n            final PsiParameterList parameterList = method.getParameterList();\n            final PsiParameter[] parameters = parameterList.getParameters();\n            final PsiManager psiManager = callExpression.getManager();\n            final GlobalSearchScope scope = GlobalSearchScope.allScope(project);\n            final PsiType stringType =\n                    PsiType.getJavaLangString(psiManager, scope);\n            final PsiType paramType1 = parameters[0].getType();\n            final PsiExpressionList argumentList =\n                    callExpression.getArgumentList();\n            final PsiExpression[] arguments = argumentList.getExpressions();\n            final int testPosition;\n            final PsiExpression message;\n            if (paramType1.equals(stringType) && parameters.length >= 2) {\n                testPosition = 1;\n                message = arguments[0];\n            } else {\n                testPosition = 0;\n                message = null;\n            }\n            final PsiBinaryExpression binaryExpression =\n                    (PsiBinaryExpression)arguments[testPosition];\n            PsiExpression lhs = binaryExpression.getLOperand();\n            PsiExpression rhs = binaryExpression.getROperand();\n            final IElementType tokenType =\n                    binaryExpression.getOperationTokenType();\n            if (!(lhs instanceof PsiLiteralExpression) &&\n                    rhs instanceof PsiLiteralExpression) {\n                final PsiExpression temp = lhs;\n                lhs = rhs;\n                rhs = temp;\n            }\n            if (rhs == null) {\n                return;\n            }\n            @NonNls final StringBuilder newExpression = new StringBuilder();\n            final PsiReferenceExpression methodExpression =\n                    callExpression.getMethodExpression();\n            final String methodName = methodExpression.getReferenceName();\n            final String memberName;\n            if (\"assertFalse\".equals(methodName) ^\n                    tokenType.equals(JavaTokenType.NE)) {\n                memberName = \"assertNotSame\";\n            } else {\n                memberName = \"assertSame\";\n            }\n            addStaticImportIfPossible(callExpression, memberName, newExpression);\n            newExpression.append(memberName);\n            newExpression.append('(');\n            if (message != null) {\n                newExpression.append(message.getText());\n                newExpression.append(',');\n            }\n            newExpression.append(lhs.getText());\n            newExpression.append(',');\n            newExpression.append(rhs.getText());\n            newExpression.append(')');\n            replaceExpressionAndShorten(callExpression,\n                    newExpression.toString());\n        }","commit_id":"8cf61b4579c00371a3bb57fc89e990cde9b6a425","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static void replaceAssertTrueWithAssertEquals(\n                PsiMethodCallExpression callExpression, Project project)\n                throws IncorrectOperationException {\n            final PsiReferenceExpression methodExpression =\n                    callExpression.getMethodExpression();\n            final PsiMethod method = (PsiMethod)methodExpression.resolve();\n            assert method != null;\n            final PsiParameterList parameterList = method.getParameterList();\n            final PsiParameter[] parameters = parameterList.getParameters();\n            final PsiManager psiManager = callExpression.getManager();\n            final GlobalSearchScope scope = GlobalSearchScope.allScope(project);\n            final PsiType stringType =\n                    PsiType.getJavaLangString(psiManager, scope);\n            final PsiType paramType1 = parameters[0].getType();\n            final PsiExpressionList argumentList =\n                    callExpression.getArgumentList();\n            final PsiExpression[] arguments = argumentList.getExpressions();\n            final int testPosition;\n            final PsiExpression message;\n            if (paramType1.equals(stringType) && parameters.length >= 2) {\n                testPosition = 1;\n                message = arguments[0];\n            } else {\n                testPosition = 0;\n                message = null;\n            }\n            final PsiExpression testArgument = arguments[testPosition];\n            PsiExpression lhs = null;\n            PsiExpression rhs = null;\n            if (testArgument instanceof PsiBinaryExpression) {\n                final PsiBinaryExpression binaryExpression =\n                        (PsiBinaryExpression)testArgument;\n                lhs = binaryExpression.getLOperand();\n                rhs = binaryExpression.getROperand();\n            } else if (testArgument instanceof PsiMethodCallExpression) {\n                final PsiMethodCallExpression call =\n                        (PsiMethodCallExpression)testArgument;\n                final PsiReferenceExpression equalityMethodExpression =\n                        call.getMethodExpression();\n                final PsiExpressionList equalityArgumentList =\n                        call.getArgumentList();\n                final PsiExpression[] equalityArgs =\n                        equalityArgumentList.getExpressions();\n                rhs = equalityArgs[0];\n                lhs = equalityMethodExpression.getQualifierExpression();\n            }\n            if (!(lhs instanceof PsiLiteralExpression) &&\n                    rhs instanceof PsiLiteralExpression) {\n                final PsiExpression temp = lhs;\n                lhs = rhs;\n                rhs = temp;\n            }\n            @NonNls final StringBuilder newExpression = new StringBuilder();\n            final PsiMethod containingMethod = PsiTreeUtil.getParentOfType(\n                    callExpression, PsiMethod.class);\n            if (TestUtils.isJUnit4TestMethod(containingMethod)) {\n                newExpression.append(\"org.junit.Assert.\");\n            }\n            newExpression.append(\"assertEquals(\");\n            if (message != null) {\n                newExpression.append(message.getText());\n                newExpression.append(',');\n            }\n            assert lhs != null;\n            newExpression.append(lhs.getText());\n            newExpression.append(',');\n            assert rhs != null;\n            newExpression.append(rhs.getText());\n            if (isFloatingPoint(lhs) || isFloatingPoint(rhs)) {\n                newExpression.append(\",0.0\");\n            }\n            newExpression.append(')');\n            replaceExpressionAndShorten(callExpression,\n                    newExpression.toString());\n        }","id":53572,"modified_method":"private static void replaceAssertTrueWithAssertEquals(\n                PsiMethodCallExpression callExpression, Project project)\n                throws IncorrectOperationException {\n            final PsiMethod method = callExpression.resolveMethod();\n            if (method == null) {\n                return;\n            }\n            final PsiParameterList parameterList = method.getParameterList();\n            final PsiParameter[] parameters = parameterList.getParameters();\n            final PsiManager psiManager = callExpression.getManager();\n            final GlobalSearchScope scope = GlobalSearchScope.allScope(project);\n            final PsiType stringType =\n                    PsiType.getJavaLangString(psiManager, scope);\n            final PsiType paramType1 = parameters[0].getType();\n            final PsiExpressionList argumentList =\n                    callExpression.getArgumentList();\n            final PsiExpression[] arguments = argumentList.getExpressions();\n            final int testPosition;\n            final PsiExpression message;\n            if (paramType1.equals(stringType) && parameters.length >= 2) {\n                testPosition = 1;\n                message = arguments[0];\n            } else {\n                testPosition = 0;\n                message = null;\n            }\n            final PsiExpression testArgument = arguments[testPosition];\n            PsiExpression lhs = null;\n            PsiExpression rhs = null;\n            if (testArgument instanceof PsiBinaryExpression) {\n                final PsiBinaryExpression binaryExpression =\n                        (PsiBinaryExpression)testArgument;\n                lhs = binaryExpression.getLOperand();\n                rhs = binaryExpression.getROperand();\n            } else if (testArgument instanceof PsiMethodCallExpression) {\n                final PsiMethodCallExpression call =\n                        (PsiMethodCallExpression)testArgument;\n                final PsiReferenceExpression equalityMethodExpression =\n                        call.getMethodExpression();\n                final PsiExpressionList equalityArgumentList =\n                        call.getArgumentList();\n                final PsiExpression[] equalityArgs =\n                        equalityArgumentList.getExpressions();\n                rhs = equalityArgs[0];\n                lhs = equalityMethodExpression.getQualifierExpression();\n            }\n            if (!(lhs instanceof PsiLiteralExpression) &&\n                    rhs instanceof PsiLiteralExpression) {\n                final PsiExpression temp = lhs;\n                lhs = rhs;\n                rhs = temp;\n            }\n            if (lhs == null || rhs == null) {\n                return;\n            }\n            @NonNls final StringBuilder newExpression = new StringBuilder();\n            addStaticImportIfPossible(callExpression, \"assertEquals\", newExpression);\n            newExpression.append(\"assertEquals(\");\n            if (message != null) {\n                newExpression.append(message.getText());\n                newExpression.append(',');\n            }\n            newExpression.append(lhs.getText());\n            newExpression.append(',');\n            newExpression.append(rhs.getText());\n            if (isFloatingPoint(lhs) || isFloatingPoint(rhs)) {\n                newExpression.append(\",0.0\");\n            }\n            newExpression.append(')');\n            replaceExpressionAndShorten(callExpression,\n                    newExpression.toString());\n        }","commit_id":"8cf61b4579c00371a3bb57fc89e990cde9b6a425","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n        public void doFix(Project project, ProblemDescriptor descriptor)\n                throws IncorrectOperationException {\n            final PsiElement methodNameIdentifier = descriptor.getPsiElement();\n            final PsiElement parent = methodNameIdentifier.getParent();\n            assert parent != null;\n            final PsiMethodCallExpression callExpression =\n                    (PsiMethodCallExpression)parent.getParent();\n            if (isAssertThatCouldBeAssertNull(callExpression)) {\n                replaceAssertWithAssertNull(callExpression, project);\n            } else  if (isAssertThatCouldBeAssertSame(callExpression)) {\n                replaceAssertWithAssertSame(callExpression, project);\n            } else if (isAssertTrueThatCouldBeAssertEquals(callExpression)) {\n                replaceAssertTrueWithAssertEquals(callExpression, project);\n            } else if (isAssertEqualsThatCouldBeAssertLiteral(callExpression)) {\n                replaceAssertEqualsWithAssertLiteral(callExpression, project);\n            } else if (isAssertThatCouldBeFail(callExpression)) {\n                replaceAssertWithFail(callExpression);\n            }\n        }","id":53573,"modified_method":"@Override\n        public void doFix(Project project, ProblemDescriptor descriptor)\n                throws IncorrectOperationException {\n            final PsiElement methodNameIdentifier = descriptor.getPsiElement();\n            final PsiElement parent = methodNameIdentifier.getParent();\n            if (parent == null) {\n                return;\n            }\n            final PsiMethodCallExpression callExpression =\n                    (PsiMethodCallExpression)parent.getParent();\n            if (isAssertThatCouldBeAssertNull(callExpression)) {\n                replaceAssertWithAssertNull(callExpression, project);\n            } else  if (isAssertThatCouldBeAssertSame(callExpression)) {\n                replaceAssertWithAssertSame(callExpression, project);\n            } else if (isAssertTrueThatCouldBeAssertEquals(callExpression)) {\n                replaceAssertTrueWithAssertEquals(callExpression, project);\n            } else if (isAssertEqualsThatCouldBeAssertLiteral(callExpression)) {\n                replaceAssertEqualsWithAssertLiteral(callExpression, project);\n            } else if (isAssertThatCouldBeFail(callExpression)) {\n                replaceAssertWithFail(callExpression);\n            }\n        }","commit_id":"8cf61b4579c00371a3bb57fc89e990cde9b6a425","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void processIntention(PsiElement element)\n            throws IncorrectOperationException {\n        final PsiMethodCallExpression call = (PsiMethodCallExpression)element;\n        final PsiReferenceExpression methodExpression =\n                call.getMethodExpression();\n        @NonNls final String fromMethodName =\n                methodExpression.getReferenceName();\n        @NonNls final String toMethodName;\n        if (\"assertTrue\".equals(fromMethodName)) {\n            toMethodName = \"assertFalse\";\n        } else {\n            toMethodName = \"assertTrue\";\n        }\n        final PsiElement qualifier =\n                methodExpression.getQualifier();\n        final String qualifierText;\n        if (qualifier == null) {\n            qualifierText = \"\";\n        } else {\n            qualifierText = qualifier.getText() + '.';\n        }\n        final PsiExpressionList argumentList = call.getArgumentList();\n        final PsiExpression[] args = argumentList.getExpressions();\n        final String callString;\n        if (args.length == 1) {\n            final PsiExpression arg = args[0];\n            callString = qualifierText + toMethodName + '(' +\n                    BoolUtils.getNegatedExpressionText(arg) + ')';\n        } else {\n            final PsiExpression arg = args[1];\n            callString = qualifierText + toMethodName + '(' +\n                    args[0].getText() + ',' +\n                    BoolUtils.getNegatedExpressionText(arg) + ')';\n        }\n        if (qualifier == null) {\n            final PsiMethod containingMethod =\n                    PsiTreeUtil.getParentOfType(call, PsiMethod.class);\n            if (containingMethod != null &&\n                AnnotationUtil.isAnnotated(containingMethod, \"org.junit.Test\", true)) {\n                ImportUtils.addStaticImport(element, \"org.junit.Assert\", toMethodName);\n            }\n        }\n        replaceExpression(callString, call);\n    }","id":53574,"modified_method":"@Override\n    public void processIntention(PsiElement element)\n            throws IncorrectOperationException {\n        final PsiMethodCallExpression call = (PsiMethodCallExpression)element;\n        final PsiReferenceExpression methodExpression =\n                call.getMethodExpression();\n        @NonNls final String fromMethodName =\n                methodExpression.getReferenceName();\n        @NonNls final String toMethodName;\n        if (\"assertTrue\".equals(fromMethodName)) {\n            toMethodName = \"assertFalse\";\n        } else {\n            toMethodName = \"assertTrue\";\n        }\n        final StringBuilder newCall = new StringBuilder();\n        final PsiElement qualifier = methodExpression.getQualifier();\n        if (qualifier == null) {\n            final PsiMethod containingMethod =\n                    PsiTreeUtil.getParentOfType(call, PsiMethod.class);\n            if (containingMethod != null &&\n                AnnotationUtil.isAnnotated(containingMethod, \"org.junit.Test\", true)) {\n                if (ImportUtils.nameCanBeStaticallyImported(\n                        \"org.junit.Assert\", toMethodName, element)) {\n                    ImportUtils.addStaticImport(\"org.junit.Assert\", toMethodName, element);\n                } else {\n                    newCall.append(\"org.junit.Assert.\");\n                }\n            }\n        } else {\n            newCall.append(qualifier.getText());\n            newCall.append('.');\n        }\n        newCall.append(toMethodName);\n        newCall.append('(');\n        final PsiExpressionList argumentList = call.getArgumentList();\n        final PsiExpression[] args = argumentList.getExpressions();\n        if (args.length == 1) {\n            newCall.append(BoolUtils.getNegatedExpressionText(args[0]));\n        } else {\n            newCall.append(BoolUtils.getNegatedExpressionText(args[1]));\n        }\n        newCall.append(')');\n        replaceExpression(newCall.toString(), call);\n    }","commit_id":"11940b1627e97955adb6e7402027c367d473e5f9","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override public void visitReferenceElement(\n                PsiJavaCodeReferenceElement reference) {\n            super.visitReferenceElement(reference);\n            if (m_referenceFound) {\n                return;\n            }\n            final String text = reference.getText();\n            if (text.indexOf((int)'.') >= 0 || !m_name.equals(text)) {\n                return;\n            }\n            final PsiElement element = reference.resolve();\n            if (!(element instanceof PsiClass)\n                || element instanceof PsiTypeParameter) {\n                return;\n            }\n            final PsiClass aClass = (PsiClass) element;\n            final String testClassName = aClass.getName();\n            final String testClassQualifiedName = aClass.getQualifiedName();\n            if (testClassQualifiedName == null || testClassName == null\n                || testClassQualifiedName.equals(fullyQualifiedName) ||\n                !testClassName.equals(m_name)) {\n                return;\n            }\n            m_referenceFound = true;\n        }","id":53575,"modified_method":"@Override public void visitReferenceElement(\n                PsiJavaCodeReferenceElement reference) {\n            super.visitReferenceElement(reference);\n            if (referenceFound) {\n                return;\n            }\n            final String text = reference.getText();\n            if (text.indexOf((int)'.') >= 0 || !name.equals(text)) {\n                return;\n            }\n            final PsiElement element = reference.resolve();\n            if (!(element instanceof PsiClass)\n                    || element instanceof PsiTypeParameter) {\n                return;\n            }\n            final PsiClass aClass = (PsiClass) element;\n            final String testClassName = aClass.getName();\n            final String testClassQualifiedName = aClass.getQualifiedName();\n            if (testClassQualifiedName == null || testClassName == null\n                    || testClassQualifiedName.equals(fullyQualifiedName) ||\n                    !testClassName.equals(name)) {\n                return;\n            }\n            referenceFound = true;\n        }","commit_id":"11940b1627e97955adb6e7402027c367d473e5f9","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static List<PsiJavaCodeReferenceElement> getImportsFromClass(\n            @NotNull PsiImportList importList, @NotNull String className){\n        final List<PsiJavaCodeReferenceElement> imports =\n                new ArrayList<PsiJavaCodeReferenceElement>();\n        for (PsiImportStaticStatement staticStatement : importList.getImportStaticStatements()) {\n            final PsiClass psiClass = staticStatement.resolveTargetClass();\n            if (psiClass == null) {\n                continue;\n            }\n            if (!className.equals(psiClass.getQualifiedName())) {\n                continue;\n            }\n            imports.add(staticStatement.getImportReference());\n        }\n        return imports;\n    }","id":53576,"modified_method":"private static List<PsiImportStaticStatement> getMatchingImports(\n            @NotNull PsiImportList importList, @NotNull String className){\n        final List<PsiImportStaticStatement> imports = new ArrayList();\n        for (PsiImportStaticStatement staticStatement : importList.getImportStaticStatements()) {\n            final PsiClass psiClass = staticStatement.resolveTargetClass();\n            if (psiClass == null) {\n                continue;\n            }\n            if (!className.equals(psiClass.getQualifiedName())) {\n                continue;\n            }\n            imports.add(staticStatement);\n        }\n        return imports;\n    }","commit_id":"11940b1627e97955adb6e7402027c367d473e5f9","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private ClassReferenceVisitor(String fullyQualifiedName) {\n            super();\n            m_name = ClassUtil.extractClassName(fullyQualifiedName);\n            this.fullyQualifiedName = fullyQualifiedName;\n        }","id":53577,"modified_method":"private ClassReferenceVisitor(String fullyQualifiedName) {\n            name = ClassUtil.extractClassName(fullyQualifiedName);\n            this.fullyQualifiedName = fullyQualifiedName;\n        }","commit_id":"11940b1627e97955adb6e7402027c367d473e5f9","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private static boolean hasExactImportConflict(String fqName,\n                                                  PsiJavaFile file){\n        final PsiImportList imports = file.getImportList();\n        if(imports == null){\n            return false;\n        }\n        final PsiImportStatement[] importStatements = imports\n                .getImportStatements();\n        final int lastDotIndex = fqName.lastIndexOf((int) '.');\n        final String shortName = fqName.substring(lastDotIndex + 1);\n        final String dottedShortName = '.' + shortName;\n        for(final PsiImportStatement importStatement : importStatements){\n            if(!importStatement.isOnDemand()){\n                final String importName = importStatement.getQualifiedName();\n                if (importName ==  null){\n                    return false;\n                }\n                if(!importName.equals(fqName)){\n                    if(importName.endsWith(dottedShortName)){\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    }","id":53578,"modified_method":"private static boolean hasExactImportConflict(String fqName,\n                                                  PsiJavaFile file){\n        final PsiImportList imports = file.getImportList();\n        if(imports == null){\n            return false;\n        }\n        final PsiImportStatement[] importStatements =\n                imports.getImportStatements();\n        final int lastDotIndex = fqName.lastIndexOf((int) '.');\n        final String shortName = fqName.substring(lastDotIndex + 1);\n        final String dottedShortName = '.' + shortName;\n        for(final PsiImportStatement importStatement : importStatements){\n            if (importStatement.isOnDemand()) {\n                continue;\n            }\n            final String importName = importStatement.getQualifiedName();\n            if (importName ==  null){\n                return false;\n            }\n            if(!importName.equals(fqName)){\n                if(importName.endsWith(dottedShortName)){\n                    return true;\n                }\n            }\n        }\n        return false;\n    }","commit_id":"11940b1627e97955adb6e7402027c367d473e5f9","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static void addStaticImport(PsiElement context, String qualifierClass, String memberName)\n            throws IncorrectOperationException {\n        final PsiFile psiFile = context.getContainingFile();\n        if (!(psiFile instanceof PsiJavaFile)) {\n            return;\n        }\n        final Project project = context.getProject();\n        final GlobalSearchScope scope = context.getResolveScope();\n        final JavaPsiFacade psiFacade = JavaPsiFacade.getInstance(project);\n        final PsiClass aClass = psiFacade.findClass(qualifierClass, scope);\n        if (aClass == null) {\n            return;\n        }\n        final PsiJavaFile javaFile = (PsiJavaFile)psiFile;\n        final PsiImportList importList = javaFile.getImportList();\n        if (importList == null) {\n            return;\n        }\n        final String qualifiedName  = aClass.getQualifiedName();\n        if (qualifiedName == null) {\n            return;\n        }\n        final List<PsiJavaCodeReferenceElement> imports =\n                getImportsFromClass(importList, qualifiedName);\n        final CodeStyleSettings codeStyleSettings = CodeStyleSettingsManager.getSettings(project);\n        final PsiElementFactory elementFactory = psiFacade.getElementFactory();\n        if (imports.size() < codeStyleSettings.NAMES_COUNT_TO_USE_IMPORT_ON_DEMAND) {\n            importList.add(elementFactory.createImportStaticStatement(aClass, memberName));\n        } else {\n            for (PsiJavaCodeReferenceElement ref : imports) {\n                final PsiImportStaticStatement importStatement =\n                        PsiTreeUtil.getParentOfType(ref, PsiImportStaticStatement.class);\n                if (importStatement != null) {\n                    importStatement.delete();\n                }\n            }\n            importList.add(elementFactory.createImportStaticStatement(aClass, \"*\"));\n        }\n    }","id":53579,"modified_method":"public static void addStaticImport(@NotNull String qualifierClass, @NotNull String memberName,\n                                       @NotNull PsiElement context)\n            throws IncorrectOperationException {\n        final PsiClass containingClass = PsiTreeUtil.getParentOfType(context, PsiClass.class);\n        if (isSubclass(containingClass, qualifierClass)) {\n            return;\n        }\n        final PsiFile psiFile = context.getContainingFile();\n        if (!(psiFile instanceof PsiJavaFile)) {\n            return;\n        }\n        final PsiJavaFile javaFile = (PsiJavaFile)psiFile;\n        final PsiImportList importList = javaFile.getImportList();\n        if (importList == null) {\n            return;\n        }\n        final PsiImportStatementBase existingImportStatement =\n                importList.findSingleImportStatement(memberName);\n        if (existingImportStatement != null) {\n            return;\n        } else {\n            final PsiImportStaticStatement onDemandImportStatement =\n                    findOnDemandImportStaticStatement(importList, qualifierClass);\n            if (onDemandImportStatement != null) {\n                if (!hasOnDemandImportStaticConflict(qualifierClass, memberName, context)) {\n                    return;\n                }\n            }\n        }\n        final Project project = context.getProject();\n        final GlobalSearchScope scope = context.getResolveScope();\n        final JavaPsiFacade psiFacade = JavaPsiFacade.getInstance(project);\n        final PsiClass aClass = psiFacade.findClass(qualifierClass, scope);\n        if (aClass == null) {\n            return;\n        }\n        final String qualifiedName  = aClass.getQualifiedName();\n        if (qualifiedName == null) {\n            return;\n        }\n        final List<PsiImportStaticStatement> imports =\n                getMatchingImports(importList, qualifiedName);\n        final CodeStyleSettings codeStyleSettings = CodeStyleSettingsManager.getSettings(project);\n        final PsiElementFactory elementFactory = psiFacade.getElementFactory();\n        if (imports.size() < codeStyleSettings.NAMES_COUNT_TO_USE_IMPORT_ON_DEMAND) {\n            importList.add(elementFactory.createImportStaticStatement(aClass, memberName));\n        } else {\n            for (PsiImportStaticStatement importStatement : imports) {\n                importStatement.delete();\n            }\n            importList.add(elementFactory.createImportStaticStatement(aClass, \"*\"));\n        }\n    }","commit_id":"11940b1627e97955adb6e7402027c367d473e5f9","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public boolean isReferenceFound(){\n            return m_referenceFound;\n        }","id":53580,"modified_method":"public boolean isReferenceFound(){\n            return referenceFound;\n        }","commit_id":"11940b1627e97955adb6e7402027c367d473e5f9","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void processIntention(PsiElement element)\n            throws IncorrectOperationException {\n        final PsiMethodCallExpression call =\n                (PsiMethodCallExpression)element;\n        final PsiReferenceExpression expression = call.getMethodExpression();\n        final PsiElement qualifier = expression.getQualifier();\n        final String qualifierText;\n        if (qualifier == null) {\n            qualifierText = \"\";\n        } else {\n            qualifierText = qualifier.getText() + '.';\n        }\n        final PsiExpressionList argumentList = call.getArgumentList();\n        final PsiExpression[] args = argumentList.getExpressions();\n        final String callString;\n        final String assertString;\n        if (args.length == 2) {\n            @NonNls final String argText = args[0].getText();\n            final PsiExpression otherArg;\n            if (\"true\".equals(argText) ||\n                    \"false\".equals(argText) ||\n                    \"null\".equals(argText)) {\n                otherArg = args[1];\n            } else {\n                otherArg = args[0];\n            }\n            assertString = getAssertString(argText);\n            callString = qualifierText + assertString + '(' +\n                    otherArg.getText() + ')';\n        } else {\n            @NonNls final String argText = args[1].getText();\n            final PsiExpression otherArg;\n            if (\"true\".equals(argText) ||\n                    \"false\".equals(argText) ||\n                    \"null\".equals(argText)) {\n                otherArg = args[2];\n            } else {\n                otherArg = args[1];\n            }\n            assertString = getAssertString(argText);\n            callString = qualifierText + assertString + '(' +\n                    args[0].getText() + \", \" + otherArg.getText() + ')';\n        }\n        if (qualifier == null) {\n            final PsiMethod containingMethod =\n                    PsiTreeUtil.getParentOfType(call, PsiMethod.class);\n            if (containingMethod != null &&\n                AnnotationUtil.isAnnotated(containingMethod, \"org.junit.Test\", true)) {\n                ImportUtils.addStaticImport(element, \"org.junit.Assert\", assertString);\n            }\n        }\n        replaceExpression(callString, call);\n    }","id":53581,"modified_method":"@Override\n    public void processIntention(PsiElement element)\n            throws IncorrectOperationException {\n        final PsiMethodCallExpression call =\n                (PsiMethodCallExpression)element;\n        final PsiReferenceExpression expression = call.getMethodExpression();\n        final PsiExpressionList argumentList = call.getArgumentList();\n        final PsiExpression[] args = argumentList.getExpressions();\n        final String assertString;\n        final String actualArgumentText;\n        if (args.length == 2) {\n            @NonNls final String argText = args[0].getText();\n            final PsiExpression otherArg;\n            if (\"true\".equals(argText) ||\n                \"false\".equals(argText) ||\n                \"null\".equals(argText)) {\n                otherArg = args[1];\n            } else {\n                otherArg = args[0];\n            }\n            actualArgumentText = otherArg.getText();\n            assertString = getAssertString(argText);\n        } else {\n            @NonNls final String argText = args[1].getText();\n            final PsiExpression otherArg;\n            if (\"true\".equals(argText) ||\n                \"false\".equals(argText) ||\n                \"null\".equals(argText)) {\n                otherArg = args[2];\n            } else {\n                otherArg = args[1];\n            }\n            actualArgumentText = otherArg.getText();\n            assertString = getAssertString(argText);\n        }\n        final PsiElement qualifier = expression.getQualifier();\n        final StringBuilder newExpression = new StringBuilder();\n        if (qualifier == null) {\n            final PsiMethod containingMethod =\n                    PsiTreeUtil.getParentOfType(call, PsiMethod.class);\n            if (containingMethod != null &&\n                AnnotationUtil.isAnnotated(containingMethod, \"org.junit.Test\", true)) {\n                if (ImportUtils.nameCanBeStaticallyImported(\n                        \"org.junit.Assert\", assertString, element)) {\n                    ImportUtils.addStaticImport(\"org.junit.Assert\", assertString, element);\n                } else {\n                    newExpression.append(\"org.junit.Assert.\");\n                }\n            }\n        } else {\n            newExpression.append(qualifier.getText());\n            newExpression.append('.');\n        }\n        newExpression.append(assertString);\n        newExpression.append('(');\n        newExpression.append(actualArgumentText);\n        newExpression.append(')');\n        replaceExpression(newExpression.toString(), call);\n    }","commit_id":"11940b1627e97955adb6e7402027c367d473e5f9","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public void processIntention(@NotNull PsiElement element)\n            throws IncorrectOperationException {\n        final PsiMethodCallExpression call = (PsiMethodCallExpression)element;\n        final PsiReferenceExpression methodExpression = call.getMethodExpression();\n        @NonNls final String methodName = methodExpression.getReferenceName();\n        if (methodName == null) {\n            return;\n        }\n        final StringBuilder newExpression = new StringBuilder();\n        final PsiElement qualifier = methodExpression.getQualifier();\n        if (qualifier != null) {\n            newExpression.append(qualifier.getText());\n            newExpression.append('.');\n        } else {\n            final PsiMethod containingMethod =\n                    PsiTreeUtil.getParentOfType(call, PsiMethod.class);\n            if (containingMethod != null &&\n                AnnotationUtil.isAnnotated(containingMethod, \"org.junit.Test\", true)) {\n                ImportUtils.addStaticImport(element, \"org.junit.Assert\", \"assertEquals\");\n            }\n        }\n        newExpression.append(\"assertEquals(\");\n        final String postfix = methodName.substring(\"assert\".length());\n        final String literal = postfix.toLowerCase();\n        final PsiExpressionList argumentList = call.getArgumentList();\n        final PsiExpression[] arguments = argumentList.getExpressions();\n        if (arguments.length > 1) {\n            newExpression.append(arguments[0].getText());\n            newExpression.append(\", \");\n        }\n        final PsiExpression lastArgument = arguments[arguments.length - 1];\n        if (lastArgument instanceof PsiBinaryExpression) {\n            final PsiBinaryExpression binaryExpression =\n                    (PsiBinaryExpression)lastArgument;\n            final IElementType tokenType =\n                    binaryExpression.getOperationTokenType();\n            if ((\"assertTrue\".equals(methodName) &&\n                                JavaTokenType.EQEQ.equals(tokenType)) ||\n                    (\"assertFalse\".equals(methodName) &&\n                            JavaTokenType.NE.equals(tokenType))) {\n                final PsiExpression lhs = binaryExpression.getLOperand();\n                newExpression.append(lhs.getText());\n                newExpression.append(\", \");\n                final PsiExpression rhs = binaryExpression.getROperand();\n                if (rhs != null) {\n                    newExpression.append(rhs.getText());\n                }\n            } else {\n                newExpression.append(literal);\n                newExpression.append(\", \");\n                newExpression.append(lastArgument.getText());\n            }\n        } else {\n            newExpression.append(literal);\n            newExpression.append(\", \");\n            newExpression.append(lastArgument.getText());\n        }\n        newExpression.append(')');\n        replaceExpression(newExpression.toString(), call);\n    }","id":53582,"modified_method":"@Override\n    public void processIntention(@NotNull PsiElement element)\n            throws IncorrectOperationException {\n        final PsiMethodCallExpression call = (PsiMethodCallExpression)element;\n        final PsiReferenceExpression methodExpression = call.getMethodExpression();\n        @NonNls final String methodName = methodExpression.getReferenceName();\n        if (methodName == null) {\n            return;\n        }\n        final StringBuilder newExpression = new StringBuilder();\n        final PsiElement qualifier = methodExpression.getQualifier();\n        if (qualifier == null) {\n            final PsiMethod containingMethod =\n                    PsiTreeUtil.getParentOfType(call, PsiMethod.class);\n            if (containingMethod != null &&\n                AnnotationUtil.isAnnotated(containingMethod, \"org.junit.Test\", true)) {\n                if (ImportUtils.nameCanBeStaticallyImported(\n                        \"org.junit.Assert\", \"assertEquals\", element)) {\n                    ImportUtils.addStaticImport(\"org.junit.Assert\", \"assertEquals\", element);\n                } else {\n                    newExpression.append(\"org.junit.Assert.\");\n                }\n            }\n        } else {\n            newExpression.append(qualifier.getText());\n            newExpression.append('.');\n        }\n        newExpression.append(\"assertEquals(\");\n        final String postfix = methodName.substring(\"assert\".length());\n        final String literal = postfix.toLowerCase();\n        final PsiExpressionList argumentList = call.getArgumentList();\n        final PsiExpression[] arguments = argumentList.getExpressions();\n        if (arguments.length > 1) {\n            newExpression.append(arguments[0].getText());\n            newExpression.append(\", \");\n        }\n        final PsiExpression lastArgument = arguments[arguments.length - 1];\n        if (lastArgument instanceof PsiBinaryExpression) {\n            final PsiBinaryExpression binaryExpression =\n                    (PsiBinaryExpression)lastArgument;\n            final IElementType tokenType =\n                    binaryExpression.getOperationTokenType();\n            if ((\"assertTrue\".equals(methodName) &&\n                                JavaTokenType.EQEQ.equals(tokenType)) ||\n                    (\"assertFalse\".equals(methodName) &&\n                            JavaTokenType.NE.equals(tokenType))) {\n                final PsiExpression lhs = binaryExpression.getLOperand();\n                newExpression.append(lhs.getText());\n                newExpression.append(\", \");\n                final PsiExpression rhs = binaryExpression.getROperand();\n                if (rhs != null) {\n                    newExpression.append(rhs.getText());\n                }\n            } else {\n                newExpression.append(literal);\n                newExpression.append(\", \");\n                newExpression.append(lastArgument.getText());\n            }\n        } else {\n            newExpression.append(literal);\n            newExpression.append(\", \");\n            newExpression.append(lastArgument.getText());\n        }\n        newExpression.append(')');\n        replaceExpression(newExpression.toString(), call);\n    }","commit_id":"11940b1627e97955adb6e7402027c367d473e5f9","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void testExecutionUsingABaseDirectory()\n        throws Exception\n    {\n        File testDirectory = new File( basedir, \"src/test/embedder-test-project\" );\n\n        File targetDirectory = new File( basedir, \"target/embedder-test-project0\" );\n\n        FileUtils.copyDirectoryStructure( testDirectory, targetDirectory );\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest()\n            .setBaseDirectory( targetDirectory )\n            .setGoals( Arrays.asList( new String[]{ \"package\" } ) );\n\n        MavenExecutionResult result = maven.execute( request );\n\n        MavenProject project = result.getMavenProject();\n\n        assertEquals( \"embedder-test-project\", project.getArtifactId() );\n\n        File jar = new File( targetDirectory, \"target/embedder-test-project-1.0-SNAPSHOT.jar\" );\n\n        assertTrue( jar.exists() );\n    }","id":53583,"modified_method":"public void testExecutionUsingABaseDirectory()\n        throws Exception\n    {\n        File testDirectory = new File( basedir, \"src/test/embedder-test-project\" );\n\n        File targetDirectory = new File( basedir, \"target/embedder-test-project0\" );\n\n        FileUtils.copyDirectoryStructure( testDirectory, targetDirectory );\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest()\n            .setBaseDirectory( targetDirectory )\n            .setShowErrors( true )\n            .setGoals( Arrays.asList( new String[]{ \"package\" } ) );\n\n        MavenExecutionResult result = maven.execute( request );\n\n        MavenProject project = result.getMavenProject();\n\n        assertEquals( \"embedder-test-project\", project.getArtifactId() );\n\n        File jar = new File( targetDirectory, \"target/embedder-test-project-1.0-SNAPSHOT.jar\" );\n\n        assertTrue( jar.exists() );\n    }","commit_id":"01b08e86d1c69519f6c1a70915572a31fadae58e","url":"https://github.com/apache/maven"},{"original_method":"public void testExecutionUsingAPomFile()\n        throws Exception\n    {\n        File testDirectory = new File( basedir, \"src/test/embedder-test-project\" );\n\n        File targetDirectory = new File( basedir, \"target/embedder-test-project1\" );\n\n        FileUtils.copyDirectoryStructure( testDirectory, targetDirectory );\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest()\n            .setPomFile( new File( targetDirectory, \"pom.xml\" ).getAbsolutePath() )\n            .setGoals( Arrays.asList( new String[]{ \"package\" } ) );\n\n        MavenExecutionResult result = maven.execute( request );\n\n        MavenProject project = result.getMavenProject();\n\n        assertEquals( \"embedder-test-project\", project.getArtifactId() );\n\n        File jar = new File( targetDirectory, \"target/embedder-test-project-1.0-SNAPSHOT.jar\" );\n\n        assertTrue( jar.exists() );\n    }","id":53584,"modified_method":"public void testExecutionUsingAPomFile()\n        throws Exception\n    {\n        File testDirectory = new File( basedir, \"src/test/embedder-test-project\" );\n\n        File targetDirectory = new File( basedir, \"target/embedder-test-project1\" );\n\n        FileUtils.copyDirectoryStructure( testDirectory, targetDirectory );\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest()\n            .setPomFile( new File( targetDirectory, \"pom.xml\" ).getAbsolutePath() )\n            .setShowErrors( true )\n            .setGoals( Arrays.asList( new String[]{ \"package\" } ) );\n\n        MavenExecutionResult result = maven.execute( request );\n\n        MavenProject project = result.getMavenProject();\n\n        assertEquals( \"embedder-test-project\", project.getArtifactId() );\n\n        File jar = new File( targetDirectory, \"target/embedder-test-project-1.0-SNAPSHOT.jar\" );\n\n        assertTrue( jar.exists() );\n    }","commit_id":"01b08e86d1c69519f6c1a70915572a31fadae58e","url":"https://github.com/apache/maven"},{"original_method":"public void testProjectReading()\n        throws Exception\n    {\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest().setPomFile( getPomFile().getAbsolutePath() );\n\n        MavenExecutionResult result = maven.readProjectWithDependencies( request );\n\n        assertEquals( \"org.apache.maven\", result.getMavenProject().getGroupId() );\n\n        Set artifacts = result.getMavenProject().getArtifacts();\n\n        assertEquals( 1, artifacts.size() );\n\n        Artifact artifact = (Artifact) artifacts.iterator().next();\n\n        System.out.println( \"artifact = \" + artifact );\n    }","id":53585,"modified_method":"public void testProjectReading()\n        throws Exception\n    {\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest()\n            .setShowErrors( true )\n            .setPomFile( getPomFile().getAbsolutePath() );\n\n        MavenExecutionResult result = maven.readProjectWithDependencies( request );\n\n        assertEquals( \"org.apache.maven\", result.getMavenProject().getGroupId() );\n\n        Set artifacts = result.getMavenProject().getArtifacts();\n\n        assertEquals( 1, artifacts.size() );\n\n        Artifact artifact = (Artifact) artifacts.iterator().next();\n\n        System.out.println( \"artifact = \" + artifact );\n    }","commit_id":"01b08e86d1c69519f6c1a70915572a31fadae58e","url":"https://github.com/apache/maven"},{"original_method":"public void testExecutionUsingAProfileWhichSetsAProperty()\n        throws Exception\n    {\n        File testDirectory = new File( basedir, \"src/test/embedder-test-project\" );\n\n        File targetDirectory = new File( basedir, \"target/embedder-test-project2\" );\n\n        FileUtils.copyDirectoryStructure( testDirectory, targetDirectory );\n\n        // Check with profile not active\n\n        MavenExecutionRequest requestWithoutProfile = new DefaultMavenExecutionRequest()\n            .setPomFile( new File( targetDirectory, \"pom.xml\" ).getAbsolutePath() )\n            .setGoals( Arrays.asList( new String[]{ \"validate\" } ) );\n\n        MavenExecutionResult r0 = maven.execute( requestWithoutProfile );\n\n        MavenProject p0 = r0.getMavenProject();\n\n        assertNull( p0.getProperties().getProperty( \"embedderProfile\" ) );\n\n        assertNull( p0.getProperties().getProperty( \"name\" ) );\n\n        assertNull( p0.getProperties().getProperty( \"occupation\" ) );\n\n        // Check with profile activated\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest()\n            .setPomFile( new File( targetDirectory, \"pom.xml\" ).getAbsolutePath() )\n            .setGoals( Arrays.asList( new String[]{ \"validate\" } ) )\n            .addActiveProfile( \"embedderProfile\" );\n\n        MavenExecutionResult r1 = maven.execute( request );\n\n        MavenProject p1 = r1.getMavenProject();\n\n        assertEquals( \"true\", p1.getProperties().getProperty( \"embedderProfile\" ) );\n\n        assertEquals( \"jason\", p1.getProperties().getProperty( \"name\" ) );\n\n        assertEquals( \"somnambulance\", p1.getProperties().getProperty( \"occupation\" ) );\n    }","id":53586,"modified_method":"public void testExecutionUsingAProfileWhichSetsAProperty()\n        throws Exception\n    {\n        File testDirectory = new File( basedir, \"src/test/embedder-test-project\" );\n\n        File targetDirectory = new File( basedir, \"target/embedder-test-project2\" );\n\n        FileUtils.copyDirectoryStructure( testDirectory, targetDirectory );\n\n        // Check with profile not active\n\n        MavenExecutionRequest requestWithoutProfile = new DefaultMavenExecutionRequest()\n            .setPomFile( new File( targetDirectory, \"pom.xml\" ).getAbsolutePath() )\n            .setShowErrors( true )\n            .setGoals( Arrays.asList( new String[]{ \"validate\" } ) );\n\n        MavenExecutionResult r0 = maven.execute( requestWithoutProfile );\n\n        MavenProject p0 = r0.getMavenProject();\n\n        assertNull( p0.getProperties().getProperty( \"embedderProfile\" ) );\n\n        assertNull( p0.getProperties().getProperty( \"name\" ) );\n\n        assertNull( p0.getProperties().getProperty( \"occupation\" ) );\n\n        // Check with profile activated\n\n        MavenExecutionRequest request = new DefaultMavenExecutionRequest()\n            .setPomFile( new File( targetDirectory, \"pom.xml\" ).getAbsolutePath() )\n            .setShowErrors( true )\n            .setGoals( Arrays.asList( new String[]{ \"validate\" } ) )\n            .addActiveProfile( \"embedderProfile\" );\n\n        MavenExecutionResult r1 = maven.execute( request );\n\n        MavenProject p1 = r1.getMavenProject();\n\n        assertEquals( \"true\", p1.getProperties().getProperty( \"embedderProfile\" ) );\n\n        assertEquals( \"jason\", p1.getProperties().getProperty( \"name\" ) );\n\n        assertEquals( \"somnambulance\", p1.getProperties().getProperty( \"occupation\" ) );\n    }","commit_id":"01b08e86d1c69519f6c1a70915572a31fadae58e","url":"https://github.com/apache/maven"},{"original_method":"protected ClientConfig createClientConfig() {\n        return new ClientConfig();\n    }","id":53587,"modified_method":"protected ClientConfig createClientConfig() {\n        ClientConfig clientConfig = new ClientConfig();\n        clientConfig.getNetworkConfig().addAddress(\"127.0.0.1\");\n        return clientConfig;\n    }","commit_id":"efac8ede4b94e0abe5ace5926a69494f2ead1ad9","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"protected ClientConfig createClientConfig() {\n        return new ClientConfig();\n    }","id":53588,"modified_method":"protected ClientConfig createClientConfig() {\n        ClientConfig clientConfig = new ClientConfig();\n        clientConfig.getNetworkConfig().addAddress(\"127.0.0.1\");\n        return clientConfig;\n    }","commit_id":"efac8ede4b94e0abe5ace5926a69494f2ead1ad9","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Override\n    protected CachingProvider getCachingProvider() {\n        Hazelcast.newHazelcastInstance();\n        Hazelcast.newHazelcastInstance();\n\n        ClientConfig clientConfig = new ClientConfig();\n        clientConfig.getNetworkConfig().addAddress(\"127.0.0.1\");\n\n        hazelcastInstance = HazelcastClient.newHazelcastClient(clientConfig);\n\n        return HazelcastClientCachingProvider.createCachingProvider(hazelcastInstance);\n    }","id":53589,"modified_method":"@Override\n    protected CachingProvider getCachingProvider() {\n        Config config = new Config();\n        JoinConfig joinConfig = config.getNetworkConfig().getJoin();\n        joinConfig.getAwsConfig().setEnabled(false);\n        joinConfig.getMulticastConfig().setEnabled(false);\n        joinConfig.getTcpIpConfig().setEnabled(false);\n\n        Hazelcast.newHazelcastInstance(config);\n        Hazelcast.newHazelcastInstance(config);\n\n        ClientConfig clientConfig = new ClientConfig();\n        clientConfig.getNetworkConfig().addAddress(\"127.0.0.1\");\n\n        hazelcastInstance = HazelcastClient.newHazelcastClient(clientConfig);\n\n        return HazelcastClientCachingProvider.createCachingProvider(hazelcastInstance);\n    }","commit_id":"efac8ede4b94e0abe5ace5926a69494f2ead1ad9","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Override\n    protected CachingProvider getCachingProvider() {\n        Hazelcast.newHazelcastInstance();\n        Hazelcast.newHazelcastInstance();\n\n        ClientConfig clientConfig = new ClientConfig();\n        clientConfig.getNetworkConfig().addAddress(\"127.0.0.1\");\n\n        hazelcastInstance = HazelcastClient.newHazelcastClient(clientConfig);\n\n        return HazelcastClientCachingProvider.createCachingProvider(hazelcastInstance);\n    }","id":53590,"modified_method":"@Override\n    protected CachingProvider getCachingProvider() {\n        Config config = new Config();\n        JoinConfig joinConfig = config.getNetworkConfig().getJoin();\n        joinConfig.getAwsConfig().setEnabled(false);\n        joinConfig.getMulticastConfig().setEnabled(false);\n        joinConfig.getTcpIpConfig().setEnabled(false);\n\n        Hazelcast.newHazelcastInstance(config);\n        Hazelcast.newHazelcastInstance(config);\n\n        ClientConfig clientConfig = new ClientConfig();\n        clientConfig.getNetworkConfig().addAddress(\"127.0.0.1\");\n\n        hazelcastInstance = HazelcastClient.newHazelcastClient(clientConfig);\n\n        return HazelcastClientCachingProvider.createCachingProvider(hazelcastInstance);\n    }","commit_id":"efac8ede4b94e0abe5ace5926a69494f2ead1ad9","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Before\n    public void setup() throws IOException {\n        instance = hazelcastFactory.newHazelcastInstance();\n        hazelcastFactory.newHazelcastInstance();\n        hazelcastFactory.newHazelcastInstance();\n        hazelcastFactory.newHazelcastInstance();\n        client = hazelcastFactory.newHazelcastClient();\n    }","id":53591,"modified_method":"@Before\n    public void setup() throws IOException {\n        Config config = new Config();\n        DurableExecutorConfig durableExecutorConfig = config.getDurableExecutorConfig(SINGLE_TASK + \"*\");\n        durableExecutorConfig.setCapacity(1);\n\n        instance = hazelcastFactory.newHazelcastInstance(config);\n        hazelcastFactory.newHazelcastInstance(config);\n        hazelcastFactory.newHazelcastInstance(config);\n        hazelcastFactory.newHazelcastInstance(config);\n        client = hazelcastFactory.newHazelcastClient();\n    }","commit_id":"6e0362c34e6983436a525f5b126a5ddfb8e541df","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"/**\n     * Shutdown-related method behaviour when the cluster is running\n     */\n    @Test\n    public void testShutdownBehaviour() throws Exception {\n        DurableExecutorService executor = createSingleNodeDurableExecutorService(\"testShutdownBehaviour\");\n        // Fresh instance, is not shutting down\n        assertFalse(executor.isShutdown());\n        assertFalse(executor.isTerminated());\n        executor.shutdown();\n        assertTrue(executor.isShutdown());\n        assertTrue(executor.isTerminated());\n        // shutdownNow() should return an empty list and be ignored\n        List<Runnable> pending = executor.shutdownNow();\n        assertTrue(pending.isEmpty());\n        assertTrue(executor.isShutdown());\n        assertTrue(executor.isTerminated());\n        // awaitTermination() should return immediately false\n        try {\n            boolean terminated = executor.awaitTermination(60L, TimeUnit.SECONDS);\n            assertFalse(terminated);\n        } catch (InterruptedException ie) {\n            fail(\"InterruptedException\");\n        }\n        assertTrue(executor.isShutdown());\n        assertTrue(executor.isTerminated());\n    }","id":53592,"modified_method":"/**\n     * Shutdown-related method behaviour when the cluster is running\n     */\n    @Test\n    public void testShutdownBehaviour() throws Exception {\n        TestHazelcastInstanceFactory factory = createHazelcastInstanceFactory(2);\n        HazelcastInstance instance1 = factory.newHazelcastInstance();\n        HazelcastInstance instance2 = factory.newHazelcastInstance();\n        DurableExecutorService executor = instance1.getDurableExecutorService(\"testShutdownBehaviour\");\n        // Fresh instance, is not shutting down\n        assertFalse(executor.isShutdown());\n        assertFalse(executor.isTerminated());\n        executor.shutdown();\n        assertTrue(executor.isShutdown());\n        assertTrue(executor.isTerminated());\n        // shutdownNow() should return an empty list and be ignored\n        List<Runnable> pending = executor.shutdownNow();\n        assertTrue(pending.isEmpty());\n        assertTrue(executor.isShutdown());\n        assertTrue(executor.isTerminated());\n        // awaitTermination() should return immediately false\n        try {\n            boolean terminated = executor.awaitTermination(60L, TimeUnit.SECONDS);\n            assertFalse(terminated);\n        } catch (InterruptedException ie) {\n            fail(\"InterruptedException\");\n        }\n        assertTrue(executor.isShutdown());\n        assertTrue(executor.isTerminated());\n    }","commit_id":"6e0362c34e6983436a525f5b126a5ddfb8e541df","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Test\n    public void testRetrieveAndDispose_WhenSubmitterMemberDown() throws ExecutionException, InterruptedException {\n        String name = randomString();\n        TestHazelcastInstanceFactory factory = createHazelcastInstanceFactory(2);\n        HazelcastInstance instance1 = factory.newHazelcastInstance();\n        HazelcastInstance instance2 = factory.newHazelcastInstance();\n        String key = generateKeyOwnedBy(instance2);\n\n        DurableExecutorService executorService = instance1.getDurableExecutorService(name);\n        SleepingTask task = new SleepingTask(4);\n        long taskId = executorService.submitToKeyOwner(task, key).getTaskId();\n\n        instance1.shutdown();\n\n        executorService = instance2.getDurableExecutorService(name);\n        Future<Boolean> future = executorService.retrieveAndDisposeResult(taskId);\n        assertTrue(future.get());\n\n        Future<Object> f = executorService.retrieveResult(taskId);\n        assertNull(f.get());\n    }","id":53593,"modified_method":"@Test\n    public void testRetrieveAndDispose_WhenSubmitterMemberDown() throws ExecutionException, InterruptedException {\n        String name = randomString();\n        TestHazelcastInstanceFactory factory = createHazelcastInstanceFactory(3);\n        HazelcastInstance instance1 = factory.newHazelcastInstance();\n        HazelcastInstance instance2 = factory.newHazelcastInstance();\n        HazelcastInstance instance3 = factory.newHazelcastInstance();\n        String key = generateKeyOwnedBy(instance2);\n\n        DurableExecutorService executorService = instance1.getDurableExecutorService(name);\n        SleepingTask task = new SleepingTask(4);\n        long taskId = executorService.submitToKeyOwner(task, key).getTaskId();\n\n        instance1.shutdown();\n\n        executorService = instance2.getDurableExecutorService(name);\n        Future<Boolean> future = executorService.retrieveAndDisposeResult(taskId);\n        assertTrue(future.get());\n\n        Future<Object> f = executorService.retrieveResult(taskId);\n        assertNull(f.get());\n    }","commit_id":"6e0362c34e6983436a525f5b126a5ddfb8e541df","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Test\n    public void testRetrieve_WhenOwnerMemberDown() throws ExecutionException, InterruptedException {\n        String name = randomString();\n        TestHazelcastInstanceFactory factory = createHazelcastInstanceFactory(2);\n        HazelcastInstance instance1 = factory.newHazelcastInstance();\n        HazelcastInstance instance2 = factory.newHazelcastInstance();\n        String key = generateKeyOwnedBy(instance1);\n\n        DurableExecutorService executorService = instance1.getDurableExecutorService(name);\n        SleepingTask task = new SleepingTask(4);\n        long taskId = executorService.submitToKeyOwner(task, key).getTaskId();\n\n        instance1.shutdown();\n\n        executorService = instance2.getDurableExecutorService(name);\n        Future<Boolean> future = executorService.retrieveResult(taskId);\n        assertTrue(future.get());\n    }","id":53594,"modified_method":"@Test\n    public void testRetrieve_WhenOwnerMemberDown() throws ExecutionException, InterruptedException {\n        String name = randomString();\n        TestHazelcastInstanceFactory factory = createHazelcastInstanceFactory(3);\n        HazelcastInstance instance1 = factory.newHazelcastInstance();\n        HazelcastInstance instance2 = factory.newHazelcastInstance();\n        HazelcastInstance instance3 = factory.newHazelcastInstance();\n        String key = generateKeyOwnedBy(instance1);\n\n        DurableExecutorService executorService = instance1.getDurableExecutorService(name);\n        SleepingTask task = new SleepingTask(4);\n        long taskId = executorService.submitToKeyOwner(task, key).getTaskId();\n\n        instance1.shutdown();\n\n        executorService = instance2.getDurableExecutorService(name);\n        Future<Boolean> future = executorService.retrieveResult(taskId);\n        assertTrue(future.get());\n    }","commit_id":"6e0362c34e6983436a525f5b126a5ddfb8e541df","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Test\n    public void testRetrieveAndDispose_WhenOwnerMemberDown() throws ExecutionException, InterruptedException {\n        String name = randomString();\n        TestHazelcastInstanceFactory factory = createHazelcastInstanceFactory(2);\n        HazelcastInstance instance1 = factory.newHazelcastInstance();\n        HazelcastInstance instance2 = factory.newHazelcastInstance();\n        String key = generateKeyOwnedBy(instance1);\n\n        DurableExecutorService executorService = instance1.getDurableExecutorService(name);\n        SleepingTask task = new SleepingTask(4);\n        long taskId = executorService.submitToKeyOwner(task, key).getTaskId();\n\n        instance1.shutdown();\n\n        executorService = instance2.getDurableExecutorService(name);\n        Future<Boolean> future = executorService.retrieveAndDisposeResult(taskId);\n        assertTrue(future.get());\n\n        Future<Object> f = executorService.retrieveResult(taskId);\n        assertNull(f.get());\n    }","id":53595,"modified_method":"@Test\n    public void testRetrieveAndDispose_WhenOwnerMemberDown() throws ExecutionException, InterruptedException {\n        String name = randomString();\n        TestHazelcastInstanceFactory factory = createHazelcastInstanceFactory(3);\n        HazelcastInstance instance1 = factory.newHazelcastInstance();\n        HazelcastInstance instance2 = factory.newHazelcastInstance();\n        HazelcastInstance instance3 = factory.newHazelcastInstance();\n        String key = generateKeyOwnedBy(instance1);\n\n        DurableExecutorService executorService = instance1.getDurableExecutorService(name);\n        SleepingTask task = new SleepingTask(4);\n        long taskId = executorService.submitToKeyOwner(task, key).getTaskId();\n\n        instance1.shutdown();\n\n        executorService = instance2.getDurableExecutorService(name);\n        Future<Boolean> future = executorService.retrieveAndDisposeResult(taskId);\n        assertTrue(future.get());\n\n        Future<Object> f = executorService.retrieveResult(taskId);\n        assertNull(f.get());\n    }","commit_id":"6e0362c34e6983436a525f5b126a5ddfb8e541df","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Test\n    public void testRetrieve_WhenResultOverwritten() throws ExecutionException, InterruptedException {\n        String name = randomString();\n        Config config = new Config();\n        config.getDurableExecutorConfig(name).setCapacity(1);\n        HazelcastInstance instance = createHazelcastInstance(config);\n        DurableExecutorService executorService = instance.getDurableExecutorService(name);\n        DurableExecutorServiceFuture<String> future = executorService.submitToKeyOwner(new BasicTestCallable(), name);\n        long taskId = future.getTaskId();\n        future.get();\n\n        executorService.submitToKeyOwner(new BasicTestCallable(), name);\n\n        Future<Object> f = executorService.retrieveResult(taskId);\n        try {\n            f.get();\n            fail();\n        } catch (ExecutionException e) {\n            assertTrue(e.getCause() instanceof StaleTaskIdException);\n        }\n    }","id":53596,"modified_method":"@Test\n    public void testRetrieve_WhenResultOverwritten() throws ExecutionException, InterruptedException {\n        String name = randomString();\n        Config config = new Config();\n        config.getDurableExecutorConfig(name).setCapacity(1).setDurability(0);\n        HazelcastInstance instance = createHazelcastInstance(config);\n        DurableExecutorService executorService = instance.getDurableExecutorService(name);\n        DurableExecutorServiceFuture<String> future = executorService.submitToKeyOwner(new BasicTestCallable(), name);\n        long taskId = future.getTaskId();\n        future.get();\n\n        executorService.submitToKeyOwner(new BasicTestCallable(), name);\n\n        Future<Object> f = executorService.retrieveResult(taskId);\n        try {\n            f.get();\n            fail();\n        } catch (ExecutionException e) {\n            assertTrue(e.getCause() instanceof StaleTaskIdException);\n        }\n    }","commit_id":"6e0362c34e6983436a525f5b126a5ddfb8e541df","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"@Test\n    public void testRetrieve_WhenSubmitterMemberDown() throws ExecutionException, InterruptedException {\n        String name = randomString();\n        TestHazelcastInstanceFactory factory = createHazelcastInstanceFactory(2);\n        HazelcastInstance instance1 = factory.newHazelcastInstance();\n        HazelcastInstance instance2 = factory.newHazelcastInstance();\n        String key = generateKeyOwnedBy(instance2);\n\n        DurableExecutorService executorService = instance1.getDurableExecutorService(name);\n        SleepingTask task = new SleepingTask(4);\n        long taskId = executorService.submitToKeyOwner(task, key).getTaskId();\n\n        instance1.shutdown();\n\n        executorService = instance2.getDurableExecutorService(name);\n        Future<Boolean> future = executorService.retrieveResult(taskId);\n        assertTrue(future.get());\n    }","id":53597,"modified_method":"@Test\n    public void testRetrieve_WhenSubmitterMemberDown() throws ExecutionException, InterruptedException {\n        String name = randomString();\n        TestHazelcastInstanceFactory factory = createHazelcastInstanceFactory(3);\n        HazelcastInstance instance1 = factory.newHazelcastInstance();\n        HazelcastInstance instance2 = factory.newHazelcastInstance();\n        HazelcastInstance instance3 = factory.newHazelcastInstance();\n        String key = generateKeyOwnedBy(instance2);\n\n        DurableExecutorService executorService = instance1.getDurableExecutorService(name);\n        SleepingTask task = new SleepingTask(4);\n        long taskId = executorService.submitToKeyOwner(task, key).getTaskId();\n\n        instance1.shutdown();\n\n        executorService = instance2.getDurableExecutorService(name);\n        Future<Boolean> future = executorService.retrieveResult(taskId);\n        assertTrue(future.get());\n    }","commit_id":"6e0362c34e6983436a525f5b126a5ddfb8e541df","url":"https://github.com/hazelcast/hazelcast"},{"original_method":"private static RunContentDescriptor ensureIdeBound(@NotNull Project project,\n                                                     @NotNull RunContentDescriptor descriptor,\n                                                     @NotNull ScriptEngine engine) {\n    Bindings bindings = engine.getBindings(ScriptContext.ENGINE_SCOPE);\n    RunIdeConsoleAction.IDE ide = ObjectUtils.tryCast(bindings.get(IDE), RunIdeConsoleAction.IDE.class);\n    if (ide == null) {\n      ide = new IDE(project);\n      bindings.put(IDE, ide);\n    }\n    ide.updateDescriptor(descriptor);\n    return descriptor;\n  }","id":53598,"modified_method":"private static void ensureIdeBound(@NotNull Project project, @NotNull ScriptEngine engine) {\n    Bindings bindings = engine.getBindings(ScriptContext.ENGINE_SCOPE);\n    if (!bindings.containsKey(IDE)) {\n      bindings.put(IDE, new IDE(project));\n    }\n  }","commit_id":"d741bfb93bb66094c4fe5e6a63724a1a747feac3","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  private static RunContentDescriptor getConsoleView(@NotNull Project project, @NotNull VirtualFile file, @NotNull ScriptEngine engine) {\n    PsiFile psiFile = ObjectUtils.assertNotNull(PsiManager.getInstance(project).findFile(file));\n\n    WeakReference<RunContentDescriptor> ref = psiFile.getCopyableUserData(DESCRIPTOR_KEY);\n    RunContentDescriptor existing = ref == null ? null : ref.get();\n    if (existing != null && existing.getExecutionConsole() != null) {\n      return ensureIdeBound(project, existing, engine);\n    }\n    ConsoleView consoleView = TextConsoleBuilderFactory.getInstance().createBuilder(project).getConsole();\n\n    DefaultActionGroup toolbarActions = new DefaultActionGroup();\n    JComponent panel = new JPanel(new BorderLayout());\n    panel.add(consoleView.getComponent(), BorderLayout.CENTER);\n    ActionToolbar toolbar = ActionManager.getInstance().createActionToolbar(ActionPlaces.UNKNOWN, toolbarActions, false);\n    toolbar.setTargetComponent(consoleView.getComponent());\n    panel.add(toolbar.getComponent(), BorderLayout.WEST);\n    final RunContentDescriptor descriptor = new RunContentDescriptor(consoleView, null, panel, file.getName()) {\n      @Override\n      public boolean isContentReuseProhibited() {\n        return true;\n      }\n    };\n\n    Executor executor = DefaultRunExecutor.getRunExecutorInstance();\n    toolbarActions.addAll(consoleView.createConsoleActions());\n    toolbarActions.add(new CloseAction(executor, descriptor, project));\n    psiFile.putCopyableUserData(DESCRIPTOR_KEY, new WeakReference<RunContentDescriptor>(descriptor));\n    ExecutionManager.getInstance(project).getContentManager().showRunContent(executor, descriptor);\n    return ensureIdeBound(project, descriptor, engine);\n  }","id":53599,"modified_method":"@NotNull\n  private static RunContentDescriptor getConsoleView(@NotNull Project project, @NotNull VirtualFile file, @NotNull ScriptEngine engine) {\n    PsiFile psiFile = ObjectUtils.assertNotNull(PsiManager.getInstance(project).findFile(file));\n\n    WeakReference<RunContentDescriptor> ref = psiFile.getCopyableUserData(DESCRIPTOR_KEY);\n    RunContentDescriptor descriptor = ref == null ? null : ref.get();\n    if (descriptor == null || descriptor.getExecutionConsole() == null) {\n      descriptor = createConsoleView(project, engine, psiFile);\n      psiFile.putCopyableUserData(DESCRIPTOR_KEY, new WeakReference<RunContentDescriptor>(descriptor));\n    }\n    ensureIdeBound(project, engine);\n\n    return descriptor;\n  }","commit_id":"d741bfb93bb66094c4fe5e6a63724a1a747feac3","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public AntFile getAntFile() {\n    final PsiFile psiFile = PsiManager.getInstance(getProject()).findFile(myVFile);\n    return psiFile != null? AntSupport.getAntFile(psiFile) : null;\n  }","id":53600,"modified_method":"public AntFile getAntFile() {\n    final PsiFile psiFile = myVFile.isValid()? PsiManager.getInstance(getProject()).findFile(myVFile) : null;\n    return psiFile != null? AntSupport.getAntFile(psiFile) : null;\n  }","commit_id":"9e494c16d603032c31fb7599d9a0b087b960624a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void basicUpdateConfig() {\n    final AntFile antFile = getAntFile();\n    registerPropertiesInPsi(antFile);\n    bindAnt();\n    myClassloaderHolder.updateClasspath();\n    antFile.clearCachesWithTypeDefinitions();\n  }","id":53601,"modified_method":"private void basicUpdateConfig() {\n    final AntFile antFile = getAntFile();\n    if (antFile != null) {\n      registerPropertiesInPsi(antFile);\n      bindAnt();\n      myClassloaderHolder.updateClasspath();\n      antFile.clearCachesWithTypeDefinitions();\n    }\n  }","commit_id":"9e494c16d603032c31fb7599d9a0b087b960624a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void removeBuildFileImpl(AntBuildFile buildFile) {\n    final XmlFile xmlFile = ((AntFile)buildFile.getAntFile()).getSourceElement();\n    xmlFile.putCopyableUserData(AntFileImpl.ANT_BUILD_FILE, null);\n    AntSupport.markFileAsAntFile(xmlFile.getVirtualFile(), xmlFile.getViewProvider(), false);\n    synchronized (myBuildFiles) {\n      myBuildFilesArray = null;\n      myBuildFiles.remove(buildFile);\n    }\n    myModelToBuildFileMap.remove(buildFile);\n    myEventDispatcher.getMulticaster().buildFileRemoved(buildFile);\n  }","id":53602,"modified_method":"private void removeBuildFileImpl(AntBuildFile buildFile) {\n    final AntFile antFile = (AntFile)buildFile.getAntFile();\n    if (antFile != null) {\n      final XmlFile xmlFile = antFile.getSourceElement();\n      xmlFile.putCopyableUserData(AntFileImpl.ANT_BUILD_FILE, null);\n      AntSupport.markFileAsAntFile(xmlFile.getVirtualFile(), xmlFile.getViewProvider(), false);\n    }\n    synchronized (myBuildFiles) {\n      myBuildFilesArray = null;\n      myBuildFiles.remove(buildFile);\n    }\n    myModelToBuildFileMap.remove(buildFile);\n    myEventDispatcher.getMulticaster().buildFileRemoved(buildFile);\n  }","commit_id":"9e494c16d603032c31fb7599d9a0b087b960624a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public JComponent createComponent() {\n    final JPanel panel = new JPanel(new GridBagLayout());\n    panel.setBorder(BorderFactory.createTitledBorder(\"File Context\"));\n    myCombo = new ComboBox();\n    myCombo.putClientProperty(CONTEXTS_COMBO_KEY, Boolean.TRUE);\n    panel.add(\n        new JLabel(\"Included into:\"), \n        new GridBagConstraints(0, GridBagConstraints.RELATIVE, 1, 1, 0.0, 0.0, GridBagConstraints.WEST, GridBagConstraints.NONE, new Insets(5, 5, 5, 0), 0, 0)\n    );\n    panel.add(\n        myCombo, \n        new GridBagConstraints(1, GridBagConstraints.RELATIVE, 1, 1, 1.0, 0.0, GridBagConstraints.WEST, GridBagConstraints.HORIZONTAL, new Insets(5, 5, 5, 5), 0, 0)\n    );\n\n    final FileBasedIndex fbi = FileBasedIndex.getInstance();\n    final Collection<VirtualFile> antFiles = fbi.getContainingFiles(AntImportsIndex.INDEX_NAME, AntImportsIndex.ANT_FILES_WITH_IMPORTS_KEY, myFileFilter);\n    for (VirtualFile file : antFiles) {\n      final AntFile antFile = AntSupport.toAntFile(file, myFile.getProject());\n      if (antFile != null && !antFile.equals(myFile)) {\n        final String path = PathUtil.getLocalPath(file);\n        final AntFile previous = myPathToFileMap.put(path, antFile);\n        assert previous == null;\n      }\n    }\n    final AntConfigurationBase antConfig = AntConfigurationBase.getInstance(myFile.getProject());\n    for (AntBuildFile buildFile : antConfig.getBuildFiles()) {\n      final AntFile antFile = (AntFile)buildFile.getAntFile();\n      final String path = PathUtil.getLocalPath(antFile.getVirtualFile());\n      if (path != null && !myPathToFileMap.containsKey(path) && !FileUtil.pathsEqual(path, myLocalPath)) {\n        final AntProject antProject = antFile.getAntProject();\n        if (antProject != null && antProject.getImportedFiles().length > 0) {\n          myPathToFileMap.put(path, antFile);\n        }\n      }\n    }\n\n    final List<String> paths = new ArrayList<String>(myPathToFileMap.keySet());\n    Collections.sort(paths, new Comparator<String>() {\n      public int compare(final String o1, final String o2) {\n        return o1.compareTo(o2);\n      }\n    });\n\n    myCombo.addItem(NONE);\n    for (String path : paths) {\n      myCombo.addItem(path);\n    }\n\n    final AntFile currentContext = antConfig.getContextFile(myFile);\n    if (currentContext != null) {\n      final VirtualFile vFile = currentContext.getVirtualFile();\n      \n      assert vFile != null;\n\n      final String path = PathUtil.getLocalPath(vFile);\n      if (!FileUtil.pathsEqual(path, myLocalPath)) {\n        myOriginalContext = path;\n      }\n    }\n    myCombo.setSelectedItem(myOriginalContext);\n    \n    return panel;\n  }","id":53603,"modified_method":"public JComponent createComponent() {\n    final JPanel panel = new JPanel(new GridBagLayout());\n    panel.setBorder(BorderFactory.createTitledBorder(\"File Context\"));\n    myCombo = new ComboBox();\n    myCombo.putClientProperty(CONTEXTS_COMBO_KEY, Boolean.TRUE);\n    panel.add(\n        new JLabel(\"Included into:\"), \n        new GridBagConstraints(0, GridBagConstraints.RELATIVE, 1, 1, 0.0, 0.0, GridBagConstraints.WEST, GridBagConstraints.NONE, new Insets(5, 5, 5, 0), 0, 0)\n    );\n    panel.add(\n        myCombo, \n        new GridBagConstraints(1, GridBagConstraints.RELATIVE, 1, 1, 1.0, 0.0, GridBagConstraints.WEST, GridBagConstraints.HORIZONTAL, new Insets(5, 5, 5, 5), 0, 0)\n    );\n\n    final FileBasedIndex fbi = FileBasedIndex.getInstance();\n    final Collection<VirtualFile> antFiles = fbi.getContainingFiles(AntImportsIndex.INDEX_NAME, AntImportsIndex.ANT_FILES_WITH_IMPORTS_KEY, myFileFilter);\n    for (VirtualFile file : antFiles) {\n      final AntFile antFile = AntSupport.toAntFile(file, myFile.getProject());\n      if (antFile != null && !antFile.equals(myFile)) {\n        final String path = PathUtil.getLocalPath(file);\n        final AntFile previous = myPathToFileMap.put(path, antFile);\n        assert previous == null;\n      }\n    }\n    final AntConfigurationBase antConfig = AntConfigurationBase.getInstance(myFile.getProject());\n    for (AntBuildFile buildFile : antConfig.getBuildFiles()) {\n      final AntFile antFile = (AntFile)buildFile.getAntFile();\n      final String path = antFile != null? PathUtil.getLocalPath(antFile.getVirtualFile()) : null;\n      if (path != null && !myPathToFileMap.containsKey(path) && !FileUtil.pathsEqual(path, myLocalPath)) {\n        final AntProject antProject = antFile.getAntProject();\n        if (antProject != null && antProject.getImportedFiles().length > 0) {\n          myPathToFileMap.put(path, antFile);\n        }\n      }\n    }\n\n    final List<String> paths = new ArrayList<String>(myPathToFileMap.keySet());\n    Collections.sort(paths, new Comparator<String>() {\n      public int compare(final String o1, final String o2) {\n        return o1.compareTo(o2);\n      }\n    });\n\n    myCombo.addItem(NONE);\n    for (String path : paths) {\n      myCombo.addItem(path);\n    }\n\n    final AntFile currentContext = antConfig.getContextFile(myFile);\n    if (currentContext != null) {\n      final VirtualFile vFile = currentContext.getVirtualFile();\n      \n      assert vFile != null;\n\n      final String path = PathUtil.getLocalPath(vFile);\n      if (!FileUtil.pathsEqual(path, myLocalPath)) {\n        myOriginalContext = path;\n      }\n    }\n    myCombo.setSelectedItem(myOriginalContext);\n    \n    return panel;\n  }","commit_id":"9e494c16d603032c31fb7599d9a0b087b960624a","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void open( String fileToOpen ) throws IOException\n    {\n        fileChannel = new RandomAccessFile( fileToOpen, \"rw\" ).getChannel();\n        if ( fileChannel.size() != 0 )\n        {\n            doInternalRecovery( fileToOpen );\n        }\n        else\n        {\n            logVersion = xaTf.getCurrentVersion();\n            buffer.clear();\n            buffer.putLong( logVersion );\n            buffer.putLong( xaTf.getLastCommittedTx() );\n            buffer.flip();\n            fileChannel.write( buffer );\n            scanIsComplete = true;\n        }\n    }","id":53604,"modified_method":"private void open( String fileToOpen ) throws IOException\n    {\n        fileChannel = new RandomAccessFile( fileToOpen, \"rw\" ).getChannel();\n        if ( fileChannel.size() != 0 )\n        {\n            doInternalRecovery( fileToOpen );\n        }\n        else\n        {\n            logVersion = xaTf.getCurrentVersion();\n            buffer.clear();\n            buffer.putLong( logVersion );\n            long lastTxId = xaTf.getLastCommittedTx();\n            buffer.putLong( lastTxId );\n            previousLogLastCommittedTx = lastTxId; \n            buffer.flip();\n            fileChannel.write( buffer );\n            scanIsComplete = true;\n        }\n    }","commit_id":"fc2e6c317ed539a7c78407cd4a8f37d30f15f70a","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void readCommandEntry() throws IOException\n        {\n            buffer.clear();\n            buffer.limit( 4 );\n            if ( byteChannel.read( buffer ) != buffer.limit() )\n            {\n                throw new IOException( \"Unable to read tx command entry\" );\n            }\n            buffer.flip();\n            int identifier = buffer.getInt();\n            XaCommand command = xaCf.readCommand( byteChannel, buffer );\n            if ( command == null )\n            {\n                throw new IOException( \"Unable to read command entry\" );\n            }\n            command.setRecovered();\n            XaTransaction xaTx = recoveredTxMap.get( identifier );\n            xaTx.injectCommand( command );\n        }","id":53605,"modified_method":"private void readCommandEntry() throws IOException\n        {\n            LogEntry.Command entry = \n                LogIoUtils.readTxCommand( buffer, byteChannel, xaCf );\n            if ( entry == null )\n            {\n                throw new IOException( \"Unable to read tx command entry\" );\n            }\n            int identifier = entry.getIdentifier();\n            XaCommand command = entry.getXaCommand();\n            command.setRecovered();\n            XaTransaction xaTx = recoveredTxMap.get( identifier );\n            xaTx.injectCommand( command );\n        }","commit_id":"fc2e6c317ed539a7c78407cd4a8f37d30f15f70a","url":"https://github.com/neo4j/neo4j"},{"original_method":"private boolean readDoneEntry() throws IOException\n    {\n        // get the tx identifier\n        buffer.clear();\n        buffer.limit( 4 );\n        if ( fileChannel.read( buffer ) != buffer.limit() )\n        {\n            return false;\n        }\n        buffer.flip();\n        int identifier = buffer.getInt();\n        StartEntry entry = xidIdentMap.get( identifier );\n        if ( entry == null )\n        {\n            return false;\n        }\n        Xid xid = entry.getXid();\n        xaRm.pruneXid( xid );\n        xidIdentMap.remove( identifier );\n        recoveredTxMap.remove( identifier );\n        return true;\n    }","id":53606,"modified_method":"private boolean readDoneEntry() throws IOException\n    {\n        // get the tx identifier\n        LogEntry.Done done = LogIoUtils.readTxDoneEntry( buffer, fileChannel );\n        if ( done == null )\n        {\n            return false;\n        }\n        int identifier = done.getIdentifier();\n        LogEntry.Start entry = xidIdentMap.get( identifier );\n        if ( entry == null )\n        {\n            return false;\n        }\n        Xid xid = entry.getXid();\n        xaRm.pruneXid( xid );\n        xidIdentMap.remove( identifier );\n        recoveredTxMap.remove( identifier );\n        return true;\n    }","commit_id":"fc2e6c317ed539a7c78407cd4a8f37d30f15f70a","url":"https://github.com/neo4j/neo4j"},{"original_method":"public synchronized int start( Xid xid ) throws XAException\n    {\n        if ( backupSlave )\n        {\n            throw new XAException( \"Resource is configured as backup slave, \" + \n                \"no new transactions can be started for \" + fileName + \".\" + \n                currentLog );\n        }\n        int xidIdent = getNextIdentifier();\n        try\n        {\n            byte globalId[] = xid.getGlobalTransactionId();\n            byte branchId[] = xid.getBranchQualifier();\n            int formatId = xid.getFormatId();\n            long position = writeBuffer.getFileChannelPosition();\n            writeBuffer.put( TX_START ).put( (byte) globalId.length ).put(\n                (byte) branchId.length ).put( globalId ).put( branchId )\n                .putInt( xidIdent ).putInt( formatId );\n            xidIdentMap.put( xidIdent, new StartEntry( xid, position ) );\n        }\n        catch ( IOException e )\n        {\n            throw new XAException( \"Logical log couldn't start transaction: \"\n                + e );\n        }\n        return xidIdent;\n    }","id":53607,"modified_method":"public synchronized int start( Xid xid ) throws XAException\n    {\n        if ( backupSlave )\n        {\n            throw new XAException( \"Resource is configured as backup slave, \" + \n                \"no new transactions can be started for \" + fileName + \".\" + \n                currentLog );\n        }\n        int xidIdent = getNextIdentifier();\n        try\n        {\n            byte globalId[] = xid.getGlobalTransactionId();\n            byte branchId[] = xid.getBranchQualifier();\n            int formatId = xid.getFormatId();\n            long position = writeBuffer.getFileChannelPosition();\n            writeBuffer.put( TX_START ).put( (byte) globalId.length ).put(\n                (byte) branchId.length ).put( globalId ).put( branchId )\n                .putInt( xidIdent ).putInt( formatId );\n            xidIdentMap.put( xidIdent, \n                    new LogEntry.Start( xid, xidIdent, position ) );\n        }\n        catch ( IOException e )\n        {\n            throw new XAException( \"Logical log couldn't start transaction: \"\n                + e );\n        }\n        return xidIdent;\n    }","commit_id":"fc2e6c317ed539a7c78407cd4a8f37d30f15f70a","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void readTxPrepareEntry() throws IOException\n        {\n            // get the tx identifier\n            buffer.clear();\n            buffer.limit( 4 );\n            if ( byteChannel.read( buffer ) != buffer.limit() )\n            {\n                throw new IOException( \"Unable to read tx prepare entry\" );\n            }\n            buffer.flip();\n            int identifier = buffer.getInt();\n            StartEntry entry = xidIdentMap.get( identifier );\n            if ( entry == null )\n            {\n                throw new IOException( \"Unable to read tx prepeare entry\" );\n            }\n            Xid xid = entry.getXid();\n            if ( xaRm.injectPrepare( xid ) )\n            {\n                // read only, we can remove\n                xidIdentMap.remove( identifier );\n                recoveredTxMap.remove( identifier );\n            }\n        }","id":53608,"modified_method":"private void readTxPrepareEntry() throws IOException\n        {\n            // get the tx identifier\n            LogEntry.Prepare prepareEntry = \n                LogIoUtils.readTxPrepareEntry( buffer, byteChannel );\n            if ( prepareEntry == null )\n            {\n                throw new IOException( \"Unable to read tx prepare entry\" );\n            }\n            int identifier = prepareEntry.getIdentifier();\n            LogEntry.Start entry = xidIdentMap.get( identifier );\n            if ( entry == null )\n            {\n                throw new IOException( \"Unable to read tx prepeare entry\" );\n            }\n            Xid xid = entry.getXid();\n            if ( xaRm.injectPrepare( xid ) )\n            {\n                // read only, we can remove\n                xidIdentMap.remove( identifier );\n                recoveredTxMap.remove( identifier );\n            }\n        }","commit_id":"fc2e6c317ed539a7c78407cd4a8f37d30f15f70a","url":"https://github.com/neo4j/neo4j"},{"original_method":"private boolean readTxPrepareEntry() throws IOException\n    {\n        // get the tx identifier\n        buffer.clear();\n        buffer.limit( 4 );\n        if ( fileChannel.read( buffer ) != buffer.limit() )\n        {\n            return false;\n        }\n        buffer.flip();\n        int identifier = buffer.getInt();\n        StartEntry entry = xidIdentMap.get( identifier );\n        if ( entry == null )\n        {\n            return false;\n        }\n        Xid xid = entry.getXid();\n        if ( xaRm.injectPrepare( xid ) )\n        {\n            // read only we can remove\n            xidIdentMap.remove( identifier );\n            recoveredTxMap.remove( identifier );\n        }\n        return true;\n    }","id":53609,"modified_method":"private boolean readTxPrepareEntry() throws IOException\n    {\n        // get the tx identifier\n        LogEntry.Prepare prepareEntry = LogIoUtils.readTxPrepareEntry( buffer, \n                fileChannel );\n        if ( prepareEntry == null )\n        {\n            return false;\n        }\n        int identifier = prepareEntry.getIdentifier();\n        LogEntry.Start entry = xidIdentMap.get( identifier );\n        if ( entry == null )\n        {\n            return false;\n        }\n        Xid xid = entry.getXid();\n        if ( xaRm.injectPrepare( xid ) )\n        {\n            // read only we can remove\n            xidIdentMap.remove( identifier );\n            recoveredTxMap.remove( identifier );\n        }\n        return true;\n    }","commit_id":"fc2e6c317ed539a7c78407cd4a8f37d30f15f70a","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void readTxStartEntry() throws IOException\n        {\n            // get the global id\n            buffer.clear();\n            buffer.limit( 1 );\n            if ( byteChannel.read( buffer ) != buffer.limit() )\n            {\n                throw new IOException( \"Unable to read tx start entry\" );\n            }\n            buffer.flip();\n            byte globalIdLength = buffer.get();\n            // get the branchId id\n            buffer.clear();\n            buffer.limit( 1 );\n            if ( byteChannel.read( buffer ) != buffer.limit() )\n            {\n                throw new IOException( \"Unable to read tx start entry\" );\n            }\n            buffer.flip();\n            byte branchIdLength = buffer.get();\n            byte globalId[] = new byte[globalIdLength];\n            ByteBuffer tmpBuffer = ByteBuffer.wrap( globalId );\n            if ( byteChannel.read( tmpBuffer ) != globalId.length )\n            {\n                throw new IOException( \"Unable to read tx start entry\" );\n            }\n            byte branchId[] = new byte[branchIdLength];\n            tmpBuffer = ByteBuffer.wrap( branchId );\n            if ( byteChannel.read( tmpBuffer ) != branchId.length )\n            {\n                throw new IOException( \"Unable to read tx start entry\" );\n            }\n            // get the tx identifier\n            buffer.clear();\n            buffer.limit( 4 );\n            if ( byteChannel.read( buffer ) != buffer.limit() )\n            {\n                throw new IOException( \"Unable to read tx start entry\" );\n            }\n            buffer.flip();\n            int identifier = buffer.getInt();\n            // get the format id\n            buffer.clear();\n            buffer.limit( 4 );\n            if ( byteChannel.read( buffer ) != buffer.limit() )\n            {\n                throw new IOException( \"Unable to read tx start entry\" );\n            }\n            buffer.flip();\n            int formatId = buffer.getInt();\n            // re-create the transaction\n            Xid xid = new XidImpl( globalId, branchId, formatId );\n            xidIdentMap.put( identifier, new StartEntry( xid, -1 ) );\n            XaTransaction xaTx = xaTf.create( identifier );\n            xaTx.setRecovered();\n            recoveredTxMap.put( identifier, xaTx );\n            xaRm.injectStart( xid, xaTx );\n        }","id":53610,"modified_method":"private void readTxStartEntry() throws IOException\n        {\n            // get the global id\n            LogEntry.Start entry = LogIoUtils.readTxStartEntry( buffer, \n                    byteChannel, -1 );\n            if ( entry == null )\n            {\n                throw new IOException( \"Unable to read tx start entry\" );\n            }\n            // re-create the transaction\n            Xid xid = entry.getXid();\n            int identifier = entry.getIdentifier();\n            xidIdentMap.put( identifier, entry );\n            XaTransaction xaTx = xaTf.create( identifier );\n            xaTx.setRecovered();\n            recoveredTxMap.put( identifier, xaTx );\n            xaRm.injectStart( xid, xaTx );\n        }","commit_id":"fc2e6c317ed539a7c78407cd4a8f37d30f15f70a","url":"https://github.com/neo4j/neo4j"},{"original_method":"private boolean readCommandEntry() throws IOException\n    {\n        buffer.clear();\n        buffer.limit( 4 );\n        if ( fileChannel.read( buffer ) != buffer.limit() )\n        {\n            return false;\n        }\n        buffer.flip();\n        int identifier = buffer.getInt();\n        XaCommand command = cf.readCommand( fileChannel, buffer );\n        if ( command == null )\n        {\n            // readCommand returns null if full command couldn't be loaded\n            return false;\n        }\n        command.setRecovered();\n        XaTransaction xaTx = recoveredTxMap.get( identifier );\n        xaTx.injectCommand( command );\n        return true;\n    }","id":53611,"modified_method":"private boolean readCommandEntry() throws IOException\n    {\n        LogEntry.Command entry = LogIoUtils.readTxCommand( buffer, \n                fileChannel, cf );\n        if ( entry == null )\n        {\n            return false;\n        }\n        int identifier = entry.getIdentifier();\n        XaCommand command = entry.getXaCommand();\n        if ( command == null )\n        {\n            // readCommand returns null if full command couldn't be loaded\n            return false;\n        }\n        command.setRecovered();\n        XaTransaction xaTx = recoveredTxMap.get( identifier );\n        xaTx.injectCommand( command );\n        return true;\n    }","commit_id":"fc2e6c317ed539a7c78407cd4a8f37d30f15f70a","url":"https://github.com/neo4j/neo4j"},{"original_method":"public synchronized void rotate() throws IOException\n    {\n        xaTf.flushAll();\n        String newLogFile = fileName + \".2\";\n        String currentLogFile = fileName + \".1\";\n        char newActiveLog = LOG2;\n        long currentVersion = xaTf.getCurrentVersion();\n        String oldCopy = fileName + \".v\" + currentVersion;\n        if ( currentLog == CLEAN || currentLog == LOG2 )\n        {\n            newActiveLog = LOG1;\n            newLogFile = fileName + \".1\";\n            currentLogFile = fileName + \".2\";\n        }\n        else\n        {\n            assert currentLog == LOG1;\n        }\n        if ( new File( newLogFile ).exists() )\n        {\n            throw new IOException( \"New log file: \" + newLogFile + \n                \" already exist\" );\n        }\n        if ( new File( oldCopy ).exists() )\n        {\n            throw new IOException( \"Copy log file: \" + oldCopy + \n                \" already exist\" );\n        }\n        long endPosition = writeBuffer.getFileChannelPosition();\n        writeBuffer.force();\n        FileChannel newLog = new RandomAccessFile( \n            newLogFile, \"rw\" ).getChannel();\n        buffer.clear();\n        buffer.putLong( currentVersion + 1 );\n        buffer.putLong( xaTf.getLastCommittedTx() ).flip();\n        if ( newLog.write( buffer ) != 16 )\n        {\n            throw new IOException( \"Unable to write log version to new\" );\n        }\n        fileChannel.position( 0 );\n        buffer.clear();\n        buffer.limit( 16 );\n        if( fileChannel.read( buffer ) != 16 )\n        {\n            throw new IOException( \"Verification of log version failed\" );\n        }\n        buffer.flip();\n        long verification = buffer.getLong();\n        if ( verification != currentVersion )\n        {\n            throw new IOException( \"Verification of log version failed, \" + \n                \" expected \" + currentVersion + \" got \" + verification );\n        }\n        if ( xidIdentMap.size() > 0 )\n        {\n            fileChannel.position( getFirstStartEntry( endPosition ) );\n        }\n        buffer.clear(); // ignore other 8 bytes\n        buffer.limit( 1 );\n        boolean emptyHit = false;\n        while ( fileChannel.read( buffer ) == 1 && !emptyHit )\n        {\n            buffer.flip();\n            byte entry = buffer.get();\n            switch ( entry )\n            {\n                case TX_START:\n                    readAndWriteTxStartEntry( newLog );\n                    break;\n                case TX_PREPARE:\n                    readAndWriteTxPrepareEntry( newLog );\n                    break;\n                case TX_1P_COMMIT:\n                    readAndWriteTxOnePhaseCommit( newLog );\n                    break;\n                case TX_2P_COMMIT:\n                    readAndWriteTxTwoPhaseCommit( newLog );\n                    break;\n                case COMMAND:\n                    readAndWriteCommandEntry( newLog );\n                    break;\n                case DONE:\n                    readAndVerifyDoneEntry();\n                    break;\n                case EMPTY:\n                    emptyHit = true;\n                    break;\n                default:\n                    throw new IOException( \"Log rotation failed, \"\n                        + \"unknown log entry[\" + entry + \"]\" );\n            }\n            buffer.clear();\n            buffer.limit( 1 );\n        }\n        newLog.force( false );\n        releaseCurrentLogFile();\n        setActiveLog( newActiveLog );\n        if ( keepLogs )\n        {\n            renameCurrentLogFileAndIncrementVersion( currentLogFile, \n                endPosition );\n        }\n        else\n        {\n            deleteCurrentLogFile( currentLogFile );\n            xaTf.getAndSetNewVersion();\n        }\n        if ( xaTf.getCurrentVersion() != ( currentVersion + 1 ) )\n        {\n            throw new IOException( \"version change failed\" );\n        }\n        fileChannel = newLog;\n        if ( !useMemoryMapped )\n        {\n            writeBuffer = new DirectMappedLogBuffer( fileChannel );\n        }\n        else\n        {\n            writeBuffer = new MemoryMappedLogBuffer( fileChannel );\n        }\n    }","id":53612,"modified_method":"public synchronized void rotate() throws IOException\n    {\n        xaTf.flushAll();\n        String newLogFile = fileName + \".2\";\n        String currentLogFile = fileName + \".1\";\n        char newActiveLog = LOG2;\n        long currentVersion = xaTf.getCurrentVersion();\n        String oldCopy = fileName + \".v\" + currentVersion;\n        if ( currentLog == CLEAN || currentLog == LOG2 )\n        {\n            newActiveLog = LOG1;\n            newLogFile = fileName + \".1\";\n            currentLogFile = fileName + \".2\";\n        }\n        else\n        {\n            assert currentLog == LOG1;\n        }\n        if ( new File( newLogFile ).exists() )\n        {\n            throw new IOException( \"New log file: \" + newLogFile + \n                \" already exist\" );\n        }\n        if ( new File( oldCopy ).exists() )\n        {\n            throw new IOException( \"Copy log file: \" + oldCopy + \n                \" already exist\" );\n        }\n        long endPosition = writeBuffer.getFileChannelPosition();\n        writeBuffer.force();\n        FileChannel newLog = new RandomAccessFile( \n            newLogFile, \"rw\" ).getChannel();\n        buffer.clear();\n        buffer.putLong( currentVersion + 1 );\n        long lastTx = xaTf.getLastCommittedTx();\n        buffer.putLong( lastTx ).flip();\n        previousLogLastCommittedTx = lastTx;\n        if ( newLog.write( buffer ) != 16 )\n        {\n            throw new IOException( \"Unable to write log version to new\" );\n        }\n        fileChannel.position( 0 );\n        buffer.clear();\n        buffer.limit( 16 );\n        if( fileChannel.read( buffer ) != 16 )\n        {\n            throw new IOException( \"Verification of log version failed\" );\n        }\n        buffer.flip();\n        long verification = buffer.getLong();\n        if ( verification != currentVersion )\n        {\n            throw new IOException( \"Verification of log version failed, \" + \n                \" expected \" + currentVersion + \" got \" + verification );\n        }\n        if ( xidIdentMap.size() > 0 )\n        {\n            fileChannel.position( getFirstStartEntry( endPosition ) );\n        }\n        buffer.clear(); // ignore other 8 bytes\n        buffer.limit( 1 );\n        boolean emptyHit = false;\n        while ( fileChannel.read( buffer ) == 1 && !emptyHit )\n        {\n            buffer.flip();\n            byte entry = buffer.get();\n            switch ( entry )\n            {\n                case TX_START:\n                    readAndWriteTxStartEntry( newLog );\n                    break;\n                case TX_PREPARE:\n                    readAndWriteTxPrepareEntry( newLog );\n                    break;\n                case TX_1P_COMMIT:\n                    readAndWriteTxOnePhaseCommit( newLog );\n                    break;\n                case TX_2P_COMMIT:\n                    readAndWriteTxTwoPhaseCommit( newLog );\n                    break;\n                case COMMAND:\n                    readAndWriteCommandEntry( newLog );\n                    break;\n                case DONE:\n                    readAndVerifyDoneEntry();\n                    break;\n                case EMPTY:\n                    emptyHit = true;\n                    break;\n                default:\n                    throw new IOException( \"Log rotation failed, \"\n                        + \"unknown log entry[\" + entry + \"]\" );\n            }\n            buffer.clear();\n            buffer.limit( 1 );\n        }\n        newLog.force( false );\n        releaseCurrentLogFile();\n        setActiveLog( newActiveLog );\n        if ( keepLogs )\n        {\n            renameCurrentLogFileAndIncrementVersion( currentLogFile, \n                endPosition );\n        }\n        else\n        {\n            deleteCurrentLogFile( currentLogFile );\n            xaTf.getAndSetNewVersion();\n        }\n        if ( xaTf.getCurrentVersion() != ( currentVersion + 1 ) )\n        {\n            throw new IOException( \"version change failed\" );\n        }\n        fileChannel = newLog;\n        if ( !useMemoryMapped )\n        {\n            writeBuffer = new DirectMappedLogBuffer( fileChannel );\n        }\n        else\n        {\n            writeBuffer = new MemoryMappedLogBuffer( fileChannel );\n        }\n    }","commit_id":"fc2e6c317ed539a7c78407cd4a8f37d30f15f70a","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void readAndWriteTxStartEntry( FileChannel newLog ) \n        throws IOException\n    {\n        // get the global id\n        buffer.clear();\n        buffer.put( TX_START );\n        buffer.limit( 3 );\n        if ( fileChannel.read( buffer ) != 2 )\n        {\n            throw new IllegalStateException( \n                \"Unable to read tx start entry xid id lengths\" );\n        }\n        buffer.flip();\n        buffer.position( 1 );\n        byte globalIdLength = buffer.get();\n        byte branchIdLength = buffer.get();\n        int xidLength = globalIdLength + branchIdLength;\n        buffer.limit( 3 + xidLength + 8 );\n        buffer.position( 3 );\n        if ( fileChannel.read( buffer ) != 8 + xidLength )\n        {\n            throw new IllegalStateException( \"Unable to read xid\" );\n        }\n        buffer.flip();\n        buffer.position( 3 + xidLength );\n        int identifier = buffer.getInt();\n        FileChannel writeToLog = null;\n        StartEntry entry = xidIdentMap.get( identifier );\n        if ( entry != null )\n        {\n            writeToLog = newLog;\n            entry.setStartPosition( newLog.position() );\n        }\n        buffer.position( 0 );\n        if ( writeToLog != null && \n            writeToLog.write( buffer ) != 3 + 8 + xidLength )\n        {\n            throw new TransactionFailureException( \n                \"Unable to write tx start xid\" );\n        }\n    }","id":53613,"modified_method":"private void readAndWriteTxStartEntry( FileChannel newLog ) \n        throws IOException\n    {\n        // get the global id\n        buffer.clear();\n        buffer.put( TX_START );\n        buffer.limit( 3 );\n        if ( fileChannel.read( buffer ) != 2 )\n        {\n            throw new IllegalStateException( \n                \"Unable to read tx start entry xid id lengths\" );\n        }\n        buffer.flip();\n        buffer.position( 1 );\n        byte globalIdLength = buffer.get();\n        byte branchIdLength = buffer.get();\n        int xidLength = globalIdLength + branchIdLength;\n        buffer.limit( 3 + xidLength + 8 );\n        buffer.position( 3 );\n        if ( fileChannel.read( buffer ) != 8 + xidLength )\n        {\n            throw new IllegalStateException( \"Unable to read xid\" );\n        }\n        buffer.flip();\n        buffer.position( 3 + xidLength );\n        int identifier = buffer.getInt();\n        FileChannel writeToLog = null;\n        LogEntry.Start entry = xidIdentMap.get( identifier );\n        if ( entry != null )\n        {\n            writeToLog = newLog;\n            entry.setStartPosition( newLog.position() );\n        }\n        buffer.position( 0 );\n        if ( writeToLog != null && \n            writeToLog.write( buffer ) != 3 + 8 + xidLength )\n        {\n            throw new TransactionFailureException( \n                \"Unable to write tx start xid\" );\n        }\n    }","commit_id":"fc2e6c317ed539a7c78407cd4a8f37d30f15f70a","url":"https://github.com/neo4j/neo4j"},{"original_method":"private long getFirstStartEntry( long endPosition )\n    {\n        long firstEntryPosition = endPosition;\n        for ( StartEntry entry : xidIdentMap.values() )\n        {\n            if ( entry.getStartPosition() < firstEntryPosition )\n            {\n                assert entry.getStartPosition() > 0; \n                firstEntryPosition = entry.getStartPosition();\n            }\n        }\n        return firstEntryPosition;\n    }","id":53614,"modified_method":"private long getFirstStartEntry( long endPosition )\n    {\n        long firstEntryPosition = endPosition;\n        for ( LogEntry.Start entry : xidIdentMap.values() )\n        {\n            if ( entry.getStartPosition() < firstEntryPosition )\n            {\n                assert entry.getStartPosition() > 0; \n                firstEntryPosition = entry.getStartPosition();\n            }\n        }\n        return firstEntryPosition;\n    }","commit_id":"fc2e6c317ed539a7c78407cd4a8f37d30f15f70a","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void readAndApplyTxTwoPhaseCommit() throws IOException\n        {\n            // get the tx identifier\n            buffer.clear();\n            buffer.limit( 12 );\n            if ( byteChannel.read( buffer ) != buffer.limit() )\n            {\n                throw new IOException( \"Unable to read tx 2PC entry\" );\n            }\n            buffer.flip();\n            int identifier = buffer.getInt();\n            long txId = buffer.getLong();\n            StartEntry entry = xidIdentMap.get( identifier );\n            if ( entry == null )\n            {\n                throw new IOException( \"Unable to read tx prepeare entry\" );\n            }\n            Xid xid = entry.getXid();\n            try\n            {\n                XaTransaction xaTx = xaRm.getXaTransaction( xid );\n                xaTx.setCommitTxId( txId );\n                xaRm.commit( xid, true );\n            }\n            catch ( XAException e )\n            {\n                e.printStackTrace();\n                throw new IOException( e.getMessage() );\n            }\n        }","id":53615,"modified_method":"private void readAndApplyTxTwoPhaseCommit() throws IOException\n        {\n            LogEntry.TwoPhaseCommit commit = \n                LogIoUtils.readTxTwoPhaseCommit( buffer, byteChannel );\n            if ( commit == null )\n            {\n                throw new IOException( \"Unable to read tx 2PC entry\" );\n            }\n            int identifier = commit.getIdentifier();\n            long txId = commit.getTxId();\n            LogEntry.Start entry = xidIdentMap.get( identifier );\n            if ( entry == null )\n            {\n                throw new IOException( \"Unable to read tx prepeare entry\" );\n            }\n            Xid xid = entry.getXid();\n            try\n            {\n                XaTransaction xaTx = xaRm.getXaTransaction( xid );\n                xaTx.setCommitTxId( txId );\n                xaRm.commit( xid, true );\n            }\n            catch ( XAException e )\n            {\n                e.printStackTrace();\n                throw new IOException( e.getMessage() );\n            }\n        }","commit_id":"fc2e6c317ed539a7c78407cd4a8f37d30f15f70a","url":"https://github.com/neo4j/neo4j"},{"original_method":"LogApplier( ReadableByteChannel byteChannel, ByteBuffer buffer, \n            XaTransactionFactory xaTf, XaResourceManager xaRm, \n            XaCommandFactory xaCf, ArrayMap<Integer,StartEntry> xidIdentMap, \n            Map<Integer,XaTransaction> recoveredTxMap )\n        {\n            this.byteChannel = byteChannel;\n            this.buffer = buffer;\n            this.xaTf = xaTf;\n            this.xaRm = xaRm;\n            this.xaCf = xaCf;\n            this.xidIdentMap = xidIdentMap;\n            this.recoveredTxMap = recoveredTxMap;\n        }","id":53616,"modified_method":"LogApplier( ReadableByteChannel byteChannel, ByteBuffer buffer, \n            XaTransactionFactory xaTf, XaResourceManager xaRm, \n            XaCommandFactory xaCf, ArrayMap<Integer,LogEntry.Start> xidIdentMap, \n            Map<Integer,XaTransaction> recoveredTxMap )\n        {\n            this.byteChannel = byteChannel;\n            this.buffer = buffer;\n            this.xaTf = xaTf;\n            this.xaRm = xaRm;\n            this.xaCf = xaCf;\n            this.xidIdentMap = xidIdentMap;\n            this.recoveredTxMap = recoveredTxMap;\n        }","commit_id":"fc2e6c317ed539a7c78407cd4a8f37d30f15f70a","url":"https://github.com/neo4j/neo4j"},{"original_method":"public ReadableByteChannel getCommittedTransaction( long txId )\n    {\n        // check if written out \n        // find log that contains transaction\n        // extract transaction3\n        return null;\n    }","id":53617,"modified_method":"public ReadableByteChannel getCommittedTransaction( long txId )\n        throws IOException\n    {\n        // check if written out\n        String name = fileName + \".tx_\" + txId;\n        File txFile = new File( name );\n        if ( txFile.exists() )\n        {\n            return new RandomAccessFile( name, \"r\" ).getChannel();\n        }\n\n        // find log that contains transaction\n        long version = logVersion;\n        long committedTx = previousLogLastCommittedTx;\n        while ( committedTx < txId )\n        {\n            version--;\n            ReadableByteChannel log = getLogicalLog( version );\n            ByteBuffer buf = ByteBuffer.allocate( 16 );\n            if ( log.read( buf ) != 16 )\n            {\n                throw new IOException( \"Unable to read log version \" + \n                        version );\n            }\n            buf.flip();\n            long readVersion = buffer.getLong();\n            if ( readVersion != version )\n            {\n                throw new IOException( \"Got \" + readVersion + \n                        \" from log when expecting \" + version );\n            }\n            committedTx = buffer.getLong();\n            log.close();\n        }\n        \n        // extract transaction\n        // ReadableByteChannel log\n        return null;\n    }","commit_id":"fc2e6c317ed539a7c78407cd4a8f37d30f15f70a","url":"https://github.com/neo4j/neo4j"},{"original_method":"public synchronized void applyTransaction( ReadableByteChannel byteChannel )\n        throws IOException\n    {\n        if ( !slave )\n        {\n            throw new IllegalStateException( \"This is not a slave\" );\n        }\n        buffer.clear();\n        buffer.limit( 8 );\n        if ( byteChannel.read( buffer ) != 16 )\n        {\n            throw new IOException( \"Unable to read log version\" );\n        }\n        buffer.flip();\n        long txId = buffer.getLong();\n        if ( txId != (xaTf.getLastCommittedTx() + 1) )\n        {\n            throw new IllegalStateException( \"Tried to apply tx \" + \n                txId + \" but expected transaction \" + \n                (xaTf.getCurrentVersion() + 1) );\n        }\n        log.fine( \"Logical log version: \" + logVersion + \n            \", committing tx=\" + txId + \")\" );\n        long logEntriesFound = 0;\n        LogApplier logApplier = new LogApplier( byteChannel, buffer, xaTf, xaRm,\n            cf, xidIdentMap, recoveredTxMap );\n        while ( logApplier.readAndApplyEntry() )\n        {\n            logEntriesFound++;\n        }\n        byteChannel.close();\n        // xaTf.flushAll();\n        // xaTf.getAndSetNewVersion();\n        xaTf.setLastCommittedTx( txId );\n        xaRm.reset();\n        log.info( \"Tx[\" + txId + \"] \" + \" applied successfully.\" );\n    }","id":53618,"modified_method":"public synchronized void applyTransaction( ReadableByteChannel byteChannel )\n        throws IOException\n    {\n        if ( !slave )\n        {\n            throw new IllegalStateException( \"This is not a slave\" );\n        }\n        buffer.clear();\n        buffer.limit( 8 );\n        if ( byteChannel.read( buffer ) != 16 )\n        {\n            throw new IOException( \"Unable to read log version\" );\n        }\n        buffer.flip();\n        long txId = buffer.getLong();\n        if ( txId != (xaTf.getLastCommittedTx() + 1) )\n        {\n            throw new IllegalStateException( \"Tried to apply tx \" + \n                txId + \" but expected transaction \" + \n                (xaTf.getCurrentVersion() + 1) );\n        }\n        log.fine( \"Logical log version: \" + logVersion + \n            \", committing tx=\" + txId + \")\" );\n        long logEntriesFound = 0;\n        LogApplier logApplier = new LogApplier( byteChannel, buffer, xaTf, xaRm,\n            cf, xidIdentMap, recoveredTxMap );\n        while ( logApplier.readAndApplyEntry() )\n        {\n            logEntriesFound++;\n        }\n        byteChannel.close();\n        // TODO: optimize this and write to local logical log instead of flush?\n        xaTf.flushAll();\n        xaTf.setLastCommittedTx( txId );\n        xaRm.reset();\n        log.info( \"Tx[\" + txId + \"] \" + \" applied successfully.\" );\n    }","commit_id":"fc2e6c317ed539a7c78407cd4a8f37d30f15f70a","url":"https://github.com/neo4j/neo4j"},{"original_method":"private boolean readTxTwoPhaseCommit() throws IOException\n    {\n        // get the tx identifier\n        buffer.clear();\n        buffer.limit( 12 );\n        if ( fileChannel.read( buffer ) != buffer.limit() )\n        {\n            return false;\n        }\n        buffer.flip();\n        int identifier = buffer.getInt();\n        long txId = buffer.getLong();\n        StartEntry entry = xidIdentMap.get( identifier );\n        if ( entry == null )\n        {\n            return false;\n        }\n        Xid xid = entry.getXid();\n        if ( xid == null )\n        {\n            return false;\n        }\n        try\n        {\n            XaTransaction xaTx = xaRm.getXaTransaction( xid );\n            xaTx.setCommitTxId( txId );\n            xaRm.injectTwoPhaseCommit( xid );\n        }\n        catch ( XAException e )\n        {\n            e.printStackTrace();\n            throw new IOException( e.getMessage() );\n        }\n        return true;\n    }","id":53619,"modified_method":"private boolean readTxTwoPhaseCommit() throws IOException\n    {\n        // get the tx identifier\n        LogEntry.TwoPhaseCommit commit = LogIoUtils.readTxTwoPhaseCommit( \n                buffer, fileChannel );\n        if ( commit == null )\n        {\n            return false;\n        }\n        int identifier = commit.getIdentifier();\n        long txId = commit.getTxId();\n        LogEntry.Start entry = xidIdentMap.get( identifier );\n        if ( entry == null )\n        {\n            return false;\n        }\n        Xid xid = entry.getXid();\n        if ( xid == null )\n        {\n            return false;\n        }\n        try\n        {\n            XaTransaction xaTx = xaRm.getXaTransaction( xid );\n            xaTx.setCommitTxId( txId );\n            xaRm.injectTwoPhaseCommit( xid );\n        }\n        catch ( XAException e )\n        {\n            e.printStackTrace();\n            throw new IOException( e.getMessage() );\n        }\n        return true;\n    }","commit_id":"fc2e6c317ed539a7c78407cd4a8f37d30f15f70a","url":"https://github.com/neo4j/neo4j"},{"original_method":"private boolean readDoneEntry() throws IOException\n        {\n            // get the tx identifier\n            buffer.clear();\n            buffer.limit( 4 );\n            if ( byteChannel.read( buffer ) != buffer.limit() )\n            {\n                return false;\n            }\n            buffer.flip();\n            int identifier = buffer.getInt();\n            StartEntry entry = xidIdentMap.get( identifier );\n            if ( entry == null )\n            {\n                throw new IOException( \"Unable to read tx done entry\" );\n            }\n            Xid xid = entry.getXid();\n            xaRm.pruneXidIfExist( xid );\n            xidIdentMap.remove( identifier );\n            recoveredTxMap.remove( identifier );\n            return true;\n        }","id":53620,"modified_method":"private boolean readDoneEntry() throws IOException\n        {\n            LogEntry.Done done = \n                LogIoUtils.readTxDoneEntry( buffer, byteChannel );\n            if ( done == null )\n            {\n                // not throw exception?\n                return false;\n            }\n            int identifier = done.getIdentifier();\n            LogEntry.Start entry = xidIdentMap.get( identifier );\n            if ( entry == null )\n            {\n                throw new IOException( \"Unable to read tx done entry\" );\n            }\n            Xid xid = entry.getXid();\n            xaRm.pruneXidIfExist( xid );\n            xidIdentMap.remove( identifier );\n            recoveredTxMap.remove( identifier );\n            return true;\n        }","commit_id":"fc2e6c317ed539a7c78407cd4a8f37d30f15f70a","url":"https://github.com/neo4j/neo4j"},{"original_method":"private boolean readTxStartEntry() throws IOException\n    {\n        // get the global id\n        long position = fileChannel.position();\n        buffer.clear();\n        buffer.limit( 1 );\n        if ( fileChannel.read( buffer ) != buffer.limit() )\n        {\n            return false;\n        }\n        buffer.flip();\n        byte globalIdLength = buffer.get();\n        // get the branchId id\n        buffer.clear();\n        buffer.limit( 1 );\n        if ( fileChannel.read( buffer ) != buffer.limit() )\n        {\n            return false;\n        }\n        buffer.flip();\n        byte branchIdLength = buffer.get();\n        byte globalId[] = new byte[globalIdLength];\n        ByteBuffer tmpBuffer = ByteBuffer.wrap( globalId );\n        if ( fileChannel.read( tmpBuffer ) != globalId.length )\n        {\n            return false;\n        }\n        byte branchId[] = new byte[branchIdLength];\n        tmpBuffer = ByteBuffer.wrap( branchId );\n        if ( fileChannel.read( tmpBuffer ) != branchId.length )\n        {\n            return false;\n        }\n        // get the tx identifier\n        buffer.clear();\n        buffer.limit( 4 );\n        if ( fileChannel.read( buffer ) != buffer.limit() )\n        {\n            return false;\n        }\n        buffer.flip();\n        int identifier = buffer.getInt();\n        if ( identifier >= nextIdentifier )\n        {\n            nextIdentifier = (identifier + 1);\n        }\n        // get the format id\n        buffer.clear();\n        buffer.limit( 4 );\n        if ( fileChannel.read( buffer ) != buffer.limit() )\n        {\n            return false;\n        }\n        buffer.flip();\n        int formatId = buffer.getInt();\n        // re-create the transaction\n        Xid xid = new XidImpl( globalId, branchId, formatId );\n        xidIdentMap.put( identifier, new StartEntry( xid, position ) );\n        XaTransaction xaTx = xaTf.create( identifier );\n        xaTx.setRecovered();\n        recoveredTxMap.put( identifier, xaTx );\n        xaRm.injectStart( xid, xaTx );\n        return true;\n    }","id":53621,"modified_method":"private boolean readTxStartEntry() throws IOException\n    {\n        // get the global id\n        long position = fileChannel.position();\n        LogEntry.Start entry = \n            LogIoUtils.readTxStartEntry( buffer, fileChannel, position );\n        if ( entry == null )\n        {\n            return false;\n        }\n        int identifier = entry.getIdentifier();\n        if ( identifier >= nextIdentifier )\n        {\n            nextIdentifier = (identifier + 1);\n        }\n        // re-create the transaction\n        Xid xid = entry.getXid();\n        xidIdentMap.put( identifier, entry );\n        XaTransaction xaTx = xaTf.create( identifier );\n        xaTx.setRecovered();\n        recoveredTxMap.put( identifier, xaTx );\n        xaRm.injectStart( xid, xaTx );\n        return true;\n    }","commit_id":"fc2e6c317ed539a7c78407cd4a8f37d30f15f70a","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void readAndApplyTxOnePhaseCommit() throws IOException\n        {\n            // get the tx identifier\n            buffer.clear();\n            buffer.limit( 12 );\n            if ( byteChannel.read( buffer ) != buffer.limit() )\n            {\n                throw new IOException( \"Unable to read tx 1PC entry\" );\n            }\n            buffer.flip();\n            int identifier = buffer.getInt();\n            long txId = buffer.getLong();\n            StartEntry entry = xidIdentMap.get( identifier );\n            if ( entry == null )\n            {\n                throw new IOException( \"Unable to read tx prepeare entry\" );\n            }\n            Xid xid = entry.getXid();\n            try\n            {\n                XaTransaction xaTx = xaRm.getXaTransaction( xid );\n                xaTx.setCommitTxId( txId );\n                xaRm.commit( xid, true );\n            }\n            catch ( XAException e )\n            {\n                e.printStackTrace();\n                throw new IOException( e.getMessage() );\n            }\n        }","id":53622,"modified_method":"private void readAndApplyTxOnePhaseCommit() throws IOException\n        {\n            // get the tx identifier\n            LogEntry.OnePhaseCommit commit = \n                LogIoUtils.readTxOnePhaseCommit( buffer, byteChannel );\n            if ( commit == null )\n            {\n                throw new IOException( \"Unable to read tx 1PC entry\" );\n            }\n            int identifier = commit.getIdentifier();\n            long txId = commit.getTxId();\n            LogEntry.Start entry = xidIdentMap.get( identifier );\n            if ( entry == null )\n            {\n                throw new IOException( \"Unable to read tx prepeare entry\" );\n            }\n            Xid xid = entry.getXid();\n            try\n            {\n                XaTransaction xaTx = xaRm.getXaTransaction( xid );\n                xaTx.setCommitTxId( txId );\n                xaRm.commit( xid, true );\n            }\n            catch ( XAException e )\n            {\n                e.printStackTrace();\n                throw new IOException( e.getMessage() );\n            }\n        }","commit_id":"fc2e6c317ed539a7c78407cd4a8f37d30f15f70a","url":"https://github.com/neo4j/neo4j"},{"original_method":"private boolean readTxOnePhaseCommit() throws IOException\n    {\n        // get the tx identifier\n        buffer.clear();\n        buffer.limit( 12 );\n        if ( fileChannel.read( buffer ) != buffer.limit() )\n        {\n            return false;\n        }\n        buffer.flip();\n        int identifier = buffer.getInt();\n        long txId = buffer.getLong();\n        StartEntry entry = xidIdentMap.get( identifier );\n        if ( entry == null )\n        {\n            return false;\n        }\n        Xid xid = entry.getXid();\n        try\n        {\n            XaTransaction xaTx = xaRm.getXaTransaction( xid );\n            xaTx.setCommitTxId( txId );\n            xaRm.injectOnePhaseCommit( xid );\n        }\n        catch ( XAException e )\n        {\n            e.printStackTrace();\n            throw new IOException( e.getMessage() );\n        }\n        return true;\n    }","id":53623,"modified_method":"private boolean readTxOnePhaseCommit() throws IOException\n    {\n        // get the tx identifier\n        LogEntry.OnePhaseCommit commit = LogIoUtils.readTxOnePhaseCommit( \n                buffer, fileChannel );\n        if ( commit == null )\n        {\n            return false;\n        }\n        int identifier = commit.getIdentifier();\n        long txId = commit.getTxId();\n        LogEntry.Start entry = xidIdentMap.get( identifier );\n        if ( entry == null )\n        {\n            return false;\n        }\n        Xid xid = entry.getXid();\n        try\n        {\n            XaTransaction xaTx = xaRm.getXaTransaction( xid );\n            xaTx.setCommitTxId( txId );\n            xaRm.injectOnePhaseCommit( xid );\n        }\n        catch ( XAException e )\n        {\n            e.printStackTrace();\n            throw new IOException( e.getMessage() );\n        }\n        return true;\n    }","commit_id":"fc2e6c317ed539a7c78407cd4a8f37d30f15f70a","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void doInternalRecovery( String logFileName ) throws IOException\n    {\n        log.info( \"Non clean shutdown detected on log [\" + logFileName + \n            \"]. Recovery started ...\" );\n        // get log creation time\n        buffer.clear();\n        buffer.limit( 16 );\n        if ( fileChannel.read( buffer ) != 16 )\n        {\n            log.info( \"Unable to read timestamp information, \"\n                + \"no records in logical log.\" );\n            fileChannel.close();\n            boolean success = FileUtils.renameFile( new File( logFileName ), \n                new File( logFileName + \"_unknown_timestamp_\" + \n                    System.currentTimeMillis() + \".log\" ) );\n            assert success;\n            fileChannel = new RandomAccessFile( logFileName, \n                \"rw\" ).getChannel();\n            return;\n        }\n        buffer.flip();\n        logVersion = buffer.getLong();\n        long lastCommittedTx = buffer.getLong();\n        log.fine( \"Logical log version: \" + logVersion + \" with committed tx[\" +\n            lastCommittedTx + \"]\" );\n        long logEntriesFound = 0;\n        long lastEntryPos = fileChannel.position();\n        while ( readEntry() )\n        {\n            logEntriesFound++;\n            lastEntryPos = fileChannel.position();\n        }\n        // make sure we overwrite any broken records\n        fileChannel.position( lastEntryPos );\n        scanIsComplete = true;\n        log.fine( \"Internal recovery completed, scanned \" + logEntriesFound\n            + \" log entries.\" );\n        xaRm.checkXids();\n        if ( xidIdentMap.size() == 0 )\n        {\n            log.fine( \"Recovery completed.\" );\n        }\n        else\n        {\n            log.fine( \"[\" + logFileName + \"] Found \" + xidIdentMap.size()\n                + \" prepared 2PC transactions.\" );\n            for ( StartEntry entry : xidIdentMap.values() )\n            {\n                log.fine( \"[\" + logFileName + \"] 2PC xid[\" + \n                    entry.getXid() + \"]\" );\n            }\n        }\n        recoveredTxMap.clear();\n    }","id":53624,"modified_method":"private void doInternalRecovery( String logFileName ) throws IOException\n    {\n        log.info( \"Non clean shutdown detected on log [\" + logFileName + \n            \"]. Recovery started ...\" );\n        // get log creation time\n        buffer.clear();\n        buffer.limit( 16 );\n        if ( fileChannel.read( buffer ) != 16 )\n        {\n            log.info( \"Unable to read timestamp information, \"\n                + \"no records in logical log.\" );\n            fileChannel.close();\n            boolean success = FileUtils.renameFile( new File( logFileName ), \n                new File( logFileName + \"_unknown_timestamp_\" + \n                    System.currentTimeMillis() + \".log\" ) );\n            assert success;\n            fileChannel = new RandomAccessFile( logFileName, \n                \"rw\" ).getChannel();\n            return;\n        }\n        buffer.flip();\n        logVersion = buffer.getLong();\n        long lastCommittedTx = buffer.getLong();\n        previousLogLastCommittedTx = lastCommittedTx;\n        log.fine( \"Logical log version: \" + logVersion + \" with committed tx[\" +\n            lastCommittedTx + \"]\" );\n        long logEntriesFound = 0;\n        long lastEntryPos = fileChannel.position();\n        while ( readEntry() )\n        {\n            logEntriesFound++;\n            lastEntryPos = fileChannel.position();\n        }\n        // make sure we overwrite any broken records\n        fileChannel.position( lastEntryPos );\n        scanIsComplete = true;\n        log.fine( \"Internal recovery completed, scanned \" + logEntriesFound\n            + \" log entries.\" );\n        xaRm.checkXids();\n        if ( xidIdentMap.size() == 0 )\n        {\n            log.fine( \"Recovery completed.\" );\n        }\n        else\n        {\n            log.fine( \"[\" + logFileName + \"] Found \" + xidIdentMap.size()\n                + \" prepared 2PC transactions.\" );\n            for ( LogEntry.Start entry : xidIdentMap.values() )\n            {\n                log.fine( \"[\" + logFileName + \"] 2PC xid[\" + \n                    entry.getXid() + \"]\" );\n            }\n        }\n        recoveredTxMap.clear();\n    }","commit_id":"fc2e6c317ed539a7c78407cd4a8f37d30f15f70a","url":"https://github.com/neo4j/neo4j"},{"original_method":"public synchronized void applyTransaction( ReadableByteChannel byteChannel )\n        throws IOException\n    {\n        if ( !slave )\n        {\n            throw new IllegalStateException( \"This is not a slave\" );\n        }\n        buffer.clear();\n        buffer.limit( 8 );\n        if ( byteChannel.read( buffer ) != 16 )\n        {\n            throw new IOException( \"Unable to read log version\" );\n        }\n        buffer.flip();\n        long txId = buffer.getLong();\n        if ( txId != (xaTf.getLastCommittedTx() + 1) )\n        {\n            throw new IllegalStateException( \"Tried to apply tx \" + \n                txId + \" but expected transaction \" + \n                (xaTf.getCurrentVersion() + 1) );\n        }\n        log.fine( \"Logical log version: \" + logVersion + \n            \", committing tx=\" + txId + \")\" );\n        long logEntriesFound = 0;\n        LogApplier logApplier = new LogApplier( byteChannel, buffer, xaTf, xaRm,\n            cf, xidIdentMap, recoveredTxMap );\n        while ( logApplier.readAndApplyEntry() )\n        {\n            logEntriesFound++;\n        }\n        byteChannel.close();\n        // xaTf.flushAll();\n        // xaTf.getAndSetNewVersion();\n        xaTf.setLastCommittedTx( txId );\n        xaRm.reset();\n        log.info( \"Tx[\" + txId + \"] \" + \" applied successfully.\" );\n    }","id":53625,"modified_method":"public synchronized void applyTransaction( ReadableByteChannel byteChannel )\n        throws IOException\n    {\n        if ( !slave )\n        {\n            throw new IllegalStateException( \"This is not a slave\" );\n        }\n        buffer.clear();\n        buffer.limit( 8 );\n        if ( byteChannel.read( buffer ) != 16 )\n        {\n            throw new IOException( \"Unable to read log version\" );\n        }\n        buffer.flip();\n        long txId = buffer.getLong();\n        if ( txId != (xaTf.getLastCommittedTx() + 1) )\n        {\n            throw new IllegalStateException( \"Tried to apply tx \" + \n                txId + \" but expected transaction \" + \n                (xaTf.getCurrentVersion() + 1) );\n        }\n        log.fine( \"Logical log version: \" + logVersion + \n            \", committing tx=\" + txId + \")\" );\n        long logEntriesFound = 0;\n        LogApplier logApplier = new LogApplier( byteChannel, buffer, xaTf, xaRm,\n            cf, xidIdentMap, recoveredTxMap );\n        while ( logApplier.readAndApplyEntry() )\n        {\n            logEntriesFound++;\n        }\n        byteChannel.close();\n        // TODO: optimize this and write to local logical log instead of flush?\n        xaTf.flushAll();\n        xaTf.setLastCommittedTx( txId );\n        xaRm.reset();\n        log.info( \"Tx[\" + txId + \"] \" + \" applied successfully.\" );\n    }","commit_id":"21d6ca77ca4c9e0c09f1e7c3ad5899a404dccf12","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void doInternalRecovery( String logFileName ) throws IOException\n    {\n        log.info( \"Non clean shutdown detected on log [\" + logFileName + \n            \"]. Recovery started ...\" );\n        // get log creation time\n        buffer.clear();\n        buffer.limit( 16 );\n        if ( fileChannel.read( buffer ) != 16 )\n        {\n            log.info( \"Unable to read timestamp information, \"\n                + \"no records in logical log.\" );\n            fileChannel.close();\n            boolean success = FileUtils.renameFile( new File( logFileName ), \n                new File( logFileName + \"_unknown_timestamp_\" + \n                    System.currentTimeMillis() + \".log\" ) );\n            assert success;\n            fileChannel = new RandomAccessFile( logFileName, \n                \"rw\" ).getChannel();\n            return;\n        }\n        buffer.flip();\n        logVersion = buffer.getLong();\n        long lastCommittedTx = buffer.getLong();\n        log.fine( \"Logical log version: \" + logVersion + \" with committed tx[\" +\n            lastCommittedTx + \"]\" );\n        long logEntriesFound = 0;\n        long lastEntryPos = fileChannel.position();\n        while ( readEntry() )\n        {\n            logEntriesFound++;\n            lastEntryPos = fileChannel.position();\n        }\n        // make sure we overwrite any broken records\n        fileChannel.position( lastEntryPos );\n        scanIsComplete = true;\n        log.fine( \"Internal recovery completed, scanned \" + logEntriesFound\n            + \" log entries.\" );\n        xaRm.checkXids();\n        if ( xidIdentMap.size() == 0 )\n        {\n            log.fine( \"Recovery completed.\" );\n        }\n        else\n        {\n            log.fine( \"[\" + logFileName + \"] Found \" + xidIdentMap.size()\n                + \" prepared 2PC transactions.\" );\n            for ( StartEntry entry : xidIdentMap.values() )\n            {\n                log.fine( \"[\" + logFileName + \"] 2PC xid[\" + \n                    entry.getXid() + \"]\" );\n            }\n        }\n        recoveredTxMap.clear();\n    }","id":53626,"modified_method":"private void doInternalRecovery( String logFileName ) throws IOException\n    {\n        log.info( \"Non clean shutdown detected on log [\" + logFileName + \n            \"]. Recovery started ...\" );\n        // get log creation time\n        buffer.clear();\n        buffer.limit( 16 );\n        if ( fileChannel.read( buffer ) != 16 )\n        {\n            log.info( \"Unable to read timestamp information, \"\n                + \"no records in logical log.\" );\n            fileChannel.close();\n            boolean success = FileUtils.renameFile( new File( logFileName ), \n                new File( logFileName + \"_unknown_timestamp_\" + \n                    System.currentTimeMillis() + \".log\" ) );\n            assert success;\n            fileChannel = new RandomAccessFile( logFileName, \n                \"rw\" ).getChannel();\n            return;\n        }\n        buffer.flip();\n        logVersion = buffer.getLong();\n        long lastCommittedTx = buffer.getLong();\n        previousLogLastCommittedTx = lastCommittedTx;\n        log.fine( \"Logical log version: \" + logVersion + \" with committed tx[\" +\n            lastCommittedTx + \"]\" );\n        long logEntriesFound = 0;\n        long lastEntryPos = fileChannel.position();\n        while ( readEntry() )\n        {\n            logEntriesFound++;\n            lastEntryPos = fileChannel.position();\n        }\n        // make sure we overwrite any broken records\n        fileChannel.position( lastEntryPos );\n        scanIsComplete = true;\n        log.fine( \"Internal recovery completed, scanned \" + logEntriesFound\n            + \" log entries.\" );\n        xaRm.checkXids();\n        if ( xidIdentMap.size() == 0 )\n        {\n            log.fine( \"Recovery completed.\" );\n        }\n        else\n        {\n            log.fine( \"[\" + logFileName + \"] Found \" + xidIdentMap.size()\n                + \" prepared 2PC transactions.\" );\n            for ( LogEntry.Start entry : xidIdentMap.values() )\n            {\n                log.fine( \"[\" + logFileName + \"] 2PC xid[\" + \n                    entry.getXid() + \"]\" );\n            }\n        }\n        recoveredTxMap.clear();\n    }","commit_id":"21d6ca77ca4c9e0c09f1e7c3ad5899a404dccf12","url":"https://github.com/neo4j/neo4j"},{"original_method":"private boolean readDoneEntry() throws IOException\n        {\n            // get the tx identifier\n            buffer.clear();\n            buffer.limit( 4 );\n            if ( byteChannel.read( buffer ) != buffer.limit() )\n            {\n                return false;\n            }\n            buffer.flip();\n            int identifier = buffer.getInt();\n            StartEntry entry = xidIdentMap.get( identifier );\n            if ( entry == null )\n            {\n                throw new IOException( \"Unable to read tx done entry\" );\n            }\n            Xid xid = entry.getXid();\n            xaRm.pruneXidIfExist( xid );\n            xidIdentMap.remove( identifier );\n            recoveredTxMap.remove( identifier );\n            return true;\n        }","id":53627,"modified_method":"private boolean readDoneEntry() throws IOException\n        {\n            LogEntry.Done done = \n                LogIoUtils.readTxDoneEntry( buffer, byteChannel );\n            if ( done == null )\n            {\n                // not throw exception?\n                return false;\n            }\n            int identifier = done.getIdentifier();\n            LogEntry.Start entry = xidIdentMap.get( identifier );\n            if ( entry == null )\n            {\n                throw new IOException( \"Unable to read tx done entry\" );\n            }\n            Xid xid = entry.getXid();\n            xaRm.pruneXidIfExist( xid );\n            xidIdentMap.remove( identifier );\n            recoveredTxMap.remove( identifier );\n            return true;\n        }","commit_id":"21d6ca77ca4c9e0c09f1e7c3ad5899a404dccf12","url":"https://github.com/neo4j/neo4j"},{"original_method":"private boolean readCommandEntry() throws IOException\n    {\n        buffer.clear();\n        buffer.limit( 4 );\n        if ( fileChannel.read( buffer ) != buffer.limit() )\n        {\n            return false;\n        }\n        buffer.flip();\n        int identifier = buffer.getInt();\n        XaCommand command = cf.readCommand( fileChannel, buffer );\n        if ( command == null )\n        {\n            // readCommand returns null if full command couldn't be loaded\n            return false;\n        }\n        command.setRecovered();\n        XaTransaction xaTx = recoveredTxMap.get( identifier );\n        xaTx.injectCommand( command );\n        return true;\n    }","id":53628,"modified_method":"private boolean readCommandEntry() throws IOException\n    {\n        LogEntry.Command entry = LogIoUtils.readTxCommand( buffer, \n                fileChannel, cf );\n        if ( entry == null )\n        {\n            return false;\n        }\n        int identifier = entry.getIdentifier();\n        XaCommand command = entry.getXaCommand();\n        if ( command == null )\n        {\n            // readCommand returns null if full command couldn't be loaded\n            return false;\n        }\n        command.setRecovered();\n        XaTransaction xaTx = recoveredTxMap.get( identifier );\n        xaTx.injectCommand( command );\n        return true;\n    }","commit_id":"21d6ca77ca4c9e0c09f1e7c3ad5899a404dccf12","url":"https://github.com/neo4j/neo4j"},{"original_method":"private boolean readTxTwoPhaseCommit() throws IOException\n    {\n        // get the tx identifier\n        buffer.clear();\n        buffer.limit( 12 );\n        if ( fileChannel.read( buffer ) != buffer.limit() )\n        {\n            return false;\n        }\n        buffer.flip();\n        int identifier = buffer.getInt();\n        long txId = buffer.getLong();\n        StartEntry entry = xidIdentMap.get( identifier );\n        if ( entry == null )\n        {\n            return false;\n        }\n        Xid xid = entry.getXid();\n        if ( xid == null )\n        {\n            return false;\n        }\n        try\n        {\n            XaTransaction xaTx = xaRm.getXaTransaction( xid );\n            xaTx.setCommitTxId( txId );\n            xaRm.injectTwoPhaseCommit( xid );\n        }\n        catch ( XAException e )\n        {\n            e.printStackTrace();\n            throw new IOException( e.getMessage() );\n        }\n        return true;\n    }","id":53629,"modified_method":"private boolean readTxTwoPhaseCommit() throws IOException\n    {\n        // get the tx identifier\n        LogEntry.TwoPhaseCommit commit = LogIoUtils.readTxTwoPhaseCommit( \n                buffer, fileChannel );\n        if ( commit == null )\n        {\n            return false;\n        }\n        int identifier = commit.getIdentifier();\n        long txId = commit.getTxId();\n        LogEntry.Start entry = xidIdentMap.get( identifier );\n        if ( entry == null )\n        {\n            return false;\n        }\n        Xid xid = entry.getXid();\n        if ( xid == null )\n        {\n            return false;\n        }\n        try\n        {\n            XaTransaction xaTx = xaRm.getXaTransaction( xid );\n            xaTx.setCommitTxId( txId );\n            xaRm.injectTwoPhaseCommit( xid );\n        }\n        catch ( XAException e )\n        {\n            e.printStackTrace();\n            throw new IOException( e.getMessage() );\n        }\n        return true;\n    }","commit_id":"21d6ca77ca4c9e0c09f1e7c3ad5899a404dccf12","url":"https://github.com/neo4j/neo4j"},{"original_method":"private boolean readTxStartEntry() throws IOException\n    {\n        // get the global id\n        long position = fileChannel.position();\n        buffer.clear();\n        buffer.limit( 1 );\n        if ( fileChannel.read( buffer ) != buffer.limit() )\n        {\n            return false;\n        }\n        buffer.flip();\n        byte globalIdLength = buffer.get();\n        // get the branchId id\n        buffer.clear();\n        buffer.limit( 1 );\n        if ( fileChannel.read( buffer ) != buffer.limit() )\n        {\n            return false;\n        }\n        buffer.flip();\n        byte branchIdLength = buffer.get();\n        byte globalId[] = new byte[globalIdLength];\n        ByteBuffer tmpBuffer = ByteBuffer.wrap( globalId );\n        if ( fileChannel.read( tmpBuffer ) != globalId.length )\n        {\n            return false;\n        }\n        byte branchId[] = new byte[branchIdLength];\n        tmpBuffer = ByteBuffer.wrap( branchId );\n        if ( fileChannel.read( tmpBuffer ) != branchId.length )\n        {\n            return false;\n        }\n        // get the tx identifier\n        buffer.clear();\n        buffer.limit( 4 );\n        if ( fileChannel.read( buffer ) != buffer.limit() )\n        {\n            return false;\n        }\n        buffer.flip();\n        int identifier = buffer.getInt();\n        if ( identifier >= nextIdentifier )\n        {\n            nextIdentifier = (identifier + 1);\n        }\n        // get the format id\n        buffer.clear();\n        buffer.limit( 4 );\n        if ( fileChannel.read( buffer ) != buffer.limit() )\n        {\n            return false;\n        }\n        buffer.flip();\n        int formatId = buffer.getInt();\n        // re-create the transaction\n        Xid xid = new XidImpl( globalId, branchId, formatId );\n        xidIdentMap.put( identifier, new StartEntry( xid, position ) );\n        XaTransaction xaTx = xaTf.create( identifier );\n        xaTx.setRecovered();\n        recoveredTxMap.put( identifier, xaTx );\n        xaRm.injectStart( xid, xaTx );\n        return true;\n    }","id":53630,"modified_method":"private boolean readTxStartEntry() throws IOException\n    {\n        // get the global id\n        long position = fileChannel.position();\n        LogEntry.Start entry = \n            LogIoUtils.readTxStartEntry( buffer, fileChannel, position );\n        if ( entry == null )\n        {\n            return false;\n        }\n        int identifier = entry.getIdentifier();\n        if ( identifier >= nextIdentifier )\n        {\n            nextIdentifier = (identifier + 1);\n        }\n        // re-create the transaction\n        Xid xid = entry.getXid();\n        xidIdentMap.put( identifier, entry );\n        XaTransaction xaTx = xaTf.create( identifier );\n        xaTx.setRecovered();\n        recoveredTxMap.put( identifier, xaTx );\n        xaRm.injectStart( xid, xaTx );\n        return true;\n    }","commit_id":"21d6ca77ca4c9e0c09f1e7c3ad5899a404dccf12","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void readCommandEntry() throws IOException\n        {\n            buffer.clear();\n            buffer.limit( 4 );\n            if ( byteChannel.read( buffer ) != buffer.limit() )\n            {\n                throw new IOException( \"Unable to read tx command entry\" );\n            }\n            buffer.flip();\n            int identifier = buffer.getInt();\n            XaCommand command = xaCf.readCommand( byteChannel, buffer );\n            if ( command == null )\n            {\n                throw new IOException( \"Unable to read command entry\" );\n            }\n            command.setRecovered();\n            XaTransaction xaTx = recoveredTxMap.get( identifier );\n            xaTx.injectCommand( command );\n        }","id":53631,"modified_method":"private void readCommandEntry() throws IOException\n        {\n            LogEntry.Command entry = \n                LogIoUtils.readTxCommand( buffer, byteChannel, xaCf );\n            if ( entry == null )\n            {\n                throw new IOException( \"Unable to read tx command entry\" );\n            }\n            int identifier = entry.getIdentifier();\n            XaCommand command = entry.getXaCommand();\n            command.setRecovered();\n            XaTransaction xaTx = recoveredTxMap.get( identifier );\n            xaTx.injectCommand( command );\n        }","commit_id":"21d6ca77ca4c9e0c09f1e7c3ad5899a404dccf12","url":"https://github.com/neo4j/neo4j"},{"original_method":"private boolean readTxOnePhaseCommit() throws IOException\n    {\n        // get the tx identifier\n        buffer.clear();\n        buffer.limit( 12 );\n        if ( fileChannel.read( buffer ) != buffer.limit() )\n        {\n            return false;\n        }\n        buffer.flip();\n        int identifier = buffer.getInt();\n        long txId = buffer.getLong();\n        StartEntry entry = xidIdentMap.get( identifier );\n        if ( entry == null )\n        {\n            return false;\n        }\n        Xid xid = entry.getXid();\n        try\n        {\n            XaTransaction xaTx = xaRm.getXaTransaction( xid );\n            xaTx.setCommitTxId( txId );\n            xaRm.injectOnePhaseCommit( xid );\n        }\n        catch ( XAException e )\n        {\n            e.printStackTrace();\n            throw new IOException( e.getMessage() );\n        }\n        return true;\n    }","id":53632,"modified_method":"private boolean readTxOnePhaseCommit() throws IOException\n    {\n        // get the tx identifier\n        LogEntry.OnePhaseCommit commit = LogIoUtils.readTxOnePhaseCommit( \n                buffer, fileChannel );\n        if ( commit == null )\n        {\n            return false;\n        }\n        int identifier = commit.getIdentifier();\n        long txId = commit.getTxId();\n        LogEntry.Start entry = xidIdentMap.get( identifier );\n        if ( entry == null )\n        {\n            return false;\n        }\n        Xid xid = entry.getXid();\n        try\n        {\n            XaTransaction xaTx = xaRm.getXaTransaction( xid );\n            xaTx.setCommitTxId( txId );\n            xaRm.injectOnePhaseCommit( xid );\n        }\n        catch ( XAException e )\n        {\n            e.printStackTrace();\n            throw new IOException( e.getMessage() );\n        }\n        return true;\n    }","commit_id":"21d6ca77ca4c9e0c09f1e7c3ad5899a404dccf12","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void open( String fileToOpen ) throws IOException\n    {\n        fileChannel = new RandomAccessFile( fileToOpen, \"rw\" ).getChannel();\n        if ( fileChannel.size() != 0 )\n        {\n            doInternalRecovery( fileToOpen );\n        }\n        else\n        {\n            logVersion = xaTf.getCurrentVersion();\n            buffer.clear();\n            buffer.putLong( logVersion );\n            buffer.putLong( xaTf.getLastCommittedTx() );\n            buffer.flip();\n            fileChannel.write( buffer );\n            scanIsComplete = true;\n        }\n    }","id":53633,"modified_method":"private void open( String fileToOpen ) throws IOException\n    {\n        fileChannel = new RandomAccessFile( fileToOpen, \"rw\" ).getChannel();\n        if ( fileChannel.size() != 0 )\n        {\n            doInternalRecovery( fileToOpen );\n        }\n        else\n        {\n            logVersion = xaTf.getCurrentVersion();\n            buffer.clear();\n            buffer.putLong( logVersion );\n            long lastTxId = xaTf.getLastCommittedTx();\n            buffer.putLong( lastTxId );\n            previousLogLastCommittedTx = lastTxId; \n            buffer.flip();\n            fileChannel.write( buffer );\n            scanIsComplete = true;\n        }\n    }","commit_id":"21d6ca77ca4c9e0c09f1e7c3ad5899a404dccf12","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void readAndApplyTxOnePhaseCommit() throws IOException\n        {\n            // get the tx identifier\n            buffer.clear();\n            buffer.limit( 12 );\n            if ( byteChannel.read( buffer ) != buffer.limit() )\n            {\n                throw new IOException( \"Unable to read tx 1PC entry\" );\n            }\n            buffer.flip();\n            int identifier = buffer.getInt();\n            long txId = buffer.getLong();\n            StartEntry entry = xidIdentMap.get( identifier );\n            if ( entry == null )\n            {\n                throw new IOException( \"Unable to read tx prepeare entry\" );\n            }\n            Xid xid = entry.getXid();\n            try\n            {\n                XaTransaction xaTx = xaRm.getXaTransaction( xid );\n                xaTx.setCommitTxId( txId );\n                xaRm.commit( xid, true );\n            }\n            catch ( XAException e )\n            {\n                e.printStackTrace();\n                throw new IOException( e.getMessage() );\n            }\n        }","id":53634,"modified_method":"private void readAndApplyTxOnePhaseCommit() throws IOException\n        {\n            // get the tx identifier\n            LogEntry.OnePhaseCommit commit = \n                LogIoUtils.readTxOnePhaseCommit( buffer, byteChannel );\n            if ( commit == null )\n            {\n                throw new IOException( \"Unable to read tx 1PC entry\" );\n            }\n            int identifier = commit.getIdentifier();\n            long txId = commit.getTxId();\n            LogEntry.Start entry = xidIdentMap.get( identifier );\n            if ( entry == null )\n            {\n                throw new IOException( \"Unable to read tx prepeare entry\" );\n            }\n            Xid xid = entry.getXid();\n            try\n            {\n                XaTransaction xaTx = xaRm.getXaTransaction( xid );\n                xaTx.setCommitTxId( txId );\n                xaRm.commit( xid, true );\n            }\n            catch ( XAException e )\n            {\n                e.printStackTrace();\n                throw new IOException( e.getMessage() );\n            }\n        }","commit_id":"21d6ca77ca4c9e0c09f1e7c3ad5899a404dccf12","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void readAndWriteTxStartEntry( FileChannel newLog ) \n        throws IOException\n    {\n        // get the global id\n        buffer.clear();\n        buffer.put( TX_START );\n        buffer.limit( 3 );\n        if ( fileChannel.read( buffer ) != 2 )\n        {\n            throw new IllegalStateException( \n                \"Unable to read tx start entry xid id lengths\" );\n        }\n        buffer.flip();\n        buffer.position( 1 );\n        byte globalIdLength = buffer.get();\n        byte branchIdLength = buffer.get();\n        int xidLength = globalIdLength + branchIdLength;\n        buffer.limit( 3 + xidLength + 8 );\n        buffer.position( 3 );\n        if ( fileChannel.read( buffer ) != 8 + xidLength )\n        {\n            throw new IllegalStateException( \"Unable to read xid\" );\n        }\n        buffer.flip();\n        buffer.position( 3 + xidLength );\n        int identifier = buffer.getInt();\n        FileChannel writeToLog = null;\n        StartEntry entry = xidIdentMap.get( identifier );\n        if ( entry != null )\n        {\n            writeToLog = newLog;\n            entry.setStartPosition( newLog.position() );\n        }\n        buffer.position( 0 );\n        if ( writeToLog != null && \n            writeToLog.write( buffer ) != 3 + 8 + xidLength )\n        {\n            throw new TransactionFailureException( \n                \"Unable to write tx start xid\" );\n        }\n    }","id":53635,"modified_method":"private void readAndWriteTxStartEntry( FileChannel newLog ) \n        throws IOException\n    {\n        // get the global id\n        buffer.clear();\n        buffer.put( TX_START );\n        buffer.limit( 3 );\n        if ( fileChannel.read( buffer ) != 2 )\n        {\n            throw new IllegalStateException( \n                \"Unable to read tx start entry xid id lengths\" );\n        }\n        buffer.flip();\n        buffer.position( 1 );\n        byte globalIdLength = buffer.get();\n        byte branchIdLength = buffer.get();\n        int xidLength = globalIdLength + branchIdLength;\n        buffer.limit( 3 + xidLength + 8 );\n        buffer.position( 3 );\n        if ( fileChannel.read( buffer ) != 8 + xidLength )\n        {\n            throw new IllegalStateException( \"Unable to read xid\" );\n        }\n        buffer.flip();\n        buffer.position( 3 + xidLength );\n        int identifier = buffer.getInt();\n        FileChannel writeToLog = null;\n        LogEntry.Start entry = xidIdentMap.get( identifier );\n        if ( entry != null )\n        {\n            writeToLog = newLog;\n            entry.setStartPosition( newLog.position() );\n        }\n        buffer.position( 0 );\n        if ( writeToLog != null && \n            writeToLog.write( buffer ) != 3 + 8 + xidLength )\n        {\n            throw new TransactionFailureException( \n                \"Unable to write tx start xid\" );\n        }\n    }","commit_id":"21d6ca77ca4c9e0c09f1e7c3ad5899a404dccf12","url":"https://github.com/neo4j/neo4j"},{"original_method":"public synchronized void rotate() throws IOException\n    {\n        xaTf.flushAll();\n        String newLogFile = fileName + \".2\";\n        String currentLogFile = fileName + \".1\";\n        char newActiveLog = LOG2;\n        long currentVersion = xaTf.getCurrentVersion();\n        String oldCopy = fileName + \".v\" + currentVersion;\n        if ( currentLog == CLEAN || currentLog == LOG2 )\n        {\n            newActiveLog = LOG1;\n            newLogFile = fileName + \".1\";\n            currentLogFile = fileName + \".2\";\n        }\n        else\n        {\n            assert currentLog == LOG1;\n        }\n        if ( new File( newLogFile ).exists() )\n        {\n            throw new IOException( \"New log file: \" + newLogFile + \n                \" already exist\" );\n        }\n        if ( new File( oldCopy ).exists() )\n        {\n            throw new IOException( \"Copy log file: \" + oldCopy + \n                \" already exist\" );\n        }\n        long endPosition = writeBuffer.getFileChannelPosition();\n        writeBuffer.force();\n        FileChannel newLog = new RandomAccessFile( \n            newLogFile, \"rw\" ).getChannel();\n        buffer.clear();\n        buffer.putLong( currentVersion + 1 );\n        buffer.putLong( xaTf.getLastCommittedTx() ).flip();\n        if ( newLog.write( buffer ) != 16 )\n        {\n            throw new IOException( \"Unable to write log version to new\" );\n        }\n        fileChannel.position( 0 );\n        buffer.clear();\n        buffer.limit( 16 );\n        if( fileChannel.read( buffer ) != 16 )\n        {\n            throw new IOException( \"Verification of log version failed\" );\n        }\n        buffer.flip();\n        long verification = buffer.getLong();\n        if ( verification != currentVersion )\n        {\n            throw new IOException( \"Verification of log version failed, \" + \n                \" expected \" + currentVersion + \" got \" + verification );\n        }\n        if ( xidIdentMap.size() > 0 )\n        {\n            fileChannel.position( getFirstStartEntry( endPosition ) );\n        }\n        buffer.clear(); // ignore other 8 bytes\n        buffer.limit( 1 );\n        boolean emptyHit = false;\n        while ( fileChannel.read( buffer ) == 1 && !emptyHit )\n        {\n            buffer.flip();\n            byte entry = buffer.get();\n            switch ( entry )\n            {\n                case TX_START:\n                    readAndWriteTxStartEntry( newLog );\n                    break;\n                case TX_PREPARE:\n                    readAndWriteTxPrepareEntry( newLog );\n                    break;\n                case TX_1P_COMMIT:\n                    readAndWriteTxOnePhaseCommit( newLog );\n                    break;\n                case TX_2P_COMMIT:\n                    readAndWriteTxTwoPhaseCommit( newLog );\n                    break;\n                case COMMAND:\n                    readAndWriteCommandEntry( newLog );\n                    break;\n                case DONE:\n                    readAndVerifyDoneEntry();\n                    break;\n                case EMPTY:\n                    emptyHit = true;\n                    break;\n                default:\n                    throw new IOException( \"Log rotation failed, \"\n                        + \"unknown log entry[\" + entry + \"]\" );\n            }\n            buffer.clear();\n            buffer.limit( 1 );\n        }\n        newLog.force( false );\n        releaseCurrentLogFile();\n        setActiveLog( newActiveLog );\n        if ( keepLogs )\n        {\n            renameCurrentLogFileAndIncrementVersion( currentLogFile, \n                endPosition );\n        }\n        else\n        {\n            deleteCurrentLogFile( currentLogFile );\n            xaTf.getAndSetNewVersion();\n        }\n        if ( xaTf.getCurrentVersion() != ( currentVersion + 1 ) )\n        {\n            throw new IOException( \"version change failed\" );\n        }\n        fileChannel = newLog;\n        if ( !useMemoryMapped )\n        {\n            writeBuffer = new DirectMappedLogBuffer( fileChannel );\n        }\n        else\n        {\n            writeBuffer = new MemoryMappedLogBuffer( fileChannel );\n        }\n    }","id":53636,"modified_method":"public synchronized void rotate() throws IOException\n    {\n        xaTf.flushAll();\n        String newLogFile = fileName + \".2\";\n        String currentLogFile = fileName + \".1\";\n        char newActiveLog = LOG2;\n        long currentVersion = xaTf.getCurrentVersion();\n        String oldCopy = fileName + \".v\" + currentVersion;\n        if ( currentLog == CLEAN || currentLog == LOG2 )\n        {\n            newActiveLog = LOG1;\n            newLogFile = fileName + \".1\";\n            currentLogFile = fileName + \".2\";\n        }\n        else\n        {\n            assert currentLog == LOG1;\n        }\n        if ( new File( newLogFile ).exists() )\n        {\n            throw new IOException( \"New log file: \" + newLogFile + \n                \" already exist\" );\n        }\n        if ( new File( oldCopy ).exists() )\n        {\n            throw new IOException( \"Copy log file: \" + oldCopy + \n                \" already exist\" );\n        }\n        long endPosition = writeBuffer.getFileChannelPosition();\n        writeBuffer.force();\n        FileChannel newLog = new RandomAccessFile( \n            newLogFile, \"rw\" ).getChannel();\n        buffer.clear();\n        buffer.putLong( currentVersion + 1 );\n        long lastTx = xaTf.getLastCommittedTx();\n        buffer.putLong( lastTx ).flip();\n        previousLogLastCommittedTx = lastTx;\n        if ( newLog.write( buffer ) != 16 )\n        {\n            throw new IOException( \"Unable to write log version to new\" );\n        }\n        fileChannel.position( 0 );\n        buffer.clear();\n        buffer.limit( 16 );\n        if( fileChannel.read( buffer ) != 16 )\n        {\n            throw new IOException( \"Verification of log version failed\" );\n        }\n        buffer.flip();\n        long verification = buffer.getLong();\n        if ( verification != currentVersion )\n        {\n            throw new IOException( \"Verification of log version failed, \" + \n                \" expected \" + currentVersion + \" got \" + verification );\n        }\n        if ( xidIdentMap.size() > 0 )\n        {\n            fileChannel.position( getFirstStartEntry( endPosition ) );\n        }\n        buffer.clear(); // ignore other 8 bytes\n        buffer.limit( 1 );\n        boolean emptyHit = false;\n        while ( fileChannel.read( buffer ) == 1 && !emptyHit )\n        {\n            buffer.flip();\n            byte entry = buffer.get();\n            switch ( entry )\n            {\n                case TX_START:\n                    readAndWriteTxStartEntry( newLog );\n                    break;\n                case TX_PREPARE:\n                    readAndWriteTxPrepareEntry( newLog );\n                    break;\n                case TX_1P_COMMIT:\n                    readAndWriteTxOnePhaseCommit( newLog );\n                    break;\n                case TX_2P_COMMIT:\n                    readAndWriteTxTwoPhaseCommit( newLog );\n                    break;\n                case COMMAND:\n                    readAndWriteCommandEntry( newLog );\n                    break;\n                case DONE:\n                    readAndVerifyDoneEntry();\n                    break;\n                case EMPTY:\n                    emptyHit = true;\n                    break;\n                default:\n                    throw new IOException( \"Log rotation failed, \"\n                        + \"unknown log entry[\" + entry + \"]\" );\n            }\n            buffer.clear();\n            buffer.limit( 1 );\n        }\n        newLog.force( false );\n        releaseCurrentLogFile();\n        setActiveLog( newActiveLog );\n        if ( keepLogs )\n        {\n            renameCurrentLogFileAndIncrementVersion( currentLogFile, \n                endPosition );\n        }\n        else\n        {\n            deleteCurrentLogFile( currentLogFile );\n            xaTf.getAndSetNewVersion();\n        }\n        if ( xaTf.getCurrentVersion() != ( currentVersion + 1 ) )\n        {\n            throw new IOException( \"version change failed\" );\n        }\n        fileChannel = newLog;\n        if ( !useMemoryMapped )\n        {\n            writeBuffer = new DirectMappedLogBuffer( fileChannel );\n        }\n        else\n        {\n            writeBuffer = new MemoryMappedLogBuffer( fileChannel );\n        }\n    }","commit_id":"21d6ca77ca4c9e0c09f1e7c3ad5899a404dccf12","url":"https://github.com/neo4j/neo4j"},{"original_method":"public ReadableByteChannel getCommittedTransaction( long txId )\n    {\n        // check if written out \n        // find log that contains transaction\n        // extract transaction3\n        return null;\n    }","id":53637,"modified_method":"public ReadableByteChannel getCommittedTransaction( long txId )\n        throws IOException\n    {\n        // check if written out\n        String name = fileName + \".tx_\" + txId;\n        File txFile = new File( name );\n        if ( txFile.exists() )\n        {\n            return new RandomAccessFile( name, \"r\" ).getChannel();\n        }\n\n        // find log that contains transaction\n        long version = logVersion;\n        long committedTx = previousLogLastCommittedTx;\n        while ( committedTx < txId )\n        {\n            version--;\n            ReadableByteChannel log = getLogicalLog( version );\n            ByteBuffer buf = ByteBuffer.allocate( 16 );\n            if ( log.read( buf ) != 16 )\n            {\n                throw new IOException( \"Unable to read log version \" + \n                        version );\n            }\n            buf.flip();\n            long readVersion = buffer.getLong();\n            if ( readVersion != version )\n            {\n                throw new IOException( \"Got \" + readVersion + \n                        \" from log when expecting \" + version );\n            }\n            committedTx = buffer.getLong();\n            log.close();\n        }\n        \n        // extract transaction\n        // ReadableByteChannel log\n        return null;\n    }","commit_id":"21d6ca77ca4c9e0c09f1e7c3ad5899a404dccf12","url":"https://github.com/neo4j/neo4j"},{"original_method":"public synchronized int start( Xid xid ) throws XAException\n    {\n        if ( backupSlave )\n        {\n            throw new XAException( \"Resource is configured as backup slave, \" + \n                \"no new transactions can be started for \" + fileName + \".\" + \n                currentLog );\n        }\n        int xidIdent = getNextIdentifier();\n        try\n        {\n            byte globalId[] = xid.getGlobalTransactionId();\n            byte branchId[] = xid.getBranchQualifier();\n            int formatId = xid.getFormatId();\n            long position = writeBuffer.getFileChannelPosition();\n            writeBuffer.put( TX_START ).put( (byte) globalId.length ).put(\n                (byte) branchId.length ).put( globalId ).put( branchId )\n                .putInt( xidIdent ).putInt( formatId );\n            xidIdentMap.put( xidIdent, new StartEntry( xid, position ) );\n        }\n        catch ( IOException e )\n        {\n            throw new XAException( \"Logical log couldn't start transaction: \"\n                + e );\n        }\n        return xidIdent;\n    }","id":53638,"modified_method":"public synchronized int start( Xid xid ) throws XAException\n    {\n        if ( backupSlave )\n        {\n            throw new XAException( \"Resource is configured as backup slave, \" + \n                \"no new transactions can be started for \" + fileName + \".\" + \n                currentLog );\n        }\n        int xidIdent = getNextIdentifier();\n        try\n        {\n            byte globalId[] = xid.getGlobalTransactionId();\n            byte branchId[] = xid.getBranchQualifier();\n            int formatId = xid.getFormatId();\n            long position = writeBuffer.getFileChannelPosition();\n            writeBuffer.put( TX_START ).put( (byte) globalId.length ).put(\n                (byte) branchId.length ).put( globalId ).put( branchId )\n                .putInt( xidIdent ).putInt( formatId );\n            xidIdentMap.put( xidIdent, \n                    new LogEntry.Start( xid, xidIdent, position ) );\n        }\n        catch ( IOException e )\n        {\n            throw new XAException( \"Logical log couldn't start transaction: \"\n                + e );\n        }\n        return xidIdent;\n    }","commit_id":"21d6ca77ca4c9e0c09f1e7c3ad5899a404dccf12","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void readTxPrepareEntry() throws IOException\n        {\n            // get the tx identifier\n            buffer.clear();\n            buffer.limit( 4 );\n            if ( byteChannel.read( buffer ) != buffer.limit() )\n            {\n                throw new IOException( \"Unable to read tx prepare entry\" );\n            }\n            buffer.flip();\n            int identifier = buffer.getInt();\n            StartEntry entry = xidIdentMap.get( identifier );\n            if ( entry == null )\n            {\n                throw new IOException( \"Unable to read tx prepeare entry\" );\n            }\n            Xid xid = entry.getXid();\n            if ( xaRm.injectPrepare( xid ) )\n            {\n                // read only, we can remove\n                xidIdentMap.remove( identifier );\n                recoveredTxMap.remove( identifier );\n            }\n        }","id":53639,"modified_method":"private void readTxPrepareEntry() throws IOException\n        {\n            // get the tx identifier\n            LogEntry.Prepare prepareEntry = \n                LogIoUtils.readTxPrepareEntry( buffer, byteChannel );\n            if ( prepareEntry == null )\n            {\n                throw new IOException( \"Unable to read tx prepare entry\" );\n            }\n            int identifier = prepareEntry.getIdentifier();\n            LogEntry.Start entry = xidIdentMap.get( identifier );\n            if ( entry == null )\n            {\n                throw new IOException( \"Unable to read tx prepeare entry\" );\n            }\n            Xid xid = entry.getXid();\n            if ( xaRm.injectPrepare( xid ) )\n            {\n                // read only, we can remove\n                xidIdentMap.remove( identifier );\n                recoveredTxMap.remove( identifier );\n            }\n        }","commit_id":"21d6ca77ca4c9e0c09f1e7c3ad5899a404dccf12","url":"https://github.com/neo4j/neo4j"},{"original_method":"private boolean readTxPrepareEntry() throws IOException\n    {\n        // get the tx identifier\n        buffer.clear();\n        buffer.limit( 4 );\n        if ( fileChannel.read( buffer ) != buffer.limit() )\n        {\n            return false;\n        }\n        buffer.flip();\n        int identifier = buffer.getInt();\n        StartEntry entry = xidIdentMap.get( identifier );\n        if ( entry == null )\n        {\n            return false;\n        }\n        Xid xid = entry.getXid();\n        if ( xaRm.injectPrepare( xid ) )\n        {\n            // read only we can remove\n            xidIdentMap.remove( identifier );\n            recoveredTxMap.remove( identifier );\n        }\n        return true;\n    }","id":53640,"modified_method":"private boolean readTxPrepareEntry() throws IOException\n    {\n        // get the tx identifier\n        LogEntry.Prepare prepareEntry = LogIoUtils.readTxPrepareEntry( buffer, \n                fileChannel );\n        if ( prepareEntry == null )\n        {\n            return false;\n        }\n        int identifier = prepareEntry.getIdentifier();\n        LogEntry.Start entry = xidIdentMap.get( identifier );\n        if ( entry == null )\n        {\n            return false;\n        }\n        Xid xid = entry.getXid();\n        if ( xaRm.injectPrepare( xid ) )\n        {\n            // read only we can remove\n            xidIdentMap.remove( identifier );\n            recoveredTxMap.remove( identifier );\n        }\n        return true;\n    }","commit_id":"21d6ca77ca4c9e0c09f1e7c3ad5899a404dccf12","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void readTxStartEntry() throws IOException\n        {\n            // get the global id\n            buffer.clear();\n            buffer.limit( 1 );\n            if ( byteChannel.read( buffer ) != buffer.limit() )\n            {\n                throw new IOException( \"Unable to read tx start entry\" );\n            }\n            buffer.flip();\n            byte globalIdLength = buffer.get();\n            // get the branchId id\n            buffer.clear();\n            buffer.limit( 1 );\n            if ( byteChannel.read( buffer ) != buffer.limit() )\n            {\n                throw new IOException( \"Unable to read tx start entry\" );\n            }\n            buffer.flip();\n            byte branchIdLength = buffer.get();\n            byte globalId[] = new byte[globalIdLength];\n            ByteBuffer tmpBuffer = ByteBuffer.wrap( globalId );\n            if ( byteChannel.read( tmpBuffer ) != globalId.length )\n            {\n                throw new IOException( \"Unable to read tx start entry\" );\n            }\n            byte branchId[] = new byte[branchIdLength];\n            tmpBuffer = ByteBuffer.wrap( branchId );\n            if ( byteChannel.read( tmpBuffer ) != branchId.length )\n            {\n                throw new IOException( \"Unable to read tx start entry\" );\n            }\n            // get the tx identifier\n            buffer.clear();\n            buffer.limit( 4 );\n            if ( byteChannel.read( buffer ) != buffer.limit() )\n            {\n                throw new IOException( \"Unable to read tx start entry\" );\n            }\n            buffer.flip();\n            int identifier = buffer.getInt();\n            // get the format id\n            buffer.clear();\n            buffer.limit( 4 );\n            if ( byteChannel.read( buffer ) != buffer.limit() )\n            {\n                throw new IOException( \"Unable to read tx start entry\" );\n            }\n            buffer.flip();\n            int formatId = buffer.getInt();\n            // re-create the transaction\n            Xid xid = new XidImpl( globalId, branchId, formatId );\n            xidIdentMap.put( identifier, new StartEntry( xid, -1 ) );\n            XaTransaction xaTx = xaTf.create( identifier );\n            xaTx.setRecovered();\n            recoveredTxMap.put( identifier, xaTx );\n            xaRm.injectStart( xid, xaTx );\n        }","id":53641,"modified_method":"private void readTxStartEntry() throws IOException\n        {\n            // get the global id\n            LogEntry.Start entry = LogIoUtils.readTxStartEntry( buffer, \n                    byteChannel, -1 );\n            if ( entry == null )\n            {\n                throw new IOException( \"Unable to read tx start entry\" );\n            }\n            // re-create the transaction\n            Xid xid = entry.getXid();\n            int identifier = entry.getIdentifier();\n            xidIdentMap.put( identifier, entry );\n            XaTransaction xaTx = xaTf.create( identifier );\n            xaTx.setRecovered();\n            recoveredTxMap.put( identifier, xaTx );\n            xaRm.injectStart( xid, xaTx );\n        }","commit_id":"21d6ca77ca4c9e0c09f1e7c3ad5899a404dccf12","url":"https://github.com/neo4j/neo4j"},{"original_method":"private long getFirstStartEntry( long endPosition )\n    {\n        long firstEntryPosition = endPosition;\n        for ( StartEntry entry : xidIdentMap.values() )\n        {\n            if ( entry.getStartPosition() < firstEntryPosition )\n            {\n                assert entry.getStartPosition() > 0; \n                firstEntryPosition = entry.getStartPosition();\n            }\n        }\n        return firstEntryPosition;\n    }","id":53642,"modified_method":"private long getFirstStartEntry( long endPosition )\n    {\n        long firstEntryPosition = endPosition;\n        for ( LogEntry.Start entry : xidIdentMap.values() )\n        {\n            if ( entry.getStartPosition() < firstEntryPosition )\n            {\n                assert entry.getStartPosition() > 0; \n                firstEntryPosition = entry.getStartPosition();\n            }\n        }\n        return firstEntryPosition;\n    }","commit_id":"21d6ca77ca4c9e0c09f1e7c3ad5899a404dccf12","url":"https://github.com/neo4j/neo4j"},{"original_method":"LogApplier( ReadableByteChannel byteChannel, ByteBuffer buffer, \n            XaTransactionFactory xaTf, XaResourceManager xaRm, \n            XaCommandFactory xaCf, ArrayMap<Integer,StartEntry> xidIdentMap, \n            Map<Integer,XaTransaction> recoveredTxMap )\n        {\n            this.byteChannel = byteChannel;\n            this.buffer = buffer;\n            this.xaTf = xaTf;\n            this.xaRm = xaRm;\n            this.xaCf = xaCf;\n            this.xidIdentMap = xidIdentMap;\n            this.recoveredTxMap = recoveredTxMap;\n        }","id":53643,"modified_method":"LogApplier( ReadableByteChannel byteChannel, ByteBuffer buffer, \n            XaTransactionFactory xaTf, XaResourceManager xaRm, \n            XaCommandFactory xaCf, ArrayMap<Integer,LogEntry.Start> xidIdentMap, \n            Map<Integer,XaTransaction> recoveredTxMap )\n        {\n            this.byteChannel = byteChannel;\n            this.buffer = buffer;\n            this.xaTf = xaTf;\n            this.xaRm = xaRm;\n            this.xaCf = xaCf;\n            this.xidIdentMap = xidIdentMap;\n            this.recoveredTxMap = recoveredTxMap;\n        }","commit_id":"21d6ca77ca4c9e0c09f1e7c3ad5899a404dccf12","url":"https://github.com/neo4j/neo4j"},{"original_method":"private boolean readDoneEntry() throws IOException\n    {\n        // get the tx identifier\n        buffer.clear();\n        buffer.limit( 4 );\n        if ( fileChannel.read( buffer ) != buffer.limit() )\n        {\n            return false;\n        }\n        buffer.flip();\n        int identifier = buffer.getInt();\n        StartEntry entry = xidIdentMap.get( identifier );\n        if ( entry == null )\n        {\n            return false;\n        }\n        Xid xid = entry.getXid();\n        xaRm.pruneXid( xid );\n        xidIdentMap.remove( identifier );\n        recoveredTxMap.remove( identifier );\n        return true;\n    }","id":53644,"modified_method":"private boolean readDoneEntry() throws IOException\n    {\n        // get the tx identifier\n        LogEntry.Done done = LogIoUtils.readTxDoneEntry( buffer, fileChannel );\n        if ( done == null )\n        {\n            return false;\n        }\n        int identifier = done.getIdentifier();\n        LogEntry.Start entry = xidIdentMap.get( identifier );\n        if ( entry == null )\n        {\n            return false;\n        }\n        Xid xid = entry.getXid();\n        xaRm.pruneXid( xid );\n        xidIdentMap.remove( identifier );\n        recoveredTxMap.remove( identifier );\n        return true;\n    }","commit_id":"21d6ca77ca4c9e0c09f1e7c3ad5899a404dccf12","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void readAndApplyTxTwoPhaseCommit() throws IOException\n        {\n            // get the tx identifier\n            buffer.clear();\n            buffer.limit( 12 );\n            if ( byteChannel.read( buffer ) != buffer.limit() )\n            {\n                throw new IOException( \"Unable to read tx 2PC entry\" );\n            }\n            buffer.flip();\n            int identifier = buffer.getInt();\n            long txId = buffer.getLong();\n            StartEntry entry = xidIdentMap.get( identifier );\n            if ( entry == null )\n            {\n                throw new IOException( \"Unable to read tx prepeare entry\" );\n            }\n            Xid xid = entry.getXid();\n            try\n            {\n                XaTransaction xaTx = xaRm.getXaTransaction( xid );\n                xaTx.setCommitTxId( txId );\n                xaRm.commit( xid, true );\n            }\n            catch ( XAException e )\n            {\n                e.printStackTrace();\n                throw new IOException( e.getMessage() );\n            }\n        }","id":53645,"modified_method":"private void readAndApplyTxTwoPhaseCommit() throws IOException\n        {\n            LogEntry.TwoPhaseCommit commit = \n                LogIoUtils.readTxTwoPhaseCommit( buffer, byteChannel );\n            if ( commit == null )\n            {\n                throw new IOException( \"Unable to read tx 2PC entry\" );\n            }\n            int identifier = commit.getIdentifier();\n            long txId = commit.getTxId();\n            LogEntry.Start entry = xidIdentMap.get( identifier );\n            if ( entry == null )\n            {\n                throw new IOException( \"Unable to read tx prepeare entry\" );\n            }\n            Xid xid = entry.getXid();\n            try\n            {\n                XaTransaction xaTx = xaRm.getXaTransaction( xid );\n                xaTx.setCommitTxId( txId );\n                xaRm.commit( xid, true );\n            }\n            catch ( XAException e )\n            {\n                e.printStackTrace();\n                throw new IOException( e.getMessage() );\n            }\n        }","commit_id":"21d6ca77ca4c9e0c09f1e7c3ad5899a404dccf12","url":"https://github.com/neo4j/neo4j"},{"original_method":"private boolean readTxPrepareEntry() throws IOException\n    {\n        // get the tx identifier\n        buffer.clear();\n        buffer.limit( 4 );\n        if ( fileChannel.read( buffer ) != buffer.limit() )\n        {\n            return false;\n        }\n        buffer.flip();\n        int identifier = buffer.getInt();\n        StartEntry entry = xidIdentMap.get( identifier );\n        if ( entry == null )\n        {\n            return false;\n        }\n        Xid xid = entry.getXid();\n        if ( xaRm.injectPrepare( xid ) )\n        {\n            // read only we can remove\n            xidIdentMap.remove( identifier );\n            recoveredTxMap.remove( identifier );\n        }\n        return true;\n    }","id":53646,"modified_method":"private boolean readTxPrepareEntry() throws IOException\n    {\n        // get the tx identifier\n        LogEntry.Prepare prepareEntry = LogIoUtils.readTxPrepareEntry( buffer, \n                fileChannel );\n        if ( prepareEntry == null )\n        {\n            return false;\n        }\n        int identifier = prepareEntry.getIdentifier();\n        LogEntry.Start entry = xidIdentMap.get( identifier );\n        if ( entry == null )\n        {\n            return false;\n        }\n        Xid xid = entry.getXid();\n        if ( xaRm.injectPrepare( xid ) )\n        {\n            // read only we can remove\n            xidIdentMap.remove( identifier );\n            recoveredTxMap.remove( identifier );\n        }\n        return true;\n    }","commit_id":"a0ce25a7950547f2f944de9a29842f1cdf8446c8","url":"https://github.com/neo4j/neo4j"},{"original_method":"private boolean readTxOnePhaseCommit() throws IOException\n    {\n        // get the tx identifier\n        buffer.clear();\n        buffer.limit( 12 );\n        if ( fileChannel.read( buffer ) != buffer.limit() )\n        {\n            return false;\n        }\n        buffer.flip();\n        int identifier = buffer.getInt();\n        long txId = buffer.getLong();\n        StartEntry entry = xidIdentMap.get( identifier );\n        if ( entry == null )\n        {\n            return false;\n        }\n        Xid xid = entry.getXid();\n        try\n        {\n            XaTransaction xaTx = xaRm.getXaTransaction( xid );\n            xaTx.setCommitTxId( txId );\n            xaRm.injectOnePhaseCommit( xid );\n        }\n        catch ( XAException e )\n        {\n            e.printStackTrace();\n            throw new IOException( e.getMessage() );\n        }\n        return true;\n    }","id":53647,"modified_method":"private boolean readTxOnePhaseCommit() throws IOException\n    {\n        // get the tx identifier\n        LogEntry.OnePhaseCommit commit = LogIoUtils.readTxOnePhaseCommit( \n                buffer, fileChannel );\n        if ( commit == null )\n        {\n            return false;\n        }\n        int identifier = commit.getIdentifier();\n        long txId = commit.getTxId();\n        LogEntry.Start entry = xidIdentMap.get( identifier );\n        if ( entry == null )\n        {\n            return false;\n        }\n        Xid xid = entry.getXid();\n        try\n        {\n            XaTransaction xaTx = xaRm.getXaTransaction( xid );\n            xaTx.setCommitTxId( txId );\n            xaRm.injectOnePhaseCommit( xid );\n        }\n        catch ( XAException e )\n        {\n            e.printStackTrace();\n            throw new IOException( e.getMessage() );\n        }\n        return true;\n    }","commit_id":"a0ce25a7950547f2f944de9a29842f1cdf8446c8","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void readCommandEntry() throws IOException\n        {\n            buffer.clear();\n            buffer.limit( 4 );\n            if ( byteChannel.read( buffer ) != buffer.limit() )\n            {\n                throw new IOException( \"Unable to read tx command entry\" );\n            }\n            buffer.flip();\n            int identifier = buffer.getInt();\n            XaCommand command = xaCf.readCommand( byteChannel, buffer );\n            if ( command == null )\n            {\n                throw new IOException( \"Unable to read command entry\" );\n            }\n            command.setRecovered();\n            XaTransaction xaTx = recoveredTxMap.get( identifier );\n            xaTx.injectCommand( command );\n        }","id":53648,"modified_method":"private void readCommandEntry() throws IOException\n        {\n            LogEntry.Command entry = \n                LogIoUtils.readTxCommand( buffer, byteChannel, xaCf );\n            if ( entry == null )\n            {\n                throw new IOException( \"Unable to read tx command entry\" );\n            }\n            int identifier = entry.getIdentifier();\n            XaCommand command = entry.getXaCommand();\n            command.setRecovered();\n            XaTransaction xaTx = recoveredTxMap.get( identifier );\n            xaTx.injectCommand( command );\n        }","commit_id":"a0ce25a7950547f2f944de9a29842f1cdf8446c8","url":"https://github.com/neo4j/neo4j"},{"original_method":"public ReadableByteChannel getCommittedTransaction( long txId )\n    {\n        // check if written out \n        // find log that contains transaction\n        // extract transaction3\n        return null;\n    }","id":53649,"modified_method":"public ReadableByteChannel getCommittedTransaction( long txId )\n        throws IOException\n    {\n        // check if written out\n        String name = fileName + \".tx_\" + txId;\n        File txFile = new File( name );\n        if ( txFile.exists() )\n        {\n            return new RandomAccessFile( name, \"r\" ).getChannel();\n        }\n\n        // find log that contains transaction\n        long version = logVersion;\n        long committedTx = previousLogLastCommittedTx;\n        while ( committedTx < txId )\n        {\n            version--;\n            ReadableByteChannel log = getLogicalLog( version );\n            ByteBuffer buf = ByteBuffer.allocate( 16 );\n            if ( log.read( buf ) != 16 )\n            {\n                throw new IOException( \"Unable to read log version \" + \n                        version );\n            }\n            buf.flip();\n            long readVersion = buffer.getLong();\n            if ( readVersion != version )\n            {\n                throw new IOException( \"Got \" + readVersion + \n                        \" from log when expecting \" + version );\n            }\n            committedTx = buffer.getLong();\n            log.close();\n        }\n        \n        // extract transaction\n        // ReadableByteChannel log\n        return null;\n    }","commit_id":"a0ce25a7950547f2f944de9a29842f1cdf8446c8","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void open( String fileToOpen ) throws IOException\n    {\n        fileChannel = new RandomAccessFile( fileToOpen, \"rw\" ).getChannel();\n        if ( fileChannel.size() != 0 )\n        {\n            doInternalRecovery( fileToOpen );\n        }\n        else\n        {\n            logVersion = xaTf.getCurrentVersion();\n            buffer.clear();\n            buffer.putLong( logVersion );\n            buffer.putLong( xaTf.getLastCommittedTx() );\n            buffer.flip();\n            fileChannel.write( buffer );\n            scanIsComplete = true;\n        }\n    }","id":53650,"modified_method":"private void open( String fileToOpen ) throws IOException\n    {\n        fileChannel = new RandomAccessFile( fileToOpen, \"rw\" ).getChannel();\n        if ( fileChannel.size() != 0 )\n        {\n            doInternalRecovery( fileToOpen );\n        }\n        else\n        {\n            logVersion = xaTf.getCurrentVersion();\n            buffer.clear();\n            buffer.putLong( logVersion );\n            long lastTxId = xaTf.getLastCommittedTx();\n            buffer.putLong( lastTxId );\n            previousLogLastCommittedTx = lastTxId; \n            buffer.flip();\n            fileChannel.write( buffer );\n            scanIsComplete = true;\n        }\n    }","commit_id":"a0ce25a7950547f2f944de9a29842f1cdf8446c8","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void readTxStartEntry() throws IOException\n        {\n            // get the global id\n            buffer.clear();\n            buffer.limit( 1 );\n            if ( byteChannel.read( buffer ) != buffer.limit() )\n            {\n                throw new IOException( \"Unable to read tx start entry\" );\n            }\n            buffer.flip();\n            byte globalIdLength = buffer.get();\n            // get the branchId id\n            buffer.clear();\n            buffer.limit( 1 );\n            if ( byteChannel.read( buffer ) != buffer.limit() )\n            {\n                throw new IOException( \"Unable to read tx start entry\" );\n            }\n            buffer.flip();\n            byte branchIdLength = buffer.get();\n            byte globalId[] = new byte[globalIdLength];\n            ByteBuffer tmpBuffer = ByteBuffer.wrap( globalId );\n            if ( byteChannel.read( tmpBuffer ) != globalId.length )\n            {\n                throw new IOException( \"Unable to read tx start entry\" );\n            }\n            byte branchId[] = new byte[branchIdLength];\n            tmpBuffer = ByteBuffer.wrap( branchId );\n            if ( byteChannel.read( tmpBuffer ) != branchId.length )\n            {\n                throw new IOException( \"Unable to read tx start entry\" );\n            }\n            // get the tx identifier\n            buffer.clear();\n            buffer.limit( 4 );\n            if ( byteChannel.read( buffer ) != buffer.limit() )\n            {\n                throw new IOException( \"Unable to read tx start entry\" );\n            }\n            buffer.flip();\n            int identifier = buffer.getInt();\n            // get the format id\n            buffer.clear();\n            buffer.limit( 4 );\n            if ( byteChannel.read( buffer ) != buffer.limit() )\n            {\n                throw new IOException( \"Unable to read tx start entry\" );\n            }\n            buffer.flip();\n            int formatId = buffer.getInt();\n            // re-create the transaction\n            Xid xid = new XidImpl( globalId, branchId, formatId );\n            xidIdentMap.put( identifier, new StartEntry( xid, -1 ) );\n            XaTransaction xaTx = xaTf.create( identifier );\n            xaTx.setRecovered();\n            recoveredTxMap.put( identifier, xaTx );\n            xaRm.injectStart( xid, xaTx );\n        }","id":53651,"modified_method":"private void readTxStartEntry() throws IOException\n        {\n            // get the global id\n            LogEntry.Start entry = LogIoUtils.readTxStartEntry( buffer, \n                    byteChannel, -1 );\n            if ( entry == null )\n            {\n                throw new IOException( \"Unable to read tx start entry\" );\n            }\n            // re-create the transaction\n            Xid xid = entry.getXid();\n            int identifier = entry.getIdentifier();\n            xidIdentMap.put( identifier, entry );\n            XaTransaction xaTx = xaTf.create( identifier );\n            xaTx.setRecovered();\n            recoveredTxMap.put( identifier, xaTx );\n            xaRm.injectStart( xid, xaTx );\n        }","commit_id":"a0ce25a7950547f2f944de9a29842f1cdf8446c8","url":"https://github.com/neo4j/neo4j"},{"original_method":"public synchronized void rotate() throws IOException\n    {\n        xaTf.flushAll();\n        String newLogFile = fileName + \".2\";\n        String currentLogFile = fileName + \".1\";\n        char newActiveLog = LOG2;\n        long currentVersion = xaTf.getCurrentVersion();\n        String oldCopy = fileName + \".v\" + currentVersion;\n        if ( currentLog == CLEAN || currentLog == LOG2 )\n        {\n            newActiveLog = LOG1;\n            newLogFile = fileName + \".1\";\n            currentLogFile = fileName + \".2\";\n        }\n        else\n        {\n            assert currentLog == LOG1;\n        }\n        if ( new File( newLogFile ).exists() )\n        {\n            throw new IOException( \"New log file: \" + newLogFile + \n                \" already exist\" );\n        }\n        if ( new File( oldCopy ).exists() )\n        {\n            throw new IOException( \"Copy log file: \" + oldCopy + \n                \" already exist\" );\n        }\n        long endPosition = writeBuffer.getFileChannelPosition();\n        writeBuffer.force();\n        FileChannel newLog = new RandomAccessFile( \n            newLogFile, \"rw\" ).getChannel();\n        buffer.clear();\n        buffer.putLong( currentVersion + 1 );\n        buffer.putLong( xaTf.getLastCommittedTx() ).flip();\n        if ( newLog.write( buffer ) != 16 )\n        {\n            throw new IOException( \"Unable to write log version to new\" );\n        }\n        fileChannel.position( 0 );\n        buffer.clear();\n        buffer.limit( 16 );\n        if( fileChannel.read( buffer ) != 16 )\n        {\n            throw new IOException( \"Verification of log version failed\" );\n        }\n        buffer.flip();\n        long verification = buffer.getLong();\n        if ( verification != currentVersion )\n        {\n            throw new IOException( \"Verification of log version failed, \" + \n                \" expected \" + currentVersion + \" got \" + verification );\n        }\n        if ( xidIdentMap.size() > 0 )\n        {\n            fileChannel.position( getFirstStartEntry( endPosition ) );\n        }\n        buffer.clear(); // ignore other 8 bytes\n        buffer.limit( 1 );\n        boolean emptyHit = false;\n        while ( fileChannel.read( buffer ) == 1 && !emptyHit )\n        {\n            buffer.flip();\n            byte entry = buffer.get();\n            switch ( entry )\n            {\n                case TX_START:\n                    readAndWriteTxStartEntry( newLog );\n                    break;\n                case TX_PREPARE:\n                    readAndWriteTxPrepareEntry( newLog );\n                    break;\n                case TX_1P_COMMIT:\n                    readAndWriteTxOnePhaseCommit( newLog );\n                    break;\n                case TX_2P_COMMIT:\n                    readAndWriteTxTwoPhaseCommit( newLog );\n                    break;\n                case COMMAND:\n                    readAndWriteCommandEntry( newLog );\n                    break;\n                case DONE:\n                    readAndVerifyDoneEntry();\n                    break;\n                case EMPTY:\n                    emptyHit = true;\n                    break;\n                default:\n                    throw new IOException( \"Log rotation failed, \"\n                        + \"unknown log entry[\" + entry + \"]\" );\n            }\n            buffer.clear();\n            buffer.limit( 1 );\n        }\n        newLog.force( false );\n        releaseCurrentLogFile();\n        setActiveLog( newActiveLog );\n        if ( keepLogs )\n        {\n            renameCurrentLogFileAndIncrementVersion( currentLogFile, \n                endPosition );\n        }\n        else\n        {\n            deleteCurrentLogFile( currentLogFile );\n            xaTf.getAndSetNewVersion();\n        }\n        if ( xaTf.getCurrentVersion() != ( currentVersion + 1 ) )\n        {\n            throw new IOException( \"version change failed\" );\n        }\n        fileChannel = newLog;\n        if ( !useMemoryMapped )\n        {\n            writeBuffer = new DirectMappedLogBuffer( fileChannel );\n        }\n        else\n        {\n            writeBuffer = new MemoryMappedLogBuffer( fileChannel );\n        }\n    }","id":53652,"modified_method":"public synchronized void rotate() throws IOException\n    {\n        xaTf.flushAll();\n        String newLogFile = fileName + \".2\";\n        String currentLogFile = fileName + \".1\";\n        char newActiveLog = LOG2;\n        long currentVersion = xaTf.getCurrentVersion();\n        String oldCopy = fileName + \".v\" + currentVersion;\n        if ( currentLog == CLEAN || currentLog == LOG2 )\n        {\n            newActiveLog = LOG1;\n            newLogFile = fileName + \".1\";\n            currentLogFile = fileName + \".2\";\n        }\n        else\n        {\n            assert currentLog == LOG1;\n        }\n        if ( new File( newLogFile ).exists() )\n        {\n            throw new IOException( \"New log file: \" + newLogFile + \n                \" already exist\" );\n        }\n        if ( new File( oldCopy ).exists() )\n        {\n            throw new IOException( \"Copy log file: \" + oldCopy + \n                \" already exist\" );\n        }\n        long endPosition = writeBuffer.getFileChannelPosition();\n        writeBuffer.force();\n        FileChannel newLog = new RandomAccessFile( \n            newLogFile, \"rw\" ).getChannel();\n        buffer.clear();\n        buffer.putLong( currentVersion + 1 );\n        long lastTx = xaTf.getLastCommittedTx();\n        buffer.putLong( lastTx ).flip();\n        previousLogLastCommittedTx = lastTx;\n        if ( newLog.write( buffer ) != 16 )\n        {\n            throw new IOException( \"Unable to write log version to new\" );\n        }\n        fileChannel.position( 0 );\n        buffer.clear();\n        buffer.limit( 16 );\n        if( fileChannel.read( buffer ) != 16 )\n        {\n            throw new IOException( \"Verification of log version failed\" );\n        }\n        buffer.flip();\n        long verification = buffer.getLong();\n        if ( verification != currentVersion )\n        {\n            throw new IOException( \"Verification of log version failed, \" + \n                \" expected \" + currentVersion + \" got \" + verification );\n        }\n        if ( xidIdentMap.size() > 0 )\n        {\n            fileChannel.position( getFirstStartEntry( endPosition ) );\n        }\n        buffer.clear(); // ignore other 8 bytes\n        buffer.limit( 1 );\n        boolean emptyHit = false;\n        while ( fileChannel.read( buffer ) == 1 && !emptyHit )\n        {\n            buffer.flip();\n            byte entry = buffer.get();\n            switch ( entry )\n            {\n                case TX_START:\n                    readAndWriteTxStartEntry( newLog );\n                    break;\n                case TX_PREPARE:\n                    readAndWriteTxPrepareEntry( newLog );\n                    break;\n                case TX_1P_COMMIT:\n                    readAndWriteTxOnePhaseCommit( newLog );\n                    break;\n                case TX_2P_COMMIT:\n                    readAndWriteTxTwoPhaseCommit( newLog );\n                    break;\n                case COMMAND:\n                    readAndWriteCommandEntry( newLog );\n                    break;\n                case DONE:\n                    readAndVerifyDoneEntry();\n                    break;\n                case EMPTY:\n                    emptyHit = true;\n                    break;\n                default:\n                    throw new IOException( \"Log rotation failed, \"\n                        + \"unknown log entry[\" + entry + \"]\" );\n            }\n            buffer.clear();\n            buffer.limit( 1 );\n        }\n        newLog.force( false );\n        releaseCurrentLogFile();\n        setActiveLog( newActiveLog );\n        if ( keepLogs )\n        {\n            renameCurrentLogFileAndIncrementVersion( currentLogFile, \n                endPosition );\n        }\n        else\n        {\n            deleteCurrentLogFile( currentLogFile );\n            xaTf.getAndSetNewVersion();\n        }\n        if ( xaTf.getCurrentVersion() != ( currentVersion + 1 ) )\n        {\n            throw new IOException( \"version change failed\" );\n        }\n        fileChannel = newLog;\n        if ( !useMemoryMapped )\n        {\n            writeBuffer = new DirectMappedLogBuffer( fileChannel );\n        }\n        else\n        {\n            writeBuffer = new MemoryMappedLogBuffer( fileChannel );\n        }\n    }","commit_id":"a0ce25a7950547f2f944de9a29842f1cdf8446c8","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void readAndApplyTxTwoPhaseCommit() throws IOException\n        {\n            // get the tx identifier\n            buffer.clear();\n            buffer.limit( 12 );\n            if ( byteChannel.read( buffer ) != buffer.limit() )\n            {\n                throw new IOException( \"Unable to read tx 2PC entry\" );\n            }\n            buffer.flip();\n            int identifier = buffer.getInt();\n            long txId = buffer.getLong();\n            StartEntry entry = xidIdentMap.get( identifier );\n            if ( entry == null )\n            {\n                throw new IOException( \"Unable to read tx prepeare entry\" );\n            }\n            Xid xid = entry.getXid();\n            try\n            {\n                XaTransaction xaTx = xaRm.getXaTransaction( xid );\n                xaTx.setCommitTxId( txId );\n                xaRm.commit( xid, true );\n            }\n            catch ( XAException e )\n            {\n                e.printStackTrace();\n                throw new IOException( e.getMessage() );\n            }\n        }","id":53653,"modified_method":"private void readAndApplyTxTwoPhaseCommit() throws IOException\n        {\n            LogEntry.TwoPhaseCommit commit = \n                LogIoUtils.readTxTwoPhaseCommit( buffer, byteChannel );\n            if ( commit == null )\n            {\n                throw new IOException( \"Unable to read tx 2PC entry\" );\n            }\n            int identifier = commit.getIdentifier();\n            long txId = commit.getTxId();\n            LogEntry.Start entry = xidIdentMap.get( identifier );\n            if ( entry == null )\n            {\n                throw new IOException( \"Unable to read tx prepeare entry\" );\n            }\n            Xid xid = entry.getXid();\n            try\n            {\n                XaTransaction xaTx = xaRm.getXaTransaction( xid );\n                xaTx.setCommitTxId( txId );\n                xaRm.commit( xid, true );\n            }\n            catch ( XAException e )\n            {\n                e.printStackTrace();\n                throw new IOException( e.getMessage() );\n            }\n        }","commit_id":"a0ce25a7950547f2f944de9a29842f1cdf8446c8","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void readTxPrepareEntry() throws IOException\n        {\n            // get the tx identifier\n            buffer.clear();\n            buffer.limit( 4 );\n            if ( byteChannel.read( buffer ) != buffer.limit() )\n            {\n                throw new IOException( \"Unable to read tx prepare entry\" );\n            }\n            buffer.flip();\n            int identifier = buffer.getInt();\n            StartEntry entry = xidIdentMap.get( identifier );\n            if ( entry == null )\n            {\n                throw new IOException( \"Unable to read tx prepeare entry\" );\n            }\n            Xid xid = entry.getXid();\n            if ( xaRm.injectPrepare( xid ) )\n            {\n                // read only, we can remove\n                xidIdentMap.remove( identifier );\n                recoveredTxMap.remove( identifier );\n            }\n        }","id":53654,"modified_method":"private void readTxPrepareEntry() throws IOException\n        {\n            // get the tx identifier\n            LogEntry.Prepare prepareEntry = \n                LogIoUtils.readTxPrepareEntry( buffer, byteChannel );\n            if ( prepareEntry == null )\n            {\n                throw new IOException( \"Unable to read tx prepare entry\" );\n            }\n            int identifier = prepareEntry.getIdentifier();\n            LogEntry.Start entry = xidIdentMap.get( identifier );\n            if ( entry == null )\n            {\n                throw new IOException( \"Unable to read tx prepeare entry\" );\n            }\n            Xid xid = entry.getXid();\n            if ( xaRm.injectPrepare( xid ) )\n            {\n                // read only, we can remove\n                xidIdentMap.remove( identifier );\n                recoveredTxMap.remove( identifier );\n            }\n        }","commit_id":"a0ce25a7950547f2f944de9a29842f1cdf8446c8","url":"https://github.com/neo4j/neo4j"},{"original_method":"private boolean readCommandEntry() throws IOException\n    {\n        buffer.clear();\n        buffer.limit( 4 );\n        if ( fileChannel.read( buffer ) != buffer.limit() )\n        {\n            return false;\n        }\n        buffer.flip();\n        int identifier = buffer.getInt();\n        XaCommand command = cf.readCommand( fileChannel, buffer );\n        if ( command == null )\n        {\n            // readCommand returns null if full command couldn't be loaded\n            return false;\n        }\n        command.setRecovered();\n        XaTransaction xaTx = recoveredTxMap.get( identifier );\n        xaTx.injectCommand( command );\n        return true;\n    }","id":53655,"modified_method":"private boolean readCommandEntry() throws IOException\n    {\n        LogEntry.Command entry = LogIoUtils.readTxCommand( buffer, \n                fileChannel, cf );\n        if ( entry == null )\n        {\n            return false;\n        }\n        int identifier = entry.getIdentifier();\n        XaCommand command = entry.getXaCommand();\n        if ( command == null )\n        {\n            // readCommand returns null if full command couldn't be loaded\n            return false;\n        }\n        command.setRecovered();\n        XaTransaction xaTx = recoveredTxMap.get( identifier );\n        xaTx.injectCommand( command );\n        return true;\n    }","commit_id":"a0ce25a7950547f2f944de9a29842f1cdf8446c8","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void readAndApplyTxOnePhaseCommit() throws IOException\n        {\n            // get the tx identifier\n            buffer.clear();\n            buffer.limit( 12 );\n            if ( byteChannel.read( buffer ) != buffer.limit() )\n            {\n                throw new IOException( \"Unable to read tx 1PC entry\" );\n            }\n            buffer.flip();\n            int identifier = buffer.getInt();\n            long txId = buffer.getLong();\n            StartEntry entry = xidIdentMap.get( identifier );\n            if ( entry == null )\n            {\n                throw new IOException( \"Unable to read tx prepeare entry\" );\n            }\n            Xid xid = entry.getXid();\n            try\n            {\n                XaTransaction xaTx = xaRm.getXaTransaction( xid );\n                xaTx.setCommitTxId( txId );\n                xaRm.commit( xid, true );\n            }\n            catch ( XAException e )\n            {\n                e.printStackTrace();\n                throw new IOException( e.getMessage() );\n            }\n        }","id":53656,"modified_method":"private void readAndApplyTxOnePhaseCommit() throws IOException\n        {\n            // get the tx identifier\n            LogEntry.OnePhaseCommit commit = \n                LogIoUtils.readTxOnePhaseCommit( buffer, byteChannel );\n            if ( commit == null )\n            {\n                throw new IOException( \"Unable to read tx 1PC entry\" );\n            }\n            int identifier = commit.getIdentifier();\n            long txId = commit.getTxId();\n            LogEntry.Start entry = xidIdentMap.get( identifier );\n            if ( entry == null )\n            {\n                throw new IOException( \"Unable to read tx prepeare entry\" );\n            }\n            Xid xid = entry.getXid();\n            try\n            {\n                XaTransaction xaTx = xaRm.getXaTransaction( xid );\n                xaTx.setCommitTxId( txId );\n                xaRm.commit( xid, true );\n            }\n            catch ( XAException e )\n            {\n                e.printStackTrace();\n                throw new IOException( e.getMessage() );\n            }\n        }","commit_id":"a0ce25a7950547f2f944de9a29842f1cdf8446c8","url":"https://github.com/neo4j/neo4j"},{"original_method":"public synchronized int start( Xid xid ) throws XAException\n    {\n        if ( backupSlave )\n        {\n            throw new XAException( \"Resource is configured as backup slave, \" + \n                \"no new transactions can be started for \" + fileName + \".\" + \n                currentLog );\n        }\n        int xidIdent = getNextIdentifier();\n        try\n        {\n            byte globalId[] = xid.getGlobalTransactionId();\n            byte branchId[] = xid.getBranchQualifier();\n            int formatId = xid.getFormatId();\n            long position = writeBuffer.getFileChannelPosition();\n            writeBuffer.put( TX_START ).put( (byte) globalId.length ).put(\n                (byte) branchId.length ).put( globalId ).put( branchId )\n                .putInt( xidIdent ).putInt( formatId );\n            xidIdentMap.put( xidIdent, new StartEntry( xid, position ) );\n        }\n        catch ( IOException e )\n        {\n            throw new XAException( \"Logical log couldn't start transaction: \"\n                + e );\n        }\n        return xidIdent;\n    }","id":53657,"modified_method":"public synchronized int start( Xid xid ) throws XAException\n    {\n        if ( backupSlave )\n        {\n            throw new XAException( \"Resource is configured as backup slave, \" + \n                \"no new transactions can be started for \" + fileName + \".\" + \n                currentLog );\n        }\n        int xidIdent = getNextIdentifier();\n        try\n        {\n            byte globalId[] = xid.getGlobalTransactionId();\n            byte branchId[] = xid.getBranchQualifier();\n            int formatId = xid.getFormatId();\n            long position = writeBuffer.getFileChannelPosition();\n            writeBuffer.put( TX_START ).put( (byte) globalId.length ).put(\n                (byte) branchId.length ).put( globalId ).put( branchId )\n                .putInt( xidIdent ).putInt( formatId );\n            xidIdentMap.put( xidIdent, \n                    new LogEntry.Start( xid, xidIdent, position ) );\n        }\n        catch ( IOException e )\n        {\n            throw new XAException( \"Logical log couldn't start transaction: \"\n                + e );\n        }\n        return xidIdent;\n    }","commit_id":"a0ce25a7950547f2f944de9a29842f1cdf8446c8","url":"https://github.com/neo4j/neo4j"},{"original_method":"public synchronized void applyTransaction( ReadableByteChannel byteChannel )\n        throws IOException\n    {\n        if ( !slave )\n        {\n            throw new IllegalStateException( \"This is not a slave\" );\n        }\n        buffer.clear();\n        buffer.limit( 8 );\n        if ( byteChannel.read( buffer ) != 16 )\n        {\n            throw new IOException( \"Unable to read log version\" );\n        }\n        buffer.flip();\n        long txId = buffer.getLong();\n        if ( txId != (xaTf.getLastCommittedTx() + 1) )\n        {\n            throw new IllegalStateException( \"Tried to apply tx \" + \n                txId + \" but expected transaction \" + \n                (xaTf.getCurrentVersion() + 1) );\n        }\n        log.fine( \"Logical log version: \" + logVersion + \n            \", committing tx=\" + txId + \")\" );\n        long logEntriesFound = 0;\n        LogApplier logApplier = new LogApplier( byteChannel, buffer, xaTf, xaRm,\n            cf, xidIdentMap, recoveredTxMap );\n        while ( logApplier.readAndApplyEntry() )\n        {\n            logEntriesFound++;\n        }\n        byteChannel.close();\n        // xaTf.flushAll();\n        // xaTf.getAndSetNewVersion();\n        xaTf.setLastCommittedTx( txId );\n        xaRm.reset();\n        log.info( \"Tx[\" + txId + \"] \" + \" applied successfully.\" );\n    }","id":53658,"modified_method":"public synchronized void applyTransaction( ReadableByteChannel byteChannel )\n        throws IOException\n    {\n        if ( !slave )\n        {\n            throw new IllegalStateException( \"This is not a slave\" );\n        }\n        buffer.clear();\n        buffer.limit( 8 );\n        if ( byteChannel.read( buffer ) != 16 )\n        {\n            throw new IOException( \"Unable to read log version\" );\n        }\n        buffer.flip();\n        long txId = buffer.getLong();\n        if ( txId != (xaTf.getLastCommittedTx() + 1) )\n        {\n            throw new IllegalStateException( \"Tried to apply tx \" + \n                txId + \" but expected transaction \" + \n                (xaTf.getCurrentVersion() + 1) );\n        }\n        log.fine( \"Logical log version: \" + logVersion + \n            \", committing tx=\" + txId + \")\" );\n        long logEntriesFound = 0;\n        LogApplier logApplier = new LogApplier( byteChannel, buffer, xaTf, xaRm,\n            cf, xidIdentMap, recoveredTxMap );\n        while ( logApplier.readAndApplyEntry() )\n        {\n            logEntriesFound++;\n        }\n        byteChannel.close();\n        // TODO: optimize this and write to local logical log instead of flush?\n        xaTf.flushAll();\n        xaTf.setLastCommittedTx( txId );\n        xaRm.reset();\n        log.info( \"Tx[\" + txId + \"] \" + \" applied successfully.\" );\n    }","commit_id":"a0ce25a7950547f2f944de9a29842f1cdf8446c8","url":"https://github.com/neo4j/neo4j"},{"original_method":"private long getFirstStartEntry( long endPosition )\n    {\n        long firstEntryPosition = endPosition;\n        for ( StartEntry entry : xidIdentMap.values() )\n        {\n            if ( entry.getStartPosition() < firstEntryPosition )\n            {\n                assert entry.getStartPosition() > 0; \n                firstEntryPosition = entry.getStartPosition();\n            }\n        }\n        return firstEntryPosition;\n    }","id":53659,"modified_method":"private long getFirstStartEntry( long endPosition )\n    {\n        long firstEntryPosition = endPosition;\n        for ( LogEntry.Start entry : xidIdentMap.values() )\n        {\n            if ( entry.getStartPosition() < firstEntryPosition )\n            {\n                assert entry.getStartPosition() > 0; \n                firstEntryPosition = entry.getStartPosition();\n            }\n        }\n        return firstEntryPosition;\n    }","commit_id":"a0ce25a7950547f2f944de9a29842f1cdf8446c8","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void doInternalRecovery( String logFileName ) throws IOException\n    {\n        log.info( \"Non clean shutdown detected on log [\" + logFileName + \n            \"]. Recovery started ...\" );\n        // get log creation time\n        buffer.clear();\n        buffer.limit( 16 );\n        if ( fileChannel.read( buffer ) != 16 )\n        {\n            log.info( \"Unable to read timestamp information, \"\n                + \"no records in logical log.\" );\n            fileChannel.close();\n            boolean success = FileUtils.renameFile( new File( logFileName ), \n                new File( logFileName + \"_unknown_timestamp_\" + \n                    System.currentTimeMillis() + \".log\" ) );\n            assert success;\n            fileChannel = new RandomAccessFile( logFileName, \n                \"rw\" ).getChannel();\n            return;\n        }\n        buffer.flip();\n        logVersion = buffer.getLong();\n        long lastCommittedTx = buffer.getLong();\n        log.fine( \"Logical log version: \" + logVersion + \" with committed tx[\" +\n            lastCommittedTx + \"]\" );\n        long logEntriesFound = 0;\n        long lastEntryPos = fileChannel.position();\n        while ( readEntry() )\n        {\n            logEntriesFound++;\n            lastEntryPos = fileChannel.position();\n        }\n        // make sure we overwrite any broken records\n        fileChannel.position( lastEntryPos );\n        scanIsComplete = true;\n        log.fine( \"Internal recovery completed, scanned \" + logEntriesFound\n            + \" log entries.\" );\n        xaRm.checkXids();\n        if ( xidIdentMap.size() == 0 )\n        {\n            log.fine( \"Recovery completed.\" );\n        }\n        else\n        {\n            log.fine( \"[\" + logFileName + \"] Found \" + xidIdentMap.size()\n                + \" prepared 2PC transactions.\" );\n            for ( StartEntry entry : xidIdentMap.values() )\n            {\n                log.fine( \"[\" + logFileName + \"] 2PC xid[\" + \n                    entry.getXid() + \"]\" );\n            }\n        }\n        recoveredTxMap.clear();\n    }","id":53660,"modified_method":"private void doInternalRecovery( String logFileName ) throws IOException\n    {\n        log.info( \"Non clean shutdown detected on log [\" + logFileName + \n            \"]. Recovery started ...\" );\n        // get log creation time\n        buffer.clear();\n        buffer.limit( 16 );\n        if ( fileChannel.read( buffer ) != 16 )\n        {\n            log.info( \"Unable to read timestamp information, \"\n                + \"no records in logical log.\" );\n            fileChannel.close();\n            boolean success = FileUtils.renameFile( new File( logFileName ), \n                new File( logFileName + \"_unknown_timestamp_\" + \n                    System.currentTimeMillis() + \".log\" ) );\n            assert success;\n            fileChannel = new RandomAccessFile( logFileName, \n                \"rw\" ).getChannel();\n            return;\n        }\n        buffer.flip();\n        logVersion = buffer.getLong();\n        long lastCommittedTx = buffer.getLong();\n        previousLogLastCommittedTx = lastCommittedTx;\n        log.fine( \"Logical log version: \" + logVersion + \" with committed tx[\" +\n            lastCommittedTx + \"]\" );\n        long logEntriesFound = 0;\n        long lastEntryPos = fileChannel.position();\n        while ( readEntry() )\n        {\n            logEntriesFound++;\n            lastEntryPos = fileChannel.position();\n        }\n        // make sure we overwrite any broken records\n        fileChannel.position( lastEntryPos );\n        scanIsComplete = true;\n        log.fine( \"Internal recovery completed, scanned \" + logEntriesFound\n            + \" log entries.\" );\n        xaRm.checkXids();\n        if ( xidIdentMap.size() == 0 )\n        {\n            log.fine( \"Recovery completed.\" );\n        }\n        else\n        {\n            log.fine( \"[\" + logFileName + \"] Found \" + xidIdentMap.size()\n                + \" prepared 2PC transactions.\" );\n            for ( LogEntry.Start entry : xidIdentMap.values() )\n            {\n                log.fine( \"[\" + logFileName + \"] 2PC xid[\" + \n                    entry.getXid() + \"]\" );\n            }\n        }\n        recoveredTxMap.clear();\n    }","commit_id":"a0ce25a7950547f2f944de9a29842f1cdf8446c8","url":"https://github.com/neo4j/neo4j"},{"original_method":"LogApplier( ReadableByteChannel byteChannel, ByteBuffer buffer, \n            XaTransactionFactory xaTf, XaResourceManager xaRm, \n            XaCommandFactory xaCf, ArrayMap<Integer,StartEntry> xidIdentMap, \n            Map<Integer,XaTransaction> recoveredTxMap )\n        {\n            this.byteChannel = byteChannel;\n            this.buffer = buffer;\n            this.xaTf = xaTf;\n            this.xaRm = xaRm;\n            this.xaCf = xaCf;\n            this.xidIdentMap = xidIdentMap;\n            this.recoveredTxMap = recoveredTxMap;\n        }","id":53661,"modified_method":"LogApplier( ReadableByteChannel byteChannel, ByteBuffer buffer, \n            XaTransactionFactory xaTf, XaResourceManager xaRm, \n            XaCommandFactory xaCf, ArrayMap<Integer,LogEntry.Start> xidIdentMap, \n            Map<Integer,XaTransaction> recoveredTxMap )\n        {\n            this.byteChannel = byteChannel;\n            this.buffer = buffer;\n            this.xaTf = xaTf;\n            this.xaRm = xaRm;\n            this.xaCf = xaCf;\n            this.xidIdentMap = xidIdentMap;\n            this.recoveredTxMap = recoveredTxMap;\n        }","commit_id":"a0ce25a7950547f2f944de9a29842f1cdf8446c8","url":"https://github.com/neo4j/neo4j"},{"original_method":"private boolean readDoneEntry() throws IOException\n    {\n        // get the tx identifier\n        buffer.clear();\n        buffer.limit( 4 );\n        if ( fileChannel.read( buffer ) != buffer.limit() )\n        {\n            return false;\n        }\n        buffer.flip();\n        int identifier = buffer.getInt();\n        StartEntry entry = xidIdentMap.get( identifier );\n        if ( entry == null )\n        {\n            return false;\n        }\n        Xid xid = entry.getXid();\n        xaRm.pruneXid( xid );\n        xidIdentMap.remove( identifier );\n        recoveredTxMap.remove( identifier );\n        return true;\n    }","id":53662,"modified_method":"private boolean readDoneEntry() throws IOException\n    {\n        // get the tx identifier\n        LogEntry.Done done = LogIoUtils.readTxDoneEntry( buffer, fileChannel );\n        if ( done == null )\n        {\n            return false;\n        }\n        int identifier = done.getIdentifier();\n        LogEntry.Start entry = xidIdentMap.get( identifier );\n        if ( entry == null )\n        {\n            return false;\n        }\n        Xid xid = entry.getXid();\n        xaRm.pruneXid( xid );\n        xidIdentMap.remove( identifier );\n        recoveredTxMap.remove( identifier );\n        return true;\n    }","commit_id":"a0ce25a7950547f2f944de9a29842f1cdf8446c8","url":"https://github.com/neo4j/neo4j"},{"original_method":"private boolean readTxStartEntry() throws IOException\n    {\n        // get the global id\n        long position = fileChannel.position();\n        buffer.clear();\n        buffer.limit( 1 );\n        if ( fileChannel.read( buffer ) != buffer.limit() )\n        {\n            return false;\n        }\n        buffer.flip();\n        byte globalIdLength = buffer.get();\n        // get the branchId id\n        buffer.clear();\n        buffer.limit( 1 );\n        if ( fileChannel.read( buffer ) != buffer.limit() )\n        {\n            return false;\n        }\n        buffer.flip();\n        byte branchIdLength = buffer.get();\n        byte globalId[] = new byte[globalIdLength];\n        ByteBuffer tmpBuffer = ByteBuffer.wrap( globalId );\n        if ( fileChannel.read( tmpBuffer ) != globalId.length )\n        {\n            return false;\n        }\n        byte branchId[] = new byte[branchIdLength];\n        tmpBuffer = ByteBuffer.wrap( branchId );\n        if ( fileChannel.read( tmpBuffer ) != branchId.length )\n        {\n            return false;\n        }\n        // get the tx identifier\n        buffer.clear();\n        buffer.limit( 4 );\n        if ( fileChannel.read( buffer ) != buffer.limit() )\n        {\n            return false;\n        }\n        buffer.flip();\n        int identifier = buffer.getInt();\n        if ( identifier >= nextIdentifier )\n        {\n            nextIdentifier = (identifier + 1);\n        }\n        // get the format id\n        buffer.clear();\n        buffer.limit( 4 );\n        if ( fileChannel.read( buffer ) != buffer.limit() )\n        {\n            return false;\n        }\n        buffer.flip();\n        int formatId = buffer.getInt();\n        // re-create the transaction\n        Xid xid = new XidImpl( globalId, branchId, formatId );\n        xidIdentMap.put( identifier, new StartEntry( xid, position ) );\n        XaTransaction xaTx = xaTf.create( identifier );\n        xaTx.setRecovered();\n        recoveredTxMap.put( identifier, xaTx );\n        xaRm.injectStart( xid, xaTx );\n        return true;\n    }","id":53663,"modified_method":"private boolean readTxStartEntry() throws IOException\n    {\n        // get the global id\n        long position = fileChannel.position();\n        LogEntry.Start entry = \n            LogIoUtils.readTxStartEntry( buffer, fileChannel, position );\n        if ( entry == null )\n        {\n            return false;\n        }\n        int identifier = entry.getIdentifier();\n        if ( identifier >= nextIdentifier )\n        {\n            nextIdentifier = (identifier + 1);\n        }\n        // re-create the transaction\n        Xid xid = entry.getXid();\n        xidIdentMap.put( identifier, entry );\n        XaTransaction xaTx = xaTf.create( identifier );\n        xaTx.setRecovered();\n        recoveredTxMap.put( identifier, xaTx );\n        xaRm.injectStart( xid, xaTx );\n        return true;\n    }","commit_id":"a0ce25a7950547f2f944de9a29842f1cdf8446c8","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void readAndWriteTxStartEntry( FileChannel newLog ) \n        throws IOException\n    {\n        // get the global id\n        buffer.clear();\n        buffer.put( TX_START );\n        buffer.limit( 3 );\n        if ( fileChannel.read( buffer ) != 2 )\n        {\n            throw new IllegalStateException( \n                \"Unable to read tx start entry xid id lengths\" );\n        }\n        buffer.flip();\n        buffer.position( 1 );\n        byte globalIdLength = buffer.get();\n        byte branchIdLength = buffer.get();\n        int xidLength = globalIdLength + branchIdLength;\n        buffer.limit( 3 + xidLength + 8 );\n        buffer.position( 3 );\n        if ( fileChannel.read( buffer ) != 8 + xidLength )\n        {\n            throw new IllegalStateException( \"Unable to read xid\" );\n        }\n        buffer.flip();\n        buffer.position( 3 + xidLength );\n        int identifier = buffer.getInt();\n        FileChannel writeToLog = null;\n        StartEntry entry = xidIdentMap.get( identifier );\n        if ( entry != null )\n        {\n            writeToLog = newLog;\n            entry.setStartPosition( newLog.position() );\n        }\n        buffer.position( 0 );\n        if ( writeToLog != null && \n            writeToLog.write( buffer ) != 3 + 8 + xidLength )\n        {\n            throw new TransactionFailureException( \n                \"Unable to write tx start xid\" );\n        }\n    }","id":53664,"modified_method":"private void readAndWriteTxStartEntry( FileChannel newLog ) \n        throws IOException\n    {\n        // get the global id\n        buffer.clear();\n        buffer.put( TX_START );\n        buffer.limit( 3 );\n        if ( fileChannel.read( buffer ) != 2 )\n        {\n            throw new IllegalStateException( \n                \"Unable to read tx start entry xid id lengths\" );\n        }\n        buffer.flip();\n        buffer.position( 1 );\n        byte globalIdLength = buffer.get();\n        byte branchIdLength = buffer.get();\n        int xidLength = globalIdLength + branchIdLength;\n        buffer.limit( 3 + xidLength + 8 );\n        buffer.position( 3 );\n        if ( fileChannel.read( buffer ) != 8 + xidLength )\n        {\n            throw new IllegalStateException( \"Unable to read xid\" );\n        }\n        buffer.flip();\n        buffer.position( 3 + xidLength );\n        int identifier = buffer.getInt();\n        FileChannel writeToLog = null;\n        LogEntry.Start entry = xidIdentMap.get( identifier );\n        if ( entry != null )\n        {\n            writeToLog = newLog;\n            entry.setStartPosition( newLog.position() );\n        }\n        buffer.position( 0 );\n        if ( writeToLog != null && \n            writeToLog.write( buffer ) != 3 + 8 + xidLength )\n        {\n            throw new TransactionFailureException( \n                \"Unable to write tx start xid\" );\n        }\n    }","commit_id":"a0ce25a7950547f2f944de9a29842f1cdf8446c8","url":"https://github.com/neo4j/neo4j"},{"original_method":"private boolean readTxTwoPhaseCommit() throws IOException\n    {\n        // get the tx identifier\n        buffer.clear();\n        buffer.limit( 12 );\n        if ( fileChannel.read( buffer ) != buffer.limit() )\n        {\n            return false;\n        }\n        buffer.flip();\n        int identifier = buffer.getInt();\n        long txId = buffer.getLong();\n        StartEntry entry = xidIdentMap.get( identifier );\n        if ( entry == null )\n        {\n            return false;\n        }\n        Xid xid = entry.getXid();\n        if ( xid == null )\n        {\n            return false;\n        }\n        try\n        {\n            XaTransaction xaTx = xaRm.getXaTransaction( xid );\n            xaTx.setCommitTxId( txId );\n            xaRm.injectTwoPhaseCommit( xid );\n        }\n        catch ( XAException e )\n        {\n            e.printStackTrace();\n            throw new IOException( e.getMessage() );\n        }\n        return true;\n    }","id":53665,"modified_method":"private boolean readTxTwoPhaseCommit() throws IOException\n    {\n        // get the tx identifier\n        LogEntry.TwoPhaseCommit commit = LogIoUtils.readTxTwoPhaseCommit( \n                buffer, fileChannel );\n        if ( commit == null )\n        {\n            return false;\n        }\n        int identifier = commit.getIdentifier();\n        long txId = commit.getTxId();\n        LogEntry.Start entry = xidIdentMap.get( identifier );\n        if ( entry == null )\n        {\n            return false;\n        }\n        Xid xid = entry.getXid();\n        if ( xid == null )\n        {\n            return false;\n        }\n        try\n        {\n            XaTransaction xaTx = xaRm.getXaTransaction( xid );\n            xaTx.setCommitTxId( txId );\n            xaRm.injectTwoPhaseCommit( xid );\n        }\n        catch ( XAException e )\n        {\n            e.printStackTrace();\n            throw new IOException( e.getMessage() );\n        }\n        return true;\n    }","commit_id":"a0ce25a7950547f2f944de9a29842f1cdf8446c8","url":"https://github.com/neo4j/neo4j"},{"original_method":"private boolean readDoneEntry() throws IOException\n        {\n            // get the tx identifier\n            buffer.clear();\n            buffer.limit( 4 );\n            if ( byteChannel.read( buffer ) != buffer.limit() )\n            {\n                return false;\n            }\n            buffer.flip();\n            int identifier = buffer.getInt();\n            StartEntry entry = xidIdentMap.get( identifier );\n            if ( entry == null )\n            {\n                throw new IOException( \"Unable to read tx done entry\" );\n            }\n            Xid xid = entry.getXid();\n            xaRm.pruneXidIfExist( xid );\n            xidIdentMap.remove( identifier );\n            recoveredTxMap.remove( identifier );\n            return true;\n        }","id":53666,"modified_method":"private boolean readDoneEntry() throws IOException\n        {\n            LogEntry.Done done = \n                LogIoUtils.readTxDoneEntry( buffer, byteChannel );\n            if ( done == null )\n            {\n                // not throw exception?\n                return false;\n            }\n            int identifier = done.getIdentifier();\n            LogEntry.Start entry = xidIdentMap.get( identifier );\n            if ( entry == null )\n            {\n                throw new IOException( \"Unable to read tx done entry\" );\n            }\n            Xid xid = entry.getXid();\n            xaRm.pruneXidIfExist( xid );\n            xidIdentMap.remove( identifier );\n            recoveredTxMap.remove( identifier );\n            return true;\n        }","commit_id":"a0ce25a7950547f2f944de9a29842f1cdf8446c8","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\r\n  public void mousePressed(final MouseEvent e) {\r\n    Performance.gc(3);\r\n    repaint();\r\n\r\n    final Runtime rt = Runtime.getRuntime();\r\n    final long occ = rt.totalMemory();\r\n    final long max = rt.maxMemory();\r\n    final long used = occ - rt.freeMemory();\r\n\r\n    final String inf = TOTAL_MEM_C + Performance.format(max, true) + NL\r\n        + RESERVED_MEM_C + Performance.format(occ, true) + NL + MEMUSED_C\r\n        + Performance.format(used, true) + NL + NL + H_USED_MEM;\r\n\r\n    BaseXDialog.info(gui, inf);\r\n  }","id":53667,"modified_method":"@Override\r\n  public void mousePressed(final MouseEvent e) {\r\n    Performance.gc(3);\r\n    repaint();\r\n\r\n    final Runtime rt = Runtime.getRuntime();\r\n    final long max = rt.maxMemory();\r\n    final long total = rt.totalMemory();\r\n    final long used = total - rt.freeMemory();\r\n\r\n    final String inf = TOTAL_MEM_C + Performance.format(max, true) + NL\r\n        + RESERVED_MEM_C + Performance.format(total, true) + NL + MEMUSED_C\r\n        + Performance.format(used, true) + NL + NL + H_USED_MEM;\r\n\r\n    BaseXDialog.info(gui, inf);\r\n  }","commit_id":"ce5fb024bafaaa4c09b92ab33e1bdf712b8c634c","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Constructor.\r\n   * @param win parent reference\r\n   * @param mouse mouse interaction\r\n   */\r\n  public BaseXMem(final Window win, final boolean mouse) {\r\n    super(win);\r\n    BaseXLayout.setWidth(this, DWIDTH);\r\n    BaseXLayout.setHeight(this, getFont().getSize() + 6);\r\n    if(mouse) {\r\n      setCursor(CURSORHAND);\r\n      addMouseListener(this);\r\n      addMouseMotionListener(this);\r\n    }\r\n  }","id":53668,"modified_method":"/**\r\n   * Constructor.\r\n   * @param win parent reference\r\n   * @param mouse mouse interaction\r\n   */\r\n  public BaseXMem(final Window win, final boolean mouse) {\r\n    super(win);\r\n    BaseXLayout.setWidth(this, DWIDTH);\r\n    BaseXLayout.setHeight(this, getFont().getSize() + 6);\r\n    if(mouse) {\r\n      setCursor(CURSORHAND);\r\n      addMouseListener(this);\r\n      addMouseMotionListener(this);\r\n    }\r\n\r\n    new Timer(500, new ActionListener() {\r\n      @Override\r\n      public void actionPerformed(final ActionEvent e) {\r\n        repaint();\r\n      }\r\n    }).start();\r\n  }","commit_id":"ce5fb024bafaaa4c09b92ab33e1bdf712b8c634c","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Override\r\n  public void paintComponent(final Graphics g) {\r\n    super.paintComponent(g);\r\n\r\n    final Runtime rt = Runtime.getRuntime();\r\n    final long max = rt.maxMemory();\r\n    final long used = rt.totalMemory() - rt.freeMemory();\r\n    final int ww = getWidth();\r\n    final int hh = getHeight();\r\n\r\n    // draw memory box\r\n    g.setColor(Color.white);\r\n    g.fillRect(0, 0, ww - 3, hh - 3);\r\n    g.setColor(GRAY);\r\n    g.drawLine(0, 0, ww - 4, 0);\r\n    g.drawLine(0, 0, 0, hh - 4);\r\n    g.drawLine(ww - 3, 0, ww - 3, hh - 3);\r\n    g.drawLine(0, hh - 3, ww - 3, hh - 3);\r\n\r\n    // show current memory usage\r\n    final boolean full = used * 6 / 5 > max;\r\n    g.setColor(full ? colormark4 : color1);\r\n    g.fillRect(2, 2, Math.max(1, (int) (used * (ww - 6) / max)), hh - 6);\r\n\r\n    // print current memory usage\r\n    final FontMetrics fm = g.getFontMetrics();\r\n    final String mem = Performance.format(used, true);\r\n    final int fw = (ww - fm.stringWidth(mem)) / 2;\r\n    final int h = fm.getHeight() - 3;\r\n    g.setColor(full ? colormark3 : DGRAY);\r\n    g.drawString(mem, fw, h);\r\n  }","id":53669,"modified_method":"@Override\r\n  public void paintComponent(final Graphics g) {\r\n    super.paintComponent(g);\r\n\r\n    final Runtime rt = Runtime.getRuntime();\r\n    final long max = rt.maxMemory();\r\n    final long total = rt.totalMemory();\r\n    final long used = total - rt.freeMemory();\r\n    final int ww = getWidth();\r\n    final int hh = getHeight();\r\n\r\n    // draw memory box\r\n    g.setColor(Color.white);\r\n    g.fillRect(0, 0, ww - 3, hh - 3);\r\n    g.setColor(GRAY);\r\n    g.drawLine(0, 0, ww - 4, 0);\r\n    g.drawLine(0, 0, 0, hh - 4);\r\n    g.drawLine(ww - 3, 0, ww - 3, hh - 3);\r\n    g.drawLine(0, hh - 3, ww - 3, hh - 3);\r\n\r\n    // show total memory usage\r\n    g.setColor(color1);\r\n    g.fillRect(2, 2, Math.max(1, (int) (total * (ww - 6) / max)), hh - 6);\r\n\r\n    // show current memory usage\r\n    final boolean full = used * 6 / 5 > max;\r\n    g.setColor(full ? colormark4 : color3);\r\n    g.fillRect(2, 2, Math.max(1, (int) (used * (ww - 6) / max)), hh - 6);\r\n\r\n    // print current memory usage\r\n    final FontMetrics fm = g.getFontMetrics();\r\n    final String mem = Performance.format(used, true);\r\n    final int fw = (ww - fm.stringWidth(mem)) / 2;\r\n    final int h = fm.getHeight() - 3;\r\n    g.setColor(full ? colormark3 : DGRAY);\r\n    g.drawString(mem, fw, h);\r\n  }","commit_id":"ce5fb024bafaaa4c09b92ab33e1bdf712b8c634c","url":"https://github.com/BaseXdb/basex"},{"original_method":"/**\r\n   * Constructor.\r\n   * @param main reference to the main window\r\n   */\r\n  GUIStatus(final AGUI main) {\r\n    super(main);\r\n    BaseXLayout.setHeight(this, getFont().getSize() + 6);\r\n    addMouseListener(this);\r\n    addMouseMotionListener(this);\r\n\r\n    layout(new BorderLayout(4, 0));\r\n    label = new BaseXLabel(OK).border(0, 4, 0, 0);\r\n    add(label, BorderLayout.CENTER);\r\n    /* Memory usage. */\r\n    final BaseXMem mem = new BaseXMem(main, true);\r\n    add(mem, BorderLayout.EAST);\r\n  }","id":53670,"modified_method":"/**\r\n   * Constructor.\r\n   * @param main reference to the main window\r\n   */\r\n  GUIStatus(final AGUI main) {\r\n    super(main);\r\n    BaseXLayout.setHeight(this, getFont().getSize() + 6);\r\n    addMouseListener(this);\r\n    addMouseMotionListener(this);\r\n\r\n    layout(new BorderLayout(4, 0));\r\n    label = new BaseXLabel(OK).border(0, 4, 0, 0);\r\n    add(label, BorderLayout.CENTER);\r\n    add(new BaseXMem(main, true), BorderLayout.EAST);\r\n  }","commit_id":"ce5fb024bafaaa4c09b92ab33e1bdf712b8c634c","url":"https://github.com/BaseXdb/basex"},{"original_method":"@Test(groups=\"Integration\")\n    public void testBigUsage() {\n        List<Maybe<byte[]>> references = MutableList.of();\n        long created = 0;\n        while (created < 2*Runtime.getRuntime().maxMemory()) {\n            byte d[] = new byte[1000000];\n            references.add(Maybe.soft(d));\n            MemoryUsageTracker.SOFT_REFERENCES.track(d, d.length);\n            created += d.length;\n            \n            System.out.println(\"created \"+Strings.makeSizeString(created) +\n                \" ... in use: \"+Strings.makeSizeString(Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory())+\" / \" +\n                Strings.makeSizeString(Runtime.getRuntime().totalMemory()) +\n                \" ... reclaimable: \"+Strings.makeSizeString(MemoryUsageTracker.SOFT_REFERENCES.getBytesUsed()) +\n                \" ... live refs: \"+Strings.makeSizeString(sizeOfActiveReferences(references)));\n            \n            assertLessThan(MemoryUsageTracker.SOFT_REFERENCES.getBytesUsed(), Runtime.getRuntime().maxMemory());\n            assertLessThan(MemoryUsageTracker.SOFT_REFERENCES.getBytesUsed(), Runtime.getRuntime().totalMemory());\n            assertLessThan(MemoryUsageTracker.SOFT_REFERENCES.getBytesUsed(), Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory());\n        }\n    }","id":53671,"modified_method":"@Test(groups=\"Integration\")\n    public void testBigUsage() {\n        final int ALLOCATION_CHUNK_SIZE = 10*1000*1000; // 10MB\n        \n        // Don't just use runtime.maxMemory()*2; javadoc says:\n        //     If there is no inherent limit then the value java.lang.Long.MAX_VALUE will be returned.\n        // Therefore cap at 10GB.\n        final long MAX_MEMORY_CAP = 10*1024*1024*1024L; // 10GB\n        final long maxMemory = Math.min(Runtime.getRuntime().maxMemory(), MAX_MEMORY_CAP);\n        \n        List<Maybe<byte[]>> references = MutableList.of();\n        long created = 0;\n        while (created < 2*maxMemory) {\n            byte d[] = new byte[ALLOCATION_CHUNK_SIZE];\n            references.add(Maybe.soft(d));\n            MemoryUsageTracker.SOFT_REFERENCES.track(d, d.length);\n            created += d.length;\n            \n            long totalMemory = Runtime.getRuntime().totalMemory();\n            long freeMemory = Runtime.getRuntime().freeMemory();\n            \n            LOG.info(\"created \"+Strings.makeSizeString(created) +\n                \" ... in use: \"+Strings.makeSizeString(totalMemory - freeMemory)+\" / \" +\n                Strings.makeSizeString(totalMemory) +\n                \" ... reclaimable: \"+Strings.makeSizeString(MemoryUsageTracker.SOFT_REFERENCES.getBytesUsed()) +\n                \" ... live refs: \"+Strings.makeSizeString(sizeOfActiveReferences(references)) +\n                \" ... maxMem=\"+maxMemory+\"; totalMem=\"+totalMemory+\"; usedMem=\"+(totalMemory-freeMemory));\n        }\n        \n        Asserts.succeedsEventually(new Runnable() {\n            public void run() {\n                long totalMemory = Runtime.getRuntime().totalMemory();\n                long freeMemory = Runtime.getRuntime().freeMemory();\n                assertLessThan(MemoryUsageTracker.SOFT_REFERENCES.getBytesUsed(), maxMemory);\n                assertLessThan(MemoryUsageTracker.SOFT_REFERENCES.getBytesUsed(), totalMemory);\n                assertLessThan(MemoryUsageTracker.SOFT_REFERENCES.getBytesUsed(), totalMemory - freeMemory);\n            }});\n    }","commit_id":"eb57557146b371ad0745d6d1c271a3ecd33a6c6b","url":"https://github.com/apache/incubator-brooklyn"},{"original_method":"public void run() {\n\t\tfreenet.support.Logger.OSThread.logPID(this);\n\t\tif(!goon){\n\t\t\tLogger.normal(this, \"Goon is false ; killing MemoryChecker\");\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tRuntime r = Runtime.getRuntime();\n\t\t\n\t\tLogger.normal(this, \"Memory in use: \"+SizeUtil.formatSize((r.totalMemory()-r.freeMemory())));\n\t\t\n\t\tif (r.freeMemory() < 8 * 1024 * 1024) { // free memory < 8 MB\n\t\t\tLogger.error(this, \"memory too low, trying to free some\");\n\t\t\tOOMHandler.lowMemory();\n\t\t}\n\t\t\n\t\tint sleeptime = aggressiveGCModificator;\n\t\tif(sleeptime <= 0) { // We are done\n\t\t\tps.queueTimedJob(this, 120 * 250); // 30 sec\n\t\t\treturn;\n\t\t} else\n\t\t\tps.queueTimedJob(this, 120L * sleeptime);\n\t\t\n\t\t// FIXME\n\t\t// Do not remove until all known memory issues fixed,\n\t\t// Especially #66\n\t\t// This probably reduces performance, but it makes\n\t\t// memory usage *more predictable*. This will make\n\t\t// tracking down the sort of nasty unpredictable OOMs\n\t\t// we are getting much easier. \n\t\tif(aggressiveGCModificator > 0) {\n\t\t\tboolean logMINOR = Logger.shouldLog(Logger.MINOR, this);\n\t\t\tlong beforeGCUsedMemory = (r.totalMemory()-r.freeMemory());\n\t\t\tif(logMINOR) Logger.minor(this, \"Memory in use before GC: \"+beforeGCUsedMemory);\n\t\t\tlong beforeGCTime = System.currentTimeMillis();\n\t\t\tSystem.gc();\n\t\t\tSystem.runFinalization();\n\t\t\tlong afterGCTime = System.currentTimeMillis();\n\t\t\tlong afterGCUsedMemory = (r.totalMemory()-r.freeMemory());\n\t\t\tif(logMINOR) {\n\t\t\t\tLogger.minor(this, \"Memory in use after GC: \"+afterGCUsedMemory);\n\t\t\t\tLogger.minor(this, \"GC completed after \"+(afterGCTime - beforeGCTime)+\"ms and \\\"recovered\\\" \"+(beforeGCUsedMemory - afterGCUsedMemory)+\" bytes, leaving \"+afterGCUsedMemory+\" bytes used\");\n\t\t\t}\n\t\t}\n\n\t}","id":53672,"modified_method":"public void run() {\n\t\tfreenet.support.Logger.OSThread.logPID(this);\n\t\tif(!goon){\n\t\t\tLogger.normal(this, \"Goon is false ; killing MemoryChecker\");\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tRuntime r = Runtime.getRuntime();\n\t\t\n\t\tlong totalMemory = r.totalMemory();\n\t\tlong freeMemory = r.freeMemory();\n\t\tlong maxMemory = r.maxMemory();\n\t\t\n\t\tLogger.normal(this, \"Memory in use: \"+SizeUtil.formatSize((totalMemory-freeMemory)));\n\t\t\n\t\tif (freeMemory < 8 * 1024 * 1024 // free memory < 8 MB\n\t\t        && (totalMemory == maxMemory || maxMemory == Long.MAX_VALUE)) { // we have allocated max memory\n\t\t\tLogger.error(this, \"memory too low, trying to free some\");\n\t\t\tOOMHandler.lowMemory();\n\t\t}\n\t\t\n\t\tint sleeptime = aggressiveGCModificator;\n\t\tif(sleeptime <= 0) { // We are done\n\t\t\tps.queueTimedJob(this, 120 * 250); // 30 sec\n\t\t\treturn;\n\t\t} else\n\t\t\tps.queueTimedJob(this, 120L * sleeptime);\n\t\t\n\t\t// FIXME\n\t\t// Do not remove until all known memory issues fixed,\n\t\t// Especially #66\n\t\t// This probably reduces performance, but it makes\n\t\t// memory usage *more predictable*. This will make\n\t\t// tracking down the sort of nasty unpredictable OOMs\n\t\t// we are getting much easier. \n\t\tif(aggressiveGCModificator > 0) {\n\t\t\tboolean logMINOR = Logger.shouldLog(Logger.MINOR, this);\n\t\t\tlong beforeGCUsedMemory = (r.totalMemory() - r.freeMemory());\n\t\t\tif(logMINOR) Logger.minor(this, \"Memory in use before GC: \"+beforeGCUsedMemory);\n\t\t\tlong beforeGCTime = System.currentTimeMillis();\n\t\t\tSystem.gc();\n\t\t\tSystem.runFinalization();\n\t\t\tlong afterGCTime = System.currentTimeMillis();\n\t\t\tlong afterGCUsedMemory = (r.totalMemory() - r.freeMemory());\n\t\t\tif(logMINOR) {\n\t\t\t\tLogger.minor(this, \"Memory in use after GC: \"+afterGCUsedMemory);\n\t\t\t\tLogger.minor(this, \"GC completed after \"+(afterGCTime - beforeGCTime)+\"ms and \\\"recovered\\\" \"+(beforeGCUsedMemory - afterGCUsedMemory)+\" bytes, leaving \"+afterGCUsedMemory+\" bytes used\");\n\t\t\t}\n\t\t}\n\n\t}","commit_id":"5b3c80277181aa7c1290b45f8a8e5c058df5ed6c","url":"https://github.com/freenet/fred"},{"original_method":"private SearchRequestBuilder standardSearchRequest(String query, Set<String> indices, int limit, int offset, TimeRange range, SortOrder sort) throws IndexHelper.InvalidRangeFormatException {\n        if (query == null || query.trim().isEmpty()) {\n            query = \"*\";\n        }\n\n        SearchRequestBuilder srb = c.prepareSearch();\n        srb.setIndices(indices.toArray(new String[]{}));\n        srb.setQuery(queryString(query));\n        srb.setFrom(offset);\n\n        if (limit > 0) {\n            srb.setSize(limit);\n        }\n\n        if (range != null) {\n            srb.setFilter(IndexHelper.getTimestampRangeFilter(range));\n        }\n\n        if (sort != null) {\n            srb.addSort(\"timestamp\", sort);\n        }\n\n        return srb;\n    }","id":53673,"modified_method":"private SearchRequestBuilder standardSearchRequest(String query, Set<String> indices, int limit, int offset, TimeRange range, SortOrder sort) throws IndexHelper.InvalidRangeFormatException {\n        if (query == null || query.trim().isEmpty()) {\n            query = \"*\";\n        }\n\n        SearchRequestBuilder srb = c.prepareSearch();\n        srb.setIndices(indices.toArray(new String[]{}));\n\n        if (query.trim().equals(\"*\")) {\n            srb.setQuery(matchAllQuery());\n        } else {\n            QueryStringQueryBuilder qs = queryString(query);\n            qs.allowLeadingWildcard(server.getConfiguration().isAllowLeadingWildcardSearches());\n            srb.setQuery(qs);\n        }\n\n        srb.setFrom(offset);\n\n        if (limit > 0) {\n            srb.setSize(limit);\n        }\n\n        if (range != null) {\n            srb.setFilter(IndexHelper.getTimestampRangeFilter(range));\n        }\n\n        if (sort != null) {\n            srb.addSort(\"timestamp\", sort);\n        }\n\n        return srb;\n    }","commit_id":"6d07b24066f917b8cd21712cb93e66c216f44adc","url":"https://github.com/Graylog2/graylog2-server"},{"original_method":"public HistogramResult fieldHistogram(String query, String field, Indexer.DateHistogramInterval interval, String filter, TimeRange range) throws FieldTypeException, IndexHelper.InvalidRangeFormatException {\n        DateHistogramFacetBuilder fb = FacetBuilders.dateHistogramFacet(\"histogram\")\n                .keyField(\"timestamp\")\n                .valueField(field)\n                .interval(interval.toString().toLowerCase());\n\n        fb.facetFilter(standardFilters(range, filter));\n\n        SearchRequestBuilder srb = c.prepareSearch();\n        srb.setIndices(IndexHelper.determineAffectedIndices(server, range).toArray(new String[]{}));\n        srb.setQuery(queryString(query));\n        srb.addFacet(fb);\n\n        SearchResponse r;\n        final SearchRequest request = srb.request();\n        try {\n            r = c.search(request).actionGet();\n        }  catch (org.elasticsearch.action.search.SearchPhaseExecutionException e) {\n            throw new FieldTypeException(e);\n        }\n\n        return new FieldHistogramResult((DateHistogramFacet) r.getFacets().facet(\"histogram\"), query, request.source(),\n                                        interval, r.getTook());\n    }","id":53674,"modified_method":"public HistogramResult fieldHistogram(String query, String field, Indexer.DateHistogramInterval interval, String filter, TimeRange range) throws FieldTypeException, IndexHelper.InvalidRangeFormatException {\n        DateHistogramFacetBuilder fb = FacetBuilders.dateHistogramFacet(\"histogram\")\n                .keyField(\"timestamp\")\n                .valueField(field)\n                .interval(interval.toString().toLowerCase());\n\n        fb.facetFilter(standardFilters(range, filter));\n\n        QueryStringQueryBuilder qs = queryString(query);\n        qs.allowLeadingWildcard(server.getConfiguration().isAllowLeadingWildcardSearches());\n\n        SearchRequestBuilder srb = c.prepareSearch();\n        srb.setIndices(IndexHelper.determineAffectedIndices(server, range).toArray(new String[]{}));\n        srb.setQuery(qs);\n        srb.addFacet(fb);\n\n        SearchResponse r;\n        final SearchRequest request = srb.request();\n        try {\n            r = c.search(request).actionGet();\n        }  catch (org.elasticsearch.action.search.SearchPhaseExecutionException e) {\n            throw new FieldTypeException(e);\n        }\n\n        return new FieldHistogramResult((DateHistogramFacet) r.getFacets().facet(\"histogram\"), query, request.source(),\n                                        interval, r.getTook());\n    }","commit_id":"6d07b24066f917b8cd21712cb93e66c216f44adc","url":"https://github.com/Graylog2/graylog2-server"},{"original_method":"public static SolrQuery getSolrQuery(\n            final String querystring,\n            final String sort,\n            final int offset,\n            final int count,\n            final String ... fields) {\n        // construct query\n        final SolrQuery params = new SolrQuery();\n        params.setQuery(querystring);\n        params.clearSorts();\n        if (sort != null) {\n            params.set(\"sort\", sort);\n        }\n        params.setRows(count);\n        params.setStart(offset);\n        params.setFacet(false);\n        if (fields.length > 0) params.setFields(fields);\n        params.setIncludeScore(false);\n        \n        return params;\n    }","id":53675,"modified_method":"public static SolrQuery getSolrQuery(\n            final String querystring,\n            final String sort,\n            final int offset,\n            final int count,\n            final String ... fields) {\n        // construct query\n        final SolrQuery params = new SolrQuery();\n        if (count < 2 && querystring.startsWith(\"{!raw f=\")) {\n            params.setQuery(\"*:*\");\n            params.addFilterQuery(querystring);\n        } else {\n            params.setQuery(querystring);\n        }\n        params.clearSorts();\n        if (sort != null) {\n            params.set(\"sort\", sort);\n        }\n        params.setRows(count);\n        params.setStart(offset);\n        params.setFacet(false);\n        if (fields.length > 0) params.setFields(fields);\n        params.setIncludeScore(false);\n        \n        return params;\n    }","commit_id":"5326970d6cd9455375c6536a6844b980c73d0bd4","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"/**\n     * check if a given document, identified by url hash as document id exists\n     * @param id the url hash and document id\n     * @return metadata if any entry in solr exists, null otherwise\n     * @throws IOException\n     */\n    @Override\n    public Metadata getMetadata(String id) throws IOException {\n        // construct raw query\n        final SolrQuery params = new SolrQuery();\n        //params.setQuery(CollectionSchema.id.getSolrFieldName() + \":\\\"\" + id + \"\\\"\");\n        params.setQuery(\"{!raw f=\" + CollectionSchema.id.getSolrFieldName() + \"}\" + id);\n        //params.set(\"defType\", \"raw\");\n        params.setRows(1);\n        params.setStart(0);\n        params.setFacet(false);\n        params.clearSorts();\n        params.setFields(CollectionSchema.id.getSolrFieldName(), CollectionSchema.sku.getSolrFieldName(), CollectionSchema.load_date_dt.getSolrFieldName());\n        params.setIncludeScore(false);\n\n        // query the server\n        final SolrDocumentList sdl = getDocumentListByParams(params);\n        if (sdl == null || sdl.getNumFound() <= 0) return null;\n        SolrDocument doc = sdl.iterator().next();\n        Metadata md = getMetadata(doc);\n        return md;\n    }","id":53676,"modified_method":"/**\n     * check if a given document, identified by url hash as document id exists\n     * @param id the url hash and document id\n     * @return metadata if any entry in solr exists, null otherwise\n     * @throws IOException\n     */\n    @Override\n    public Metadata getMetadata(String id) throws IOException {\n        // construct raw query\n        final SolrQuery params = new SolrQuery();\n        //params.setQuery(CollectionSchema.id.getSolrFieldName() + \":\\\"\" + id + \"\\\"\");\n        String q = \"{!raw f=\" + CollectionSchema.id.getSolrFieldName() + \"}\" + id;\n        //params.setQuery(q);\n        params.setQuery(\"*:*\");\n        params.addFilterQuery(q);\n        //params.set(\"defType\", \"raw\");\n        params.setRows(1);\n        params.setStart(0);\n        params.setFacet(false);\n        params.clearSorts();\n        params.setFields(CollectionSchema.id.getSolrFieldName(), CollectionSchema.sku.getSolrFieldName(), CollectionSchema.load_date_dt.getSolrFieldName());\n        params.setIncludeScore(false);\n\n        // query the server\n        final SolrDocumentList sdl = getDocumentListByParams(params);\n        if (sdl == null || sdl.getNumFound() <= 0) return null;\n        SolrDocument doc = sdl.iterator().next();\n        Metadata md = getMetadata(doc);\n        return md;\n    }","commit_id":"5326970d6cd9455375c6536a6844b980c73d0bd4","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"/**\n     * @see org.opencms.search.CmsSearchIndex#getDocument(java.lang.String, java.lang.String)\n     */\n    @Override\n    public I_CmsSearchDocument getDocument(String fieldname, String term) {\n\n        try {\n            SolrQuery query = new SolrQuery();\n            query.setQuery(fieldname + \":\" + term);\n            QueryResponse res = m_solr.query(query);\n            if (res != null) {\n                SolrDocumentList sdl = m_solr.query(query).getResults();\n                if ((sdl.getNumFound() == 1L) && (sdl.get(0) != null)) {\n                    return new CmsSolrDocument(ClientUtils.toSolrInputDocument(sdl.get(0)));\n                }\n            }\n        } catch (Exception e) {\n            // ignore and assume that the document could not be found\n            LOG.error(e.getMessage(), e);\n        }\n        return null;\n    }","id":53677,"modified_method":"/**\n     * @see org.opencms.search.CmsSearchIndex#getDocument(java.lang.String, java.lang.String)\n     */\n    @Override\n    public I_CmsSearchDocument getDocument(String fieldname, String term) {\n\n        try {\n            SolrQuery query = new SolrQuery();\n            if (CmsSearchField.FIELD_PATH.equals(fieldname)) {\n                query.setQuery(fieldname + \":\\\"\" + term + \"\\\"\");\n            } else {\n                query.setQuery(fieldname + \":\" + term);\n            }\n            QueryResponse res = m_solr.query(query);\n            if (res != null) {\n                SolrDocumentList sdl = m_solr.query(query).getResults();\n                if ((sdl.getNumFound() == 1L) && (sdl.get(0) != null)) {\n                    return new CmsSolrDocument(ClientUtils.toSolrInputDocument(sdl.get(0)));\n                }\n            }\n        } catch (Exception e) {\n            // ignore and assume that the document could not be found\n            LOG.error(e.getMessage(), e);\n        }\n        return null;\n    }","commit_id":"dd5ae71415173d2ddcddde1095dca1999e399eee","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/** getting a list of itemGrading for a publishedItemId is a lot of work,\n   * read the code in GradingService.getItemScores()\n   * after we get the list, we are saving it in QuestionScoreBean.itemScoresMap\n   * itemScoresMap = (publishedItemId, HashMap) \n                   = (Long publishedItemId, (Long publishedItemId, Array itemGradings))\n   * itemScoresMap will be refreshed when the next QuestionScore link is click\n   */\n  private HashMap getItemScores(Long publishedId, Long itemId, String which){\n    GradingService delegate = new GradingService();\n    QuestionScoresBean questionScoresBean =\n      (QuestionScoresBean) cu.lookupBean(\"questionScores\");\n    HashMap itemScoresMap = questionScoresBean.getItemScoresMap();\n    if (itemScoresMap == null){\n      itemScoresMap = new HashMap();\n      questionScoresBean.setItemScoresMap(itemScoresMap);\n    }\n    HashMap map = (HashMap) itemScoresMap.get(itemId);\n    if (map == null){\n      map = delegate.getItemScores(publishedId, itemId, which);\n      itemScoresMap.put(itemId, map);\n    }\n    return map;\n  }","id":53678,"modified_method":"/** getting a list of itemGrading for a publishedItemId is a lot of work,\n   * read the code in GradingService.getItemScores()\n   * after we get the list, we are saving it in QuestionScoreBean.itemScoresMap\n   * itemScoresMap = (publishedItemId, HashMap) \n                   = (Long publishedItemId, (Long publishedItemId, Array itemGradings))\n   * itemScoresMap will be refreshed when the next QuestionScore link is click\n   */\n  private HashMap getItemScores(Long publishedId, Long itemId, String which, boolean isValueChange){\n    GradingService delegate = new GradingService();\n    QuestionScoresBean questionScoresBean =\n      (QuestionScoresBean) cu.lookupBean(\"questionScores\");\n    HashMap itemScoresMap = questionScoresBean.getItemScoresMap();\n    if (itemScoresMap == null || isValueChange){\n      itemScoresMap = new HashMap();\n      questionScoresBean.setItemScoresMap(itemScoresMap);\n    }\n    HashMap map = (HashMap) itemScoresMap.get(itemId);\n    if (map == null){\n      map = delegate.getItemScores(publishedId, itemId, which);\n      itemScoresMap.put(itemId, map);\n    }\n    return map;\n  }","commit_id":"56473b1916110eb0e72a1bb30bd4b2cc24fe6291","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\n   * Process a value change.\n   */\n  public void processValueChange(ValueChangeEvent event)\n  {\n    log.info(\"QuestionScore CHANGE LISTENER.\");\n    QuestionScoresBean bean = (QuestionScoresBean)\n      cu.lookupBean(\"questionScores\");\n\n    // we probably want to change the poster to be consistent\n    String publishedId = cu.lookupParam(\"publishedId\");\n\n    String selectedvalue= (String) event.getNewValue();\n    if ((selectedvalue!=null) && (!selectedvalue.equals(\"\")) ){\n      if (event.getComponent().getId().indexOf(\"sectionpicker\") >-1 )\n      {\n        bean.setSelectedSectionFilterValue(selectedvalue);   // changed section pulldown\n      }\n      else\n      {\n        bean.setAllSubmissions(selectedvalue);    // changed submission pulldown\n      }\n    }\n\n    log.info(\"Calling questionScores.\");\n    if (!questionScores(publishedId, bean, true))\n    {\n      throw new RuntimeException(\"failed to call questionScores.\");\n    }\n  }","id":53679,"modified_method":"/**\n   * Process a value change.\n   */\n  public void processValueChange(ValueChangeEvent event)\n  {\n    log.info(\"QuestionScore CHANGE LISTENER.\");\n    QuestionScoresBean bean = (QuestionScoresBean)\n      cu.lookupBean(\"questionScores\");\n\n    // we probably want to change the poster to be consistent\n    String publishedId = cu.lookupParam(\"publishedId\");\n    boolean toggleSubmissionSelection = false;\n\n    String selectedvalue= (String) event.getNewValue();\n    if ((selectedvalue!=null) && (!selectedvalue.equals(\"\")) ){\n      if (event.getComponent().getId().indexOf(\"sectionpicker\") >-1 )\n      {\n        bean.setSelectedSectionFilterValue(selectedvalue);   // changed section pulldown\n      }\n      else\n      {\n        bean.setAllSubmissions(selectedvalue);    // changed submission pulldown\n        toggleSubmissionSelection = true;\n      }\n    }\n\n    log.info(\"Calling questionScores.\");\n    if (!questionScores(publishedId, bean, toggleSubmissionSelection))\n    {\n      throw new RuntimeException(\"failed to call questionScores.\");\n    }\n  }","commit_id":"56473b1916110eb0e72a1bb30bd4b2cc24fe6291","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\n   * This will populate the QuestionScoresBean with the data associated with the\n   * particular versioned assessment based on the publishedId.\n   *\n   * @todo Some of this code will change when we move this to Hibernate persistence.\n   * @param publishedId String\n   * @param bean QuestionScoresBean\n   * @return boolean\n   */\n  public boolean questionScores(\n    String publishedId, QuestionScoresBean bean, boolean isValueChange)\n  {\n    log.debug(\"questionScores()\");\n    try\n    {\n      PublishedAssessmentService pubService  = new PublishedAssessmentService();\n      // get the PublishedAssessment based on publishedId\n      QuestionScoresBean questionBean = (QuestionScoresBean) cu.lookupBean(\"questionScores\");\n      PublishedAssessmentIfc publishedAssessment = questionBean.getPublishedAssessment();\n      if (publishedAssessment == null){\n        publishedAssessment = pubService.getPublishedAssessment(publishedId);\n        questionBean.setPublishedAssessment(publishedAssessment);\n        System.out.println(\"**** goto DB ot get publishedAssessment\");\n      }\n      //build a hashMap (publishedItemId, publishedItem)\n      HashMap publishedItemHash = pubService.preparePublishedItemHash(publishedAssessment);\n      //build a hashMap (publishedItemTextId, publishedItemText)\n      HashMap publishedItemTextHash = pubService.preparePublishedItemTextHash(publishedAssessment);\n      HashMap publishedAnswerHash = pubService.preparePublishedAnswerHash(publishedAssessment);\n\n      GradingService delegate =\tnew GradingService();\n\n      TotalScoresBean totalBean =\n        (TotalScoresBean) cu.lookupBean(\"totalScores\");\n\n      if (cu.lookupParam(\"sortBy\") != null &&\n          !cu.lookupParam(\"sortBy\").trim().equals(\"\"))\n        bean.setSortType(cu.lookupParam(\"sortBy\"));\n      String itemId = cu.lookupParam(\"itemId\");\n      if (cu.lookupParam(\"newItemId\") != null &&\n          !cu.lookupParam(\"newItemId\").trim().equals(\"\"))\n        itemId = cu.lookupParam(\"newItemId\");\n\n      String which = bean.getAllSubmissions();\n      if (which == null && totalBean.getAllSubmissions() != null)\n      {\n        // use totalscore's selection \n        which = totalBean.getAllSubmissions();\n        bean.setAllSubmissions(which);\n      }\n\n      totalBean.setSelectedSectionFilterValue(bean.getSelectedSectionFilterValue());   // set section pulldown\n      bean.setPublishedId(publishedId);\n      Date dueDate = null;\n\n      HashMap map = getItemScores(new Long(publishedId), new Long(itemId), which);\n      ArrayList allscores = new ArrayList();\n      Iterator keyiter = map.keySet().iterator();\n      while (keyiter.hasNext())\n      {\n        allscores.addAll((ArrayList) map.get(keyiter.next()));\n      }\n\n\n///\n\n      // now we need filter by sections selected\n      ArrayList scores = new ArrayList();  // filtered list\n      Map useridMap= totalBean.getUserIdMap();\n\n      if (!totalBean.getReleaseToAnonymous()) {\n        Iterator allscores_iter = allscores.iterator();\n        // get the Map of all users(keyed on userid) belong to the selected sections\n        while (allscores_iter.hasNext())\n        {\n          // AssessmentGradingData data = (AssessmentGradingData) allscores_iter.next();\n          ItemGradingData idata = (ItemGradingData) allscores_iter.next();\n          //String agentid = idata.getAssessmentGrading().getAgentId();\n          String agentid = idata.getAgentId();\n          // now we only include scores of users belong to the selected sections\n          if (useridMap.containsKey(agentid) ) {\n            scores.add(idata);\n          }\n        }\n      }\n      else {\n        // if releasedTo anonymous users then skip section filtering.\n\tscores.addAll(allscores);\n      }\n\n\n      Iterator iter = scores.iterator();\n      ArrayList agents = new ArrayList();\n\n      if (!iter.hasNext())\n      {\n        // this section has no students\n      bean.setAgents(agents);\n      bean.setTotalPeople(new Integer(bean.getAgents().size()).toString());\n      return true;\n      }\n\n      // List them by item and assessmentgradingid, so we can\n      // group answers by item and save them for update use.\n\n      HashMap scoresByItem = new HashMap();\n      while (iter.hasNext())\n      {\n        ItemGradingData idata = (ItemGradingData) iter.next();\n        ItemTextIfc pubItemText = (ItemTextIfc) publishedItemTextHash.get(idata.getPublishedItemTextId());\n        AnswerIfc pubAnswer = (AnswerIfc) publishedAnswerHash.get(idata.getPublishedAnswerId());\n\n        ArrayList temp = (ArrayList) scoresByItem.get\n          (idata.getAssessmentGradingId() + \":\" +\n            idata.getPublishedItemId());\n        if (temp == null)\n          temp = new ArrayList();\n\n        // Very small numbers, so bubblesort is fast\n        Iterator iter2 = temp.iterator();\n        ArrayList newList = new ArrayList();\n        boolean added = false;\n        while (iter2.hasNext())\n        {\n          ItemGradingData tmpData = (ItemGradingData) iter2.next();\n          ItemTextIfc tmpPublishedText = (ItemTextIfc) publishedItemTextHash.get(tmpData.getPublishedItemTextId());\n \t  AnswerIfc tmpAnswer = (AnswerIfc) publishedAnswerHash.get(tmpData.getPublishedAnswerId());\n\n          if (pubAnswer != null && tmpAnswer != null && !added &&\n              (pubItemText.getSequence().intValue() <\n               tmpPublishedText.getSequence().intValue() ||\n               (pubItemText.getSequence().intValue() ==\n                tmpPublishedText.getSequence().intValue() &&\n                pubAnswer.getSequence().intValue() <\n                tmpPublishedText.getSequence().intValue())))\n          {\n            newList.add(idata);\n            added = true;\n          }\n          newList.add(tmpData);\n        }\n        if (!added)\n          newList.add(idata);\n        scoresByItem.put(idata.getAssessmentGradingId()\n         + \":\" + idata.getPublishedItemId(), newList);\n      }\n      bean.setScoresByItem(scoresByItem);\n\n      iter = scores.iterator();\n      //log.info(\"Has this many agents: \" + scores.size());\n      if (!iter.hasNext())\n        return false;\n      Object next = iter.next();\n      //log.info(\"Next is: \" + next);\n\n      // Okay, here we get the first result set, which has a summary of\n      // information and a pointer to the graded assessment we should be\n      // displaying.  We get the graded assessment.\n      ItemGradingData data = (ItemGradingData) next;\n\n      try {\n        bean.setAnonymous(publishedAssessment.getEvaluationModel(). getAnonymousGrading().equals(EvaluationModel.ANONYMOUS_GRADING)?\"true\":\"false\");\n      } catch (Exception e) {\n        //log.info(\"No evaluation model.\");\n        bean.setAnonymous(\"false\");\n      }\n      try {\n        bean.setLateHandling(publishedAssessment.getAssessmentAccessControl().getLateHandling().toString());\n      } catch (Exception e) {\n        //log.info(\"No access control model.\");\n        bean.setLateHandling(AssessmentAccessControl.NOT_ACCEPT_LATE_SUBMISSION.toString());\n      }\n      try {\n        bean.setDueDate(publishedAssessment.getAssessmentAccessControl().getDueDate().toString());\n        dueDate = publishedAssessment.getAssessmentAccessControl().getDueDate();\n      } catch (Exception e) {\n        //log.info(\"No due date.\");\n        bean.setDueDate(new Date().toString());\n      }\n      try {\n        bean.setMaxScore(publishedAssessment.getEvaluationModel().getFixedTotalScore().toString());\n      } \n      catch (Exception e) {\n        float score = (float) 0.0;\n        Iterator iter2 = publishedAssessment.getSectionArraySorted().iterator();\n        while (iter2.hasNext())\n        {\n          SectionDataIfc sdata = (SectionDataIfc) iter2.next();\n          Iterator iter3 = sdata.getItemArraySortedForGrading().iterator();\n          while (iter3.hasNext())\n          {\n            ItemDataIfc idata = (ItemDataIfc) iter3.next();\n            if (idata.getItemId().equals(new Long(itemId)))\n              score = idata.getScore().floatValue();\n          }\n        }\n        bean.setMaxScore(new Float(score).toString());\n      }\n\n      ArrayList sections = new ArrayList();\n      iter = publishedAssessment.getSectionArraySorted().iterator();\n      int i=1;\n      while (iter.hasNext())\n      {\n        SectionDataIfc section = (SectionDataIfc) iter.next();\n        ArrayList items = new ArrayList();\n        PartData part = new PartData();\n\t\n\tpart.setPartNumber(\"\"+i);\n    \n        part.setId(section.getSectionId().toString());\n        Iterator iter2 = section.getItemArraySortedForGrading().iterator();\n        int j = 1;\n        while (iter2.hasNext())\n        {\n          ItemDataIfc item = (ItemDataIfc) iter2.next();\n          PartData partitem = new PartData();\n\t  \n          partitem.setPartNumber(\"\"+j);\n          partitem.setId(item.getItemId().toString());\n          if (totalBean.getAnsweredItems().get(item.getItemId()) != null)\n            partitem.setLinked(true);\n          else\n            partitem.setLinked(false);\n          Iterator iter3 = scores.iterator();\n          items.add(partitem);\n          j++;\n        }\n        part.setQuestionNumberList(items);\n        sections.add(part);\n        i++;\n      }\n      bean.setSections(sections);\n\n      ItemDataIfc item = (ItemDataIfc)publishedItemHash.get(data.getPublishedItemId());\n\n      if (item!=null){\n        bean.setTypeId(item.getTypeId().toString());\n        bean.setItemId(item.getItemId().toString());\n\tbean.setPartName(item.getSection().getSequence().toString()); \n        bean.setItemName(item.getSequence().toString());\n        item.setHint(\"***\"); // Keyword to not show student answer\n      }\n\n\n      ArrayList deliveryItems = new ArrayList(); // so we can use the var\n      if (item!=null)  deliveryItems.add(item);\n      bean.setDeliveryItem(deliveryItems);\n\n      if (cu.lookupParam(\"roleSelection\") != null)\n      {\n        bean.setRoleSelection(cu.lookupParam(\"roleSelection\"));\n      }\n\n      if (bean.getSortType() == null)\n      {\n        if (bean.getAnonymous().equals(\"true\"))\n        {\n          bean.setSortType(\"totalAutoScore\");\n        }\n        else\n        {\n          bean.setSortType(\"lastName\");\n        }\n      }\n\n      // recordingData encapsulates the inbeanation needed for recording.\n      // set recording agent, agent assessmentId,\n      // set course_assignment_context value\n      // set max tries (0=unlimited), and 30 seconds max length\n      String courseContext = bean.getAssessmentName() + \" total \";\n// Note this is HTTP-centric right now, we can't use in Faces\n//      AuthoringHelper authoringHelper = new AuthoringHelper();\n//      authoringHelper.getRemoteUserID() needs servlet stuff\n//      authoringHelper.getRemoteUserName() needs servlet stuff\n\n      String userId = \"\";\n      String userName = \"\";\n      RecordingData recordingData =\n        new RecordingData( userId, userName,\n        courseContext, \"0\", \"30\");\n      // set this value in the requestMap for sound recorder\n      bean.setRecordingData(recordingData);\n\n      /* Dump the grading and agent information into AgentResults */\n      //ArrayList agents = new ArrayList();\n      iter = scoresByItem.values().iterator();\n      while (iter.hasNext())\n      {\n        AgentResults results = new AgentResults();\n\n        // Get all the answers for this question to put in one grading row\n        ArrayList answerList = (ArrayList) iter.next();\n        results.setItemGradingArrayList(answerList);\n\n        Iterator iter2 = answerList.iterator();\n        while (iter2.hasNext())\n        {\n          ItemGradingData gdata = (ItemGradingData) iter2.next();\n          ItemTextIfc gdataPubItemText = (ItemTextIfc) publishedItemTextHash.get(gdata.getPublishedItemTextId());          \n\t  AnswerIfc gdataAnswer = (AnswerIfc) publishedAnswerHash.get(gdata.getPublishedAnswerId());\n\n          // This all just gets the text of the answer to display\n          String answerText = \"N/A\";\n          String rationale = \"\";\n          if (bean.getTypeId().equals(\"1\") || bean.getTypeId().equals(\"2\") ||\n              bean.getTypeId().equals(\"3\") || bean.getTypeId().equals(\"4\") ||\n              bean.getTypeId().equals(\"9\"))\n          {\n            if (gdataAnswer != null)\n              answerText = gdataAnswer.getText();\n          }\n          else\n          {\n            answerText = gdata.getAnswerText();\n          }\n\n          if (bean.getTypeId().equals(\"9\"))\n            answerText = gdataPubItemText.getSequence() + \":\" +\n              answerText;\n\n          if (bean.getTypeId().equals(\"8\"))\n            answerText = gdataAnswer.getSequence() + \":\" +\n              answerText;\n\n          if (answerText == null)\n            answerText = \"N/A\";\n          else\n          {\n            if (gdata.getRationale() != null &&\n               !gdata.getRationale().trim().equals(\"\"))\n              rationale = \"\\nRationale: \" + gdata.getRationale();\n          }\n          answerText = answerText.replaceAll(\"<.*?>\", \"\");\n          rationale = rationale.replaceAll(\"<.*?>\", \"\");\n          String fullAnswerText = answerText;  // this is the non-abbreviated answers for essay questions\n          if (answerText.length() > 35)\n            answerText = answerText.substring(0, 35) + \"...\";\n/*\n\t  // no need to shorten it \n          if (rationale.length() > 35)\n            rationale = rationale.substring(0, 35) + \"...\";\n*/\n\n          //  -- Got the answer text --\n\n          if (!answerList.get(0).equals(gdata))\n          { // We already have an agentResults for this one\n            results.setAnswer(results.getAnswer() + \"<br/>\" + answerText);\n            results.setTotalAutoScore(new Float\n              ((new Float(results.getTotalAutoScore())).floatValue() +\n               gdata.getAutoScore().floatValue()).toString());\n          }\n          else\n          {\n            results.setItemGradingId(gdata.getItemGradingId());\n            results.setAssessmentGradingId(gdata.getAssessmentGradingId());\n            results.setTotalAutoScore(gdata.getAutoScore().toString());\n            results.setComments(gdata.getComments());\n            results.setAnswer(answerText);\n            results.setFullAnswer(fullAnswerText);\n            results.setRationale(rationale);\n            results.setSubmittedDate(gdata.getSubmittedDate());\n\n            if (dueDate == null || gdata.getSubmittedDate().before(dueDate))\n              results.setIsLate(new Boolean(false));\n            else\n              results.setIsLate(new Boolean(true));\n\n            AgentFacade agent = new AgentFacade(gdata.getAgentId());\n            //log.info(\"Rachel: agentid = \" + gdata.getAgentId());\n            results.setLastName(agent.getLastName());\n            results.setFirstName(agent.getFirstName());\n            if (results.getLastName() != null &&\n                results.getLastName().length() > 0)\n              results.setLastInitial(results.getLastName().substring(0,1));\n            else if (results.getFirstName() != null &&\n                     results.getFirstName().length() > 0)\n              results.setLastInitial(results.getFirstName().substring(0,1));\n            else\n\t      results.setLastInitial(\"Anonymous\");\n            results.setIdString(agent.getIdString());\n            results.setRole(agent.getRole());\n            agents.add(results);\n          }\n        }\n      }\n\n      //log.info(\"Sort type is \" + bean.getSortType() + \".\");\n      bs = new BeanSort(agents, bean.getSortType());\n      if (\n        (bean.getSortType()).equals(\"assessmentGradingId\") ||\n        (bean.getSortType()).equals(\"totalAutoScore\") ||\n        (bean.getSortType()).equals(\"totalOverrideScore\") ||\n        (bean.getSortType()).equals(\"finalScore\"))\n      {\n        bs.toNumericSort();\n      } else {\n        bs.toStringSort();\n      }\n\n\n      bs.sort();\n      //log.info(\"Listing agents.\");\n      bean.setAgents(agents);\n      bean.setTotalPeople(new Integer(bean.getAgents().size()).toString());\n    }\n\n    catch (Exception e)\n    {\n      e.printStackTrace();\n      return false;\n    }\n\n    return true;\n  }","id":53680,"modified_method":"/**\n   * This will populate the QuestionScoresBean with the data associated with the\n   * particular versioned assessment based on the publishedId.\n   *\n   * @todo Some of this code will change when we move this to Hibernate persistence.\n   * @param publishedId String\n   * @param bean QuestionScoresBean\n   * @return boolean\n   */\n  public boolean questionScores(\n    String publishedId, QuestionScoresBean bean, boolean isValueChange)\n  {\n    log.debug(\"questionScores()\");\n    try\n    {\n      PublishedAssessmentService pubService  = new PublishedAssessmentService();\n      // get the PublishedAssessment based on publishedId\n      QuestionScoresBean questionBean = (QuestionScoresBean) cu.lookupBean(\"questionScores\");\n      PublishedAssessmentIfc publishedAssessment = questionBean.getPublishedAssessment();\n      if (publishedAssessment == null){\n        publishedAssessment = pubService.getPublishedAssessment(publishedId);\n        questionBean.setPublishedAssessment(publishedAssessment);\n        System.out.println(\"**** goto DB ot get publishedAssessment\");\n      }\n      //build a hashMap (publishedItemId, publishedItem)\n      HashMap publishedItemHash = pubService.preparePublishedItemHash(publishedAssessment);\n      //build a hashMap (publishedItemTextId, publishedItemText)\n      HashMap publishedItemTextHash = pubService.preparePublishedItemTextHash(publishedAssessment);\n      HashMap publishedAnswerHash = pubService.preparePublishedAnswerHash(publishedAssessment);\n\n      GradingService delegate =\tnew GradingService();\n\n      TotalScoresBean totalBean =\n        (TotalScoresBean) cu.lookupBean(\"totalScores\");\n\n      if (cu.lookupParam(\"sortBy\") != null &&\n          !cu.lookupParam(\"sortBy\").trim().equals(\"\"))\n        bean.setSortType(cu.lookupParam(\"sortBy\"));\n      String itemId = cu.lookupParam(\"itemId\");\n      if (cu.lookupParam(\"newItemId\") != null &&\n          !cu.lookupParam(\"newItemId\").trim().equals(\"\"))\n        itemId = cu.lookupParam(\"newItemId\");\n\n      String which = bean.getAllSubmissions();\n      if (which == null && totalBean.getAllSubmissions() != null)\n      {\n        // use totalscore's selection \n        which = totalBean.getAllSubmissions();\n        bean.setAllSubmissions(which);\n      }\n\n      totalBean.setSelectedSectionFilterValue(bean.getSelectedSectionFilterValue());   // set section pulldown\n      bean.setPublishedId(publishedId);\n      Date dueDate = null;\n\n      HashMap map = getItemScores(new Long(publishedId), new Long(itemId), which, isValueChange);\n      ArrayList allscores = new ArrayList();\n      Iterator keyiter = map.keySet().iterator();\n      while (keyiter.hasNext())\n      {\n        allscores.addAll((ArrayList) map.get(keyiter.next()));\n      }\n\n\n///\n\n      // now we need filter by sections selected\n      ArrayList scores = new ArrayList();  // filtered list\n      Map useridMap= totalBean.getUserIdMap();\n\n      if (!totalBean.getReleaseToAnonymous()) {\n        Iterator allscores_iter = allscores.iterator();\n        // get the Map of all users(keyed on userid) belong to the selected sections\n        while (allscores_iter.hasNext())\n        {\n          // AssessmentGradingData data = (AssessmentGradingData) allscores_iter.next();\n          ItemGradingData idata = (ItemGradingData) allscores_iter.next();\n          //String agentid = idata.getAssessmentGrading().getAgentId();\n          String agentid = idata.getAgentId();\n          // now we only include scores of users belong to the selected sections\n          if (useridMap.containsKey(agentid) ) {\n            scores.add(idata);\n          }\n        }\n      }\n      else {\n        // if releasedTo anonymous users then skip section filtering.\n\tscores.addAll(allscores);\n      }\n\n\n      Iterator iter = scores.iterator();\n      ArrayList agents = new ArrayList();\n\n      if (!iter.hasNext())\n      {\n        // this section has no students\n      bean.setAgents(agents);\n      bean.setTotalPeople(new Integer(bean.getAgents().size()).toString());\n      return true;\n      }\n\n      // List them by item and assessmentgradingid, so we can\n      // group answers by item and save them for update use.\n\n      HashMap scoresByItem = new HashMap();\n      while (iter.hasNext())\n      {\n        ItemGradingData idata = (ItemGradingData) iter.next();\n        ItemTextIfc pubItemText = (ItemTextIfc) publishedItemTextHash.get(idata.getPublishedItemTextId());\n        AnswerIfc pubAnswer = (AnswerIfc) publishedAnswerHash.get(idata.getPublishedAnswerId());\n\n        ArrayList temp = (ArrayList) scoresByItem.get\n          (idata.getAssessmentGradingId() + \":\" +\n            idata.getPublishedItemId());\n        if (temp == null)\n          temp = new ArrayList();\n\n        // Very small numbers, so bubblesort is fast\n        Iterator iter2 = temp.iterator();\n        ArrayList newList = new ArrayList();\n        boolean added = false;\n        while (iter2.hasNext())\n        {\n          ItemGradingData tmpData = (ItemGradingData) iter2.next();\n          ItemTextIfc tmpPublishedText = (ItemTextIfc) publishedItemTextHash.get(tmpData.getPublishedItemTextId());\n \t  AnswerIfc tmpAnswer = (AnswerIfc) publishedAnswerHash.get(tmpData.getPublishedAnswerId());\n\n          if (pubAnswer != null && tmpAnswer != null && !added &&\n              (pubItemText.getSequence().intValue() <\n               tmpPublishedText.getSequence().intValue() ||\n               (pubItemText.getSequence().intValue() ==\n                tmpPublishedText.getSequence().intValue() &&\n                pubAnswer.getSequence().intValue() <\n                tmpPublishedText.getSequence().intValue())))\n          {\n            newList.add(idata);\n            added = true;\n          }\n          newList.add(tmpData);\n        }\n        if (!added)\n          newList.add(idata);\n        scoresByItem.put(idata.getAssessmentGradingId()\n         + \":\" + idata.getPublishedItemId(), newList);\n      }\n      bean.setScoresByItem(scoresByItem);\n\n      iter = scores.iterator();\n      //log.info(\"Has this many agents: \" + scores.size());\n      if (!iter.hasNext())\n        return false;\n      Object next = iter.next();\n      //log.info(\"Next is: \" + next);\n\n      // Okay, here we get the first result set, which has a summary of\n      // information and a pointer to the graded assessment we should be\n      // displaying.  We get the graded assessment.\n      ItemGradingData data = (ItemGradingData) next;\n\n      try {\n        bean.setAnonymous(publishedAssessment.getEvaluationModel(). getAnonymousGrading().equals(EvaluationModel.ANONYMOUS_GRADING)?\"true\":\"false\");\n      } catch (Exception e) {\n        //log.info(\"No evaluation model.\");\n        bean.setAnonymous(\"false\");\n      }\n      try {\n        bean.setLateHandling(publishedAssessment.getAssessmentAccessControl().getLateHandling().toString());\n      } catch (Exception e) {\n        //log.info(\"No access control model.\");\n        bean.setLateHandling(AssessmentAccessControl.NOT_ACCEPT_LATE_SUBMISSION.toString());\n      }\n      try {\n        bean.setDueDate(publishedAssessment.getAssessmentAccessControl().getDueDate().toString());\n        dueDate = publishedAssessment.getAssessmentAccessControl().getDueDate();\n      } catch (Exception e) {\n        //log.info(\"No due date.\");\n        bean.setDueDate(new Date().toString());\n      }\n      try {\n        bean.setMaxScore(publishedAssessment.getEvaluationModel().getFixedTotalScore().toString());\n      } \n      catch (Exception e) {\n        float score = (float) 0.0;\n        Iterator iter2 = publishedAssessment.getSectionArraySorted().iterator();\n        while (iter2.hasNext())\n        {\n          SectionDataIfc sdata = (SectionDataIfc) iter2.next();\n          Iterator iter3 = sdata.getItemArraySortedForGrading().iterator();\n          while (iter3.hasNext())\n          {\n            ItemDataIfc idata = (ItemDataIfc) iter3.next();\n            if (idata.getItemId().equals(new Long(itemId)))\n              score = idata.getScore().floatValue();\n          }\n        }\n        bean.setMaxScore(new Float(score).toString());\n      }\n\n      ArrayList sections = new ArrayList();\n      iter = publishedAssessment.getSectionArraySorted().iterator();\n      int i=1;\n      while (iter.hasNext())\n      {\n        SectionDataIfc section = (SectionDataIfc) iter.next();\n        ArrayList items = new ArrayList();\n        PartData part = new PartData();\n\t\n\tpart.setPartNumber(\"\"+i);\n    \n        part.setId(section.getSectionId().toString());\n        Iterator iter2 = section.getItemArraySortedForGrading().iterator();\n        int j = 1;\n        while (iter2.hasNext())\n        {\n          ItemDataIfc item = (ItemDataIfc) iter2.next();\n          PartData partitem = new PartData();\n\t  \n          partitem.setPartNumber(\"\"+j);\n          partitem.setId(item.getItemId().toString());\n          if (totalBean.getAnsweredItems().get(item.getItemId()) != null)\n            partitem.setLinked(true);\n          else\n            partitem.setLinked(false);\n          Iterator iter3 = scores.iterator();\n          items.add(partitem);\n          j++;\n        }\n        part.setQuestionNumberList(items);\n        sections.add(part);\n        i++;\n      }\n      bean.setSections(sections);\n\n      ItemDataIfc item = (ItemDataIfc)publishedItemHash.get(data.getPublishedItemId());\n\n      if (item!=null){\n        bean.setTypeId(item.getTypeId().toString());\n        bean.setItemId(item.getItemId().toString());\n\tbean.setPartName(item.getSection().getSequence().toString()); \n        bean.setItemName(item.getSequence().toString());\n        item.setHint(\"***\"); // Keyword to not show student answer\n      }\n\n\n      ArrayList deliveryItems = new ArrayList(); // so we can use the var\n      if (item!=null)  deliveryItems.add(item);\n      bean.setDeliveryItem(deliveryItems);\n\n      if (cu.lookupParam(\"roleSelection\") != null)\n      {\n        bean.setRoleSelection(cu.lookupParam(\"roleSelection\"));\n      }\n\n      if (bean.getSortType() == null)\n      {\n        if (bean.getAnonymous().equals(\"true\"))\n        {\n          bean.setSortType(\"totalAutoScore\");\n        }\n        else\n        {\n          bean.setSortType(\"lastName\");\n        }\n      }\n\n      // recordingData encapsulates the inbeanation needed for recording.\n      // set recording agent, agent assessmentId,\n      // set course_assignment_context value\n      // set max tries (0=unlimited), and 30 seconds max length\n      String courseContext = bean.getAssessmentName() + \" total \";\n// Note this is HTTP-centric right now, we can't use in Faces\n//      AuthoringHelper authoringHelper = new AuthoringHelper();\n//      authoringHelper.getRemoteUserID() needs servlet stuff\n//      authoringHelper.getRemoteUserName() needs servlet stuff\n\n      String userId = \"\";\n      String userName = \"\";\n      RecordingData recordingData =\n        new RecordingData( userId, userName,\n        courseContext, \"0\", \"30\");\n      // set this value in the requestMap for sound recorder\n      bean.setRecordingData(recordingData);\n\n      /* Dump the grading and agent information into AgentResults */\n      //ArrayList agents = new ArrayList();\n      iter = scoresByItem.values().iterator();\n      while (iter.hasNext())\n      {\n        AgentResults results = new AgentResults();\n\n        // Get all the answers for this question to put in one grading row\n        ArrayList answerList = (ArrayList) iter.next();\n        results.setItemGradingArrayList(answerList);\n\n        Iterator iter2 = answerList.iterator();\n        while (iter2.hasNext())\n        {\n          ItemGradingData gdata = (ItemGradingData) iter2.next();\n          ItemTextIfc gdataPubItemText = (ItemTextIfc) publishedItemTextHash.get(gdata.getPublishedItemTextId());          \n\t  AnswerIfc gdataAnswer = (AnswerIfc) publishedAnswerHash.get(gdata.getPublishedAnswerId());\n\n          // This all just gets the text of the answer to display\n          String answerText = \"N/A\";\n          String rationale = \"\";\n          String fullAnswerText = \"N/A\";\n          if (bean.getTypeId().equals(\"1\") || bean.getTypeId().equals(\"2\") ||\n              bean.getTypeId().equals(\"3\") || bean.getTypeId().equals(\"4\") ||\n              bean.getTypeId().equals(\"9\"))\n          {\n            if (gdataAnswer != null)\n              answerText = gdataAnswer.getText();\n          }\n          else\n          {\n            answerText = gdata.getAnswerText();\n          }\n\n          if (bean.getTypeId().equals(\"9\"))\n            answerText = gdataPubItemText.getSequence() + \":\" +\n              answerText;\n\n          if (bean.getTypeId().equals(\"8\"))\n            answerText = gdataAnswer.getSequence() + \":\" +\n              answerText;\n\n          if (answerText == null)\n            answerText = \"N/A\";\n          else\n          {\n            if (gdata.getRationale() != null &&\n               !gdata.getRationale().trim().equals(\"\"))\n              rationale = \"\\nRationale: \" + gdata.getRationale();\n          }\n          answerText = answerText.replaceAll(\"<.*?>\", \"\");\n          rationale = rationale.replaceAll(\"<.*?>\", \"\");\n          fullAnswerText = answerText;  // this is the non-abbreviated answers for essay questions\n          if (answerText.length() > 35)\n            answerText = answerText.substring(0, 35) + \"...\";\n/*\n\t  // no need to shorten it \n          if (rationale.length() > 35)\n            rationale = rationale.substring(0, 35) + \"...\";\n*/\n\n          //  -- Got the answer text --\n\n          if (!answerList.get(0).equals(gdata))\n          { // We already have an agentResults for this one\n            results.setAnswer(results.getAnswer() + \"<br/>\" + answerText);\n            results.setTotalAutoScore(new Float\n              ((new Float(results.getTotalAutoScore())).floatValue() +\n               gdata.getAutoScore().floatValue()).toString());\n          }\n          else\n          {\n            results.setItemGradingId(gdata.getItemGradingId());\n            results.setAssessmentGradingId(gdata.getAssessmentGradingId());\n            if (gdata.getAutoScore() != null) {\n              // for example, if an assessment has one fileupload question, the autoscore = null\n              results.setTotalAutoScore(gdata.getAutoScore().toString());\n            }\n\t    else {\n              results.setTotalAutoScore(new Float(0).toString());\n            }\n            results.setComments(gdata.getComments());\n            results.setAnswer(answerText);\n            results.setFullAnswer(fullAnswerText);\n            results.setRationale(rationale);\n            results.setSubmittedDate(gdata.getSubmittedDate());\n\n            if (dueDate == null || gdata.getSubmittedDate().before(dueDate))\n              results.setIsLate(new Boolean(false));\n            else\n              results.setIsLate(new Boolean(true));\n\n            AgentFacade agent = new AgentFacade(gdata.getAgentId());\n            //log.info(\"Rachel: agentid = \" + gdata.getAgentId());\n            results.setLastName(agent.getLastName());\n            results.setFirstName(agent.getFirstName());\n            if (results.getLastName() != null &&\n                results.getLastName().length() > 0)\n              results.setLastInitial(results.getLastName().substring(0,1));\n            else if (results.getFirstName() != null &&\n                     results.getFirstName().length() > 0)\n              results.setLastInitial(results.getFirstName().substring(0,1));\n            else\n\t      results.setLastInitial(\"Anonymous\");\n            results.setIdString(agent.getIdString());\n            results.setRole(agent.getRole());\n            agents.add(results);\n          }\n        }\n      }\n\n      //log.info(\"Sort type is \" + bean.getSortType() + \".\");\n      bs = new BeanSort(agents, bean.getSortType());\n      if (\n        (bean.getSortType()).equals(\"assessmentGradingId\") ||\n        (bean.getSortType()).equals(\"totalAutoScore\") ||\n        (bean.getSortType()).equals(\"totalOverrideScore\") ||\n        (bean.getSortType()).equals(\"finalScore\"))\n      {\n        bs.toNumericSort();\n      } else {\n        bs.toStringSort();\n      }\n\n\n      bs.sort();\n      //log.info(\"Listing agents.\");\n      bean.setAgents(agents);\n      bean.setTotalPeople(new Integer(bean.getAgents().size()).toString());\n    }\n\n    catch (Exception e)\n    {\n      e.printStackTrace();\n      return false;\n    }\n\n    return true;\n  }","commit_id":"56473b1916110eb0e72a1bb30bd4b2cc24fe6291","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public void prepareAgentResult(PublishedAssessmentData p, Iterator iter, ArrayList agents, Map userRoles){\n    GradingService gradingService = new GradingService();\n    while (iter.hasNext())\n    {\n      AgentResults results = new AgentResults();\n      AssessmentGradingData gdata = (AssessmentGradingData) iter.next();\n      gdata.setItemGradingSet(gradingService.getItemGradingSet(gdata.getAssessmentGradingId().toString()));\n      try{\n        BeanUtils.copyProperties(results, gdata);\n      }\n      catch(Exception e){\n        log.warn(e.getMessage());\n      }\n\n      results.setAssessmentGradingId(gdata.getAssessmentGradingId());\n      results.setTotalAutoScore(gdata.getTotalAutoScore().toString());\n      results.setTotalOverrideScore(gdata.getTotalOverrideScore().toString());\n      results.setFinalScore(gdata.getFinalScore().toString());\n      results.setComments(gdata.getComments());\n\n      int graded=0;\n      Iterator i3 = gdata.getItemGradingSet().iterator();\n      while (i3.hasNext())\n      {\n        ItemGradingData igd = (ItemGradingData) i3.next();\n        if (igd.getAutoScore() != null)\n          graded++;\n      }\n        \n      Date dueDate = null;\n      PublishedAccessControl ac = (PublishedAccessControl) p.getAssessmentAccessControl();\n      if (ac!=null)\n        dueDate = ac.getDueDate();\n      if (dueDate == null || gdata.getSubmittedDate().before(dueDate)) {\n        results.setIsLate(new Boolean(false));\n        if (gdata.getItemGradingSet().size()==graded)\n          results.setStatus(new Integer(2));\n        else\n          results.setStatus(new Integer(3));\n      }\n      else {\n        results.setIsLate(new Boolean(true));\n        results.setStatus(new Integer(4));\n      }\n      AgentFacade agent = new AgentFacade(gdata.getAgentId());\n      //log.info(\"Rachel: agentid = \" + gdata.getAgentId());\n      results.setLastName(agent.getLastName());\n      results.setFirstName(agent.getFirstName());\n      if (results.getLastName() != null &&\n        results.getLastName().length() > 0)\n        results.setLastInitial(results.getLastName().substring(0,1));\n      else if (results.getFirstName() != null &&\n               results.getFirstName().length() > 0)\n             results.setLastInitial(results.getFirstName().substring(0,1));\n      else\n        results.setLastInitial(\"Anonymous\");\n      results.setIdString(agent.getIdString());\n      results.setRole((String)userRoles.get(gdata.getAgentId()));\n      agents.add(results);\n    }\n  }","id":53681,"modified_method":"public void prepareAgentResult(PublishedAssessmentData p, Iterator iter, ArrayList agents, Map userRoles){\n    GradingService gradingService = new GradingService();\n    while (iter.hasNext())\n    {\n      AgentResults results = new AgentResults();\n      AssessmentGradingData gdata = (AssessmentGradingData) iter.next();\n      gdata.setItemGradingSet(gradingService.getItemGradingSet(gdata.getAssessmentGradingId().toString()));\n      try{\n        BeanUtils.copyProperties(results, gdata);\n      }\n      catch(Exception e){\n        log.warn(e.getMessage());\n      }\n\n      results.setAssessmentGradingId(gdata.getAssessmentGradingId());\n      if(gdata.getTotalAutoScore() != null)\n        results.setTotalAutoScore(gdata.getTotalAutoScore().toString());\n      else\n        results.setTotalAutoScore(\"0.0\");\n      results.setTotalOverrideScore(gdata.getTotalOverrideScore().toString());\n      if(gdata.getFinalScore() != null)\n        results.setFinalScore(gdata.getFinalScore().toString());\n      else\n        results.setFinalScore(\"0.0\");\n      results.setComments(gdata.getComments());\n\n      int graded=0;\n      Iterator i3 = gdata.getItemGradingSet().iterator();\n      while (i3.hasNext())\n      {\n        ItemGradingData igd = (ItemGradingData) i3.next();\n        if (igd.getAutoScore() != null)\n          graded++;\n      }\n        \n      Date dueDate = null;\n      PublishedAccessControl ac = (PublishedAccessControl) p.getAssessmentAccessControl();\n      if (ac!=null)\n        dueDate = ac.getDueDate();\n      if (dueDate == null || gdata.getSubmittedDate().before(dueDate)) {\n        results.setIsLate(new Boolean(false));\n        if (gdata.getItemGradingSet().size()==graded)\n          results.setStatus(new Integer(2));\n        else\n          results.setStatus(new Integer(3));\n      }\n      else {\n        results.setIsLate(new Boolean(true));\n        results.setStatus(new Integer(4));\n      }\n      AgentFacade agent = new AgentFacade(gdata.getAgentId());\n      //log.info(\"Rachel: agentid = \" + gdata.getAgentId());\n      results.setLastName(agent.getLastName());\n      results.setFirstName(agent.getFirstName());\n      if (results.getLastName() != null &&\n        results.getLastName().length() > 0)\n        results.setLastInitial(results.getLastName().substring(0,1));\n      else if (results.getFirstName() != null &&\n               results.getFirstName().length() > 0)\n             results.setLastInitial(results.getFirstName().substring(0,1));\n      else\n        results.setLastInitial(\"Anonymous\");\n      results.setIdString(agent.getIdString());\n      results.setRole((String)userRoles.get(gdata.getAgentId()));\n      agents.add(results);\n    }\n  }","commit_id":"665c5a8f4038eed3045812abe688ca64b118376c","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public void prepareNotSubmittedAgentResult(Iterator notsubmitted_iter,\n                                             ArrayList agents, Map userRoles){\n\tlog.debug(\"TotalScoreListener: prepareNotSubmittedAgentResult starts\");\n    while (notsubmitted_iter.hasNext()){\n      String studentid = (String) notsubmitted_iter.next();\n      AgentResults results = new AgentResults();\n      AgentFacade agent = new AgentFacade(studentid);\n      results.setLastName(agent.getLastName());\n      results.setFirstName(agent.getFirstName());\n      results.setEmail(agent.getEmail());\n      if (results.getLastName() != null &&\n        results.getLastName().length() > 0)\n      {\n        results.setLastInitial(results.getLastName().substring(0,1));\n      }\n      else if (results.getFirstName() != null &&\n               results.getFirstName().length() > 0)\n      {\n        results.setLastInitial(results.getFirstName().substring(0,1));\n      }\n      else\n      {\n        results.setLastInitial(\"Anonymous\");\n      }\n      //results.setIdString(agent.getEidString());\n      results.setIdString(agent.getIdString());\n      results.setAgentEid(agent.getEidString());\n      results.setRole((String)userRoles.get(studentid));\n      // use -1 to indicate this is an unsubmitted agent\n      results.setAssessmentGradingId(Long.valueOf(-1));\n      results.setTotalAutoScore(\"0\");\n      results.setTotalOverrideScore(\"-\");\n      results.setSubmittedDate(null);\n      results.setFinalScore(\"-\");\n      results.setComments(\"\");\n      results.setStatus(AssessmentGradingIfc.NO_SUBMISSION);  //  no submission\n      agents.add(results);\n    }\n  }","id":53682,"modified_method":"public void prepareNotSubmittedAgentResult(Iterator notsubmitted_iter,\n                                             ArrayList agents, Map userRoles){\n\tlog.debug(\"TotalScoreListener: prepareNotSubmittedAgentResult starts\");\n    while (notsubmitted_iter.hasNext()){\n      String studentid = (String) notsubmitted_iter.next();\n      AgentResults results = new AgentResults();\n      AgentFacade agent = new AgentFacade(studentid);\n      results.setLastName(agent.getLastName());\n      results.setFirstName(agent.getFirstName());\n      results.setEmail(agent.getEmail());\n      if (results.getLastName() != null &&\n        results.getLastName().length() > 0)\n      {\n        results.setLastInitial(results.getLastName().substring(0,1));\n      }\n      else if (results.getFirstName() != null &&\n               results.getFirstName().length() > 0)\n      {\n        results.setLastInitial(results.getFirstName().substring(0,1));\n      }\n      else\n      {\n        results.setLastInitial(\"Anonymous\");\n      }\n      //results.setIdString(agent.getEidString());\n      results.setIdString(agent.getIdString());\n      results.setAgentEid(agent.getEidString());\n      results.setRole((String)userRoles.get(studentid));\n      // use -1 to indicate this is an unsubmitted agent\n      results.setAssessmentGradingId(Long.valueOf(-1));\n      results.setTotalAutoScore(\"-\");\n      results.setTotalOverrideScore(\"-\");\n      results.setSubmittedDate(null);\n      results.setFinalScore(\"-\");\n      results.setComments(\"\");\n      results.setStatus(AssessmentGradingIfc.NO_SUBMISSION);  //  no submission\n      agents.add(results);\n    }\n  }","commit_id":"46f382c7da17113257e43403aaa7377779dcbdea","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public void prepareAgentResult(PublishedAssessmentData p, Iterator iter, ArrayList agents, Map userRoles){\n\tGradingService gradingService = new GradingService();\n\tTotalScoresBean bean = (TotalScoresBean) ContextUtil.lookupBean(\"totalScores\");\n    while (iter.hasNext())\n    {\n      AgentResults results = new AgentResults();\n      AssessmentGradingData gdata = (AssessmentGradingData) iter.next();\n      \n      // no need to initialize itemSet 'cos we don't need to use it in totalScoresPage. So I am\n      // stuffing it with an empty HashSet - daisyf\n      gdata.setItemGradingSet(new HashSet());\n      //gdata.setItemGradingSet(gradingService.getItemGradingSet(gdata.getAssessmentGradingId().toString()));\n      try{\n        BeanUtils.copyProperties(results, gdata);\n      }\n      catch(Exception e){\n        log.warn(e.getMessage());\n      }\n\n      results.setAssessmentGradingId(gdata.getAssessmentGradingId());\n      if(gdata.getTotalAutoScore() != null)\n        results.setTotalAutoScore(gdata.getTotalAutoScore().toString());\n      else\n        results.setTotalAutoScore(\"0.0\");\n\n      if(gdata.getTotalOverrideScore() != null)\n        results.setTotalOverrideScore(gdata.getTotalOverrideScore().toString());\n      else\n        results.setTotalOverrideScore(\"0.0\");\n\n      if(gdata.getFinalScore() != null) {\n        results.setFinalScore(gdata.getFinalScore().toString());\n        results.setScoreSummation(gdata.getFinalScore());\n        results.setSubmissionCount(1);\n      }\n      else\n        results.setFinalScore(\"0.0\");      \n      \n      if(gdata.getTimeElapsed() != null)\n        results.setTimeElapsed(gdata.getTimeElapsed());\n      else\n        results.setTimeElapsed(new Integer(0));      \n      \n      results.setComments(FormattedText.convertFormattedTextToPlaintext(gdata.getComments()));\n      \n      Date dueDate = null;\n      PublishedAccessControl ac = (PublishedAccessControl) p.getAssessmentAccessControl();\n      if (ac!=null)\n        dueDate = ac.getDueDate();\n      if (dueDate == null || gdata.getSubmittedDate() == null || gdata.getSubmittedDate().before(dueDate)) {   \n        results.setIsLate(Boolean.FALSE);\n      }\n      else {\n        results.setIsLate(Boolean.TRUE);\n        // The mock up has been updated. For a late submission, the \"LATE\" will be displayed\n        // under Submission Date column instead of Status column. Therefore, we will not treat\n        // LATE_SUBMISSION as a status. Comment out the following line for this reason.\n        //results.setStatus(AssessmentGradingIfc.LATE_SUBMISSION);\n      }\n      \n      if (gdata.getIsAutoSubmitted() != null && gdata.getIsAutoSubmitted().equals(Boolean.TRUE)) {\n    \t  results.setIsAutoSubmitted(true);\n      }\n      else {\n    \t  results.setIsAutoSubmitted(false);\n      }\n      \n      // For assessments accept late submission, if \n\t  // 1. student starts taking it after the due date\n\t  // 2. the assessment is submitted by auto-submit (not student)\n\t  // we want to display LATE instead of AUTO-SUBMIT on the total scores page\n\t  // That's why we set this info here\n\t  if (dueDate != null && gdata.getAttemptDate() != null && gdata.getAttemptDate().after(dueDate)) {\n\t\t  results.setIsAttemptDateAfterDueDate(true);\n\t  }\n\t  else {\n\t\t  results.setIsAttemptDateAfterDueDate(false);\n\t  }\n\t  \n      AgentFacade agent = new AgentFacade(gdata.getAgentId());\n      results.setLastName(agent.getLastName());\n      results.setFirstName(agent.getFirstName());\n      results.setEmail(agent.getEmail());\n      if (results.getLastName() != null &&\n    \t\t  results.getLastName().length() > 0)\n    \t  results.setLastInitial(results.getLastName().substring(0,1));\n      else if (results.getFirstName() != null &&\n    \t\t  results.getFirstName().length() > 0)\n    \t  results.setLastInitial(results.getFirstName().substring(0,1));\n      else\n    \t  results.setLastInitial(\"Anonymous\");\n      results.setIdString(agent.getIdString());\n      results.setAgentEid(agent.getEidString());\n      log.debug(\"testing agent getEid agent.getFirstname= \" + agent.getFirstName());\n      log.debug(\"testing agent getEid agent.getid= \" + agent.getIdString());\n      log.debug(\"testing agent getEid agent.geteid = \" + agent.getEidString());\n      results.setRole((String)userRoles.get(gdata.getAgentId()));\n\n\n      if(bean.getAllSubmissions().equals(\"4\")&& bean.getScoringOption().equals(\"4\")&&agents.size()>0){\n    \t  ListIterator<AgentResults> it= agents.listIterator();\n    \t  boolean updated=false;\n    \t  while ( it.hasNext() ){\n    \t\t  AgentResults ar=(AgentResults)it.next();\n    \t\t  if(ar.getAgentId().equals(results.getAgentId())){\n    \t\t\t  agents.remove(it.previousIndex());\n    \t\t\t  ar.setSubmissionCount((ar.getSubmissionCount())+1);\n    \t\t\t  ar.setScoreSummation(ar.getScoreSummation()+ gdata.getFinalScore());\n    \t\t\t  ar.setAssessmentGradingId(results.getAssessmentGradingId());\n    \t\t\t  agents.add(ar);\n    \t\t\t  updated=true;\n    \t\t  }\n    \t  }//end of while loop\n    \t  if(!updated)\n    \t\t  agents.add(results);\n      }\n      else {\n    \t  agents.add(results);\n      }\n    }\n\n    if(bean.getAllSubmissions().equals(\"4\")&& bean.getScoringOption().equals(\"4\")&&agents.size()>0){\n    \tIterator it=agents.iterator();\n    \twhile(it.hasNext()){\n    \t\tAgentResults ar=(AgentResults)it.next();\n    \t\tFloat averageScore=ar.getScoreSummation()/ar.getSubmissionCount();\n    \t\tar.setFinalScore(averageScore.toString());\n    \t\tar.setComments(null);\n    \t\tar.setSubmittedDate(new Date());\n    \t\tar.setStatus(null);\n    \t\tar.setItemGradingSet(null);\n\n    \t}\n    }\n  }","id":53683,"modified_method":"public void prepareAgentResult(PublishedAssessmentData p, Iterator iter, ArrayList agents, Map userRoles){\n\tGradingService gradingService = new GradingService();\n\tTotalScoresBean bean = (TotalScoresBean) ContextUtil.lookupBean(\"totalScores\");\n    while (iter.hasNext())\n    {\n      AgentResults results = new AgentResults();\n      AssessmentGradingData gdata = (AssessmentGradingData) iter.next();\n      \n      // no need to initialize itemSet 'cos we don't need to use it in totalScoresPage. So I am\n      // stuffing it with an empty HashSet - daisyf\n      gdata.setItemGradingSet(new HashSet());\n      //gdata.setItemGradingSet(gradingService.getItemGradingSet(gdata.getAssessmentGradingId().toString()));\n      try{\n        BeanUtils.copyProperties(results, gdata);\n      }\n      catch(Exception e){\n        log.warn(e.getMessage());\n      }\n\n      results.setAssessmentGradingId(gdata.getAssessmentGradingId());\n      if(gdata.getTotalAutoScore() != null) {\n    \t  if (gdata.getForGrade()) {\n    \t\t  results.setTotalAutoScore(gdata.getTotalAutoScore().toString());\n    \t  }\n    \t  else {\n    \t\t  results.setTotalAutoScore(\"-\");\n    \t  }\n      }\n      else\n        results.setTotalAutoScore(\"0.0\");\n\n      if(gdata.getTotalOverrideScore() != null)\n        results.setTotalOverrideScore(gdata.getTotalOverrideScore().toString());\n      else\n        results.setTotalOverrideScore(\"0.0\");\n\n      if(gdata.getFinalScore() != null) {\n        results.setFinalScore(gdata.getFinalScore().toString());\n        results.setScoreSummation(gdata.getFinalScore());\n        results.setSubmissionCount(1);\n      }\n      else\n        results.setFinalScore(\"0.0\");      \n      \n      if(gdata.getTimeElapsed() != null)\n        results.setTimeElapsed(gdata.getTimeElapsed());\n      else\n        results.setTimeElapsed(new Integer(0));      \n      \n      results.setComments(FormattedText.convertFormattedTextToPlaintext(gdata.getComments()));\n      \n      Date dueDate = null;\n      PublishedAccessControl ac = (PublishedAccessControl) p.getAssessmentAccessControl();\n      if (ac!=null)\n        dueDate = ac.getDueDate();\n      if (dueDate == null || gdata.getSubmittedDate() == null || gdata.getSubmittedDate().before(dueDate)) {   \n        results.setIsLate(Boolean.FALSE);\n      }\n      else {\n        results.setIsLate(Boolean.TRUE);\n        // The mock up has been updated. For a late submission, the \"LATE\" will be displayed\n        // under Submission Date column instead of Status column. Therefore, we will not treat\n        // LATE_SUBMISSION as a status. Comment out the following line for this reason.\n        //results.setStatus(AssessmentGradingIfc.LATE_SUBMISSION);\n      }\n      \n      if (gdata.getIsAutoSubmitted() != null && gdata.getIsAutoSubmitted().equals(Boolean.TRUE)) {\n    \t  results.setIsAutoSubmitted(true);\n      }\n      else {\n    \t  results.setIsAutoSubmitted(false);\n      }\n      \n      // For assessments accept late submission, if \n\t  // 1. student starts taking it after the due date\n\t  // 2. the assessment is submitted by auto-submit (not student)\n\t  // we want to display LATE instead of AUTO-SUBMIT on the total scores page\n\t  // That's why we set this info here\n\t  if (dueDate != null && gdata.getAttemptDate() != null && gdata.getAttemptDate().after(dueDate)) {\n\t\t  results.setIsAttemptDateAfterDueDate(true);\n\t  }\n\t  else {\n\t\t  results.setIsAttemptDateAfterDueDate(false);\n\t  }\n\t  \n      AgentFacade agent = new AgentFacade(gdata.getAgentId());\n      results.setLastName(agent.getLastName());\n      results.setFirstName(agent.getFirstName());\n      results.setEmail(agent.getEmail());\n      if (results.getLastName() != null &&\n    \t\t  results.getLastName().length() > 0)\n    \t  results.setLastInitial(results.getLastName().substring(0,1));\n      else if (results.getFirstName() != null &&\n    \t\t  results.getFirstName().length() > 0)\n    \t  results.setLastInitial(results.getFirstName().substring(0,1));\n      else\n    \t  results.setLastInitial(\"Anonymous\");\n      results.setIdString(agent.getIdString());\n      results.setAgentEid(agent.getEidString());\n      log.debug(\"testing agent getEid agent.getFirstname= \" + agent.getFirstName());\n      log.debug(\"testing agent getEid agent.getid= \" + agent.getIdString());\n      log.debug(\"testing agent getEid agent.geteid = \" + agent.getEidString());\n      results.setRole((String)userRoles.get(gdata.getAgentId()));\n\n\n      if(bean.getAllSubmissions().equals(\"4\")&& bean.getScoringOption().equals(\"4\")&&agents.size()>0){\n    \t  ListIterator<AgentResults> it= agents.listIterator();\n    \t  boolean updated=false;\n    \t  while ( it.hasNext() ){\n    \t\t  AgentResults ar=(AgentResults)it.next();\n    \t\t  if(ar.getAgentId().equals(results.getAgentId())){\n    \t\t\t  agents.remove(it.previousIndex());\n    \t\t\t  ar.setSubmissionCount((ar.getSubmissionCount())+1);\n    \t\t\t  ar.setScoreSummation(ar.getScoreSummation()+ gdata.getFinalScore());\n    \t\t\t  ar.setAssessmentGradingId(results.getAssessmentGradingId());\n    \t\t\t  agents.add(ar);\n    \t\t\t  updated=true;\n    \t\t  }\n    \t  }//end of while loop\n    \t  if(!updated)\n    \t\t  agents.add(results);\n      }\n      else {\n    \t  agents.add(results);\n      }\n    }\n\n    if(bean.getAllSubmissions().equals(\"4\")&& bean.getScoringOption().equals(\"4\")&&agents.size()>0){\n    \tIterator it=agents.iterator();\n    \twhile(it.hasNext()){\n    \t\tAgentResults ar=(AgentResults)it.next();\n    \t\tFloat averageScore=ar.getScoreSummation()/ar.getSubmissionCount();\n    \t\tar.setFinalScore(averageScore.toString());\n    \t\tar.setComments(null);\n    \t\tar.setSubmittedDate(new Date());\n    \t\tar.setStatus(null);\n    \t\tar.setItemGradingSet(null);\n\n    \t}\n    }\n  }","commit_id":"46f382c7da17113257e43403aaa7377779dcbdea","url":"https://github.com/sakaiproject/sakai"},{"original_method":"/**\n   * Persist the results from the ActionForm in the total page.\n   * @todo Some of this code will change when we move this to Hibernate persistence.\n   * @param bean TotalScoresBean bean\n   * @return true if successful\n   */\n  public boolean saveTotalScores(TotalScoresBean bean)\n  {\n\n      ArrayList assessmentGradingList = bean.getAssessmentGradingList();\n      HashMap map = prepareAssessmentGradingHash(assessmentGradingList);\n      Collection agents = bean.getAgents();\n      Iterator iter = agents.iterator();\n      ArrayList grading = new ArrayList();\n      boolean hasNumberFormatException = false;\n      StringBuffer idList = new StringBuffer(\" \");\n  \t  String err = \"\";\n  \t  boolean isAnonymousGrading = false;\n\n  \t  String applyToUngraded = bean.getApplyToUngraded().trim();\n  \t  boolean applyUngradedBoolean = false;\n  \t  if(applyToUngraded != null && !\"\".equals(applyToUngraded)){\n  \t\t  try{\n  \t\t\t  Float.valueOf(applyToUngraded).floatValue();\n  \t\t\t  applyUngradedBoolean = true;\n  \t\t  }catch (Exception e) {\n  \t\t\t  FacesContext context = FacesContext.getCurrentInstance();\n  \t\t\t  String err2 = (String) ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.EvaluationMessages\", \"number_format_error_user_id_apply\");\n  \t\t\t  context.addMessage(null,  new FacesMessage(err2));\n  \t\t\t  return true;\n  \t\t  }\n  \t  }\n\n  \t  if (bean.getPublishedAssessment() != null \n  \t\t\t  && bean.getPublishedAssessment().getEvaluationModel() != null\n  \t\t\t  && bean.getPublishedAssessment().getEvaluationModel().getAnonymousGrading() != null\n  \t\t\t  && bean.getPublishedAssessment().getEvaluationModel().getAnonymousGrading().equals(EvaluationModelIfc.ANONYMOUS_GRADING)) {\n  \t\t  isAnonymousGrading = true;\n  \t\t  err = (String) ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.EvaluationMessages\", \"number_format_error_submission_id\");\n  \t  }\n  \t  else {\n  \t\t  err = (String) ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.EvaluationMessages\", \"number_format_error_user_id\");\n  \t  }\n  \t  ArrayList badAdjList = new ArrayList();\n  \t  \n  \t  while (iter.hasNext())\n  \t  {\n  \t\t  AgentResults agentResults = (AgentResults) iter.next();\n  \t\t  StringBuilder newScoreString = new StringBuilder();\n  \t\t  boolean update = false;\n  \t\t  try {\n  \t\t\t  update = needUpdate(agentResults, map, newScoreString);     \n  \t\t  }\n  \t\t  catch (NumberFormatException e) {\n  \t\t\t  hasNumberFormatException = true;\n  \t\t\t  update = false;\n\n  \t\t\t  if (isAnonymousGrading) {\n  \t\t\t\t  badAdjList.add(agentResults.getAssessmentGradingId());\n  \t\t\t  }\n  \t\t\t  else {\n  \t\t\t\t  badAdjList.add(agentResults.getAgentEid());\n  \t\t\t  }\n  \t\t  }\n  \t\t  \n        if (update){\n        \tlog.debug(\"update is true\");\n        \tFloat newScore = new Float(0f);\n        \tAssessmentGradingData data = new AssessmentGradingData();\n        \ttry {\n        \t\tif (!agentResults.getAssessmentGradingId().equals(Long.valueOf(-1)) ) {\n        \t\t\t// these are students who have submitted for grades.\n        \t\t\t// Add up new score\n        \t\t\tnewScore = Float.valueOf(newScoreString.toString());\n        \t\t\tagentResults.setFinalScore(newScore+\"\");\n        \t\t\tBeanUtils.copyProperties(data, agentResults);\n        \t\t\tdata.setPublishedAssessmentId(bean.getPublishedAssessment().getPublishedAssessmentId());\n        \t\t\tdata.setTotalAutoScore(Float.valueOf(agentResults.getTotalAutoScore()));\n        \t\t\tdata.setTotalOverrideScore(Float.valueOf(agentResults.getTotalOverrideScore()));\n        \t\t\tdata.setFinalScore(Float.valueOf(agentResults.getFinalScore()));\n        \t\t\tdata.setIsLate(agentResults.getIsLate());\n        \t\t\tdata.setComments(agentResults.getComments());\n        \t\t\tdata.setGradedBy(AgentFacade.getAgentString());\n        \t\t\tdata.setGradedDate(new Date());\n        \t\t\tgrading.add(data);\n        \t\t}\n        \t\telse {\n        \t\t\t// these are students who have not submitted for grades and instructor made adjustment to their scores\n        \t\t\t// Add up new score\n        \t\t\tnewScore = Float.valueOf(newScoreString.toString());\n        \t\t\tagentResults.setFinalScore(newScore+\"\");\n\n        \t\t\tBeanUtils.copyProperties(data, agentResults);\n        \t\t\tdata.setAgentId(agentResults.getIdString());\n        \t\t\tdata.setForGrade(Boolean.FALSE);\n        \t\t\t//data.setStatus(Integer.valueOf(1));\n        \t\t\tdata.setIsLate(Boolean.FALSE);\n        \t\t\tdata.setItemGradingSet(new HashSet());\n        \t\t\tdata.setPublishedAssessmentId(bean.getPublishedAssessment().getPublishedAssessmentId());\n        \t\t\t// tell hibernate this is a new record\n        \t\t\tdata.setAssessmentGradingId(Long.valueOf(0));\n        \t\t\tdata.setSubmittedDate(null);\n        \t\t\tdata.setTotalAutoScore(Float.valueOf(agentResults.getTotalAutoScore()));\n        \t\t\tdata.setTotalOverrideScore(Float.valueOf(agentResults.getTotalOverrideScore()));\n        \t\t\tdata.setFinalScore(Float.valueOf(agentResults.getFinalScore()));\n        \t\t\tdata.setComments(agentResults.getComments());\n        \t\t\tdata.setGradedBy(AgentFacade.getAgentString());\n        \t\t\tdata.setGradedDate(new Date());\n        \t\t\t// note that I am not sure if we should set this people as late or what?\n        \t\t\tgrading.add(data);\n        \t\t}\n\n        \t}\n        \tcatch (IllegalAccessException e) {\n        \t\tlog.error(\"IllegalAccessException: \" + e);\n        \t\treturn false;\n        \t} catch (InvocationTargetException e) {\n        \t\tlog.error(\"InvocationTargetException: \" + e);\n        \t\treturn false;\n        \t}\n        }\n      }\n\n      if (hasNumberFormatException) {\n    \t  if (bean.getPublishedAssessment() != null \n    \t\t\t  && bean.getPublishedAssessment().getEvaluationModel() != null\n    \t\t\t  && bean.getPublishedAssessment().getEvaluationModel().getAnonymousGrading() != null\n    \t\t\t  && bean.getPublishedAssessment().getEvaluationModel().getAnonymousGrading().equals(EvaluationModelIfc.ANONYMOUS_GRADING)) {\n    \t\t  err = (String) ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.EvaluationMessages\", \"number_format_error_submission_id\");\n    \t  }\n    \t  else {\n    \t\t  err = (String) ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.EvaluationMessages\", \"number_format_error_user_id\");\n    \t  }\n    \t  for (int i = 0; i < badAdjList.size(); i++) {\n    \t\t  idList.append(badAdjList.get(i));\n    \t\t  if (i != badAdjList.size() - 1) {\n    \t\t\t  idList.append(\", \");\n    \t\t  }\n    \t  }\n    \t  idList.append(\".\");\n\n    \t  FacesContext context = FacesContext.getCurrentInstance();\n    \t  context.addMessage(null, new FacesMessage(err + idList.toString()));\n      }\n      \n      GradingService delegate = new GradingService();\n      try {\n    \t  delegate.saveTotalScores(grading, bean.getPublishedAssessment());\n    \t  log.debug(\"Saved total scores.\");\n      } catch (GradebookServiceException ge) {\n    \t  FacesContext context = FacesContext.getCurrentInstance();\n    \t  String error=(String)ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AuthorMessages\", \"gradebook_exception_error\");\n    \t  context.addMessage(null, new FacesMessage(error));\n    \t  // scores are saved in Samigo, still return true, but display error to user.\n    \t  return true;\n      }\n      \n      if(applyUngradedBoolean){\n    \t  grading = new ArrayList();\n\n    \t  ArrayList allAgents = bean.getAllAgentsDirect();\n    \t  Iterator allAgentsItr = allAgents.iterator();\n    \t  while(allAgentsItr.hasNext()){\n    \t\t  AgentResults agentResults = (AgentResults) allAgentsItr.next();\n    \t\t  String overrideScore = agentResults.getTotalOverrideScore();\n    \t\t  if (agentResults.getAssessmentGradingId().equals(Long.valueOf(-1)) && (overrideScore == null || \"\".equals(overrideScore) || \"-\".equals(overrideScore))) {\n    \t\t\t  // these are students who have not submitted for grades and instructor made adjustment to their scores\n    \t\t\t  // Add up new score\n    \t\t\t  AssessmentGradingData data = new AssessmentGradingData();\n\n    \t\t\t  try {\n    \t\t\t\t  agentResults.setFinalScore(applyToUngraded+\"\");\n    \t\t\t\t  agentResults.setTotalOverrideScore(applyToUngraded+\"\");\n    \t\t\t\t  BeanUtils.copyProperties(data, agentResults);\n\n    \t\t\t\t  data.setAgentId(agentResults.getIdString());\n    \t\t\t\t  data.setForGrade(Boolean.FALSE);\n    \t\t\t\t  data.setStatus(AssessmentGradingIfc.NO_SUBMISSION);\n    \t\t\t\t  data.setIsLate(Boolean.FALSE);\n    \t\t\t\t  data.setItemGradingSet(new HashSet());\n    \t\t\t\t  data.setPublishedAssessmentId(bean.getPublishedAssessment().getPublishedAssessmentId());\n    \t\t\t\t  // tell hibernate this is a new record\n    \t\t\t\t  data.setAssessmentGradingId(Long.valueOf(0));\n    \t\t\t\t  data.setSubmittedDate(null);\n    \t\t\t\t  data.setTotalAutoScore(Float.valueOf(agentResults.getTotalAutoScore()));\n    \t\t\t\t  data.setTotalOverrideScore(Float.valueOf(agentResults.getTotalOverrideScore()));\n    \t\t\t\t  data.setFinalScore(Float.valueOf(agentResults.getFinalScore()));\n    \t\t\t\t  data.setComments(agentResults.getComments());\n    \t\t\t\t  data.setGradedBy(AgentFacade.getAgentString());\n    \t\t\t\t  data.setGradedDate(new Date());\n    \t\t\t\t  grading.add(data);\n    \t\t\t  } catch (IllegalAccessException e) {\n    \t\t\t\t  // TODO Auto-generated catch block\n    \t\t\t\t  e.printStackTrace();\n    \t\t\t  } catch (InvocationTargetException e) {\n    \t\t\t\t  // TODO Auto-generated catch block\n    \t\t\t\t  e.printStackTrace();\n    \t\t\t  }\n    \t\t  }   \t\t  \n    \t  }\n    \t  //reset value in bean\n    \t  bean.setApplyToUngraded(\"\");\n    \t  try {\n    \t\t  delegate.saveTotalScores(grading, bean.getPublishedAssessment());\n    \t\t  log.debug(\"Saved total scores applied to unsubmitted.\");\n    \t  } catch (GradebookServiceException ge) {\n    \t\t  FacesContext context = FacesContext.getCurrentInstance();\n    \t\t  String error=(String)ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AuthorMessages\", \"gradebook_exception_error\");\n    \t\t  context.addMessage(null, new FacesMessage(error));\n    \t\t  // scores are saved in Samigo, still return true, but display error to user.\n    \t  }\n    \t  if(grading != null && !grading.isEmpty()){\n    \t\t  //need to reset the bean\n    \t  }\n      }\n\n      return true;\n  }","id":53684,"modified_method":"/**\n   * Persist the results from the ActionForm in the total page.\n   * @todo Some of this code will change when we move this to Hibernate persistence.\n   * @param bean TotalScoresBean bean\n   * @return true if successful\n   */\n  public boolean saveTotalScores(TotalScoresBean bean)\n  {\n\n      ArrayList assessmentGradingList = bean.getAssessmentGradingList();\n      HashMap map = prepareAssessmentGradingHash(assessmentGradingList);\n      Collection agents = bean.getAgents();\n      Iterator iter = agents.iterator();\n      ArrayList grading = new ArrayList();\n      boolean hasNumberFormatException = false;\n      StringBuffer idList = new StringBuffer(\" \");\n  \t  String err = \"\";\n  \t  boolean isAnonymousGrading = false;\n\n  \t  String applyToUngraded = bean.getApplyToUngraded().trim();\n  \t  boolean applyUngradedBoolean = false;\n  \t  if(applyToUngraded != null && !\"\".equals(applyToUngraded)){\n  \t\t  try{\n  \t\t\t  Float.valueOf(applyToUngraded).floatValue();\n  \t\t\t  applyUngradedBoolean = true;\n  \t\t  }catch (Exception e) {\n  \t\t\t  FacesContext context = FacesContext.getCurrentInstance();\n  \t\t\t  String err2 = (String) ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.EvaluationMessages\", \"number_format_error_user_id_apply\");\n  \t\t\t  context.addMessage(null,  new FacesMessage(err2));\n  \t\t\t  return true;\n  \t\t  }\n  \t  }\n\n  \t  if (bean.getPublishedAssessment() != null \n  \t\t\t  && bean.getPublishedAssessment().getEvaluationModel() != null\n  \t\t\t  && bean.getPublishedAssessment().getEvaluationModel().getAnonymousGrading() != null\n  \t\t\t  && bean.getPublishedAssessment().getEvaluationModel().getAnonymousGrading().equals(EvaluationModelIfc.ANONYMOUS_GRADING)) {\n  \t\t  isAnonymousGrading = true;\n  \t\t  err = (String) ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.EvaluationMessages\", \"number_format_error_submission_id\");\n  \t  }\n  \t  else {\n  \t\t  err = (String) ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.EvaluationMessages\", \"number_format_error_user_id\");\n  \t  }\n  \t  ArrayList badAdjList = new ArrayList();\n  \t  \n  \t  while (iter.hasNext())\n  \t  {\n  \t\t  AgentResults agentResults = (AgentResults) iter.next();\n  \t\t  StringBuilder newScoreString = new StringBuilder();\n  \t\t  boolean update = false;\n  \t\t  try {\n  \t\t\t  update = needUpdate(agentResults, map, newScoreString);     \n  \t\t  }\n  \t\t  catch (NumberFormatException e) {\n  \t\t\t  hasNumberFormatException = true;\n  \t\t\t  update = false;\n\n  \t\t\t  if (isAnonymousGrading) {\n  \t\t\t\t  badAdjList.add(agentResults.getAssessmentGradingId());\n  \t\t\t  }\n  \t\t\t  else {\n  \t\t\t\t  badAdjList.add(agentResults.getAgentEid());\n  \t\t\t  }\n  \t\t  }\n  \t\t  \n        if (update){\n        \tlog.debug(\"update is true\");\n        \tFloat newScore = new Float(0f);\n        \tAssessmentGradingData data = new AssessmentGradingData();\n        \ttry {\n        \t\tif (!agentResults.getAssessmentGradingId().equals(Long.valueOf(-1)) ) {\n        \t\t\t// these are students who have submitted for grades.\n        \t\t\t// Add up new score\n        \t\t\tnewScore = Float.valueOf(newScoreString.toString());\n        \t\t\tagentResults.setFinalScore(newScore+\"\");\n        \t\t\tBeanUtils.copyProperties(data, agentResults);\n        \t\t\tdata.setPublishedAssessmentId(bean.getPublishedAssessment().getPublishedAssessmentId());\n        \t\t\tif (\"-\".equals(agentResults.getTotalAutoScore())) {\n        \t\t\t\tdata.setTotalAutoScore(Float.valueOf(0f));\n        \t\t\t}\n        \t\t\telse {\n        \t\t\t\tdata.setTotalAutoScore(Float.valueOf(agentResults.getTotalAutoScore()));\n        \t\t\t}\n        \t\t\tdata.setTotalOverrideScore(Float.valueOf(agentResults.getTotalOverrideScore()));\n        \t\t\tdata.setFinalScore(Float.valueOf(agentResults.getFinalScore()));\n        \t\t\tdata.setIsLate(agentResults.getIsLate());\n        \t\t\tdata.setComments(agentResults.getComments());\n        \t\t\tdata.setGradedBy(AgentFacade.getAgentString());\n        \t\t\tdata.setGradedDate(new Date());\n        \t\t\tgrading.add(data);\n        \t\t}\n        \t\telse {\n        \t\t\t// these are students who have not submitted for grades and instructor made adjustment to their scores\n        \t\t\t// Add up new score\n        \t\t\tnewScore = Float.valueOf(newScoreString.toString());\n        \t\t\tagentResults.setFinalScore(newScore+\"\");\n\n        \t\t\tBeanUtils.copyProperties(data, agentResults);\n        \t\t\tdata.setAgentId(agentResults.getIdString());\n        \t\t\tdata.setForGrade(Boolean.FALSE);\n        \t\t\t//data.setStatus(Integer.valueOf(1));\n        \t\t\tdata.setIsLate(Boolean.FALSE);\n        \t\t\tdata.setItemGradingSet(new HashSet());\n        \t\t\tdata.setPublishedAssessmentId(bean.getPublishedAssessment().getPublishedAssessmentId());\n        \t\t\t// tell hibernate this is a new record\n        \t\t\tdata.setAssessmentGradingId(Long.valueOf(0));\n        \t\t\tdata.setSubmittedDate(null);\n        \t\t\tdata.setTotalAutoScore(Float.valueOf(0f));\n        \t\t\tdata.setTotalOverrideScore(Float.valueOf(agentResults.getTotalOverrideScore()));\n        \t\t\tdata.setFinalScore(Float.valueOf(agentResults.getFinalScore()));\n        \t\t\tdata.setComments(agentResults.getComments());\n        \t\t\tdata.setGradedBy(AgentFacade.getAgentString());\n        \t\t\tdata.setGradedDate(new Date());\n        \t\t\t// note that I am not sure if we should set this people as late or what?\n        \t\t\tgrading.add(data);\n        \t\t}\n\n        \t}\n        \tcatch (IllegalAccessException e) {\n        \t\tlog.error(\"IllegalAccessException: \" + e);\n        \t\treturn false;\n        \t} catch (InvocationTargetException e) {\n        \t\tlog.error(\"InvocationTargetException: \" + e);\n        \t\treturn false;\n        \t}\n        }\n      }\n\n      if (hasNumberFormatException) {\n    \t  if (bean.getPublishedAssessment() != null \n    \t\t\t  && bean.getPublishedAssessment().getEvaluationModel() != null\n    \t\t\t  && bean.getPublishedAssessment().getEvaluationModel().getAnonymousGrading() != null\n    \t\t\t  && bean.getPublishedAssessment().getEvaluationModel().getAnonymousGrading().equals(EvaluationModelIfc.ANONYMOUS_GRADING)) {\n    \t\t  err = (String) ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.EvaluationMessages\", \"number_format_error_submission_id\");\n    \t  }\n    \t  else {\n    \t\t  err = (String) ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.EvaluationMessages\", \"number_format_error_user_id\");\n    \t  }\n    \t  for (int i = 0; i < badAdjList.size(); i++) {\n    \t\t  idList.append(badAdjList.get(i));\n    \t\t  if (i != badAdjList.size() - 1) {\n    \t\t\t  idList.append(\", \");\n    \t\t  }\n    \t  }\n    \t  idList.append(\".\");\n\n    \t  FacesContext context = FacesContext.getCurrentInstance();\n    \t  context.addMessage(null, new FacesMessage(err + idList.toString()));\n      }\n      \n      GradingService delegate = new GradingService();\n      try {\n    \t  delegate.saveTotalScores(grading, bean.getPublishedAssessment());\n    \t  log.debug(\"Saved total scores.\");\n      } catch (GradebookServiceException ge) {\n    \t  FacesContext context = FacesContext.getCurrentInstance();\n    \t  String error=(String)ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AuthorMessages\", \"gradebook_exception_error\");\n    \t  context.addMessage(null, new FacesMessage(error));\n    \t  // scores are saved in Samigo, still return true, but display error to user.\n    \t  return true;\n      }\n      \n      if(applyUngradedBoolean){\n    \t  grading = new ArrayList();\n\n    \t  ArrayList allAgents = bean.getAllAgentsDirect();\n    \t  Iterator allAgentsItr = allAgents.iterator();\n    \t  while(allAgentsItr.hasNext()){\n    \t\t  AgentResults agentResults = (AgentResults) allAgentsItr.next();\n    \t\t  String overrideScore = agentResults.getTotalOverrideScore();\n    \t\t  if (agentResults.getAssessmentGradingId().equals(Long.valueOf(-1)) && (overrideScore == null || \"\".equals(overrideScore) || \"-\".equals(overrideScore))) {\n    \t\t\t  // these are students who have not submitted for grades and instructor made adjustment to their scores\n    \t\t\t  // Add up new score\n    \t\t\t  AssessmentGradingData data = new AssessmentGradingData();\n\n    \t\t\t  try {\n    \t\t\t\t  agentResults.setFinalScore(applyToUngraded+\"\");\n    \t\t\t\t  agentResults.setTotalOverrideScore(applyToUngraded+\"\");\n    \t\t\t\t  BeanUtils.copyProperties(data, agentResults);\n\n    \t\t\t\t  data.setAgentId(agentResults.getIdString());\n    \t\t\t\t  data.setForGrade(Boolean.FALSE);\n    \t\t\t\t  data.setStatus(AssessmentGradingIfc.NO_SUBMISSION);\n    \t\t\t\t  data.setIsLate(Boolean.FALSE);\n    \t\t\t\t  data.setItemGradingSet(new HashSet());\n    \t\t\t\t  data.setPublishedAssessmentId(bean.getPublishedAssessment().getPublishedAssessmentId());\n    \t\t\t\t  // tell hibernate this is a new record\n    \t\t\t\t  data.setAssessmentGradingId(Long.valueOf(0));\n    \t\t\t\t  data.setSubmittedDate(null);\n    \t\t\t\t  data.setTotalAutoScore(Float.valueOf(agentResults.getTotalAutoScore()));\n    \t\t\t\t  data.setTotalOverrideScore(Float.valueOf(agentResults.getTotalOverrideScore()));\n    \t\t\t\t  data.setFinalScore(Float.valueOf(agentResults.getFinalScore()));\n    \t\t\t\t  data.setComments(agentResults.getComments());\n    \t\t\t\t  data.setGradedBy(AgentFacade.getAgentString());\n    \t\t\t\t  data.setGradedDate(new Date());\n    \t\t\t\t  grading.add(data);\n    \t\t\t  } catch (IllegalAccessException e) {\n    \t\t\t\t  // TODO Auto-generated catch block\n    \t\t\t\t  e.printStackTrace();\n    \t\t\t  } catch (InvocationTargetException e) {\n    \t\t\t\t  // TODO Auto-generated catch block\n    \t\t\t\t  e.printStackTrace();\n    \t\t\t  }\n    \t\t  }   \t\t  \n    \t  }\n    \t  //reset value in bean\n    \t  bean.setApplyToUngraded(\"\");\n    \t  try {\n    \t\t  delegate.saveTotalScores(grading, bean.getPublishedAssessment());\n    \t\t  log.debug(\"Saved total scores applied to unsubmitted.\");\n    \t  } catch (GradebookServiceException ge) {\n    \t\t  FacesContext context = FacesContext.getCurrentInstance();\n    \t\t  String error=(String)ContextUtil.getLocalizedString(\"org.sakaiproject.tool.assessment.bundle.AuthorMessages\", \"gradebook_exception_error\");\n    \t\t  context.addMessage(null, new FacesMessage(error));\n    \t\t  // scores are saved in Samigo, still return true, but display error to user.\n    \t  }\n    \t  if(grading != null && !grading.isEmpty()){\n    \t\t  //need to reset the bean\n    \t  }\n      }\n\n      return true;\n  }","commit_id":"46f382c7da17113257e43403aaa7377779dcbdea","url":"https://github.com/sakaiproject/sakai"},{"original_method":"public abstract void merge (Binding b);","id":53685,"modified_method":"public abstract void merge (Binding b, boolean removeObject);","commit_id":"4b0a2b79d29c1e48fd6895fd9df578289b2f51b8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public Binding rise(final PsiType x, final PsiType y) {\n    return balance(x, y, new Balancer() {\n                     public Binding varType(PsiTypeVariable x, PsiType y) {\n                       return create(x, y);\n                     }\n\n                     public Binding varVar(PsiTypeVariable x, PsiTypeVariable y) {\n                       final int xi = x.getIndex();\n                       final int yi = y.getIndex();\n\n                       if (xi < yi) {\n                         return create(((PsiTypeVariable)x), y);\n                       }\n                       else if (yi < xi) {\n                         return create(((PsiTypeVariable)y), x);\n                       }\n                       else {\n                         return create();\n                       }\n                     }\n\n                     public Binding typeVar(PsiType x, PsiTypeVariable y) {\n                       return create(y, x);\n                     }\n                   });\n  }","id":53686,"modified_method":"public Binding rise(final PsiType x, final PsiType y) {\n    final Binding binding = balance(x, y, new Balancer() {\n                                      public Binding varType(PsiTypeVariable x, PsiType y) {\n                                        if (y instanceof Bottom) {\n                                          return create();\n                                        }\n\n                                        return create(x, y);\n                                      }\n\n                                      public Binding varVar(PsiTypeVariable x, PsiTypeVariable y) {\n                                        final int xi = x.getIndex();\n                                        final int yi = y.getIndex();\n\n                                        if (xi < yi) {\n                                          return create(((PsiTypeVariable)x), y);\n                                        }\n                                        else if (yi < xi) {\n                                          return create(((PsiTypeVariable)y), x);\n                                        }\n                                        else {\n                                          return create();\n                                        }\n                                      }\n\n                                      public Binding typeVar(PsiType x, PsiTypeVariable y) {\n                                        return create(y, x);\n                                      }\n                                    });\n\n    return binding != null ? binding.reduceRecursive() : null;\n  }","commit_id":"4b0a2b79d29c1e48fd6895fd9df578289b2f51b8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public Binding reduceRecursive() {\n      BindingImpl binding = this;\n\n      for (int i = 0; i < binding.myBindings.length; i++) {\n        final PsiType type = binding.myBindings[i];\n\n        if (type == null) {\n        continue;\n        }\n\n        final int index = i;\n\n        class Verifier extends PsiExtendedTypeVisitor {\n          boolean flag = false;\n\n          public Object visitTypeVariable(final PsiTypeVariable var) {\n            if (var.getIndex() == index) {\n              flag = true;\n            }\n\n            return null;\n          }\n        }\n\n        final Verifier verifier = new Verifier();\n\n        type.accept(verifier);\n\n        if (verifier.flag) {\n          binding = (BindingImpl)binding.compose(create(index, Bottom.BOTTOM));\n        }\n      }\n\n      return binding;\n    }","id":53687,"modified_method":"public Binding reduceRecursive() {\n      final BindingImpl binding = (BindingImpl)create();\n\n      for (final Iterator<PsiTypeVariable> v = myBoundVariables.iterator(); v.hasNext();) {\n        final PsiTypeVariable var = v.next();\n        final int index = var.getIndex();\n        final PsiType type = myBindings[index];\n\n        if (type != null) {\n          class Verifier extends PsiExtendedTypeVisitor {\n            boolean myFlag = false;\n\n            public Object visitTypeVariable(final PsiTypeVariable var) {\n              if (var.getIndex() == index) {\n                myFlag = true;\n              }\n\n              return null;\n            }\n          }\n\n          final Verifier verifier = new Verifier();\n\n          type.accept(verifier);\n\n          if (verifier.myFlag) {\n            myBindings[index] = Bottom.BOTTOM;\n            binding.myBindings[index] = Bottom.BOTTOM;\n          }\n          else {\n            binding.myBindings[index] = type;\n          }\n        }\n        else {\n          binding.myBindings[index] = type;\n        }\n      }\n\n      for (final Iterator<PsiTypeVariable> v = myBoundVariables.iterator(); v.hasNext();) {\n        final PsiTypeVariable var = v.next();\n        final int index = var.getIndex();\n        final PsiType type = myBindings[index];\n\n        if (type != null) {\n          myBindings[index] = binding.apply(type);\n        }\n      }\n\n      return this;\n    }","commit_id":"4b0a2b79d29c1e48fd6895fd9df578289b2f51b8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public Binding sink(final PsiType x, final PsiType y) {\n    return balance(x, y, new Balancer() {\n                     public Binding varType(PsiTypeVariable x, PsiType y) {\n                       return create(x, Bottom.BOTTOM);\n                     }\n\n                     public Binding varVar(PsiTypeVariable x, PsiTypeVariable y) {\n                       return create(x, Bottom.BOTTOM);\n                     }\n\n                     public Binding typeVar(PsiType x, PsiTypeVariable y) {\n                       return create(y, x);\n                     }\n                   });\n  }","id":53688,"modified_method":"public Binding sink(final PsiType x, final PsiType y) {\n    return balance(x, y, new Balancer() {\n                     public Binding varType(PsiTypeVariable x, PsiType y) {\n                       return create(x, y);\n                     }\n\n                     public Binding varVar(PsiTypeVariable x, PsiTypeVariable y) {\n                       return create(x, Bottom.BOTTOM);\n                     }\n\n                     public Binding typeVar(PsiType x, PsiTypeVariable y) {\n                       return create(y, Bottom.BOTTOM);\n                     }\n                   });\n  }","commit_id":"4b0a2b79d29c1e48fd6895fd9df578289b2f51b8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private Binding unify(final PsiType x, final PsiType y, final Unifier unifier) {\n    final int indicator = (x instanceof PsiTypeVariable ? 1 : 0) + (y instanceof PsiTypeVariable ? 2 : 0);\n\n    switch (indicator) {\n    case 0:\n         if (x instanceof PsiWildcardType || y instanceof PsiWildcardType) {\n           return unifier.unify(x, y);\n         }\n         else if (x instanceof PsiArrayType || y instanceof PsiArrayType) {\n           final PsiType xType = x instanceof PsiArrayType ? ((PsiArrayType)x).getComponentType() : x;\n           final PsiType yType = y instanceof PsiArrayType ? ((PsiArrayType)y).getComponentType() : y;\n\n           return unify(xType, yType, unifier);\n         }\n         else if (x instanceof PsiClassType && y instanceof PsiClassType) {\n           final PsiClassType.ClassResolveResult resultX = Util.resolveType(x);\n           final PsiClassType.ClassResolveResult resultY = Util.resolveType(y);\n\n           final PsiClass xClass = resultX.getElement();\n           final PsiClass yClass = resultY.getElement();\n\n           if (xClass != null && yClass != null) {\n             final PsiSubstitutor ySubst = resultY.getSubstitutor();\n\n             PsiSubstitutor xSubst = resultX.getSubstitutor();\n\n             if (!xClass.equals(yClass)) {\n               return null;\n             }\n\n             Binding b = create();\n\n             for (Iterator<PsiTypeParameter> p = xSubst.getSubstitutionMap().keySet().iterator(); p.hasNext();) {\n               final PsiTypeParameter aParm = p.next();\n               final PsiType xType = xSubst.substitute(aParm);\n               final PsiType yType = ySubst.substitute(aParm);\n\n               final Binding b1 = unify(xType, yType, unifier);\n\n               if (b1 == null) {\n                 return null;\n               }\n\n               b = b.compose(b1);\n             }\n\n             return b;\n           }\n         }\n         else if (y instanceof Bottom) {\n           return create();\n         }\n         else {\n           return null;\n         }\n\n    case 1:\n         return create((PsiTypeVariable)x, y);\n\n    case 2:\n         return create((PsiTypeVariable)y, x);\n\n    case 3:\n         {\n           final PsiTypeVariable xVar = ((PsiTypeVariable)x);\n           final PsiTypeVariable yVar = ((PsiTypeVariable)y);\n\n           if (xVar.getIndex() == yVar.getIndex()) {\n             return create();\n           }\n\n           return xVar.getIndex() < yVar.getIndex() ? create(xVar, y) : create(yVar, x);\n         }\n    }\n\n    return null;\n  }","id":53689,"modified_method":"private Binding unify(final PsiType x, final PsiType y, final Unifier unifier) {\n    final int indicator = (x instanceof PsiTypeVariable ? 1 : 0) + (y instanceof PsiTypeVariable ? 2 : 0);\n\n    switch (indicator) {\n    case 0:\n           if (x instanceof PsiWildcardType || y instanceof PsiWildcardType) {\n             return unifier.unify(x, y);\n           }\n           else if (x instanceof PsiArrayType || y instanceof PsiArrayType) {\n             final PsiType xType = x instanceof PsiArrayType ? ((PsiArrayType)x).getComponentType() : x;\n             final PsiType yType = y instanceof PsiArrayType ? ((PsiArrayType)y).getComponentType() : y;\n\n             return unify(xType, yType, unifier);\n           }\n           else if (x instanceof PsiClassType && y instanceof PsiClassType) {\n             final PsiClassType.ClassResolveResult resultX = Util.resolveType(x);\n             final PsiClassType.ClassResolveResult resultY = Util.resolveType(y);\n\n             final PsiClass xClass = resultX.getElement();\n             final PsiClass yClass = resultY.getElement();\n\n             if (xClass != null && yClass != null) {\n               final PsiSubstitutor ySubst = resultY.getSubstitutor();\n\n               PsiSubstitutor xSubst = resultX.getSubstitutor();\n\n               if (!xClass.equals(yClass)) {\n                 return null;\n               }\n\n               Binding b = create();\n\n               for (Iterator<PsiTypeParameter> p = xSubst.getSubstitutionMap().keySet().iterator(); p.hasNext();) {\n                 final PsiTypeParameter aParm = p.next();\n                 final PsiType xType = xSubst.substitute(aParm);\n                 final PsiType yType = ySubst.substitute(aParm);\n\n                 final Binding b1 = unify(xType, yType, unifier);\n\n                 if (b1 == null) {\n                   return null;\n                 }\n\n                 b = b.compose(b1);\n               }\n\n               return b;\n             }\n           }\n           else if (y instanceof Bottom) {\n             return create();\n           }\n           else {\n             return null;\n           }\n\n    default:\n           return unifier.unify(x, y);\n    }\n  }","commit_id":"4b0a2b79d29c1e48fd6895fd9df578289b2f51b8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void merge(Binding b) {\n      for (final Iterator<PsiTypeVariable> v=b.getBoundVariables().iterator(); v.hasNext();){\n        final PsiTypeVariable var = v.next();\n        final int index = var.getIndex();\n\n        if (myBindings[index] != null){\n          LOG.error (\"Oops... Binding conflict...\");\n        }\n        else {\n          myBindings[index] = b.apply(var);\n        }\n      }\n    }","id":53690,"modified_method":"public void merge(final Binding b, final boolean removeObject) {\n      for (final Iterator<PsiTypeVariable> v = b.getBoundVariables().iterator(); v.hasNext();) {\n        final PsiTypeVariable var = v.next();\n        final int index = var.getIndex();\n\n        if (myBindings[index] != null) {\n          LOG.error(\"Oops... Binding conflict...\");\n        }\n        else {\n          final PsiType type = b.apply(var);\n          final PsiClassType javaLangObject =\n          PsiType.getJavaLangObject(PsiManager.getInstance(myProject), GlobalSearchScope.allScope(myProject));\n\n          if (removeObject &&\n              javaLangObject.equals(type)) {\n            final HashSet<PsiTypeVariable> cluster = myFactory.getClusterOf(var.getIndex());\n\n            if (cluster != null) {\n              for (final Iterator<PsiTypeVariable> w = cluster.iterator(); w.hasNext();) {\n                final PsiTypeVariable war = (PsiTypeVariable)w.next();\n                final PsiType wtype = b.apply(war);\n\n                if (!javaLangObject.equals(wtype)) {\n                  myBindings[index] = type;\n                break;\n                }\n              }\n            }\n          }\n          else {\n            myBindings[index] = type;\n          }\n        }\n      }\n    }","commit_id":"4b0a2b79d29c1e48fd6895fd9df578289b2f51b8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void reduceInterval(final Constraint left, final Constraint right) {\n    final PsiType leftType = left.getLeft();\n    final PsiType rightType = right.getRight();\n    final PsiTypeVariable var = (PsiTypeVariable)left.getRight();\n\n    if (leftType.equals(rightType)) {\n      final Binding binding = myBindingFactory.create(var, leftType);\n\n      myConstraints.remove(left);\n      myConstraints.remove(right);\n\n      mySons = new ResolverTree[]{applyRule(binding)};\n\n      return;\n    }\n\n    Binding riseBinding = myBindingFactory.rise(leftType, rightType);\n    Binding sinkBinding = myBindingFactory.sink(leftType, rightType);\n\n    int indicator = (riseBinding == null ? 0 : 1) + (sinkBinding == null ? 0 : 1);\n\n    if (indicator == 0) {\n      return;\n    }\n    else if (indicator == 2) {\n      switch (riseBinding.compare(sinkBinding)) {\n        case Binding.SAME:\n        case Binding.BETTER:\n          indicator = 1;\n          sinkBinding = null;\n          break;\n\n        case Binding.WORSE:\n          indicator = 1;\n          riseBinding = null;\n          break;\n      }\n    }\n\n    PsiType[] riseRange = new PsiType[]{};\n    PsiType[] sinkRange = new PsiType[]{};\n\n    if (riseBinding != null) {\n      riseRange = getTypeRange(riseBinding.apply(rightType), riseBinding.apply(leftType));\n    }\n\n    if (sinkBinding != null) {\n      sinkRange = getTypeRange(sinkBinding.apply(rightType), sinkBinding.apply(leftType));\n    }\n\n    if (riseRange.length + sinkRange.length > 0) {\n      myConstraints.remove(left);\n      myConstraints.remove(right);\n    }\n\n    mySons = new ResolverTree[riseRange.length + sinkRange.length];\n\n    for (int i = 0; i < riseRange.length; i++) {\n      final PsiType type = riseRange[i];\n\n      mySons[i] = applyRule(riseBinding.compose(myBindingFactory.create(var, type)));\n    }\n\n    for (int i = 0; i < sinkRange.length; i++) {\n      final PsiType type = sinkRange[i];\n\n      mySons[i + riseRange.length] = applyRule(sinkBinding.compose(myBindingFactory.create(var, type)));\n    }\n  }","id":53691,"modified_method":"private void reduceInterval(final Constraint left, final Constraint right) {\n    final PsiType leftType = left.getLeft();\n    final PsiType rightType = right.getRight();\n    final PsiTypeVariable var = (PsiTypeVariable)left.getRight();\n\n    if (leftType.equals(rightType)) {\n      final Binding binding = myBindingFactory.create(var, leftType);\n\n      myConstraints.remove(left);\n      myConstraints.remove(right);\n\n      mySons = new ResolverTree[]{applyRule(binding)};\n\n      return;\n    }\n\n    Binding riseBinding = myBindingFactory.rise(leftType, rightType);\n    Binding sinkBinding = myBindingFactory.sink(leftType, rightType);\n\n    int indicator = (riseBinding == null ? 0 : 1) + (sinkBinding == null ? 0 : 1);\n\n    if (indicator == 0) {\n      return;\n    }\n    else if (indicator == 2) {\n      switch (riseBinding.compare(sinkBinding)) {\n      case Binding.SAME:\n           indicator = 1;\n           sinkBinding = null;\n      break;\n\n           //case Binding.WORSE:\n           //  indicator = 1;\n           //  riseBinding = null;\n           //  break;\n      }\n    }\n\n    PsiType[] riseRange = new PsiType[]{};\n    PsiType[] sinkRange = new PsiType[]{};\n\n    if (riseBinding != null) {\n      riseRange = getTypeRange(riseBinding.apply(rightType), riseBinding.apply(leftType));\n    }\n\n    if (sinkBinding != null) {\n      sinkRange = getTypeRange(sinkBinding.apply(rightType), sinkBinding.apply(leftType));\n    }\n\n    if (riseRange.length + sinkRange.length > 0) {\n      myConstraints.remove(left);\n      myConstraints.remove(right);\n    }\n\n    mySons = new ResolverTree[riseRange.length + sinkRange.length];\n\n    for (int i = 0; i < riseRange.length; i++) {\n      final PsiType type = riseRange[i];\n\n      mySons[i] = applyRule(riseBinding.compose(myBindingFactory.create(var, type)));\n    }\n\n    for (int i = 0; i < sinkRange.length; i++) {\n      final PsiType type = sinkRange[i];\n\n      mySons[i + riseRange.length] = applyRule(sinkBinding.compose(myBindingFactory.create(var, type)));\n    }\n  }","commit_id":"4b0a2b79d29c1e48fd6895fd9df578289b2f51b8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void reduceTypeType(final Constraint constr) {\n    final PsiType left = constr.getLeft();\n    final PsiType right = constr.getRight();\n\n    Binding riseBinding = myBindingFactory.rise(left, right);\n    Binding sinkBinding = myBindingFactory.sink(left, right);\n\n    int indicator = (riseBinding == null ? 0 : 1) + (sinkBinding == null ? 0 : 1);\n\n    if (indicator == 0) {\n      return;\n    }\n    else if (indicator == 2) {\n      switch (riseBinding.compare(sinkBinding)) {\n        case Binding.SAME:\n        case Binding.BETTER:\n          indicator = 1;\n          sinkBinding = null;\n          break;\n\n        case Binding.WORSE:\n          indicator = 1;\n          riseBinding = null;\n          break;\n      }\n    }\n\n    myConstraints.remove(constr);\n\n    mySons = new ResolverTree[indicator];\n\n    int n = 0;\n\n    if (riseBinding != null) {\n      mySons[n++] = applyRule(riseBinding);\n    }\n\n    if (sinkBinding != null) {\n      mySons[n++] = applyRule(sinkBinding);\n    }\n  }","id":53692,"modified_method":"private void reduceTypeType(final Constraint constr) {\n    final PsiType left = constr.getLeft();\n    final PsiType right = constr.getRight();\n\n    Binding riseBinding = myBindingFactory.rise(left, right);\n    Binding sinkBinding = myBindingFactory.sink(left, right);\n\n    int indicator = (riseBinding == null ? 0 : 1) + (sinkBinding == null ? 0 : 1);\n\n    if (indicator == 0) {\n      return;\n    }\n    else if (indicator == 2) {\n      switch (riseBinding.compare(sinkBinding)) {\n      case Binding.SAME:\n      //case Binding.BETTER:\n           indicator = 1;\n           sinkBinding = null;\n      break;\n\n      //case Binding.WORSE:\n      //     indicator = 1;\n      //     riseBinding = null;\n      //break;\n      }\n    }\n\n    myConstraints.remove(constr);\n\n    mySons = new ResolverTree[indicator];\n\n    int n = 0;\n\n    if (riseBinding != null) {\n      mySons[n++] = applyRule(riseBinding);\n    }\n\n    if (sinkBinding != null) {\n      mySons[n++] = applyRule(sinkBinding);\n    }\n  }","commit_id":"4b0a2b79d29c1e48fd6895fd9df578289b2f51b8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void resolve() {\n    reduce();\n\n    if (mySons.length > 0) {\n      for (int i = 0; i < mySons.length; i++) {\n        final ResolverTree son = mySons[i];\n\n        if (son != null) {\n          son.resolve();\n        }\n      }\n    }\n    else {\n      if (myConstraints.size() == 0) {\n        printSolution();\n\n        mySolutions.putSolution(myCurrentBinding);\n      }\n    }\n  }","id":53693,"modified_method":"public void resolve() {\n    reduce();\n\n    if (mySons.length > 0) {\n      for (int i = 0; i < mySons.length; i++) {\n        final ResolverTree son = mySons[i];\n\n        if (son != null) {\n          son.resolve();\n        }\n      }\n    }\n    else {\n      if (myConstraints.size() == 0) {\n        logSolution();\n\n        mySolutions.putSolution(myCurrentBinding);\n      }\n    }\n  }","commit_id":"4b0a2b79d29c1e48fd6895fd9df578289b2f51b8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void printSolution() {\n    System.out.println(\"Reduced system:\");\n\n    for (final Iterator<Constraint> c = myConstraints.iterator(); c.hasNext();) {\n      final Constraint constr = c.next();\n\n      System.out.println(constr);\n    }\n\n    System.out.println(\"End of Reduced system.\");\n    System.out.println(\"Reduced binding:\");\n    System.out.println(myCurrentBinding);\n    System.out.println(\"End of Reduced binding.\");\n  }","id":53694,"modified_method":"private void logSolution() {\n    LOG.debug(\"Reduced system:\");\n\n    for (final Iterator<Constraint> c = myConstraints.iterator(); c.hasNext();) {\n      final Constraint constr = c.next();\n\n      LOG.debug(constr.toString());\n    }\n\n    LOG.debug(\"End of Reduced system.\");\n    LOG.debug(\"Reduced binding:\");\n    LOG.debug(myCurrentBinding.toString());\n    LOG.debug(\"End of Reduced binding.\");\n  }","commit_id":"4b0a2b79d29c1e48fd6895fd9df578289b2f51b8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private ResolverTree applyRule(final Binding b) {\n    final Binding newBinding = myCurrentBinding.compose(b).reduceRecursive();\n\n    return newBinding == null ? null : new ResolverTree(this, apply(b, myConstraints), newBinding);\n  }","id":53695,"modified_method":"private ResolverTree applyRule(final Binding b) {\n    final Binding newBinding = myCurrentBinding.compose(b);\n\n    return newBinding == null ? null : new ResolverTree(this, apply(b, myConstraints), newBinding);\n  }","commit_id":"4b0a2b79d29c1e48fd6895fd9df578289b2f51b8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public Result(final System system) {\n    myVictims = system.myElements;\n    myTypes = system.myTypes;\n    myProject = system.myProject;\n  }","id":53696,"modified_method":"public Result(final System system) {\n    myVictims = system.myElements;\n    myTypes = system.myTypes;\n    myProject = system.myProject;\n    mySettings = system.mySettings;\n    myFactory = system.getVariableFactory();\n  }","commit_id":"4b0a2b79d29c1e48fd6895fd9df578289b2f51b8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void apply(final HashSet<PsiElement> victims) {\n    for (final Iterator<PsiElement> e=victims.iterator(); e.hasNext();){\n      final PsiElement element = e.next();\n\n      Util.changeType(element, getCookedType(element));\n    }\n  }","id":53697,"modified_method":"public void apply(final HashSet<PsiElement> victims) {\n    for (final Iterator<PsiElement> e = victims.iterator(); e.hasNext();) {\n      final PsiElement element = e.next();\n\n      Util.changeType(element, getCookedType(element));\n\n      if (mySettings.dropObsoleteCasts() && element instanceof PsiTypeCastExpression){\n        final PsiTypeCastExpression cast = ((PsiTypeCastExpression)element);\n\n        if (cast.getType().equals(cast.getOperand().getType())){\n          try {\n            cast.replace(cast.getOperand());\n          }\n          catch (IncorrectOperationException e1) {\n            LOG.error (e1);\n          }\n        }\n      }\n    }\n  }","commit_id":"4b0a2b79d29c1e48fd6895fd9df578289b2f51b8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"final private PsiType substitute(final PsiType t) {\n    if (t instanceof PsiWildcardType) {\n      final PsiWildcardType wcType = (PsiWildcardType)t;\n      final PsiType bound = wcType.getBound();\n\n      if (bound == null) {\n        return t;\n      }\n\n      final PsiManager manager = PsiManager.getInstance(myProject);\n      final PsiType subst = substitute(bound);\n      return wcType.isExtends() ? PsiWildcardType.createExtends(manager, subst) : PsiWildcardType.createSuper(manager, subst);\n    }\n    else if (t instanceof PsiTypeVariable) {\n      final PsiType b = myBinding.apply(t);\n\n      if (b instanceof Bottom || b instanceof PsiTypeVariable) {\n        return null;\n      }\n\n      return substitute(b);\n    }\n    else if (t instanceof Bottom) {\n      return null;\n    }\n    else if (t instanceof PsiArrayType) {\n      return substitute(((PsiArrayType)t).getComponentType()).createArrayType();\n    }\n    else if (t instanceof PsiClassType) {\n      final PsiClassType.ClassResolveResult result = ((PsiClassType)t).resolveGenerics();\n\n      final PsiClass aClass = result.getElement();\n      final PsiSubstitutor aSubst = result.getSubstitutor();\n\n      if (aClass == null) {\n        return t;\n      }\n\n      PsiSubstitutor theSubst = PsiSubstitutor.EMPTY;\n\n      for (final Iterator<PsiTypeParameter> p = aSubst.getSubstitutionMap().keySet().iterator(); p.hasNext();) {\n        final PsiTypeParameter parm = p.next();\n        final PsiType type = aSubst.substitute(parm);\n\n        theSubst = theSubst.put(parm, substitute(type));\n      }\n\n      return aClass.getManager().getElementFactory().createType(aClass, theSubst);\n    }\n    else {\n      return t;\n    }\n  }","id":53698,"modified_method":"final private PsiType substitute(final PsiType t) {\n    if (t instanceof PsiWildcardType) {\n      final PsiWildcardType wcType = (PsiWildcardType)t;\n      final PsiType bound = wcType.getBound();\n\n      if (bound == null) {\n        return t;\n      }\n\n      final PsiManager manager = PsiManager.getInstance(myProject);\n      final PsiType subst = substitute(bound);\n      return wcType.isExtends() ? PsiWildcardType.createExtends(manager, subst) : PsiWildcardType.createSuper(manager, subst);\n    }\n    else if (t instanceof PsiTypeVariable) {\n      if (myBinding == null) {\n        return null;\n      }\n\n      final PsiType b = myBinding.apply(t);\n\n      if (b instanceof Bottom || b instanceof PsiTypeVariable) {\n        return null;\n      }\n\n      return substitute(b);\n    }\n    else if (t instanceof Bottom) {\n      return null;\n    }\n    else if (t instanceof PsiArrayType) {\n      return substitute(((PsiArrayType)t).getComponentType()).createArrayType();\n    }\n    else if (t instanceof PsiClassType) {\n      final PsiClassType.ClassResolveResult result = ((PsiClassType)t).resolveGenerics();\n\n      final PsiClass aClass = result.getElement();\n      final PsiSubstitutor aSubst = result.getSubstitutor();\n\n      if (aClass == null) {\n        return t;\n      }\n\n      PsiSubstitutor theSubst = PsiSubstitutor.EMPTY;\n\n      for (final Iterator<PsiTypeParameter> p = aSubst.getSubstitutionMap().keySet().iterator(); p.hasNext();) {\n        final PsiTypeParameter parm = p.next();\n        final PsiType type = aSubst.substitute(parm);\n\n        theSubst = theSubst.put(parm, substitute(type));\n      }\n\n      return aClass.getManager().getElementFactory().createType(aClass, theSubst);\n    }\n    else {\n      return t;\n    }\n  }","commit_id":"4b0a2b79d29c1e48fd6895fd9df578289b2f51b8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public HashSet<PsiElement> getCookedElements() {\n    final HashSet<PsiElement> set = new HashSet<PsiElement>();\n\n    for (final Iterator<PsiElement> e = myVictims.iterator(); e.hasNext();) {\n      final PsiElement element = e.next();\n      final PsiType originalType =\n        element instanceof PsiMethod\n        ? ((PsiMethod)element).getReturnType()\n        : element instanceof PsiVariable\n        ? ((PsiVariable)element).getType()\n        : ((PsiExpression)element).getType();\n\n      if (!originalType.equals(getCookedType(element))){\n        set.add(element);\n      }\n    }\n\n    return set;\n  }","id":53699,"modified_method":"public HashSet<PsiElement> getCookedElements() {\n    final HashSet<PsiElement> set = new HashSet<PsiElement>();\n\n    for (final Iterator<PsiElement> e = myVictims.iterator(); e.hasNext();) {\n      final PsiElement element = e.next();\n      final PsiType originalType =\n        element instanceof PsiMethod\n        ? ((PsiMethod)element).getReturnType()\n        : element instanceof PsiVariable\n        ? ((PsiVariable)element).getType()\n        : ((PsiExpression)element).getType();\n\n      final PsiType cookedType = getCookedType(element);\n      if (cookedType != null && !originalType.equals(cookedType)) {\n        set.add(element);\n      }\n    }\n\n    return set;\n  }","commit_id":"4b0a2b79d29c1e48fd6895fd9df578289b2f51b8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void incorporateSolution(final Binding binding) {\n    if (myBinding == null) {\n      myBinding = binding;\n    }\n    else {\n      myBinding.merge(binding);\n    }\n  }","id":53700,"modified_method":"public void incorporateSolution(final Binding binding) {\n    if (myBinding == null) {\n      myBinding = binding;\n    }\n    else {\n      myBinding.merge(binding, mySettings.leaveObjectParameterizedTypesRaw());\n    }\n  }","commit_id":"4b0a2b79d29c1e48fd6895fd9df578289b2f51b8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public System(final Project project,\n                final HashSet<PsiElement> elements,\n                final HashMap<PsiElement, PsiType> types,\n                final PsiTypeVariableFactory factory) {\n    myProject = project;\n    myElements = elements;\n    myTypes = types;\n    myTypeVariableFactory = factory;\n    myBoundVariables = null;\n  }","id":53701,"modified_method":"public System(final Project project,\n                final HashSet<PsiElement> elements,\n                final HashMap<PsiElement, PsiType> types,\n                final PsiTypeVariableFactory factory,\n                final Settings settings) {\n    myProject = project;\n    myElements = elements;\n    myTypes = types;\n    myTypeVariableFactory = factory;\n    myBoundVariables = null;\n    mySettings = settings;\n  }","commit_id":"4b0a2b79d29c1e48fd6895fd9df578289b2f51b8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public System[] isolate() {\n    class Node {\n      int myComponent = -1;\n      Constraint myConstraint;\n      HashSet<Node> myNeighbours = new HashSet<Node>();\n\n      public Node() {\n        myConstraint = null;\n      }\n\n      public Node(final Constraint c) {\n        myConstraint = c;\n      }\n\n      public Constraint getConstraint() {\n        return myConstraint;\n      }\n\n      public void addEdge(final Node n) {\n        if (!myNeighbours.contains(n)) {\n          myNeighbours.add(n);\n          n.addEdge(this);\n        }\n      }\n    }\n\n    final Node[] typeVariableNodes = new Node[myTypeVariableFactory.getNumber()];\n    final Node[] constraintNodes = new Node[myConstraints.size()];\n    final HashMap<Constraint, HashSet<PsiTypeVariable>> boundVariables = new HashMap<Constraint, HashSet<PsiTypeVariable>>();\n\n    for (int i = 0; i < typeVariableNodes.length; i++) {\n      typeVariableNodes[i] = new Node();\n    }\n\n    {\n      int j = 0;\n\n      for (Iterator<Constraint> c = myConstraints.iterator(); c.hasNext();) {\n        constraintNodes[j++] = new Node(c.next());\n      }\n    }\n\n    {\n      int l = 0;\n\n      for (Iterator<Constraint> i = myConstraints.iterator(); i.hasNext();) {\n        final HashSet<PsiTypeVariable> boundVars = new HashSet<PsiTypeVariable>();\n\n        final Constraint constraint = i.next();\n        final Node constraintNode = constraintNodes[l++];\n\n        new Object() {\n          void visit(final Constraint c) {\n            visit(c.getLeft());\n            visit(c.getRight());\n          }\n\n          private void visit(final PsiType t) {\n            if (t instanceof PsiTypeVariable) {\n              boundVars.add((PsiTypeVariable)t);\n            }\n            else if (t instanceof PsiArrayType) {\n              visit(((PsiArrayType)t).getDeepComponentType());\n            }\n            else if (t instanceof PsiClassType) {\n              final PsiSubstitutor subst = Util.resolveType(t).getSubstitutor();\n\n              for (Iterator<PsiType> j = subst.getSubstitutionMap().values().iterator(); j.hasNext();) {\n                visit(j.next());\n              }\n            }\n            else if (t instanceof PsiTypeIntersection) {\n              visit(((PsiTypeIntersection)t).getLeft());\n              visit(((PsiTypeIntersection)t).getRight());\n            }\n          }\n        }.visit(constraint);\n\n        final PsiTypeVariable[] bound = boundVars.toArray(new PsiTypeVariable[]{});\n\n        for (int j = 0; j < bound.length; j++) {\n          final int x = bound[j].getIndex();\n          final Node typeVariableNode = typeVariableNodes[x];\n\n          typeVariableNode.addEdge(constraintNode);\n\n          for (int k = j + 1; k < bound.length; k++) {\n            final int y = bound[k].getIndex();\n\n            typeVariableNode.addEdge(typeVariableNodes[y]);\n          }\n        }\n\n        boundVariables.put(constraint, boundVars);\n      }\n    }\n\n    final LinkedList<HashSet<PsiTypeVariable>> clusters = myTypeVariableFactory.getClusters();\n\n    for (final Iterator<HashSet<PsiTypeVariable>> c=clusters.iterator(); c.hasNext();){\n      final HashSet<PsiTypeVariable> cluster = c.next();\n      Node prev = null;\n\n      for (final Iterator<PsiTypeVariable> v=cluster.iterator(); v.hasNext();){\n        final Node curr = typeVariableNodes[v.next().getIndex()];\n\n        if (prev != null){\n          prev.addEdge(curr);\n        }\n\n        prev = curr;\n      }\n    }\n\n    int currComponent = 0;\n\n    for (int i = 0; i < typeVariableNodes.length; i++) {\n      final Node node = typeVariableNodes[i];\n\n      if (node.myComponent == -1) {\n        final int component = currComponent;\n        new Object() {\n          void selectComponent(final Node n) {\n            final LinkedList<Node> frontier = new LinkedList<Node>();\n\n            frontier.addFirst(n);\n\n            while (frontier.size() > 0) {\n              final Node curr = frontier.removeFirst();\n\n              curr.myComponent = component;\n\n              for (Iterator<Node> i = curr.myNeighbours.iterator(); i.hasNext();) {\n                final Node p = i.next();\n\n                if (p.myComponent == -1) {\n                  frontier.addFirst(p);\n                }\n              }\n            }\n          }\n        }.selectComponent(node);\n\n        currComponent++;\n      }\n    }\n\n    final System[] systems = new System[currComponent];\n\n    for (int i = 0; i < constraintNodes.length; i++) {\n      final Node node = constraintNodes[i];\n      final Constraint constraint = node.getConstraint();\n      final int index = node.myComponent;\n\n      if (systems[index] == null) {\n        systems[index] = new System(myProject, myElements, myTypes, myTypeVariableFactory);\n      }\n\n      systems[index].addConstraint(constraint, boundVariables.get(constraint));\n    }\n\n    return systems;\n  }","id":53702,"modified_method":"public System[] isolate() {\n    class Node {\n      int myComponent = -1;\n      Constraint myConstraint;\n      HashSet<Node> myNeighbours = new HashSet<Node>();\n\n      public Node() {\n        myConstraint = null;\n      }\n\n      public Node(final Constraint c) {\n        myConstraint = c;\n      }\n\n      public Constraint getConstraint() {\n        return myConstraint;\n      }\n\n      public void addEdge(final Node n) {\n        if (!myNeighbours.contains(n)) {\n          myNeighbours.add(n);\n          n.addEdge(this);\n        }\n      }\n    }\n\n    final Node[] typeVariableNodes = new Node[myTypeVariableFactory.getNumber()];\n    final Node[] constraintNodes = new Node[myConstraints.size()];\n    final HashMap<Constraint, HashSet<PsiTypeVariable>> boundVariables = new HashMap<Constraint, HashSet<PsiTypeVariable>>();\n\n    for (int i = 0; i < typeVariableNodes.length; i++) {\n      typeVariableNodes[i] = new Node();\n    }\n\n    {\n      int j = 0;\n\n      for (Iterator<Constraint> c = myConstraints.iterator(); c.hasNext();) {\n        constraintNodes[j++] = new Node(c.next());\n      }\n    }\n\n    {\n      int l = 0;\n\n      for (Iterator<Constraint> i = myConstraints.iterator(); i.hasNext();) {\n        final HashSet<PsiTypeVariable> boundVars = new HashSet<PsiTypeVariable>();\n\n        final Constraint constraint = i.next();\n        final Node constraintNode = constraintNodes[l++];\n\n        new Object() {\n          void visit(final Constraint c) {\n            visit(c.getLeft());\n            visit(c.getRight());\n          }\n\n          private void visit(final PsiType t) {\n            if (t instanceof PsiTypeVariable) {\n              boundVars.add((PsiTypeVariable)t);\n            }\n            else if (t instanceof PsiArrayType) {\n              visit(((PsiArrayType)t).getDeepComponentType());\n            }\n            else if (t instanceof PsiClassType) {\n              final PsiSubstitutor subst = Util.resolveType(t).getSubstitutor();\n\n              for (Iterator<PsiType> j = subst.getSubstitutionMap().values().iterator(); j.hasNext();) {\n                visit(j.next());\n              }\n            }\n            else if (t instanceof PsiTypeIntersection) {\n              visit(((PsiTypeIntersection)t).getLeft());\n              visit(((PsiTypeIntersection)t).getRight());\n            }\n          }\n        }.visit(constraint);\n\n        final PsiTypeVariable[] bound = boundVars.toArray(new PsiTypeVariable[]{});\n\n        for (int j = 0; j < bound.length; j++) {\n          final int x = bound[j].getIndex();\n          final Node typeVariableNode = typeVariableNodes[x];\n\n          typeVariableNode.addEdge(constraintNode);\n\n          for (int k = j + 1; k < bound.length; k++) {\n            final int y = bound[k].getIndex();\n\n            typeVariableNode.addEdge(typeVariableNodes[y]);\n          }\n        }\n\n        boundVariables.put(constraint, boundVars);\n      }\n    }\n\n    final LinkedList<HashSet<PsiTypeVariable>> clusters = myTypeVariableFactory.getClusters();\n\n    for (final Iterator<HashSet<PsiTypeVariable>> c=clusters.iterator(); c.hasNext();){\n      final HashSet<PsiTypeVariable> cluster = c.next();\n      Node prev = null;\n\n      for (final Iterator<PsiTypeVariable> v=cluster.iterator(); v.hasNext();){\n        final Node curr = typeVariableNodes[v.next().getIndex()];\n\n        if (prev != null){\n          prev.addEdge(curr);\n        }\n\n        prev = curr;\n      }\n    }\n\n    int currComponent = 0;\n\n    for (int i = 0; i < typeVariableNodes.length; i++) {\n      final Node node = typeVariableNodes[i];\n\n      if (node.myComponent == -1) {\n        final int component = currComponent;\n        new Object() {\n          void selectComponent(final Node n) {\n            final LinkedList<Node> frontier = new LinkedList<Node>();\n\n            frontier.addFirst(n);\n\n            while (frontier.size() > 0) {\n              final Node curr = frontier.removeFirst();\n\n              curr.myComponent = component;\n\n              for (Iterator<Node> i = curr.myNeighbours.iterator(); i.hasNext();) {\n                final Node p = i.next();\n\n                if (p.myComponent == -1) {\n                  frontier.addFirst(p);\n                }\n              }\n            }\n          }\n        }.selectComponent(node);\n\n        currComponent++;\n      }\n    }\n\n    final System[] systems = new System[currComponent];\n\n    for (int i = 0; i < constraintNodes.length; i++) {\n      final Node node = constraintNodes[i];\n      final Constraint constraint = node.getConstraint();\n      final int index = node.myComponent;\n\n      if (systems[index] == null) {\n        systems[index] = new System(myProject, myElements, myTypes, myTypeVariableFactory, mySettings);\n      }\n\n      systems[index].addConstraint(constraint, boundVariables.get(constraint));\n    }\n\n    return systems;\n  }","commit_id":"4b0a2b79d29c1e48fd6895fd9df578289b2f51b8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void addUsage(final System system, final PsiElement element) {\n\n    class TypeEvaluator {\n      PsiType valuateType(final PsiExpression expr) {\n        return evaluateType(expr);\n      }\n\n      PsiType evaluateType(final PsiExpression expr) {\n        if (expr instanceof PsiArrayAccessExpression && !mySettings.preserveRawArrays()) {\n          final PsiType at = evaluateType(((PsiArrayAccessExpression)expr).getArrayExpression());\n\n          if (at instanceof PsiArrayType) {\n            return ((PsiArrayType)at).getComponentType();\n          }\n        }\n        else if (expr instanceof PsiAssignmentExpression) {\n          return evaluateType(((PsiAssignmentExpression)expr).getLExpression());\n        }\n        else if (expr instanceof PsiCallExpression) {\n          final PsiCallExpression call = ((PsiCallExpression)expr);\n          final PsiMethod method = call.resolveMethod();\n\n          if (method != null) {\n            final PsiClass aClass = method.getContainingClass();\n            final PsiTypeParameter[] aTypeParms = method.getTypeParameterList().getTypeParameters();\n            final PsiParameter[] parameters = method.getParameterList().getParameters();\n            final PsiExpression[] arguments = call.getArgumentList().getExpressions();\n            final PsiExpression aQualifier = expr instanceof PsiMethodCallExpression\n              ? ((PsiMethodCallExpression)expr).getMethodExpression().getQualifierExpression()\n              : null;\n            final HashSet<PsiTypeParameter> typeParameters = new HashSet<PsiTypeParameter>();\n\n            for (int i = 0; i < aTypeParms.length; i++) {\n              typeParameters.add(aTypeParms[i]);\n            }\n\n            PsiSubstitutor qualifierSubstitutor = PsiSubstitutor.EMPTY;\n            PsiSubstitutor supertypeSubstitutor = PsiSubstitutor.EMPTY;\n\n            PsiType aType = null;\n\n            if (method.isConstructor()) {\n              if (isCooked(expr)) {\n                aType = getType(expr);\n\n                qualifierSubstitutor = Util.resolveType(aType).getSubstitutor();\n              }\n              else {\n                final PsiClass cClass = method.getContainingClass();\n                final PsiTypeParameter[] classParms = Util.getTypeParametersList(cClass);\n\n                for (int i = 0; i < classParms.length; i++) {\n                  final PsiTypeParameter classParm = classParms[i];\n                  final PsiTypeVariable var = myTypeVariableFactory.create();\n\n                  qualifierSubstitutor = qualifierSubstitutor.put(classParm, var);\n                }\n\n                aType = myManager.getElementFactory().createType(method.getContainingClass(), qualifierSubstitutor);\n              }\n            }\n            else {\n              aType = getType(method);\n            }\n\n            if (aQualifier != null) {\n              final PsiType qualifierType = evaluateType(aQualifier);\n              final PsiClassType.ClassResolveResult result = Util.resolveType(qualifierType);\n\n              if (result.getElement() != null) {\n                final PsiClass qualifierClass = result.getElement();\n\n                qualifierSubstitutor = result.getSubstitutor();\n\n                if (!qualifierClass.equals(aClass)) {\n                  supertypeSubstitutor = TypeConversionUtil.getSuperClassSubstitutor(aClass, qualifierClass, PsiSubstitutor.EMPTY);\n\n                  aType = Util.substituteType(aType, supertypeSubstitutor);\n                }\n\n                aType = Util.substituteType(aType, qualifierSubstitutor);\n              }\n            }\n\n            // Bind method type parameters here. Remember: intersection types are needed :((\n            // Example:\n            //     <T extends Foo> T foo (List<T> a, List<T> b) {...}\n            //     class List<X extends Foo> {...}\n            //\n            //     List x; -- List<'a> x\n            //     List y; -- List<'b> y\n            //\n            //     foo (x, y) -- type is 'a ^ 'b. Woof, woof....\n\n            final HashMap<PsiTypeParameter, PsiType> mapping = new HashMap<PsiTypeParameter, PsiType>();\n\n            for (int i = 0; i < Math.min(parameters.length, arguments.length); i++) {\n              final PsiType argumenType = evaluateType(arguments[i]);\n\n              PsiType parmType = null;\n\n              if (isCooked(parameters[i])) {\n                parmType = getType(parameters[i]);\n                system.addSubtypeConstraint(argumenType, parmType);\n              }\n              else {\n                parmType = Util.substituteType(Util.substituteType(parameters[i].getType(), supertypeSubstitutor), qualifierSubstitutor);\n\n                if (!Util.bindsTypeVariables(parmType)) {\n                  parmType = Util.banalize(parmType);\n                }\n\n                final PsiType theType =\n                new Object() {\n                  PsiType introduceAdditionalTypeVariables(final PsiType type,\n                                                           final PsiSubstitutor qualifier,\n                                                           final PsiSubstitutor supertype) {\n                    final int level = Util.getArrayLevel(type);\n                    final PsiClassType.ClassResolveResult result = Util.resolveType(type);\n                    final PsiClass aClass = result.getElement();\n\n                    if (aClass != null) {\n                      if (aClass instanceof PsiTypeParameter) {\n                        final PsiTypeParameter tp = ((PsiTypeParameter)aClass);\n                        final PsiClassType[] extypes = tp.getExtendsListTypes();\n\n                        PsiType pv = mapping.get(tp);\n\n                        if (pv == null) {\n                          pv = myTypeVariableFactory.create();\n                          mapping.put(tp, pv);\n                        }\n\n                        for (int j = 0; j < extypes.length; j++) {\n                          final PsiClassType ext = extypes[j];\n                          final PsiType extype = Util.substituteType(new Object() {\n                                                                       public PsiType substitute(final PsiType ext) {\n                                                                         final PsiClassType.ClassResolveResult result =\n                                                                         Util.resolveType(ext);\n                                                                         final PsiClass aClass = result.getElement();\n\n                                                                         if (aClass != null) {\n                                                                           if (aClass instanceof PsiTypeParameter) {\n                                                                             final PsiType type = mapping.get(aClass);\n\n                                                                             if (type != null) {\n                                                                               return type;\n                                                                             }\n\n                                                                             return ext;\n                                                                           }\n\n                                                                           final PsiSubstitutor aSubst = result.getSubstitutor();\n                                                                           PsiSubstitutor theSubst = PsiSubstitutor.EMPTY;\n\n                                                                           for (final Iterator<PsiTypeParameter> p =\n                                                                                aSubst.getSubstitutionMap().keySet().iterator();\n                                                                                p.hasNext();) {\n                                                                             final PsiTypeParameter parm = p.next();\n\n                                                                             PsiType type = aSubst.substitute(parm);\n\n                                                                             if (type != null) {\n                                                                               type = substitute(type);\n                                                                             }\n\n                                                                             theSubst = theSubst.put(parm, type);\n                                                                           }\n\n                                                                           return aClass.getManager().getElementFactory()\n                                                                             .createType(aClass, theSubst);\n                                                                         }\n\n                                                                         return ext;\n                                                                       }\n                                                                     }.substitute(ext), qualifier);\n                          system.addSubtypeConstraint(pv, extype);\n                        }\n\n                        return Util.createArrayType(pv, level);\n                      }\n\n                      final Map<PsiTypeParameter, PsiType> substitutionMap = result.getSubstitutor().getSubstitutionMap();\n\n                      PsiSubstitutor theSubst = PsiSubstitutor.EMPTY;\n\n                      for (Iterator<PsiTypeParameter> t = substitutionMap.keySet().iterator(); t.hasNext();) {\n                        final PsiTypeParameter p = t.next();\n                        final PsiType pType = substitutionMap.get(p);\n\n                        if (pType instanceof PsiWildcardType) {\n                          final PsiWildcardType wildcard = ((PsiWildcardType)pType);\n                          final PsiType theBound = wildcard.getBound();\n\n                          if (theBound != null) {\n                            final PsiType bound = Util.substituteType(Util.substituteType(theBound, supertype), qualifier);\n\n                            if (Util.bindsTypeVariables(bound)) {\n                              final PsiType var = myTypeVariableFactory.create();\n\n                              if (wildcard.isExtends()) {\n                                system.addSubtypeConstraint(var, bound);\n                              }\n                              else {\n                                system.addSubtypeConstraint(bound, var);\n                              }\n\n                              theSubst = theSubst.put(p, var);\n                            }\n                            else if (Util.bindsTypeParameters(bound, typeParameters)) {\n                              final PsiType var = myTypeVariableFactory.create();\n                              PsiSubstitutor subst = PsiSubstitutor.EMPTY;\n\n                              for (int i = 0; i < aTypeParms.length; i++) {\n                                final PsiTypeParameter aTypeParm = aTypeParms[i];\n\n                                PsiType parmVar = mapping.get(aTypeParm);\n\n                                if (parmVar == null) {\n                                  parmVar = myTypeVariableFactory.create();\n                                  mapping.put(aTypeParm, parmVar);\n                                }\n\n                                subst = subst.put(aTypeParm, parmVar);\n                              }\n\n                              final PsiType bnd = Util.substituteType(bound, subst);\n\n                              if (wildcard.isExtends()) {\n                                system.addSubtypeConstraint(bnd, var);\n                              }\n                              else {\n                                system.addSubtypeConstraint(var, bnd);\n                              }\n\n                              theSubst = theSubst.put(p, var);\n                            }\n                            else {\n                              theSubst = theSubst.put(p, pType);\n                            }\n                          }\n                        }\n                        else {\n                          theSubst = theSubst.put(p, introduceAdditionalTypeVariables(pType, qualifier, supertype));\n                        }\n                      }\n\n                      return Util.createArrayType(aClass.getManager().getElementFactory().createType(aClass, theSubst), level);\n                    }\n\n                    return Util.createArrayType(type, level);\n                  }\n                }.introduceAdditionalTypeVariables(parmType, qualifierSubstitutor, supertypeSubstitutor);\n\n                system.addSubtypeConstraint(argumenType, theType);\n              }\n\n              //new Object() {\n              //  private void update(final PsiTypeParameter p, final PsiType t) {\n              //    final PsiType binding = mapping.get(p);\n              //\n              //    if (binding == null) {\n              //      mapping.put(p, t);\n              //    }\n              //    else if (t != null) {\n              //      mapping.put(p, new PsiTypeIntersection(binding, t));\n              //    }\n              //  }\n\n              //  void bindTypeParameters(final PsiType formal, PsiType actual) {\n              //    final PsiClassType.ClassResolveResult resultF = Util.resolveType(formal);\n              //    final PsiClass classF = resultF.getElement();\n              //\n              //    if (actual instanceof PsiArrayType){\n              //      actual = ((PsiArrayType)actual).getDeepComponentType();\n              //    }\n              //\n              //    if (classF != null) {\n              //      if (classF instanceof PsiTypeParameter) {\n              //        update((PsiTypeParameter)classF, actual);\n              //        return;\n              //      }\n              //\n              //      final PsiClassType.ClassResolveResult resultA = Util.resolveType(actual);\n              //\n              //      if (resultA.getElement() == null) {\n              //        return;\n              //      }\n              //\n              //      final PsiClass classA = resultA.getElement();\n              //\n              //      if (!classA.equals(classF)) {\n              //        final PsiSubstitutor superClassSubstitutor = TypeConversionUtil.getSuperClassSubstitutor(classF, classA,\n              //                                                                                                 PsiSubstitutor.EMPTY);\n              //        final PsiType aligned = classF.getManager().getElementFactory().createType(classF, superClassSubstitutor);\n              //\n              //        bindTypeParameters(formal, Util.substituteType(aligned, resultA.getSubstitutor()));\n              //      }\n              //\n              //      final PsiTypeParameter[] typeParms = Util.getTypeParametersList(classA);\n              //      final PsiSubstitutor substA = resultA.getSubstitutor();\n              //      final PsiSubstitutor substF = resultF.getSubstitutor();\n              //\n              //      for (int i = 0; i < typeParms.length; i++) {\n              //        PsiTypeParameter typeParm = typeParms[i];\n              //        bindTypeParameters(substF.substitute(typeParm), substA.substitute(typeParm));\n              //      }\n              //    }\n              //  }\n              //}.bindTypeParameters(parmType, evaluateType(actualParms[i]));\n            }\n\n            PsiSubstitutor theSubst = PsiSubstitutor.EMPTY;\n\n            for (Iterator<PsiTypeParameter> i = mapping.keySet().iterator(); i.hasNext();) {\n              final PsiTypeParameter parm = i.next();\n              final PsiType type = mapping.get(parm);\n\n              theSubst = theSubst.put(parm, type);\n            }\n\n            return Util.substituteType(aType, theSubst);\n          }\n        }\n        else if (expr instanceof PsiParenthesizedExpression) {\n          return evaluateType(((PsiParenthesizedExpression)expr).getExpression());\n        }\n        else if (expr instanceof PsiConditionalExpression) {\n          return evaluateType(((PsiConditionalExpression)expr).getThenExpression());\n        }\n        else if (expr instanceof PsiNewExpression) {\n          final PsiExpression qualifier = ((PsiNewExpression)expr).getQualifier();\n\n          if (qualifier != null) {\n            final PsiClassType.ClassResolveResult qualifierResult = Util.resolveType(evaluateType(qualifier));\n\n            if (qualifierResult.getElement() != null) {\n              final PsiSubstitutor qualifierSubs = qualifierResult.getSubstitutor();\n              final PsiClassType.ClassResolveResult result = Util.resolveType(expr.getType());\n\n              if (result.getElement() != null) {\n                final PsiClass aClass = result.getElement();\n\n                return aClass.getManager().getElementFactory().createType(aClass, result.getSubstitutor().putAll(qualifierSubs));\n              }\n            }\n          }\n        }\n        else if (expr instanceof PsiReferenceExpression) {\n          final PsiReferenceExpression ref = ((PsiReferenceExpression)expr);\n          final PsiExpression qualifier = ref.getQualifierExpression();\n\n          if (qualifier == null) {\n            return getType(ref.resolve());\n          }\n          else {\n            final PsiType qualifierType = evaluateType(qualifier);\n            final PsiElement element = ref.resolve();\n\n            final PsiClassType.ClassResolveResult result = Util.resolveType(qualifierType);\n\n            if (result.getElement() != null) {\n              final PsiClass aClass = result.getElement();\n              final PsiSubstitutor aSubst = result.getSubstitutor();\n\n              if (element instanceof PsiField) {\n                final PsiField field = (PsiField)element;\n                final PsiType fieldType = getType(field);\n                final PsiClass superClass = field.getContainingClass();\n\n                PsiType aType = fieldType;\n\n                if (!aClass.equals(superClass)) {\n                  aType =\n                  Util.substituteType(aType, TypeConversionUtil.getSuperClassSubstitutor(superClass, aClass, PsiSubstitutor.EMPTY));\n                }\n\n                return Util.substituteType(aType, aSubst);\n              }\n            }\n            else if (element != null) {\n              return getType(element);\n            }\n          }\n        }\n\n        return getType(expr);\n      }\n    }\n\n    final TypeEvaluator e = new TypeEvaluator();\n\n    if (element instanceof PsiVariable) {\n      final PsiExpression initializer = ((PsiVariable)element).getInitializer();\n\n      if (initializer != null) {\n        final PsiExpression core = new Object() {\n          PsiExpression undress(final PsiExpression expr) {\n            if (expr instanceof PsiParenthesizedExpression) {\n              return undress(((PsiParenthesizedExpression)expr).getExpression());\n            }\n\n            return expr;\n          }\n        }.undress(initializer);\n\n        if (core instanceof PsiArrayInitializerExpression) {\n          final PsiExpression[] inits = ((PsiArrayInitializerExpression)core).getInitializers();\n          final PsiType type = getType(element);\n\n          for (int i = 0; i < inits.length; i++) {\n            system.addSubtypeConstraint(e.valuateType(inits[i]).createArrayType(), type);\n          }\n        }\n        else if (core instanceof PsiNewExpression) {\n          final PsiArrayInitializerExpression init = ((PsiNewExpression)core).getArrayInitializer();\n\n          if (init != null) {\n            final PsiExpression[] inits = init.getInitializers();\n            final PsiType type = getType(element);\n\n            for (int i = 0; i < inits.length; i++) {\n              system.addSubtypeConstraint(e.valuateType(inits[i]).createArrayType(), type);\n            }\n          }\n\n          system.addSubtypeConstraint(e.valuateType(core), getType(element));\n        }\n        else {\n          system.addSubtypeConstraint(e.valuateType(core), getType(element));\n        }\n      }\n\n      if (element instanceof PsiParameter) {\n        final PsiMethod method = PsiTreeUtil.getParentOfType(element, PsiMethod.class);\n\n        if (method != null) {\n          final PsiSearchHelper helper = myManager.getSearchHelper();\n          final PsiReference[] refs = helper.findReferences(method, helper.getUseScope(method), true);\n\n          for (int i = 0; i < refs.length; i++) {\n            final PsiElement ref = refs[i].getElement();\n\n            if (ref != null) {\n              final PsiCallExpression call = PsiTreeUtil.getParentOfType(ref, PsiCallExpression.class);\n\n              if (call != null) {\n                final PsiExpression arg = call.getArgumentList().getExpressions()[method.getParameterList().getParameterIndex(\n                  (PsiParameter)element)];\n\n                system.addSubtypeConstraint(e.valuateType(arg), myTypes.get(element));\n              }\n            }\n          }\n        }\n      }\n      return;\n    }\n    else if (element instanceof PsiMethod) {\n      final PsiType reType = getType(element);\n\n      element.accept(new PsiRecursiveElementVisitor() {\n                       public void visitReturnStatement(final PsiReturnStatement statement) {\n                         super.visitReturnStatement(statement);\n\n                         final PsiExpression retExpr = statement.getReturnValue();\n\n                         if (retExpr != null) {\n                           system.addSubtypeConstraint(e.valuateType(retExpr), reType);\n                         }\n                       }\n                     }\n      );\n\n      return;\n    }\n\n    final PsiStatement root = (PsiStatement)PsiTreeUtil.getParentOfType(element, PsiStatement.class);\n\n    if (root != null) {\n      final PsiAnchor anchor = new PsiAnchor(root);\n\n      if (!myVisitedConstructions.contains(anchor)) {\n        root.accept(new PsiRecursiveElementVisitor() {\n                      public void visitAssignmentExpression(final PsiAssignmentExpression expression) {\n                        super.visitAssignmentExpression(expression);\n\n                        system.addSubtypeConstraint(e.valuateType(expression.getRExpression()), e.valuateType(expression.getLExpression()));\n                      }\n\n                      public void visitConditionalExpression(final PsiConditionalExpression expression) {\n                        super.visitConditionalExpression(expression);\n\n                        system.addSubtypeConstraint(e.valuateType(expression.getThenExpression()),\n                                                    e.valuateType(expression.getElseExpression()));\n                        system.addSubtypeConstraint(e.valuateType(expression.getElseExpression()),\n                                                    e.valuateType(expression.getThenExpression()));\n                      }\n\n                      //public void visitMethodCallExpression(final PsiMethodCallExpression expression) {\n                      //  super.visitMethodCallExpression(expression);\n                      //  e.valuateType(expression);\n                      //}\n\n                      public void visitCallExpression(final PsiCallExpression expression) {\n                        super.visitCallExpression(expression);\n                        e.valuateType(expression);\n                      }\n\n                      public void visitReturnStatement(final PsiReturnStatement statement) {\n                        super.visitReturnStatement(statement);\n\n                        final PsiMethod method = PsiTreeUtil.getParentOfType(statement, PsiMethod.class);\n\n                        if (method != null) {\n                          system.addSubtypeConstraint(e.valuateType(statement.getReturnValue()), getType(method));\n                        }\n                      }\n\n                      public void visitTypeCastExpression(final PsiTypeCastExpression expression) {\n                        super.visitTypeCastExpression(expression);\n\n                        system.addSubtypeConstraint(e.valuateType(expression.getOperand()), e.valuateType(expression));\n                      }\n\n                      public void visitNewExpression(final PsiNewExpression expression) {\n                        super.visitNewExpression(expression);\n\n                        final PsiArrayInitializerExpression init = expression.getArrayInitializer();\n\n                        if (init != null) {\n                          final PsiExpression[] inits = init.getInitializers();\n                          final PsiType type = getType(expression);\n\n                          for (int i = 0; i < inits.length; i++) {\n                            system.addSubtypeConstraint(e.valuateType(inits[i]).createArrayType(), type);\n                          }\n                        }\n                      }\n\n                      public void visitReferenceExpression(final PsiReferenceExpression expression) {\n                        final PsiExpression qualifierExpression = expression.getQualifierExpression();\n\n                        if (qualifierExpression != null) {\n                          qualifierExpression.accept(this);\n                        }\n                      }\n                    });\n\n        myVisitedConstructions.add(anchor);\n      }\n    }\n  }","id":53703,"modified_method":"private void addUsage(final System system, final PsiElement element) {\n\n    class TypeEvaluator {\n      PsiType valuateType(final PsiExpression expr) {\n        return evaluateType(expr);\n      }\n\n      PsiType evaluateType(final PsiExpression expr) {\n        if (expr instanceof PsiArrayAccessExpression && !mySettings.preserveRawArrays()) {\n          final PsiType at = evaluateType(((PsiArrayAccessExpression)expr).getArrayExpression());\n\n          if (at instanceof PsiArrayType) {\n            return ((PsiArrayType)at).getComponentType();\n          }\n        }\n        else if (expr instanceof PsiAssignmentExpression) {\n          return evaluateType(((PsiAssignmentExpression)expr).getLExpression());\n        }\n        else if (expr instanceof PsiCallExpression) {\n          final PsiCallExpression call = ((PsiCallExpression)expr);\n          final PsiMethod method = call.resolveMethod();\n\n          if (method != null) {\n            final PsiClass aClass = method.getContainingClass();\n            final PsiTypeParameter[] aTypeParms = method.getTypeParameterList().getTypeParameters();\n            final PsiParameter[] parameters = method.getParameterList().getParameters();\n            final PsiExpression[] arguments = call.getArgumentList().getExpressions();\n            final PsiExpression aQualifier = expr instanceof PsiMethodCallExpression\n              ? ((PsiMethodCallExpression)expr).getMethodExpression().getQualifierExpression()\n              : null;\n            final HashSet<PsiTypeParameter> typeParameters = new HashSet<PsiTypeParameter>();\n\n            for (int i = 0; i < aTypeParms.length; i++) {\n              typeParameters.add(aTypeParms[i]);\n            }\n\n            PsiSubstitutor qualifierSubstitutor = PsiSubstitutor.EMPTY;\n            PsiSubstitutor supertypeSubstitutor = PsiSubstitutor.EMPTY;\n\n            PsiType aType = null;\n\n            if (method.isConstructor()) {\n              if (isCooked(expr)) {\n                aType = getType(expr);\n\n                qualifierSubstitutor = Util.resolveType(aType).getSubstitutor();\n              }\n              else {\n                final PsiClass cClass = method.getContainingClass();\n                final PsiTypeParameter[] classParms = Util.getTypeParametersList(cClass);\n\n                for (int i = 0; i < classParms.length; i++) {\n                  final PsiTypeParameter classParm = classParms[i];\n                  final PsiTypeVariable var = myTypeVariableFactory.create();\n\n                  qualifierSubstitutor = qualifierSubstitutor.put(classParm, var);\n                }\n\n                aType = myManager.getElementFactory().createType(method.getContainingClass(), qualifierSubstitutor);\n              }\n            }\n            else {\n              aType = getType(method);\n            }\n\n            if (aQualifier != null) {\n              final PsiType qualifierType = evaluateType(aQualifier);\n              final PsiClassType.ClassResolveResult result = Util.resolveType(qualifierType);\n\n              if (result.getElement() != null) {\n                final PsiClass qualifierClass = result.getElement();\n\n                qualifierSubstitutor = result.getSubstitutor();\n\n                if (!qualifierClass.equals(aClass)) {\n                  supertypeSubstitutor = TypeConversionUtil.getSuperClassSubstitutor(aClass, qualifierClass, PsiSubstitutor.EMPTY);\n\n                  aType = Util.substituteType(aType, supertypeSubstitutor);\n                }\n\n                aType = Util.substituteType(aType, qualifierSubstitutor);\n              }\n            }\n\n            // Bind method type parameters here. Remember: intersection types are needed :((\n            // Example:\n            //     <T extends Foo> T foo (List<T> a, List<T> b) {...}\n            //     class List<X extends Foo> {...}\n            //\n            //     List x; -- List<'a> x\n            //     List y; -- List<'b> y\n            //\n            //     foo (x, y) -- type is 'a ^ 'b. Woof, woof....\n\n            final HashMap<PsiTypeParameter, PsiType> mapping = new HashMap<PsiTypeParameter, PsiType>();\n\n            for (int i = 0; i < Math.min(parameters.length, arguments.length); i++) {\n              final PsiType argumenType = evaluateType(arguments[i]);\n\n              PsiType parmType = null;\n\n              if (isCooked(parameters[i])) {\n                parmType = getType(parameters[i]);\n                system.addSubtypeConstraint(argumenType, parmType);\n              }\n              else {\n                parmType = Util.substituteType(Util.substituteType(parameters[i].getType(), supertypeSubstitutor), qualifierSubstitutor);\n\n                if (!Util.bindsTypeVariables(parmType)) {\n                  parmType = Util.banalize(parmType);\n                }\n\n                final PsiType theType =\n                new Object() {\n                  PsiType introduceAdditionalTypeVariables(final PsiType type,\n                                                           final PsiSubstitutor qualifier,\n                                                           final PsiSubstitutor supertype) {\n                    final int level = Util.getArrayLevel(type);\n                    final PsiClassType.ClassResolveResult result = Util.resolveType(type);\n                    final PsiClass aClass = result.getElement();\n\n                    if (aClass != null) {\n                      if (aClass instanceof PsiTypeParameter) {\n                        final PsiTypeParameter tp = ((PsiTypeParameter)aClass);\n                        final PsiClassType[] extypes = tp.getExtendsListTypes();\n\n                        PsiType pv = mapping.get(tp);\n\n                        if (pv == null) {\n                          pv = myTypeVariableFactory.create();\n                          mapping.put(tp, pv);\n                        }\n\n                        for (int j = 0; j < extypes.length; j++) {\n                          final PsiClassType ext = extypes[j];\n                          final PsiType extype = Util.substituteType(new Object() {\n                                                                       public PsiType substitute(final PsiType ext) {\n                                                                         final PsiClassType.ClassResolveResult result =\n                                                                         Util.resolveType(ext);\n                                                                         final PsiClass aClass = result.getElement();\n\n                                                                         if (aClass != null) {\n                                                                           if (aClass instanceof PsiTypeParameter) {\n                                                                             final PsiType type = mapping.get(aClass);\n\n                                                                             if (type != null) {\n                                                                               return type;\n                                                                             }\n\n                                                                             return ext;\n                                                                           }\n\n                                                                           final PsiSubstitutor aSubst = result.getSubstitutor();\n                                                                           PsiSubstitutor theSubst = PsiSubstitutor.EMPTY;\n\n                                                                           for (final Iterator<PsiTypeParameter> p =\n                                                                                aSubst.getSubstitutionMap().keySet().iterator();\n                                                                                p.hasNext();) {\n                                                                             final PsiTypeParameter parm = p.next();\n\n                                                                             PsiType type = aSubst.substitute(parm);\n\n                                                                             if (type != null) {\n                                                                               type = substitute(type);\n                                                                             }\n\n                                                                             theSubst = theSubst.put(parm, type);\n                                                                           }\n\n                                                                           return aClass.getManager().getElementFactory()\n                                                                             .createType(aClass, theSubst);\n                                                                         }\n\n                                                                         return ext;\n                                                                       }\n                                                                     }.substitute(ext), qualifier);\n                          system.addSubtypeConstraint(pv, extype);\n                        }\n\n                        return Util.createArrayType(pv, level);\n                      }\n\n                      final Map<PsiTypeParameter, PsiType> substitutionMap = result.getSubstitutor().getSubstitutionMap();\n\n                      PsiSubstitutor theSubst = PsiSubstitutor.EMPTY;\n\n                      for (Iterator<PsiTypeParameter> t = substitutionMap.keySet().iterator(); t.hasNext();) {\n                        final PsiTypeParameter p = t.next();\n                        final PsiType pType = substitutionMap.get(p);\n\n                        if (pType instanceof PsiWildcardType) {\n                          final PsiWildcardType wildcard = ((PsiWildcardType)pType);\n                          final PsiType theBound = wildcard.getBound();\n\n                          if (theBound != null) {\n                            final PsiType bound = Util.substituteType(Util.substituteType(theBound, supertype), qualifier);\n\n                            if (Util.bindsTypeVariables(bound)) {\n                              final PsiType var = myTypeVariableFactory.create();\n\n                              if (wildcard.isExtends()) {\n                                system.addSubtypeConstraint(var, bound);\n                              }\n                              else {\n                                system.addSubtypeConstraint(bound, var);\n                              }\n\n                              theSubst = theSubst.put(p, var);\n                            }\n                            else if (Util.bindsTypeParameters(bound, typeParameters)) {\n                              final PsiType var = myTypeVariableFactory.create();\n                              PsiSubstitutor subst = PsiSubstitutor.EMPTY;\n\n                              for (int i = 0; i < aTypeParms.length; i++) {\n                                final PsiTypeParameter aTypeParm = aTypeParms[i];\n\n                                PsiType parmVar = mapping.get(aTypeParm);\n\n                                if (parmVar == null) {\n                                  parmVar = myTypeVariableFactory.create();\n                                  mapping.put(aTypeParm, parmVar);\n                                }\n\n                                subst = subst.put(aTypeParm, parmVar);\n                              }\n\n                              final PsiType bnd = Util.substituteType(bound, subst);\n\n                              if (wildcard.isExtends()) {\n                                system.addSubtypeConstraint(bnd, var);\n                              }\n                              else {\n                                system.addSubtypeConstraint(var, bnd);\n                              }\n\n                              theSubst = theSubst.put(p, var);\n                            }\n                            else {\n                              theSubst = theSubst.put(p, pType);\n                            }\n                          }\n                        }\n                        else {\n                          theSubst = theSubst.put(p, introduceAdditionalTypeVariables(pType, qualifier, supertype));\n                        }\n                      }\n\n                      return Util.createArrayType(aClass.getManager().getElementFactory().createType(aClass, theSubst), level);\n                    }\n\n                    return Util.createArrayType(type, level);\n                  }\n                }.introduceAdditionalTypeVariables(parmType, qualifierSubstitutor, supertypeSubstitutor);\n\n                system.addSubtypeConstraint(argumenType, theType);\n              }\n            }\n\n            final PsiType rawType = expr.getType();\n\n            if (rawType != null) {\n              new Object() {\n                void traversePair(final PsiType aType, final PsiType rawType) {\n                  final PsiClassType.ClassResolveResult aResult = Util.resolveType(aType);\n                  final PsiClassType.ClassResolveResult rawResult = Util.resolveType(rawType);\n\n                  final PsiClass aClass = aResult.getElement();\n                  final PsiClass rawClass = rawResult.getElement();\n\n                  if (rawClass != null && aClass != null) {\n                    if (typeParameters.contains(aClass)) {\n                      final PsiTypeParameter parm = (PsiTypeParameter)aClass;\n\n                      if (mapping.get(parm) == null) {\n                        mapping.put(parm, rawType);\n                      }\n                      return;\n                    }\n\n                    final PsiSubstitutor rawSubst = rawResult.getSubstitutor();\n                    final PsiSubstitutor aSubat = aResult.getSubstitutor();\n\n                    for (final Iterator<PsiTypeParameter> p = rawSubst.getSubstitutionMap().keySet().iterator(); p.hasNext();) {\n                      final PsiTypeParameter parm = p.next();\n\n                      final PsiType a = aSubat.substitute(parm);\n                      final PsiType raw = rawSubst.substitute(parm);\n\n                      if (a != null && raw != null) {\n                        traversePair(a, raw);\n                      }\n                    }\n                  }\n                }\n              }.traversePair(aType, rawType);\n            }\n\n            PsiSubstitutor theSubst = PsiSubstitutor.EMPTY;\n\n            for (Iterator<PsiTypeParameter> i = mapping.keySet().iterator(); i.hasNext();) {\n              final PsiTypeParameter parm = i.next();\n              final PsiType type = mapping.get(parm);\n\n              theSubst = theSubst.put(parm, type);\n            }\n\n            return Util.substituteType(aType, theSubst);\n          }\n        }\n        else if (expr instanceof PsiParenthesizedExpression) {\n          return evaluateType(((PsiParenthesizedExpression)expr).getExpression());\n        }\n        else if (expr instanceof PsiConditionalExpression) {\n          return evaluateType(((PsiConditionalExpression)expr).getThenExpression());\n        }\n        else if (expr instanceof PsiNewExpression) {\n          final PsiExpression qualifier = ((PsiNewExpression)expr).getQualifier();\n\n          if (qualifier != null) {\n            final PsiClassType.ClassResolveResult qualifierResult = Util.resolveType(evaluateType(qualifier));\n\n            if (qualifierResult.getElement() != null) {\n              final PsiSubstitutor qualifierSubs = qualifierResult.getSubstitutor();\n              final PsiClassType.ClassResolveResult result = Util.resolveType(expr.getType());\n\n              if (result.getElement() != null) {\n                final PsiClass aClass = result.getElement();\n\n                return aClass.getManager().getElementFactory().createType(aClass, result.getSubstitutor().putAll(qualifierSubs));\n              }\n            }\n          }\n        }\n        else if (expr instanceof PsiReferenceExpression) {\n          final PsiReferenceExpression ref = ((PsiReferenceExpression)expr);\n          final PsiExpression qualifier = ref.getQualifierExpression();\n\n          if (qualifier == null) {\n            return getType(ref.resolve());\n          }\n          else {\n            final PsiType qualifierType = evaluateType(qualifier);\n            final PsiElement element = ref.resolve();\n\n            final PsiClassType.ClassResolveResult result = Util.resolveType(qualifierType);\n\n            if (result.getElement() != null) {\n              final PsiClass aClass = result.getElement();\n              final PsiSubstitutor aSubst = result.getSubstitutor();\n\n              if (element instanceof PsiField) {\n                final PsiField field = (PsiField)element;\n                final PsiType fieldType = getType(field);\n                final PsiClass superClass = field.getContainingClass();\n\n                PsiType aType = fieldType;\n\n                if (!aClass.equals(superClass) && field.isPhysical()) {\n                  aType =\n                  Util.substituteType(aType, TypeConversionUtil.getSuperClassSubstitutor(superClass, aClass, PsiSubstitutor.EMPTY));\n                }\n\n                return Util.substituteType(aType, aSubst);\n              }\n            }\n            else if (element != null) {\n              return getType(element);\n            }\n          }\n        }\n\n        return getType(expr);\n      }\n    }\n\n    final TypeEvaluator e = new TypeEvaluator();\n\n    if (element instanceof PsiVariable) {\n      final PsiExpression initializer = ((PsiVariable)element).getInitializer();\n\n      if (initializer != null) {\n        final PsiExpression core = new Object() {\n          PsiExpression undress(final PsiExpression expr) {\n            if (expr instanceof PsiParenthesizedExpression) {\n              return undress(((PsiParenthesizedExpression)expr).getExpression());\n            }\n\n            return expr;\n          }\n        }.undress(initializer);\n\n        if (core instanceof PsiArrayInitializerExpression) {\n          final PsiExpression[] inits = ((PsiArrayInitializerExpression)core).getInitializers();\n          final PsiType type = getType(element);\n\n          for (int i = 0; i < inits.length; i++) {\n            system.addSubtypeConstraint(e.valuateType(inits[i]).createArrayType(), type);\n          }\n        }\n        else if (core instanceof PsiNewExpression) {\n          final PsiArrayInitializerExpression init = ((PsiNewExpression)core).getArrayInitializer();\n\n          if (init != null) {\n            final PsiExpression[] inits = init.getInitializers();\n            final PsiType type = getType(element);\n\n            for (int i = 0; i < inits.length; i++) {\n              system.addSubtypeConstraint(e.valuateType(inits[i]).createArrayType(), type);\n            }\n          }\n\n          system.addSubtypeConstraint(e.valuateType(core), getType(element));\n        }\n        else {\n          system.addSubtypeConstraint(e.valuateType(core), getType(element));\n        }\n      }\n\n      if (element instanceof PsiParameter) {\n        final PsiMethod method = PsiTreeUtil.getParentOfType(element, PsiMethod.class);\n\n        if (method != null) {\n          final PsiSearchHelper helper = myManager.getSearchHelper();\n          final PsiReference[] refs = helper.findReferences(method, helper.getUseScope(method), true);\n\n          for (int i = 0; i < refs.length; i++) {\n            final PsiElement ref = refs[i].getElement();\n\n            if (ref != null) {\n              final PsiCallExpression call = PsiTreeUtil.getParentOfType(ref, PsiCallExpression.class);\n\n              if (call != null) {\n                final PsiExpression arg = call.getArgumentList().getExpressions()[method.getParameterList().getParameterIndex(\n                  (PsiParameter)element)];\n\n                system.addSubtypeConstraint(e.valuateType(arg), myTypes.get(element));\n              }\n            }\n          }\n        }\n      }\n      return;\n    }\n    else if (element instanceof PsiMethod) {\n      final PsiType reType = getType(element);\n\n      element.accept(new PsiRecursiveElementVisitor() {\n                       public void visitReturnStatement(final PsiReturnStatement statement) {\n                         super.visitReturnStatement(statement);\n\n                         final PsiExpression retExpr = statement.getReturnValue();\n\n                         if (retExpr != null) {\n                           system.addSubtypeConstraint(e.valuateType(retExpr), reType);\n                         }\n                       }\n                     }\n      );\n\n      return;\n    }\n\n    final PsiStatement root = (PsiStatement)PsiTreeUtil.getParentOfType(element, PsiStatement.class);\n\n    if (root != null) {\n      final PsiAnchor anchor = new PsiAnchor(root);\n\n      if (!myVisitedConstructions.contains(anchor)) {\n        root.accept(new PsiRecursiveElementVisitor() {\n                      public void visitAssignmentExpression(final PsiAssignmentExpression expression) {\n                        super.visitAssignmentExpression(expression);\n\n                        system.addSubtypeConstraint(e.valuateType(expression.getRExpression()), e.valuateType(expression.getLExpression()));\n                      }\n\n                      public void visitConditionalExpression(final PsiConditionalExpression expression) {\n                        super.visitConditionalExpression(expression);\n\n                        system.addSubtypeConstraint(e.valuateType(expression.getThenExpression()),\n                                                    e.valuateType(expression.getElseExpression()));\n                        system.addSubtypeConstraint(e.valuateType(expression.getElseExpression()),\n                                                    e.valuateType(expression.getThenExpression()));\n                      }\n\n                      //public void visitMethodCallExpression(final PsiMethodCallExpression expression) {\n                      //  super.visitMethodCallExpression(expression);\n                      //  e.valuateType(expression);\n                      //}\n\n                      public void visitCallExpression(final PsiCallExpression expression) {\n                        super.visitCallExpression(expression);\n                        e.valuateType(expression);\n                      }\n\n                      public void visitReturnStatement(final PsiReturnStatement statement) {\n                        super.visitReturnStatement(statement);\n\n                        final PsiMethod method = PsiTreeUtil.getParentOfType(statement, PsiMethod.class);\n\n                        if (method != null) {\n                          system.addSubtypeConstraint(e.valuateType(statement.getReturnValue()), getType(method));\n                        }\n                      }\n\n                      public void visitTypeCastExpression(final PsiTypeCastExpression expression) {\n                        super.visitTypeCastExpression(expression);\n\n                        system.addSubtypeConstraint(e.valuateType(expression.getOperand()), e.valuateType(expression));\n                      }\n\n                      public void visitNewExpression(final PsiNewExpression expression) {\n                        super.visitNewExpression(expression);\n\n                        final PsiArrayInitializerExpression init = expression.getArrayInitializer();\n\n                        if (init != null) {\n                          final PsiExpression[] inits = init.getInitializers();\n                          final PsiType type = getType(expression);\n\n                          for (int i = 0; i < inits.length; i++) {\n                            system.addSubtypeConstraint(e.valuateType(inits[i]).createArrayType(), type);\n                          }\n                        }\n                      }\n\n                      public void visitReferenceExpression(final PsiReferenceExpression expression) {\n                        final PsiExpression qualifierExpression = expression.getQualifierExpression();\n\n                        if (qualifierExpression != null) {\n                          qualifierExpression.accept(this);\n                        }\n                      }\n                    });\n\n        myVisitedConstructions.add(anchor);\n      }\n    }\n  }","commit_id":"4b0a2b79d29c1e48fd6895fd9df578289b2f51b8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public System build(final HashSet<PsiElement> victims) {\n    final PsiSearchHelper helper = myManager.getSearchHelper();\n\n    System system = new System(myProject, victims, myTypes, myTypeVariableFactory);\n\n    for (Iterator<PsiElement> i = victims.iterator(); i.hasNext();) {\n      final PsiElement element = i.next();\n\n      if (element instanceof PsiParameter) {\n        if (!verifyMethod(element, victims, helper)) {\n        continue;\n        }\n      }\n      else if (element instanceof PsiMethod) {\n        if (!verifyMethod(element, victims, helper)) {\n        continue;\n        }\n      }\n    }\n\n    PsiType definedType;\n\n    for (Iterator<PsiElement> i = victims.iterator(); i.hasNext();) {\n      final PsiElement element = i.next();\n\n      if (element instanceof PsiParameter) {\n        final PsiParameter p = myParameters.get(element);\n\n        if (p != null) {\n          setType(element, definedType = defineType(p));\n        }\n        else {\n        continue;\n        }\n      }\n      else if (element instanceof PsiMethod) {\n        final PsiMethod m = myMethods.get(element);\n\n        if (m != null) {\n          system.addSubtypeConstraint(defineType(element), definedType = defineType(m));\n        }\n        else {\n        continue;\n        }\n      }\n      else {\n        definedType = defineType(element);\n      }\n\n      addBoundConstraints(system, definedType, element);\n    }\n\n    for (Iterator<PsiElement> i = victims.iterator(); i.hasNext();) {\n      final PsiElement element = i.next();\n\n      if (element instanceof PsiParameter) {\n        final PsiParameter p = myParameters.get(element);\n\n        if (p == null) {\n        continue;\n        }\n      }\n      else if (element instanceof PsiMethod) {\n        final PsiMethod m = myMethods.get(element);\n\n        if (m == null) {\n        continue;\n        }\n      }\n\n      addUsage(system, element);\n\n      if (!(element instanceof PsiExpression)) {\n        final PsiReference[] refs = helper.findReferences(element, helper.getUseScope(element), true);\n\n        for (int k = 0; k < refs.length; k++) {\n          final PsiElement ref = refs[k].getElement();\n\n          if (ref != null) {\n            addUsage(system, ref);\n          }\n        }\n      }\n    }\n\n    return system;\n  }","id":53704,"modified_method":"public System build(final HashSet<PsiElement> victims) {\n    final PsiSearchHelper helper = myManager.getSearchHelper();\n\n    System system = new System(myProject, victims, myTypes, myTypeVariableFactory, mySettings);\n\n    for (Iterator<PsiElement> i = victims.iterator(); i.hasNext();) {\n      final PsiElement element = i.next();\n\n      if (element instanceof PsiParameter) {\n        if (!verifyMethod(element, victims, helper)) {\n        continue;\n        }\n      }\n      else if (element instanceof PsiMethod) {\n        if (!verifyMethod(element, victims, helper)) {\n        continue;\n        }\n      }\n    }\n\n    PsiType definedType;\n\n    for (Iterator<PsiElement> i = victims.iterator(); i.hasNext();) {\n      final PsiElement element = i.next();\n\n      if (element instanceof PsiParameter) {\n        final PsiParameter p = myParameters.get(element);\n\n        if (p != null) {\n          setType(element, definedType = defineType(p));\n        }\n        else {\n        continue;\n        }\n      }\n      else if (element instanceof PsiMethod) {\n        final PsiMethod m = myMethods.get(element);\n\n        if (m != null) {\n          system.addSubtypeConstraint(defineType(element), definedType = defineType(m));\n        }\n        else {\n        continue;\n        }\n      }\n      else {\n        definedType = defineType(element);\n      }\n\n      addBoundConstraints(system, definedType, element);\n    }\n\n    for (Iterator<PsiElement> i = victims.iterator(); i.hasNext();) {\n      final PsiElement element = i.next();\n\n      if (element instanceof PsiParameter) {\n        final PsiParameter p = myParameters.get(element);\n\n        if (p == null) {\n        continue;\n        }\n      }\n      else if (element instanceof PsiMethod) {\n        final PsiMethod m = myMethods.get(element);\n\n        if (m == null) {\n        continue;\n        }\n      }\n\n      addUsage(system, element);\n\n      if (!(element instanceof PsiExpression)) {\n        final PsiReference[] refs = helper.findReferences(element, helper.getUseScope(element), true);\n\n        for (int k = 0; k < refs.length; k++) {\n          final PsiElement ref = refs[k].getElement();\n\n          if (ref != null) {\n            addUsage(system, ref);\n          }\n        }\n      }\n    }\n\n    return system;\n  }","commit_id":"4b0a2b79d29c1e48fd6895fd9df578289b2f51b8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected void performRefactoring(UsageInfo[] usages) {\n    HashSet<PsiElement> victims = new HashSet<PsiElement>();\n\n    for (int i = 0; i < usages.length; i++)\n      victims.add(usages[i].getElement());\n\n    myKitchen.perform(victims);\n\n    UndoManager.getInstance(myProject).undoableActionPerformed(new DummyComplexUndoableAction()); // force confirmation dialog for undo\n  }","id":53705,"modified_method":"protected void performRefactoring(UsageInfo[] usages) {\n    final HashSet<PsiElement> victims = new HashSet<PsiElement>();\n\n    for (int i = 0; i < usages.length; i++) {\n      victims.add(usages[i].getElement());\n    }\n\n    myResult.apply (victims);\n\n    UndoManager.getInstance(myProject).undoableActionPerformed(new DummyComplexUndoableAction()); // force confirmation dialog for undo\n  }","commit_id":"4b0a2b79d29c1e48fd6895fd9df578289b2f51b8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected UsageInfo[] findUsages() {\n    HashSet<PsiElement> victims = myKitchen.getVictims(myElements, myDialog.getSettings());\n\n    UsageInfo[] usages = new UsageInfo[victims.size()];\n    int i = 0;\n\n    for (Iterator<PsiElement> j = victims.iterator(); j.hasNext(); i++) {\n      final PsiElement element = j.next();\n      usages[i] = new UsageInfo(element){\n        public String getTooltipText() {\n          return myKitchen.getCookedType(element).getCanonicalText();  \n        }\n      };\n    }\n\n    return usages;\n  }","id":53706,"modified_method":"protected UsageInfo[] findUsages() {\n    mySystemBuilder = new SystemBuilder(myProject, myDialog.getSettings());\n\n    final System commonSystem = mySystemBuilder.build(myElements);\n    myResult = new Result(commonSystem);\n\n    final System[] systems = commonSystem.isolate();\n\n    for (int i = 0; i < systems.length; i++) {\n      final System system = systems[i];\n\n      if (system != null) {\n        final ResolverTree tree = new ResolverTree(system);\n\n        tree.resolve();\n\n        final Binding[] solutions = tree.getSolutions();\n\n        if (solutions.length > 0) {\n          myResult.incorporateSolution(solutions[0]);\n        }\n      }\n    }\n\n    final HashSet<PsiElement> cookedItems = myResult.getCookedElements();\n    final UsageInfo[] usages = new UsageInfo[cookedItems.size()];\n\n    int i = 0;\n    for (final Iterator<PsiElement> e=cookedItems.iterator(); e.hasNext();) {\n      final PsiElement element = e.next();\n\n      usages[i++] = new UsageInfo(element){\n        public String getTooltipText(){\n          return myResult.getCookedType(element).getCanonicalText();\n        }\n      };\n    }\n\n    return usages;\n  }","commit_id":"4b0a2b79d29c1e48fd6895fd9df578289b2f51b8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void run(TypeCookDialog dialog) {\n    myDialog = dialog;\n\n    final Runnable runnable = new Runnable() {\n          public void run() {\n            myDialog.close(DialogWrapper.CANCEL_EXIT_CODE);\n          }\n        };\n\n    setPrepareSuccessfulSwingThreadCallback(runnable);\n    run((Object) null);\n  }","id":53707,"modified_method":"public void run(TypeCookDialog dialog) {\n    myDialog = dialog;\n    setPreviewUsages(dialog.isPreviewUsages());\n\n    final Runnable runnable = new Runnable() {\n      public void run() {\n        myDialog.close(DialogWrapper.CANCEL_EXIT_CODE);\n      }\n    };\n\n    setPrepareSuccessfulSwingThreadCallback(runnable);\n    run((Object)null);\n  }","commit_id":"4b0a2b79d29c1e48fd6895fd9df578289b2f51b8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public TypeCookProcessor(Project project, PsiElement[] elements) {\n    super(project);\n\n    myElements = elements;\n    myKitchen = new Kitchen(PsiManager.getInstance(project));\n  }","id":53708,"modified_method":"public TypeCookProcessor(Project project, PsiElement[] elements) {\n    super(project);\n\n    myElements = elements;\n  }","commit_id":"4b0a2b79d29c1e48fd6895fd9df578289b2f51b8","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void saveDocument(XWikiDocument document, String comment, XWikiContext context) throws Exception\n    {\n        XWikiDocument currentDocument = getDatabaseDocument();\n        DocumentReference userReference = getUserReference(context);\n\n        if (!currentDocument.isNew()) {\n            if (document != currentDocument) {\n                if (document.isNew()) {\n                    currentDocument.apply(document);\n                } else {\n                    currentDocument = document;\n                }\n            }\n        } else {\n            currentDocument = document;\n            if (userReference != null) {\n                currentDocument.setCreatorReference(userReference);\n            }\n        }\n\n        if (userReference != null) {\n            currentDocument.setAuthorReference(userReference);\n            currentDocument.setContentAuthorReference(userReference);\n        }\n\n        context.getWiki().saveDocument(currentDocument, comment, context);\n    }","id":53709,"modified_method":"private void saveDocument(XWikiDocument document, String comment, XWikiContext context) throws Exception\n    {\n        XWikiDocument currentDocument = getDatabaseDocument();\n        DocumentReference userReference = getUserReference(context);\n\n        if (!currentDocument.isNew()) {\n            if (document != currentDocument) {\n                if (document.isNew()) {\n                    currentDocument.apply(document);\n                    currentDocument.setAuthorReference(document.getAuthorReference());\n                    currentDocument.setContentAuthorReference(document.getContentAuthorReference());\n                } else {\n                    currentDocument = document;\n                }\n            }\n        } else {\n            currentDocument = document;\n            if (userReference != null) {\n                currentDocument.setCreatorReference(userReference);\n            }\n        }\n\n        if (userReference != null) {\n            currentDocument.setAuthorReference(userReference);\n            currentDocument.setContentAuthorReference(userReference);\n        }\n\n        context.getWiki().saveDocument(currentDocument, comment, context);\n    }","commit_id":"bfb64747100d2956a883c220e0b3dcbdbd785ae3","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"@NotNull\n  public Map<String, Collection<TaskData>> getRecentTasks() {\n    return myRecentTasks.get();\n  }","id":53710,"modified_method":"@NotNull\n  public List<ExternalTaskPojo> getRecentTasks() {\n    return myRecentTasks.get();\n  }","commit_id":"dac07cfd20137d7f2ea3303e2db4366913fca1e2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void loadState(@NotNull State state) {\n    setIfNotNull(myExpandStates, state.tasksExpandState);\n    setIfNotNull(myRecentTasks, state.recentTasks);\n    setIfNotNull(myAvailableProjects, state.availableProjects);\n    setIfNotNull(myAvailableTasks, state.availableTasks);\n  }","id":53711,"modified_method":"public void loadState(@NotNull State state) {\n    setIfNotNull(myExpandStates, state.tasksExpandState);\n    setIfNotNull(myAvailableProjects, state.availableProjects);\n    setIfNotNull(myAvailableTasks, state.availableTasks);\n    if (state.recentTasks != null) {\n      List<ExternalTaskPojo> recentTasks = myRecentTasks.get();\n      recentTasks.clear();\n      recentTasks.addAll(state.recentTasks);\n    }\n  }","commit_id":"dac07cfd20137d7f2ea3303e2db4366913fca1e2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n    @Override\n    public ExecutionResult execute(Executor executor, @NotNull ProgramRunner runner) throws ExecutionException {\n      ConsoleView console = new TextConsoleBuilderImpl(myProject).getConsole();\n      final MyProcessHandler processHandler = new MyProcessHandler();\n      console.attachToProcess(processHandler);\n      final List<ExternalTaskPojo> tasks = ContainerUtilRt.newArrayList();\n      for (String taskName : mySettings.getTaskNames()) {\n        tasks.add(new ExternalTaskPojo(taskName, mySettings.getExternalProjectPath(), null));\n      }\n      if (tasks.isEmpty()) {\n        throw new ExecutionException(ExternalSystemBundle.message(\"run.error.undefined.task\"));\n      }\n      String vmOptions;\n      if (myDebugPort > 0) {\n        String debuggerSetup = \"-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=\" + myDebugPort;\n        String regular = mySettings.getVmOptions();\n        vmOptions = regular == null ? debuggerSetup : regular + \" \" + debuggerSetup;\n      }\n      else {\n        vmOptions = mySettings.getVmOptions();\n      }\n      \n      final ExternalSystemExecuteTaskTask task = new ExternalSystemExecuteTaskTask(mySettings.getExternalSystemId(),\n                                                                                   myProject,\n                                                                                   tasks,\n                                                                                   vmOptions);\n      ApplicationManager.getApplication().executeOnPooledThread(new Runnable() {\n        @Override\n        public void run() {\n          final String greeting;\n          if (mySettings.getTaskNames().size() > 1) {\n            greeting = ExternalSystemBundle.message(\"run.text.starting.multiple.task\", StringUtil.join(mySettings.getTaskNames(), \" \"));\n          }\n          else {\n            greeting = ExternalSystemBundle.message(\"run.text.starting.single.task\", StringUtil.join(mySettings.getTaskNames(), \" \"));\n          }\n          processHandler.notifyTextAvailable(greeting, ProcessOutputTypes.SYSTEM);\n          task.execute(new ExternalSystemTaskNotificationListenerAdapter() {\n\n            private boolean myResetGreeting = true;\n\n            @Override\n            public void onTaskOutput(@NotNull ExternalSystemTaskId id, @NotNull String text, boolean stdOut) {\n              if (myResetGreeting) {\n                processHandler.notifyTextAvailable(\"\\r\", ProcessOutputTypes.SYSTEM);\n                myResetGreeting = false;\n              }\n              processHandler.notifyTextAvailable(text, stdOut ? ProcessOutputTypes.STDOUT : ProcessOutputTypes.STDERR);\n            }\n\n            @Override\n            public void onEnd(@NotNull ExternalSystemTaskId id) {\n              processHandler.notifyProcessTerminated(0);\n            }\n          });\n        }\n      });\n      return new DefaultExecutionResult(console, processHandler);\n    }","id":53712,"modified_method":"@Nullable\n    @Override\n    public ExecutionResult execute(Executor executor, @NotNull ProgramRunner runner) throws ExecutionException {\n      ConsoleView console = new TextConsoleBuilderImpl(myProject).getConsole();\n      final MyProcessHandler processHandler = new MyProcessHandler();\n      console.attachToProcess(processHandler);\n      final List<ExternalTaskPojo> tasks = ContainerUtilRt.newArrayList();\n      for (String taskName : mySettings.getTaskNames()) {\n        tasks.add(new ExternalTaskPojo(taskName, mySettings.getExternalProjectPath(), null, null));\n      }\n      if (tasks.isEmpty()) {\n        throw new ExecutionException(ExternalSystemBundle.message(\"run.error.undefined.task\"));\n      }\n      String vmOptions;\n      if (myDebugPort > 0) {\n        String debuggerSetup = \"-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=\" + myDebugPort;\n        String regular = mySettings.getVmOptions();\n        vmOptions = regular == null ? debuggerSetup : regular + \" \" + debuggerSetup;\n      }\n      else {\n        vmOptions = mySettings.getVmOptions();\n      }\n      \n      final ExternalSystemExecuteTaskTask task = new ExternalSystemExecuteTaskTask(mySettings.getExternalSystemId(),\n                                                                                   myProject,\n                                                                                   tasks,\n                                                                                   vmOptions);\n      ApplicationManager.getApplication().executeOnPooledThread(new Runnable() {\n        @Override\n        public void run() {\n          final String greeting;\n          if (mySettings.getTaskNames().size() > 1) {\n            greeting = ExternalSystemBundle.message(\"run.text.starting.multiple.task\", StringUtil.join(mySettings.getTaskNames(), \" \"));\n          }\n          else {\n            greeting = ExternalSystemBundle.message(\"run.text.starting.single.task\", StringUtil.join(mySettings.getTaskNames(), \" \"));\n          }\n          processHandler.notifyTextAvailable(greeting, ProcessOutputTypes.SYSTEM);\n          task.execute(new ExternalSystemTaskNotificationListenerAdapter() {\n\n            private boolean myResetGreeting = true;\n\n            @Override\n            public void onTaskOutput(@NotNull ExternalSystemTaskId id, @NotNull String text, boolean stdOut) {\n              if (myResetGreeting) {\n                processHandler.notifyTextAvailable(\"\\r\", ProcessOutputTypes.SYSTEM);\n                myResetGreeting = false;\n              }\n              processHandler.notifyTextAvailable(text, stdOut ? ProcessOutputTypes.STDOUT : ProcessOutputTypes.STDERR);\n            }\n\n            @Override\n            public void onEnd(@NotNull ExternalSystemTaskId id) {\n              processHandler.notifyProcessTerminated(0);\n            }\n          });\n        }\n      });\n      return new DefaultExecutionResult(console, processHandler);\n    }","commit_id":"dac07cfd20137d7f2ea3303e2db4366913fca1e2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public ExternalSystemTasksPanel(@NotNull Project project,\n                                  @NotNull ProjectSystemId externalSystemId,\n                                  @NotNull NotificationGroup notificationGroup)\n  {\n    super(true);\n    myExternalSystemId = externalSystemId;\n    myNotificationGroup = notificationGroup;\n    myProject = project;\n    myAllTasksModel = new ExternalSystemTasksTreeModel(externalSystemId);\n\n    ExternalSystemManager<?, ?, ?, ?, ?> manager = ExternalSystemApiUtil.getManager(externalSystemId);\n    assert manager != null;\n    AbstractExternalSystemLocalSettings settings = manager.getLocalSettingsProvider().fun(project);\n    myAllTasksTree = new ExternalSystemTasksTree(myAllTasksModel, settings.getExpandStates()) {\n      @Override\n      protected void processMouseEvent(MouseEvent e) {\n        mySelectedTaskProvider = myAllTasksTree;\n        super.processMouseEvent(e);\n      }\n    };\n\n    ActionManager actionManager = ActionManager.getInstance();\n    ActionGroup group = (ActionGroup)actionManager.getAction(TOOL_WINDOW_TOOLBAR_ACTIONS_GROUP_ID);\n    ActionToolbar toolbar = actionManager.createActionToolbar(TOOL_WINDOW_PLACE, group, true);\n    toolbar.setTargetComponent(this);\n    setToolbar(toolbar.getComponent());\n\n    setContent(new JBScrollPane(myAllTasksTree));\n\n    ExternalSystemUiUtil.apply(settings, myAllTasksModel);\n\n    CustomizationUtil.installPopupHandler(myAllTasksTree, TREE_ACTIONS_GROUP_ID, TREE_PLACE);\n  }","id":53713,"modified_method":"public ExternalSystemTasksPanel(@NotNull Project project,\n                                  @NotNull ProjectSystemId externalSystemId,\n                                  @NotNull NotificationGroup notificationGroup)\n  {\n    super(true);\n    myExternalSystemId = externalSystemId;\n    myNotificationGroup = notificationGroup;\n    myProject = project;\n\n    ExternalSystemManager<?, ?, ?, ?, ?> manager = ExternalSystemApiUtil.getManager(externalSystemId);\n    assert manager != null;\n    AbstractExternalSystemLocalSettings settings = manager.getLocalSettingsProvider().fun(project);\n\n    myRecentTasksModel = new ExternalSystemRecentTaskListModel();\n    myRecentTasksList = new ExternalSystemRecentTasksList(myRecentTasksModel, externalSystemId) {\n      @Override\n      protected void processMouseEvent(MouseEvent e) {\n        mySelectedTaskProvider = myRecentTasksList;\n        super.processMouseEvent(e);\n      }\n    };\n    myRecentTasksList.setEmptyText(ExternalSystemBundle.message(\"tasks.recent.empty.text\"));\n    myRecentTasksModel.setTasks(settings.getRecentTasks());\n\n    myAllTasksModel = new ExternalSystemTasksTreeModel(externalSystemId);\n    myAllTasksTree = new ExternalSystemTasksTree(myAllTasksModel, settings.getExpandStates()) {\n      @Override\n      protected void processMouseEvent(MouseEvent e) {\n        mySelectedTaskProvider = myAllTasksTree;\n        super.processMouseEvent(e);\n      }\n    };\n    ExternalSystemUiUtil.apply(settings, myAllTasksModel);\n    CustomizationUtil.installPopupHandler(myAllTasksTree, TREE_ACTIONS_GROUP_ID, TREE_PLACE);\n\n    ActionManager actionManager = ActionManager.getInstance();\n    ActionGroup group = (ActionGroup)actionManager.getAction(TOOL_WINDOW_TOOLBAR_ACTIONS_GROUP_ID);\n    ActionToolbar toolbar = actionManager.createActionToolbar(TOOL_WINDOW_PLACE, group, true);\n    toolbar.setTargetComponent(this);\n    setToolbar(toolbar.getComponent());\n    \n    JPanel content = new JPanel(new GridBagLayout());\n    JComponent recentTasksWithTitle = wrap(myRecentTasksList, ExternalSystemBundle.message(\"tasks.recent.title\"));\n    content.add(recentTasksWithTitle, ExternalSystemUiUtil.getFillLineConstraints(0));\n    JBScrollPane scrollPane = new JBScrollPane(myAllTasksTree);\n    scrollPane.setBorder(null);\n    JComponent allTasksWithTitle = wrap(scrollPane, ExternalSystemBundle.message(\"tasks.all.title\"));\n    content.add(allTasksWithTitle, ExternalSystemUiUtil.getFillLineConstraints(0).weighty(1));\n    setContent(content);\n    \n    setOpaque(true);\n    setBackground(UIUtil.getListBackground());\n  }","commit_id":"dac07cfd20137d7f2ea3303e2db4366913fca1e2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Nullable\n  @Override\n  public Object getData(@NonNls String dataId) {\n    if (ExternalSystemDataKeys.ALL_TASKS_MODEL.is(dataId)) {\n      return myAllTasksModel;\n    }\n    else if (ExternalSystemDataKeys.EXTERNAL_SYSTEM_ID.is(dataId)) {\n      return myExternalSystemId;\n    }\n    else if (ExternalSystemDataKeys.NOTIFICATION_GROUP.is(dataId)) {\n      return myNotificationGroup;\n    }\n    else if (ExternalSystemDataKeys.SELECTED_TASK.is(dataId)) {\n      return mySelectedTaskProvider == null ? null : mySelectedTaskProvider.produce();\n    }\n    else if (Location.DATA_KEY.is(dataId)) {\n      Location location = buildLocation();\n      return location == null ? super.getData(dataId) : location;\n    }\n    return null;\n  }","id":53714,"modified_method":"@Nullable\n  @Override\n  public Object getData(@NonNls String dataId) {\n    if (ExternalSystemDataKeys.RECENT_TASKS_MODEL.is(dataId)) {\n      return myRecentTasksModel;\n    }\n    else if (ExternalSystemDataKeys.ALL_TASKS_MODEL.is(dataId)) {\n      return myAllTasksModel;\n    }\n    else if (ExternalSystemDataKeys.EXTERNAL_SYSTEM_ID.is(dataId)) {\n      return myExternalSystemId;\n    }\n    else if (ExternalSystemDataKeys.NOTIFICATION_GROUP.is(dataId)) {\n      return myNotificationGroup;\n    }\n    else if (ExternalSystemDataKeys.SELECTED_TASK.is(dataId)) {\n      return mySelectedTaskProvider == null ? null : mySelectedTaskProvider.produce();\n    }\n    else if (Location.DATA_KEY.is(dataId)) {\n      Location location = buildLocation();\n      return location == null ? super.getData(dataId) : location;\n    }\n    return null;\n  }","commit_id":"dac07cfd20137d7f2ea3303e2db4366913fca1e2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public ExternalSystemTasksTree(@NotNull ExternalSystemTasksTreeModel model,\n                                 @NotNull Map<String/*tree path*/, Boolean/*expanded*/> expandedStateHolder)\n  {\n    super(model);\n    myExpandedStateHolder = expandedStateHolder;\n    setRootVisible(false);\n\n    addTreeWillExpandListener(new TreeWillExpandListener() {\n      @Override\n      public void treeWillExpand(TreeExpansionEvent event) throws ExpandVetoException {\n        if (!mySuppressCollapseTracking) {\n          myExpandedStateHolder.put(getPath(event.getPath()), true);\n        }\n      }\n\n      @Override\n      public void treeWillCollapse(TreeExpansionEvent event) throws ExpandVetoException {\n        if (!mySuppressCollapseTracking) {\n          myExpandedStateHolder.put(getPath(event.getPath()), false);\n        }\n      }\n    });\n    \n    model.addTreeModelListener(new TreeModelAdapter() {\n      @Override\n      public void treeStructureChanged(TreeModelEvent e) {\n        scheduleCollapseStateAppliance(e.getTreePath());\n      }\n\n      @Override\n      public void treeNodesInserted(TreeModelEvent e) {\n        scheduleCollapseStateAppliance(e.getTreePath());\n      }\n    });\n  }","id":53715,"modified_method":"public ExternalSystemTasksTree(@NotNull ExternalSystemTasksTreeModel model,\n                                 @NotNull Map<String/*tree path*/, Boolean/*expanded*/> expandedStateHolder)\n  {\n    super(model);\n    myExpandedStateHolder = expandedStateHolder;\n    setRootVisible(false);\n\n    addTreeWillExpandListener(new TreeWillExpandListener() {\n      @Override\n      public void treeWillExpand(TreeExpansionEvent event) throws ExpandVetoException {\n        if (!mySuppressCollapseTracking) {\n          myExpandedStateHolder.put(getPath(event.getPath()), true);\n        }\n      }\n\n      @Override\n      public void treeWillCollapse(TreeExpansionEvent event) throws ExpandVetoException {\n        if (!mySuppressCollapseTracking) {\n          myExpandedStateHolder.put(getPath(event.getPath()), false);\n        }\n      }\n    });\n    \n    model.addTreeModelListener(new TreeModelAdapter() {\n      @Override\n      public void treeStructureChanged(TreeModelEvent e) {\n        scheduleCollapseStateAppliance(e.getTreePath());\n      }\n\n      @Override\n      public void treeNodesInserted(TreeModelEvent e) {\n        scheduleCollapseStateAppliance(e.getTreePath());\n      }\n    });\n    new TreeSpeedSearch(this);\n  }","commit_id":"dac07cfd20137d7f2ea3303e2db4366913fca1e2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  public static ExternalTaskPojo from(@NotNull TaskData data) {\n    return new ExternalTaskPojo(data.getName(), data.getLinkedExternalProjectPath(), data.getDescription());\n  }","id":53716,"modified_method":"@NotNull\n  public static ExternalTaskPojo from(@NotNull TaskData data) {\n    return new ExternalTaskPojo(data.getName(), data.getLinkedExternalProjectPath(), data.getDescription(), null);\n  }","commit_id":"dac07cfd20137d7f2ea3303e2db4366913fca1e2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@SuppressWarnings(\"UnusedDeclaration\")\n  public ExternalTaskPojo() {\n    // Required for IJ serialization.\n    this(\"___DUMMY___\", \"___DUMMY___\", null);\n  }","id":53717,"modified_method":"@SuppressWarnings(\"UnusedDeclaration\")\n  public ExternalTaskPojo() {\n    // Required for IJ serialization.\n    this(\"___DUMMY___\", \"___DUMMY___\", null, null);\n  }","commit_id":"dac07cfd20137d7f2ea3303e2db4366913fca1e2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public int hashCode() {\n    int result = myName.hashCode();\n    result = 31 * result + myLinkedExternalProjectPath.hashCode();\n    return result;\n  }","id":53718,"modified_method":"@Override\n  public int hashCode() {\n    int result = myName.hashCode();\n    result = 31 * result + myLinkedExternalProjectPath.hashCode();\n    if (myExecutorId != null) {\n      result = 31 * result + myExecutorId.hashCode();\n    }\n    return result;\n  }","commit_id":"dac07cfd20137d7f2ea3303e2db4366913fca1e2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public ExternalTaskPojo(@NotNull String name, @NotNull String linkedExternalProjectPath, @Nullable String description) {\n    myName = name;\n    myLinkedExternalProjectPath = linkedExternalProjectPath;\n    myDescription = description;\n  }","id":53719,"modified_method":"public ExternalTaskPojo(@NotNull String name,\n                          @NotNull String linkedExternalProjectPath,\n                          @Nullable String description,\n                          @Nullable String executorId)\n  {\n    myName = name;\n    myLinkedExternalProjectPath = linkedExternalProjectPath;\n    myDescription = description;\n    myExecutorId = executorId;\n  }","commit_id":"dac07cfd20137d7f2ea3303e2db4366913fca1e2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    ExternalTaskPojo pojo = (ExternalTaskPojo)o;\n\n    if (!myLinkedExternalProjectPath.equals(pojo.myLinkedExternalProjectPath)) return false;\n    if (!myName.equals(pojo.myName)) return false;\n\n    return true;\n  }","id":53720,"modified_method":"@Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    ExternalTaskPojo that = (ExternalTaskPojo)o;\n\n    if (!myLinkedExternalProjectPath.equals(that.myLinkedExternalProjectPath)) return false;\n    if (!myName.equals(that.myName)) return false;\n    return myExecutorId == null ? that.myExecutorId == null : myExecutorId.equals(that.myExecutorId);\n  }","commit_id":"dac07cfd20137d7f2ea3303e2db4366913fca1e2","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public String evaluate(String key, Dictionary<String, String> dictionary) {\n        for (PropertiesFunction function : functions.values()) {\n            String token = function.getName() + \":\";\n            if (key.startsWith(token)) {\n                String remainder = key.substring(token.length());\n                String value = function.apply(remainder);\n                if (value != null) {\n                    return value;\n                }\n            }\n        }\n        return dictionary.get(key);\n    }","id":53721,"modified_method":"@Override\n    public String evaluate(String key, Dictionary<String, String> dictionary) {\n        String[] resolvers = Support.before(key, \":\").split(\"\\\\+\");\n        String remainder = Support.after(key, \":\");\n        String value = null;\n\n        for (String resolver : resolvers) {\n            PropertiesFunction function = functions.get(resolver);\n            if (function == null) {\n                value = null;\n                break;\n            }\n\n            value = function.apply(remainder);\n            if (value != null) {\n                remainder = value;\n            } else {\n                break;\n            }\n        }\n\n        return value != null ? value : dictionary.get(key);\n    }","commit_id":"1bba69d84939fdfcb9cd946793dd6ea7e6124dac","url":"https://github.com/fabric8io/fabric8"},{"original_method":"@Override\r\n    public boolean apply(Game game, Ability source) {\r\n        int value = amount.calculate(game, source);\r\n        token.putOntoBattlefield(value, game, source.getSourceId(), targetPointer.getFirst(game, source), tapped, attacking);\r\n        return true;\r\n    }","id":53722,"modified_method":"@Override\r\n    public boolean apply(Game game, Ability source) {\r\n        int value = amount.calculate(game, source);\r\n        Player controller = game.getPlayer(source.getControllerId());\r\n        if (controller != null) {\r\n            if (value < 1) {\r\n                return true;\r\n            }\r\n            if(token.putOntoBattlefield(value, game, source.getSourceId(), targetPointer.getFirst(game, source), tapped, attacking)) {\r\n                game.informPlayers(new StringBuilder(controller.getName())\r\n                    .append(\" puts \").append(CardUtil.numberToText(value,\"a\")).append(\" \").append(token.getName())\r\n                    .append(value == 1?\" token\":\" tokens\").append(\" onto the Battlefield\").toString());\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }","commit_id":"ad6898ca54d71a3c34549570e48549c02ecd26f3","url":"https://github.com/magefree/mage"},{"original_method":"public Token(String name, String description, ObjectColor color, List<String> subtype, int power, int toughness, Abilities abilities) {\r\n        this(name, description);\r\n        this.cardType.add(CardType.CREATURE);\r\n        this.color = color.copy();\r\n        this.subtype = subtype;\r\n        this.power.setValue(power);\r\n        this.toughness.setValue(toughness);\r\n        if (abilities != null) {\r\n            this.abilities = abilities.copy();\r\n        }\r\n    }","id":53723,"modified_method":"public Token(String name, String description, ObjectColor color, List<String> subtype, int power, int toughness, Abilities<Ability> abilities) {\r\n        this(name, description);\r\n        this.cardType.add(CardType.CREATURE);\r\n        this.color = color.copy();\r\n        this.subtype = subtype;\r\n        this.power.setValue(power);\r\n        this.toughness.setValue(toughness);\r\n        if (abilities != null) {\r\n            this.abilities = abilities.copy();\r\n        }\r\n    }","commit_id":"ad6898ca54d71a3c34549570e48549c02ecd26f3","url":"https://github.com/magefree/mage"},{"original_method":"WarrenWeirdingBlackGoblinRogueToken() {\r\n        super(\"Goblin Rogue\", \"1/1 black Goblin Rogue creature tokens, and those tokens gain haste until end of turn\");\r\n        cardType.add(CardType.CREATURE);\r\n        color.setBlack(true);\r\n        subtype.add(\"Goblin\");\r\n        subtype.add(\"Rogue\");\r\n        power.setValue(1);\r\n        toughness.setValue(1);\r\n        Ability ability = new SimpleStaticAbility(Zone.BATTLEFIELD, new GainAbilitySourceEffect(HasteAbility.getInstance(), Duration.EndOfTurn));\r\n        ability.setRuleVisible(false);\r\n        this.addAbility(ability);\r\n    }","id":53724,"modified_method":"WarrenWeirdingBlackGoblinRogueToken() {\r\n        super(\"Goblin Rogue\", \"1/1 black Goblin Rogue creature tokens, and those tokens gain haste until end of turn\");\r\n        cardType.add(CardType.CREATURE);\r\n        color.setBlack(true);\r\n        subtype.add(\"Goblin\");\r\n        subtype.add(\"Rogue\");\r\n        power.setValue(1);\r\n        toughness.setValue(1);\r\n    }","commit_id":"ad6898ca54d71a3c34549570e48549c02ecd26f3","url":"https://github.com/magefree/mage"},{"original_method":"@Override\r\n    public boolean apply(Game game, Ability source) {\r\n        Player player = game.getPlayer(getTargetPointer().getFirst(game, source));\r\n\r\n        FilterControlledPermanent filter = new FilterControlledPermanent(\"creature\");\r\n        filter.add(new CardTypePredicate(CardType.CREATURE));\r\n        filter.add(new ControllerIdPredicate(player.getId()));\r\n        TargetControlledPermanent target = new TargetControlledPermanent(1, 1, filter, false);\r\n        target.setRequired(true);\r\n\r\n        //A spell or ability could have removed the only legal target this player\r\n        //had, if thats the case this ability should fizzle.\r\n        if (target.canChoose(player.getId(), game)) {\r\n            player.choose(Outcome.Sacrifice, target, source.getSourceId(), game);\r\n            Permanent permanent = game.getPermanent(target.getFirstTarget());\r\n            if (permanent != null) {\r\n                permanent.sacrifice(source.getSourceId(), game);\r\n                if (filterGoblin.match(permanent, game)) {\r\n                    Effect effect = new CreateTokenTargetEffect(new WarrenWeirdingBlackGoblinRogueToken(), 2);\r\n                    effect.setTargetPointer(new FixedTarget(player.getId()));\r\n                    effect.apply(game, source);\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }","id":53725,"modified_method":"@Override\r\n    public boolean apply(Game game, Ability source) {\r\n        Player player = game.getPlayer(getTargetPointer().getFirst(game, source));\r\n\r\n        FilterControlledPermanent filter = new FilterControlledPermanent(\"creature\");\r\n        filter.add(new CardTypePredicate(CardType.CREATURE));\r\n        filter.add(new ControllerIdPredicate(player.getId()));\r\n        TargetControlledPermanent target = new TargetControlledPermanent(1, 1, filter, false);\r\n        target.setRequired(true);\r\n\r\n        //A spell or ability could have removed the only legal target this player\r\n        //had, if thats the case this ability should fizzle.\r\n        if (target.canChoose(player.getId(), game)) {\r\n            player.choose(Outcome.Sacrifice, target, source.getSourceId(), game);\r\n            Permanent permanent = game.getPermanent(target.getFirstTarget());\r\n            if (permanent != null) {\r\n                permanent.sacrifice(source.getSourceId(), game);\r\n                if (filterGoblin.match(permanent, game)) {\r\n                    for (int i = 0; i < 2; i++) {\r\n                        Token token = new WarrenWeirdingBlackGoblinRogueToken();\r\n                        Effect effect = new CreateTokenTargetEffect(token);\r\n                        effect.setTargetPointer(new FixedTarget(player.getId()));\r\n                        if (effect.apply(game, source)) {\r\n                            Permanent tokenPermanent = game.getPermanent(token.getLastAddedToken());\r\n                            if (tokenPermanent != null) {\r\n                                ContinuousEffect hasteEffect = new GainAbilityTargetEffect(HasteAbility.getInstance(), Duration.EndOfTurn);\r\n                                hasteEffect.setTargetPointer(new FixedTarget(tokenPermanent.getId()));\r\n                                game.addEffect(hasteEffect, source);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }","commit_id":"ad6898ca54d71a3c34549570e48549c02ecd26f3","url":"https://github.com/magefree/mage"},{"original_method":"protected void createRoutes(KubernetesClient kubernetes, List<HasMetadata> list) {\n        String routeDomainPostfix = this.routeDomain;\n        Log log = getLog();\n        if (Strings.isNullOrBlank(routeDomainPostfix)) {\n            log.warn(\"No fabric8.domain property or $KUBERNETES_DOMAIN environment variable so cannot create any OpenShift Routes\");\n            return;\n        }\n        String namespace = kubernetes.getNamespace();\n        // lets get the routes first to see if we should bother\n        try {\n            RouteList routes = kubernetes.getRoutes(namespace);\n            if (routes != null) {\n                List<Route> items = routes.getItems();\n            }\n        } catch (Exception e) {\n            log.warn(\"Could not load routes; we maybe are not connected to an OpenShift environment? \" + e, e);\n            return;\n        }\n        List<Route> routes = new ArrayList<>();\n        for (Object object : list) {\n            if (object instanceof Service) {\n                Service service = (Service) object;\n                Route route = createRouteForService(routeDomainPostfix, namespace, service, log);\n                if (route != null) {\n                    routes.add(route);\n                }\n            }\n        }\n        list.addAll(routes);\n    }","id":53726,"modified_method":"protected void createRoutes(KubernetesClient kubernetes, Collection<HasMetadata> collection) {\n        String routeDomainPostfix = this.routeDomain;\n        Log log = getLog();\n        if (Strings.isNullOrBlank(routeDomainPostfix)) {\n            log.warn(\"No fabric8.domain property or $KUBERNETES_DOMAIN environment variable so cannot create any OpenShift Routes\");\n            return;\n        }\n        String namespace = kubernetes.getNamespace();\n        // lets get the routes first to see if we should bother\n        try {\n            RouteList routes = kubernetes.getRoutes(namespace);\n            if (routes != null) {\n                List<Route> items = routes.getItems();\n            }\n        } catch (Exception e) {\n            log.warn(\"Could not load routes; we maybe are not connected to an OpenShift environment? \" + e, e);\n            return;\n        }\n        List<Route> routes = new ArrayList<>();\n        for (Object object : collection) {\n            if (object instanceof Service) {\n                Service service = (Service) object;\n                Route route = createRouteForService(routeDomainPostfix, namespace, service, log);\n                if (route != null) {\n                    routes.add(route);\n                }\n            }\n        }\n        collection.addAll(routes);\n    }","commit_id":"a6ed950385f68748fee604757d78ed3c1d8a2a00","url":"https://github.com/fabric8io/fabric8"},{"original_method":"@Override\n    public void execute() throws MojoExecutionException, MojoFailureException {\n        File json = getKubernetesJson();\n        if (!Files.isFile(json)) {\n            if (Files.isFile(kubernetesSourceJson)) {\n                json = kubernetesSourceJson;\n            } else {\n                if (failOnNoKubernetesJson) {\n                    throw new MojoFailureException(\"No such generated kubernetes json file: \" + json + \" or source json file \" + kubernetesSourceJson);\n                } else {\n                    getLog().warn(\"No such generated kubernetes json file: \" + json + \" or source json file \" + kubernetesSourceJson + \" for this project so ignoring\");\n                    return;\n                }\n            }\n        }\n        KubernetesClient kubernetes = getKubernetes();\n\n        getLog().info(\"Using kubernetes at: \" + kubernetes.getAddress() + \" in namespace \" + kubernetes.getNamespace());\n        getLog().info(\"Kubernetes JSON: \" + json);\n\n        try {\n            String fileName = json.getName();\n            Object dto = KubernetesHelper.loadJson(json);\n            if (dto == null) {\n                throw new MojoFailureException(\"Could not load kubernetes json: \" + json);\n            }\n            Controller controller = createController();\n            controller.setAllowCreate(createNewResources);\n            controller.setServicesOnlyMode(servicesOnly);\n            controller.setIgnoreServiceMode(ignoreServices);\n            controller.setIgnoreRunningOAuthClients(ignoreRunningOAuthClients);\n            controller.setProcessTemplatesLocally(processTemplatesLocally);\n            controller.setLogJsonDir(jsonLogDir);\n            controller.setBasedir(getRootProjectFolder());\n\n            if (dto instanceof Template) {\n                Template template = (Template) dto;\n                KubernetesHelper.setNamespace(template, kubernetes.getNamespace());\n                overrideTemplateParameters(template);\n                dto = controller.applyTemplate(template, fileName);\n            }\n            List<HasMetadata> list = KubernetesHelper.toItemList(dto);\n            if (createRoutes) {\n                createRoutes(kubernetes, list);\n                dto = list;\n            }\n\n            controller.apply(dto, fileName);\n        } catch (Exception e) {\n            throw new MojoExecutionException(e.getMessage(), e);\n        }\n    }","id":53727,"modified_method":"@Override\n    public void execute() throws MojoExecutionException, MojoFailureException {\n        File json = getKubernetesJson();\n        if (!Files.isFile(json)) {\n            if (Files.isFile(kubernetesSourceJson)) {\n                json = kubernetesSourceJson;\n            } else {\n                if (failOnNoKubernetesJson) {\n                    throw new MojoFailureException(\"No such generated kubernetes json file: \" + json + \" or source json file \" + kubernetesSourceJson);\n                } else {\n                    getLog().warn(\"No such generated kubernetes json file: \" + json + \" or source json file \" + kubernetesSourceJson + \" for this project so ignoring\");\n                    return;\n                }\n            }\n        }\n        KubernetesClient kubernetes = getKubernetes();\n        getLog().info(\"Using kubernetes at: \" + kubernetes.getAddress() + \" in namespace \" + kubernetes.getNamespace());\n        getLog().info(\"Kubernetes JSON: \" + json);\n\n        try {\n            Controller controller = createController();\n            controller.setAllowCreate(createNewResources);\n            controller.setServicesOnlyMode(servicesOnly);\n            controller.setIgnoreServiceMode(ignoreServices);\n            controller.setIgnoreRunningOAuthClients(ignoreRunningOAuthClients);\n            controller.setProcessTemplatesLocally(processTemplatesLocally);\n            controller.setLogJsonDir(jsonLogDir);\n            controller.setBasedir(getRootProjectFolder());\n\n\n            String fileName = json.getName();\n            Object dto = KubernetesHelper.loadJson(json);\n            if (dto == null) {\n                throw new MojoFailureException(\"Could not load kubernetes json: \" + json);\n            }\n\n            if (dto instanceof Template) {\n                Template template = (Template) dto;\n                KubernetesHelper.setNamespace(template, kubernetes.getNamespace());\n                overrideTemplateParameters(template);\n                dto = controller.applyTemplate(template, fileName);\n            }\n\n            Set<KubernetesList> kubeConfigs = new LinkedHashSet<>();\n\n            for (File dependency : getDependencies()) {\n                getLog().info(\"Found dependency: \" + dependency);\n                loadDependency(getLog(), kubeConfigs, dependency);\n            }\n\n            Comparator<HasMetadata> metadataComparator = new Comparator<HasMetadata>() {\n                @Override\n                public int compare(HasMetadata left, HasMetadata right) {\n                    if (left instanceof Service) {\n                        return -1;\n                    } else if (right instanceof Service) {\n                        return 1;\n                    } else if (left instanceof ReplicationController) {\n                        return -1;\n                    } else if (right instanceof ReplicationController) {\n                        return -1;\n                    } else {\n                        return 0;\n                    }\n                }\n            };\n\n            Set<HasMetadata> entities = new TreeSet<>(metadataComparator);\n            for (KubernetesList c : kubeConfigs) {\n                entities.addAll(c.getItems());\n            }\n\n            entities.addAll(KubernetesHelper.toItemList(dto));\n\n            if (createRoutes) {\n                createRoutes(kubernetes, entities);\n            }\n\n            controller.setRecreateMode(true);\n            //Apply all items\n            for (HasMetadata entity : entities) {\n                if (entity instanceof Pod) {\n                    Pod pod = (Pod) entity;\n                    controller.applyPod(pod, fileName);\n                } else if (entity instanceof Service) {\n                    Service service = (Service) entity;\n                    controller.applyService(service, fileName);\n                } else if (entity instanceof ReplicationController) {\n                    ReplicationController replicationController = (ReplicationController) entity;\n                    controller.applyReplicationController(replicationController, fileName);\n                } else if (entity != null) {\n                    controller.apply(entity, fileName);\n                }\n            }\n        } catch (Exception e) {\n            throw new MojoExecutionException(e.getMessage(), e);\n        }\n    }","commit_id":"a6ed950385f68748fee604757d78ed3c1d8a2a00","url":"https://github.com/fabric8io/fabric8"},{"original_method":"private void loadCaches(GenerationDependencies dependencies) {\n    GenerationCacheContainer incrementalCacheContainer = myGenerationOptions.getIncrementalCacheContainer();\n    if(incrementalCacheContainer == null) {\n      return;\n    }\n\n    String currentHash = myGenerationHashes.get(ModelDigestHelper.FILE);\n    String oldHash = dependencies.getModelHash();\n    if(currentHash.equals(oldHash)) {\n      // regenerating model, do not use caches\n      return;\n    }\n\n    ModelCacheContainer cacheContainer = incrementalCacheContainer.getCache(myModel, oldHash, false);\n    if(cacheContainer == null) {\n      return;\n    }\n\n    IntermediateModelsCache c = IntermediateModelsCache.load(cacheContainer);\n    if(c != null && myPlanSignature.equals(c.getSignature())) {\n      myCache = c;\n    }\n  }","id":53728,"modified_method":"private void loadCaches(GenerationDependencies dependencies) {\n    GenerationCacheContainer incrementalCacheContainer = myGenerationOptions.getIncrementalCacheContainer();\n    if(incrementalCacheContainer == null) {\n      return;\n    }\n\n    String oldHash = dependencies.getModelHash();\n    ModelCacheContainer cacheContainer = incrementalCacheContainer.getCache(myModel, oldHash, false);\n    if(cacheContainer == null) {\n      return;\n    }\n\n    IntermediateModelsCache c = IntermediateModelsCache.load(cacheContainer);\n    if(c != null && myPlanSignature.equals(c.getSignature())) {\n      myCache = c;\n    }\n  }","commit_id":"f0f1a8a3ce1324fc30d6ebd9fbc06613fb043963","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void createNewCache() {\n    if (!myGenerationOptions.isIncremental()) {\n      return;\n    }\n\n    GenerationCacheContainer incrementalCacheContainer = myGenerationOptions.getIncrementalCacheContainer();\n    if(incrementalCacheContainer == null) {\n      return;\n    }\n\n    String currentHash = myGenerationHashes.get(ModelDigestHelper.FILE);\n    ModelCacheContainer cacheContainer = incrementalCacheContainer.getCache(myModel, currentHash, true);\n    if(cacheContainer == null) {\n      return;\n    }\n\n    myNewCache = new IntermediateModelsCache(cacheContainer, myPlanSignature);\n  }","id":53729,"modified_method":"public IntermediateModelsCache createNewCache() {\n    if (!myGenerationOptions.isIncremental()) {\n      return null;\n    }\n\n    GenerationCacheContainer incrementalCacheContainer = myGenerationOptions.getIncrementalCacheContainer();\n    if(incrementalCacheContainer == null) {\n      return null;\n    }\n\n    String currentHash = myGenerationHashes.get(ModelDigestHelper.FILE);\n    ModelCacheContainer cacheContainer = incrementalCacheContainer.getCache(myModel, currentHash, true);\n    if(cacheContainer == null) {\n      return null;\n    }\n\n    return new IntermediateModelsCache(cacheContainer, myPlanSignature);\n  }","commit_id":"f0f1a8a3ce1324fc30d6ebd9fbc06613fb043963","url":"https://github.com/JetBrains/MPS"},{"original_method":"private boolean applyRules(SModel currentInputModel, SModel currentOutputModel, final boolean isPrimary,\n                             RuleManager ruleManager) throws GenerationFailureException, GenerationCanceledException {\n    myDependenciesBuilder.setOutputModel(currentOutputModel);\n    final TemplateGenerator tg =\n      myGenerationOptions.isGenerateInParallel()\n        ? new ParallelTemplateGenerator(myController, mySessionContext, myProgressMonitor, myLogger, ruleManager, currentInputModel, currentOutputModel, myGenerationOptions, myDependenciesBuilder, ttrace)\n        : new TemplateGenerator(mySessionContext, myProgressMonitor, myLogger, ruleManager, currentInputModel, currentOutputModel, myGenerationOptions, myDependenciesBuilder, ttrace);\n    if (tg instanceof ParallelTemplateGenerator) {\n      return GeneratorUtil.runReadInWrite(new GenerationComputable<Boolean>() {\n        @Override\n        public Boolean compute() throws GenerationCanceledException, GenerationFailureException {\n          return tg.apply(isPrimary);\n        }\n      });\n    } else {\n      return tg.apply(isPrimary);\n    }\n  }","id":53730,"modified_method":"private boolean applyRules(SModel currentInputModel, SModel currentOutputModel, final boolean isPrimary,\n                             RuleManager ruleManager) throws GenerationFailureException, GenerationCanceledException {\n    boolean result;\n    myDependenciesBuilder.setOutputModel(currentOutputModel);\n    final TemplateGenerator tg =\n      myGenerationOptions.isGenerateInParallel()\n        ? new ParallelTemplateGenerator(myController, mySessionContext, myProgressMonitor, myLogger, ruleManager, currentInputModel, currentOutputModel, myGenerationOptions, myDependenciesBuilder, ttrace)\n        : new TemplateGenerator(mySessionContext, myProgressMonitor, myLogger, ruleManager, currentInputModel, currentOutputModel, myGenerationOptions, myDependenciesBuilder, ttrace);\n    if (tg instanceof ParallelTemplateGenerator) {\n      result = GeneratorUtil.runReadInWrite(new GenerationComputable<Boolean>() {\n        @Override\n        public Boolean compute() throws GenerationCanceledException, GenerationFailureException {\n          return tg.apply(isPrimary);\n        }\n      });\n    } else {\n      result = tg.apply(isPrimary);\n    }\n    if(isPrimary && myNewCache != null) {\n      myNewCache.storeModel(myMajorStep, currentOutputModel, tg.getMappings());\n    }\n    return result;\n  }","commit_id":"f0f1a8a3ce1324fc30d6ebd9fbc06613fb043963","url":"https://github.com/JetBrains/MPS"},{"original_method":"public GenerationStatus generateModel() throws GenerationCanceledException {\n    if (myMajorStep != 0) {\n      throw new GenerationCanceledException();\n    }\n\n    // create a plan\n    myGenerationPlan = new GenerationPlan(myOriginalInputModel.getSModel());\n    if (!checkGenerationPlan(myGenerationPlan)) {\n      // throw new GenerationCanceledException();\n    }\n\n    GenerationFilter filter = new GenerationFilter(myOriginalInputModel, myInvocationContext, myGenerationOptions, myGenerationPlan.getSignature());\n    myDependenciesBuilder = filter.createDependenciesBuilder();\n\n    if (filter.canOptimize()) {\n      int ignored = filter.getIgnoredRoots().size();\n      int total = filter.getRootsCount();\n      myLogger.info((!filter.canIgnoreConditionals() ? \"\" : \"descriptors and \") + ignored + \" of \" + total + \" roots are unchanged\");\n\n      if (total > 0 && ignored == total && filter.canIgnoreConditionals()) {\n        myLogger.info(\"generated files are up-to-date\");\n        return new GenerationStatus(myOriginalInputModel.getSModel(), null,\n          myDependenciesBuilder.getResult(myInvocationContext), false, false, false);\n      }\n\n      if(!filter.getRequiredRoots().isEmpty() || filter.requireConditionals()) {\n        myLogger.info((!filter.requireConditionals() ? \"\" : \"descriptors and \") + filter.getRequiredRoots().size() + \" roots can be used from cache\");\n      }\n    }\n\n    boolean success = false;\n\n    filter.createNewCache();\n    try {\n      SModel currInputModel = myOriginalInputModel.getSModel();\n      SModel currOutput = null;\n\n      ttrace.push(\"steps\", false);\n      for (myMajorStep = 0; myMajorStep < myGenerationPlan.getStepCount(); myMajorStep++) {\n        if (myLogger.needsInfo()) {\n          myLogger.info(\"executing step \" + (myMajorStep + 1));\n        }\n        //ttrace.push(\"step \" + (myMajorStep + 1), false);\n        currOutput = executeMajorStep(currInputModel);\n        //ttrace.pop();\n        filter.storeModel(myMajorStep, currOutput);\n        if (currOutput == null || myLogger.getErrorCount() > 0) {\n          break;\n        }\n        if (myGenerationPlan.getMappingConfigurations(myMajorStep).isEmpty()) {\n          break;\n        }\n        currInputModel = currOutput;\n      }\n      ttrace.pop();\n\n      // we need this in order to prevent memory leaks from nodes which are reported to message view\n      // since session objects might include objects with disposed class loaders\n      if (mySessionContext != null) {\n        mySessionContext.clearTransientObjects();\n      }\n\n      GenerationStatus generationStatus = new GenerationStatus(myOriginalInputModel.getSModel(), currOutput,\n        myDependenciesBuilder.getResult(myInvocationContext), myLogger.getErrorCount() > 0,\n        myLogger.getWarningCount() > 0, false);\n      success = generationStatus.isOk();\n      return generationStatus;\n    } catch (GenerationCanceledException gce) {\n      throw gce;\n    } catch (GenerationFailureException gfe) {\n      // FIXME\n      myLogger.error(gfe.getMessage());\n      myLogger.error(\"model \\\"\" + myOriginalInputModel.getSModelReference().getSModelFqName() + \"\\\" generation failed : \" + gfe);\n      return new GenerationStatus.ERROR(myOriginalInputModel.getSModel());\n    } catch (Throwable e) {\n      myLogger.handleException(e);\n      myLogger.error(\"model \\\"\" + myOriginalInputModel.getSModelReference().getSModelFqName() + \"\\\" generation failed : \" + e);\n      return new GenerationStatus.ERROR(myOriginalInputModel.getSModel());\n    } finally {\n      filter.cleanup(success);\n    }\n  }","id":53731,"modified_method":"public GenerationStatus generateModel() throws GenerationCanceledException {\n    if (myMajorStep != 0) {\n      throw new GenerationCanceledException();\n    }\n\n    // create a plan\n    myGenerationPlan = new GenerationPlan(myOriginalInputModel.getSModel());\n    if (!checkGenerationPlan(myGenerationPlan)) {\n      // throw new GenerationCanceledException();\n    }\n\n    GenerationFilter filter = new GenerationFilter(myOriginalInputModel, myInvocationContext, myGenerationOptions, myGenerationPlan.getSignature());\n    myDependenciesBuilder = filter.createDependenciesBuilder();\n\n    if (filter.canOptimize()) {\n      int ignored = filter.getIgnoredRoots().size();\n      int total = filter.getRootsCount();\n      myLogger.info((!filter.canIgnoreConditionals() ? \"\" : \"descriptors and \") + ignored + \" of \" + total + \" roots are unchanged\");\n\n      if (total > 0 && ignored == total && filter.canIgnoreConditionals()) {\n        myLogger.info(\"generated files are up-to-date\");\n        return new GenerationStatus(myOriginalInputModel.getSModel(), null,\n          myDependenciesBuilder.getResult(myInvocationContext), false, false, false);\n      }\n\n      if(!filter.getRequiredRoots().isEmpty() || filter.requireConditionals()) {\n        myLogger.info((!filter.requireConditionals() ? \"\" : \"descriptors and \") + filter.getRequiredRoots().size() + \" roots can be used from cache\");\n      }\n    }\n\n    boolean success = false;\n\n    myNewCache = filter.createNewCache();\n    try {\n      SModel currInputModel = myOriginalInputModel.getSModel();\n      SModel currOutput = null;\n\n      ttrace.push(\"steps\", false);\n      for (myMajorStep = 0; myMajorStep < myGenerationPlan.getStepCount(); myMajorStep++) {\n        if (myLogger.needsInfo()) {\n          myLogger.info(\"executing step \" + (myMajorStep + 1));\n        }\n        //ttrace.push(\"step \" + (myMajorStep + 1), false);\n        currOutput = executeMajorStep(currInputModel);\n        //ttrace.pop();\n        if (currOutput == null || myLogger.getErrorCount() > 0) {\n          break;\n        }\n        if (myGenerationPlan.getMappingConfigurations(myMajorStep).isEmpty()) {\n          break;\n        }\n        currInputModel = currOutput;\n      }\n      ttrace.pop();\n\n      // we need this in order to prevent memory leaks from nodes which are reported to message view\n      // since session objects might include objects with disposed class loaders\n      if (mySessionContext != null) {\n        mySessionContext.clearTransientObjects();\n      }\n\n      GenerationStatus generationStatus = new GenerationStatus(myOriginalInputModel.getSModel(), currOutput,\n        myDependenciesBuilder.getResult(myInvocationContext), myLogger.getErrorCount() > 0,\n        myLogger.getWarningCount() > 0, false);\n      success = generationStatus.isOk();\n      return generationStatus;\n    } catch (GenerationCanceledException gce) {\n      throw gce;\n    } catch (GenerationFailureException gfe) {\n      // FIXME\n      myLogger.error(gfe.getMessage());\n      myLogger.error(\"model \\\"\" + myOriginalInputModel.getSModelReference().getSModelFqName() + \"\\\" generation failed : \" + gfe);\n      return new GenerationStatus.ERROR(myOriginalInputModel.getSModel());\n    } catch (Throwable e) {\n      myLogger.handleException(e);\n      myLogger.error(\"model \\\"\" + myOriginalInputModel.getSModelReference().getSModelFqName() + \"\\\" generation failed : \" + e);\n      return new GenerationStatus.ERROR(myOriginalInputModel.getSModel());\n    } finally {\n      if(myNewCache != null) {\n        if(success) {\n          myNewCache.store();\n        } else {\n          myNewCache.remove();\n        }\n      }\n    }\n  }","commit_id":"f0f1a8a3ce1324fc30d6ebd9fbc06613fb043963","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n    public void revert() {\n      if(myReadOnly) {\n        return;\n      }\n      FileUtil.delete(myHashDir);\n    }","id":53732,"modified_method":"@Override\n    public void revert() {\n      if(myReadOnly) {\n        return;\n      }\n      try {\n        FileUtil.delete(myHashDir);\n      } catch(SecurityException ex) {\n        LOG.error(ex);\n      }\n    }","commit_id":"f0f1a8a3ce1324fc30d6ebd9fbc06613fb043963","url":"https://github.com/JetBrains/MPS"},{"original_method":"public GenerationCacheContainer getCache() {\n    return new GenerationCacheContainer() {\n      @Override\n      public ModelCacheContainer getCache(@NotNull SModelDescriptor descriptor, String hash, boolean create) {\n        if(generatorCaches == null) {\n          return null;\n        }\n\n        String modelId = descriptor.getSModelReference().getSModelId().toString();\n        if(modelId == null || modelId.isEmpty()) {\n          return null;\n        }\n\n        File modelCacheDir = new File(generatorCaches, modelId);\n        if(!modelCacheDir.exists()) {\n          if(!create) {\n            return null;\n          }\n          if(!modelCacheDir.mkdirs()) {\n            return null;\n          }\n        }\n\n        File hashDir = new File(modelCacheDir, hash);\n        if(!hashDir.exists()) {\n          if(!create) {\n            return null;\n          }\n          if(!hashDir.mkdirs()) {\n            return null;\n          }\n        }\n        if(create) {\n          for(File file : hashDir.listFiles()) {\n            file.delete();\n          }\n        }\n        return new WorkbenchModelCacheContainer(modelCacheDir, hashDir, hash, !create);\n      }\n    };\n  }","id":53733,"modified_method":"public GenerationCacheContainer getCache() {\n    return new GenerationCacheContainer() {\n      @Override\n      public ModelCacheContainer getCache(@NotNull SModelDescriptor descriptor, String hash, boolean create) {\n        if(generatorCaches == null) {\n          return null;\n        }\n\n        String modelId = descriptor.getSModelReference().getSModelId().toString();\n        if(modelId == null || modelId.isEmpty()) {\n          return null;\n        }\n\n        File modelCacheDir = new File(generatorCaches, modelId);\n        if(!modelCacheDir.exists()) {\n          if(!create) {\n            return null;\n          }\n          if(!modelCacheDir.mkdirs()) {\n            return null;\n          }\n        }\n\n        File hashDir = new File(modelCacheDir, create ? hash + \".gen\" : hash);\n        if(!hashDir.exists()) {\n          if(!create) {\n            return null;\n          }\n          if(!hashDir.mkdirs()) {\n            return null;\n          }\n        }\n        if(create) {\n          for(File file : hashDir.listFiles()) {\n            file.delete();\n          }\n        }\n        return new WorkbenchModelCacheContainer(modelCacheDir, hashDir, hash, !create);\n      }\n    };\n  }","commit_id":"f0f1a8a3ce1324fc30d6ebd9fbc06613fb043963","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n    public void commit() {\n      if(myReadOnly) {\n        return;\n      }\n      for (File child : myFolder.listFiles()) {\n        if(!myHash.equals(child.getName())) {\n          FileUtil.delete(child);\n        }\n      }\n    }","id":53734,"modified_method":"@Override\n    public void commit() {\n      if(myReadOnly) {\n        return;\n      }\n      try {\n        for (File child : myFolder.listFiles()) {\n          if(!myHashDir.getName().equals(child.getName())) {\n            FileUtil.delete(child);\n          }\n        }\n\n        myHashDir.renameTo(new File(myFolder, myHash));\n      } catch(SecurityException ex) {\n        LOG.error(ex);\n      }\n    }","commit_id":"f0f1a8a3ce1324fc30d6ebd9fbc06613fb043963","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void storeModel(int step, SModel model) {\n    try {\n      OutputStream stream = myCacheContainer.createStream(STEP + step);\n      TransientModelPersistence.saveModel(model, stream);\n\n    } catch (IOException e) {\n      isOk = false;\n    }\n  }","id":53735,"modified_method":"public void storeModel(int step, SModel model, GeneratorMappings mappings) {\n    try {\n      OutputStream stream = myCacheContainer.createStream(STEP + step);\n      TransientModelPersistence.saveModel(model, stream);\n\n    } catch (IOException e) {\n      isOk = false;\n    }\n  }","commit_id":"f0f1a8a3ce1324fc30d6ebd9fbc06613fb043963","url":"https://github.com/JetBrains/MPS"},{"original_method":"public LldpElement getLldpElement() {\n\t\tLldpElement lldpElement = new LldpElement();\n\t\tlldpElement.setLldpChassisId(getLldpLocChassisid());\n\t\tlldpElement.setLldpChassisIdSubType(LldpChassisIdSubType.get(getLldpLocChassisidSubType()));\n\t\tlldpElement.setLldpSysname(getLldpLocSysname());\n\t\treturn lldpElement;\n    }","id":53736,"modified_method":"public LldpElement getLldpElement() {\n\t\tLldpElement lldpElement = new LldpElement();\n\t\tlldpElement.setLldpChassisId(decodeLldpChassisId(getLldpLocChassisid(),getLldpLocChassisidSubType()));\n\t\tlldpElement.setLldpChassisIdSubType(LldpChassisIdSubType.get(getLldpLocChassisidSubType()));\n\t\tlldpElement.setLldpSysname(getLldpLocSysname());\n\t\treturn lldpElement;\n    }","commit_id":"e14c050347baed73d0566632b85f47a9f2d17e98","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public String getLldpLocChassisid() {\n    \treturn decodeLldpChassisId(m_store.getValue(LLDP_LOC_CHASSISID_ALIAS),getLldpLocChassisidSubType());\n    }","id":53737,"modified_method":"public SnmpValue getLldpLocChassisid() {\n    \treturn m_store.getValue(LLDP_LOC_CHASSISID_ALIAS);\n    }","commit_id":"e14c050347baed73d0566632b85f47a9f2d17e98","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public static String decodeLldpChassisId(final SnmpValue lldpchassisid, Integer lldpLocChassisidSubType) {\n        try {\n        LldpChassisIdSubType type = LldpChassisIdSubType.get(lldpLocChassisidSubType);\n        \n        /*\n         *  If the associated LldpChassisIdSubtype object has a value of\n         *  'chassisComponent(1)', then the octet string identifies\n         *  a particular instance of the entPhysicalAlias object\n         *  (defined in IETF RFC 2737) for a chassis component (i.e.,\n         *  an entPhysicalClass value of 'chassis(3)').\n         *\n         *  If the associated LldpChassisIdSubtype object has a value\n         *  of 'interfaceAlias(2)', then the octet string identifies\n         *  a particular instance of the ifAlias object (defined in\n         *  IETF RFC 2863) for an interface on the containing chassis.\n         *  If the particular ifAlias object does not contain any values,\n         *  another chassis identifier type should be used.\n         *\n         *  If the associated LldpChassisIdSubtype object has a value\n         *  of 'portComponent(3)', then the octet string identifies a\n         *  particular instance of the entPhysicalAlias object (defined\n         *  in IETF RFC 2737) for a port or backplane component within\n         *  the containing chassis.\n         *\n         *  If the associated LldpChassisIdSubtype object has a value of\n         *  'macAddress(4)', then this string identifies a particular\n         *  unicast source address (encoded in network byte order and\n         *  IEEE 802.3 canonical bit order), of a port on the containing\n         *  chassis as defined in IEEE Std 802-2001.\n         *\n         *  If the associated LldpChassisIdSubtype object has a value of\n         *  'networkAddress(5)', then this string identifies a particular\n         *  network address, encoded in network byte order, associated\n         *  with one or more ports on the containing chassis. The first\n         *  octet contains the IANA Address Family Numbers enumeration\n         *  value for the specific address type, and octets 2 through\n         *  N contain the network address value in network byte order.\n         *\n         *  If the associated LldpChassisIdSubtype object has a value\n         *  of 'interfaceName(6)', then the octet string identifies\n         *  a particular instance of the ifName object (defined in\n         *  IETF RFC 2863) for an interface on the containing chassis.\n         *  If the particular ifName object does not contain any values,\n         *  another chassis identifier type should be used.\n         *\n         * If the associated LldpChassisIdSubtype object has a value of\n         * 'local(7)', then this string identifies a locally assigned\n         * Chassis ID.\n         * \n         * \n         */\n            switch (type) {\n        /*\n         *  entPhysicalAlias          SnmpAdminString\n         *\n         *   SnmpAdminString ::= TEXTUAL-CONVENTION\n         *       DISPLAY-HINT \"255a\"\n         *       STATUS       current\n         *       DESCRIPTION \"An octet string containing administrative\n         *           information, preferably in human-readable form.\n         *\n         *           To facilitate internationalization, this\n         *           information is represented using the ISO/IEC\n         *           IS 10646-1 character set, encoded as an octet\n         *           string using the UTF-8 transformation format\n         *           described in [RFC2279].\n         *\n         *           Since additional code points are added by\n         *           amendments to the 10646 standard from time\n         *           to time, implementations must be prepared to\n         *           encounter any code point from 0x00000000 to\n         *           0x7fffffff.  Byte sequences that do not\n         *           correspond to the valid UTF-8 encoding of a\n         *           code point or are outside this range are\n         *           prohibited.\n         *\n         *           The use of control codes should be avoided.\n         * \n         *           When it is necessary to represent a newline,\n         *           the control code sequence CR LF should be used.\n         *\n         *           The use of leading or trailing white space should\n         *           be avoided.\n         *\n         *           For code points not directly supported by user\n         *           interface hardware or software, an alternative\n         *           means of entry and display, such as hexadecimal,\n         *           may be provided.\n         *\n         *           For information encoded in 7-bit US-ASCII,\n         *           the UTF-8 encoding is identical to the\n         *           US-ASCII encoding.\n         *\n         *           UTF-8 may require multiple bytes to represent a\n         *           single character / code point; thus the length\n         *           of this object in octets may be different from\n         *           the number of characters encoded.  Similarly,\n         *           size constraints refer to the number of encoded\n         *           octets, not the number of characters represented\n         *           by an encoding.\n         *           Note that when this TC is used for an object that\n         *           is used or envisioned to be used as an index, then\n         *           a SIZE restriction MUST be specified so that the\n         *           number of sub-identifiers for any object instance\n         *           does not exceed the limit of 128, as defined by\n         *           [RFC1905].\n         * \n         *           Note that the size of an SnmpAdminString object is\n         *           measured in octets, not characters.\n         *          \"\n         *      SYNTAX       OCTET STRING (SIZE (0..255))\n         */\n             case LLDP_CHASSISID_SUBTYPE_CHASSISCOMPONENT:\n             case LLDP_CHASSISID_SUBTYPE_PORTCOMPONENT:                 \n             case LLDP_CHASSISID_SUBTYPE_INTERFACEALIAS:\n             case LLDP_CHASSISID_SUBTYPE_INTERFACENAME:  \n             case LLDP_CHASSISID_SUBTYPE_LOCAL:\n                 if (lldpchassisid.isDisplayable())\n                     return lldpchassisid.toDisplayString();\n                 else \n                     return lldpchassisid.toHexString();\n             case LLDP_CHASSISID_SUBTYPE_MACADDRESS:\n                 return lldpchassisid.toHexString();\n             case LLDP_CHASSISID_SUBTYPE_NETWORKADDRESS:\n                 LldpUtils.decodeNetworkAddress(lldpchassisid.toDisplayString());\n            }\n        } catch (IllegalArgumentException iae) {\n            iae.printStackTrace();\n        } catch (IndexOutOfBoundsException ioe) {\n            ioe.printStackTrace();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        return lldpchassisid.toHexString();\n    }","id":53738,"modified_method":"public static String decodeLldpChassisId(final SnmpValue lldpchassisid, Integer lldpLocChassisidSubType) {\n        if (lldpLocChassisidSubType == null) {\n            if (lldpchassisid.isDisplayable())\n                return lldpchassisid.toDisplayString();\n            else \n                return lldpchassisid.toHexString();\n        }\n        try {\n            LldpChassisIdSubType type = LldpChassisIdSubType.get(lldpLocChassisidSubType);\n        \n        /*\n         *  If the associated LldpChassisIdSubtype object has a value of\n         *  'chassisComponent(1)', then the octet string identifies\n         *  a particular instance of the entPhysicalAlias object\n         *  (defined in IETF RFC 2737) for a chassis component (i.e.,\n         *  an entPhysicalClass value of 'chassis(3)').\n         *\n         *  If the associated LldpChassisIdSubtype object has a value\n         *  of 'interfaceAlias(2)', then the octet string identifies\n         *  a particular instance of the ifAlias object (defined in\n         *  IETF RFC 2863) for an interface on the containing chassis.\n         *  If the particular ifAlias object does not contain any values,\n         *  another chassis identifier type should be used.\n         *\n         *  If the associated LldpChassisIdSubtype object has a value\n         *  of 'portComponent(3)', then the octet string identifies a\n         *  particular instance of the entPhysicalAlias object (defined\n         *  in IETF RFC 2737) for a port or backplane component within\n         *  the containing chassis.\n         *\n         *  If the associated LldpChassisIdSubtype object has a value of\n         *  'macAddress(4)', then this string identifies a particular\n         *  unicast source address (encoded in network byte order and\n         *  IEEE 802.3 canonical bit order), of a port on the containing\n         *  chassis as defined in IEEE Std 802-2001.\n         *\n         *  If the associated LldpChassisIdSubtype object has a value of\n         *  'networkAddress(5)', then this string identifies a particular\n         *  network address, encoded in network byte order, associated\n         *  with one or more ports on the containing chassis. The first\n         *  octet contains the IANA Address Family Numbers enumeration\n         *  value for the specific address type, and octets 2 through\n         *  N contain the network address value in network byte order.\n         *\n         *  If the associated LldpChassisIdSubtype object has a value\n         *  of 'interfaceName(6)', then the octet string identifies\n         *  a particular instance of the ifName object (defined in\n         *  IETF RFC 2863) for an interface on the containing chassis.\n         *  If the particular ifName object does not contain any values,\n         *  another chassis identifier type should be used.\n         *\n         * If the associated LldpChassisIdSubtype object has a value of\n         * 'local(7)', then this string identifies a locally assigned\n         * Chassis ID.\n         * \n         * \n         */\n            switch (type) {\n        /*\n         *  entPhysicalAlias          SnmpAdminString\n         *\n         *   SnmpAdminString ::= TEXTUAL-CONVENTION\n         *       DISPLAY-HINT \"255a\"\n         *       STATUS       current\n         *       DESCRIPTION \"An octet string containing administrative\n         *           information, preferably in human-readable form.\n         *\n         *           To facilitate internationalization, this\n         *           information is represented using the ISO/IEC\n         *           IS 10646-1 character set, encoded as an octet\n         *           string using the UTF-8 transformation format\n         *           described in [RFC2279].\n         *\n         *           Since additional code points are added by\n         *           amendments to the 10646 standard from time\n         *           to time, implementations must be prepared to\n         *           encounter any code point from 0x00000000 to\n         *           0x7fffffff.  Byte sequences that do not\n         *           correspond to the valid UTF-8 encoding of a\n         *           code point or are outside this range are\n         *           prohibited.\n         *\n         *           The use of control codes should be avoided.\n         * \n         *           When it is necessary to represent a newline,\n         *           the control code sequence CR LF should be used.\n         *\n         *           The use of leading or trailing white space should\n         *           be avoided.\n         *\n         *           For code points not directly supported by user\n         *           interface hardware or software, an alternative\n         *           means of entry and display, such as hexadecimal,\n         *           may be provided.\n         *\n         *           For information encoded in 7-bit US-ASCII,\n         *           the UTF-8 encoding is identical to the\n         *           US-ASCII encoding.\n         *\n         *           UTF-8 may require multiple bytes to represent a\n         *           single character / code point; thus the length\n         *           of this object in octets may be different from\n         *           the number of characters encoded.  Similarly,\n         *           size constraints refer to the number of encoded\n         *           octets, not the number of characters represented\n         *           by an encoding.\n         *           Note that when this TC is used for an object that\n         *           is used or envisioned to be used as an index, then\n         *           a SIZE restriction MUST be specified so that the\n         *           number of sub-identifiers for any object instance\n         *           does not exceed the limit of 128, as defined by\n         *           [RFC1905].\n         * \n         *           Note that the size of an SnmpAdminString object is\n         *           measured in octets, not characters.\n         *          \"\n         *      SYNTAX       OCTET STRING (SIZE (0..255))\n         */\n             case LLDP_CHASSISID_SUBTYPE_CHASSISCOMPONENT:\n             case LLDP_CHASSISID_SUBTYPE_PORTCOMPONENT:                 \n             case LLDP_CHASSISID_SUBTYPE_INTERFACEALIAS:\n             case LLDP_CHASSISID_SUBTYPE_INTERFACENAME:  \n             case LLDP_CHASSISID_SUBTYPE_LOCAL:\n                 if (lldpchassisid.isDisplayable())\n                     return lldpchassisid.toDisplayString();\n                 else \n                     return lldpchassisid.toHexString();\n             case LLDP_CHASSISID_SUBTYPE_MACADDRESS:\n                 return lldpchassisid.toHexString();\n             case LLDP_CHASSISID_SUBTYPE_NETWORKADDRESS:\n                 LldpUtils.decodeNetworkAddress(lldpchassisid.toDisplayString());\n            }\n        } catch (IllegalArgumentException iae) {\n            iae.printStackTrace();\n        } catch (IndexOutOfBoundsException ioe) {\n            ioe.printStackTrace();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        return lldpchassisid.toHexString();\n    }","commit_id":"e14c050347baed73d0566632b85f47a9f2d17e98","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public String getLldpRemChassisId() {\n\t    \treturn LldpLocalGroupTracker.decodeLldpChassisId(getValue(LLDP_REM_CHASSIS_ID), getLldpRemChassisidSubtype());\n\t    }","id":53739,"modified_method":"public SnmpValue getLldpRemChassisId() {\n\t        return getValue(LLDP_REM_CHASSIS_ID);\n\t    }","commit_id":"e14c050347baed73d0566632b85f47a9f2d17e98","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public LldpLink getLldpLink(LldpLocPortGetter lldpLocPort) {\n            LOG.info( \"getLldpLink: row count: {}\", getColumnCount());\n            LOG.info( \"getLldpLink: row local port num: {}\",  getLldpRemLocalPortNum());\n\n            LldpLink lldpLink = lldpLocPort.get(getLldpRemLocalPortNum());\n\n            LOG.info( \"getLldpLink: row local port id: {}\", lldpLink.getLldpPortId());\n            LOG.info( \"getLldpLink: row local port subtype: {}\", LldpPortIdSubType.getTypeString(lldpLink.getLldpPortIdSubType().getValue()));\n    \t\n            lldpLink.setLldpRemChassisId(getLldpRemChassisId());\n            LOG.info( \"getLldpLink: row rem lldp identifier: {}\", lldpLink.getLldpRemChassisId());\n            \n            lldpLink.setLldpRemChassisIdSubType(LldpChassisIdSubType.get(getLldpRemChassisidSubtype()));\n            LOG.info( \"getLldpLink: row rem lldp chassis id subtype: {}\", LldpChassisIdSubType.getTypeString(getLldpRemChassisidSubtype()));\n    \t\n            lldpLink.setLldpRemSysname(getLldpRemSysname());\n            LOG.info( \"getLldpLink: row rem lldp sysname: {}\", lldpLink.getLldpRemSysname());\n\n            lldpLink.setLldpRemPortId(getLldpRemPortid());\n            LOG.info( \"getLldpLink: row rem lldp port id: {}\", lldpLink.getLldpRemPortId());\n\n            lldpLink.setLldpRemPortIdSubType(LldpPortIdSubType.get(getLldpRemPortidSubtype()));\n            LOG.info( \"getLldpLink: row rem lldp port id subtype: {}\", LldpPortIdSubType.getTypeString(getLldpRemPortidSubtype()));\n \n            lldpLink.setLldpRemPortDescr(getLldpRemPortDescr());\n            \n    \t\treturn lldpLink;\n\t    }","id":53740,"modified_method":"public LldpLink getLldpLink(LldpLocPortGetter lldpLocPort) {\n            LOG.info( \"getLldpLink: row count: {}\", getColumnCount());\n            LOG.info( \"getLldpLink: row local port num: {}\",  getLldpRemLocalPortNum());\n\n            LldpLink lldpLink = lldpLocPort.get(getLldpRemLocalPortNum());\n\n            LOG.info( \"getLldpLink: row local port id: {}\", lldpLink.getLldpPortId());\n            LOG.info( \"getLldpLink: row local port subtype: {}\", LldpPortIdSubType.getTypeString(lldpLink.getLldpPortIdSubType().getValue()));\n    \t\n            lldpLink.setLldpRemChassisId(LldpLocalGroupTracker.decodeLldpChassisId(getLldpRemChassisId() , getLldpRemChassisidSubtype()));\n            LOG.info( \"getLldpLink: row rem lldp identifier: {}\", lldpLink.getLldpRemChassisId());\n            \n            lldpLink.setLldpRemChassisIdSubType(LldpChassisIdSubType.get(getLldpRemChassisidSubtype()));\n            LOG.info( \"getLldpLink: row rem lldp chassis id subtype: {}\", LldpChassisIdSubType.getTypeString(getLldpRemChassisidSubtype()));\n    \t\n            lldpLink.setLldpRemSysname(getLldpRemSysname());\n            LOG.info( \"getLldpLink: row rem lldp sysname: {}\", lldpLink.getLldpRemSysname());\n\n            lldpLink.setLldpRemPortId(getLldpRemPortid());\n            LOG.info( \"getLldpLink: row rem lldp port id: {}\", lldpLink.getLldpRemPortId());\n\n            lldpLink.setLldpRemPortIdSubType(LldpPortIdSubType.get(getLldpRemPortidSubtype()));\n            LOG.info( \"getLldpLink: row rem lldp port id subtype: {}\", LldpPortIdSubType.getTypeString(getLldpRemPortidSubtype()));\n \n            lldpLink.setLldpRemPortDescr(getLldpRemPortDescr());\n            \n    \t\treturn lldpLink;\n\t    }","commit_id":"e14c050347baed73d0566632b85f47a9f2d17e98","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public static String decodeLldpPortId(Integer lldpPortIdSubType,SnmpValue lldpportid) {\n        try {\n            LldpPortIdSubType type=LldpPortIdSubType.get(lldpPortIdSubType);\n        /*\n         * \n         *       If the associated LldpPortIdSubtype object has a value of\n         *       'interfaceAlias(1)', then the octet string identifies a\n         *       particular instance of the ifAlias object (defined in IETF\n         *       RFC 2863). If the particular ifAlias object does not contain\n         *       any values, another port identifier type should be used.\n         *\n         *       If the associated LldpPortIdSubtype object has a value of\n         *       'portComponent(2)', then the octet string identifies a\n         *       particular instance of the entPhysicalAlias object (defined\n         *       in IETF RFC 2737) for a port or backplane component.\n         *\n         *       If the associated LldpPortIdSubtype object has a value of\n         *       'macAddress(3)', then this string identifies a particular\n         *       unicast source address (encoded in network byte order\n         *       and IEEE 802.3 canonical bit order) associated with the port\n         *       (IEEE Std 802-2001).\n         *\n         *       If the associated LldpPortIdSubtype object has a value of\n         *       'networkAddress(4)', then this string identifies a network\n         *       address associated with the port. The first octet contains\n         *       the IANA AddressFamilyNumbers enumeration value for the\n         *       specific address type, and octets 2 through N contain the\n         *       networkAddress address value in network byte order.\n         *\n         *       If the associated LldpPortIdSubtype object has a value of\n         *       'interfaceName(5)', then the octet string identifies a\n         *       particular instance of the ifName object (defined in IETF\n         *       RFC 2863). If the particular ifName object does not contain\n         *       any values, another port identifier type should be used.\n         *\n         *       If the associated LldpPortIdSubtype object has a value of\n         *       'agentCircuitId(6)', then this string identifies a agent-local\n         *       identifier of the circuit (defined in RFC 3046).\n         *\n         *       If the associated LldpPortIdSubtype object has a value of\n         *       'local(7)', then this string identifies a locally\n         *       assigned port ID.\"\n         */\n            switch (type) {\n            case LLDP_PORTID_SUBTYPE_PORTCOMPONENT:\n            case LLDP_PORTID_SUBTYPE_AGENTCIRCUITID:\n            case LLDP_PORTID_SUBTYPE_INTERFACEALIAS:\n            case LLDP_PORTID_SUBTYPE_INTERFACENAME:\n            case LLDP_PORTID_SUBTYPE_LOCAL:\n                if (lldpportid.isDisplayable())\n                    return lldpportid.toDisplayString();\n                else \n                    return lldpportid.toHexString();\n            case LLDP_PORTID_SUBTYPE_MACADDRESS:\n                return lldpportid.toHexString();\n            case LLDP_PORTID_SUBTYPE_NETWORKADDRESS:\n                LldpUtils.decodeNetworkAddress(lldpportid.toDisplayString());\n           }\n        } catch (IllegalArgumentException iae) {\n            iae.printStackTrace();\n        } catch (IndexOutOfBoundsException ioe) {\n            ioe.printStackTrace();\n        } catch (Exception e) {\n            e.printStackTrace();\n        } \n        return lldpportid.toHexString();\n    }","id":53741,"modified_method":"public static String decodeLldpPortId(Integer lldpPortIdSubType,SnmpValue lldpportid) {\n        if (lldpPortIdSubType == null) {\n            if (lldpportid.isDisplayable())\n                return lldpportid.toDisplayString();\n            else \n                return lldpportid.toHexString();\n        }\n        try {\n            LldpPortIdSubType type=LldpPortIdSubType.get(lldpPortIdSubType);\n        /*\n         * \n         *       If the associated LldpPortIdSubtype object has a value of\n         *       'interfaceAlias(1)', then the octet string identifies a\n         *       particular instance of the ifAlias object (defined in IETF\n         *       RFC 2863). If the particular ifAlias object does not contain\n         *       any values, another port identifier type should be used.\n         *\n         *       If the associated LldpPortIdSubtype object has a value of\n         *       'portComponent(2)', then the octet string identifies a\n         *       particular instance of the entPhysicalAlias object (defined\n         *       in IETF RFC 2737) for a port or backplane component.\n         *\n         *       If the associated LldpPortIdSubtype object has a value of\n         *       'macAddress(3)', then this string identifies a particular\n         *       unicast source address (encoded in network byte order\n         *       and IEEE 802.3 canonical bit order) associated with the port\n         *       (IEEE Std 802-2001).\n         *\n         *       If the associated LldpPortIdSubtype object has a value of\n         *       'networkAddress(4)', then this string identifies a network\n         *       address associated with the port. The first octet contains\n         *       the IANA AddressFamilyNumbers enumeration value for the\n         *       specific address type, and octets 2 through N contain the\n         *       networkAddress address value in network byte order.\n         *\n         *       If the associated LldpPortIdSubtype object has a value of\n         *       'interfaceName(5)', then the octet string identifies a\n         *       particular instance of the ifName object (defined in IETF\n         *       RFC 2863). If the particular ifName object does not contain\n         *       any values, another port identifier type should be used.\n         *\n         *       If the associated LldpPortIdSubtype object has a value of\n         *       'agentCircuitId(6)', then this string identifies a agent-local\n         *       identifier of the circuit (defined in RFC 3046).\n         *\n         *       If the associated LldpPortIdSubtype object has a value of\n         *       'local(7)', then this string identifies a locally\n         *       assigned port ID.\"\n         */\n            switch (type) {\n            case LLDP_PORTID_SUBTYPE_PORTCOMPONENT:\n            case LLDP_PORTID_SUBTYPE_AGENTCIRCUITID:\n            case LLDP_PORTID_SUBTYPE_INTERFACEALIAS:\n            case LLDP_PORTID_SUBTYPE_INTERFACENAME:\n            case LLDP_PORTID_SUBTYPE_LOCAL:\n                if (lldpportid.isDisplayable())\n                    return lldpportid.toDisplayString();\n                else \n                    return lldpportid.toHexString();\n            case LLDP_PORTID_SUBTYPE_MACADDRESS:\n                return lldpportid.toHexString();\n            case LLDP_PORTID_SUBTYPE_NETWORKADDRESS:\n                LldpUtils.decodeNetworkAddress(lldpportid.toDisplayString());\n           }\n        } catch (IllegalArgumentException iae) {\n            iae.printStackTrace();\n        } catch (IndexOutOfBoundsException ioe) {\n            ioe.printStackTrace();\n        } catch (Exception e) {\n            e.printStackTrace();\n        } \n        return lldpportid.toHexString();\n    }","commit_id":"e14c050347baed73d0566632b85f47a9f2d17e98","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public String getLldpLocChassisid() {\n    \treturn decodeLldpChassisId(m_store.getValue(LLDP_LOC_CHASSISID_ALIAS),getLldpLocChassisidSubType());\n    }","id":53742,"modified_method":"public SnmpValue getLldpLocChassisid() {\n    \treturn m_store.getValue(LLDP_LOC_CHASSISID_ALIAS);\n    }","commit_id":"2a039d1199050fcc85843c115eeeda139a82fec7","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public LldpElement getLldpElement() {\n\t\tLldpElement lldpElement = new LldpElement();\n\t\tlldpElement.setLldpChassisId(getLldpLocChassisid());\n\t\tlldpElement.setLldpChassisIdSubType(LldpChassisIdSubType.get(getLldpLocChassisidSubType()));\n\t\tlldpElement.setLldpSysname(getLldpLocSysname());\n\t\treturn lldpElement;\n    }","id":53743,"modified_method":"public LldpElement getLldpElement() {\n\t\tLldpElement lldpElement = new LldpElement();\n\t\tlldpElement.setLldpChassisId(decodeLldpChassisId(getLldpLocChassisid(),getLldpLocChassisidSubType()));\n\t\tlldpElement.setLldpChassisIdSubType(LldpChassisIdSubType.get(getLldpLocChassisidSubType()));\n\t\tlldpElement.setLldpSysname(getLldpLocSysname());\n\t\treturn lldpElement;\n    }","commit_id":"2a039d1199050fcc85843c115eeeda139a82fec7","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public static String decodeLldpChassisId(final SnmpValue lldpchassisid, Integer lldpLocChassisidSubType) {\n        try {\n        LldpChassisIdSubType type = LldpChassisIdSubType.get(lldpLocChassisidSubType);\n        \n        /*\n         *  If the associated LldpChassisIdSubtype object has a value of\n         *  'chassisComponent(1)', then the octet string identifies\n         *  a particular instance of the entPhysicalAlias object\n         *  (defined in IETF RFC 2737) for a chassis component (i.e.,\n         *  an entPhysicalClass value of 'chassis(3)').\n         *\n         *  If the associated LldpChassisIdSubtype object has a value\n         *  of 'interfaceAlias(2)', then the octet string identifies\n         *  a particular instance of the ifAlias object (defined in\n         *  IETF RFC 2863) for an interface on the containing chassis.\n         *  If the particular ifAlias object does not contain any values,\n         *  another chassis identifier type should be used.\n         *\n         *  If the associated LldpChassisIdSubtype object has a value\n         *  of 'portComponent(3)', then the octet string identifies a\n         *  particular instance of the entPhysicalAlias object (defined\n         *  in IETF RFC 2737) for a port or backplane component within\n         *  the containing chassis.\n         *\n         *  If the associated LldpChassisIdSubtype object has a value of\n         *  'macAddress(4)', then this string identifies a particular\n         *  unicast source address (encoded in network byte order and\n         *  IEEE 802.3 canonical bit order), of a port on the containing\n         *  chassis as defined in IEEE Std 802-2001.\n         *\n         *  If the associated LldpChassisIdSubtype object has a value of\n         *  'networkAddress(5)', then this string identifies a particular\n         *  network address, encoded in network byte order, associated\n         *  with one or more ports on the containing chassis. The first\n         *  octet contains the IANA Address Family Numbers enumeration\n         *  value for the specific address type, and octets 2 through\n         *  N contain the network address value in network byte order.\n         *\n         *  If the associated LldpChassisIdSubtype object has a value\n         *  of 'interfaceName(6)', then the octet string identifies\n         *  a particular instance of the ifName object (defined in\n         *  IETF RFC 2863) for an interface on the containing chassis.\n         *  If the particular ifName object does not contain any values,\n         *  another chassis identifier type should be used.\n         *\n         * If the associated LldpChassisIdSubtype object has a value of\n         * 'local(7)', then this string identifies a locally assigned\n         * Chassis ID.\n         * \n         * \n         */\n            switch (type) {\n        /*\n         *  entPhysicalAlias          SnmpAdminString\n         *\n         *   SnmpAdminString ::= TEXTUAL-CONVENTION\n         *       DISPLAY-HINT \"255a\"\n         *       STATUS       current\n         *       DESCRIPTION \"An octet string containing administrative\n         *           information, preferably in human-readable form.\n         *\n         *           To facilitate internationalization, this\n         *           information is represented using the ISO/IEC\n         *           IS 10646-1 character set, encoded as an octet\n         *           string using the UTF-8 transformation format\n         *           described in [RFC2279].\n         *\n         *           Since additional code points are added by\n         *           amendments to the 10646 standard from time\n         *           to time, implementations must be prepared to\n         *           encounter any code point from 0x00000000 to\n         *           0x7fffffff.  Byte sequences that do not\n         *           correspond to the valid UTF-8 encoding of a\n         *           code point or are outside this range are\n         *           prohibited.\n         *\n         *           The use of control codes should be avoided.\n         * \n         *           When it is necessary to represent a newline,\n         *           the control code sequence CR LF should be used.\n         *\n         *           The use of leading or trailing white space should\n         *           be avoided.\n         *\n         *           For code points not directly supported by user\n         *           interface hardware or software, an alternative\n         *           means of entry and display, such as hexadecimal,\n         *           may be provided.\n         *\n         *           For information encoded in 7-bit US-ASCII,\n         *           the UTF-8 encoding is identical to the\n         *           US-ASCII encoding.\n         *\n         *           UTF-8 may require multiple bytes to represent a\n         *           single character / code point; thus the length\n         *           of this object in octets may be different from\n         *           the number of characters encoded.  Similarly,\n         *           size constraints refer to the number of encoded\n         *           octets, not the number of characters represented\n         *           by an encoding.\n         *           Note that when this TC is used for an object that\n         *           is used or envisioned to be used as an index, then\n         *           a SIZE restriction MUST be specified so that the\n         *           number of sub-identifiers for any object instance\n         *           does not exceed the limit of 128, as defined by\n         *           [RFC1905].\n         * \n         *           Note that the size of an SnmpAdminString object is\n         *           measured in octets, not characters.\n         *          \"\n         *      SYNTAX       OCTET STRING (SIZE (0..255))\n         */\n             case LLDP_CHASSISID_SUBTYPE_CHASSISCOMPONENT:\n             case LLDP_CHASSISID_SUBTYPE_PORTCOMPONENT:                 \n             case LLDP_CHASSISID_SUBTYPE_INTERFACEALIAS:\n             case LLDP_CHASSISID_SUBTYPE_INTERFACENAME:  \n             case LLDP_CHASSISID_SUBTYPE_LOCAL:\n                 if (lldpchassisid.isDisplayable())\n                     return lldpchassisid.toDisplayString();\n                 else \n                     return lldpchassisid.toHexString();\n             case LLDP_CHASSISID_SUBTYPE_MACADDRESS:\n                 return lldpchassisid.toHexString();\n             case LLDP_CHASSISID_SUBTYPE_NETWORKADDRESS:\n                 LldpUtils.decodeNetworkAddress(lldpchassisid.toDisplayString());\n            }\n        } catch (IllegalArgumentException iae) {\n            iae.printStackTrace();\n        } catch (IndexOutOfBoundsException ioe) {\n            ioe.printStackTrace();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        return lldpchassisid.toHexString();\n    }","id":53744,"modified_method":"public static String decodeLldpChassisId(final SnmpValue lldpchassisid, Integer lldpLocChassisidSubType) {\n        if (lldpLocChassisidSubType == null) {\n            if (lldpchassisid.isDisplayable())\n                return lldpchassisid.toDisplayString();\n            else \n                return lldpchassisid.toHexString();\n        }\n        try {\n            LldpChassisIdSubType type = LldpChassisIdSubType.get(lldpLocChassisidSubType);\n        \n        /*\n         *  If the associated LldpChassisIdSubtype object has a value of\n         *  'chassisComponent(1)', then the octet string identifies\n         *  a particular instance of the entPhysicalAlias object\n         *  (defined in IETF RFC 2737) for a chassis component (i.e.,\n         *  an entPhysicalClass value of 'chassis(3)').\n         *\n         *  If the associated LldpChassisIdSubtype object has a value\n         *  of 'interfaceAlias(2)', then the octet string identifies\n         *  a particular instance of the ifAlias object (defined in\n         *  IETF RFC 2863) for an interface on the containing chassis.\n         *  If the particular ifAlias object does not contain any values,\n         *  another chassis identifier type should be used.\n         *\n         *  If the associated LldpChassisIdSubtype object has a value\n         *  of 'portComponent(3)', then the octet string identifies a\n         *  particular instance of the entPhysicalAlias object (defined\n         *  in IETF RFC 2737) for a port or backplane component within\n         *  the containing chassis.\n         *\n         *  If the associated LldpChassisIdSubtype object has a value of\n         *  'macAddress(4)', then this string identifies a particular\n         *  unicast source address (encoded in network byte order and\n         *  IEEE 802.3 canonical bit order), of a port on the containing\n         *  chassis as defined in IEEE Std 802-2001.\n         *\n         *  If the associated LldpChassisIdSubtype object has a value of\n         *  'networkAddress(5)', then this string identifies a particular\n         *  network address, encoded in network byte order, associated\n         *  with one or more ports on the containing chassis. The first\n         *  octet contains the IANA Address Family Numbers enumeration\n         *  value for the specific address type, and octets 2 through\n         *  N contain the network address value in network byte order.\n         *\n         *  If the associated LldpChassisIdSubtype object has a value\n         *  of 'interfaceName(6)', then the octet string identifies\n         *  a particular instance of the ifName object (defined in\n         *  IETF RFC 2863) for an interface on the containing chassis.\n         *  If the particular ifName object does not contain any values,\n         *  another chassis identifier type should be used.\n         *\n         * If the associated LldpChassisIdSubtype object has a value of\n         * 'local(7)', then this string identifies a locally assigned\n         * Chassis ID.\n         * \n         * \n         */\n            switch (type) {\n        /*\n         *  entPhysicalAlias          SnmpAdminString\n         *\n         *   SnmpAdminString ::= TEXTUAL-CONVENTION\n         *       DISPLAY-HINT \"255a\"\n         *       STATUS       current\n         *       DESCRIPTION \"An octet string containing administrative\n         *           information, preferably in human-readable form.\n         *\n         *           To facilitate internationalization, this\n         *           information is represented using the ISO/IEC\n         *           IS 10646-1 character set, encoded as an octet\n         *           string using the UTF-8 transformation format\n         *           described in [RFC2279].\n         *\n         *           Since additional code points are added by\n         *           amendments to the 10646 standard from time\n         *           to time, implementations must be prepared to\n         *           encounter any code point from 0x00000000 to\n         *           0x7fffffff.  Byte sequences that do not\n         *           correspond to the valid UTF-8 encoding of a\n         *           code point or are outside this range are\n         *           prohibited.\n         *\n         *           The use of control codes should be avoided.\n         * \n         *           When it is necessary to represent a newline,\n         *           the control code sequence CR LF should be used.\n         *\n         *           The use of leading or trailing white space should\n         *           be avoided.\n         *\n         *           For code points not directly supported by user\n         *           interface hardware or software, an alternative\n         *           means of entry and display, such as hexadecimal,\n         *           may be provided.\n         *\n         *           For information encoded in 7-bit US-ASCII,\n         *           the UTF-8 encoding is identical to the\n         *           US-ASCII encoding.\n         *\n         *           UTF-8 may require multiple bytes to represent a\n         *           single character / code point; thus the length\n         *           of this object in octets may be different from\n         *           the number of characters encoded.  Similarly,\n         *           size constraints refer to the number of encoded\n         *           octets, not the number of characters represented\n         *           by an encoding.\n         *           Note that when this TC is used for an object that\n         *           is used or envisioned to be used as an index, then\n         *           a SIZE restriction MUST be specified so that the\n         *           number of sub-identifiers for any object instance\n         *           does not exceed the limit of 128, as defined by\n         *           [RFC1905].\n         * \n         *           Note that the size of an SnmpAdminString object is\n         *           measured in octets, not characters.\n         *          \"\n         *      SYNTAX       OCTET STRING (SIZE (0..255))\n         */\n             case LLDP_CHASSISID_SUBTYPE_CHASSISCOMPONENT:\n             case LLDP_CHASSISID_SUBTYPE_PORTCOMPONENT:                 \n             case LLDP_CHASSISID_SUBTYPE_INTERFACEALIAS:\n             case LLDP_CHASSISID_SUBTYPE_INTERFACENAME:  \n             case LLDP_CHASSISID_SUBTYPE_LOCAL:\n                 if (lldpchassisid.isDisplayable())\n                     return lldpchassisid.toDisplayString();\n                 else \n                     return lldpchassisid.toHexString();\n             case LLDP_CHASSISID_SUBTYPE_MACADDRESS:\n                 return lldpchassisid.toHexString();\n             case LLDP_CHASSISID_SUBTYPE_NETWORKADDRESS:\n                 LldpUtils.decodeNetworkAddress(lldpchassisid.toDisplayString());\n            }\n        } catch (IllegalArgumentException iae) {\n            iae.printStackTrace();\n        } catch (IndexOutOfBoundsException ioe) {\n            ioe.printStackTrace();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        return lldpchassisid.toHexString();\n    }","commit_id":"2a039d1199050fcc85843c115eeeda139a82fec7","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public String getLldpRemChassisId() {\n\t    \treturn LldpLocalGroupTracker.decodeLldpChassisId(getValue(LLDP_REM_CHASSIS_ID), getLldpRemChassisidSubtype());\n\t    }","id":53745,"modified_method":"public SnmpValue getLldpRemChassisId() {\n\t        return getValue(LLDP_REM_CHASSIS_ID);\n\t    }","commit_id":"2a039d1199050fcc85843c115eeeda139a82fec7","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public LldpLink getLldpLink(LldpLocPortGetter lldpLocPort) {\n            LOG.info( \"getLldpLink: row count: {}\", getColumnCount());\n            LOG.info( \"getLldpLink: row local port num: {}\",  getLldpRemLocalPortNum());\n\n            LldpLink lldpLink = lldpLocPort.get(getLldpRemLocalPortNum());\n\n            LOG.info( \"getLldpLink: row local port id: {}\", lldpLink.getLldpPortId());\n            LOG.info( \"getLldpLink: row local port subtype: {}\", LldpPortIdSubType.getTypeString(lldpLink.getLldpPortIdSubType().getValue()));\n    \t\n            lldpLink.setLldpRemChassisId(getLldpRemChassisId());\n            LOG.info( \"getLldpLink: row rem lldp identifier: {}\", lldpLink.getLldpRemChassisId());\n            \n            lldpLink.setLldpRemChassisIdSubType(LldpChassisIdSubType.get(getLldpRemChassisidSubtype()));\n            LOG.info( \"getLldpLink: row rem lldp chassis id subtype: {}\", LldpChassisIdSubType.getTypeString(getLldpRemChassisidSubtype()));\n    \t\n            lldpLink.setLldpRemSysname(getLldpRemSysname());\n            LOG.info( \"getLldpLink: row rem lldp sysname: {}\", lldpLink.getLldpRemSysname());\n\n            lldpLink.setLldpRemPortId(getLldpRemPortid());\n            LOG.info( \"getLldpLink: row rem lldp port id: {}\", lldpLink.getLldpRemPortId());\n\n            lldpLink.setLldpRemPortIdSubType(LldpPortIdSubType.get(getLldpRemPortidSubtype()));\n            LOG.info( \"getLldpLink: row rem lldp port id subtype: {}\", LldpPortIdSubType.getTypeString(getLldpRemPortidSubtype()));\n \n            lldpLink.setLldpRemPortDescr(getLldpRemPortDescr());\n            \n    \t\treturn lldpLink;\n\t    }","id":53746,"modified_method":"public LldpLink getLldpLink(LldpLocPortGetter lldpLocPort) {\n            LOG.info( \"getLldpLink: row count: {}\", getColumnCount());\n            LOG.info( \"getLldpLink: row local port num: {}\",  getLldpRemLocalPortNum());\n\n            LldpLink lldpLink = lldpLocPort.get(getLldpRemLocalPortNum());\n\n            LOG.info( \"getLldpLink: row local port id: {}\", lldpLink.getLldpPortId());\n            LOG.info( \"getLldpLink: row local port subtype: {}\", LldpPortIdSubType.getTypeString(lldpLink.getLldpPortIdSubType().getValue()));\n    \t\n            lldpLink.setLldpRemChassisId(LldpLocalGroupTracker.decodeLldpChassisId(getLldpRemChassisId() , getLldpRemChassisidSubtype()));\n            LOG.info( \"getLldpLink: row rem lldp identifier: {}\", lldpLink.getLldpRemChassisId());\n            \n            lldpLink.setLldpRemChassisIdSubType(LldpChassisIdSubType.get(getLldpRemChassisidSubtype()));\n            LOG.info( \"getLldpLink: row rem lldp chassis id subtype: {}\", LldpChassisIdSubType.getTypeString(getLldpRemChassisidSubtype()));\n    \t\n            lldpLink.setLldpRemSysname(getLldpRemSysname());\n            LOG.info( \"getLldpLink: row rem lldp sysname: {}\", lldpLink.getLldpRemSysname());\n\n            lldpLink.setLldpRemPortId(getLldpRemPortid());\n            LOG.info( \"getLldpLink: row rem lldp port id: {}\", lldpLink.getLldpRemPortId());\n\n            lldpLink.setLldpRemPortIdSubType(LldpPortIdSubType.get(getLldpRemPortidSubtype()));\n            LOG.info( \"getLldpLink: row rem lldp port id subtype: {}\", LldpPortIdSubType.getTypeString(getLldpRemPortidSubtype()));\n \n            lldpLink.setLldpRemPortDescr(getLldpRemPortDescr());\n            \n    \t\treturn lldpLink;\n\t    }","commit_id":"2a039d1199050fcc85843c115eeeda139a82fec7","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public static String decodeLldpPortId(Integer lldpPortIdSubType,SnmpValue lldpportid) {\n        try {\n            LldpPortIdSubType type=LldpPortIdSubType.get(lldpPortIdSubType);\n        /*\n         * \n         *       If the associated LldpPortIdSubtype object has a value of\n         *       'interfaceAlias(1)', then the octet string identifies a\n         *       particular instance of the ifAlias object (defined in IETF\n         *       RFC 2863). If the particular ifAlias object does not contain\n         *       any values, another port identifier type should be used.\n         *\n         *       If the associated LldpPortIdSubtype object has a value of\n         *       'portComponent(2)', then the octet string identifies a\n         *       particular instance of the entPhysicalAlias object (defined\n         *       in IETF RFC 2737) for a port or backplane component.\n         *\n         *       If the associated LldpPortIdSubtype object has a value of\n         *       'macAddress(3)', then this string identifies a particular\n         *       unicast source address (encoded in network byte order\n         *       and IEEE 802.3 canonical bit order) associated with the port\n         *       (IEEE Std 802-2001).\n         *\n         *       If the associated LldpPortIdSubtype object has a value of\n         *       'networkAddress(4)', then this string identifies a network\n         *       address associated with the port. The first octet contains\n         *       the IANA AddressFamilyNumbers enumeration value for the\n         *       specific address type, and octets 2 through N contain the\n         *       networkAddress address value in network byte order.\n         *\n         *       If the associated LldpPortIdSubtype object has a value of\n         *       'interfaceName(5)', then the octet string identifies a\n         *       particular instance of the ifName object (defined in IETF\n         *       RFC 2863). If the particular ifName object does not contain\n         *       any values, another port identifier type should be used.\n         *\n         *       If the associated LldpPortIdSubtype object has a value of\n         *       'agentCircuitId(6)', then this string identifies a agent-local\n         *       identifier of the circuit (defined in RFC 3046).\n         *\n         *       If the associated LldpPortIdSubtype object has a value of\n         *       'local(7)', then this string identifies a locally\n         *       assigned port ID.\"\n         */\n            switch (type) {\n            case LLDP_PORTID_SUBTYPE_PORTCOMPONENT:\n            case LLDP_PORTID_SUBTYPE_AGENTCIRCUITID:\n            case LLDP_PORTID_SUBTYPE_INTERFACEALIAS:\n            case LLDP_PORTID_SUBTYPE_INTERFACENAME:\n            case LLDP_PORTID_SUBTYPE_LOCAL:\n                if (lldpportid.isDisplayable())\n                    return lldpportid.toDisplayString();\n                else \n                    return lldpportid.toHexString();\n            case LLDP_PORTID_SUBTYPE_MACADDRESS:\n                return lldpportid.toHexString();\n            case LLDP_PORTID_SUBTYPE_NETWORKADDRESS:\n                LldpUtils.decodeNetworkAddress(lldpportid.toDisplayString());\n           }\n        } catch (IllegalArgumentException iae) {\n            iae.printStackTrace();\n        } catch (IndexOutOfBoundsException ioe) {\n            ioe.printStackTrace();\n        } catch (Exception e) {\n            e.printStackTrace();\n        } \n        return lldpportid.toHexString();\n    }","id":53747,"modified_method":"public static String decodeLldpPortId(Integer lldpPortIdSubType,SnmpValue lldpportid) {\n        if (lldpPortIdSubType == null) {\n            if (lldpportid.isDisplayable())\n                return lldpportid.toDisplayString();\n            else \n                return lldpportid.toHexString();\n        }\n        try {\n            LldpPortIdSubType type=LldpPortIdSubType.get(lldpPortIdSubType);\n        /*\n         * \n         *       If the associated LldpPortIdSubtype object has a value of\n         *       'interfaceAlias(1)', then the octet string identifies a\n         *       particular instance of the ifAlias object (defined in IETF\n         *       RFC 2863). If the particular ifAlias object does not contain\n         *       any values, another port identifier type should be used.\n         *\n         *       If the associated LldpPortIdSubtype object has a value of\n         *       'portComponent(2)', then the octet string identifies a\n         *       particular instance of the entPhysicalAlias object (defined\n         *       in IETF RFC 2737) for a port or backplane component.\n         *\n         *       If the associated LldpPortIdSubtype object has a value of\n         *       'macAddress(3)', then this string identifies a particular\n         *       unicast source address (encoded in network byte order\n         *       and IEEE 802.3 canonical bit order) associated with the port\n         *       (IEEE Std 802-2001).\n         *\n         *       If the associated LldpPortIdSubtype object has a value of\n         *       'networkAddress(4)', then this string identifies a network\n         *       address associated with the port. The first octet contains\n         *       the IANA AddressFamilyNumbers enumeration value for the\n         *       specific address type, and octets 2 through N contain the\n         *       networkAddress address value in network byte order.\n         *\n         *       If the associated LldpPortIdSubtype object has a value of\n         *       'interfaceName(5)', then the octet string identifies a\n         *       particular instance of the ifName object (defined in IETF\n         *       RFC 2863). If the particular ifName object does not contain\n         *       any values, another port identifier type should be used.\n         *\n         *       If the associated LldpPortIdSubtype object has a value of\n         *       'agentCircuitId(6)', then this string identifies a agent-local\n         *       identifier of the circuit (defined in RFC 3046).\n         *\n         *       If the associated LldpPortIdSubtype object has a value of\n         *       'local(7)', then this string identifies a locally\n         *       assigned port ID.\"\n         */\n            switch (type) {\n            case LLDP_PORTID_SUBTYPE_PORTCOMPONENT:\n            case LLDP_PORTID_SUBTYPE_AGENTCIRCUITID:\n            case LLDP_PORTID_SUBTYPE_INTERFACEALIAS:\n            case LLDP_PORTID_SUBTYPE_INTERFACENAME:\n            case LLDP_PORTID_SUBTYPE_LOCAL:\n                if (lldpportid.isDisplayable())\n                    return lldpportid.toDisplayString();\n                else \n                    return lldpportid.toHexString();\n            case LLDP_PORTID_SUBTYPE_MACADDRESS:\n                return lldpportid.toHexString();\n            case LLDP_PORTID_SUBTYPE_NETWORKADDRESS:\n                LldpUtils.decodeNetworkAddress(lldpportid.toDisplayString());\n           }\n        } catch (IllegalArgumentException iae) {\n            iae.printStackTrace();\n        } catch (IndexOutOfBoundsException ioe) {\n            ioe.printStackTrace();\n        } catch (Exception e) {\n            e.printStackTrace();\n        } \n        return lldpportid.toHexString();\n    }","commit_id":"2a039d1199050fcc85843c115eeeda139a82fec7","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public static String decodeLldpChassisId(final SnmpValue lldpchassisid, Integer lldpLocChassisidSubType) {\n        try {\n        LldpChassisIdSubType type = LldpChassisIdSubType.get(lldpLocChassisidSubType);\n        \n        /*\n         *  If the associated LldpChassisIdSubtype object has a value of\n         *  'chassisComponent(1)', then the octet string identifies\n         *  a particular instance of the entPhysicalAlias object\n         *  (defined in IETF RFC 2737) for a chassis component (i.e.,\n         *  an entPhysicalClass value of 'chassis(3)').\n         *\n         *  If the associated LldpChassisIdSubtype object has a value\n         *  of 'interfaceAlias(2)', then the octet string identifies\n         *  a particular instance of the ifAlias object (defined in\n         *  IETF RFC 2863) for an interface on the containing chassis.\n         *  If the particular ifAlias object does not contain any values,\n         *  another chassis identifier type should be used.\n         *\n         *  If the associated LldpChassisIdSubtype object has a value\n         *  of 'portComponent(3)', then the octet string identifies a\n         *  particular instance of the entPhysicalAlias object (defined\n         *  in IETF RFC 2737) for a port or backplane component within\n         *  the containing chassis.\n         *\n         *  If the associated LldpChassisIdSubtype object has a value of\n         *  'macAddress(4)', then this string identifies a particular\n         *  unicast source address (encoded in network byte order and\n         *  IEEE 802.3 canonical bit order), of a port on the containing\n         *  chassis as defined in IEEE Std 802-2001.\n         *\n         *  If the associated LldpChassisIdSubtype object has a value of\n         *  'networkAddress(5)', then this string identifies a particular\n         *  network address, encoded in network byte order, associated\n         *  with one or more ports on the containing chassis. The first\n         *  octet contains the IANA Address Family Numbers enumeration\n         *  value for the specific address type, and octets 2 through\n         *  N contain the network address value in network byte order.\n         *\n         *  If the associated LldpChassisIdSubtype object has a value\n         *  of 'interfaceName(6)', then the octet string identifies\n         *  a particular instance of the ifName object (defined in\n         *  IETF RFC 2863) for an interface on the containing chassis.\n         *  If the particular ifName object does not contain any values,\n         *  another chassis identifier type should be used.\n         *\n         * If the associated LldpChassisIdSubtype object has a value of\n         * 'local(7)', then this string identifies a locally assigned\n         * Chassis ID.\n         * \n         * \n         */\n            switch (type) {\n        /*\n         *  entPhysicalAlias          SnmpAdminString\n         *\n         *   SnmpAdminString ::= TEXTUAL-CONVENTION\n         *       DISPLAY-HINT \"255a\"\n         *       STATUS       current\n         *       DESCRIPTION \"An octet string containing administrative\n         *           information, preferably in human-readable form.\n         *\n         *           To facilitate internationalization, this\n         *           information is represented using the ISO/IEC\n         *           IS 10646-1 character set, encoded as an octet\n         *           string using the UTF-8 transformation format\n         *           described in [RFC2279].\n         *\n         *           Since additional code points are added by\n         *           amendments to the 10646 standard from time\n         *           to time, implementations must be prepared to\n         *           encounter any code point from 0x00000000 to\n         *           0x7fffffff.  Byte sequences that do not\n         *           correspond to the valid UTF-8 encoding of a\n         *           code point or are outside this range are\n         *           prohibited.\n         *\n         *           The use of control codes should be avoided.\n         * \n         *           When it is necessary to represent a newline,\n         *           the control code sequence CR LF should be used.\n         *\n         *           The use of leading or trailing white space should\n         *           be avoided.\n         *\n         *           For code points not directly supported by user\n         *           interface hardware or software, an alternative\n         *           means of entry and display, such as hexadecimal,\n         *           may be provided.\n         *\n         *           For information encoded in 7-bit US-ASCII,\n         *           the UTF-8 encoding is identical to the\n         *           US-ASCII encoding.\n         *\n         *           UTF-8 may require multiple bytes to represent a\n         *           single character / code point; thus the length\n         *           of this object in octets may be different from\n         *           the number of characters encoded.  Similarly,\n         *           size constraints refer to the number of encoded\n         *           octets, not the number of characters represented\n         *           by an encoding.\n         *           Note that when this TC is used for an object that\n         *           is used or envisioned to be used as an index, then\n         *           a SIZE restriction MUST be specified so that the\n         *           number of sub-identifiers for any object instance\n         *           does not exceed the limit of 128, as defined by\n         *           [RFC1905].\n         * \n         *           Note that the size of an SnmpAdminString object is\n         *           measured in octets, not characters.\n         *          \"\n         *      SYNTAX       OCTET STRING (SIZE (0..255))\n         */\n             case LLDP_CHASSISID_SUBTYPE_CHASSISCOMPONENT:\n             case LLDP_CHASSISID_SUBTYPE_PORTCOMPONENT:                 \n             case LLDP_CHASSISID_SUBTYPE_INTERFACEALIAS:\n             case LLDP_CHASSISID_SUBTYPE_INTERFACENAME:  \n             case LLDP_CHASSISID_SUBTYPE_LOCAL:\n                 if (lldpchassisid.isDisplayable())\n                     return lldpchassisid.toDisplayString();\n                 else \n                     return lldpchassisid.toHexString();\n             case LLDP_CHASSISID_SUBTYPE_MACADDRESS:\n                 return lldpchassisid.toHexString();\n             case LLDP_CHASSISID_SUBTYPE_NETWORKADDRESS:\n                 LldpUtils.decodeNetworkAddress(lldpchassisid.toDisplayString());\n            }\n        } catch (IllegalArgumentException iae) {\n            iae.printStackTrace();\n        } catch (IndexOutOfBoundsException ioe) {\n            ioe.printStackTrace();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        return lldpchassisid.toHexString();\n    }","id":53748,"modified_method":"public static String decodeLldpChassisId(final SnmpValue lldpchassisid, Integer lldpLocChassisidSubType) {\n        if (lldpLocChassisidSubType == null) {\n            if (lldpchassisid.isDisplayable())\n                return lldpchassisid.toDisplayString();\n            else \n                return lldpchassisid.toHexString();\n        }\n        try {\n            LldpChassisIdSubType type = LldpChassisIdSubType.get(lldpLocChassisidSubType);\n        \n        /*\n         *  If the associated LldpChassisIdSubtype object has a value of\n         *  'chassisComponent(1)', then the octet string identifies\n         *  a particular instance of the entPhysicalAlias object\n         *  (defined in IETF RFC 2737) for a chassis component (i.e.,\n         *  an entPhysicalClass value of 'chassis(3)').\n         *\n         *  If the associated LldpChassisIdSubtype object has a value\n         *  of 'interfaceAlias(2)', then the octet string identifies\n         *  a particular instance of the ifAlias object (defined in\n         *  IETF RFC 2863) for an interface on the containing chassis.\n         *  If the particular ifAlias object does not contain any values,\n         *  another chassis identifier type should be used.\n         *\n         *  If the associated LldpChassisIdSubtype object has a value\n         *  of 'portComponent(3)', then the octet string identifies a\n         *  particular instance of the entPhysicalAlias object (defined\n         *  in IETF RFC 2737) for a port or backplane component within\n         *  the containing chassis.\n         *\n         *  If the associated LldpChassisIdSubtype object has a value of\n         *  'macAddress(4)', then this string identifies a particular\n         *  unicast source address (encoded in network byte order and\n         *  IEEE 802.3 canonical bit order), of a port on the containing\n         *  chassis as defined in IEEE Std 802-2001.\n         *\n         *  If the associated LldpChassisIdSubtype object has a value of\n         *  'networkAddress(5)', then this string identifies a particular\n         *  network address, encoded in network byte order, associated\n         *  with one or more ports on the containing chassis. The first\n         *  octet contains the IANA Address Family Numbers enumeration\n         *  value for the specific address type, and octets 2 through\n         *  N contain the network address value in network byte order.\n         *\n         *  If the associated LldpChassisIdSubtype object has a value\n         *  of 'interfaceName(6)', then the octet string identifies\n         *  a particular instance of the ifName object (defined in\n         *  IETF RFC 2863) for an interface on the containing chassis.\n         *  If the particular ifName object does not contain any values,\n         *  another chassis identifier type should be used.\n         *\n         * If the associated LldpChassisIdSubtype object has a value of\n         * 'local(7)', then this string identifies a locally assigned\n         * Chassis ID.\n         * \n         * \n         */\n            switch (type) {\n        /*\n         *  entPhysicalAlias          SnmpAdminString\n         *\n         *   SnmpAdminString ::= TEXTUAL-CONVENTION\n         *       DISPLAY-HINT \"255a\"\n         *       STATUS       current\n         *       DESCRIPTION \"An octet string containing administrative\n         *           information, preferably in human-readable form.\n         *\n         *           To facilitate internationalization, this\n         *           information is represented using the ISO/IEC\n         *           IS 10646-1 character set, encoded as an octet\n         *           string using the UTF-8 transformation format\n         *           described in [RFC2279].\n         *\n         *           Since additional code points are added by\n         *           amendments to the 10646 standard from time\n         *           to time, implementations must be prepared to\n         *           encounter any code point from 0x00000000 to\n         *           0x7fffffff.  Byte sequences that do not\n         *           correspond to the valid UTF-8 encoding of a\n         *           code point or are outside this range are\n         *           prohibited.\n         *\n         *           The use of control codes should be avoided.\n         * \n         *           When it is necessary to represent a newline,\n         *           the control code sequence CR LF should be used.\n         *\n         *           The use of leading or trailing white space should\n         *           be avoided.\n         *\n         *           For code points not directly supported by user\n         *           interface hardware or software, an alternative\n         *           means of entry and display, such as hexadecimal,\n         *           may be provided.\n         *\n         *           For information encoded in 7-bit US-ASCII,\n         *           the UTF-8 encoding is identical to the\n         *           US-ASCII encoding.\n         *\n         *           UTF-8 may require multiple bytes to represent a\n         *           single character / code point; thus the length\n         *           of this object in octets may be different from\n         *           the number of characters encoded.  Similarly,\n         *           size constraints refer to the number of encoded\n         *           octets, not the number of characters represented\n         *           by an encoding.\n         *           Note that when this TC is used for an object that\n         *           is used or envisioned to be used as an index, then\n         *           a SIZE restriction MUST be specified so that the\n         *           number of sub-identifiers for any object instance\n         *           does not exceed the limit of 128, as defined by\n         *           [RFC1905].\n         * \n         *           Note that the size of an SnmpAdminString object is\n         *           measured in octets, not characters.\n         *          \"\n         *      SYNTAX       OCTET STRING (SIZE (0..255))\n         */\n             case LLDP_CHASSISID_SUBTYPE_CHASSISCOMPONENT:\n             case LLDP_CHASSISID_SUBTYPE_PORTCOMPONENT:                 \n             case LLDP_CHASSISID_SUBTYPE_INTERFACEALIAS:\n             case LLDP_CHASSISID_SUBTYPE_INTERFACENAME:  \n             case LLDP_CHASSISID_SUBTYPE_LOCAL:\n                 if (lldpchassisid.isDisplayable())\n                     return lldpchassisid.toDisplayString();\n                 else \n                     return lldpchassisid.toHexString();\n             case LLDP_CHASSISID_SUBTYPE_MACADDRESS:\n                 return lldpchassisid.toHexString();\n             case LLDP_CHASSISID_SUBTYPE_NETWORKADDRESS:\n                 LldpUtils.decodeNetworkAddress(lldpchassisid.toDisplayString());\n            }\n        } catch (IllegalArgumentException iae) {\n            iae.printStackTrace();\n        } catch (IndexOutOfBoundsException ioe) {\n            ioe.printStackTrace();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        return lldpchassisid.toHexString();\n    }","commit_id":"4930c5c99726a27b128c83d86163b42c54cf309b","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public String getLldpLocChassisid() {\n    \treturn decodeLldpChassisId(m_store.getValue(LLDP_LOC_CHASSISID_ALIAS),getLldpLocChassisidSubType());\n    }","id":53749,"modified_method":"public SnmpValue getLldpLocChassisid() {\n    \treturn m_store.getValue(LLDP_LOC_CHASSISID_ALIAS);\n    }","commit_id":"4930c5c99726a27b128c83d86163b42c54cf309b","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public LldpElement getLldpElement() {\n\t\tLldpElement lldpElement = new LldpElement();\n\t\tlldpElement.setLldpChassisId(getLldpLocChassisid());\n\t\tlldpElement.setLldpChassisIdSubType(LldpChassisIdSubType.get(getLldpLocChassisidSubType()));\n\t\tlldpElement.setLldpSysname(getLldpLocSysname());\n\t\treturn lldpElement;\n    }","id":53750,"modified_method":"public LldpElement getLldpElement() {\n\t\tLldpElement lldpElement = new LldpElement();\n\t\tlldpElement.setLldpChassisId(decodeLldpChassisId(getLldpLocChassisid(),getLldpLocChassisidSubType()));\n\t\tlldpElement.setLldpChassisIdSubType(LldpChassisIdSubType.get(getLldpLocChassisidSubType()));\n\t\tlldpElement.setLldpSysname(getLldpLocSysname());\n\t\treturn lldpElement;\n    }","commit_id":"4930c5c99726a27b128c83d86163b42c54cf309b","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public String getLldpRemChassisId() {\n\t    \treturn LldpLocalGroupTracker.decodeLldpChassisId(getValue(LLDP_REM_CHASSIS_ID), getLldpRemChassisidSubtype());\n\t    }","id":53751,"modified_method":"public SnmpValue getLldpRemChassisId() {\n\t        return getValue(LLDP_REM_CHASSIS_ID);\n\t    }","commit_id":"4930c5c99726a27b128c83d86163b42c54cf309b","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public LldpLink getLldpLink(LldpLocPortGetter lldpLocPort) {\n            LOG.info( \"getLldpLink: row count: {}\", getColumnCount());\n            LOG.info( \"getLldpLink: row local port num: {}\",  getLldpRemLocalPortNum());\n\n            LldpLink lldpLink = lldpLocPort.get(getLldpRemLocalPortNum());\n\n            LOG.info( \"getLldpLink: row local port id: {}\", lldpLink.getLldpPortId());\n            LOG.info( \"getLldpLink: row local port subtype: {}\", LldpPortIdSubType.getTypeString(lldpLink.getLldpPortIdSubType().getValue()));\n    \t\n            lldpLink.setLldpRemChassisId(getLldpRemChassisId());\n            LOG.info( \"getLldpLink: row rem lldp identifier: {}\", lldpLink.getLldpRemChassisId());\n            \n            lldpLink.setLldpRemChassisIdSubType(LldpChassisIdSubType.get(getLldpRemChassisidSubtype()));\n            LOG.info( \"getLldpLink: row rem lldp chassis id subtype: {}\", LldpChassisIdSubType.getTypeString(getLldpRemChassisidSubtype()));\n    \t\n            lldpLink.setLldpRemSysname(getLldpRemSysname());\n            LOG.info( \"getLldpLink: row rem lldp sysname: {}\", lldpLink.getLldpRemSysname());\n\n            lldpLink.setLldpRemPortId(getLldpRemPortid());\n            LOG.info( \"getLldpLink: row rem lldp port id: {}\", lldpLink.getLldpRemPortId());\n\n            lldpLink.setLldpRemPortIdSubType(LldpPortIdSubType.get(getLldpRemPortidSubtype()));\n            LOG.info( \"getLldpLink: row rem lldp port id subtype: {}\", LldpPortIdSubType.getTypeString(getLldpRemPortidSubtype()));\n \n            lldpLink.setLldpRemPortDescr(getLldpRemPortDescr());\n            \n    \t\treturn lldpLink;\n\t    }","id":53752,"modified_method":"public LldpLink getLldpLink(LldpLocPortGetter lldpLocPort) {\n            LOG.info( \"getLldpLink: row count: {}\", getColumnCount());\n            LOG.info( \"getLldpLink: row local port num: {}\",  getLldpRemLocalPortNum());\n\n            LldpLink lldpLink = lldpLocPort.get(getLldpRemLocalPortNum());\n\n            LOG.info( \"getLldpLink: row local port id: {}\", lldpLink.getLldpPortId());\n            LOG.info( \"getLldpLink: row local port subtype: {}\", LldpPortIdSubType.getTypeString(lldpLink.getLldpPortIdSubType().getValue()));\n    \t\n            lldpLink.setLldpRemChassisId(LldpLocalGroupTracker.decodeLldpChassisId(getLldpRemChassisId() , getLldpRemChassisidSubtype()));\n            LOG.info( \"getLldpLink: row rem lldp identifier: {}\", lldpLink.getLldpRemChassisId());\n            \n            lldpLink.setLldpRemChassisIdSubType(LldpChassisIdSubType.get(getLldpRemChassisidSubtype()));\n            LOG.info( \"getLldpLink: row rem lldp chassis id subtype: {}\", LldpChassisIdSubType.getTypeString(getLldpRemChassisidSubtype()));\n    \t\n            lldpLink.setLldpRemSysname(getLldpRemSysname());\n            LOG.info( \"getLldpLink: row rem lldp sysname: {}\", lldpLink.getLldpRemSysname());\n\n            lldpLink.setLldpRemPortId(getLldpRemPortid());\n            LOG.info( \"getLldpLink: row rem lldp port id: {}\", lldpLink.getLldpRemPortId());\n\n            lldpLink.setLldpRemPortIdSubType(LldpPortIdSubType.get(getLldpRemPortidSubtype()));\n            LOG.info( \"getLldpLink: row rem lldp port id subtype: {}\", LldpPortIdSubType.getTypeString(getLldpRemPortidSubtype()));\n \n            lldpLink.setLldpRemPortDescr(getLldpRemPortDescr());\n            \n    \t\treturn lldpLink;\n\t    }","commit_id":"4930c5c99726a27b128c83d86163b42c54cf309b","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public static String decodeLldpPortId(Integer lldpPortIdSubType,SnmpValue lldpportid) {\n        try {\n            LldpPortIdSubType type=LldpPortIdSubType.get(lldpPortIdSubType);\n        /*\n         * \n         *       If the associated LldpPortIdSubtype object has a value of\n         *       'interfaceAlias(1)', then the octet string identifies a\n         *       particular instance of the ifAlias object (defined in IETF\n         *       RFC 2863). If the particular ifAlias object does not contain\n         *       any values, another port identifier type should be used.\n         *\n         *       If the associated LldpPortIdSubtype object has a value of\n         *       'portComponent(2)', then the octet string identifies a\n         *       particular instance of the entPhysicalAlias object (defined\n         *       in IETF RFC 2737) for a port or backplane component.\n         *\n         *       If the associated LldpPortIdSubtype object has a value of\n         *       'macAddress(3)', then this string identifies a particular\n         *       unicast source address (encoded in network byte order\n         *       and IEEE 802.3 canonical bit order) associated with the port\n         *       (IEEE Std 802-2001).\n         *\n         *       If the associated LldpPortIdSubtype object has a value of\n         *       'networkAddress(4)', then this string identifies a network\n         *       address associated with the port. The first octet contains\n         *       the IANA AddressFamilyNumbers enumeration value for the\n         *       specific address type, and octets 2 through N contain the\n         *       networkAddress address value in network byte order.\n         *\n         *       If the associated LldpPortIdSubtype object has a value of\n         *       'interfaceName(5)', then the octet string identifies a\n         *       particular instance of the ifName object (defined in IETF\n         *       RFC 2863). If the particular ifName object does not contain\n         *       any values, another port identifier type should be used.\n         *\n         *       If the associated LldpPortIdSubtype object has a value of\n         *       'agentCircuitId(6)', then this string identifies a agent-local\n         *       identifier of the circuit (defined in RFC 3046).\n         *\n         *       If the associated LldpPortIdSubtype object has a value of\n         *       'local(7)', then this string identifies a locally\n         *       assigned port ID.\"\n         */\n            switch (type) {\n            case LLDP_PORTID_SUBTYPE_PORTCOMPONENT:\n            case LLDP_PORTID_SUBTYPE_AGENTCIRCUITID:\n            case LLDP_PORTID_SUBTYPE_INTERFACEALIAS:\n            case LLDP_PORTID_SUBTYPE_INTERFACENAME:\n            case LLDP_PORTID_SUBTYPE_LOCAL:\n                if (lldpportid.isDisplayable())\n                    return lldpportid.toDisplayString();\n                else \n                    return lldpportid.toHexString();\n            case LLDP_PORTID_SUBTYPE_MACADDRESS:\n                return lldpportid.toHexString();\n            case LLDP_PORTID_SUBTYPE_NETWORKADDRESS:\n                LldpUtils.decodeNetworkAddress(lldpportid.toDisplayString());\n           }\n        } catch (IllegalArgumentException iae) {\n            iae.printStackTrace();\n        } catch (IndexOutOfBoundsException ioe) {\n            ioe.printStackTrace();\n        } catch (Exception e) {\n            e.printStackTrace();\n        } \n        return lldpportid.toHexString();\n    }","id":53753,"modified_method":"public static String decodeLldpPortId(Integer lldpPortIdSubType,SnmpValue lldpportid) {\n        if (lldpPortIdSubType == null) {\n            if (lldpportid.isDisplayable())\n                return lldpportid.toDisplayString();\n            else \n                return lldpportid.toHexString();\n        }\n        try {\n            LldpPortIdSubType type=LldpPortIdSubType.get(lldpPortIdSubType);\n        /*\n         * \n         *       If the associated LldpPortIdSubtype object has a value of\n         *       'interfaceAlias(1)', then the octet string identifies a\n         *       particular instance of the ifAlias object (defined in IETF\n         *       RFC 2863). If the particular ifAlias object does not contain\n         *       any values, another port identifier type should be used.\n         *\n         *       If the associated LldpPortIdSubtype object has a value of\n         *       'portComponent(2)', then the octet string identifies a\n         *       particular instance of the entPhysicalAlias object (defined\n         *       in IETF RFC 2737) for a port or backplane component.\n         *\n         *       If the associated LldpPortIdSubtype object has a value of\n         *       'macAddress(3)', then this string identifies a particular\n         *       unicast source address (encoded in network byte order\n         *       and IEEE 802.3 canonical bit order) associated with the port\n         *       (IEEE Std 802-2001).\n         *\n         *       If the associated LldpPortIdSubtype object has a value of\n         *       'networkAddress(4)', then this string identifies a network\n         *       address associated with the port. The first octet contains\n         *       the IANA AddressFamilyNumbers enumeration value for the\n         *       specific address type, and octets 2 through N contain the\n         *       networkAddress address value in network byte order.\n         *\n         *       If the associated LldpPortIdSubtype object has a value of\n         *       'interfaceName(5)', then the octet string identifies a\n         *       particular instance of the ifName object (defined in IETF\n         *       RFC 2863). If the particular ifName object does not contain\n         *       any values, another port identifier type should be used.\n         *\n         *       If the associated LldpPortIdSubtype object has a value of\n         *       'agentCircuitId(6)', then this string identifies a agent-local\n         *       identifier of the circuit (defined in RFC 3046).\n         *\n         *       If the associated LldpPortIdSubtype object has a value of\n         *       'local(7)', then this string identifies a locally\n         *       assigned port ID.\"\n         */\n            switch (type) {\n            case LLDP_PORTID_SUBTYPE_PORTCOMPONENT:\n            case LLDP_PORTID_SUBTYPE_AGENTCIRCUITID:\n            case LLDP_PORTID_SUBTYPE_INTERFACEALIAS:\n            case LLDP_PORTID_SUBTYPE_INTERFACENAME:\n            case LLDP_PORTID_SUBTYPE_LOCAL:\n                if (lldpportid.isDisplayable())\n                    return lldpportid.toDisplayString();\n                else \n                    return lldpportid.toHexString();\n            case LLDP_PORTID_SUBTYPE_MACADDRESS:\n                return lldpportid.toHexString();\n            case LLDP_PORTID_SUBTYPE_NETWORKADDRESS:\n                LldpUtils.decodeNetworkAddress(lldpportid.toDisplayString());\n           }\n        } catch (IllegalArgumentException iae) {\n            iae.printStackTrace();\n        } catch (IndexOutOfBoundsException ioe) {\n            ioe.printStackTrace();\n        } catch (Exception e) {\n            e.printStackTrace();\n        } \n        return lldpportid.toHexString();\n    }","commit_id":"4930c5c99726a27b128c83d86163b42c54cf309b","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void onEncodedSegment(ObjectContainer container, ClientContext context, FECJob job, Bucket[] dataBuckets, Bucket[] checkBuckets, SplitfileBlock[] dataBlocks, SplitfileBlock[] checkBlocks) {\n\t\tfor(int i=0;i<checkBlocks.length;i++) {\n\t\t\tBucket data = checkBlocks[i].getData();\n\t\t\tboolean found;\n\t\t\tint num = this.dataBlocks+i;\n\t\t\tsynchronized(this) {\n\t\t\t\tfound = blocksFound[num];\n\t\t\t}\n\t\t\tSplitFileFetcherSegment seg = segments[num];\n\t\t\tboolean active = true;\n\t\t\tif(persistent) {\n\t\t\t\tactive = container.ext().isActive(seg);\n\t\t\t\tif(!active) container.activate(seg, 1);\n\t\t\t}\n\t\t\tif(found) {\n\t\t\t\t// Was it found independantly?\n\t\t\t\t// If so, we can just free it.\n\t\t\t\t// Or maybe it was passed in, in which case we should do nothing.\n\t\t\t\t// However, we need to be careful to avoid the db4o same ID bug.\n\t\t\t\t// If that happens, we could have two buckets with are != but have the same ID, and freeing one will free the other's underlying resources. That would be bad!\n\t\t\t\tBucket segData = seg.getBlockBucket(blockNumbers[i], container);\n\t\t\t\tif(segData != data) {\n\t\t\t\t\t// Either we have a db4o bug, or it was downloaded independantly.\n\t\t\t\t\tif(persistent && container.ext().getID(segData) == container.ext().getID(data)) {\n\t\t\t\t\t\tLogger.error(this, \"SAME ID BUG FOUND IN CROSS SEGMENT DECODE: \"+segData+\" has same ID as \"+data);\n\t\t\t\t\t\t// Do nothing.\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Downloaded independantly (or race condition). Ditch the new block.\n\t\t\t\t\t\tdata.free();\n\t\t\t\t\t\tif(persistent) data.removeFrom(container);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Yay we decoded a block. Tell the segment.\n\t\t\t\tif(seg.onSuccess(data, blockNumbers[i], null, container, context, null))\n\t\t\t\t\tSystem.out.println(\"Cross segment encoded a block.\");\n\t\t\t}\n\t\t\tif(!active) container.deactivate(seg, 1);\n\t\t\tcheckBlocks[i].setData(null);\n\t\t\tif(persistent) container.delete(checkBlocks[i]);\n\t\t}\n\t\t// All done.\n\t}","id":53754,"modified_method":"public void onEncodedSegment(ObjectContainer container, ClientContext context, FECJob job, Bucket[] dataBuckets, Bucket[] checkBuckets, SplitfileBlock[] dataBlocks, SplitfileBlock[] checkBlocks) {\n\t\tfor(int i=0;i<checkBlocks.length;i++) {\n\t\t\tBucket data = checkBlocks[i].getData();\n\t\t\tboolean found;\n\t\t\tint num = this.dataBlocks+i;\n\t\t\tsynchronized(this) {\n\t\t\t\tfound = blocksFound[num];\n\t\t\t}\n\t\t\tSplitFileFetcherSegment seg = segments[num];\n\t\t\tboolean active = true;\n\t\t\tif(persistent) {\n\t\t\t\tactive = container.ext().isActive(seg);\n\t\t\t\tif(!active) container.activate(seg, 1);\n\t\t\t}\n\t\t\tif(found) {\n\t\t\t\t// Was it found independantly?\n\t\t\t\t// If so, we can just free it.\n\t\t\t\t// Or maybe it was passed in, in which case we should do nothing.\n\t\t\t\t// However, we need to be careful to avoid the db4o same ID bug.\n\t\t\t\t// If that happens, we could have two buckets with are != but have the same ID, and freeing one will free the other's underlying resources. That would be bad!\n\t\t\t\tBucket segData = seg.getBlockBucket(blockNumbers[i], container);\n\t\t\t\tif(segData != data) {\n\t\t\t\t\t// Either we have a db4o bug, or it was downloaded independantly.\n\t\t\t\t\tif(persistent && container.ext().getID(segData) == container.ext().getID(data)) {\n\t\t\t\t\t\tLogger.error(this, \"SAME ID BUG FOUND IN CROSS SEGMENT DECODE: \"+segData+\" has same ID as \"+data);\n\t\t\t\t\t\t// Do nothing.\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Downloaded independantly (or race condition). Ditch the new block.\n\t\t\t\t\t\tdata.free();\n\t\t\t\t\t\tif(persistent) data.removeFrom(container);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Yay we decoded a block. Tell the segment.\n\t\t\t\tif(seg.onSuccess(data, blockNumbers[i], null, container, context, null))\n\t\t\t\t\tSystem.out.println(\"Cross segment encoded a block.\");\n\t\t\t}\n\t\t\tif(!active) container.deactivate(seg, 1);\n\t\t\tcheckBlocks[i].setData(null);\n\t\t\tif(persistent) container.delete(checkBlocks[i]);\n\t\t}\n\t\t// All done.\n\t\tboolean bye = false;\n\t\tsynchronized(this) {\n\t\t\tfinishedEncoding = true;\n\t\t\tbye = shouldRemove;\n\t\t}\n\t\tif(bye) removeFrom(container, context);\n\t}","commit_id":"f587b12e6cd10a89a06c1a259899203c0a4444af","url":"https://github.com/freenet/fred"},{"original_method":"public void onDecodedSegment(ObjectContainer container, ClientContext context, FECJob job, Bucket[] dataBuckets, Bucket[] checkBuckets, SplitfileBlock[] dataBlocks, SplitfileBlock[] checkBlocks) {\n\t\tfor(int i=0;i<dataBlocks.length;i++) {\n\t\t\tBucket data = dataBlocks[i].getData();\n\t\t\tboolean found;\n\t\t\tsynchronized(this) {\n\t\t\t\tfound = blocksFound[i];\n\t\t\t}\n\t\t\tSplitFileFetcherSegment seg = segments[i];\n\t\t\tboolean active = true;\n\t\t\tif(persistent) {\n\t\t\t\tactive = container.ext().isActive(seg);\n\t\t\t\tif(!active) container.activate(seg, 1);\n\t\t\t}\n\t\t\tif(found) {\n\t\t\t\t// Was it found independantly?\n\t\t\t\t// If so, we can just free it.\n\t\t\t\t// Or maybe it was passed in, in which case we should do nothing.\n\t\t\t\t// However, we need to be careful to avoid the db4o same ID bug.\n\t\t\t\t// If that happens, we could have two buckets with are != but have the same ID, and freeing one will free the other's underlying resources. That would be bad!\n\t\t\t\tBucket segData = seg.getBlockBucket(blockNumbers[i], container);\n\t\t\t\tif(segData != data) {\n\t\t\t\t\t// Either we have a db4o bug, or it was downloaded independantly.\n\t\t\t\t\tif(persistent && container.ext().getID(segData) == container.ext().getID(data)) {\n\t\t\t\t\t\tLogger.error(this, \"SAME ID BUG FOUND IN CROSS SEGMENT DECODE: \"+segData+\" has same ID as \"+data);\n\t\t\t\t\t\t// Do nothing.\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Downloaded independantly (or race condition). Ditch the new block.\n\t\t\t\t\t\tdata.free();\n\t\t\t\t\t\tif(persistent) data.removeFrom(container);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Yay we decoded a block. Tell the segment.\n\t\t\t\tblocksFound[i] = true;\n\t\t\t\tif(seg.onSuccess(data, blockNumbers[i], null, container, context, null))\n\t\t\t\t\tSystem.out.println(\"Cross-segment decoded a block.\");\n\t\t\t}\n\t\t\tif(!active) container.deactivate(seg, 1);\n\t\t\tdataBlocks[i].setData(null);\n\t\t\tif(persistent) container.delete(dataBlocks[i]);\n\t\t}\n\t\t// Try an encode now.\n\t\tdecodeOrEncode(null, container, context);\n\t}","id":53755,"modified_method":"public void onDecodedSegment(ObjectContainer container, ClientContext context, FECJob job, Bucket[] dataBuckets, Bucket[] checkBuckets, SplitfileBlock[] dataBlocks, SplitfileBlock[] checkBlocks) {\n\t\tfor(int i=0;i<dataBlocks.length;i++) {\n\t\t\tBucket data = dataBlocks[i].getData();\n\t\t\tboolean found;\n\t\t\tsynchronized(this) {\n\t\t\t\tfound = blocksFound[i];\n\t\t\t}\n\t\t\tSplitFileFetcherSegment seg = segments[i];\n\t\t\tboolean active = true;\n\t\t\tif(persistent) {\n\t\t\t\tactive = container.ext().isActive(seg);\n\t\t\t\tif(!active) container.activate(seg, 1);\n\t\t\t}\n\t\t\tif(found) {\n\t\t\t\t// Was it found independantly?\n\t\t\t\t// If so, we can just free it.\n\t\t\t\t// Or maybe it was passed in, in which case we should do nothing.\n\t\t\t\t// However, we need to be careful to avoid the db4o same ID bug.\n\t\t\t\t// If that happens, we could have two buckets with are != but have the same ID, and freeing one will free the other's underlying resources. That would be bad!\n\t\t\t\tBucket segData = seg.getBlockBucket(blockNumbers[i], container);\n\t\t\t\tif(segData != data) {\n\t\t\t\t\t// Either we have a db4o bug, or it was downloaded independantly.\n\t\t\t\t\tif(persistent && container.ext().getID(segData) == container.ext().getID(data)) {\n\t\t\t\t\t\tLogger.error(this, \"SAME ID BUG FOUND IN CROSS SEGMENT DECODE: \"+segData+\" has same ID as \"+data);\n\t\t\t\t\t\t// Do nothing.\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Downloaded independantly (or race condition). Ditch the new block.\n\t\t\t\t\t\tdata.free();\n\t\t\t\t\t\tif(persistent) data.removeFrom(container);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Yay we decoded a block. Tell the segment.\n\t\t\t\tblocksFound[i] = true;\n\t\t\t\tif(seg.onSuccess(data, blockNumbers[i], null, container, context, null))\n\t\t\t\t\tSystem.out.println(\"Cross-segment decoded a block.\");\n\t\t\t}\n\t\t\tif(!active) container.deactivate(seg, 1);\n\t\t\tdataBlocks[i].setData(null);\n\t\t\tif(persistent) container.delete(dataBlocks[i]);\n\t\t}\n\t\tboolean bye = false;\n\t\tsynchronized(this) {\n\t\t\tif(shouldRemove) {\n\t\t\t\tbye = true;\n\t\t\t\tfinishedEncoding = true;\n\t\t\t}\n\t\t}\n\t\tif(bye) removeFrom(container, context);\n\t\telse {\n\t\t\t// Try an encode now.\n\t\t\tdecodeOrEncode(null, container, context);\n\t\t}\n\t}","commit_id":"f587b12e6cd10a89a06c1a259899203c0a4444af","url":"https://github.com/freenet/fred"},{"original_method":"public void removeFrom(ObjectContainer container, ClientContext context) {\n\t\tcontainer.delete(this);\n\t}","id":53756,"modified_method":"public void removeFrom(ObjectContainer container, ClientContext context) {\n\t\tboolean finished;\n\t\tsynchronized(this) {\n\t\t\tshouldRemove = true;\n\t\t\tfinished = finishedEncoding;\n\t\t}\n\t\tif(finished)\n\t\t\tcontainer.delete(this);\n\t\telse\n\t\t\tcontainer.store(this);\n\t}","commit_id":"f587b12e6cd10a89a06c1a259899203c0a4444af","url":"https://github.com/freenet/fred"},{"original_method":"public void onDecodedSegment(ObjectContainer container, ClientContext context, FECJob job, Bucket[] dataBuckets, Bucket[] checkBuckets, SplitfileBlock[] dataBlocks, SplitfileBlock[] checkBlocks) {\n\t\tfor(int i=0;i<dataBlocks.length;i++) {\n\t\t\tBucket data = dataBlocks[i].getData();\n\t\t\tboolean found;\n\t\t\tsynchronized(this) {\n\t\t\t\tfound = blocksFound[i];\n\t\t\t}\n\t\t\tSplitFileFetcherSegment seg = segments[i];\n\t\t\tboolean active = true;\n\t\t\tif(persistent) {\n\t\t\t\tactive = container.ext().isActive(seg);\n\t\t\t\tif(!active) container.activate(seg, 1);\n\t\t\t}\n\t\t\tif(found) {\n\t\t\t\t// Was it found independantly?\n\t\t\t\t// If so, we can just free it.\n\t\t\t\t// Or maybe it was passed in, in which case we should do nothing.\n\t\t\t\t// However, we need to be careful to avoid the db4o same ID bug.\n\t\t\t\t// If that happens, we could have two buckets with are != but have the same ID, and freeing one will free the other's underlying resources. That would be bad!\n\t\t\t\tBucket segData = seg.getBlockBucket(blockNumbers[i], container);\n\t\t\t\tif(segData != data) {\n\t\t\t\t\t// Either we have a db4o bug, or it was downloaded independantly.\n\t\t\t\t\tif(persistent && container.ext().getID(segData) == container.ext().getID(data)) {\n\t\t\t\t\t\tLogger.error(this, \"SAME ID BUG FOUND IN CROSS SEGMENT DECODE: \"+segData+\" has same ID as \"+data);\n\t\t\t\t\t\t// Do nothing.\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Downloaded independantly (or race condition). Ditch the new block.\n\t\t\t\t\t\tdata.free();\n\t\t\t\t\t\tif(persistent) data.removeFrom(container);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Yay we decoded a block. Tell the segment.\n\t\t\t\tblocksFound[i] = true;\n\t\t\t\tif(seg.onSuccess(data, blockNumbers[i], null, container, context, null))\n\t\t\t\t\tSystem.out.println(\"Cross-segment decoded a block.\");\n\t\t\t}\n\t\t\tif(!active) container.deactivate(seg, 1);\n\t\t\tdataBlocks[i].setData(null);\n\t\t\tif(persistent) container.delete(dataBlocks[i]);\n\t\t}\n\t\tboolean bye = false;\n\t\tsynchronized(this) {\n\t\t\tif(shouldRemove) {\n\t\t\t\t// Skip the encode.\n\t\t\t\tbye = true;\n\t\t\t\tfinishedEncoding = true;\n\t\t\t}\n\t\t}\n\t\tif(bye) {\n\t\t\tif(persistent) removeFrom(container, context);\n\t\t} else {\n\t\t\t// Try an encode now.\n\t\t\tdecodeOrEncode(null, container, context);\n\t\t}\n\t}","id":53757,"modified_method":"public void onDecodedSegment(ObjectContainer container, ClientContext context, FECJob job, Bucket[] dataBuckets, Bucket[] checkBuckets, SplitfileBlock[] dataBlocks, SplitfileBlock[] checkBlocks) {\n\t\tfor(int i=0;i<dataBlocks.length;i++) {\n\t\t\tBucket data = dataBlocks[i].getData();\n\t\t\tboolean found;\n\t\t\tsynchronized(this) {\n\t\t\t\tfound = blocksFound[i];\n\t\t\t}\n\t\t\tSplitFileFetcherSegment seg = segments[i];\n\t\t\tboolean active = true;\n\t\t\tif(persistent) {\n\t\t\t\tactive = container.ext().isActive(seg);\n\t\t\t\tif(!active) container.activate(seg, 1);\n\t\t\t}\n\t\t\tif(found) {\n\t\t\t\t// Was it found independantly?\n\t\t\t\t// If so, we can just free it.\n\t\t\t\t// Or maybe it was passed in, in which case we should do nothing.\n\t\t\t\t// However, we need to be careful to avoid the db4o same ID bug.\n\t\t\t\t// If that happens, we could have two buckets with are != but have the same ID, and freeing one will free the other's underlying resources. That would be bad!\n\t\t\t\tBucket segData = seg.getBlockBucket(blockNumbers[i], container);\n\t\t\t\tif(segData != data) {\n\t\t\t\t\t// Either we have a db4o bug, or it was downloaded independantly.\n\t\t\t\t\tif(persistent && container.ext().getID(segData) == container.ext().getID(data)) {\n\t\t\t\t\t\tLogger.error(this, \"SAME ID BUG FOUND IN CROSS SEGMENT DECODE: \"+segData+\" has same ID as \"+data);\n\t\t\t\t\t\t// Do nothing.\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Downloaded independantly (or race condition). Ditch the new block.\n\t\t\t\t\t\tdata.free();\n\t\t\t\t\t\tif(persistent) data.removeFrom(container);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Yay we decoded a block. Tell the segment.\n\t\t\t\tblocksFound[i] = true;\n\t\t\t\tif(seg.onSuccess(data, blockNumbers[i], null, container, context, null))\n\t\t\t\t\tSystem.out.println(\"Cross-segment decoded a block.\");\n\t\t\t}\n\t\t\tif(!active) container.deactivate(seg, 1);\n\t\t\tdataBlocks[i].setData(null);\n\t\t\tif(persistent) container.delete(dataBlocks[i]);\n\t\t}\n\t\tboolean bye = false;\n\t\tsynchronized(this) {\n\t\t\tif(shouldRemove) {\n\t\t\t\t// Skip the encode.\n\t\t\t\tbye = true;\n\t\t\t\tfinishedEncoding = true;\n\t\t\t}\n\t\t}\n\t\tif(bye) {\n\t\t\tif(persistent) removeFrom(container, context);\n\t\t} else {\n\t\t\t// Try an encode now.\n\t\t\tif(!decodeOrEncode(null, container, context)) {\n\t\t\t\t// Didn't schedule a job. So it doesn't need to encode and hasn't already started encoding.\n\t\t\t\tsynchronized(this) {\n\t\t\t\t\tbye = shouldRemove;\n\t\t\t\t\tfinishedEncoding = true;\n\t\t\t\t}\n\t\t\t\tif(persistent) {\n\t\t\t\t\tif(bye)\n\t\t\t\t\t\tremoveFrom(container, context);\n\t\t\t\t\telse\n\t\t\t\t\t\tcontainer.store(this);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","commit_id":"252e0cda908340ed96e10e7af944c673cadc8a83","url":"https://github.com/freenet/fred"},{"original_method":"private void decodeOrEncode(SplitFileFetcherSegment segment, ObjectContainer container, ClientContext context) {\n\t\t// Schedule decode or encode job depending on what is needed, decode always first.\n\t\tboolean needsDecode = false;\n\t\tboolean needsEncode = false;\n\t\tSplitfileBlock[] decodeData = new SplitfileBlock[dataBlocks];\n\t\tSplitfileBlock[] decodeCheck = new SplitfileBlock[segments.length - dataBlocks];\n\t\tfor(int i=0;i<segments.length;i++) {\n\t\t\tMinimalSplitfileBlock wrapper = new MinimalSplitfileBlock(i);\n\t\t\tboolean found;\n\t\t\tsynchronized(this) {\n\t\t\t\tfound = blocksFound[i];\n\t\t\t}\n\t\t\tif(found) {\n\t\t\t\tSplitFileFetcherSegment seg = segments[i];\n\t\t\t\tboolean active = true;\n\t\t\t\tif(seg != segment && persistent) {\n\t\t\t\t\tactive = container.ext().isActive(seg);\n\t\t\t\t\tif(!active) container.activate(seg, 1);\n\t\t\t\t}\n\t\t\t\tBucket data = seg.getBlockBucket(blockNumbers[i], container);\n\t\t\t\twrapper.data = data;\n\t\t\t\tif(persistent) container.activate(data, Integer.MAX_VALUE);\n\t\t\t\tif(!active) container.deactivate(seg, 1);\n\t\t\t} else {\n\t\t\t\t// wrapper has no data, we want to decode it.\n\t\t\t\tif(i < dataBlocks) needsDecode = true;\n\t\t\t\telse needsEncode = true;\n\t\t\t}\n\t\t\tif(i < dataBlocks)\n\t\t\t\tdecodeData[i] = wrapper;\n\t\t\telse\n\t\t\t\tdecodeCheck[i-dataBlocks] = wrapper;\n\t\t}\n\t\tif(!(needsDecode || needsEncode)) {\n\t\t\treturn;\n\t\t}\n\t\tsynchronized(this) {\n\t\t\tif(needsDecode) {\n\t\t\t\tif(startedDecoding) return;\n\t\t\t\tstartedDecoding = true;\n\t\t\t\tif(persistent) container.store(this);\n\t\t\t} else {\n\t\t\t\tif(startedEncoding) return;\n\t\t\t\tstartedEncoding = true;\n\t\t\t\tif(persistent) container.store(this);\n\t\t\t}\n\t\t}\n\t\tFECQueue queue = context.fecQueue;\n\t\tif(codec == null)\n\t\t\tcodec = FECCodec.getCodec(splitfileType, dataBlocks, decodeCheck.length);\n\t\tFECJob job = new FECJob(codec, queue, decodeData, decodeCheck, CHKBlock.DATA_LENGTH, context.getBucketFactory(persistent), this, needsDecode, getPriorityClass(container), persistent);\n\t\tcodec.addToQueue(job, \n\t\t\t\tqueue, container);\n\t}","id":53758,"modified_method":"/**\n\t * \n\t * @param segment\n\t * @param container\n\t * @param context\n\t * @return True unless we didn't schedule a job and are not already running one.\n\t */\n\tprivate boolean decodeOrEncode(SplitFileFetcherSegment segment, ObjectContainer container, ClientContext context) {\n\t\t// Schedule decode or encode job depending on what is needed, decode always first.\n\t\tboolean needsDecode = false;\n\t\tboolean needsEncode = false;\n\t\tSplitfileBlock[] decodeData = new SplitfileBlock[dataBlocks];\n\t\tSplitfileBlock[] decodeCheck = new SplitfileBlock[segments.length - dataBlocks];\n\t\tfor(int i=0;i<segments.length;i++) {\n\t\t\tMinimalSplitfileBlock wrapper = new MinimalSplitfileBlock(i);\n\t\t\tboolean found;\n\t\t\tsynchronized(this) {\n\t\t\t\tfound = blocksFound[i];\n\t\t\t}\n\t\t\tif(found) {\n\t\t\t\tSplitFileFetcherSegment seg = segments[i];\n\t\t\t\tboolean active = true;\n\t\t\t\tif(seg != segment && persistent) {\n\t\t\t\t\tactive = container.ext().isActive(seg);\n\t\t\t\t\tif(!active) container.activate(seg, 1);\n\t\t\t\t}\n\t\t\t\tBucket data = seg.getBlockBucket(blockNumbers[i], container);\n\t\t\t\twrapper.data = data;\n\t\t\t\tif(persistent) container.activate(data, Integer.MAX_VALUE);\n\t\t\t\tif(!active) container.deactivate(seg, 1);\n\t\t\t} else {\n\t\t\t\t// wrapper has no data, we want to decode it.\n\t\t\t\tif(i < dataBlocks) needsDecode = true;\n\t\t\t\telse needsEncode = true;\n\t\t\t}\n\t\t\tif(i < dataBlocks)\n\t\t\t\tdecodeData[i] = wrapper;\n\t\t\telse\n\t\t\t\tdecodeCheck[i-dataBlocks] = wrapper;\n\t\t}\n\t\tif(!(needsDecode || needsEncode)) {\n\t\t\treturn false;\n\t\t}\n\t\tsynchronized(this) {\n\t\t\tif(needsDecode) {\n\t\t\t\tif(startedDecoding) return true;\n\t\t\t\tstartedDecoding = true;\n\t\t\t\tif(persistent) container.store(this);\n\t\t\t} else {\n\t\t\t\tif(startedEncoding) return true;\n\t\t\t\tstartedEncoding = true;\n\t\t\t\tif(persistent) container.store(this);\n\t\t\t}\n\t\t}\n\t\tFECQueue queue = context.fecQueue;\n\t\tif(codec == null)\n\t\t\tcodec = FECCodec.getCodec(splitfileType, dataBlocks, decodeCheck.length);\n\t\tFECJob job = new FECJob(codec, queue, decodeData, decodeCheck, CHKBlock.DATA_LENGTH, context.getBucketFactory(persistent), this, needsDecode, getPriorityClass(container), persistent);\n\t\tcodec.addToQueue(job, \n\t\t\t\tqueue, container);\n\t\treturn true;\n\t}","commit_id":"252e0cda908340ed96e10e7af944c673cadc8a83","url":"https://github.com/freenet/fred"},{"original_method":"public void onFetched(SplitFileFetcherSegment segment, int blockNo, ObjectContainer container, ClientContext context) {\n\t\tsynchronized(this) {\n\t\t\tboolean found = false;\n\t\t\tint totalFound = 0;\n\t\t\tfor(int i=0;i<segments.length;i++) {\n\t\t\t\tif(segments[i] == segment && blockNumbers[i] == blockNo) {\n\t\t\t\t\tfound = true;\n\t\t\t\t\tif(blocksFound[i]) {\n\t\t\t\t\t\t// Already handled, don't loop.\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tblocksFound[i] = true;\n\t\t\t\t}\n\t\t\t\tif(blocksFound[i]) totalFound++;\n\t\t\t}\n\t\t\tif(persistent) container.store(this);\n\t\t\tif(!found) {\n\t\t\t\tLogger.error(this, \"Block \"+blockNo+\" on \"+segment+\" not wanted by \"+this);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(totalFound < dataBlocks) {\n\t\t\t\tLogger.normal(this, \"Not decoding \"+this+\" : found \"+totalFound+\" blocks of \"+dataBlocks+\" (total \"+segments.length+\")\");\n\t\t\t\treturn;\n\t\t\t} else if(totalFound == dataBlocks) return; // Already decoding\n\t\t}\n\t\tdecodeOrEncode(segment, container, context);\n\t}","id":53759,"modified_method":"public void onFetched(SplitFileFetcherSegment segment, int blockNo, ObjectContainer container, ClientContext context) {\n\t\tsynchronized(this) {\n\t\t\tboolean found = false;\n\t\t\tint totalFound = 0;\n\t\t\tfor(int i=0;i<segments.length;i++) {\n\t\t\t\tif(segments[i] == segment && blockNumbers[i] == blockNo) {\n\t\t\t\t\tfound = true;\n\t\t\t\t\tif(blocksFound[i]) {\n\t\t\t\t\t\t// Already handled, don't loop.\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tblocksFound[i] = true;\n\t\t\t\t}\n\t\t\t\tif(blocksFound[i]) totalFound++;\n\t\t\t}\n\t\t\tif(persistent) container.store(this);\n\t\t\tif(!found) {\n\t\t\t\tLogger.error(this, \"Block \"+blockNo+\" on \"+segment+\" not wanted by \"+this);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(totalFound < dataBlocks) {\n\t\t\t\tLogger.normal(this, \"Not decoding \"+this+\" : found \"+totalFound+\" blocks of \"+dataBlocks+\" (total \"+segments.length+\")\");\n\t\t\t\treturn;\n\t\t\t} else if(totalFound == dataBlocks) return; // Already decoding\n\t\t}\n\t\tif(!decodeOrEncode(segment, container, context)) {\n\t\t\t// Don't need to encode or decode.\n\t\t\tboolean bye;\n\t\t\tsynchronized(this) {\n\t\t\t\tbye = shouldRemove;\n\t\t\t\tfinishedEncoding = true;\n\t\t\t}\n\t\t\tif(persistent) {\n\t\t\t\tif(bye)\n\t\t\t\t\tremoveFrom(container, context);\n\t\t\t\telse\n\t\t\t\t\tcontainer.store(this);\n\t\t\t}\n\t\t\t\n\t\t}\n\t}","commit_id":"113bb0409cb85065effa54e9614d94e84196db62","url":"https://github.com/freenet/fred"},{"original_method":"public InferenceSession(PsiTypeParameter[] typeParams,\n                          PsiType[] leftTypes, \n                          PsiType[] rightTypes,\n                          PsiSubstitutor siteSubstitutor,\n                          PsiManager manager,\n                          PsiElement context) {\n    myManager = manager;\n    mySiteSubstitutor = siteSubstitutor;\n    myContext = context;\n\n    initBounds(typeParams);\n\n    LOG.assertTrue(leftTypes.length == rightTypes.length);\n    for (int i = 0; i < leftTypes.length; i++) {\n      final PsiType rightType = mySiteSubstitutor.substitute(rightTypes[i]);\n      if (rightType != null) {\n        addConstraint(new TypeCompatibilityConstraint(leftTypes[i], substituteWithInferenceVariables(rightType)));\n      }\n    }\n  }","id":53760,"modified_method":"public InferenceSession(PsiTypeParameter[] typeParams,\n                          PsiType[] leftTypes, \n                          PsiType[] rightTypes,\n                          PsiSubstitutor siteSubstitutor,\n                          PsiManager manager,\n                          PsiElement context) {\n    myManager = manager;\n    mySiteSubstitutor = siteSubstitutor;\n    myContext = context;\n\n    initBounds(typeParams);\n\n    LOG.assertTrue(leftTypes.length == rightTypes.length);\n    for (int i = 0; i < leftTypes.length; i++) {\n      final PsiType rightType = mySiteSubstitutor.substitute(rightTypes[i]);\n      if (rightType != null) {\n        addConstraint(new TypeCompatibilityConstraint(substituteWithInferenceVariables(leftTypes[i]), substituteWithInferenceVariables(rightType)));\n      }\n    }\n  }","commit_id":"0f39c28c0c2331d0480f9b6eba15126b79cb26a9","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@NotNull\n  @Override\n  public PsiSubstitutor inferTypeArguments(@NotNull PsiTypeParameter[] typeParameters,\n                                           @NotNull PsiType[] leftTypes,\n                                           @NotNull PsiType[] rightTypes,\n                                           @NotNull LanguageLevel languageLevel) {\n    if (typeParameters.length == 0) return PsiSubstitutor.EMPTY;\n    InferenceSession session = new InferenceSession(typeParameters, leftTypes, rightTypes, PsiSubstitutor.EMPTY, myManager, null);\n    for (PsiType leftType : leftTypes) {\n      if (!session.isProperType(leftType)) {\n        return session.infer();\n      }\n    }\n    for (PsiType rightType : rightTypes) {\n      if (!session.isProperType(rightType)) {\n        return session.infer();\n      }\n    }\n    return PsiSubstitutor.EMPTY;\n  }","id":53761,"modified_method":"@NotNull\n  @Override\n  public PsiSubstitutor inferTypeArguments(@NotNull PsiTypeParameter[] typeParameters,\n                                           @NotNull PsiType[] leftTypes,\n                                           @NotNull PsiType[] rightTypes,\n                                           @NotNull LanguageLevel languageLevel) {\n    if (typeParameters.length == 0) return PsiSubstitutor.EMPTY;\n    InferenceSession session = new InferenceSession(typeParameters, leftTypes, rightTypes, PsiSubstitutor.EMPTY, myManager, null);\n    for (PsiType leftType : leftTypes) {\n      if (!session.isProperType(session.substituteWithInferenceVariables(leftType))) {\n        return session.infer();\n      }\n    }\n    for (PsiType rightType : rightTypes) {\n      if (!session.isProperType(session.substituteWithInferenceVariables(rightType))) {\n        return session.infer();\n      }\n    }\n    return PsiSubstitutor.EMPTY;\n  }","commit_id":"0f39c28c0c2331d0480f9b6eba15126b79cb26a9","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public PsiType getSubstitutionForTypeParameter(PsiTypeParameter typeParam,\n                                                 PsiType param,\n                                                 PsiType arg,\n                                                 boolean isContraVariantPosition,\n                                                 LanguageLevel languageLevel) {\n    if (arg == PsiType.VOID || param == PsiType.VOID) return PsiType.NULL;\n    if (param instanceof PsiArrayType && arg instanceof PsiArrayType) {\n      return getSubstitutionForTypeParameter(typeParam, ((PsiArrayType)param).getComponentType(), ((PsiArrayType)arg).getComponentType(), isContraVariantPosition, languageLevel);\n    } \n\n    if (!(param instanceof PsiClassType)) return PsiType.NULL;\n    if (arg == null) {\n      return PsiType.NULL;\n    }\n    final PsiType[] leftTypes;\n    final PsiType[] rightTypes;\n    if (isContraVariantPosition) {\n      leftTypes = new PsiType[] {param};\n      rightTypes = new PsiType[]{arg};\n    }\n    else {\n      leftTypes = new PsiType[] {arg};\n      rightTypes = new PsiType[]{param};\n    }\n    final InferenceSession inferenceSession = new InferenceSession(new PsiTypeParameter[]{typeParam}, leftTypes, rightTypes, PsiSubstitutor.EMPTY, myManager, null);\n    if (inferenceSession.isProperType(param) && inferenceSession.isProperType(arg)) {\n      boolean proceed = false;\n      for (PsiClassType classType : typeParam.getExtendsListTypes()) {\n        if (!inferenceSession.isProperType(classType)) {\n          proceed = true;\n          break;\n        }\n      }\n      if (!proceed) {\n        return PsiType.NULL;\n      }\n    }\n    final PsiSubstitutor substitutor = inferenceSession.infer();\n    return substitutor.substitute(typeParam);\n  }","id":53762,"modified_method":"@Override\n  public PsiType getSubstitutionForTypeParameter(PsiTypeParameter typeParam,\n                                                 PsiType param,\n                                                 PsiType arg,\n                                                 boolean isContraVariantPosition,\n                                                 LanguageLevel languageLevel) {\n    if (arg == PsiType.VOID || param == PsiType.VOID) return PsiType.NULL;\n    if (param instanceof PsiArrayType && arg instanceof PsiArrayType) {\n      return getSubstitutionForTypeParameter(typeParam, ((PsiArrayType)param).getComponentType(), ((PsiArrayType)arg).getComponentType(), isContraVariantPosition, languageLevel);\n    } \n\n    if (!(param instanceof PsiClassType)) return PsiType.NULL;\n    if (arg == null) {\n      return PsiType.NULL;\n    }\n    final PsiType[] leftTypes;\n    final PsiType[] rightTypes;\n    if (isContraVariantPosition) {\n      leftTypes = new PsiType[] {param};\n      rightTypes = new PsiType[]{arg};\n    }\n    else {\n      leftTypes = new PsiType[] {arg};\n      rightTypes = new PsiType[]{param};\n    }\n    final InferenceSession inferenceSession = new InferenceSession(new PsiTypeParameter[]{typeParam}, leftTypes, rightTypes, PsiSubstitutor.EMPTY, myManager, null);\n    if (inferenceSession.isProperType(inferenceSession.substituteWithInferenceVariables(param)) &&\n        inferenceSession.isProperType(inferenceSession.substituteWithInferenceVariables(arg))) {\n      boolean proceed = false;\n      for (PsiClassType classType : typeParam.getExtendsListTypes()) {\n        if (!inferenceSession.isProperType(inferenceSession.substituteWithInferenceVariables(classType))) {\n          proceed = true;\n          break;\n        }\n      }\n      if (!proceed) {\n        return PsiType.NULL;\n      }\n    }\n    final PsiSubstitutor substitutor = inferenceSession.infer();\n    return substitutor.substitute(typeParam);\n  }","commit_id":"0f39c28c0c2331d0480f9b6eba15126b79cb26a9","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n     * Returns a set declaration associated to this list\n     * if it was previously bound.\n     * @param listName the name of the list to who holds the set.\n     *                  Note: this must be a Unique Name .. \n     *                  See bindSetDeclTo method for more info.\n     * @param request the servlet request object \n     * @return returns the set declaration associated to the list.\n     */\n    public static RhnSetDecl lookupSetDeclFor(String listName,\n                                                ServletRequest request) {\n        String selectedName = makeSetDeclAttributeName(listName);\n        return (RhnSetDecl) request.getAttribute(selectedName);\n    }","id":53763,"modified_method":"/**\n     * Returns a set declaration associated to this list\n     * if it was previously bound.\n     * @param listName the name of the list to who holds the set.\n     *                  Note: this must be a Unique Name .. \n     *                  See bindSetDeclTo method for more info.\n     * @param request the servlet request object \n     * @return returns the set declaration label associated to the list.\n     */\n    public static String lookupSetDeclFor(String listName,\n                                                ServletRequest request) {\n        String selectedName = makeSetDeclAttributeName(listName);\n        return (String) request.getAttribute(selectedName);\n    }","commit_id":"8227e7e437e5e57758918f820a0af3c993f770b9","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"/**\n     * Stores the declaration information of an rhnSet\n     * so as to be used by the list tag while \n     * rendering a set.\n     * @param listName name of list\n     * @param decl the set  declaration to bind\n     * @param request current HttpServletRequest\n     */\n    public static void bindSetDeclTo(String listName, RhnSetDecl decl,\n                                ServletRequest request) {\n        String uniqueName = TagHelper.generateUniqueName(listName);\n        String selectedName = makeSetDeclAttributeName(uniqueName);\n        request.setAttribute(selectedName, decl);\n    }","id":53764,"modified_method":"/**\n     * Stores the declaration information of an rhnSet\n     * so as to be used by the list tag while \n     * rendering a set.\n     * @param listName name of list\n     * @param decl the set  declaration to bind\n     * @param request current HttpServletRequest\n     */\n    public static void bindSetDeclTo(String listName, RhnSetDecl decl,\n                                ServletRequest request) {\n        bindSetDeclTo(listName, decl.getLabel(), request);\n    }","commit_id":"8227e7e437e5e57758918f820a0af3c993f770b9","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"private void setupRhnSet() {\n        RhnSetDecl decl = ListTagHelper.lookupSetDeclFor(listName, \n                                            pageContext.getRequest());\n        if (decl != null) {\n            rhnSet =  decl.getLabel();\n        }\n    }","id":53765,"modified_method":"private void setupRhnSet() {\n        String decl = ListTagHelper.lookupSetDeclFor(listName, \n                                            pageContext.getRequest());\n        if (!StringUtils.isBlank(decl)) {\n            rhnSet =  decl;\n        }\n    }","commit_id":"8227e7e437e5e57758918f820a0af3c993f770b9","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"/** {@inheritDoc} */\n    public ActionForward execute(ActionMapping mapping, ActionForm formIn,\n            HttpServletRequest req, HttpServletResponse resp) throws Exception {\n\n        RhnSet set = updateSetFromRequest(req);\n\n        if (set == null) {\n            return null;\n        }\n        \n        writeResponse(resp, set);\n\n        return null;\n    }","id":53766,"modified_method":"/** {@inheritDoc} */\n    public ActionForward execute(ActionMapping mapping, ActionForm formIn,\n            HttpServletRequest req, HttpServletResponse resp) throws Exception {\n        Integer size = updateSetFromRequest(req);\n        if (size == null) {\n            return null;\n        }\n        String setLabel = req.getParameter(SET_LABEL);        \n        writeResponse(resp, size, setLabel);\n\n        return null;\n    }","commit_id":"8227e7e437e5e57758918f820a0af3c993f770b9","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"private RhnSet updateSetFromRequest(HttpServletRequest req) throws Exception {\n        String setLabel = req.getParameter(SET_LABEL);\n        RhnSetDecl decl = RhnSetDecl.find(setLabel);\n        \n        if (decl != null) {\n            RhnSet set = decl.get(new RequestContext(req).getLoggedInUser());\n            String[] which = req.getParameterValues(IDS);\n\n            String checked = req.getParameter(CHECKED);\n\n            if (checked.equals(\"on\")) {\n                set.addElements(which);\n            }\n            else {\n                set.removeElements(which);\n            }\n            RhnSetManager.store(set);\n            return set;\n        }\n        return null;\n    }","id":53767,"modified_method":"private Integer updateSetFromRequest(HttpServletRequest req) throws Exception {\n        String setLabel = req.getParameter(SET_LABEL);\n        String[] which = req.getParameterValues(IDS);\n        String checked = req.getParameter(CHECKED);\n        boolean isOn = checked.equals(\"on\"); \n        \n        if (SessionSetHelper.exists(req, setLabel)) {\n            Set<String> set  = SessionSetHelper.lookupAndBind(req, setLabel);\n\n            if (isOn) {\n                for (String id : which) {\n                    set.add(id);    \n                }\n            }\n            else {\n                for (String id : which) {\n                    set.remove(id);    \n                }\n            }\n            return set.size();\n        }\n        else {\n            RhnSetDecl decl = RhnSetDecl.find(setLabel);\n            if (decl != null) {\n                RhnSet set = decl.get(new RequestContext(req).getLoggedInUser());\n                if (isOn) {\n                    set.addElements(which);\n                }\n                else {\n                    set.removeElements(which);\n                }\n                RhnSetManager.store(set);\n                return set.size();    \n            }\n        }\n        return null;\n    }","commit_id":"8227e7e437e5e57758918f820a0af3c993f770b9","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"private void writeResponse(HttpServletResponse resp, RhnSet set)\n        throws IOException {\n        StringBuffer responseText = new StringBuffer();\n        int setSize = set.size();\n        LocalizationService ls = LocalizationService.getInstance(); \n        if (RhnSetDecl.SYSTEMS.getLabel().equals(set.getLabel())) {\n            String headerMessage;\n            if (setSize == 0) {\n                headerMessage = ls.getMessage(\"header.jsp.noSystemsSelected\");\n            }\n            else if (setSize == 1) {\n                headerMessage = ls.getMessage(\"header.jsp.singleSystemSelected\");\n            }\n            else {\n                headerMessage = ls.getMessage(\"header.jsp.systemsSelected\", \n                                                      Integer.toString(setSize));\n            }\n            responseText.append(\"\\\"header\\\":\\\"\").append(headerMessage).append(\"\\\"\");\n            \n        }\n\n        if (responseText.length() > 0) {\n            responseText.append(\",\");\n        }\n        \n        String  paginationMessage = ls.getMessage(\"message.numselected\",\n                                                Integer.toString(setSize));\n        responseText.append(\"\\\"pagination\\\":\\\"\").\n                        append(paginationMessage).\n                        append(\"\\\"\");\n        \n        resp.setContentType(\"application/json\");\n        resp.addHeader(\"X-JSON\", \n                        \"({\" + responseText.toString() + \"})\");\n    }","id":53768,"modified_method":"private void writeResponse(HttpServletResponse resp, int setSize, String setLabel)\n        throws IOException {\n        StringBuffer responseText = new StringBuffer();\n        LocalizationService ls = LocalizationService.getInstance(); \n        if (RhnSetDecl.SYSTEMS.getLabel().equals(setLabel)) {\n            String headerMessage;\n            if (setSize == 0) {\n                headerMessage = ls.getMessage(\"header.jsp.noSystemsSelected\");\n            }\n            else if (setSize == 1) {\n                headerMessage = ls.getMessage(\"header.jsp.singleSystemSelected\");\n            }\n            else {\n                headerMessage = ls.getMessage(\"header.jsp.systemsSelected\", \n                                                      Integer.toString(setSize));\n            }\n            responseText.append(\"\\\"header\\\":\\\"\").append(headerMessage).append(\"\\\"\");\n            \n        }\n\n        if (responseText.length() > 0) {\n            responseText.append(\",\");\n        }\n        \n        String  paginationMessage = ls.getMessage(\"message.numselected\",\n                                                Integer.toString(setSize));\n        responseText.append(\"\\\"pagination\\\":\\\"\").\n                        append(paginationMessage).\n                        append(\"\\\"\");\n        \n        resp.setContentType(\"application/json\");\n        resp.addHeader(\"X-JSON\", \n                        \"({\" + responseText.toString() + \"})\");\n    }","commit_id":"8227e7e437e5e57758918f820a0af3c993f770b9","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"/**\n     * \n     * @return the set declaration used to this action.. \n     */\n    protected RhnSetDecl getDecl() {\n        return RhnSetDecl.CONFIG_FILE_NAMES;\n    }","id":53769,"modified_method":"/**\n     * \n     * @return the set declaration used to this action.. \n     */\n    protected String getDecl() {\n        return getClass().getName();\n    }","commit_id":"8227e7e437e5e57758918f820a0af3c993f770b9","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"/**\n     * Copies the select files to a given channel..\n     * @param channel channel to copy the files to..\n     * @param user used for security..\n     * @return returns the number of files copied\n     */\n    private int copySelectedToChannel(ConfigChannel channel,\n                                        User user) {\n        ConfigurationManager cm = ConfigurationManager.getInstance();\n        RhnSet set =  getDecl().get(user);\n        for (Iterator itr = set.getElements().iterator(); itr.hasNext();) {\n            Long fileId = ((RhnSetElement)itr.next()).getElement();\n            ConfigFile cf = cm.lookupConfigFile(user, fileId);\n            ConfigRevision cr = cf.getLatestConfigRevision();\n            cm.copyConfigFile(cr, channel, user);\n        }\n        int size = set.size();\n        set.clear();\n        RhnSetManager.store(set);\n        return size;\n    }","id":53770,"modified_method":"/**\n     * Copies the select files to a given channel..\n     * @param channel channel to copy the files to..\n     * @param user used for security..\n     * @return returns the number of files copied\n     */\n    private int copySelectedToChannel(ConfigChannel channel, HttpServletRequest request,\n                                        User user) {\n        ConfigurationManager cm = ConfigurationManager.getInstance();\n        Set <String> set =  SessionSetHelper.lookupAndBind(request, \n                                                        getDecl());\n        for (String key : set) {\n            Long fileId = Long.valueOf(key);\n            ConfigFile cf = cm.lookupConfigFile(user, fileId);\n            ConfigRevision cr = cf.getLatestConfigRevision();\n            cm.copyConfigFile(cr, channel, user);\n        }\n        int size = set.size();\n        set.clear();\n        SessionSetHelper.obliterate(request, getDecl());\n        return size;\n    }","commit_id":"8227e7e437e5e57758918f820a0af3c993f770b9","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"/**\n     * ${@inheritDoc}\n     */\n    public ActionForward execute(ActionMapping mapping, ActionForm form, \n            HttpServletRequest request, HttpServletResponse response) throws Exception {\n\n        RequestContext context = new RequestContext(request);\n        User user = context.getLoggedInUser();\n        \n        RhnSet set =  getDecl().get(user);\n        //if its not submitted\n        // ==> this is the first visit to this page\n        // clear the 'dirty set'\n        if (!context.isSubmitted()) {\n            set.clear();\n            RhnSetManager.store(set);\n        }\n        setupButtons(request);\n        RhnListSetHelper helper = new RhnListSetHelper(request);\n        \n        if (request.getParameter(DISPATCH) != null) {\n            // if its one of the Dispatch actions handle it..            \n            helper.updateSet(set, LIST_NAME);\n            if (!set.isEmpty()) {\n                return handleDispatchAction(mapping, context);\n            }\n            else {\n                RhnHelper.handleEmptySelection(request);\n            }\n        }        \n        \n        //mapping.getParameter() is used to identify the type\n        // channel we are trying to process..\n        // the struts-config has paramter set to \n        // either 'sandbox' or 'local' or 'central'\n        request.setAttribute(mapping.getParameter(), Boolean.TRUE);\n\n        Server server = context.lookupAndBindServer();\n        ConfigurationManager cm = ConfigurationManager.getInstance();\n        List dataSet = cm.listManagedPathsFor(server, user, \n                                             getType(mapping.getParameter()));\n        // if its a list action update the set and the selections\n        if (ListTagHelper.getListAction(LIST_NAME, request) != null) {\n            helper.execute(set, \n                            LIST_NAME,\n                            dataSet);\n        }        \n\n        // if I have a previous set selections populate data using it       \n        if (!set.isEmpty()) {\n            helper.syncSelections(set, dataSet);\n            ListTagHelper.setSelectedAmount(LIST_NAME, set.size(), request);            \n        }\n        request.setAttribute(ListTagHelper.PARENT_URL, \n                            request.getRequestURI() + \"?sid=\" + server.getId());\n        request.setAttribute(DATA_SET, dataSet);\n        SdcHelper.ssmCheck(request, server.getId(), user);\n        ListTagHelper.bindSetDeclTo(LIST_NAME, getDecl(), request);\n        return mapping.findForward(RhnHelper.DEFAULT_FORWARD);\n    }","id":53771,"modified_method":"/**\n     * ${@inheritDoc}\n     */\n    public ActionForward execute(ActionMapping mapping, ActionForm form, \n            HttpServletRequest request, HttpServletResponse response) throws Exception {\n\n        RequestContext context = new RequestContext(request);\n        User user = context.getLoggedInUser();\n        Set set = SessionSetHelper.lookupAndBind(request, getDecl());\n\n        //if its not submitted\n        // ==> this is the first visit to this page\n        // clear the 'dirty set'\n        if (!context.isSubmitted()) {\n            set.clear();\n        }\n        setupButtons(request);\n        SessionSetHelper helper = new SessionSetHelper(request);\n        \n        if (request.getParameter(DISPATCH) != null) {\n            // if its one of the Dispatch actions handle it..            \n            helper.updateSet(set, LIST_NAME);\n            if (!set.isEmpty()) {\n                return handleDispatchAction(mapping, context);\n            }\n            else {\n                RhnHelper.handleEmptySelection(request);\n            }\n        }        \n        \n        //mapping.getParameter() is used to identify the type\n        // channel we are trying to process..\n        // the struts-config has paramter set to \n        // either 'sandbox' or 'local' or 'central'\n        request.setAttribute(mapping.getParameter(), Boolean.TRUE);\n\n        Server server = context.lookupAndBindServer();\n        ConfigurationManager cm = ConfigurationManager.getInstance();\n        List dataSet = cm.listManagedPathsFor(server, user, \n                                             getType(mapping.getParameter()));\n        // if its a list action update the set and the selections\n        if (ListTagHelper.getListAction(LIST_NAME, request) != null) {\n            helper.execute(set, \n                            LIST_NAME,\n                            dataSet);\n        }        \n\n        // if I have a previous set selections populate data using it       \n        if (!set.isEmpty()) {\n            helper.syncSelections(set, dataSet);\n            ListTagHelper.setSelectedAmount(LIST_NAME, set.size(), request);            \n        }\n        request.setAttribute(ListTagHelper.PARENT_URL, \n                            request.getRequestURI() + \"?sid=\" + server.getId());\n        request.setAttribute(DATA_SET, dataSet);\n        SdcHelper.ssmCheck(request, server.getId(), user);\n        ListTagHelper.bindSetDeclTo(LIST_NAME, getDecl(), request);\n        return mapping.findForward(RhnHelper.DEFAULT_FORWARD);\n    }","commit_id":"8227e7e437e5e57758918f820a0af3c993f770b9","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"/**\n     * Handles a dispatch action\n     * Could be One of copy_to_sandbox,\n     * copy_to_local, copy_to_global\n     * &amp; delete_files\n     * @param mapping the action mapping used for returning 'forward' url\n     * @param context the request context\n     * @return the forward url\n     */\n    private ActionForward  handleDispatchAction(ActionMapping mapping, \n                                                RequestContext context) {\n        \n        User user = context.getLoggedInUser();\n        Server server = context.lookupAndBindServer();\n        String action = COPY_TO_GLOBAL;\n        Map params = new HashMap();\n        params.put(RequestContext.SID, server.getId().toString());\n        \n        if (context.wasDispatched(COPY_TO_LOCAL_KEY)) {\n            int size = copySelectedToChannel(server.getLocalOverride(),\n                                    user);\n            successMessage(context.getRequest(), \n                               LOCAL_SUCCESS_KEY, size);\n            action = COPY_TO_LOCAL;\n        }\n        else if (context.wasDispatched(COPY_TO_SANDBOX_KEY)) {\n            int size = copySelectedToChannel(server.getSandboxOverride(),\n                    user);            \n            successMessage(context.getRequest(), \n                                SANDBOX_SUCCESS_KEY, size);\n            action = COPY_TO_SANDBOX;\n        }\n        else if (context.wasDispatched(DELETE_FILES_KEY)) {\n            action = DELETE_FILES;\n            if (ConfigChannelType.local().getLabel().\n                                            equals(mapping.getParameter())) {\n                int size = deleteFiles(server.getLocalOverride(), user);\n                successMessage(context.getRequest(), \n                                    DELETE_FILES_LOCAL_SUCCESS_KEY, size);                \n            }\n            else {\n                int size = deleteFiles(server.getSandboxOverride(), user);\n                successMessage(context.getRequest(), \n                                    DELETE_FILES_SANDBOX_SUCCESS_KEY, size);\n            }\n        }\n        //if its a COPY_TO_GLOBAL, we'd use the forward \n        // link from the struts-config.xml so thats covered..\n        // even though that doesn appear in the if/else clause\n        return getStrutsDelegate().\n                     forwardParams(mapping.findForward(action), params);            \n    }","id":53772,"modified_method":"/**\n     * Handles a dispatch action\n     * Could be One of copy_to_sandbox,\n     * copy_to_local, copy_to_global\n     * &amp; delete_files\n     * @param mapping the action mapping used for returning 'forward' url\n     * @param context the request context\n     * @return the forward url\n     */\n    private ActionForward  handleDispatchAction(ActionMapping mapping, \n                                                RequestContext context) {\n        \n        User user = context.getLoggedInUser();\n        Server server = context.lookupAndBindServer();\n        String action = COPY_TO_GLOBAL;\n        Map params = new HashMap();\n        params.put(RequestContext.SID, server.getId().toString());\n        \n        if (context.wasDispatched(COPY_TO_LOCAL_KEY)) {\n            int size = copySelectedToChannel(server.getLocalOverride(), \n                            context.getRequest(),\n                                    user);\n            successMessage(context.getRequest(), \n                               LOCAL_SUCCESS_KEY, size);\n            action = COPY_TO_LOCAL;\n        }\n        else if (context.wasDispatched(COPY_TO_SANDBOX_KEY)) {\n            int size = copySelectedToChannel(server.getSandboxOverride(),\n                    context.getRequest(),\n                    user);            \n            successMessage(context.getRequest(), \n                                SANDBOX_SUCCESS_KEY, size);\n            action = COPY_TO_SANDBOX;\n        }\n        else if (context.wasDispatched(DELETE_FILES_KEY)) {\n            action = DELETE_FILES;\n            if (ConfigChannelType.local().getLabel().\n                                            equals(mapping.getParameter())) {\n                int size = deleteFiles(server.getLocalOverride(), \n                                        context.getRequest(), user);\n                successMessage(context.getRequest(), \n                                    DELETE_FILES_LOCAL_SUCCESS_KEY, size);                \n            }\n            else {\n                int size = deleteFiles(server.getSandboxOverride(),\n                                            context.getRequest(), user);\n                successMessage(context.getRequest(), \n                                    DELETE_FILES_SANDBOX_SUCCESS_KEY, size);\n            }\n        }\n        //if its a COPY_TO_GLOBAL, we'd use the forward \n        // link from the struts-config.xml so thats covered..\n        // even though that doesn appear in the if/else clause\n        return getStrutsDelegate().\n                     forwardParams(mapping.findForward(action), params);            \n    }","commit_id":"8227e7e437e5e57758918f820a0af3c993f770b9","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"/**\n     * Deletes the selected files from a given channel.\n     * @param channel channel to remove the files from\n     * @param user user needed for permission checking..\n     * @return returns the number of files deleted\n     */\n    private int deleteFiles(ConfigChannel channel,\n                                User user) {\n        ConfigurationManager cm = ConfigurationManager.getInstance();\n        RhnSet set =  getDecl().get(user);\n        for (Iterator itr = set.getElements().iterator(); itr.hasNext();) {\n            RhnSetElement e = (RhnSetElement) itr.next();\n            ConfigFile cf = cm.lookupConfigFile(user, e.getElement());\n            cm.deleteConfigFile(user, cf);\n        }\n        int size = set.size();\n        set.clear();\n        RhnSetManager.store(set);\n        return size;\n        \n    }","id":53773,"modified_method":"/**\n     * Deletes the selected files from a given channel.\n     * @param channel channel to remove the files from\n     * @param user user needed for permission checking..\n     * @return returns the number of files deleted\n     */\n    private int deleteFiles(ConfigChannel channel, HttpServletRequest request, \n                                User user) {\n        ConfigurationManager cm = ConfigurationManager.getInstance();\n        Set <String> set =  SessionSetHelper.lookupAndBind(request, \n                                                        getDecl());\n        for (String key : set) {\n            ConfigFile cf = cm.lookupConfigFile(user, Long.valueOf(key));\n            cm.deleteConfigFile(user, cf);\n        }\n        int size = set.size();\n        set.clear();\n        SessionSetHelper.obliterate(request, getDecl());\n        return size;\n    }","commit_id":"8227e7e437e5e57758918f820a0af3c993f770b9","url":"https://github.com/spacewalkproject/spacewalk"},{"original_method":"private void registerShortcuts() {\n    StudyToolWindow window = StudyUtils.getStudyToolWindow(myProject);\n    if (window != null) {\n      List<AnAction> actionsOnToolbar = window.getActions(true);\n      if (actionsOnToolbar != null) {\n        for (AnAction action : actionsOnToolbar) {\n          if (action instanceof StudyToolbarAction) {\n            String id = ((StudyToolbarAction)action).getActionId();\n            String[] shortcuts = ((StudyToolbarAction)action).getShortcuts();\n            addShortcut(id, shortcuts);\n          }\n        }\n      }\n      else {\n        LOG.warn(\"Actions on toolbar are nulls\");\n      }\n    }\n  }","id":53774,"modified_method":"private void registerShortcuts() {\n    StudyToolWindow window = StudyUtils.getStudyToolWindow(myProject);\n    if (window != null) {\n      List<AnAction> actionsOnToolbar = window.getActions(true);\n      if (actionsOnToolbar != null) {\n        for (AnAction action : actionsOnToolbar) {\n          if (action instanceof StudyToolbarAction) {\n            String id = ((StudyToolbarAction)action).getActionId();\n            String[] shortcuts = ((StudyToolbarAction)action).getShortcuts();\n            if (shortcuts != null) {\n              addShortcut(id, shortcuts);\n            }\n          }\n        }\n      }\n      else {\n        LOG.warn(\"Actions on toolbar are nulls\");\n      }\n    }\n  }","commit_id":"09c857b7e07ac3f12b8339a916b2359e36d54121","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public void projectOpened() {\n    final Course course = StudyTaskManager.getInstance(myProject).getCourse();\n    // Check if user has javafx lib in his JDK. Now bundled JDK doesn't have this lib inside.\n    try {\n      Platform.setImplicitExit(false);\n    }\n    catch (NoClassDefFoundError e) {\n      useJavaFx = false;\n    }\n\n    if (course != null && !course.isUpToDate()) {\n      course.setUpToDate(true);\n      updateCourse();\n    }\n\n    registerStudyToolWindow(course);\n    ApplicationManager.getApplication().invokeLater(new DumbAwareRunnable() {\n      @Override\n      public void run() {\n        ApplicationManager.getApplication().runWriteAction(new DumbAwareRunnable() {\n          @Override\n          public void run() {\n            if (course != null) {\n              UISettings.getInstance().HIDE_TOOL_STRIPES = false;\n              UISettings.getInstance().fireUISettingsChanged();\n              registerShortcuts();\n            }\n          }\n        });\n      }\n    });\n  }","id":53775,"modified_method":"@Override\n  public void projectOpened() {\n    final Course course = StudyTaskManager.getInstance(myProject).getCourse();\n    // Check if user has javafx lib in his JDK. Now bundled JDK doesn't have this lib inside.\n    if (StudyUtils.hasJavaFx()) {\n      Platform.setImplicitExit(false);\n      useJavaFx = true;\n    }\n\n    if (course != null && !course.isUpToDate()) {\n      course.setUpToDate(true);\n      updateCourse();\n    }\n\n    registerStudyToolWindow(course);\n    ApplicationManager.getApplication().invokeLater(new DumbAwareRunnable() {\n      @Override\n      public void run() {\n        ApplicationManager.getApplication().runWriteAction(new DumbAwareRunnable() {\n          @Override\n          public void run() {\n            if (course != null) {\n              UISettings.getInstance().HIDE_TOOL_STRIPES = false;\n              UISettings.getInstance().fireUISettingsChanged();\n              registerShortcuts();\n            }\n          }\n        });\n      }\n    });\n  }","commit_id":"09c857b7e07ac3f12b8339a916b2359e36d54121","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private ModifierBox(String modifierText, String text) {\n        setText(text);\n        myModifierText = modifierText;\n        addItemListener(new ItemListener() {\n          public void itemStateChanged(ItemEvent e) {\n            applyMask();\n          }\n        });\n      }","id":53776,"modified_method":"private ModifierBox(String modifierText, String text) {\n        setText(text);\n        myModifierText = modifierText;\n        addItemListener(new ItemListener() {\n          public void itemStateChanged(ItemEvent e) {\n            applyMask();\n            updateConflicts();\n          }\n        });\n      }","commit_id":"0ad23ca8237cda3b100223c26c95fca71986da4b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private Ui() {\n      JPanel north = new JPanel(new BorderLayout()) {\n        @Override\n        public Dimension getMaximumSize() {\n          return super.getPreferredSize();\n        }\n      };\n      north.add(myBox, BorderLayout.NORTH);\n\n      setLayout(new BorderLayout());\n      add(north, BorderLayout.WEST);\n\n      myEnabled = new JCheckBox(\"Enable Quick Access\");\n      myEnabled.addItemListener(new ItemListener() {\n        public void itemStateChanged(ItemEvent e) {\n          myQaEnabled = myEnabled.isSelected();\n          processEnabled();\n        }\n      });\n      myBox.add(myEnabled);\n\n      VerticalBox kbConfig = new VerticalBox();\n\n      JPanel modifiers = new JPanel(new FlowLayout(FlowLayout.CENTER));\n      myCtrl = new ModifierBox(\"control\", \"Control\");\n      myAlt = new ModifierBox(\"alt\", \"Alt\");\n      myShift = new ModifierBox(\"shift\", \"Shift\");\n      myMeta = new ModifierBox(\"meta\", \"Meta\");\n\n      modifiers.add(new JLabel(\"Modifiers:\"));\n      modifiers.add(myCtrl);\n      modifiers.add(myAlt);\n      modifiers.add(myShift);\n      if (SystemInfo.isMac) {\n        modifiers.add(myMeta);\n      }\n\n      JPanel hold = new JPanel(new FlowLayout(FlowLayout.CENTER));\n      hold.add(new JLabel(\"Hold time:\"));\n      myHoldTime = new JFormattedTextField(NumberFormat.getIntegerInstance());\n      myHoldTime.getDocument().addDocumentListener(new DocumentAdapter() {\n        @Override\n        protected void textChanged(DocumentEvent e) {\n          String txt = myHoldTime.getText();\n          if (txt != null) {\n            try {\n              Integer value = Integer.valueOf(txt);\n              myDelay = value.intValue();\n            }\n            catch (NumberFormatException e1) {\n            }\n          }\n        }\n      });\n      hold.add(myHoldTime);\n      hold.add(new JLabel(\"ms\"));\n\n      kbConfig.add(modifiers);\n      kbConfig.add(hold);\n\n      kbConfig.setBorder(new TitledBorder(\"Keyboard Configuration\"));\n\n      myBox.add(kbConfig);\n\n      myConflicts = new VerticalBox();\n\n      myBox.add(myConflicts);\n    }","id":53777,"modified_method":"private Ui() {\n      JPanel north = new JPanel(new BorderLayout());\n      north.add(myBox, BorderLayout.NORTH);\n\n      setLayout(new BorderLayout());\n      add(north, BorderLayout.WEST);\n\n      myEnabled = new JCheckBox(\"Enable Quick Access\");\n      myEnabled.addItemListener(new ItemListener() {\n        public void itemStateChanged(ItemEvent e) {\n          myQaEnabled = myEnabled.isSelected();\n          processEnabled();\n        }\n      });\n      myBox.add(myEnabled);\n\n      VerticalBox kbConfig = new VerticalBox();\n\n      JPanel modifiers = new JPanel(new FlowLayout(FlowLayout.CENTER)) {\n        @Override\n        public Dimension getPreferredSize() {\n          Dimension size = super.getPreferredSize();\n          size.width *= 1.5;\n          return size;\n        }\n      };\n      myCtrl = new ModifierBox(\"control\", KeyEvent.getKeyModifiersText(KeyEvent.CTRL_MASK));\n      myAlt = new ModifierBox(\"alt\", KeyEvent.getKeyModifiersText(KeyEvent.ALT_MASK));\n      myShift = new ModifierBox(\"shift\", KeyEvent.getKeyModifiersText(KeyEvent.SHIFT_MASK));\n      myMeta = new ModifierBox(\"meta\", KeyEvent.getKeyModifiersText(KeyEvent.META_MASK));\n\n      modifiers.add(new JLabel(\"Modifiers:\"));\n      modifiers.add(myCtrl);\n      modifiers.add(myAlt);\n      modifiers.add(myShift);\n      if (SystemInfo.isMac) {\n        modifiers.add(myMeta);\n      }\n\n      JPanel hold = new JPanel(new FlowLayout(FlowLayout.CENTER));\n      hold.add(new JLabel(\"Hold time:\"));\n      myHoldTime = new JFormattedTextField(NumberFormat.getIntegerInstance());\n      myHoldTime.setColumns(5);\n      myHoldTime.setHorizontalAlignment(JTextField.RIGHT);\n      myHoldTime.getDocument().addDocumentListener(new DocumentAdapter() {\n        @Override\n        protected void textChanged(DocumentEvent e) {\n          String txt = myHoldTime.getText();\n          if (txt != null) {\n            try {\n              Integer value = Integer.valueOf(txt);\n              myDelay = value.intValue();\n            }\n            catch (NumberFormatException e1) {\n            }\n          }\n        }\n      });\n      hold.add(myHoldTime);\n      hold.add(new JLabel(\"ms\"));\n\n      kbConfig.add(modifiers);\n      kbConfig.add(hold);\n\n      kbConfig.setBorder(new TitledBorder(\"Keyboard Configuration\"));\n\n      myBox.add(kbConfig);\n\n      myConflicts = new JPanel();\n\n      myBox.add(myConflicts);\n\n      updateConflicts();\n    }","commit_id":"0ad23ca8237cda3b100223c26c95fca71986da4b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private void reassignActionShortcut(String actionId, int modifiers, int actionCode) {\n    removeShortcuts(actionId);\n    myKeymap.addShortcut(actionId, new KeyboardShortcut(KeyStroke.getKeyStroke(actionCode, modifiers), null));\n  }","id":53778,"modified_method":"private void reassignActionShortcut(String actionId, int modifiers, int actionCode) {\n    removeShortcuts(actionId);\n    if (modifiers > 0) {\n      myKeymap.addShortcut(actionId, new KeyboardShortcut(KeyStroke.getKeyStroke(actionCode, modifiers), null));\n    }\n  }","commit_id":"0ad23ca8237cda3b100223c26c95fca71986da4b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void reset(boolean isEnabled, Set<String> modifiers, int delay) {\n      myQaEnabled = isEnabled;\n      myModifiers.clear();\n      myModifiers.addAll(modifiers);\n      myDelay = delay;\n\n      myEnabled.setSelected(myQaEnabled);\n      myCtrl.readMask();\n      myAlt.readMask();\n      myShift.readMask();\n      myMeta.readMask();\n\n      myHoldTime.setText(Integer.valueOf(delay).toString());\n\n      processEnabled();\n    }","id":53779,"modified_method":"public void reset(boolean isEnabled, Set<String> modifiers, int delay) {\n      myQaEnabled = isEnabled;\n      myModifiers.clear();\n      myModifiers.addAll(modifiers);\n      myDelay = delay;\n\n      myEnabled.setSelected(myQaEnabled);\n      myCtrl.readMask();\n      myAlt.readMask();\n      myShift.readMask();\n      myMeta.readMask();\n\n      myHoldTime.setText(Integer.valueOf(delay).toString());\n\n      processEnabled();\n\n      updateConflicts();\n    }","commit_id":"0ad23ca8237cda3b100223c26c95fca71986da4b","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public Summary2(Vec vec, String colname) {\n    colname = colname;\n    _enum = vec.isEnum();\n    _isInt = vec.isInt();\n    type = _enum?\"Enum\":_isInt?\"Int\":\"Real\";\n    avg = vec.mean();\n    sd = vec.sigma();\n    naCnt = vec.naCnt();\n    if (_enum) domains = vec.domain(); else domains = null;\n    long len = vec.length();\n    rows = len - naCnt;\n    if (_enum) {\n      mins = MemoryManager.malloc8d(Math.min(domains.length, NMAX));\n      maxs = MemoryManager.malloc8d(Math.min(domains.length, NMAX));\n    } else {\n      mins = MemoryManager.malloc8d((int)Math.min(len,NMAX));\n      maxs = MemoryManager.malloc8d((int)Math.min(len,NMAX));\n    }\n    Arrays.fill(mins, Double.POSITIVE_INFINITY);\n    Arrays.fill(maxs, Double.NEGATIVE_INFINITY);\n    \n    _min = vec.min();_max = vec.max();\n    double span = vec.max()-vec.min() + 1;\n    if( vec.isEnum() && span < MAX_HIST_SZ ) {\n      start = vec.min();\n      binsz = 1;\n      bins = new long[(int)span];\n    } else {\n      // guard against improper parse (date type) or zero c._sigma\n      double sigma = sd;\n      if (Double.isNaN(sigma)) sigma = 0; \n      double b = Math.max(1e-4,3.5 * sigma/ Math.cbrt(len));\n      double d = Math.pow(10, Math.floor(Math.log10(b)));\n      if (b > 20*d/3)\n        d *= 10;\n      else if (b > 5*d/3)\n        d *= 5;\n\n      // tweak for integers\n      if (d < 1. && _isInt) d = 1.;\n      binsz = d;\n      start = binsz * Math.floor(vec.min()/binsz);\n      int nbin = (int)Math.floor((vec.max() + (_isInt?.5:0) - start)/binsz) + 1;\n      assert nbin > 0;\n      bins = new long[nbin];\n    }\n  }","id":53780,"modified_method":"public Summary2(Vec vec, String name) {\n    this.colname = name;\n    this._vec    = vec;\n    this._domains = _vec.isEnum() ? vec.domain() : null;\n    this.nrow = vec.length() - vec.naCnt();\n    if ( !_vec.isEnum() ) {\n      this._mins = MemoryManager.malloc8d((int)Math.min(vec.length(),NMAX));\n      this._maxs = MemoryManager.malloc8d((int)Math.min(vec.length(),NMAX));\n      Arrays.fill(_mins, Double.POSITIVE_INFINITY);\n      Arrays.fill(_maxs, Double.NEGATIVE_INFINITY);\n    } else {\n      _mins = MemoryManager.malloc8d(Math.min(_domains.length,NMAX));\n      _maxs = MemoryManager.malloc8d(Math.min(_domains.length,NMAX));\n    }\n\n    _min = vec.min();_max = vec.max();\n    double span = vec.max()-vec.min() + 1;\n    if( vec.isEnum() && span < MAX_HIST_SZ ) {\n      _start = vec.min();\n      _binsz = 1;\n      bin_cnts = new long[(int)span];\n    } else {\n      // guard against improper parse (date type) or zero c._sigma\n      double sigma = vec.sigma();\n      if (Double.isNaN(sigma)) sigma = 0; \n      double b = Math.max(1e-4,3.5 * sigma/ Math.cbrt(nrow));\n      double d = Math.pow(10, Math.floor(Math.log10(b)));\n      if (b > 20*d/3)\n        d *= 10;\n      else if (b > 5*d/3)\n        d *= 5;\n\n      // tweak for integers\n      if (d < 1. && _vec.isInt()) d = 1.;\n      _binsz = d;\n      _start = _binsz * Math.floor(vec.min()/_binsz);\n      int nbin = (int)Math.floor((vec.max() + (_vec.isInt()?.5:0) - _start)/_binsz) + 1;\n      assert nbin > 0;\n      bin_cnts = new long[nbin];\n    }\n  }","commit_id":"b30f02cb3d7f4e7da71aeba2f5c7c085d37896e2","url":"https://github.com/h2oai/h2o-2"},{"original_method":"public void computeMajorities() {\n    if (!_enum) return;\n    for (int i = 0; i < mins.length; i++) mins[i] = i;\n    for (int i = 0; i < maxs.length; i++) maxs[i] = i;\n    int mini = 0, maxi = 0;\n    for( int i = 0; i < bins.length; i++ ) {\n      if (bins[i] < bins[(int)mins[mini]]) {\n        mins[mini] = i;\n        for (int j = 0; j < mins.length; j++) \n          if (bins[(int)mins[j]] > bins[(int)mins[mini]]) mini = j;\n      }\n      if (bins[i] > bins[(int)maxs[maxi]]) {\n        maxs[maxi] = i;\n        for (int j = 0; j < maxs.length; j++) \n          if (bins[(int)maxs[j]] < bins[(int)maxs[maxi]]) maxi = j;\n      }\n    }\n    for (int i = 0; i < mins.length - 1; i++)\n      for (int j = 0; j < i; j++)\n        if (bins[(int)mins[j]] > bins[(int)mins[j+1]]) { \n          double t = mins[j]; mins[j] = mins[j+1]; mins[j+1] = t;\n        }\n    for (int i = 0; i < maxs.length - 1; i++)\n      for (int j = 0; j < i; j++)\n        if (bins[(int)maxs[j]] < bins[(int)maxs[j+1]]) { \n          double t = maxs[j]; maxs[j] = maxs[j+1]; maxs[j+1] = t;\n        }\n  }","id":53781,"modified_method":"public void computeMajorities() {\n    if (!_vec.isEnum()) return;\n    for (int i = 0; i < _mins.length; i++) _mins[i] = i;\n    for (int i = 0; i < _maxs.length; i++) _maxs[i] = i;\n    int mini = 0, maxi = 0;\n    for( int i = 0; i < bin_cnts.length; i++ ) {\n      if (bin_cnts[i] < bin_cnts[(int)_mins[mini]]) {\n        _mins[mini] = i;\n        for (int j = 0; j < _mins.length; j++)\n          if (bin_cnts[(int)_mins[j]] > bin_cnts[(int)_mins[mini]]) mini = j;\n      }\n      if (bin_cnts[i] > bin_cnts[(int)_maxs[maxi]]) {\n        _maxs[maxi] = i;\n        for (int j = 0; j < _maxs.length; j++)\n          if (bin_cnts[(int)_maxs[j]] < bin_cnts[(int)_maxs[maxi]]) maxi = j;\n      }\n    }\n    for (int i = 0; i < _mins.length - 1; i++)\n      for (int j = 0; j < i; j++)\n        if (bin_cnts[(int)_mins[j]] > bin_cnts[(int)_mins[j+1]]) {\n          double t = _mins[j]; _mins[j] = _mins[j+1]; _mins[j+1] = t;\n        }\n    for (int i = 0; i < _maxs.length - 1; i++)\n      for (int j = 0; j < i; j++)\n        if (bin_cnts[(int)_maxs[j]] < bin_cnts[(int)_maxs[j+1]]) {\n          double t = _maxs[j]; _maxs[j] = _maxs[j+1]; _maxs[j+1] = t;\n        }\n  }","commit_id":"b30f02cb3d7f4e7da71aeba2f5c7c085d37896e2","url":"https://github.com/h2oai/h2o-2"},{"original_method":"public void add(Chunk chk) {\n    int maxmin = 0;\n    int minmax = 0;\n    for (int i = 0; i < chk._len; i++) {\n      if( chk.isNA0(i) ) continue;\n      double val = chk.at0(i);\n      assert val >= _min : \"ERROR: ON COLUMN \" + colname + \"   VALUE \" + val + \" < VEC.MIN \" + _min;\n      assert val <= _max : \"ERROR: ON COLUMN \" + colname + \"   VALUE \" + val + \" > VEC.MAX \" + _max;\n      if (val == 0.) zeros++;\n      // update min/max\n      if (val < mins[mins.length-1]) {\n        int index = Arrays.binarySearch(mins, val);\n        if (index < 0) {\n          index = -(index + 1);\n          for (int j = mins.length-1; j > index; j--) mins[j] = mins[j-1];\n          mins[index] = val;\n        }\n      }\n      if (val > maxs[0]) {\n        int index = Arrays.binarySearch(maxs, val);\n        if (index < 0) {\n          index = -(index + 1);\n          for (int j = 0; j < index-1; j++) maxs[j] = maxs[j+1];\n          maxs[index-1] = val;\n        }\n      }\n      // update histogram\n      long binIdx = Math.round((val-start)*1000000.0/binsz)/1000000;\n      ++bins[(int)binIdx];\n    }\n  }","id":53782,"modified_method":"public void add(Chunk chk) {\n    for (int i = 0; i < chk._len; i++) {\n      if( chk.isNA0(i) ) continue;\n      double val = chk.at0(i);\n      assert val >= _min : \"ERROR: ON COLUMN \" + colname + \"   VALUE \" + val + \" < VEC.MIN \" + _min;\n      assert val <= _max : \"ERROR: ON COLUMN \" + colname + \"   VALUE \" + val + \" > VEC.MAX \" + _max;\n      if ( !_vec.isEnum() ) {\n        if (val == 0.) _zeros++;\n        // update min/max\n        if (val < _mins[_mins.length-1]) {\n          int index = Arrays.binarySearch(_mins, val);\n          if (index < 0) {\n            index = -(index + 1);\n            for (int j = _mins.length-1; j > index; j--) _mins[j] = _mins[j-1];\n            _mins[index] = val;\n          }\n        }\n        if (val > _maxs[0]) {\n          int index = Arrays.binarySearch(_maxs, val);\n          if (index < 0) {\n            index = -(index + 1);\n            for (int j = 0; j < index-1; j++) _maxs[j] = _maxs[j+1];\n            _maxs[index-1] = val;\n          }\n        }\n      }\n      // update histogram\n      long binIdx = Math.round((val-_start)*1000000.0/_binsz)/1000000;\n      ++bin_cnts[(int)binIdx];\n    }\n  }","commit_id":"b30f02cb3d7f4e7da71aeba2f5c7c085d37896e2","url":"https://github.com/h2oai/h2o-2"},{"original_method":"public double binValue(int b) { return start + b*binsz; }","id":53783,"modified_method":"public double binValue(int b) { return _start + b*_binsz; }","commit_id":"b30f02cb3d7f4e7da71aeba2f5c7c085d37896e2","url":"https://github.com/h2oai/h2o-2"},{"original_method":"private void computePercentiles(){\n    percentileValues = new double [DEFAULT_PERCENTILES.length];\n    if( bins.length == 0 ) return;\n    int k = 0;\n    long s = 0;\n    for(int j = 0; j < DEFAULT_PERCENTILES.length; ++j) {\n      final double s1 = DEFAULT_PERCENTILES[j]*rows;\n      long bc = 0;\n      while(s1 > s+(bc = bins[k])){\n        s  += bc;\n        k++;\n      }\n      percentileValues[j] = mins[0] + k*binsz + ((binsz > 1)?0.5*binsz:0);\n    }\n  }","id":53784,"modified_method":"private void computePercentiles(){\n    _percentiles = new double [DEFAULT_PERCENTILES.length];\n    if( bin_cnts.length == 0 ) return;\n    int k = 0;\n    long s = 0;\n    for(int j = 0; j < DEFAULT_PERCENTILES.length; ++j) {\n      final double s1 = DEFAULT_PERCENTILES[j]*nrow;\n      long bc = 0;\n      while(s1 > s+(bc = bin_cnts[k])){\n        s  += bc;\n        k++;\n      }\n      _percentiles[j] = _mins[0] + k*_binsz + ((_binsz > 1)?0.5*_binsz:0);\n    }\n  }","commit_id":"b30f02cb3d7f4e7da71aeba2f5c7c085d37896e2","url":"https://github.com/h2oai/h2o-2"},{"original_method":"public void toHTML( Vec vec, String cname, StringBuilder sb ) {\n    sb.append(\"<div class='table' id='col_\" + cname + \"' style='width:90%;heigth:90%;border-top-style:solid;'>\" +\n    \"<div class='alert-success'><h4>Column: \" + cname + \" (type: \" + type + \")<\/h4><\/div>\\n\");\n    if ( rows == 0 ) {\n      sb.append(\"<div class='alert'>Empty column, no summary!<\/div><\/div>\\n\");\n      return;\n    }\n    // Base stats\n    if( !vec.isEnum() ) {\n      sb.append(\"<div style='width:100%;'><table class='table-bordered'>\");\n      sb.append(\"<tr><th colspan='\"+20+\"' style='text-align:center;'>Base Stats<\/th><\/tr>\");\n      sb.append(\"<tr>\");\n      sb.append(\"<th>avg<\/th><td>\" + Utils.p2d(avg)+\"<\/td>\");\n      sb.append(\"<th>sd<\/th><td>\" + Utils.p2d(sd) + \"<\/td>\");\n      sb.append(\"<th>NAs<\/th>  <td>\" + naCnt + \"<\/td>\");\n      sb.append(\"<th>zeros<\/th><td>\" + zeros + \"<\/td>\");\n      sb.append(\"<th>min[\" + mins.length + \"]<\/th>\");\n      for( double min : mins ) {\n        if (min == Double.POSITIVE_INFINITY) break;\n        sb.append(\"<td>\" + Utils.p2d(min) + \"<\/td>\");\n      }\n      sb.append(\"<th>max[\" + maxs.length + \"]<\/th>\");\n      for( double max : maxs ) {\n        if (max == Double.NEGATIVE_INFINITY) continue;\n        sb.append(\"<td>\" + Utils.p2d(max) + \"<\/td>\");\n      }\n      // End of base stats\n      sb.append(\"<\/tr> <\/table>\");\n      sb.append(\"<\/div>\");\n    } else {                    // Enums\n      sb.append(\"<div style='width:100%'><table class='table-bordered'>\");\n      sb.append(\"<tr><th colspan='\" + 4 + \"' style='text-align:center;'>Base Stats<\/th><\/tr>\");\n      sb.append(\"<tr><th>NAs<\/th>  <td>\" + naCnt + \"<\/td>\");\n      sb.append(\"<th>cardinality<\/th>  <td>\" + vec.domain().length + \"<\/td><\/tr>\");\n      sb.append(\"<\/table><\/div>\");\n    }\n    // Histogram\n    final int MAX_HISTO_BINS_DISPLAYED = 1000;\n    int len = Math.min(bins.length,MAX_HISTO_BINS_DISPLAYED);\n    sb.append(\"<div style='width:100%;overflow-x:auto;'><table class='table-bordered'>\");\n    sb.append(\"<tr> <th colspan=\"+len+\" style='text-align:center'>Histogram<\/th><\/tr>\");\n    sb.append(\"<tr>\");\n    if (_enum)\n       for( int i=0; i<len; i++ ) sb.append(\"<th>\" + vec.domain(i) + \"<\/th>\");\n    else\n       for( int i=0; i<len; i++ ) sb.append(\"<th>\" + Utils.p2d(binValue(i)) + \"<\/th>\");\n    sb.append(\"<\/tr>\");\n    sb.append(\"<tr>\");\n    for( int i=0; i<len; i++ ) sb.append(\"<td>\" + bins[i] + \"<\/td>\");\n    sb.append(\"<\/tr>\");\n    sb.append(\"<tr>\");\n    for( int i=0; i<len; i++ )\n      sb.append(String.format(\"<td>%.1f%%<\/td>\",(100.0*bins[i]/rows)));\n    sb.append(\"<\/tr>\");\n    if( bins.length >= MAX_HISTO_BINS_DISPLAYED )\n      sb.append(\"<div class='alert'>Histogram for this column was too big and was truncated to 1000 values!<\/div>\");\n    sb.append(\"<\/table><\/div>\");\n\n    if (!vec.isEnum()) {\n      // Percentiles\n      sb.append(\"<div style='width:100%;overflow-x:auto;'><table class='table-bordered'>\");\n      sb.append(\"<tr> <th colspan='\" + DEFAULT_PERCENTILES.length + \"' \" +\n              \"style='text-align:center' \" +\n              \">Percentiles<\/th><\/tr>\");\n      sb.append(\"<tr><th>Threshold(%)<\/th>\");\n      for (double pc : DEFAULT_PERCENTILES)\n        sb.append(\"<td>\" + (int) Math.round(pc * 100) + \"<\/td>\");\n      sb.append(\"<\/tr>\");\n      sb.append(\"<tr><th>Value<\/th>\");\n      for (double pv : percentileValues)\n        sb.append(\"<td>\" + Utils.p2d(pv) + \"<\/td>\");\n      sb.append(\"<\/tr>\");\n      sb.append(\"<\/table>\");\n      sb.append(\"<\/div>\");\n    }\n    sb.append(\"<\/div>\\n\"); \n  }","id":53785,"modified_method":"public void toHTML( Vec vec, String cname, StringBuilder sb ) {\n    sb.append(\"<div class='table' id='col_\" + cname + \"' style='width:90%;heigth:90%;border-top-style:solid;'>\" +\n    \"<div class='alert-success'><h4>Column: \" + cname + \" (type: \" + type + \")<\/h4><\/div>\\n\");\n    if ( nrow == 0 ) {\n      sb.append(\"<div class='alert'>Empty column, no summary!<\/div><\/div>\\n\");\n      return;\n    }\n    // Base stats\n    if( !vec.isEnum() ) {\n      NumStats stats = (NumStats)this.stats;\n      sb.append(\"<div style='width:100%;'><table class='table-bordered'>\");\n      sb.append(\"<tr><th colspan='\"+20+\"' style='text-align:center;'>Base Stats<\/th><\/tr>\");\n      sb.append(\"<tr>\");\n      sb.append(\"<th>mean<\/th><td>\" + Utils.p2d(stats.mean)+\"<\/td>\");\n      sb.append(\"<th>sd<\/th><td>\" + Utils.p2d(stats.sd) + \"<\/td>\");\n      sb.append(\"<th>NAs<\/th>  <td>\" + naCnt + \"<\/td>\");\n      sb.append(\"<th>zeros<\/th><td>\" + stats.zeros + \"<\/td>\");\n      sb.append(\"<th>min[\" + stats.mins.length + \"]<\/th>\");\n      for( double min : stats.mins ) {\n        if (min == Double.POSITIVE_INFINITY) break;\n        sb.append(\"<td>\" + Utils.p2d(min) + \"<\/td>\");\n      }\n      sb.append(\"<th>max[\" + stats.maxs.length + \"]<\/th>\");\n      for( double max : stats.maxs ) {\n        if (max == Double.NEGATIVE_INFINITY) continue;\n        sb.append(\"<td>\" + Utils.p2d(max) + \"<\/td>\");\n      }\n      // End of base stats\n      sb.append(\"<\/tr> <\/table>\");\n      sb.append(\"<\/div>\");\n    } else {                    // Enums\n      sb.append(\"<div style='width:100%'><table class='table-bordered'>\");\n      sb.append(\"<tr><th colspan='\" + 4 + \"' style='text-align:center;'>Base Stats<\/th><\/tr>\");\n      sb.append(\"<tr><th>NAs<\/th>  <td>\" + naCnt + \"<\/td>\");\n      sb.append(\"<th>cardinality<\/th>  <td>\" + vec.domain().length + \"<\/td><\/tr>\");\n      sb.append(\"<\/table><\/div>\");\n    }\n    // Histogram\n    final int MAX_HISTO_BINS_DISPLAYED = 1000;\n    int len = Math.min(bin_cnts.length,MAX_HISTO_BINS_DISPLAYED);\n    sb.append(\"<div style='width:100%;overflow-x:auto;'><table class='table-bordered'>\");\n    sb.append(\"<tr> <th colspan=\"+len+\" style='text-align:center'>Histogram<\/th><\/tr>\");\n    sb.append(\"<tr>\");\n    if (_vec.isEnum())\n       for( int i=0; i<len; i++ ) sb.append(\"<th>\" + vec.domain(i) + \"<\/th>\");\n    else\n       for( int i=0; i<len; i++ ) sb.append(\"<th>\" + Utils.p2d(binValue(i)) + \"<\/th>\");\n    sb.append(\"<\/tr>\");\n    sb.append(\"<tr>\");\n    for( int i=0; i<len; i++ ) sb.append(\"<td>\" + bin_cnts[i] + \"<\/td>\");\n    sb.append(\"<\/tr>\");\n    sb.append(\"<tr>\");\n    for( int i=0; i<len; i++ )\n      sb.append(String.format(\"<td>%.1f%%<\/td>\",(100.0*bin_cnts[i]/nrow)));\n    sb.append(\"<\/tr>\");\n    if( bin_cnts.length >= MAX_HISTO_BINS_DISPLAYED )\n      sb.append(\"<div class='alert'>Histogram for this column was too big and was truncated to 1000 values!<\/div>\");\n    sb.append(\"<\/table><\/div>\");\n\n    if (!vec.isEnum()) {\n      NumStats stats = (NumStats)this.stats;\n      // Percentiles\n      sb.append(\"<div style='width:100%;overflow-x:auto;'><table class='table-bordered'>\");\n      sb.append(\"<tr> <th colspan='\" + stats.percentile_thresholds.length + \"' \" +\n              \"style='text-align:center' \" +\n              \">Percentiles<\/th><\/tr>\");\n      sb.append(\"<tr><th>Threshold(%)<\/th>\");\n      for (double pc : stats.percentile_thresholds)\n        sb.append(\"<td>\" + (int) Math.round(pc * 100) + \"<\/td>\");\n      sb.append(\"<\/tr>\");\n      sb.append(\"<tr><th>Value<\/th>\");\n      for (double pv : stats.percentiles)\n        sb.append(\"<td>\" + Utils.p2d(pv) + \"<\/td>\");\n      sb.append(\"<\/tr>\");\n      sb.append(\"<\/table>\");\n      sb.append(\"<\/div>\");\n    }\n    sb.append(\"<\/div>\\n\"); \n  }","commit_id":"b30f02cb3d7f4e7da71aeba2f5c7c085d37896e2","url":"https://github.com/h2oai/h2o-2"},{"original_method":"public Summary2 add(Summary2 other) {\n    zeros += other.zeros;\n    Utils.add(bins, other.bins);\n\n    double[] ds = MemoryManager.malloc8d(mins.length);\n    int i = 0, j = 0;\n    for (int k = 0; k < ds.length; k++)\n      ds[k] = mins[i] < other.mins[j] ? mins[i++] : other.mins[j++];\n    System.arraycopy(ds,0,mins,0,ds.length);\n\n    i = j = maxs.length - 1;\n    for (int k = ds.length - 1; k >= 0; k--)\n      ds[k] = maxs[i] > other.maxs[j] ? maxs[i--] : other.maxs[j--];\n    System.arraycopy(ds,0,maxs,0,ds.length);\n    return this;\n  }","id":53786,"modified_method":"public Summary2 add(Summary2 other) {\n    _zeros += other._zeros;\n    Utils.add(bin_cnts, other.bin_cnts);\n    if (_vec.isEnum()) return this;\n\n    double[] ds = MemoryManager.malloc8d(_mins.length);\n    int i = 0, j = 0;\n    for (int k = 0; k < ds.length; k++)\n      ds[k] = _mins[i] < other._mins[j] ? _mins[i++] : other._mins[j++];\n    System.arraycopy(ds,0,_mins,0,ds.length);\n\n    i = j = _maxs.length - 1;\n    for (int k = ds.length - 1; k >= 0; k--)\n      ds[k] = _maxs[i] > other._maxs[j] ? _maxs[i--] : other._maxs[j--];\n    System.arraycopy(ds,0,_maxs,0,ds.length);\n    return this;\n  }","commit_id":"b30f02cb3d7f4e7da71aeba2f5c7c085d37896e2","url":"https://github.com/h2oai/h2o-2"},{"original_method":"public double percentileValue(int idx) {\n    if( _enum ) return Double.NaN;\n    if(percentileValues == null) computePercentiles();\n    return percentileValues[idx];\n  }","id":53787,"modified_method":"public double percentileValue(int idx) {\n    if( _vec.isEnum() ) return Double.NaN;\n     return _percentiles[idx];\n  }","commit_id":"b30f02cb3d7f4e7da71aeba2f5c7c085d37896e2","url":"https://github.com/h2oai/h2o-2"},{"original_method":"@Test public void testEnumColumn() {\n    Key key = Key.make(\"cars.hex\");\n    Frame fr = parseFrame(key, \"./smalldata/cars.csv\");\n    Vec vec = fr.vecs()[fr.find(\"name\")];\n    Summary2 s = new Summary2(vec, \"\");\n    s.add(vec.chunk(0));\n    for( int i = 1; i < vec.nChunks(); i++ )\n      { Summary2 s1 = new Summary2(vec, \"\"); s1.add(vec.chunk(i)); s.add(s1); }\n    s.toString();\n\n    assertEquals(306, s.bins.length);\n    UKV.remove(key);\n  }","id":53788,"modified_method":"@Test public void testEnumColumn() {\n    Key key = Key.make(\"cars.hex\");\n    Frame fr = parseFrame(key, \"./smalldata/cars.csv\");\n    Vec vec = fr.vecs()[fr.find(\"name\")];\n    Summary2 s = new Summary2(vec, \"\");\n    s.add(vec.chunk(0));\n    for( int i = 1; i < vec.nChunks(); i++ )\n      { Summary2 s1 = new Summary2(vec, \"\"); s1.add(vec.chunk(i)); s.add(s1); }\n    s.toString();\n\n    assertEquals(306, s.bin_cnts.length);\n    UKV.remove(key);\n  }","commit_id":"b30f02cb3d7f4e7da71aeba2f5c7c085d37896e2","url":"https://github.com/h2oai/h2o-2"},{"original_method":"@Test public void testIntColumn() {\n    Key key = Key.make(\"cars.hex\");\n    Frame fr = parseFrame(key, \"./smalldata/cars.csv\");\n    Vec vec = fr.vecs()[fr.find(\"cylinders\")];\n    Summary2 s = new Summary2(vec, \"\");\n    s.add(vec.chunk(0));\n    for( int i = 1; i < vec.nChunks(); i++ )\n      { Summary2 s1 = new Summary2(vec, \"\"); s1.add(vec.chunk(i)); s.add(s1); }\n    s.toString();\n\n    assertEquals(0, s.bins[4]); // no 7 cylinder cars\n    assertEquals(4, (int)s.percentileValues[0]);\n    assertEquals(8, (int)s.percentileValues[s.percentileValues.length - 1]);\n    UKV.remove(key);\n  }","id":53789,"modified_method":"@Test public void testIntColumn() {\n    Key key = Key.make(\"cars.hex\");\n    Frame fr = parseFrame(key, \"./smalldata/cars.csv\");\n    Vec vec = fr.vecs()[fr.find(\"cylinders\")];\n    Summary2 s = new Summary2(vec, \"\");\n    s.add(vec.chunk(0));\n    for( int i = 1; i < vec.nChunks(); i++ )\n      { Summary2 s1 = new Summary2(vec, \"\"); s1.add(vec.chunk(i)); s.add(s1); }\n    s.toString();\n\n    assertEquals(0, s.bin_cnts[4]); // no 7 cylinder cars\n    assertEquals(4, (int)s._percentiles[0]);\n    assertEquals(8, (int)s._percentiles[s._percentiles.length - 1]);\n    UKV.remove(key);\n  }","commit_id":"b30f02cb3d7f4e7da71aeba2f5c7c085d37896e2","url":"https://github.com/h2oai/h2o-2"},{"original_method":"@Test public void testConstColumn() {\n    Key key = Key.make(\"testConst.hex\");\n    Frame fr = parseFrame(key, \"./smalldata/constantColumn.csv\");\n\n    Vec vec = fr.vecs()[0];\n    Summary2 s = new Summary2(vec, \"\");\n    s.add(vec.chunk(0));\n    for (int i = 1; i < vec.nChunks(); i++) {\n      Summary2 s1 = new Summary2(vec, \"\"); s1.add(vec.chunk(i)); s.add(s1);\n    }\n    s.toString();\n\n    assertEquals(1, s.bins.length);\n    assertEquals(528, s.bins[0]);\n    assertEquals(0.1, s.start, 0.00001);\n    for (double pv : s.percentileValues)\n      assertEquals(0.1, pv, 0.00001);\n\n    UKV.remove(key);\n  }","id":53790,"modified_method":"@Test public void testConstColumn() {\n    Key key = Key.make(\"testConst.hex\");\n    Frame fr = parseFrame(key, \"./smalldata/constantColumn.csv\");\n\n    Vec vec = fr.vecs()[0];\n    Summary2 s = new Summary2(vec, \"\");\n    s.add(vec.chunk(0));\n    for (int i = 1; i < vec.nChunks(); i++) {\n      Summary2 s1 = new Summary2(vec, \"\"); s1.add(vec.chunk(i)); s.add(s1);\n    }\n    s.finishUp();\n    assertEquals(1, s.bin_cnts.length);\n    assertEquals(528, s.bin_cnts[0]);\n    assertEquals(0.1, s.bin_cnts[0], 0.00001);\n    for (double pv : s._percentiles)\n      assertEquals(0.1, pv, 0.00001);\n\n    UKV.remove(key);\n  }","commit_id":"b30f02cb3d7f4e7da71aeba2f5c7c085d37896e2","url":"https://github.com/h2oai/h2o-2"},{"original_method":"@Override protected Response serve() {\n    if( source == null ) return RequestServer._http404.serve();\n    // select all columns by default\n    if( cols == null ) {\n      cols = new int[Math.min(source.vecs().length,max_ncols)];\n      for(int i = 0; i < cols.length; i++) cols[i] = i;\n    }\n    names = new String[cols.length];\n    means = new double[cols.length];\n    Vec[] vecs = new Vec[cols.length];\n    for (int i = 0; i < cols.length; i++) {\n      vecs[i] = source.vecs()[cols[i]];\n      names[i] = source._names[cols[i]];\n      means[i] = vecs[i].mean();\n    }\n    Frame fr = new Frame(names, vecs);\n    summaries = new SummaryTask2().doAll(fr)._summaries;\n    if (summaries != null) {\n      for( Summary2 s2 : summaries ) {\n        s2.percentileValue(0);\n        s2.computeMajorities();\n      }\n    }\n    return new Response(Response.Status.done, this, -1, -1, null);\n  }","id":53791,"modified_method":"@Override protected Response serve() {\n    if( source == null ) return RequestServer._http404.serve();\n    // select all columns by default\n    if( cols == null ) {\n      cols = new int[Math.min(source.vecs().length,max_ncols)];\n      for(int i = 0; i < cols.length; i++) cols[i] = i;\n    }\n    names = new String[cols.length];\n    means = new double[cols.length];\n    Vec[] vecs = new Vec[cols.length];\n    for (int i = 0; i < cols.length; i++) {\n      vecs[i] = source.vecs()[cols[i]];\n      names[i] = source._names[cols[i]];\n      means[i] = vecs[i].mean();\n    }\n    Frame fr = new Frame(names, vecs);\n    summaries = new SummaryTask2().doAll(fr)._summaries;\n    if (summaries != null)\n      for( Summary2 s2 : summaries ) s2.finishUp();\n\n    return new Response(Response.Status.done, this, -1, -1, null);\n  }","commit_id":"b30f02cb3d7f4e7da71aeba2f5c7c085d37896e2","url":"https://github.com/h2oai/h2o-2"},{"original_method":"public void add(Chunk chk) {\n    int maxmin = 0;\n    int minmax = 0;\n    for (int i = 0; i < chk._len; i++) {\n      if( chk.isNA0(i) ) continue;\n      double val = chk.at0(i);\n      assert val >= _min : \"ERROR: ON COLUMN \" + _colname + \"   VALUE \" + val + \" < VEC.MIN \" + _min;\n      assert val <= _max : \"ERROR: ON COLUMN \" + _colname + \"   VALUE \" + val + \" > VEC.MAX \" + _max;\n      if (val == 0.) zeros++;\n      // update min/max\n      if (val < mins[mins.length-1]) {\n        int index = Arrays.binarySearch(mins, val);\n        if (index < 0) {\n          index = -(index + 1);\n          for (int j = mins.length-1; j > index; j--) mins[j] = mins[j-1];\n          mins[index] = val;\n        }\n      }\n      if (val > maxs[0]) {\n        int index = Arrays.binarySearch(maxs, val);\n        if (index < 0) {\n          index = -(index + 1);\n          for (int j = 0; j < index-1; j++) maxs[j] = maxs[j+1];\n          maxs[index-1] = val;\n        }\n      }\n      // update histogram\n      long binIdx = Math.round((val-start)*1000000.0/binsz)/1000000;\n      ++bins[(int)binIdx];\n    }\n  }","id":53792,"modified_method":"public void add(Chunk chk) {\n    int maxmin = 0;\n    int minmax = 0;\n    for (int i = 0; i < chk._len; i++) {\n      if( chk.isNA0(i) ) continue;\n      double val = chk.at0(i);\n      assert val >= _min : \"ERROR: ON COLUMN \" + colname + \"   VALUE \" + val + \" < VEC.MIN \" + _min;\n      assert val <= _max : \"ERROR: ON COLUMN \" + colname + \"   VALUE \" + val + \" > VEC.MAX \" + _max;\n      if (val == 0.) zeros++;\n      // update min/max\n      if (val < mins[mins.length-1]) {\n        int index = Arrays.binarySearch(mins, val);\n        if (index < 0) {\n          index = -(index + 1);\n          for (int j = mins.length-1; j > index; j--) mins[j] = mins[j-1];\n          mins[index] = val;\n        }\n      }\n      if (val > maxs[0]) {\n        int index = Arrays.binarySearch(maxs, val);\n        if (index < 0) {\n          index = -(index + 1);\n          for (int j = 0; j < index-1; j++) maxs[j] = maxs[j+1];\n          maxs[index-1] = val;\n        }\n      }\n      // update histogram\n      long binIdx = Math.round((val-start)*1000000.0/binsz)/1000000;\n      ++bins[(int)binIdx];\n    }\n  }","commit_id":"cc550a574ac39e04a7518ec833a88a843a3d2556","url":"https://github.com/h2oai/h2o-2"},{"original_method":"public void toHTML( Vec vec, String cname, StringBuilder sb ) {\n    sb.append(\"<div class='table' id='col_\" + cname + \"' style='width:90%;heigth:90%;border-top-style:solid;'>\" +\n    \"<div class='alert-success'><h4>Column: \" + cname + \"<\/h4><\/div>\\n\");\n    if ( rows == 0 ) {\n      sb.append(\"<div class='alert'>Empty column, no summary!<\/div><\/div>\\n\");\n      return;\n    }\n    // Base stats\n    if( !vec.isEnum() ) {\n      sb.append(\"<div style='width:100%;'><table class='table-bordered'>\");\n      sb.append(\"<tr><th colspan='\"+20+\"' style='text-align:center;'>Base Stats<\/th><\/tr>\");\n      sb.append(\"<tr>\");\n      sb.append(\"<th>avg<\/th><td>\" + Utils.p2d(vec.mean())+\"<\/td>\");\n      sb.append(\"<th>sd<\/th><td>\" + Utils.p2d(vec.sigma()) + \"<\/td>\");\n      sb.append(\"<th>NAs<\/th>  <td>\" + vec.naCnt() + \"<\/td>\");\n      sb.append(\"<th>zeros<\/th><td>\" + zeros + \"<\/td>\");\n      sb.append(\"<th>min[\" + mins.length + \"]<\/th>\");\n      for( double min : mins ) {\n        if (min == Double.POSITIVE_INFINITY) break;\n        sb.append(\"<td>\" + Utils.p2d(min) + \"<\/td>\");\n      }\n      sb.append(\"<th>max[\" + maxs.length + \"]<\/th>\");\n      for( double max : maxs ) {\n        if (max == Double.NEGATIVE_INFINITY) continue;\n        sb.append(\"<td>\" + Utils.p2d(max) + \"<\/td>\");\n      }\n      // End of base stats\n      sb.append(\"<\/tr> <\/table>\");\n      sb.append(\"<\/div>\");\n    } else {                    // Enums\n      sb.append(\"<div style='width:100%'><table class='table-bordered'>\");\n      sb.append(\"<tr><th colspan='\" + 4 + \"' style='text-align:center;'>Base Stats<\/th><\/tr>\");\n      sb.append(\"<tr><th>NAs<\/th>  <td>\" + vec.naCnt() + \"<\/td>\");\n      sb.append(\"<th>cardinality<\/th>  <td>\" + vec.domain().length + \"<\/td><\/tr>\");\n      sb.append(\"<\/table><\/div>\");\n    }\n    // Histogram\n    final int MAX_HISTO_BINS_DISPLAYED = 1000;\n    int len = Math.min(bins.length,MAX_HISTO_BINS_DISPLAYED);\n    sb.append(\"<div style='width:100%;overflow-x:auto;'><table class='table-bordered'>\");\n    sb.append(\"<tr> <th colspan=\"+len+\" style='text-align:center'>Histogram<\/th><\/tr>\");\n    sb.append(\"<tr>\");\n    if (_enum)\n       for( int i=0; i<len; i++ ) sb.append(\"<th>\" + vec.domain(i) + \"<\/th>\");\n    else\n       for( int i=0; i<len; i++ ) sb.append(\"<th>\" + Utils.p2d(binValue(i)) + \"<\/th>\");\n    sb.append(\"<\/tr>\");\n    sb.append(\"<tr>\");\n    for( int i=0; i<len; i++ ) sb.append(\"<td>\" + bins[i] + \"<\/td>\");\n    sb.append(\"<\/tr>\");\n    sb.append(\"<tr>\");\n    for( int i=0; i<len; i++ )\n      sb.append(String.format(\"<td>%.1f%%<\/td>\",(100.0*bins[i]/rows)));\n    sb.append(\"<\/tr>\");\n    if( bins.length >= MAX_HISTO_BINS_DISPLAYED )\n      sb.append(\"<div class='alert'>Histogram for this column was too big and was truncated to 1000 values!<\/div>\");\n    sb.append(\"<\/table><\/div>\");\n\n    if (!vec.isEnum()) {\n      // Percentiles\n      sb.append(\"<div style='width:100%;overflow-x:auto;'><table class='table-bordered'>\");\n      sb.append(\"<tr> <th colspan='\" + DEFAULT_PERCENTILES.length + \"' \" +\n              \"style='text-align:center' \" +\n              \">Percentiles<\/th><\/tr>\");\n      sb.append(\"<tr><th>Threshold(%)<\/th>\");\n      for (double pc : DEFAULT_PERCENTILES)\n        sb.append(\"<td>\" + (int) Math.round(pc * 100) + \"<\/td>\");\n      sb.append(\"<\/tr>\");\n      sb.append(\"<tr><th>Value<\/th>\");\n      for (double pv : percentileValues)\n        sb.append(\"<td>\" + Utils.p2d(pv) + \"<\/td>\");\n      sb.append(\"<\/tr>\");\n      sb.append(\"<\/table>\");\n      sb.append(\"<\/div>\");\n    }\n    sb.append(\"<\/div>\\n\"); \n  }","id":53793,"modified_method":"public void toHTML( Vec vec, String cname, StringBuilder sb ) {\n    sb.append(\"<div class='table' id='col_\" + cname + \"' style='width:90%;heigth:90%;border-top-style:solid;'>\" +\n    \"<div class='alert-success'><h4>Column: \" + cname + \" (type: \" + type + \")<\/h4><\/div>\\n\");\n    if ( rows == 0 ) {\n      sb.append(\"<div class='alert'>Empty column, no summary!<\/div><\/div>\\n\");\n      return;\n    }\n    // Base stats\n    if( !vec.isEnum() ) {\n      sb.append(\"<div style='width:100%;'><table class='table-bordered'>\");\n      sb.append(\"<tr><th colspan='\"+20+\"' style='text-align:center;'>Base Stats<\/th><\/tr>\");\n      sb.append(\"<tr>\");\n      sb.append(\"<th>avg<\/th><td>\" + Utils.p2d(avg)+\"<\/td>\");\n      sb.append(\"<th>sd<\/th><td>\" + Utils.p2d(sd) + \"<\/td>\");\n      sb.append(\"<th>NAs<\/th>  <td>\" + naCnt + \"<\/td>\");\n      sb.append(\"<th>zeros<\/th><td>\" + zeros + \"<\/td>\");\n      sb.append(\"<th>min[\" + mins.length + \"]<\/th>\");\n      for( double min : mins ) {\n        if (min == Double.POSITIVE_INFINITY) break;\n        sb.append(\"<td>\" + Utils.p2d(min) + \"<\/td>\");\n      }\n      sb.append(\"<th>max[\" + maxs.length + \"]<\/th>\");\n      for( double max : maxs ) {\n        if (max == Double.NEGATIVE_INFINITY) continue;\n        sb.append(\"<td>\" + Utils.p2d(max) + \"<\/td>\");\n      }\n      // End of base stats\n      sb.append(\"<\/tr> <\/table>\");\n      sb.append(\"<\/div>\");\n    } else {                    // Enums\n      sb.append(\"<div style='width:100%'><table class='table-bordered'>\");\n      sb.append(\"<tr><th colspan='\" + 4 + \"' style='text-align:center;'>Base Stats<\/th><\/tr>\");\n      sb.append(\"<tr><th>NAs<\/th>  <td>\" + naCnt + \"<\/td>\");\n      sb.append(\"<th>cardinality<\/th>  <td>\" + vec.domain().length + \"<\/td><\/tr>\");\n      sb.append(\"<\/table><\/div>\");\n    }\n    // Histogram\n    final int MAX_HISTO_BINS_DISPLAYED = 1000;\n    int len = Math.min(bins.length,MAX_HISTO_BINS_DISPLAYED);\n    sb.append(\"<div style='width:100%;overflow-x:auto;'><table class='table-bordered'>\");\n    sb.append(\"<tr> <th colspan=\"+len+\" style='text-align:center'>Histogram<\/th><\/tr>\");\n    sb.append(\"<tr>\");\n    if (_enum)\n       for( int i=0; i<len; i++ ) sb.append(\"<th>\" + vec.domain(i) + \"<\/th>\");\n    else\n       for( int i=0; i<len; i++ ) sb.append(\"<th>\" + Utils.p2d(binValue(i)) + \"<\/th>\");\n    sb.append(\"<\/tr>\");\n    sb.append(\"<tr>\");\n    for( int i=0; i<len; i++ ) sb.append(\"<td>\" + bins[i] + \"<\/td>\");\n    sb.append(\"<\/tr>\");\n    sb.append(\"<tr>\");\n    for( int i=0; i<len; i++ )\n      sb.append(String.format(\"<td>%.1f%%<\/td>\",(100.0*bins[i]/rows)));\n    sb.append(\"<\/tr>\");\n    if( bins.length >= MAX_HISTO_BINS_DISPLAYED )\n      sb.append(\"<div class='alert'>Histogram for this column was too big and was truncated to 1000 values!<\/div>\");\n    sb.append(\"<\/table><\/div>\");\n\n    if (!vec.isEnum()) {\n      // Percentiles\n      sb.append(\"<div style='width:100%;overflow-x:auto;'><table class='table-bordered'>\");\n      sb.append(\"<tr> <th colspan='\" + DEFAULT_PERCENTILES.length + \"' \" +\n              \"style='text-align:center' \" +\n              \">Percentiles<\/th><\/tr>\");\n      sb.append(\"<tr><th>Threshold(%)<\/th>\");\n      for (double pc : DEFAULT_PERCENTILES)\n        sb.append(\"<td>\" + (int) Math.round(pc * 100) + \"<\/td>\");\n      sb.append(\"<\/tr>\");\n      sb.append(\"<tr><th>Value<\/th>\");\n      for (double pv : percentileValues)\n        sb.append(\"<td>\" + Utils.p2d(pv) + \"<\/td>\");\n      sb.append(\"<\/tr>\");\n      sb.append(\"<\/table>\");\n      sb.append(\"<\/div>\");\n    }\n    sb.append(\"<\/div>\\n\"); \n  }","commit_id":"cc550a574ac39e04a7518ec833a88a843a3d2556","url":"https://github.com/h2oai/h2o-2"},{"original_method":"public Summary2(Vec vec, String colname) {\n    _colname = colname;\n    _enum = vec.isEnum();\n    _isInt = vec.isInt();\n    if (_enum) domains = vec.domain(); else domains = null;\n    long len = vec.length();\n    rows = len - vec.naCnt();\n    if (_enum) {\n      mins = MemoryManager.malloc8d(Math.min(domains.length, NMAX));\n      maxs = MemoryManager.malloc8d(Math.min(domains.length, NMAX));\n    } else {\n      mins = MemoryManager.malloc8d((int)Math.min(len,NMAX));\n      maxs = MemoryManager.malloc8d((int)Math.min(len,NMAX));\n    }\n    Arrays.fill(mins, Double.POSITIVE_INFINITY);\n    Arrays.fill(maxs, Double.NEGATIVE_INFINITY);\n    \n    _min = vec.min();_max = vec.max();\n    double span = vec.max()-vec.min() + 1;\n    if( vec.isEnum() && span < MAX_HIST_SZ ) {\n      start = vec.min();\n      binsz = 1;\n      bins = new long[(int)span];\n    } else {\n      // guard against improper parse (date type) or zero c._sigma\n      double sigma = vec.sigma();\n      if (Double.isNaN(sigma)) sigma = 0; \n      double b = Math.max(1e-4,3.5 * sigma/ Math.cbrt(len));\n      double d = Math.pow(10, Math.floor(Math.log10(b)));\n      if (b > 20*d/3)\n        d *= 10;\n      else if (b > 5*d/3)\n        d *= 5;\n\n      // tweak for integers\n      if (d < 1. && _isInt) d = 1.;\n      binsz = d;\n      start = binsz * Math.floor(vec.min()/binsz);\n      int nbin = (int)Math.floor((vec.max() + (_isInt?.5:0) - start)/binsz) + 1;\n      assert nbin > 0;\n      bins = new long[nbin];\n    }\n  }","id":53794,"modified_method":"public Summary2(Vec vec, String colname) {\n    colname = colname;\n    _enum = vec.isEnum();\n    _isInt = vec.isInt();\n    type = _enum?\"Enum\":_isInt?\"Int\":\"Real\";\n    avg = vec.mean();\n    sd = vec.sigma();\n    naCnt = vec.naCnt();\n    if (_enum) domains = vec.domain(); else domains = null;\n    long len = vec.length();\n    rows = len - naCnt;\n    if (_enum) {\n      mins = MemoryManager.malloc8d(Math.min(domains.length, NMAX));\n      maxs = MemoryManager.malloc8d(Math.min(domains.length, NMAX));\n    } else {\n      mins = MemoryManager.malloc8d((int)Math.min(len,NMAX));\n      maxs = MemoryManager.malloc8d((int)Math.min(len,NMAX));\n    }\n    Arrays.fill(mins, Double.POSITIVE_INFINITY);\n    Arrays.fill(maxs, Double.NEGATIVE_INFINITY);\n    \n    _min = vec.min();_max = vec.max();\n    double span = vec.max()-vec.min() + 1;\n    if( vec.isEnum() && span < MAX_HIST_SZ ) {\n      start = vec.min();\n      binsz = 1;\n      bins = new long[(int)span];\n    } else {\n      // guard against improper parse (date type) or zero c._sigma\n      double sigma = sd;\n      if (Double.isNaN(sigma)) sigma = 0; \n      double b = Math.max(1e-4,3.5 * sigma/ Math.cbrt(len));\n      double d = Math.pow(10, Math.floor(Math.log10(b)));\n      if (b > 20*d/3)\n        d *= 10;\n      else if (b > 5*d/3)\n        d *= 5;\n\n      // tweak for integers\n      if (d < 1. && _isInt) d = 1.;\n      binsz = d;\n      start = binsz * Math.floor(vec.min()/binsz);\n      int nbin = (int)Math.floor((vec.max() + (_isInt?.5:0) - start)/binsz) + 1;\n      assert nbin > 0;\n      bins = new long[nbin];\n    }\n  }","commit_id":"cc550a574ac39e04a7518ec833a88a843a3d2556","url":"https://github.com/h2oai/h2o-2"},{"original_method":"public void testConfigurePortletAPDisplayPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//input[@id='_86_showOnlyLayoutAssetsCheckbox']\");\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_showOnlyLayoutAssetsCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@id='_86_showOnlyLayoutAssetsCheckbox']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Show only assets with Asset Publisher Test Page as its display page. \"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_showOnlyLayoutAssetsCheckbox']\"));\n\t\tThread.sleep(1000);\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_showOnlyLayoutAssetsCheckbox']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":53795,"modified_method":"public void testConfigurePortletAPDisplayPage() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(1000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\t\t\tselenium.selectFrame(\n\t\t\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//input[@id='_86_showOnlyLayoutAssetsCheckbox']\");\n\n\t\t\t\tboolean displayPageNotChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_showOnlyLayoutAssetsCheckbox']\");\n\n\t\t\t\tif (displayPageNotChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_showOnlyLayoutAssetsCheckbox']\"));\n\t\t\t\tselenium.clickAt(\"//input[@id='_86_showOnlyLayoutAssetsCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"Show only assets with Asset Publisher Test Page as its display page. \"));\n\n\t\t\tcase 2:\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_showOnlyLayoutAssetsCheckbox']\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_showOnlyLayoutAssetsCheckbox']\"));\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"f9eeb9b66d4c17bcb8135ec46c822ad04dd528bd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletAPDisplayTemplateAbstracts()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//ul[contains(.,'Display Settings')]/li[2]/span/a\");\n\t\tselenium.clickAt(\"//ul[contains(.,'Display Settings')]/li[2]/span/a\",\n\t\t\tRuntimeVariables.replace(\"Display Settings\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='display-template']/span/span/span/select\t\");\n\t\tselenium.select(\"//div[@class='display-template']/span/span/span/select\t\",\n\t\t\tRuntimeVariables.replace(\"Abstracts\"));\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\t\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":53796,"modified_method":"public void testConfigurePortletAPDisplayTemplateAbstracts()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//ul[contains(.,'Display Settings')]/li[2]/span/a\");\n\t\tselenium.clickAt(\"//ul[contains(.,'Display Settings')]/li[2]/span/a\",\n\t\t\tRuntimeVariables.replace(\"Display Settings\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='display-template']/span/span/span/select\t\");\n\t\tselenium.select(\"//div[@class='display-template']/span/span/span/select\t\",\n\t\t\tRuntimeVariables.replace(\"Abstracts\"));\n\t\tThread.sleep(1000);\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\t\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"f9eeb9b66d4c17bcb8135ec46c822ad04dd528bd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletAPDisplayTemplateRichSummary()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//ul[contains(.,'Display Settings')]/li[2]/span/a\");\n\t\tselenium.clickAt(\"//ul[contains(.,'Display Settings')]/li[2]/span/a\",\n\t\t\tRuntimeVariables.replace(\"Display Settings\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='display-template']/span/span/span/select\");\n\t\tselenium.select(\"//div[@class='display-template']/span/span/span/select\t\",\n\t\t\tRuntimeVariables.replace(\"Rich Summary\"));\n\t\tThread.sleep(5000);\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\t\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":53797,"modified_method":"public void testConfigurePortletAPDisplayTemplateRichSummary()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//ul[contains(.,'Display Settings')]/li[2]/span/a\");\n\t\tselenium.clickAt(\"//ul[contains(.,'Display Settings')]/li[2]/span/a\",\n\t\t\tRuntimeVariables.replace(\"Display Settings\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='display-template']/span/span/span/select\");\n\t\tselenium.select(\"//div[@class='display-template']/span/span/span/select\t\",\n\t\t\tRuntimeVariables.replace(\"Rich Summary\"));\n\t\tThread.sleep(1000);\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\t\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"f9eeb9b66d4c17bcb8135ec46c822ad04dd528bd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletAPEnableRatings() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(1000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\t\t\tselenium.selectFrame(\n\t\t\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\t\t\tselenium.waitForVisible(\"link=Display Settings\");\n\t\t\t\tselenium.clickAt(\"link=Display Settings\",\n\t\t\t\t\tRuntimeVariables.replace(\"Display Settings\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//input[@id='_86_enableRatingsCheckbox']\");\n\n\t\t\t\tboolean ratingsDisabled = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_enableRatingsCheckbox']\");\n\n\t\t\t\tif (ratingsDisabled) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_86_enableRatingsCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Enable Ratings\"));\n\n\t\t\tcase 2:\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_enableRatingsCheckbox']\"));\n\t\t\t\tThread.sleep(1000);\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_enableRatingsCheckbox']\"));\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":53798,"modified_method":"public void testConfigurePortletAPEnableRatings() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(1000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\t\t\tselenium.selectFrame(\n\t\t\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\t\t\tselenium.waitForVisible(\"link=Display Settings\");\n\t\t\t\tselenium.clickAt(\"link=Display Settings\",\n\t\t\t\t\tRuntimeVariables.replace(\"Display Settings\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//input[@id='_86_enableRatingsCheckbox']\");\n\n\t\t\t\tboolean ratingsDisabled = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_enableRatingsCheckbox']\");\n\n\t\t\t\tif (ratingsDisabled) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_enableRatingsCheckbox']\"));\n\t\t\t\tselenium.clickAt(\"//input[@id='_86_enableRatingsCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Enable Ratings\"));\n\n\t\t\tcase 2:\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_enableRatingsCheckbox']\"));\n\t\t\t\tThread.sleep(1000);\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_enableRatingsCheckbox']\"));\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"f9eeb9b66d4c17bcb8135ec46c822ad04dd528bd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletAPOrderByColumnRatings()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Ordering and Grouping\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@id='assetPublisherOrderingAndGroupingPanel']/div/div/span\"));\n\t\tselenium.waitForVisible(\"//select[contains(@id,'orderByColumn')]\");\n\t\tselenium.select(\"//select[contains(@id,'orderByColumn')]\",\n\t\t\tRuntimeVariables.replace(\"Ratings\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Ratings\",\n\t\t\tselenium.getSelectedLabel(\"//select[contains(@id,'orderByColumn')]\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":53799,"modified_method":"public void testConfigurePortletAPOrderByColumnRatings()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Ordering and Grouping\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@id='assetPublisherOrderingAndGroupingPanel']/div/div/span\"));\n\t\tselenium.waitForVisible(\"//select[contains(@id,'orderByColumn')]\");\n\t\tselenium.select(\"//select[contains(@id,'orderByColumn')]\",\n\t\t\tRuntimeVariables.replace(\"Ratings\"));\n\t\tThread.sleep(1000);\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Ratings\",\n\t\t\tselenium.getSelectedLabel(\"//select[contains(@id,'orderByColumn')]\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"f9eeb9b66d4c17bcb8135ec46c822ad04dd528bd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletAPScopeBlogsPage()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_defaultScope']\");\n\t\tselenium.select(\"//select[@id='_86_defaultScope']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tassertEquals(\"Blogs Test Page\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_defaultScope']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Blogs Test Page\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_defaultScope']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":53800,"modified_method":"public void testConfigurePortletAPScopeBlogsPage()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.waitForVisible(\"//span[@title='Select']/ul/li/strong/a/span\");\n\t\tassertEquals(RuntimeVariables.replace(\"Select\"),\n\t\t\tselenium.getText(\"//span[@title='Select']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Select']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Select\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Pages...')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Pages...\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Pages...')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Pages...')]\",\n\t\t\tRuntimeVariables.replace(\"Pages...\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForVisible(\"//iframe[@id='_86_selectGroup']\");\n\t\tselenium.selectFrame(\"//iframe[@id='_86_selectGroup']\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/store.js')]\");\n\t\tselenium.waitForVisible(\"//tr[contains(.,'Blogs Test Page')]/td[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Test Page\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Blogs Test Page')]/td[1]/a\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'Blogs Test Page')]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Blogs Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Test Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'Blogs Test Page')]/td[1]/span/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Current Site (Liferay)\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'Current Site (Liferay)')]/td[1]/span/span\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'Current Site (Liferay)')]/td[3]/span/a/img[@title='Delete']\",\n\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"f9eeb9b66d4c17bcb8135ec46c822ad04dd528bd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletAPSetAsDefault() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.waitForVisible(\"link=Display Settings\");\n\t\tselenium.clickAt(\"link=Display Settings\",\n\t\t\tRuntimeVariables.replace(\"Display Settings\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//input[@id='_86_defaultAssetPublisherCheckbox']\");\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_defaultAssetPublisherCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@id='_86_defaultAssetPublisherCheckbox']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Set as the Default Asset Publisher for This Page\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_defaultAssetPublisherCheckbox']\"));\n\t\tThread.sleep(1000);\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_defaultAssetPublisherCheckbox']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":53801,"modified_method":"public void testConfigurePortletAPSetAsDefault() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(1000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\t\t\tselenium.selectFrame(\n\t\t\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\t\t\tselenium.waitForVisible(\"link=Display Settings\");\n\t\t\t\tselenium.clickAt(\"link=Display Settings\",\n\t\t\t\t\tRuntimeVariables.replace(\"Display Settings\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//input[@id='_86_defaultAssetPublisherCheckbox']\");\n\n\t\t\t\tboolean setAsDefaultNotChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_defaultAssetPublisherCheckbox']\");\n\n\t\t\t\tif (setAsDefaultNotChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_defaultAssetPublisherCheckbox']\"));\n\t\t\t\tselenium.clickAt(\"//input[@id='_86_defaultAssetPublisherCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\n\t\t\t\t\t\t\"Set as the Default Asset Publisher for This Page\"));\n\n\t\t\tcase 2:\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_defaultAssetPublisherCheckbox']\"));\n\t\t\t\tThread.sleep(1000);\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_defaultAssetPublisherCheckbox']\"));\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"f9eeb9b66d4c17bcb8135ec46c822ad04dd528bd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletAssetSelectionDynamic()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.waitForVisible(\"//span[@title='Options']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tThread.sleep(5000);\n\t\tselenium.waitForVisible(\"//select[@id='_86_selectionStyle']\");\n\t\tselenium.select(\"//select[@id='_86_selectionStyle']\",\n\t\t\tRuntimeVariables.replace(\"Dynamic\"));\n\t\tselenium.waitForText(\"//div[@class='lfr-panel-title']/span\", \"Source\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Dynamic\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_selectionStyle']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='lfr-panel-title'])[1]/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Filter\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='lfr-panel-title'])[2]/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Custom User Attributes\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='lfr-panel-title'])[3]/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Ordering and Grouping\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='lfr-panel-title'])[4]/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Display Settings\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='lfr-panel-title'])[5]/span\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":53802,"modified_method":"public void testConfigurePortletAssetSelectionDynamic()\n\t\tthrows Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(1000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\t\t\tselenium.selectFrame(\n\t\t\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//input[@id='_86_selectionStyleDynamic']\");\n\n\t\t\t\tboolean dynamicNotChecked = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_selectionStyleDynamic']\");\n\n\t\t\t\tif (dynamicNotChecked) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_selectionStyleDynamic']\"));\n\t\t\t\tselenium.clickAt(\"//input[@id='_86_selectionStyleDynamic']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dynamic\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 2:\n\t\t\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_86_selectionStyleDynamic']\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"xPath=(//div[@class='lfr-panel-title'])[1]/span\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Filter\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"xPath=(//div[@class='lfr-panel-title'])[2]/span\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Custom User Attributes\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"xPath=(//div[@class='lfr-panel-title'])[3]/span\"));\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Ordering and Grouping\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"xPath=(//div[@class='lfr-panel-title'])[4]/span\"));\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"f9eeb9b66d4c17bcb8135ec46c822ad04dd528bd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletAvailableBlogsEntry()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_anyAssetType']\");\n\t\tselenium.select(\"//select[@id='_86_anyAssetType']\",\n\t\t\tRuntimeVariables.replace(\"Select More Than One...\"));\n\t\tselenium.waitForVisible(\"//select[@id='_86_currentClassNameIds']\");\n\t\tselenium.addSelection(\"//select[@id='_86_currentClassNameIds']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//fieldset[2]/div/div/div/div/div/div/div[2]/div/span/span/button[1]\");\n\t\tselenium.clickAt(\"//fieldset[2]/div/div/div/div/div/div/div[2]/div/span/span/button[1]\",\n\t\t\tRuntimeVariables.replace(\"Right Arrow\"));\n\t\tselenium.waitForPartialText(\"//select[@id='_86_availableClassNameIds']\",\n\t\t\t\"Blogs Entry\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_86_availableClassNameIds']\", \"Blogs Entry\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_86_availableClassNameIds']\", \"Blogs Entry\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":53803,"modified_method":"public void testConfigurePortletAvailableBlogsEntry()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_anyAssetType']\");\n\t\tselenium.select(\"//select[@id='_86_anyAssetType']\",\n\t\t\tRuntimeVariables.replace(\"Select More Than One...\"));\n\t\tassertEquals(\"Select More Than One...\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_anyAssetType']\"));\n\t\tselenium.waitForVisible(\"//select[@id='_86_currentClassNameIds']\");\n\t\tselenium.addSelection(\"//select[@id='_86_currentClassNameIds']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//button[@title='Move selected items from Selected to Available.']\");\n\t\tselenium.clickAt(\"//button[@title='Move selected items from Selected to Available.']\",\n\t\t\tRuntimeVariables.replace(\"Right Arrow\"));\n\t\tselenium.waitForPartialText(\"//select[@id='_86_availableClassNameIds']\",\n\t\t\t\"Blogs Entry\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_86_availableClassNameIds']\", \"Blogs Entry\"));\n\t\tThread.sleep(1000);\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_86_availableClassNameIds']\", \"Blogs Entry\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"f9eeb9b66d4c17bcb8135ec46c822ad04dd528bd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletAvailableBookmarksEntry()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_anyAssetType']\");\n\t\tselenium.select(\"//select[@id='_86_anyAssetType']\",\n\t\t\tRuntimeVariables.replace(\"Select More Than One...\"));\n\t\tassertEquals(\"Select More Than One...\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_anyAssetType']\"));\n\t\tselenium.waitForVisible(\"//select[@id='_86_currentClassNameIds']\");\n\t\tselenium.addSelection(\"//select[@id='_86_currentClassNameIds']\",\n\t\t\tRuntimeVariables.replace(\"Bookmarks Entry\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"xPath=(//button[@title='Move selected items from Selected to Available.'])[2]\");\n\t\tselenium.clickAt(\"xPath=(//button[@title='Move selected items from Selected to Available.'])[2]\",\n\t\t\tRuntimeVariables.replace(\"Right Arrow\"));\n\t\tselenium.waitForText(\"//select[@id='_86_availableClassNameIds']\",\n\t\t\t\"Bookmarks Entry\");\n\t\tassertEquals(RuntimeVariables.replace(\"Bookmarks Entry\"),\n\t\t\tselenium.getText(\"//select[@id='_86_availableClassNameIds']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Bookmarks Entry\"),\n\t\t\tselenium.getText(\"//select[@id='_86_availableClassNameIds']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":53804,"modified_method":"public void testConfigurePortletAvailableBookmarksEntry()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_anyAssetType']\");\n\t\tselenium.select(\"//select[@id='_86_anyAssetType']\",\n\t\t\tRuntimeVariables.replace(\"Select More Than One...\"));\n\t\tassertEquals(\"Select More Than One...\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_anyAssetType']\"));\n\t\tselenium.waitForVisible(\"//select[@id='_86_currentClassNameIds']\");\n\t\tselenium.addSelection(\"//select[@id='_86_currentClassNameIds']\",\n\t\t\tRuntimeVariables.replace(\"Bookmarks Entry\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//button[@title='Move selected items from Selected to Available.']\");\n\t\tselenium.clickAt(\"//button[@title='Move selected items from Selected to Available.']\",\n\t\t\tRuntimeVariables.replace(\"Right Arrow\"));\n\t\tselenium.waitForText(\"//select[@id='_86_availableClassNameIds']\",\n\t\t\t\"Bookmarks Entry\");\n\t\tassertEquals(RuntimeVariables.replace(\"Bookmarks Entry\"),\n\t\t\tselenium.getText(\"//select[@id='_86_availableClassNameIds']\"));\n\t\tThread.sleep(1000);\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Bookmarks Entry\"),\n\t\t\tselenium.getText(\"//select[@id='_86_availableClassNameIds']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"f9eeb9b66d4c17bcb8135ec46c822ad04dd528bd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletAvailableDMDocument()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_anyAssetType']\");\n\t\tselenium.select(\"//select[@id='_86_anyAssetType']\",\n\t\t\tRuntimeVariables.replace(\"Select More Than One...\"));\n\t\tassertEquals(\"Select More Than One...\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_anyAssetType']\"));\n\t\tselenium.waitForVisible(\"//select[@id='_86_currentClassNameIds']\");\n\t\tselenium.addSelection(\"//select[@id='_86_currentClassNameIds']\",\n\t\t\tRuntimeVariables.replace(\"Documents and Media Document\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"xPath=(//button[@title='Move selected items from Selected to Available.'])[2]\");\n\t\tselenium.clickAt(\"xPath=(//button[@title='Move selected items from Selected to Available.'])[2]\",\n\t\t\tRuntimeVariables.replace(\"Right Arrow\"));\n\t\tselenium.waitForText(\"//select[@id='_86_availableClassNameIds']\",\n\t\t\t\"Documents and Media Document\");\n\t\tassertEquals(RuntimeVariables.replace(\"Documents and Media Document\"),\n\t\t\tselenium.getText(\"//select[@id='_86_availableClassNameIds']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Documents and Media Document\"),\n\t\t\tselenium.getText(\"//select[@id='_86_availableClassNameIds']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":53805,"modified_method":"public void testConfigurePortletAvailableDMDocument()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_anyAssetType']\");\n\t\tselenium.select(\"//select[@id='_86_anyAssetType']\",\n\t\t\tRuntimeVariables.replace(\"Select More Than One...\"));\n\t\tassertEquals(\"Select More Than One...\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_anyAssetType']\"));\n\t\tselenium.waitForVisible(\"//select[@id='_86_currentClassNameIds']\");\n\t\tselenium.addSelection(\"//select[@id='_86_currentClassNameIds']\",\n\t\t\tRuntimeVariables.replace(\"Document\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//button[@title='Move selected items from Selected to Available.']\");\n\t\tselenium.clickAt(\"//button[@title='Move selected items from Selected to Available.']\",\n\t\t\tRuntimeVariables.replace(\"Right Arrow\"));\n\t\tselenium.waitForText(\"//select[@id='_86_availableClassNameIds']\",\n\t\t\t\"Document\");\n\t\tassertEquals(RuntimeVariables.replace(\"Document\"),\n\t\t\tselenium.getText(\"//select[@id='_86_availableClassNameIds']\"));\n\t\tThread.sleep(1000);\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Document\"),\n\t\t\tselenium.getText(\"//select[@id='_86_availableClassNameIds']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"f9eeb9b66d4c17bcb8135ec46c822ad04dd528bd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletAvailableMBMessage()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.waitForVisible(\"//span[@title='Options']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_anyAssetType']\");\n\t\tselenium.select(\"//select[@id='_86_anyAssetType']\",\n\t\t\tRuntimeVariables.replace(\"Select More Than One...\"));\n\t\tassertEquals(\"Select More Than One...\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_anyAssetType']\"));\n\t\tselenium.waitForVisible(\"//select[@id='_86_currentClassNameIds']\");\n\t\tselenium.addSelection(\"//select[@id='_86_currentClassNameIds']\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Message\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"xPath=(//button[@title='Move selected items from Selected to Available.'])[2]\");\n\t\tselenium.clickAt(\"xPath=(//button[@title='Move selected items from Selected to Available.'])[2]\",\n\t\t\tRuntimeVariables.replace(\"Right Arrow\"));\n\t\tselenium.waitForText(\"//select[@id='_86_availableClassNameIds']\",\n\t\t\t\"Message Boards Message\");\n\t\tassertEquals(RuntimeVariables.replace(\"Message Boards Message\"),\n\t\t\tselenium.getText(\"//select[@id='_86_availableClassNameIds']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Message Boards Message\"),\n\t\t\tselenium.getText(\"//select[@id='_86_availableClassNameIds']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":53806,"modified_method":"public void testConfigurePortletAvailableMBMessage()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_anyAssetType']\");\n\t\tselenium.select(\"//select[@id='_86_anyAssetType']\",\n\t\t\tRuntimeVariables.replace(\"Select More Than One...\"));\n\t\tassertEquals(\"Select More Than One...\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_anyAssetType']\"));\n\t\tselenium.waitForVisible(\"//select[@id='_86_currentClassNameIds']\");\n\t\tselenium.addSelection(\"//select[@id='_86_currentClassNameIds']\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Message\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//button[@title='Move selected items from Selected to Available.']\");\n\t\tselenium.clickAt(\"//button[@title='Move selected items from Selected to Available.']\",\n\t\t\tRuntimeVariables.replace(\"Right Arrow\"));\n\t\tselenium.waitForText(\"//select[@id='_86_availableClassNameIds']\",\n\t\t\t\"Message Boards Message\");\n\t\tassertEquals(RuntimeVariables.replace(\"Message Boards Message\"),\n\t\t\tselenium.getText(\"//select[@id='_86_availableClassNameIds']\"));\n\t\tThread.sleep(1000);\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Message Boards Message\"),\n\t\t\tselenium.getText(\"//select[@id='_86_availableClassNameIds']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"f9eeb9b66d4c17bcb8135ec46c822ad04dd528bd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletAvailableWikiPage()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_anyAssetType']\");\n\t\tselenium.select(\"//select[@id='_86_anyAssetType']\",\n\t\t\tRuntimeVariables.replace(\"Select More Than One...\"));\n\t\tassertEquals(\"Select More Than One...\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_anyAssetType']\"));\n\t\tselenium.waitForVisible(\"//select[@id='_86_currentClassNameIds']\");\n\t\tselenium.addSelection(\"//select[@id='_86_currentClassNameIds']\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"xPath=(//button[@title='Move selected items from Selected to Available.'])[2]\");\n\t\tselenium.clickAt(\"xPath=(//button[@title='Move selected items from Selected to Available.'])[2]\",\n\t\t\tRuntimeVariables.replace(\"Right Arrow\"));\n\t\tselenium.waitForText(\"//select[@id='_86_availableClassNameIds']\",\n\t\t\t\"Wiki Page\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page\"),\n\t\t\tselenium.getText(\"//select[@id='_86_availableClassNameIds']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page\"),\n\t\t\tselenium.getText(\"//select[@id='_86_availableClassNameIds']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":53807,"modified_method":"public void testConfigurePortletAvailableWikiPage()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_anyAssetType']\");\n\t\tselenium.select(\"//select[@id='_86_anyAssetType']\",\n\t\t\tRuntimeVariables.replace(\"Select More Than One...\"));\n\t\tassertEquals(\"Select More Than One...\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_anyAssetType']\"));\n\t\tselenium.waitForVisible(\"//select[@id='_86_currentClassNameIds']\");\n\t\tselenium.addSelection(\"//select[@id='_86_currentClassNameIds']\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//button[@title='Move selected items from Selected to Available.']\");\n\t\tselenium.clickAt(\"//button[@title='Move selected items from Selected to Available.']\",\n\t\t\tRuntimeVariables.replace(\"Right Arrow\"));\n\t\tselenium.waitForText(\"//select[@id='_86_availableClassNameIds']\",\n\t\t\t\"Wiki Page\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page\"),\n\t\t\tselenium.getText(\"//select[@id='_86_availableClassNameIds']\"));\n\t\tThread.sleep(1000);\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Page\"),\n\t\t\tselenium.getText(\"//select[@id='_86_availableClassNameIds']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"f9eeb9b66d4c17bcb8135ec46c822ad04dd528bd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletCurrentBlogsEntry()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_anyAssetType']\");\n\t\tselenium.select(\"//select[@id='_86_anyAssetType']\",\n\t\t\tRuntimeVariables.replace(\"Select More Than One...\"));\n\t\tselenium.waitForVisible(\"//select[@id='_86_availableClassNameIds']\");\n\t\tselenium.addSelection(\"//select[@id='_86_availableClassNameIds']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//fieldset[2]/div/div/div/div/div/div/div[2]/div/span/span/button[2]\");\n\t\tselenium.clickAt(\"//fieldset[2]/div/div/div/div/div/div/div[2]/div/span/span/button[2]\",\n\t\t\tRuntimeVariables.replace(\"Left Arrow\"));\n\t\tselenium.waitForPartialText(\"//select[@id='_86_currentClassNameIds']\",\n\t\t\t\"Blogs Entry\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_86_currentClassNameIds']\", \"Blogs Entry\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_86_currentClassNameIds']\", \"Blogs Entry\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":53808,"modified_method":"public void testConfigurePortletCurrentBlogsEntry()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_anyAssetType']\");\n\t\tselenium.select(\"//select[@id='_86_anyAssetType']\",\n\t\t\tRuntimeVariables.replace(\"Select More Than One...\"));\n\t\tassertEquals(\"Select More Than One...\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_anyAssetType']\"));\n\t\tselenium.waitForVisible(\"//select[@id='_86_availableClassNameIds']\");\n\t\tselenium.addSelection(\"//select[@id='_86_availableClassNameIds']\",\n\t\t\tRuntimeVariables.replace(\"Blogs Entry\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//button[@title='Move selected items from Available to Selected.']\");\n\t\tselenium.clickAt(\"//button[@title='Move selected items from Available to Selected.']\",\n\t\t\tRuntimeVariables.replace(\"Left Arrow\"));\n\t\tselenium.waitForPartialText(\"//select[@id='_86_currentClassNameIds']\",\n\t\t\t\"Blogs Entry\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_86_currentClassNameIds']\", \"Blogs Entry\"));\n\t\tThread.sleep(1000);\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_86_currentClassNameIds']\", \"Blogs Entry\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"f9eeb9b66d4c17bcb8135ec46c822ad04dd528bd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletCurrentBookmarksEntry()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_anyAssetType']\");\n\t\tselenium.select(\"//select[@id='_86_anyAssetType']\",\n\t\t\tRuntimeVariables.replace(\"Select More Than One...\"));\n\t\tassertEquals(\"Select More Than One...\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_anyAssetType']\"));\n\t\tselenium.waitForVisible(\"//select[@id='_86_availableClassNameIds']\");\n\t\tselenium.addSelection(\"//select[@id='_86_availableClassNameIds']\",\n\t\t\tRuntimeVariables.replace(\"Bookmarks Entry\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//fieldset[2]/div/div/div/div/div/div/div[2]/div/span/span/button[2]\");\n\t\tselenium.clickAt(\"//fieldset[2]/div/div/div/div/div/div/div[2]/div/span/span/button[2]\",\n\t\t\tRuntimeVariables.replace(\"Left Arrow\"));\n\t\tselenium.waitForPartialText(\"//select[@id='_86_currentClassNameIds']\",\n\t\t\t\"Bookmarks Entry\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_86_currentClassNameIds']\", \"Bookmarks Entry\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_86_currentClassNameIds']\", \"Bookmarks Entry\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":53809,"modified_method":"public void testConfigurePortletCurrentBookmarksEntry()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_anyAssetType']\");\n\t\tselenium.select(\"//select[@id='_86_anyAssetType']\",\n\t\t\tRuntimeVariables.replace(\"Select More Than One...\"));\n\t\tassertEquals(\"Select More Than One...\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_anyAssetType']\"));\n\t\tselenium.waitForVisible(\"//select[@id='_86_availableClassNameIds']\");\n\t\tselenium.addSelection(\"//select[@id='_86_availableClassNameIds']\",\n\t\t\tRuntimeVariables.replace(\"Bookmarks Entry\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//button[@title='Move selected items from Available to Selected.']\");\n\t\tselenium.clickAt(\"//button[@title='Move selected items from Available to Selected.']\",\n\t\t\tRuntimeVariables.replace(\"Left Arrow\"));\n\t\tselenium.waitForPartialText(\"//select[@id='_86_currentClassNameIds']\",\n\t\t\t\"Bookmarks Entry\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_86_currentClassNameIds']\", \"Bookmarks Entry\"));\n\t\tThread.sleep(1000);\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_86_currentClassNameIds']\", \"Bookmarks Entry\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"f9eeb9b66d4c17bcb8135ec46c822ad04dd528bd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletCurrentDMDocument()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_anyAssetType']\");\n\t\tselenium.select(\"//select[@id='_86_anyAssetType']\",\n\t\t\tRuntimeVariables.replace(\"Select More Than One...\"));\n\t\tassertEquals(\"Select More Than One...\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_anyAssetType']\"));\n\t\tselenium.waitForVisible(\"//select[@id='_86_availableClassNameIds']\");\n\t\tselenium.addSelection(\"//select[@id='_86_availableClassNameIds']\",\n\t\t\tRuntimeVariables.replace(\"Documents and Media Document\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"xPath=(//button[@title='Move selected items from Available to Selected.'])[2]\");\n\t\tselenium.clickAt(\"xPath=(//button[@title='Move selected items from Available to Selected.'])[2]\",\n\t\t\tRuntimeVariables.replace(\"Left Arrow\"));\n\t\tselenium.waitForPartialText(\"//select[@id='_86_currentClassNameIds']\",\n\t\t\t\"Documents and Media Document\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_86_currentClassNameIds']\",\n\t\t\t\t\"Documents and Media Document\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_86_currentClassNameIds']\",\n\t\t\t\t\"Documents and Media Document\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":53810,"modified_method":"public void testConfigurePortletCurrentDMDocument()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_anyAssetType']\");\n\t\tselenium.select(\"//select[@id='_86_anyAssetType']\",\n\t\t\tRuntimeVariables.replace(\"Select More Than One...\"));\n\t\tassertEquals(\"Select More Than One...\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_anyAssetType']\"));\n\t\tselenium.waitForVisible(\"//select[@id='_86_availableClassNameIds']\");\n\t\tselenium.addSelection(\"//select[@id='_86_availableClassNameIds']\",\n\t\t\tRuntimeVariables.replace(\"Document\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//button[@title='Move selected items from Available to Selected.']\");\n\t\tselenium.clickAt(\"//button[@title='Move selected items from Available to Selected.']\",\n\t\t\tRuntimeVariables.replace(\"Left Arrow\"));\n\t\tselenium.waitForPartialText(\"//select[@id='_86_currentClassNameIds']\",\n\t\t\t\"Document\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_86_currentClassNameIds']\", \"Document\"));\n\t\tThread.sleep(1000);\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_86_currentClassNameIds']\", \"Document\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"f9eeb9b66d4c17bcb8135ec46c822ad04dd528bd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletCurrentMBMessage()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.waitForVisible(\"//span[@title='Options']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_anyAssetType']\");\n\t\tselenium.select(\"//select[@id='_86_anyAssetType']\",\n\t\t\tRuntimeVariables.replace(\"Select More Than One...\"));\n\t\tassertEquals(\"Select More Than One...\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_anyAssetType']\"));\n\t\tselenium.waitForVisible(\"//select[@id='_86_availableClassNameIds']\");\n\t\tselenium.addSelection(\"//select[@id='_86_availableClassNameIds']\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Message\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"xPath=(//button[@title='Move selected items from Available to Selected.'])[2]\");\n\t\tselenium.clickAt(\"xPath=(//button[@title='Move selected items from Available to Selected.'])[2]\",\n\t\t\tRuntimeVariables.replace(\"Left Arrow\"));\n\t\tselenium.waitForPartialText(\"//select[@id='_86_currentClassNameIds']\",\n\t\t\t\"Message Boards Message\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_86_currentClassNameIds']\",\n\t\t\t\t\"Message Boards Message\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_86_currentClassNameIds']\",\n\t\t\t\t\"Message Boards Message\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":53811,"modified_method":"public void testConfigurePortletCurrentMBMessage()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_anyAssetType']\");\n\t\tselenium.select(\"//select[@id='_86_anyAssetType']\",\n\t\t\tRuntimeVariables.replace(\"Select More Than One...\"));\n\t\tassertEquals(\"Select More Than One...\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_anyAssetType']\"));\n\t\tselenium.waitForVisible(\"//select[@id='_86_availableClassNameIds']\");\n\t\tselenium.addSelection(\"//select[@id='_86_availableClassNameIds']\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Message\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//button[@title='Move selected items from Available to Selected.']\");\n\t\tselenium.clickAt(\"//button[@title='Move selected items from Available to Selected.']\",\n\t\t\tRuntimeVariables.replace(\"Left Arrow\"));\n\t\tselenium.waitForPartialText(\"//select[@id='_86_currentClassNameIds']\",\n\t\t\t\"Message Boards Message\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_86_currentClassNameIds']\",\n\t\t\t\t\"Message Boards Message\"));\n\t\tThread.sleep(1000);\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_86_currentClassNameIds']\",\n\t\t\t\t\"Message Boards Message\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"f9eeb9b66d4c17bcb8135ec46c822ad04dd528bd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletCurrentWikiPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_anyAssetType']\");\n\t\tselenium.select(\"//select[@id='_86_anyAssetType']\",\n\t\t\tRuntimeVariables.replace(\"Select More Than One...\"));\n\t\tassertEquals(\"Select More Than One...\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_anyAssetType']\"));\n\t\tselenium.waitForVisible(\"//select[@id='_86_availableClassNameIds']\");\n\t\tselenium.addSelection(\"//select[@id='_86_availableClassNameIds']\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"xPath=(//button[@title='Move selected items from Available to Selected.'])[2]\");\n\t\tselenium.clickAt(\"xPath=(//button[@title='Move selected items from Available to Selected.'])[2]\",\n\t\t\tRuntimeVariables.replace(\"Left Arrow\"));\n\t\tselenium.waitForPartialText(\"//select[@id='_86_currentClassNameIds']\",\n\t\t\t\"Wiki Page\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_86_currentClassNameIds']\", \"Wiki Page\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_86_currentClassNameIds']\", \"Wiki Page\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":53812,"modified_method":"public void testConfigurePortletCurrentWikiPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_anyAssetType']\");\n\t\tselenium.select(\"//select[@id='_86_anyAssetType']\",\n\t\t\tRuntimeVariables.replace(\"Select More Than One...\"));\n\t\tassertEquals(\"Select More Than One...\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_anyAssetType']\"));\n\t\tselenium.waitForVisible(\"//select[@id='_86_availableClassNameIds']\");\n\t\tselenium.addSelection(\"//select[@id='_86_availableClassNameIds']\",\n\t\t\tRuntimeVariables.replace(\"Wiki Page\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//button[@title='Move selected items from Available to Selected.']\");\n\t\tselenium.clickAt(\"//button[@title='Move selected items from Available to Selected.']\",\n\t\t\tRuntimeVariables.replace(\"Left Arrow\"));\n\t\tselenium.waitForPartialText(\"//select[@id='_86_currentClassNameIds']\",\n\t\t\t\"Wiki Page\");\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_86_currentClassNameIds']\", \"Wiki Page\"));\n\t\tThread.sleep(1000);\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//select[@id='_86_currentClassNameIds']\", \"Wiki Page\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"f9eeb9b66d4c17bcb8135ec46c822ad04dd528bd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletMaximumItemsToDisplay2()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.waitForVisible(\"//span[@title='Options']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_delta']\");\n\t\tselenium.select(\"//select[@id='_86_delta']\",\n\t\t\tRuntimeVariables.replace(\"2\"));\n\t\tassertEquals(\"2\", selenium.getSelectedLabel(\"//select[@id='_86_delta']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"2\", selenium.getSelectedLabel(\"//select[@id='_86_delta']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":53813,"modified_method":"public void testConfigurePortletMaximumItemsToDisplay2()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.waitForVisible(\"link=Display Settings\");\n\t\tselenium.clickAt(\"link=Display Settings\",\n\t\t\tRuntimeVariables.replace(\"Display Settings\"));\n\t\tselenium.waitForVisible(\"//select[@id='_86_delta']\");\n\t\tselenium.select(\"//select[@id='_86_delta']\",\n\t\t\tRuntimeVariables.replace(\"2\"));\n\t\tassertEquals(\"2\", selenium.getSelectedLabel(\"//select[@id='_86_delta']\"));\n\t\tThread.sleep(1000);\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"2\", selenium.getSelectedLabel(\"//select[@id='_86_delta']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"f9eeb9b66d4c17bcb8135ec46c822ad04dd528bd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletMaximumItemsToDisplay5()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.waitForVisible(\"//span[@title='Options']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_delta']\");\n\t\tselenium.select(\"//select[@id='_86_delta']\",\n\t\t\tRuntimeVariables.replace(\"5\"));\n\t\tassertEquals(\"5\", selenium.getSelectedLabel(\"//select[@id='_86_delta']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"5\", selenium.getSelectedLabel(\"//select[@id='_86_delta']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":53814,"modified_method":"public void testConfigurePortletMaximumItemsToDisplay5()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.waitForVisible(\"link=Display Settings\");\n\t\tselenium.clickAt(\"link=Display Settings\",\n\t\t\tRuntimeVariables.replace(\"Display Settings\"));\n\t\tselenium.waitForVisible(\"//select[@id='_86_delta']\");\n\t\tselenium.select(\"//select[@id='_86_delta']\",\n\t\t\tRuntimeVariables.replace(\"5\"));\n\t\tassertEquals(\"5\", selenium.getSelectedLabel(\"//select[@id='_86_delta']\"));\n\t\tThread.sleep(1000);\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"5\", selenium.getSelectedLabel(\"//select[@id='_86_delta']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"f9eeb9b66d4c17bcb8135ec46c822ad04dd528bd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletPaginationTypeRegular()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.waitForVisible(\"//span[@title='Options']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_paginationType']\");\n\t\tselenium.select(\"//select[@id='_86_paginationType']\",\n\t\t\tRuntimeVariables.replace(\"Regular\"));\n\t\tassertEquals(\"Regular\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_paginationType']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Regular\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_paginationType']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":53815,"modified_method":"public void testConfigurePortletPaginationTypeRegular()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.waitForVisible(\"link=Display Settings\");\n\t\tselenium.clickAt(\"link=Display Settings\",\n\t\t\tRuntimeVariables.replace(\"Display Settings\"));\n\t\tselenium.waitForVisible(\"//select[@id='_86_paginationType']\");\n\t\tselenium.select(\"//select[@id='_86_paginationType']\",\n\t\t\tRuntimeVariables.replace(\"Regular\"));\n\t\tassertEquals(\"Regular\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_paginationType']\"));\n\t\tThread.sleep(1000);\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Regular\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_paginationType']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"f9eeb9b66d4c17bcb8135ec46c822ad04dd528bd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletPaginationTypeSimple()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.waitForVisible(\"//span[@title='Options']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_paginationType']\");\n\t\tselenium.select(\"//select[@id='_86_paginationType']\",\n\t\t\tRuntimeVariables.replace(\"Simple\"));\n\t\tassertEquals(\"Simple\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_paginationType']\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Simple\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_paginationType']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":53816,"modified_method":"public void testConfigurePortletPaginationTypeSimple()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.waitForVisible(\"link=Display Settings\");\n\t\tselenium.clickAt(\"link=Display Settings\",\n\t\t\tRuntimeVariables.replace(\"Display Settings\"));\n\t\tselenium.waitForVisible(\"//select[@id='_86_paginationType']\");\n\t\tselenium.select(\"//select[@id='_86_paginationType']\",\n\t\t\tRuntimeVariables.replace(\"Simple\"));\n\t\tassertEquals(\"Simple\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_paginationType']\"));\n\t\tThread.sleep(1000);\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Simple\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_paginationType']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"f9eeb9b66d4c17bcb8135ec46c822ad04dd528bd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteAPArchivedSetupActions() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Asset Publisher Test Page\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.waitForVisible(\"//span[@title='Options']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForVisible(\"//div[@class='archived-setups']/span/a/span\");\n\t\tassertEquals(RuntimeVariables.replace(\"Archive/Restore Setup\"),\n\t\t\tselenium.getText(\"//div[@class='archived-setups']/span/a/span\"));\n\t\tselenium.clickAt(\"//div[@class='archived-setups']/span/a/span\",\n\t\t\tRuntimeVariables.replace(\"Archive/Restore Setup\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'liferay/navigation_interaction.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Archive Name\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"There are no archived setups.\"),\n\t\t\tselenium.getText(\"//form/div[@class='portlet-msg-info']\"));\n\t\tassertNotEquals(RuntimeVariables.replace(\"Archive Name\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":53817,"modified_method":"public void testDeleteAPArchivedSetupActions() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Asset Publisher Test Page\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.waitForVisible(\"//div[@class='archived-setups']/span/a/span\");\n\t\tassertEquals(RuntimeVariables.replace(\"Archive/Restore Setup\"),\n\t\t\tselenium.getText(\"//div[@class='archived-setups']/span/a/span\"));\n\t\tselenium.clickAt(\"//div[@class='archived-setups']/span/a/span\",\n\t\t\tRuntimeVariables.replace(\"Archive/Restore Setup\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'liferay/navigation_interaction.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Archive Name\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"There are no archived setups.\"),\n\t\t\tselenium.getText(\"//form/div[@class='portlet-msg-info']\"));\n\t\tassertNotEquals(RuntimeVariables.replace(\"Archive Name\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"f9eeb9b66d4c17bcb8135ec46c822ad04dd528bd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testImportLARAP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.waitForVisible(\"//span[@title='Options']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Export / Import\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[3]/a\",\n\t\t\tRuntimeVariables.replace(\"Export / Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Import\"),\n\t\t\tselenium.getText(\"link=Import\"));\n\t\tselenium.clickAt(\"link=Import\", RuntimeVariables.replace(\"Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.uploadFile(\"//input[@id='_86_importFileName']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\asset\\\\assetpublisher\\\\dependencies\\\\Asset_Publisher-Selenium.portlet.lar\"));\n\t\tselenium.clickAt(\"//input[@value='Import']\",\n\t\t\tRuntimeVariables.replace(\"Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","id":53818,"modified_method":"public void testImportLARAP() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Export / Import')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Export / Import\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Export / Import')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Export / Import')]\",\n\t\t\tRuntimeVariables.replace(\"Export / Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Import\"),\n\t\t\tselenium.getText(\"link=Import\"));\n\t\tselenium.clickAt(\"link=Import\", RuntimeVariables.replace(\"Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.uploadFile(\"//input[@id='_86_importFileName']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\functional\\\\com\\\\liferay\\\\portalweb\\\\asset\\\\assetpublisher\\\\dependencies\\\\Asset_Publisher-Selenium.portlet.lar\"));\n\t\tselenium.clickAt(\"//input[@value='Import']\",\n\t\t\tRuntimeVariables.replace(\"Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","commit_id":"f9eeb9b66d4c17bcb8135ec46c822ad04dd528bd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testRestoreAPArchivedSetupActions() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.waitForVisible(\"//span[@title='Options']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForVisible(\"//div[@class='archived-setups']/span/a/span\");\n\t\tassertEquals(RuntimeVariables.replace(\"Archive/Restore Setup\"),\n\t\t\tselenium.getText(\"//div[@class='archived-setups']/span/a/span\"));\n\t\tselenium.clickAt(\"//div[@class='archived-setups']/span/a/span\",\n\t\t\tRuntimeVariables.replace(\"Archive/Restore Setup\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'liferay/navigation_interaction.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Archive Name\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Restore\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Asset Publisher Test Page\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.waitForVisible(\"//span[@title='Options']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_selectionStyle']\");\n\t\tassertEquals(\"Manual\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_selectionStyle']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Selection\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='lfr-panel-title'])[1]/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Display Settings\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='lfr-panel-title'])[2]/span\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":53819,"modified_method":"public void testRestoreAPArchivedSetupActions() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.waitForVisible(\"//div[@class='archived-setups']/span/a/span\");\n\t\tassertEquals(RuntimeVariables.replace(\"Archive/Restore Setup\"),\n\t\t\tselenium.getText(\"//div[@class='archived-setups']/span/a/span\"));\n\t\tselenium.clickAt(\"//div[@class='archived-setups']/span/a/span\",\n\t\t\tRuntimeVariables.replace(\"Archive/Restore Setup\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'liferay/navigation_interaction.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Archive Name\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Restore\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='_86_selectionStyleManual']\");\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_86_selectionStyleManual']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"f9eeb9b66d4c17bcb8135ec46c822ad04dd528bd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSaveAPArchivedSetup() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.waitForVisible(\"//span[@title='Options']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.click(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForVisible(\"//div[@class='archived-setups']/span/a/span\");\n\t\tassertEquals(RuntimeVariables.replace(\"Archive/Restore Setup\"),\n\t\t\tselenium.getText(\"//div[@class='archived-setups']/span/a/span\"));\n\t\tselenium.clickAt(\"//div[@class='archived-setups']/span/a/span\",\n\t\t\tRuntimeVariables.replace(\"Archive/Restore Setup\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_86_name']\",\n\t\t\tRuntimeVariables.replace(\"Archive Name\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Archive Name\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":53820,"modified_method":"public void testSaveAPArchivedSetup() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.waitForVisible(\"//div[@class='archived-setups']/span/a/span\");\n\t\tassertEquals(RuntimeVariables.replace(\"Archive/Restore Setup\"),\n\t\t\tselenium.getText(\"//div[@class='archived-setups']/span/a/span\"));\n\t\tselenium.clickAt(\"//div[@class='archived-setups']/span/a/span\",\n\t\t\tRuntimeVariables.replace(\"Archive/Restore Setup\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_86_name']\",\n\t\t\tRuntimeVariables.replace(\"Archive Name\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Archive Name\"),\n\t\t\tselenium.getText(\"//tr[3]/td[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"f9eeb9b66d4c17bcb8135ec46c822ad04dd528bd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownAPArchivedSetup() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//span[@title='Options']/ul/li/strong/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.click(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\t\t\tselenium.selectFrame(\n\t\t\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='archived-setups']/span/a/span\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Archive/Restore Setup\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='archived-setups']/span/a/span\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='archived-setups']/span/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Archive/Restore Setup\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean archive1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong\");\n\n\t\t\t\tif (!archive1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\t\tboolean archive2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong\");\n\n\t\t\t\tif (!archive2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\t\tboolean archive3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong\");\n\n\t\t\t\tif (!archive3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\t\tboolean archive4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong\");\n\n\t\t\t\tif (!archive4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\t\tboolean archive5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong\");\n\n\t\t\t\tif (!archive5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(5000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":53821,"modified_method":"public void testTearDownAPArchivedSetup() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tThread.sleep(1000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\t\t\tselenium.selectFrame(\n\t\t\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='archived-setups']/span/a/span\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Archive/Restore Setup\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='archived-setups']/span/a/span\"));\n\t\t\t\tselenium.clickAt(\"//div[@class='archived-setups']/span/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Archive/Restore Setup\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean archive1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong\");\n\n\t\t\t\tif (!archive1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(1000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\t\tboolean archive2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong\");\n\n\t\t\t\tif (!archive2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(1000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\t\tboolean archive3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong\");\n\n\t\t\t\tif (!archive3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(1000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\t\tboolean archive4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong\");\n\n\t\t\t\tif (!archive4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(1000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\t\tboolean archive5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong\");\n\n\t\t\t\tif (!archive5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tThread.sleep(1000);\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\tcase 2:\n\t\t\tcase 3:\n\t\t\tcase 4:\n\t\t\tcase 5:\n\t\t\tcase 6:\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"f9eeb9b66d4c17bcb8135ec46c822ad04dd528bd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewImportLAR() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.waitForVisible(\"//span[@title='Options']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_selectionStyle']\");\n\t\tassertEquals(\"Dynamic\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_selectionStyle']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='lfr-panel-title'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Filter\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='lfr-panel-title'])[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Custom User Attributes\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='lfr-panel-title'])[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Ordering and Grouping\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='lfr-panel-title'])[4]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Display Settings\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='lfr-panel-title'])[5]\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":53822,"modified_method":"public void testViewImportLAR() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='_86_selectionStyleDynamic']\");\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_selectionStyleDynamic']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='lfr-panel-title'])[1]/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Filter\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='lfr-panel-title'])[2]/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Custom User Attributes\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='lfr-panel-title'])[3]/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Ordering and Grouping\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='lfr-panel-title'])[4]/span\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"f9eeb9b66d4c17bcb8135ec46c822ad04dd528bd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewPortletAPDisplayPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Asset Publisher\"),\n\t\t\tselenium.getText(\"//h1[@class='portlet-title']/span[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tassertTrue(selenium.isVisible(\"//img[@title='Minimize']\"));\n\t\tassertTrue(selenium.isVisible(\"//img[@title='Maximize']\"));\n\t\tassertTrue(selenium.isVisible(\"//img[@title='Remove']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//span[@title='Add New']/ul/li/strong/a/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Add New\"),\n\t\t\tselenium.getText(\"//span[@title='Add New']/ul/li/strong/a/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"There are no results.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//input[@id='_86_showOnlyLayoutAssetsCheckbox']\");\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_showOnlyLayoutAssetsCheckbox']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":53823,"modified_method":"public void testViewPortletAPDisplayPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Asset Publisher\"),\n\t\t\tselenium.getText(\"//h1[@class='portlet-title']/span[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tassertTrue(selenium.isVisible(\"//img[@title='Minimize']\"));\n\t\tassertTrue(selenium.isVisible(\"//img[@title='Maximize']\"));\n\t\tassertTrue(selenium.isVisible(\"//img[@title='Remove']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//span[@title='Add New']/ul/li/strong/a/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Add New\"),\n\t\t\tselenium.getText(\"//span[@title='Add New']/ul/li/strong/a/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"There are no results.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//input[@id='_86_showOnlyLayoutAssetsCheckbox']\");\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_showOnlyLayoutAssetsCheckbox']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"f9eeb9b66d4c17bcb8135ec46c822ad04dd528bd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewPortletAPDisplayTemplateRichSummary()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//ul[contains(.,'Display Settings')]/li[2]/span/a\");\n\t\tselenium.clickAt(\"//ul[contains(.,'Display Settings')]/li[2]/span/a\",\n\t\t\tRuntimeVariables.replace(\"Display Settings\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='display-template']/span/span/span/select\t\");\n\t\tassertEquals(\"Rich Summary\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//div[@class='display-template']/span/span/span/select\t\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":53824,"modified_method":"public void testViewPortletAPDisplayTemplateRichSummary()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//ul[contains(.,'Display Settings')]/li[2]/span/a\");\n\t\tselenium.clickAt(\"//ul[contains(.,'Display Settings')]/li[2]/span/a\",\n\t\t\tRuntimeVariables.replace(\"Display Settings\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='display-template']/span/span/span/select\t\");\n\t\tassertEquals(\"Rich Summary\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//div[@class='display-template']/span/span/span/select\t\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"f9eeb9b66d4c17bcb8135ec46c822ad04dd528bd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewPortletAPEnableRatings() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.waitForVisible(\"//span[@title='Options']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='_86_enableRatingsCheckbox']\");\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_enableRatingsCheckbox']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":53825,"modified_method":"public void testViewPortletAPEnableRatings() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.waitForVisible(\"link=Display Settings\");\n\t\tselenium.clickAt(\"link=Display Settings\",\n\t\t\tRuntimeVariables.replace(\"Display Settings\"));\n\t\tselenium.waitForVisible(\"//input[@id='_86_enableRatingsCheckbox']\");\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_enableRatingsCheckbox']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"f9eeb9b66d4c17bcb8135ec46c822ad04dd528bd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewPortletAPOrderByColumnRatings()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Ordering and Grouping\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@id='assetPublisherOrderingAndGroupingPanel']/div/div/span\"));\n\t\tselenium.waitForVisible(\"//select[contains(@id,'orderByColumn')]\");\n\t\tassertEquals(\"Ratings\",\n\t\t\tselenium.getSelectedLabel(\"//select[contains(@id,'orderByColumn')]\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":53826,"modified_method":"public void testViewPortletAPOrderByColumnRatings()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Ordering and Grouping\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@id='assetPublisherOrderingAndGroupingPanel']/div/div/span\"));\n\t\tselenium.waitForVisible(\"//select[contains(@id,'orderByColumn')]\");\n\t\tassertEquals(\"Ratings\",\n\t\t\tselenium.getSelectedLabel(\"//select[contains(@id,'orderByColumn')]\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"f9eeb9b66d4c17bcb8135ec46c822ad04dd528bd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewPortletAPScopeBlogsPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tselenium.waitForVisible(\"//span[@title='Options']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tassertEquals(\"Blogs Test Page\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_defaultScope']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":53827,"modified_method":"public void testViewPortletAPScopeBlogsPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Blogs Test Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'Blogs Test Page')]/td[1]/span/span\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"f9eeb9b66d4c17bcb8135ec46c822ad04dd528bd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewPortletAPSetAsDefault() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Asset Publisher\"),\n\t\t\tselenium.getText(\"//h1[@class='portlet-title']/span[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tassertTrue(selenium.isVisible(\"//img[@title='Minimize']\"));\n\t\tassertTrue(selenium.isVisible(\"//img[@title='Maximize']\"));\n\t\tassertTrue(selenium.isVisible(\"//img[@title='Remove']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//span[@title='Add New']/ul/li/strong/a/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Add New\"),\n\t\t\tselenium.getText(\"//span[@title='Add New']/ul/li/strong/a/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"There are no results.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//input[@id='_86_defaultAssetPublisherCheckbox']\");\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_defaultAssetPublisherCheckbox']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":53828,"modified_method":"public void testViewPortletAPSetAsDefault() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Asset Publisher Test Page\",\n\t\t\tRuntimeVariables.replace(\"Asset Publisher Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Asset Publisher\"),\n\t\t\tselenium.getText(\"//h1[@class='portlet-title']/span[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tassertTrue(selenium.isVisible(\"//img[@title='Minimize']\"));\n\t\tassertTrue(selenium.isVisible(\"//img[@title='Maximize']\"));\n\t\tassertTrue(selenium.isVisible(\"//img[@title='Remove']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//span[@title='Add New']/ul/li/strong/a/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Add New\"),\n\t\t\tselenium.getText(\"//span[@title='Add New']/ul/li/strong/a/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"There are no results.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.waitForVisible(\"link=Display Settings\");\n\t\tselenium.clickAt(\"link=Display Settings\",\n\t\t\tRuntimeVariables.replace(\"Display Settings\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//input[@id='_86_defaultAssetPublisherCheckbox']\");\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[@id='_86_defaultAssetPublisherCheckbox']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"f9eeb9b66d4c17bcb8135ec46c822ad04dd528bd","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testLogin() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.setDefaultTimeout();\n\t\tselenium.setDefaultTimeoutImplicit();\n\t\tselenium.open(\"/web/guest/home\");\n\t\tselenium.waitForVisible(\"link=Sign In\");\n\t\tselenium.clickAt(\"link=Sign In\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"_58_login\");\n\t\tselenium.type(\"_58_login\", RuntimeVariables.replace(\"test@liferay.com\"));\n\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.waitForVisible(\"_58_rememberMeCheckbox\");\n\t\tselenium.click(\"_58_rememberMeCheckbox\");\n\t\tselenium.waitForVisible(\"//input[@value='Sign In']\");\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//input[@value='I Agree']\");\n\t\tselenium.click(\"//input[@value='I Agree']\");\n\t\tselenium.waitForVisible(\"reminderQueryAnswer\");\n\t\tselenium.type(\"reminderQueryAnswer\", RuntimeVariables.replace(\"Test\"));\n\t\tselenium.waitForVisible(\"//input[@value='Save']\");\n\t\tselenium.clickAt(\"//input[@value='Save']\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tBrowserCommands.setBrowserOption();\n\t}","id":53829,"modified_method":"public void testLogin() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.setDefaultTimeout();\n\t\t\t\tselenium.setDefaultTimeoutImplicit();\n\t\t\t\tselenium.open(\"/web/guest/home\");\n\t\t\t\tselenium.waitForVisible(\"//input[@id='_58_login']\");\n\t\t\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test@liferay.com\"));\n\t\t\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test\"));\n\t\t\t\tselenium.waitForVisible(\"//input[@id='_58_rememberMeCheckbox']\");\n\t\t\t\tselenium.click(\"//input[@id='_58_rememberMeCheckbox']\");\n\t\t\t\tselenium.waitForVisible(\"//button[contains(.,'Sign In')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Sign In\"),\n\t\t\t\t\tselenium.getText(\"//button[contains(.,'Sign In')]\"));\n\t\t\t\tselenium.clickAt(\"//button[contains(.,'Sign In')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean iAgreePresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//button[contains(.,'I Agree')]\");\n\n\t\t\t\tif (!iAgreePresent) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"I Agree\"),\n\t\t\t\t\tselenium.getText(\"//button[contains(.,'I Agree')]\"));\n\t\t\t\tselenium.clickAt(\"//button[contains(.,'I Agree')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"I Agree\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean reminderQuestionPresent = selenium.isElementPresent(\n\t\t\t\t\t\t\"//input[@id='reminderQueryAnswer']\");\n\n\t\t\t\tif (!reminderQuestionPresent) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.type(\"//input[@id='reminderQueryAnswer']\",\n\t\t\t\t\tRuntimeVariables.replace(\"test\"));\n\t\t\t\tselenium.waitForVisible(\"//button[contains(.,'Save')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Save\"),\n\t\t\t\t\tselenium.getText(\"//button[contains(.,'Save')]\"));\n\t\t\t\tselenium.clickAt(\"//button[contains(.,'Save')]\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\tcase 3:\n\t\t\t\tBrowserCommands.setBrowserOption();\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"d1a0a3b4d4e7c491b58358ef14a8adddb608f8d1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testLogout() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForElementPresent(\"link=Sign Out\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Sign Out\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\"_58_login\");\n\t}","id":53830,"modified_method":"public void testLogout() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home\");\n\t\tselenium.waitForVisible(\"//span[@class='user-full-name']\");\n\t\tselenium.clickAt(\"//span[@class='user-full-name']\",\n\t\t\tRuntimeVariables.replace(\"User Full Name\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//ul[@class='dropdown-menu']/li[@class='sign-out']/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Sign Out\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='dropdown-menu']/li[@class='sign-out']/a\"));\n\t\tselenium.clickAt(\"//ul[@class='dropdown-menu']/li[@class='sign-out']/a\",\n\t\t\tRuntimeVariables.replace(\"Sign Out\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//input[@id='_58_login']\");\n\t}","commit_id":"d1a0a3b4d4e7c491b58358ef14a8adddb608f8d1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWCWebContent1() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//span[@title='Add']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Add']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Basic Web Content\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_15_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent1 Title\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_15__15_structure_el_TextAreaField_content' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/textarea\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent1 Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_15__15_structure_el_TextAreaField_content' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.selectFrame(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"WC WebContent1 Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//a[contains(@title,'WC WebContent1 Title')]/div/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent1 Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//a[@class='entry-link']/span[contains(.,'WC WebContent1 Title')]\"));\n\t}","id":53831,"modified_method":"public void testAddWCWebContent1() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//span[@title='Add']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Add']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Basic Web Content\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.type(\"//input[@id='_15_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent1 Title\"));\n\t\tselenium.waitForText(\"//span[@class='cke_toolbar']/span[2]/a/span\",\n\t\t\t\"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent1 Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_off']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"WC WebContent1 Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//a[contains(@title,'WC WebContent1 Title')]/div/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent1 Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//a[@class='entry-link']/span[contains(.,'WC WebContent1 Title')]\"));\n\t}","commit_id":"ae8fdd196b1a919e33b0dcb48d09a173e9fee513","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWCWebContent2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//span[@title='Add']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Add']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Basic Web Content\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_15_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent2 Title\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_15__15_structure_el_TextAreaField_content' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/textarea\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent2 Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_15__15_structure_el_TextAreaField_content' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.selectFrame(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"WC WebContent2 Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//a[contains(@title,'WC WebContent2 Title')]/div/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent2 Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//a[@class='entry-link']/span[contains(.,'WC WebContent2 Title')]\"));\n\t}","id":53832,"modified_method":"public void testAddWCWebContent2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//span[@title='Add']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Add']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Basic Web Content\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.type(\"//input[@id='_15_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent2 Title\"));\n\t\tselenium.waitForText(\"//span[@class='cke_toolbar']/span[2]/a/span\",\n\t\t\t\"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent2 Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_off']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"WC WebContent2 Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//a[contains(@title,'WC WebContent2 Title')]/div/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent2 Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//a[@class='entry-link']/span[contains(.,'WC WebContent2 Title')]\"));\n\t}","commit_id":"ae8fdd196b1a919e33b0dcb48d09a173e9fee513","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWCWebContent3() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//span[@title='Add']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Add']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Basic Web Content\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_15_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent3 Title\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_15__15_structure_el_TextAreaField_content' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/textarea\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent3 Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_15__15_structure_el_TextAreaField_content' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.selectFrame(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"WC WebContent3 Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isVisible(\"//div[@class='entry-thumbnail']/img\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//a[contains(@title,'WC WebContent3 Title')]/div/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent3 Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//a[@class='entry-link']/span[contains(.,'WC WebContent3 Title')]\"));\n\t}","id":53833,"modified_method":"public void testAddWCWebContent3() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//span[@title='Add']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Add']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Basic Web Content\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.type(\"//input[@id='_15_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent3 Title\"));\n\t\tselenium.waitForText(\"//span[@class='cke_toolbar']/span[2]/a/span\",\n\t\t\t\"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent3 Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_off']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"WC WebContent3 Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//a[contains(@title,'WC WebContent3 Title')]/div/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent3 Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//a[@class='entry-link']/span[contains(.,'WC WebContent3 Title')]\"));\n\t}","commit_id":"ae8fdd196b1a919e33b0dcb48d09a173e9fee513","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWCWebContentExpirationDate() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add']\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_15_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Title\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_15__15_structure_el_TextAreaField_content' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/textarea\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_15__15_structure_el_TextAreaField_content' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.selectFrame(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"WC WebContent Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tassertEquals(RuntimeVariables.replace(\"Schedule (Modified)\"),\n\t\t\tselenium.getText(\"//a[@id='_15_scheduleLink']\"));\n\t\tselenium.clickAt(\"//a[@id='_15_scheduleLink']\",\n\t\t\tRuntimeVariables.replace(\"Schedule (Modified)\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//select[@id='_15_expirationDateMonth' and @disabled='disabled']\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//select[@id='_15_expirationDateMonth' and @disabled='disabled']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//select[@id='_15_expirationDateDay' and @disabled='disabled']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//select[@id='_15_expirationDateYear' and @disabled='disabled']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//select[@name='_15_expirationDateHour' and @disabled='disabled']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//select[@name='_15_expirationDateMinute' and @disabled='disabled']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//select[@name='_15_expirationDateAmPm' and @disabled='disabled']\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_15_neverExpireCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@id='_15_neverExpireCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Never Auto Expire\"));\n\t\tassertFalse(selenium.isChecked(\"//input[@id='_15_neverExpireCheckbox']\"));\n\t\tselenium.waitForElementNotPresent(\n\t\t\t\"//select[@id='_15_expirationDateMonth' and @disabled='disabled']\");\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//select[@id='_15_expirationDateMonth' and @disabled='disabled']\"));\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//select[@id='_15_expirationDateDay' and @disabled='disabled']\"));\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//select[@id='_15_expirationDateYear' and @disabled='disabled']\"));\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//select[@name='_15_expirationDateHour' and @disabled='disabled']\"));\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//select[@name='_15_expirationDateMinute' and @disabled='disabled']\"));\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//select[@name='_15_expirationDateAmPm' and @disabled='disabled']\"));\n\t\tselenium.select(\"//select[@id='_15_expirationDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=December\"));\n\t\tselenium.select(\"//select[@id='_15_expirationDateDay']\",\n\t\t\tRuntimeVariables.replace(\"label=31\"));\n\t\tselenium.select(\"//select[@id='_15_expirationDateYear']\",\n\t\t\tRuntimeVariables.replace(\"label=2015\"));\n\t\tselenium.select(\"//select[@name='_15_expirationDateHour']\",\n\t\t\tRuntimeVariables.replace(\"label=12\"));\n\t\tselenium.select(\"//select[@name='_15_expirationDateMinute']\",\n\t\t\tRuntimeVariables.replace(\"label=:00\"));\n\t\tselenium.select(\"//select[@name='_15_expirationDateAmPm']\",\n\t\t\tRuntimeVariables.replace(\"label=AM\"));\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Approved\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tselenium.clickAt(\"//td[3]/a\",\n\t\t\tRuntimeVariables.replace(\"Web Content Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_15__15_structure_el_TextAreaField_content' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Schedule (Modified)\"),\n\t\t\tselenium.getText(\"//a[@id='_15_scheduleLink']\"));\n\t\tselenium.clickAt(\"//a[@id='_15_scheduleLink']\",\n\t\t\tRuntimeVariables.replace(\"Schedule (Modified)\"));\n\t\tselenium.waitForVisible(\"//select[@id='_15_expirationDateMonth']\");\n\t\tassertEquals(\"December\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_15_expirationDateMonth']\"));\n\t\tassertEquals(\"31\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_15_expirationDateDay']\"));\n\t\tassertEquals(\"2015\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_15_expirationDateYear']\"));\n\t\tassertEquals(\"12\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@name='_15_expirationDateHour']\"));\n\t\tassertEquals(\":00\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@name='_15_expirationDateMinute']\"));\n\t\tassertEquals(\"AM\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@name='_15_expirationDateAmPm']\"));\n\t\tassertFalse(selenium.isChecked(\"//input[@id='_15_neverExpireCheckbox']\"));\n\t}","id":53834,"modified_method":"public void testAddWCWebContentExpirationDate() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//span[@title='Add']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Add']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Basic Web Content\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.type(\"//input[@id='_15_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Title\"));\n\t\tselenium.waitForText(\"//span[@class='cke_toolbar']/span[2]/a/span\",\n\t\t\t\"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_off']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"WC WebContent Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_15_scheduleLink']\",\n\t\t\t\t\"Schedule\"));\n\t\tselenium.clickAt(\"//a[@id='_15_scheduleLink']\",\n\t\t\tRuntimeVariables.replace(\"Schedule\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//select[@id='_15_expirationDateMonth' and @disabled='disabled']\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//select[@id='_15_expirationDateMonth' and @disabled='disabled']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//select[@id='_15_expirationDateDay' and @disabled='disabled']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//select[@id='_15_expirationDateYear' and @disabled='disabled']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//select[@name='_15_expirationDateHour' and @disabled='disabled']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//select[@name='_15_expirationDateMinute' and @disabled='disabled']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//select[@name='_15_expirationDateAmPm' and @disabled='disabled']\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_15_neverExpireCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@id='_15_neverExpireCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Never Auto Expire\"));\n\t\tassertFalse(selenium.isChecked(\"//input[@id='_15_neverExpireCheckbox']\"));\n\t\tselenium.waitForElementNotPresent(\n\t\t\t\"//select[@id='_15_expirationDateMonth' and @disabled='disabled']\");\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//select[@id='_15_expirationDateMonth' and @disabled='disabled']\"));\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//select[@id='_15_expirationDateDay' and @disabled='disabled']\"));\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//select[@id='_15_expirationDateYear' and @disabled='disabled']\"));\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//select[@name='_15_expirationDateHour' and @disabled='disabled']\"));\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//select[@name='_15_expirationDateMinute' and @disabled='disabled']\"));\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//select[@name='_15_expirationDateAmPm' and @disabled='disabled']\"));\n\t\tselenium.select(\"//select[@id='_15_expirationDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=December\"));\n\t\tselenium.select(\"//select[@id='_15_expirationDateDay']\",\n\t\t\tRuntimeVariables.replace(\"label=31\"));\n\t\tselenium.select(\"//select[@id='_15_expirationDateYear']\",\n\t\t\tRuntimeVariables.replace(\"label=2015\"));\n\t\tselenium.select(\"//select[@name='_15_expirationDateHour']\",\n\t\t\tRuntimeVariables.replace(\"label=12\"));\n\t\tselenium.select(\"//select[@name='_15_expirationDateMinute']\",\n\t\t\tRuntimeVariables.replace(\"label=:00\"));\n\t\tselenium.select(\"//select[@name='_15_expirationDateAmPm']\",\n\t\t\tRuntimeVariables.replace(\"label=AM\"));\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//a[contains(@title,'WC WebContent Title')]/div/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//a[@class='entry-link']/span[contains(.,'WC WebContent Title')]\"));\n\t\tselenium.clickAt(\"//a[@class='entry-link']/span[contains(.,'WC WebContent Title')]\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Schedule (Modified)\"),\n\t\t\tselenium.getText(\"//a[@id='_15_scheduleLink']\"));\n\t\tselenium.clickAt(\"//a[@id='_15_scheduleLink']\",\n\t\t\tRuntimeVariables.replace(\"Schedule (Modified)\"));\n\t\tselenium.waitForVisible(\"//select[@id='_15_expirationDateMonth']\");\n\t\tassertEquals(\"December\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_15_expirationDateMonth']\"));\n\t\tassertEquals(\"31\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_15_expirationDateDay']\"));\n\t\tassertEquals(\"2015\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_15_expirationDateYear']\"));\n\t\tassertEquals(\"12\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@name='_15_expirationDateHour']\"));\n\t\tassertEquals(\":00\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@name='_15_expirationDateMinute']\"));\n\t\tassertEquals(\"AM\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[@name='_15_expirationDateAmPm']\"));\n\t\tassertFalse(selenium.isChecked(\"//input[@id='_15_neverExpireCheckbox']\"));\n\t}","commit_id":"ae8fdd196b1a919e33b0dcb48d09a173e9fee513","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWCWebContentLocalized() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add']\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_15_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Title\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_15__15_structure_el_TextAreaField_content' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/textarea\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_15__15_structure_el_TextAreaField_content' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.selectFrame(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"WC WebContent Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Save as Draft']\",\n\t\t\tRuntimeVariables.replace(\"Save as Draft\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_15__15_structure_el_TextAreaField_content' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"English (United States)\"),\n\t\t\tselenium.getText(\"//span[@id='_15_textLanguageId']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Add Translation\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//span[@title='Add Translation']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Add Translation']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Add Translation\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Chinese (China)')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Chinese (China)\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Chinese (China)')]/a\"));\n\t\tselenium.click(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Chinese (China)')]/a\");\n\t\tselenium.waitForVisible(\"//iframe[@id='_15_zh_CN']\");\n\t\tselenium.selectFrame(\"//iframe[@id='_15_zh_CN']\");\n\t\tselenium.waitForText(\"//h1[@class='header-title']/span\",\n\t\t\t\"WC WebContent Title\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tselenium.type(\"//input[@id='_15_title_zh_CN']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"WC WebContent Title \\u4e16\\u754c\\u60a8\\u597d\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_15__15_structure_el_TextAreaField_content' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/textarea\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"WC WebContent Content \\u4e16\\u754c\\u60a8\\u597d\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_15__15_structure_el_TextAreaField_content' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.selectFrame(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.waitForText(\"//body\",\n\t\t\t\"WC WebContent Content \\u4e16\\u754c\\u60a8\\u597d\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForVisible(\"//iframe[@id='_15_zh_CN']\");\n\t\tselenium.selectFrame(\"//iframe[@id='_15_zh_CN']\");\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForText(\"//a[contains(@class,'journal-article-translation-zh_CN')]\",\n\t\t\t\"Chinese (China)\");\n\t\tassertEquals(RuntimeVariables.replace(\"Chinese (China)\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//a[contains(@class,'journal-article-translation-zh_CN')]\"));\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Approved\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t}","id":53835,"modified_method":"public void testAddWCWebContentLocalized() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//span[@title='Add']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Add']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Basic Web Content\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.type(\"//input[@id='_15_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Title\"));\n\t\tselenium.waitForText(\"//span[@class='cke_toolbar']/span[2]/a/span\",\n\t\t\t\"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_off']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"WC WebContent Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Save as Draft']\",\n\t\t\tRuntimeVariables.replace(\"Save as Draft\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"English (United States)\"),\n\t\t\tselenium.getText(\"//span[@id='_15_textLanguageId']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Add Translation\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//span[@title='Add Translation']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Add Translation']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Add Translation\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Chinese (China)')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Chinese (China)\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Chinese (China)')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Chinese (China)')]\",\n\t\t\tRuntimeVariables.replace(\"Chinese (China)\"));\n\t\tselenium.waitForVisible(\"//iframe[@id='_15_zh_CN']\");\n\t\tselenium.selectFrame(\"//iframe[@id='_15_zh_CN']\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.waitForVisible(\"//h1[@class='header-title']/span\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tThread.sleep(1000);\n\t\tselenium.waitForVisible(\"//input[@id='_15_title_zh_CN']\");\n\t\tselenium.type(\"//input[@id='_15_title_zh_CN']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"WC WebContent Title \\u4e16\\u754c\\u60a8\\u597d\"));\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"WC WebContent Content \\u4e16\\u754c\\u60a8\\u597d\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_off']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body\",\n\t\t\t\"WC WebContent Content \\u4e16\\u754c\\u60a8\\u597d\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForVisible(\"//iframe[@id='_15_zh_CN']\");\n\t\tselenium.selectFrame(\"//iframe[@id='_15_zh_CN']\");\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForText(\"//a[contains(@class,'journal-article-translation-zh_CN')]\",\n\t\t\t\"Chinese (China)\");\n\t\tassertEquals(RuntimeVariables.replace(\"Chinese (China)\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//a[contains(@class,'journal-article-translation-zh_CN')]\"));\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//a[contains(@title,'WC WebContent Title')]/div/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//a[@class='entry-link']/span[contains(.,'WC WebContent Title')]\"));\n\t}","commit_id":"ae8fdd196b1a919e33b0dcb48d09a173e9fee513","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWCWebContentReviewDate() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add']\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_15_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Title\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_15__15_structure_el_TextAreaField_content' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/textarea\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_15__15_structure_el_TextAreaField_content' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.selectFrame(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"WC WebContent Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tassertEquals(RuntimeVariables.replace(\"Schedule (Modified)\"),\n\t\t\tselenium.getText(\"//a[@id='_15_scheduleLink']\"));\n\t\tselenium.clickAt(\"//a[@id='_15_scheduleLink']\",\n\t\t\tRuntimeVariables.replace(\"Schedule (Modified)\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//select[@id='_15_reviewDateMonth' and @disabled='disabled']\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//select[@id='_15_reviewDateMonth' and @disabled='disabled']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//select[@id='_15_reviewDateDay' and @disabled='disabled']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//select[@id='_15_reviewDateYear' and @disabled='disabled']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//select[@name='_15_reviewDateHour' and @disabled='disabled']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//select[@name='_15_reviewDateMinute' and @disabled='disabled']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//select[@name='_15_reviewDateAmPm' and @disabled='disabled']\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_15_neverReviewCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@id='_15_neverReviewCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Never Auto Review\"));\n\t\tassertFalse(selenium.isChecked(\"//input[@id='_15_neverReviewCheckbox']\"));\n\t\tselenium.waitForElementNotPresent(\n\t\t\t\"//select[@id='_15_reviewDateMonth' and @disabled='disabled']\");\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//select[@id='_15_reviewDateMonth' and @disabled='disabled']\"));\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//select[@id='_15_reviewDateDay' and @disabled='disabled']\"));\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//select[@id='_15_reviewDateYear' and @disabled='disabled']\"));\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//select[@name='_15_reviewDateHour' and @disabled='disabled']\"));\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//select[@name='_15_reviewDateMinute' and @disabled='disabled']\"));\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//select[@name='_15_reviewDateAmPm' and @disabled='disabled']\"));\n\t\tselenium.select(\"//select[@id='_15_reviewDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=December\"));\n\t\tselenium.select(\"//select[@id='_15_reviewDateDay']\",\n\t\t\tRuntimeVariables.replace(\"label=31\"));\n\t\tselenium.select(\"//select[@id='_15_reviewDateYear']\",\n\t\t\tRuntimeVariables.replace(\"label=2015\"));\n\t\tselenium.select(\"//select[@name='_15_reviewDateHour']\",\n\t\t\tRuntimeVariables.replace(\"label=12\"));\n\t\tselenium.select(\"//select[@name='_15_reviewDateMinute']\",\n\t\t\tRuntimeVariables.replace(\"label=:00\"));\n\t\tselenium.select(\"//select[@name='_15_reviewDateAmPm']\",\n\t\t\tRuntimeVariables.replace(\"label=AM\"));\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Approved\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tselenium.clickAt(\"//td[3]/a\",\n\t\t\tRuntimeVariables.replace(\"Web Content Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_15__15_structure_el_TextAreaField_content' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Schedule (Modified)\"),\n\t\t\tselenium.getText(\"//a[@id='_15_scheduleLink']\"));\n\t\tselenium.clickAt(\"//a[@id='_15_scheduleLink']\",\n\t\t\tRuntimeVariables.replace(\"Schedule (Modified)\"));\n\t\tselenium.waitForVisible(\"//select[@id='_15_reviewDateMonth']\");\n\t\tassertEquals(\"December\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_15_reviewDateMonth']\"));\n\t\tassertEquals(\"31\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_15_reviewDateDay']\"));\n\t\tassertEquals(\"2015\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_15_reviewDateYear']\"));\n\t\tassertEquals(\"12\",\n\t\t\tselenium.getSelectedLabel(\"//select[@name='_15_reviewDateHour']\"));\n\t\tassertEquals(\":00\",\n\t\t\tselenium.getSelectedLabel(\"//select[@name='_15_reviewDateMinute']\"));\n\t\tassertEquals(\"AM\",\n\t\t\tselenium.getSelectedLabel(\"//select[@name='_15_reviewDateAmPm']\"));\n\t\tassertFalse(selenium.isChecked(\"//input[@id='_15_neverReviewCheckbox']\"));\n\t}","id":53836,"modified_method":"public void testAddWCWebContentReviewDate() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//span[@title='Add']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Add']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Basic Web Content\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_15_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Title\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.type(\"//input[@id='_15_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Title\"));\n\t\tselenium.waitForText(\"//span[@class='cke_toolbar']/span[2]/a/span\",\n\t\t\t\"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_off']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"WC WebContent Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tassertEquals(RuntimeVariables.replace(\"Schedule (Modified)\"),\n\t\t\tselenium.getText(\"//a[@id='_15_scheduleLink']\"));\n\t\tselenium.clickAt(\"//a[@id='_15_scheduleLink']\",\n\t\t\tRuntimeVariables.replace(\"Schedule (Modified)\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//select[@id='_15_reviewDateMonth' and @disabled='disabled']\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//select[@id='_15_reviewDateMonth' and @disabled='disabled']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//select[@id='_15_reviewDateDay' and @disabled='disabled']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//select[@id='_15_reviewDateYear' and @disabled='disabled']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//select[@name='_15_reviewDateHour' and @disabled='disabled']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//select[@name='_15_reviewDateMinute' and @disabled='disabled']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//select[@name='_15_reviewDateAmPm' and @disabled='disabled']\"));\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_15_neverReviewCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@id='_15_neverReviewCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Never Auto Review\"));\n\t\tassertFalse(selenium.isChecked(\"//input[@id='_15_neverReviewCheckbox']\"));\n\t\tselenium.waitForElementNotPresent(\n\t\t\t\"//select[@id='_15_reviewDateMonth' and @disabled='disabled']\");\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//select[@id='_15_reviewDateMonth' and @disabled='disabled']\"));\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//select[@id='_15_reviewDateDay' and @disabled='disabled']\"));\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//select[@id='_15_reviewDateYear' and @disabled='disabled']\"));\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//select[@name='_15_reviewDateHour' and @disabled='disabled']\"));\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//select[@name='_15_reviewDateMinute' and @disabled='disabled']\"));\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//select[@name='_15_reviewDateAmPm' and @disabled='disabled']\"));\n\t\tselenium.select(\"//select[@id='_15_reviewDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=December\"));\n\t\tselenium.select(\"//select[@id='_15_reviewDateDay']\",\n\t\t\tRuntimeVariables.replace(\"label=31\"));\n\t\tselenium.select(\"//select[@id='_15_reviewDateYear']\",\n\t\t\tRuntimeVariables.replace(\"label=2015\"));\n\t\tselenium.select(\"//select[@name='_15_reviewDateHour']\",\n\t\t\tRuntimeVariables.replace(\"label=12\"));\n\t\tselenium.select(\"//select[@name='_15_reviewDateMinute']\",\n\t\t\tRuntimeVariables.replace(\"label=:00\"));\n\t\tselenium.select(\"//select[@name='_15_reviewDateAmPm']\",\n\t\t\tRuntimeVariables.replace(\"label=AM\"));\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//a[contains(@title,'WC WebContent Title')]/div/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//a[@class='entry-link']/span[contains(.,'WC WebContent Title')]\"));\n\t\tselenium.clickAt(\"//a[@class='entry-link']/span[contains(.,'WC WebContent Title')]\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_15_scheduleLink']\",\n\t\t\t\t\"Schedule\"));\n\t\tselenium.clickAt(\"//a[@id='_15_scheduleLink']\",\n\t\t\tRuntimeVariables.replace(\"Schedule\"));\n\t\tselenium.waitForVisible(\"//select[@id='_15_reviewDateMonth']\");\n\t\tassertEquals(\"December\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_15_reviewDateMonth']\"));\n\t\tassertEquals(\"31\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_15_reviewDateDay']\"));\n\t\tassertEquals(\"2015\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_15_reviewDateYear']\"));\n\t\tassertEquals(\"12\",\n\t\t\tselenium.getSelectedLabel(\"//select[@name='_15_reviewDateHour']\"));\n\t\tassertEquals(\":00\",\n\t\t\tselenium.getSelectedLabel(\"//select[@name='_15_reviewDateMinute']\"));\n\t\tassertEquals(\"AM\",\n\t\t\tselenium.getSelectedLabel(\"//select[@name='_15_reviewDateAmPm']\"));\n\t\tassertFalse(selenium.isChecked(\"//input[@id='_15_neverReviewCheckbox']\"));\n\t}","commit_id":"ae8fdd196b1a919e33b0dcb48d09a173e9fee513","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWCWebContent() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//span[@title='Add']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Add']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Basic Web Content\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_15_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Title\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.waitForText(\"//span[@class='cke_toolbar']/span[2]/a/span\",\n\t\t\t\"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_off']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"WC WebContent Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isVisible(\"//div[@class='entry-thumbnail']/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title\"),\n\t\t\tselenium.getText(\"//a[@class='entry-link']/span\"));\n\t}","id":53837,"modified_method":"public void testAddWCWebContent() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//span[@title='Add']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Add']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Basic Web Content\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.type(\"//input[@id='_15_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Title\"));\n\t\tselenium.waitForText(\"//span[@class='cke_toolbar']/span[2]/a/span\",\n\t\t\t\"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_off']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"WC WebContent Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//a[contains(@title,'WC WebContent Title')]/div/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//a[@class='entry-link']/span[contains(.,'WC WebContent Title')]\"));\n\t}","commit_id":"ae8fdd196b1a919e33b0dcb48d09a173e9fee513","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWCWebContentTitleEscapeCharacter()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add']\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_15_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"<!-- -->\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_15__15_structure_el_TextAreaField_content' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/textarea\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_15__15_structure_el_TextAreaField_content' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.selectFrame(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"WC WebContent Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"<!-- -->\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Approved\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t}","id":53838,"modified_method":"public void testAddWCWebContentTitleEscapeCharacter()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//span[@title='Add']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Add']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Basic Web Content\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.type(\"//input[@id='_15_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"<!-- -->\"));\n\t\tselenium.waitForText(\"//span[@class='cke_toolbar']/span[2]/a/span\",\n\t\t\t\"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_off']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"WC WebContent Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//a[contains(@title,'<!-- -->')]/div/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"<!-- -->\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//a[@class='entry-link']/span[contains(.,'<!-- -->')]\"));\n\t}","commit_id":"ae8fdd196b1a919e33b0dcb48d09a173e9fee513","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWCWebContentTitleNull() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add']\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"New Web Content\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tselenium.type(\"//input[@id='_15_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_15__15_structure_el_TextAreaField_content' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/textarea\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_15__15_structure_el_TextAreaField_content' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.selectFrame(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"WC WebContent Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"New Web Content\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid name.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t}","id":53839,"modified_method":"public void testAddWCWebContentTitleNull() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//span[@title='Add']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Add']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Basic Web Content\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Basic Web Content')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"New Web Content\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.type(\"//input[@id='_15_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForText(\"//span[@class='cke_toolbar']/span[2]/a/span\",\n\t\t\t\"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_off']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"WC WebContent Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"New Web Content\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid name.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t}","commit_id":"ae8fdd196b1a919e33b0dcb48d09a173e9fee513","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditWCWebContent() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\",\n\t\t\tRuntimeVariables.replace(\"Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_15_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Title Edit\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_15__15_structure_el_TextAreaField_content' and @style='display: none;']\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\"//a[@class='cke_button_source cke_on']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/textarea\");\n\t\tselenium.type(\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/textarea\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Content Edit\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_15__15_structure_el_TextAreaField_content' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.selectFrame(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"WC WebContent Content Edit\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title Edit\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t}","id":53840,"modified_method":"public void testEditWCWebContent() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//a[@class='entry-link']/span[contains(.,'WC WebContent Title')]\"));\n\t\tselenium.clickAt(\"//a[@id='_15_dhec_menuButton']\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\",\n\t\t\tRuntimeVariables.replace(\"Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.type(\"//input[@id='_15_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Title Edit\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Content Edit\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_off']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"WC WebContent Content Edit\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//a[@class='entry-link']/span[contains(.,'WC WebContent Title Edit')]\"));\n\t}","commit_id":"ae8fdd196b1a919e33b0dcb48d09a173e9fee513","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewEditWCWebContent() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isVisible(\"//td[1]/input\"));\n\n\t\tString webContentID = selenium.getText(\"//td[2]/a\");\n\t\tRuntimeVariables.setValue(\"webContentID\", webContentID);\n\t\tassertEquals(RuntimeVariables.replace(\"${webContentID}\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title Edit\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Approved\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//td[5]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//td[6]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//td[7]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//td[8]/span/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//td[3]/a\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Title Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title Edit\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertTrue(selenium.isPartialText(\"//span[@class='workflow-id']\", \"ID:\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Version: 1.1\"),\n\t\t\tselenium.getText(\"//span[@class='workflow-version']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Status: Approved\"),\n\t\t\tselenium.getText(\"//span[@class='workflow-status']\"));\n\t\tassertEquals(\"WC WebContent Title Edit\",\n\t\t\tselenium.getValue(\"//input[@id='_15_title_en_US']\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.selectFrame(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Content Edit\"),\n\t\t\tselenium.getText(\"//body\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tassertEquals(RuntimeVariables.replace(\"View History\"),\n\t\t\tselenium.getText(\"//button[contains(.,'View History')]\"));\n\t\tselenium.clickAt(\"//button[contains(.,'View History')]\",\n\t\t\tRuntimeVariables.replace(\"View History\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"${webContentID}\"),\n\t\t\tselenium.getText(\"//tr[3]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title\"),\n\t\t\tselenium.getText(\"//tr[3]/td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.0\"),\n\t\t\tselenium.getText(\"//tr[3]/td[4]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Approved\"),\n\t\t\tselenium.getText(\"//tr[3]/td[5]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[3]/td[6]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[3]/td[7]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//tr[3]/td[8]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"${webContentID}\"),\n\t\t\tselenium.getText(\"//tr[4]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title Edit\"),\n\t\t\tselenium.getText(\"//tr[4]/td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.1\"),\n\t\t\tselenium.getText(\"//tr[4]/td[4]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Approved\"),\n\t\t\tselenium.getText(\"//tr[4]/td[5]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[4]/td[6]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[4]/td[7]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//tr[4]/td[8]\"));\n\t}","id":53841,"modified_method":"public void testViewEditWCWebContent() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//a[@class='entry-link']/span[contains(.,'WC WebContent Title Edit')]\"));\n\t\tselenium.clickAt(\"//a[@class='entry-link']/span[contains(.,'WC WebContent Title Edit')]\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Title Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title Edit\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertTrue(selenium.isPartialText(\"//span[@class='workflow-id']\", \"ID:\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Version: 1.1\"),\n\t\t\tselenium.getText(\"//span[@class='workflow-version']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Status: Approved\"),\n\t\t\tselenium.getText(\"//span[@class='workflow-status']\"));\n\t\tassertEquals(\"WC WebContent Title Edit\",\n\t\t\tselenium.getValue(\"//input[@id='_15_title_en_US']\"));\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Content Edit\"),\n\t\t\tselenium.getText(\"//body\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tassertEquals(RuntimeVariables.replace(\"View History\"),\n\t\t\tselenium.getText(\"//button[contains(.,'View History')]\"));\n\t\tselenium.clickAt(\"//button[contains(.,'View History')]\",\n\t\t\tRuntimeVariables.replace(\"View History\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isVisible(\"//tr[3]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title\"),\n\t\t\tselenium.getText(\"//tr[3]/td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.0\"),\n\t\t\tselenium.getText(\"//tr[3]/td[4]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Approved\"),\n\t\t\tselenium.getText(\"//tr[3]/td[5]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[3]/td[6]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[3]/td[7]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//tr[3]/td[8]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[4]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title Edit\"),\n\t\t\tselenium.getText(\"//tr[4]/td[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.1\"),\n\t\t\tselenium.getText(\"//tr[4]/td[4]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Approved\"),\n\t\t\tselenium.getText(\"//tr[4]/td[5]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[4]/td[6]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[4]/td[7]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//tr[4]/td[8]\"));\n\t}","commit_id":"ae8fdd196b1a919e33b0dcb48d09a173e9fee513","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewWCWebContentLocalized() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tString webcontentID = selenium.getText(\"//td[2]/a\");\n\t\tRuntimeVariables.setValue(\"webcontentID\", webcontentID);\n\t\tassertEquals(RuntimeVariables.replace(\"${webcontentID}\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Approved\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//td[5]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//td[6]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//td[7]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//td[8]/span/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//td[8]/span/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[contains(@id,'SearchContainer_1_menu_edit')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\"//a[contains(@id,'SearchContainer_1_menu_edit')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Permissions\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//a[contains(@id,'SearchContainer_1_menu_permissions')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View (Opens New Window)\"),\n\t\t\tselenium.getText(\"//a[contains(@id,'SearchContainer_1_menu_view')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Copy\"),\n\t\t\tselenium.getText(\"//a[contains(@id,'SearchContainer_1_menu_copy')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Expire\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//a[contains(@id,'SearchContainer_1_menu_expire')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//a[contains(@id,'SearchContainer_1_menu_delete')]\"));\n\t\tselenium.clickAt(\"//td[2]/a\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent ID\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Web Content\"),\n\t\t\tselenium.getText(\"//span[@class='portlet-title-text']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Web Content can be any content you would like to add to a site, such as articles, a FAQ, or a news item. Administrators can manage content, as well as assign user roles and permissions. Users may add, edit, approve, or view content depending on their role. Or disable for all portlets.\"),\n\t\t\tselenium.getText(\"//div[@id='cpContextPanelTemplate']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertTrue(selenium.isPartialText(\"//span[@class='workflow-id']\",\n\t\t\t\tRuntimeVariables.getValue(\"webcontentID\")));\n\t\tassertEquals(RuntimeVariables.replace(\"Version: 1.0\"),\n\t\t\tselenium.getText(\"//span[@class='workflow-version']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Status: Approved\"),\n\t\t\tselenium.getText(\"//span[@class='workflow-status']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Permissions\"),\n\t\t\tselenium.getText(\"//button[.='Permissions']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View History\"),\n\t\t\tselenium.getText(\"//button[.='View History']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Default\"),\n\t\t\tselenium.getText(\"//span[@id='_15_structureNameLabel']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"None\"),\n\t\t\tselenium.getText(\"//span[@class='template-name-label']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"English (United States)\"),\n\t\t\tselenium.getText(\"//span[@id='_15_textLanguageId']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Available Translations:\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//span[@id='_15_availableTranslationsLinks']/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Chinese (China)\"),\n\t\t\tselenium.getText(\"//span[@id='_15_availableTranslationsLinks']/a\"));\n\t\tselenium.clickAt(\"//span[@id='_15_availableTranslationsLinks']/a\",\n\t\t\tRuntimeVariables.replace(\"Chinese (China)\"));\n\t\tselenium.waitForVisible(\"//iframe[@id='_15_zh_CN']\");\n\t\tselenium.selectFrame(\"//iframe[@id='_15_zh_CN']\");\n\t\tselenium.waitForText(\"//h1[@class='header-title']/span\",\n\t\t\t\"WC WebContent Title \\u4e16\\u754c\\u60a8\\u597d\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"WC WebContent Title \\u4e16\\u754c\\u60a8\\u597d\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(\"WC WebContent Title \\u4e16\\u754c\\u60a8\\u597d\",\n\t\t\tselenium.getValue(\"//input[@id='_15_title_zh_CN']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Translating Web Content to Chinese (China)\"),\n\t\t\tselenium.getText(\"//div[@id='_15_availableTranslationContainer']\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_15__15_structure_el_TextAreaField_content' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.selectFrame(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.waitForText(\"//body\",\n\t\t\t\"WC WebContent Content \\u4e16\\u754c\\u60a8\\u597d\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"WC WebContent Content \\u4e16\\u754c\\u60a8\\u597d\"),\n\t\t\tselenium.getText(\"//body\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForVisible(\"//button[@id='closethick']\");\n\t\tselenium.clickAt(\"//button[@id='closethick']\",\n\t\t\tRuntimeVariables.replace(\"X\"));\n\t\tassertEquals(\"WC WebContent Title\",\n\t\t\tselenium.getValue(\"//input[@id='_15_title_en_US']\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_15__15_structure_el_TextAreaField_content' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.selectFrame(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"WC WebContent Content\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Content\"),\n\t\t\tselenium.getText(\"//body\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_15_indexableCheckbox']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title\"),\n\t\t\tselenium.getText(\"//span[@class='article-name']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Content (Modified)\"),\n\t\t\tselenium.getText(\"//a[@id='_15_contentLink']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Abstract (Modified)\"),\n\t\t\tselenium.getText(\"//a[@id='_15_abstractLink']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Categorization (Modified)\"),\n\t\t\tselenium.getText(\"//a[@id='_15_categorizationLink']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Schedule (Modified)\"),\n\t\t\tselenium.getText(\"//a[@id='_15_scheduleLink']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Display Page (Modified)\"),\n\t\t\tselenium.getText(\"//a[@id='_15_displayPageLink']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Related Assets (Modified)\"),\n\t\t\tselenium.getText(\"//a[@id='_15_relatedAssetsLink']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Custom Fields (Modified)\"),\n\t\t\tselenium.getText(\"//a[@id='_15_customFieldsLink']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"A new version will be created automatically if this content is modified.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tassertEquals(\"Save as Draft\",\n\t\t\tselenium.getValue(\"//input[@value='Save as Draft']\"));\n\t\tassertEquals(\"Publish\", selenium.getValue(\"//input[@value='Publish']\"));\n\t\tassertEquals(\"Cancel\", selenium.getValue(\"//input[@value='Cancel']\"));\n\t}","id":53842,"modified_method":"public void testViewWCWebContentLocalized() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//a[contains(@title,'WC WebContent Title')]/div/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//a[@class='entry-link']/span[contains(.,'WC WebContent Title')]\"));\n\t\tselenium.clickAt(\"//a[@id='_15_dhec_menuButton']\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Move\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Move')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Permissions\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Permissions')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View (Opens New Window)\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'View (Opens New Window)')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Copy\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Copy')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Expire\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Expire')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Move to the Recycle Bin\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Move to the Recycle Bin')]\"));\n\t\tselenium.clickAt(\"//a[@class='entry-link']/span[contains(.,'WC WebContent Title')]\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Web Content\"),\n\t\t\tselenium.getText(\"//span[@class='portlet-title-text']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Web Content can be any content you would like to add to a site, such as articles, a FAQ, or a news item. Administrators can manage content, as well as assign user roles and permissions. Users may add, edit, approve, or view content depending on their role. Or disable for all portlets.\"),\n\t\t\tselenium.getText(\"//div[@id='cpContextPanelTemplate']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertTrue(selenium.isVisible(\"//span[@class='workflow-id']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Version: 1.0\"),\n\t\t\tselenium.getText(\"//span[@class='workflow-version']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Status: Approved\"),\n\t\t\tselenium.getText(\"//span[@class='workflow-status']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Permissions\"),\n\t\t\tselenium.getText(\"//button[.='Permissions']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View History\"),\n\t\t\tselenium.getText(\"//button[.='View History']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Default\"),\n\t\t\tselenium.getText(\"//span[@id='_15_structureNameLabel']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"None\"),\n\t\t\tselenium.getText(\"//span[@class='template-name-label']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"English (United States)\"),\n\t\t\tselenium.getText(\"//span[@id='_15_textLanguageId']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Available Translations:\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//span[@id='_15_availableTranslationsLinks']/label\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Chinese (China)\"),\n\t\t\tselenium.getText(\"//span[@id='_15_availableTranslationsLinks']/a\"));\n\t\tselenium.clickAt(\"//span[@id='_15_availableTranslationsLinks']/a\",\n\t\t\tRuntimeVariables.replace(\"Chinese (China)\"));\n\t\tselenium.waitForVisible(\"//iframe[@id='_15_zh_CN']\");\n\t\tselenium.selectFrame(\"//iframe[@id='_15_zh_CN']\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tselenium.waitForText(\"//h1[@class='header-title']/span\",\n\t\t\t\"WC WebContent Title \\u4e16\\u754c\\u60a8\\u597d\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"WC WebContent Title \\u4e16\\u754c\\u60a8\\u597d\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(\"WC WebContent Title \\u4e16\\u754c\\u60a8\\u597d\",\n\t\t\tselenium.getValue(\"//input[@id='_15_title_zh_CN']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Translating Web Content to Chinese (China)\"),\n\t\t\tselenium.getText(\"//div[@id='_15_availableTranslationContainer']\"));\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body\",\n\t\t\t\"WC WebContent Content \\u4e16\\u754c\\u60a8\\u597d\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"WC WebContent Content \\u4e16\\u754c\\u60a8\\u597d\"),\n\t\t\tselenium.getText(\"//body\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.waitForVisible(\"//button[@title='Close dialog']\");\n\t\tselenium.clickAt(\"//button[@title='Close dialog']\",\n\t\t\tRuntimeVariables.replace(\"X\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tassertEquals(\"WC WebContent Title\",\n\t\t\tselenium.getValue(\"//input[@id='_15_title_en_US']\"));\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"WC WebContent Content\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Content\"),\n\t\t\tselenium.getText(\"//body\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_15_indexableCheckbox']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title\"),\n\t\t\tselenium.getText(\"//span[@class='article-name']\"));\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_15_contentLink']\",\n\t\t\t\t\"Content\"));\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_15_abstractLink']\",\n\t\t\t\t\"Abstract\"));\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_15_categorizationLink']\",\n\t\t\t\t\"Categorization\"));\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_15_scheduleLink']\",\n\t\t\t\t\"Schedule\"));\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_15_displayPageLink']\",\n\t\t\t\t\"Display Page\"));\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_15_relatedAssetsLink']\",\n\t\t\t\t\"Related Assets\"));\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_15_customFieldsLink']\",\n\t\t\t\t\"Custom Fields\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"A new version will be created automatically if this content is modified.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tassertEquals(\"Save as Draft\",\n\t\t\tselenium.getValue(\"//input[@value='Save as Draft']\"));\n\t\tassertEquals(\"Publish\", selenium.getValue(\"//input[@value='Publish']\"));\n\t\tassertEquals(\"Cancel\", selenium.getValue(\"//input[@value='Cancel']\"));\n\t}","commit_id":"ae8fdd196b1a919e33b0dcb48d09a173e9fee513","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewWCWebContent() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title\"),\n\t\t\tselenium.getText(\"//a[@class='entry-link']/span\"));\n\t\tselenium.clickAt(\"//a[@class='entry-link']/span\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Web Content\"),\n\t\t\tselenium.getText(\"//span[@class='portlet-title-text']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a/span\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@id='cpContextPanelTemplate']\",\n\t\t\t\t\"Web Content can be any content you would like to add to a site, such as articles, a FAQ, or a news item. Administrators can manage content, as well as assign user roles and permissions. Users may add, edit, approve, or view content depending on their role.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']/a\"));\n\t\tassertTrue(selenium.isVisible(\"//span[@class='workflow-id']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Version: 1.0\"),\n\t\t\tselenium.getText(\"//span[@class='workflow-version']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Status: Approved\"),\n\t\t\tselenium.getText(\"//span[@class='workflow-status']\"));\n\t\tassertTrue(selenium.isVisible(\"//span[@class='taglib-icon-help']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Permissions\"),\n\t\t\tselenium.getText(\"//button[.='Permissions']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View History\"),\n\t\t\tselenium.getText(\"//button[.='View History']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Default\"),\n\t\t\tselenium.getText(\"//span[@id='_15_structureNameLabel']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"None\"),\n\t\t\tselenium.getText(\"//span[@class='template-name-label']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"English (United States)\"),\n\t\t\tselenium.getText(\"//span[@id='_15_textLanguageId']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Change\"),\n\t\t\tselenium.getText(\"//a[@id='_15_changeLanguageId']\"));\n\t\tassertEquals(\"WC WebContent Title\",\n\t\t\tselenium.getValue(\"//input[@id='_15_title_en_US']\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_15__15_structure_el_TextAreaField_content' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.selectFrame(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.waitForText(\"//p\", \"WC WebContent Content\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Content\"),\n\t\t\tselenium.getText(\"//p\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_15_indexableCheckbox']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title\"),\n\t\t\tselenium.getText(\"//span[@class='article-name']\"));\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_15_contentLink']\",\n\t\t\t\t\"Content\"));\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_15_abstractLink']\",\n\t\t\t\t\"Abstract\"));\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_15_categorizationLink']\",\n\t\t\t\t\"Categorization\"));\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_15_scheduleLink']\",\n\t\t\t\t\"Schedule\"));\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_15_displayPageLink']\",\n\t\t\t\t\"Display Page\"));\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_15_relatedAssetsLink']\",\n\t\t\t\t\"Related Assets\"));\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_15_customFieldsLink']\",\n\t\t\t\t\"Custom Fields\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"A new version will be created automatically if this content is modified.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tassertEquals(\"Save as Draft\",\n\t\t\tselenium.getValue(\"//input[@value='Save as Draft']\"));\n\t\tassertEquals(\"Publish\", selenium.getValue(\"//input[@value='Publish']\"));\n\t\tassertEquals(\"Cancel\", selenium.getValue(\"//input[@value='Cancel']\"));\n\t}","id":53843,"modified_method":"public void testViewWCWebContent() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title\"),\n\t\t\tselenium.getText(\"//a[@class='entry-link']/span\"));\n\t\tselenium.clickAt(\"//a[@class='entry-link']/span\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Web Content\"),\n\t\t\tselenium.getText(\"//span[@class='portlet-title-text']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a/span\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[@id='cpContextPanelTemplate']\",\n\t\t\t\t\"Web Content can be any content you would like to add to a site, such as articles, a FAQ, or a news item. Administrators can manage content, as well as assign user roles and permissions. Users may add, edit, approve, or view content depending on their role.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']/a\"));\n\t\tassertTrue(selenium.isVisible(\"//span[@class='workflow-id']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Version: 1.0\"),\n\t\t\tselenium.getText(\"//span[@class='workflow-version']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Status: Approved\"),\n\t\t\tselenium.getText(\"//span[@class='workflow-status']\"));\n\t\tassertTrue(selenium.isVisible(\"//span[@class='taglib-icon-help']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Permissions\"),\n\t\t\tselenium.getText(\"//button[.='Permissions']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"View History\"),\n\t\t\tselenium.getText(\"//button[.='View History']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Default\"),\n\t\t\tselenium.getText(\"//span[@id='_15_structureNameLabel']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"None\"),\n\t\t\tselenium.getText(\"//span[@class='template-name-label']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"English (United States)\"),\n\t\t\tselenium.getText(\"//span[@id='_15_textLanguageId']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Change\"),\n\t\t\tselenium.getText(\"//a[@id='_15_changeLanguageId']\"));\n\t\tassertEquals(\"WC WebContent Title\",\n\t\t\tselenium.getValue(\"//input[@id='_15_title_en_US']\"));\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//p\", \"WC WebContent Content\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Content\"),\n\t\t\tselenium.getText(\"//p\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_15_indexableCheckbox']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent Title\"),\n\t\t\tselenium.getText(\"//span[@class='article-name']\"));\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_15_contentLink']\",\n\t\t\t\t\"Content\"));\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_15_abstractLink']\",\n\t\t\t\t\"Abstract\"));\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_15_categorizationLink']\",\n\t\t\t\t\"Categorization\"));\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_15_scheduleLink']\",\n\t\t\t\t\"Schedule\"));\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_15_displayPageLink']\",\n\t\t\t\t\"Display Page\"));\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_15_relatedAssetsLink']\",\n\t\t\t\t\"Related Assets\"));\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_15_customFieldsLink']\",\n\t\t\t\t\"Custom Fields\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"A new version will be created automatically if this content is modified.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tassertEquals(\"Save as Draft\",\n\t\t\tselenium.getValue(\"//input[@value='Save as Draft']\"));\n\t\tassertEquals(\"Publish\", selenium.getValue(\"//input[@value='Publish']\"));\n\t\tassertEquals(\"Cancel\", selenium.getValue(\"//input[@value='Cancel']\"));\n\t}","commit_id":"ae8fdd196b1a919e33b0dcb48d09a173e9fee513","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewWCWebContents() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent1 Title\"),\n\t\t\tselenium.getText(\"//tr[3]/td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent2 Title\"),\n\t\t\tselenium.getText(\"//tr[4]/td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent3 Title\"),\n\t\t\tselenium.getText(\"//tr[5]/td[3]/a\"));\n\t\tselenium.clickAt(\"//tr[3]/td[3]/a\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent1 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent1 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(\"WC WebContent1 Title\",\n\t\t\tselenium.getValue(\"//input[@id='_15_title_en_US']\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_15__15_structure_el_TextAreaField_content' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.selectFrame(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"WC WebContent1 Content\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent1 Content\"),\n\t\t\tselenium.getText(\"//body\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent2 Title\"),\n\t\t\tselenium.getText(\"//tr[4]/td[3]/a\"));\n\t\tselenium.clickAt(\"//tr[4]/td[3]/a\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent2 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent2 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(\"WC WebContent2 Title\",\n\t\t\tselenium.getValue(\"//input[@id='_15_title_en_US']\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_15__15_structure_el_TextAreaField_content' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.selectFrame(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"WC WebContent2 Content\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent2 Content\"),\n\t\t\tselenium.getText(\"//body\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent3 Title\"),\n\t\t\tselenium.getText(\"//tr[5]/td[3]/a\"));\n\t\tselenium.clickAt(\"//tr[5]/td[3]/a\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent3 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent3 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(\"WC WebContent3 Title\",\n\t\t\tselenium.getValue(\"//input[@id='_15_title_en_US']\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//textarea[@id='_15__15_structure_el_TextAreaField_content' and @style='display: none;']\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.selectFrame(\n\t\t\t\"//td[@id='cke_contents__15__15_structure_el_TextAreaField_content']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"WC WebContent3 Content\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent3 Content\"),\n\t\t\tselenium.getText(\"//body\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":53844,"modified_method":"public void testViewWCWebContents() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent1 Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//a[@class='entry-link']/span[contains(.,'WC WebContent1 Title')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent2 Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//a[@class='entry-link']/span[contains(.,'WC WebContent2 Title')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent3 Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//a[@class='entry-link']/span[contains(.,'WC WebContent3 Title')]\"));\n\t\tselenium.clickAt(\"//a[@class='entry-link']/span[contains(.,'WC WebContent1 Title')]\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent1 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent1 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(\"WC WebContent1 Title\",\n\t\t\tselenium.getValue(\"//input[@id='_15_title_en_US']\"));\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"WC WebContent1 Content\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent1 Content\"),\n\t\t\tselenium.getText(\"//body\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent2 Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//a[@class='entry-link']/span[contains(.,'WC WebContent2 Title')]\"));\n\t\tselenium.clickAt(\"//a[@class='entry-link']/span[contains(.,'WC WebContent2 Title')]\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent2 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent2 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(\"WC WebContent2 Title\",\n\t\t\tselenium.getValue(\"//input[@id='_15_title_en_US']\"));\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"WC WebContent2 Content\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent2 Content\"),\n\t\t\tselenium.getText(\"//body\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Web Content\",\n\t\t\tRuntimeVariables.replace(\"Web Content\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent3 Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//a[@class='entry-link']/span[contains(.,'WC WebContent3 Title')]\"));\n\t\tselenium.clickAt(\"//a[@class='entry-link']/span[contains(.,'WC WebContent3 Title')]\",\n\t\t\tRuntimeVariables.replace(\"WC WebContent3 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/restore/plugin.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent3 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(\"WC WebContent3 Title\",\n\t\t\tselenium.getValue(\"//input[@id='_15_title_en_US']\"));\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body\", \"WC WebContent3 Content\");\n\t\tassertEquals(RuntimeVariables.replace(\"WC WebContent3 Content\"),\n\t\t\tselenium.getText(\"//body\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"ae8fdd196b1a919e33b0dcb48d09a173e9fee513","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTest(AddWCStructureWebContentLocalizedTests.suite());\n\t\ttestSuite.addTest(AddWCWebContentTests.suite());\n\t\ttestSuite.addTest(EditWCWebContentTests.suite());\n\n\t\treturn testSuite;\n\t}","id":53845,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTest(AddWCStructureWebContentLocalizedTests.suite());\n\t\ttestSuite.addTest(AddWCWebContentTests.suite());\n\t\ttestSuite.addTest(AddWCWebContentsTests.suite());\n\t\ttestSuite.addTest(EditWCWebContentTests.suite());\n\n\t\treturn testSuite;\n\t}","commit_id":"ae8fdd196b1a919e33b0dcb48d09a173e9fee513","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletWD2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"w\"));\n\t\tselenium.waitForVisible(\"//li[@title='Wiki Display']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Wiki Display']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='portlet-layout']/div/div/div/section\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='portlet-layout']/div/div/div/section\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='portlet-layout']/div/div/div[2]/section\");\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='portlet-layout']/div/div/div[2]/section\"));\n\t}","id":53846,"modified_method":"public void testAddPortletWD2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"w\"));\n\t\tselenium.waitForVisible(\"//li[@title='Wiki Display']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Wiki Display']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display\"));\n\t\tselenium.waitForVisible(\"//div[1]/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[1]/section\"));\n\t\tselenium.waitForVisible(\"//div[2]/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[2]/section\"));\n\t}","commit_id":"0c39ded887701e7908982879efe5290c42f0fbcb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletWD3() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"w\"));\n\t\tselenium.waitForVisible(\"//li[@title='Wiki Display']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Wiki Display']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t\tselenium.waitForVisible(\"//div[2]/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[2]/section\"));\n\t\tselenium.waitForVisible(\"//div[3]/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[3]/section\"));\n\t}","id":53847,"modified_method":"public void testAddPortletWD3() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"w\"));\n\t\tselenium.waitForVisible(\"//li[@title='Wiki Display']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Wiki Display']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display\"));\n\t\tselenium.waitForVisible(\"//div[1]/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[1]/section\"));\n\t\tselenium.waitForVisible(\"//div[2]/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[2]/section\"));\n\t\tselenium.waitForVisible(\"//div[3]/section\");\n\t\tassertTrue(selenium.isVisible(\"//div[3]/section\"));\n\t}","commit_id":"0c39ded887701e7908982879efe5290c42f0fbcb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletWD() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"w\"));\n\t\tselenium.waitForVisible(\"//li[@title='Wiki Display']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Wiki Display']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":53848,"modified_method":"public void testAddPortletWD() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"w\"));\n\t\tselenium.waitForVisible(\"//li[@title='Wiki Display']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Wiki Display']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"0c39ded887701e7908982879efe5290c42f0fbcb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddPortletWiki() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"w\"));\n\t\tselenium.waitForVisible(\"//li[@title='Wiki']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Wiki']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","id":53849,"modified_method":"public void testAddPortletWiki() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add\"),\n\t\t\tselenium.getText(\"//li[@id='_145_addContent']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_addContent']/a/span\");\n\t\tselenium.waitForVisible(\"//a[@id='_145_addApplication']\");\n\t\tassertTrue(selenium.isPartialText(\"//a[@id='_145_addApplication']\",\n\t\t\t\t\"More\"));\n\t\tselenium.clickAt(\"//a[@id='_145_addApplication']\",\n\t\t\tRuntimeVariables.replace(\"More\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-live-search/aui-live-search-min.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='layout_configuration_content']\");\n\t\tselenium.sendKeys(\"//input[@id='layout_configuration_content']\",\n\t\t\tRuntimeVariables.replace(\"w\"));\n\t\tselenium.waitForVisible(\"//li[@title='Wiki']/p/a\");\n\t\tselenium.clickAt(\"//li[@title='Wiki']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Add\"));\n\t\tselenium.waitForVisible(\"//section\");\n\t\tassertTrue(selenium.isVisible(\"//section\"));\n\t}","commit_id":"0c39ded887701e7908982879efe5290c42f0fbcb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWDFrontPageChildPage1() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Title\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//a[@title='Paragraph Format']/span\", \"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_off']\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki FrontPage ChildPage1 Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage1 Title')]\"));\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage1 Title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage1 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","id":53850,"modified_method":"public void testAddWDFrontPageChildPage1() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Title\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/wikilink/plugin.js')]\");\n\t\tselenium.waitForText(\"//span[@class='cke_toolbar']/span[contains(.,'Normal')]/a\",\n\t\t\t\"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_off']\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki FrontPage ChildPage1 Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage1 Title')]\"));\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage1 Title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage1 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","commit_id":"0c39ded887701e7908982879efe5290c42f0fbcb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWDFrontPageChildPage2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\t\"Add Child Page\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Title\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//a[@title='Paragraph Format']/span\", \"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_off']\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki FrontPage ChildPage2 Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage2 Title')]\"));\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage2 Title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//h1[@class='header-title']/span\",\n\t\t\t\"Wiki FrontPage ChildPage2 Title\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage2 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","id":53851,"modified_method":"public void testAddWDFrontPageChildPage2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Title\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/wikilink/plugin.js')]\");\n\t\tselenium.waitForText(\"//span[@class='cke_toolbar']/span[contains(.,'Normal')]/a\",\n\t\t\t\"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_off']\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki FrontPage ChildPage2 Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage2 Title')]\"));\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage2 Title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//h1[@class='header-title']/span\",\n\t\t\t\"Wiki FrontPage ChildPage2 Title\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage2 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","commit_id":"0c39ded887701e7908982879efe5290c42f0fbcb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWDFrontPageChildPage3() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage3 Title\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//a[@title='Paragraph Format']/span\", \"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage3 Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_off']\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki FrontPage ChildPage3 Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage3 Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage3 Title')]\"));\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage3 Title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage3 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage3 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage3 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","id":53852,"modified_method":"public void testAddWDFrontPageChildPage3() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage3 Title\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/wikilink/plugin.js')]\");\n\t\tselenium.waitForText(\"//span[@class='cke_toolbar']/span[contains(.,'Normal')]/a\",\n\t\t\t\"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage3 Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_off']\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki FrontPage ChildPage3 Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage3 Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage3 Title')]\"));\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage3 Title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage3 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage3 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage3 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","commit_id":"0c39ded887701e7908982879efe5290c42f0fbcb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWDFrontPageChildPageFormatHTML()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tassertTrue(selenium.isVisible(\"//select\"));\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"HTML\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^You may lose some formatting when switching from Creole to HTML. Do you want to continue[\\\\s\\\\S]$\"));\n\t\tassertEquals(\"HTML\", selenium.getSelectedLabel(\"//select\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//span[@class='cke_toolbar']/span[contains(.,'Normal')]/a\",\n\t\t\t\"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"<a herf=http://www.liferay.com>Welcome to LIFERAY<\/a>\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Welcome to LIFERAY\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//div[@class='child-pages']/ul/li/a\"));\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Welcome to LIFERAY\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"HTML\"),\n\t\t\tselenium.getText(\"//tr[2]/td\"));\n\t}","id":53853,"modified_method":"public void testAddWDFrontPageChildPageFormatHTML()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tassertTrue(selenium.isVisible(\"//select\"));\n\t\tselenium.select(\"//select\", RuntimeVariables.replace(\"HTML\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForConfirmation(\n\t\t\t\"You may lose some formatting when switching from Creole to HTML. Do you want to continue?\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(\"HTML\", selenium.getSelectedLabel(\"//select\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//span[@class='cke_toolbar']/span[contains(.,'Styles')]/a\",\n\t\t\t\"Styles\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"<a herf=http://www.liferay.com>Welcome to LIFERAY<\/a>\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_off']\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Welcome to LIFERAY\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//div[@class='child-pages']/ul/li/a\"));\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Welcome to LIFERAY\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"HTML\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'HTML')]/td[1]\"));\n\t}","commit_id":"0c39ded887701e7908982879efe5290c42f0fbcb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWDFrontPageChildPageNameDuplicate()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//span[@class='cke_toolbar']/span[contains(.,'Normal')]/a\",\n\t\t\t\"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_off']\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki FrontPage ChildPage Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There is already a page with the specified title.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This page does not exist yet. Use the form below to create it.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='child-pages']/ul/li/a)[1]\"));\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"xpath=(//div[@class='child-pages']/ul/li/a)[2]\"));\n\t}","id":53854,"modified_method":"public void testAddWDFrontPageChildPageNameDuplicate()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/wikilink/plugin.js')]\");\n\t\tselenium.waitForText(\"//span[@class='cke_toolbar']/span[contains(.,'Normal')]/a\",\n\t\t\t\"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_off']\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki FrontPage ChildPage Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"There is already a page with the specified title.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This page does not exist yet. Use the form below to create it.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-info']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='child-pages']/ul/li/a)[1]\"));\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"xpath=(//div[@class='child-pages']/ul/li/a)[2]\"));\n\t}","commit_id":"0c39ded887701e7908982879efe5290c42f0fbcb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWDFrontPageChildPageNameInvalid()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Wiki\\\\ Front\\\\ Page\\\\ Child\\\\ Page\\\\ Title\\\\\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//a[@title='Paragraph Format']/span\", \"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Wiki\\\\ Front\\\\ Page\\\\ Child\\\\ Page\\\\ Content\\\\\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki\\\\ Front\\\\ Page\\\\ Child\\\\ Page\\\\ Content\\\\\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid title.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t\tselenium.clickAt(\"link=FrontPage\", RuntimeVariables.replace(\"FrontPage\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki] Front] Page] Child] Page] Title]\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//a[@title='Paragraph Format']/span\", \"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki] Front] Page] Child] Page] Content]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki] Front] Page] Child] Page] Content]\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid title.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t\tselenium.clickAt(\"link=FrontPage\", RuntimeVariables.replace(\"FrontPage\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki[ Front[ Page[ Child[ Page[ Title[\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//a[@title='Paragraph Format']/span\", \"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki[ Front[ Page[ Child[ Page[ Content[\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki[ Front[ Page[ Child[ Page[ Content[\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid title.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t\tselenium.clickAt(\"link=FrontPage\", RuntimeVariables.replace(\"FrontPage\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki; Front; Page; Child; Page; Title;\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//a[@title='Paragraph Format']/span\", \"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki; Front; Page; Child; Page; Content;\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki; Front; Page; Child; Page; Content;\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid title.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t\tselenium.clickAt(\"link=FrontPage\", RuntimeVariables.replace(\"FrontPage\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki: Front: Page: Child: Page: Title:\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//a[@title='Paragraph Format']/span\", \"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki: Front: Page: Child: Page: Content:\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki: Front: Page: Child: Page: Content:\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid title.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t\tselenium.clickAt(\"link=FrontPage\", RuntimeVariables.replace(\"FrontPage\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki| Front| Page| Child| Page| Title|\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//a[@title='Paragraph Format']/span\", \"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki| Front| Page| Child| Page| Content|\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki| Front| Page| Child| Page| Content|\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid title.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t\tselenium.clickAt(\"link=FrontPage\", RuntimeVariables.replace(\"FrontPage\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\"//div[1]/span[1]/a/span\"));\n\t\tselenium.clickAt(\"//div[1]/span[1]/a/span\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki< Front< Page< Child< Page< Title<\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//a[@title='Paragraph Format']/span\", \"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki< Front< Page< Child< Page< Content<\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki< Front< Page< Child< Page< Content<\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid title.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t\tselenium.clickAt(\"link=FrontPage\", RuntimeVariables.replace(\"FrontPage\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki> Front> Page> Child> Page> Title>\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//a[@title='Paragraph Format']/span\", \"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki> Front> Page> Child> Page> Content>\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki> Front> Page> Child> Page> Content>\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid title.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"Children Pages\"));\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//div[@class='child-pages']/ul/li/a\"));\n\t}","id":53855,"modified_method":"public void testAddWDFrontPageChildPageNameInvalid()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Wiki\\\\ Front\\\\ Page\\\\ Child\\\\ Page\\\\ Title\\\\\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/wikilink/plugin.js')]\");\n\t\tselenium.waitForText(\"//span[@class='cke_toolbar']/span[contains(.,'Normal')]/a\",\n\t\t\t\"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Wiki\\\\ Front\\\\ Page\\\\ Child\\\\ Page\\\\ Content\\\\\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki\\\\ Front\\\\ Page\\\\ Child\\\\ Page\\\\ Content\\\\\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid title.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t\tselenium.clickAt(\"link=FrontPage\", RuntimeVariables.replace(\"FrontPage\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki] Front] Page] Child] Page] Title]\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/wikilink/plugin.js')]\");\n\t\tselenium.waitForText(\"//span[@class='cke_toolbar']/span[contains(.,'Normal')]/a\",\n\t\t\t\"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki] Front] Page] Child] Page] Content]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki] Front] Page] Child] Page] Content]\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid title.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t\tselenium.clickAt(\"link=FrontPage\", RuntimeVariables.replace(\"FrontPage\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki[ Front[ Page[ Child[ Page[ Title[\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/wikilink/plugin.js')]\");\n\t\tselenium.waitForText(\"//span[@class='cke_toolbar']/span[contains(.,'Normal')]/a\",\n\t\t\t\"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki[ Front[ Page[ Child[ Page[ Content[\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki[ Front[ Page[ Child[ Page[ Content[\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid title.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t\tselenium.clickAt(\"link=FrontPage\", RuntimeVariables.replace(\"FrontPage\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki; Front; Page; Child; Page; Title;\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/wikilink/plugin.js')]\");\n\t\tselenium.waitForText(\"//span[@class='cke_toolbar']/span[contains(.,'Normal')]/a\",\n\t\t\t\"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki; Front; Page; Child; Page; Content;\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki; Front; Page; Child; Page; Content;\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid title.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t\tselenium.clickAt(\"link=FrontPage\", RuntimeVariables.replace(\"FrontPage\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki: Front: Page: Child: Page: Title:\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/wikilink/plugin.js')]\");\n\t\tselenium.waitForText(\"//span[@class='cke_toolbar']/span[contains(.,'Normal')]/a\",\n\t\t\t\"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki: Front: Page: Child: Page: Content:\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki: Front: Page: Child: Page: Content:\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid title.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t\tselenium.clickAt(\"link=FrontPage\", RuntimeVariables.replace(\"FrontPage\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki| Front| Page| Child| Page| Title|\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/wikilink/plugin.js')]\");\n\t\tselenium.waitForText(\"//span[@class='cke_toolbar']/span[contains(.,'Normal')]/a\",\n\t\t\t\"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki| Front| Page| Child| Page| Content|\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki| Front| Page| Child| Page| Content|\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid title.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t\tselenium.clickAt(\"link=FrontPage\", RuntimeVariables.replace(\"FrontPage\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\"//div[1]/span[1]/a/span\"));\n\t\tselenium.clickAt(\"//div[1]/span[1]/a/span\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki< Front< Page< Child< Page< Title<\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/wikilink/plugin.js')]\");\n\t\tselenium.waitForText(\"//span[@class='cke_toolbar']/span[contains(.,'Normal')]/a\",\n\t\t\t\"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki< Front< Page< Child< Page< Content<\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki< Front< Page< Child< Page< Content<\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid title.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t\tselenium.clickAt(\"link=FrontPage\", RuntimeVariables.replace(\"FrontPage\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki> Front> Page> Child> Page> Title>\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/wikilink/plugin.js')]\");\n\t\tselenium.waitForText(\"//span[@class='cke_toolbar']/span[contains(.,'Normal')]/a\",\n\t\t\t\"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki> Front> Page> Child> Page> Content>\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki> Front> Page> Child> Page> Content>\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid title.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"Children Pages\"));\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//div[@class='child-pages']/ul/li/a\"));\n\t}","commit_id":"0c39ded887701e7908982879efe5290c42f0fbcb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWDFrontPageChildPageNameNull() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//a[@title='Paragraph Format']/span\", \"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage Child Page Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki FrontPage Child Page Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid title.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"Children Pages\"));\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//div[@class='child-pages']/ul/li/a\"));\n\t}","id":53856,"modified_method":"public void testAddWDFrontPageChildPageNameNull() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/wikilink/plugin.js')]\");\n\t\tselenium.waitForText(\"//span[@class='cke_toolbar']/span[contains(.,'Normal')]/a\",\n\t\t\t\"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage Child Page Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki FrontPage Child Page Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request failed to complete.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter a valid title.\"),\n\t\t\tselenium.getText(\"xPath=(//div[@class='portlet-msg-error'])[2]\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"Children Pages\"));\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//div[@class='child-pages']/ul/li/a\"));\n\t}","commit_id":"0c39ded887701e7908982879efe5290c42f0fbcb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWDFrontPageChildPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//a[@title='Paragraph Format']/span\", \"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_off']\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki FrontPage ChildPage Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//div[@class='child-pages']/ul/li/a\"));\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//h1[@class='header-title']/span\",\n\t\t\t\"Wiki FrontPage ChildPage Title\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","id":53857,"modified_method":"public void testAddWDFrontPageChildPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/wikilink/plugin.js')]\");\n\t\tselenium.waitForText(\"//span[@class='cke_toolbar']/span[contains(.,'Normal')]/a\",\n\t\t\t\"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_off']\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//div[@class='child-pages']/ul/li/a\"));\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//h1[@class='header-title']/span\",\n\t\t\t\"Wiki FrontPage ChildPage Title\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","commit_id":"0c39ded887701e7908982879efe5290c42f0fbcb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWikiFrontPage1() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"link=Wiki Node1 Name\");\n\t\tselenium.clickAt(\"link=Wiki Node1 Name\",\n\t\t\tRuntimeVariables.replace(\"Wiki Node1 Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This page is empty. Edit it to add some text.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/div/a\"));\n\t\tselenium.clickAt(\"//div[@class='wiki-body']/div/a\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This page is empty. Edit it to add some text.\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage1 Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki FrontPage1 Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage1 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","id":53858,"modified_method":"public void testAddWikiFrontPage1() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//ul[@class='top-links-nodes']/li[contains(.,'Wiki Node1 Name')]/a\");\n\t\tselenium.clickAt(\"//ul[@class='top-links-nodes']/li[contains(.,'Wiki Node1 Name')]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki Node1 Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This page is empty. Edit it to add some text.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/div/a\"));\n\t\tselenium.clickAt(\"//div[@class='wiki-body']/div/a\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This page is empty. Edit it to add some text.\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/wikilink/plugin.js')]\");\n\t\tselenium.waitForText(\"//span[@class='cke_toolbar']/span[contains(.,'Normal')]/a\",\n\t\t\t\"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage1 Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_off']\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage1 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","commit_id":"0c39ded887701e7908982879efe5290c42f0fbcb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWikiFrontPage2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"link=Wiki Node2 Name\");\n\t\tselenium.clickAt(\"link=Wiki Node2 Name\",\n\t\t\tRuntimeVariables.replace(\"Wiki Node2 Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This page is empty. Edit it to add some text.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/div/a\"));\n\t\tselenium.clickAt(\"//div[@class='wiki-body']/div/a\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This page is empty. Edit it to add some text.\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage2 Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki FrontPage2 Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage2 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","id":53859,"modified_method":"public void testAddWikiFrontPage2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//ul[@class='top-links-nodes']/li[contains(.,'Wiki Node2 Name')]/a\");\n\t\tselenium.clickAt(\"//ul[@class='top-links-nodes']/li[contains(.,'Wiki Node2 Name')]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki Node2 Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This page is empty. Edit it to add some text.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/div/a\"));\n\t\tselenium.clickAt(\"//div[@class='wiki-body']/div/a\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This page is empty. Edit it to add some text.\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/wikilink/plugin.js')]\");\n\t\tselenium.waitForText(\"//span[@class='cke_toolbar']/span[contains(.,'Normal')]/a\",\n\t\t\t\"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage2 Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_off']\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage2 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","commit_id":"0c39ded887701e7908982879efe5290c42f0fbcb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWikiFrontPage3() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"link=Wiki Node3 Name\");\n\t\tselenium.clickAt(\"link=Wiki Node3 Name\",\n\t\t\tRuntimeVariables.replace(\"Wiki Node3 Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This page is empty. Edit it to add some text.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/div/a\"));\n\t\tselenium.clickAt(\"//div[@class='wiki-body']/div/a\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This page is empty. Edit it to add some text.\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage3 Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki FrontPage3 Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage3 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","id":53860,"modified_method":"public void testAddWikiFrontPage3() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//ul[@class='top-links-nodes']/li[contains(.,'Wiki Node3 Name')]/a\");\n\t\tselenium.clickAt(\"//ul[@class='top-links-nodes']/li[contains(.,'Wiki Node3 Name')]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki Node3 Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This page is empty. Edit it to add some text.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/div/a\"));\n\t\tselenium.clickAt(\"//div[@class='wiki-body']/div/a\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This page is empty. Edit it to add some text.\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/wikilink/plugin.js')]\");\n\t\tselenium.waitForText(\"//span[@class='cke_toolbar']/span[contains(.,'Normal')]/a\",\n\t\t\t\"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage3 Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_off']\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage3 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","commit_id":"0c39ded887701e7908982879efe5290c42f0fbcb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWikiNode1() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki\"),\n\t\t\tselenium.getText(\"//ul[@class='category-portlets']/li[11]/a\"));\n\t\tselenium.clickAt(\"//ul[@class='category-portlets']/li[11]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Wiki']\",\n\t\t\tRuntimeVariables.replace(\"Add Wiki\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_154_name']\",\n\t\t\tRuntimeVariables.replace(\"Wiki Node1 Name\"));\n\t\tselenium.type(\"//textarea[@id='_154_description']\",\n\t\t\tRuntimeVariables.replace(\"Wiki Node1 Description\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Node1 Name\"),\n\t\t\tselenium.getText(\"//tr[4]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0\"),\n\t\t\tselenium.getText(\"//tr[4]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//tr[4]/td[3]/a\"));\n\t}","id":53861,"modified_method":"public void testAddWikiNode1() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='category-portlets']/li[contains(.,'Wiki')]/a\"));\n\t\tselenium.clickAt(\"//ul[@class='category-portlets']/li[contains(.,'Wiki')]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Wiki']\",\n\t\t\tRuntimeVariables.replace(\"Add Wiki\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_154_name']\",\n\t\t\tRuntimeVariables.replace(\"Wiki Node1 Name\"));\n\t\tselenium.type(\"//textarea[@id='_154_description']\",\n\t\t\tRuntimeVariables.replace(\"Wiki Node1 Description\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Node1 Name\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Wiki Node1 Name')]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Wiki Node1 Name')]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Wiki Node1 Name')]/td[3]/a\"));\n\t}","commit_id":"0c39ded887701e7908982879efe5290c42f0fbcb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWikiNode2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki\"),\n\t\t\tselenium.getText(\"//ul[@class='category-portlets']/li[11]/a\"));\n\t\tselenium.clickAt(\"//ul[@class='category-portlets']/li[11]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Wiki']\",\n\t\t\tRuntimeVariables.replace(\"Add Wiki\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_154_name']\",\n\t\t\tRuntimeVariables.replace(\"Wiki Node2 Name\"));\n\t\tselenium.type(\"//textarea[@id='_154_description']\",\n\t\t\tRuntimeVariables.replace(\"Wiki Node2 Description\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Node1 Name\"),\n\t\t\tselenium.getText(\"//tr[4]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0\"),\n\t\t\tselenium.getText(\"//tr[4]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//tr[4]/td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Node2 Name\"),\n\t\t\tselenium.getText(\"//tr[5]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0\"),\n\t\t\tselenium.getText(\"//tr[5]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//tr[5]/td[3]/a\"));\n\t}","id":53862,"modified_method":"public void testAddWikiNode2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='category-portlets']/li[contains(.,'Wiki')]/a\"));\n\t\tselenium.clickAt(\"//ul[@class='category-portlets']/li[contains(.,'Wiki')]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Wiki']\",\n\t\t\tRuntimeVariables.replace(\"Add Wiki\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_154_name']\",\n\t\t\tRuntimeVariables.replace(\"Wiki Node2 Name\"));\n\t\tselenium.type(\"//textarea[@id='_154_description']\",\n\t\t\tRuntimeVariables.replace(\"Wiki Node2 Description\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Node1 Name\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Wiki Node1 Name')]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Wiki Node1 Name')]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Wiki Node1 Name')]/td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Node2 Name\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Wiki Node2 Name')]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Wiki Node2 Name')]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Wiki Node2 Name')]/td[3]/a\"));\n\t}","commit_id":"0c39ded887701e7908982879efe5290c42f0fbcb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddWikiNode3() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki\"),\n\t\t\tselenium.getText(\"//ul[@class='category-portlets']/li[11]/a\"));\n\t\tselenium.clickAt(\"//ul[@class='category-portlets']/li[11]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Wiki']\",\n\t\t\tRuntimeVariables.replace(\"Add Wiki\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_154_name']\",\n\t\t\tRuntimeVariables.replace(\"Wiki Node3 Name\"));\n\t\tselenium.type(\"//textarea[@id='_154_description']\",\n\t\t\tRuntimeVariables.replace(\"Wiki Node3 Description\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Node1 Name\"),\n\t\t\tselenium.getText(\"//tr[4]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0\"),\n\t\t\tselenium.getText(\"//tr[4]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//tr[4]/td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Node2 Name\"),\n\t\t\tselenium.getText(\"//tr[5]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0\"),\n\t\t\tselenium.getText(\"//tr[5]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//tr[5]/td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Node3 Name\"),\n\t\t\tselenium.getText(\"//tr[6]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0\"),\n\t\t\tselenium.getText(\"//tr[6]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//tr[6]/td[3]/a\"));\n\t}","id":53863,"modified_method":"public void testAddWikiNode3() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='category-portlets']/li[contains(.,'Wiki')]/a\"));\n\t\tselenium.clickAt(\"//ul[@class='category-portlets']/li[contains(.,'Wiki')]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Wiki']\",\n\t\t\tRuntimeVariables.replace(\"Add Wiki\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_154_name']\",\n\t\t\tRuntimeVariables.replace(\"Wiki Node3 Name\"));\n\t\tselenium.type(\"//textarea[@id='_154_description']\",\n\t\t\tRuntimeVariables.replace(\"Wiki Node3 Description\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Node1 Name\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Wiki Node1 Name')]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Wiki Node1 Name')]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Wiki Node1 Name')]/td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Node2 Name\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Wiki Node2 Name')]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Wiki Node2 Name')]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Wiki Node2 Name')]/td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki Node3 Name\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Wiki Node3 Name')]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Wiki Node3 Name')]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Wiki Node3 Name')]/td[3]/a\"));\n\t}","commit_id":"0c39ded887701e7908982879efe5290c42f0fbcb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCancelAddWDFrontPageChildPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki FrontPage ChildPage Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Cancel']\",\n\t\t\tRuntimeVariables.replace(\"Cancel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki FrontPage Child Page Title\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki FrontPage Child Page Content\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"Children Pages\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki FrontPage ChildPage Title\"));\n\t}","id":53864,"modified_method":"public void testCancelAddWDFrontPageChildPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/wikilink/plugin.js')]\");\n\t\tselenium.waitForText(\"//span[@class='cke_toolbar']/span[contains(.,'Normal')]/a\",\n\t\t\t\"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_off']\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki FrontPage ChildPage Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Cancel']\",\n\t\t\tRuntimeVariables.replace(\"Cancel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki FrontPage Child Page Title\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki FrontPage Child Page Content\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"Children Pages\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki FrontPage ChildPage Title\"));\n\t}","commit_id":"0c39ded887701e7908982879efe5290c42f0fbcb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testChangeParentWDFrontPageChildPageToNone()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\"//div[@class='child-pages']/ul/li/a\");\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//h1[@class='header-title']/span\",\n\t\t\t\"Wiki FrontPage ChildPage Title\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back to FrontPage\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Move\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='lfr-component taglib-icon-list']/li/a/span[contains(.,'Move')]\"));\n\t\tselenium.clickAt(\"//ul[@class='lfr-component taglib-icon-list']/li/a/span[contains(.,'Move')]\",\n\t\t\tRuntimeVariables.replace(\"Move\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Change Parent\",\n\t\t\tRuntimeVariables.replace(\"Change Parent\"));\n\t\tselenium.waitForVisible(\"//select[contains(@id,'newParentTitle')]\");\n\t\tselenium.select(\"//select[contains(@id,'newParentTitle')]\",\n\t\t\tRuntimeVariables.replace(\"None\"));\n\t\tselenium.clickAt(\"//input[@value='Change Parent']\",\n\t\t\tRuntimeVariables.replace(\"Change Parent\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"Children Pages\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\"link=All Pages\");\n\t\tselenium.clickAt(\"link=All Pages\", RuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'Wiki FrontPage ChildPage Title')]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Approved\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'Wiki FrontPage ChildPage Title')]/td[2]/a\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//tr[contains(.,'Wiki FrontPage ChildPage Title')]/td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'Wiki FrontPage ChildPage Title')]/td[4]/a\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//tr[contains(.,'Wiki FrontPage ChildPage Title')]/td[5]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'Wiki FrontPage ChildPage Title')]/td[6]/span/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'Wiki FrontPage ChildPage Title')]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertFalse(selenium.isTextPresent(\"\\u00ab Back to FrontPage\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","id":53865,"modified_method":"public void testChangeParentWDFrontPageChildPageToNone()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\"//div[@class='child-pages']/ul/li/a\");\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//h1[@class='header-title']/span\",\n\t\t\t\"Wiki FrontPage ChildPage Title\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back to FrontPage\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Move\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='lfr-component taglib-icon-list']/li/a/span[contains(.,'Move')]\"));\n\t\tselenium.clickAt(\"//ul[@class='lfr-component taglib-icon-list']/li/a/span[contains(.,'Move')]\",\n\t\t\tRuntimeVariables.replace(\"Move\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Change Parent\",\n\t\t\tRuntimeVariables.replace(\"Change Parent\"));\n\t\tselenium.waitForVisible(\"//select[contains(@id,'newParentTitle')]\");\n\t\tselenium.select(\"//select[contains(@id,'newParentTitle')]\",\n\t\t\tRuntimeVariables.replace(\"None\"));\n\t\tselenium.clickAt(\"//input[@value='Change Parent']\",\n\t\t\tRuntimeVariables.replace(\"Change Parent\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"Children Pages\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=All Pages\", RuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'Wiki FrontPage ChildPage Title')]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Approved\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'Wiki FrontPage ChildPage Title')]/td[2]/a\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//tr[contains(.,'Wiki FrontPage ChildPage Title')]/td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'Wiki FrontPage ChildPage Title')]/td[4]/a\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//tr[contains(.,'Wiki FrontPage ChildPage Title')]/td[5]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'Wiki FrontPage ChildPage Title')]/td[6]/span/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'Wiki FrontPage ChildPage Title')]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertFalse(selenium.isTextPresent(\"\\u00ab Back to FrontPage\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","commit_id":"0c39ded887701e7908982879efe5290c42f0fbcb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCompareVersionEditWikiFrontPageMinorChange()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=History\", RuntimeVariables.replace(\"History\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"1.2 (Minor Edit)\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.1\"),\n\t\t\tselenium.getText(\"//tr[4]/td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.0 (Minor Edit)\"),\n\t\t\tselenium.getText(\"//tr[5]/td[4]/a\"));\n\t\tassertFalse(selenium.isChecked(\"//td[1]/input\"));\n\t\tselenium.check(\"//td[1]/input\");\n\t\tassertTrue(selenium.isChecked(\"//td[1]/input\"));\n\t\tassertFalse(selenium.isChecked(\"//tr[4]/td[1]/input\"));\n\t\tselenium.check(\"//tr[4]/td[1]/input\");\n\t\tassertTrue(selenium.isChecked(\"//tr[4]/td[1]/input\"));\n\t\tassertFalse(selenium.isChecked(\"//tr[5]/td[1]/input\"));\n\t\tselenium.clickAt(\"//input[@value='Compare Versions']\",\n\t\t\tRuntimeVariables.replace(\"Compare Versions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Comparing Versions 1.1 and 1.2 (Last Version)\"),\n\t\t\tselenium.getText(\"//span[@class='central-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content Edit\"),\n\t\t\tselenium.getText(\"//p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\"//span[@class='diff-html-added']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Text Mode\"),\n\t\t\tselenium.getText(\"//a[@class='change-mode']\"));\n\t\tselenium.clickAt(\"//a[@class='change-mode']\",\n\t\t\tRuntimeVariables.replace(\"Text Mode\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage 1.1\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"xPath=(//table[@id='taglib-diff-results']/tbody/tr/td)[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage 1.2\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"xPath=(//table[@id='taglib-diff-results']/tbody/tr/td)[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"xPath=(//table[@class='taglib-diff-table']/tbody/tr/td)[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"xPath=(//table[@class='taglib-diff-table']/tbody/tr/td)[2]\"));\n\t}","id":53866,"modified_method":"public void testCompareVersionEditWikiFrontPageMinorChange()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=History\", RuntimeVariables.replace(\"History\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"1.2 (Minor Edit)\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'1.2 (Minor Edit)')]/td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.1\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'1.1')]/td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.0 (Minor Edit)\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'1.0 (Minor Edit)')]/td[4]/a\"));\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//tr[contains(.,'1.2 (Minor Edit)')]/td[1]/input\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'1.2 (Minor Edit)')]/td[1]/input\",\n\t\t\tRuntimeVariables.replace(\"1.2 (Minor Edit)\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//tr[contains(.,'1.2 (Minor Edit)')]/td[1]/input\"));\n\t\tassertFalse(selenium.isChecked(\"//tr[contains(.,'1.1')]/td[1]/input\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'1.1')]/td[1]/input\",\n\t\t\tRuntimeVariables.replace(\"1.1\"));\n\t\tassertTrue(selenium.isChecked(\"//tr[contains(.,'1.1')]/td[1]/input\"));\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//tr[contains(.,'1.0 (Minor Edit)')]/td[1]/input\"));\n\t\tselenium.clickAt(\"//input[@value='Compare Versions']\",\n\t\t\tRuntimeVariables.replace(\"Compare Versions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Comparing Versions 1.1 and 1.2 (Last Version)\"),\n\t\t\tselenium.getText(\"//span[@class='central-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content Edit\"),\n\t\t\tselenium.getText(\"//p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\"//span[@class='diff-html-added']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Text Mode\"),\n\t\t\tselenium.getText(\"//a[@class='change-mode']\"));\n\t\tselenium.clickAt(\"//a[@class='change-mode']\",\n\t\t\tRuntimeVariables.replace(\"Text Mode\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage 1.1\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"xPath=(//table[@id='taglib-diff-results']/tbody/tr/td)[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage 1.2\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"xPath=(//table[@id='taglib-diff-results']/tbody/tr/td)[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"xPath=(//table[@class='taglib-diff-table']/tbody/tr/td)[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"xPath=(//table[@class='taglib-diff-table']/tbody/tr/td)[2]\"));\n\t}","commit_id":"0c39ded887701e7908982879efe5290c42f0fbcb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCompareVersionEditWikiFrontPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\");\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\"link=History\");\n\t\tselenium.clickAt(\"link=History\", RuntimeVariables.replace(\"History\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"1.2\"),\n\t\t\tselenium.getText(\"//tr[3]/td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.1\"),\n\t\t\tselenium.getText(\"//tr[4]/td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.0 (Minor Edit)\"),\n\t\t\tselenium.getText(\"//tr[5]/td[4]/a\"));\n\t\tassertFalse(selenium.isChecked(\"//tr[3]/td[1]/input\"));\n\t\tselenium.check(\"//tr[3]/td[1]/input\");\n\t\tassertTrue(selenium.isChecked(\"//tr[3]/td[1]/input\"));\n\t\tassertFalse(selenium.isChecked(\"//tr[4]/td[1]/input\"));\n\t\tselenium.check(\"//tr[4]/td[1]/input\");\n\t\tassertTrue(selenium.isChecked(\"//tr[4]/td[1]/input\"));\n\t\tassertFalse(selenium.isChecked(\"//tr[5]/td[1]/input\"));\n\t\tselenium.clickAt(\"//input[@value='Compare Versions']\",\n\t\t\tRuntimeVariables.replace(\"Compare Versions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Comparing Versions 1.1 and 1.2 (Last Version)\"),\n\t\t\tselenium.getText(\"//span[@class='central-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content Edit\"),\n\t\t\tselenium.getText(\"//p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\"//span[@class='diff-html-added']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Text Mode\"),\n\t\t\tselenium.getText(\"//a[@class='change-mode']\"));\n\t\tselenium.clickAt(\"//a[@class='change-mode']\",\n\t\t\tRuntimeVariables.replace(\"Text Mode\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage 1.1\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"xPath=(//table[@id='taglib-diff-results']/tbody/tr/td)[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage 1.2\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"xPath=(//table[@id='taglib-diff-results']/tbody/tr/td)[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"xPath=(//table[@class='taglib-diff-table']/tbody/tr/td)[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"xPath=(//table[@class='taglib-diff-table']/tbody/tr/td)[2]\"));\n\t}","id":53867,"modified_method":"public void testCompareVersionEditWikiFrontPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\");\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=History\", RuntimeVariables.replace(\"History\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"1.2\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'1.2')]/td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.1\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'1.1')]/td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.0 (Minor Edit)\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'1.0 (Minor Edit)')]/td[4]/a\"));\n\t\tassertFalse(selenium.isChecked(\"//tr[contains(.,'1.2')]/td[1]/input\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'1.2')]/td[1]/input\",\n\t\t\tRuntimeVariables.replace(\"1.2\"));\n\t\tassertTrue(selenium.isChecked(\"//tr[contains(.,'1.2')]/td[1]/input\"));\n\t\tassertFalse(selenium.isChecked(\"//tr[contains(.,'1.1')]/td[1]/input\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'1.1')]/td[1]/input\",\n\t\t\tRuntimeVariables.replace(\"1.1\"));\n\t\tassertTrue(selenium.isChecked(\"//tr[contains(.,'1.1')]/td[1]/input\"));\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//tr[contains(.,'1.0 (Minor Edit)')]/td[1]/input\"));\n\t\tselenium.clickAt(\"//input[@value='Compare Versions']\",\n\t\t\tRuntimeVariables.replace(\"Compare Versions\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Comparing Versions 1.1 and 1.2 (Last Version)\"),\n\t\t\tselenium.getText(\"//span[@class='central-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content Edit\"),\n\t\t\tselenium.getText(\"//p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\"//span[@class='diff-html-added']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Text Mode\"),\n\t\t\tselenium.getText(\"//a[@class='change-mode']\"));\n\t\tselenium.clickAt(\"//a[@class='change-mode']\",\n\t\t\tRuntimeVariables.replace(\"Text Mode\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage 1.1\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"xPath=(//table[@id='taglib-diff-results']/tbody/tr/td)[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage 1.2\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"xPath=(//table[@id='taglib-diff-results']/tbody/tr/td)[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"xPath=(//table[@class='taglib-diff-table']/tbody/tr/td)[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"xPath=(//table[@class='taglib-diff-table']/tbody/tr/td)[2]\"));\n\t}","commit_id":"0c39ded887701e7908982879efe5290c42f0fbcb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testConfigurePortletWDScopeCurrentPage()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\"//iFrame\");\n\t\tselenium.selectFrame(\"//iFrame\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"link=Scope\");\n\t\tselenium.clickAt(\"link=Scope\", RuntimeVariables.replace(\"Scope\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.select(\"//select[@id='_86_scopeType']\",\n\t\t\tRuntimeVariables.replace(\"Select Page\"));\n\t\tselenium.waitForVisible(\"//select[contains(@id,'_86_scopeLayout')]\");\n\t\tselenium.select(\"//select[contains(@id,'_86_scopeLayout')]\",\n\t\t\tRuntimeVariables.replace(\"Current Page (Wiki Display Test Page)\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Select Page\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_scopeType']\"));\n\t\tassertEquals(\"Current Page (Wiki Display Test Page)\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[contains(@id,'_86_scopeLayout')]\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":53868,"modified_method":"public void testConfigurePortletWDScopeCurrentPage()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.clickAt(\"link=Scope\", RuntimeVariables.replace(\"Scope\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_scopeType']\");\n\t\tselenium.select(\"//select[@id='_86_scopeType']\",\n\t\t\tRuntimeVariables.replace(\"Select Page\"));\n\t\tselenium.waitForVisible(\"//select[contains(@id,'_86_scopeLayout')]\");\n\t\tselenium.select(\"//select[contains(@id,'_86_scopeLayout')]\",\n\t\t\tRuntimeVariables.replace(\"Current Page (Wiki Display Test Page)\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Select Page\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_scopeType']\"));\n\t\tassertEquals(\"Current Page (Wiki Display Test Page)\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[contains(@id,'_86_scopeLayout')]\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"0c39ded887701e7908982879efe5290c42f0fbcb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testCopyWDFrontPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Copy\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='lfr-component taglib-icon-list']/li/a/span[contains(.,'Copy')]\"));\n\t\tselenium.clickAt(\"//ul[@class='lfr-component taglib-icon-list']/li/a/span[contains(.,'Copy')]\",\n\t\t\tRuntimeVariables.replace(\"Copy\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tselenium.type(\"//input[contains(@id,'title')]\",\n\t\t\tRuntimeVariables.replace(\"FrontPage2\"));\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'All Pages')]\"));\n\t\tselenium.clickAt(\"//ul[@class='top-links-navigation']/li/span[contains(.,'All Pages')]/a\",\n\t\t\tRuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage2\"),\n\t\t\tselenium.getText(\"//tr[4]/td[1]/a\"));\n\t\tselenium.clickAt(\"//tr[4]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"FrontPage2\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage2\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","id":53869,"modified_method":"public void testCopyWDFrontPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Copy\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='lfr-component taglib-icon-list']/li/a/span[contains(.,'Copy')]\"));\n\t\tselenium.clickAt(\"//ul[@class='lfr-component taglib-icon-list']/li/a/span[contains(.,'Copy')]\",\n\t\t\tRuntimeVariables.replace(\"Copy\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tselenium.type(\"//input[contains(@id,'title')]\",\n\t\t\tRuntimeVariables.replace(\"FrontPage2\"));\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'All Pages')]\"));\n\t\tselenium.clickAt(\"//ul[@class='top-links-navigation']/li/span[contains(.,'All Pages')]/a\",\n\t\t\tRuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage2\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'FrontPage2')]/td[1]/a\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'FrontPage2')]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"FrontPage2\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage2\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","commit_id":"0c39ded887701e7908982879efe5290c42f0fbcb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testDeleteWDFrontPageChildPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Children Pages\"),\n\t\t\tselenium.getText(\"//div[@class='child-pages']/h2\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//div[@class='child-pages']/ul/li/a\"));\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\");\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//ul[@class='lfr-component taglib-icon-list']/li/a[contains(.,'Delete')]\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//ul[@class='lfr-component taglib-icon-list']/li/a[contains(.,'Delete')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\t\tassertFalse(selenium.isTextPresent(\"Children Pages\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki FrontPage ChildPage Title\"));\n\t}","id":53870,"modified_method":"public void testDeleteWDFrontPageChildPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Children Pages\"),\n\t\t\tselenium.getText(\"//div[@class='child-pages']/h2\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//div[@class='child-pages']/ul/li/a\"));\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\");\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\n\t\t\t\"//ul[@class='lfr-component taglib-icon-list']/li/a[contains(.,'Delete')]\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//ul[@class='lfr-component taglib-icon-list']/li/a[contains(.,'Delete')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForConfirmation(\n\t\t\t\"Are you sure you want to delete this? It will be deleted immediately.\");\n\t\tassertFalse(selenium.isTextPresent(\"Children Pages\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki FrontPage ChildPage Title\"));\n\t}","commit_id":"0c39ded887701e7908982879efe5290c42f0fbcb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditWikiFrontPageMinorChange() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//div[@class='wiki-body']/p\",\n\t\t\t\"Wiki FrontPage Content\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\",\n\t\t\tRuntimeVariables.replace(\"Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage Content Edit\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki FrontPage Content Edit\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[contains(@id,'_minorEditCheckbox')]\"));\n\t\tselenium.clickAt(\"//input[contains(@id,'_minorEditCheckbox')]\",\n\t\t\tRuntimeVariables.replace(\"This is a minor edit.\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[contains(@id,'_minorEditCheckbox')]\"));\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content Edit\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertNotEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=History\", RuntimeVariables.replace(\"History\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"1.2 (Minor Edit)\"),\n\t\t\tselenium.getText(\"//tr[3]/td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.1\"),\n\t\t\tselenium.getText(\"//tr[4]/td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.0 (Minor Edit)\"),\n\t\t\tselenium.getText(\"//tr[5]/td[4]/a\"));\n\t}","id":53871,"modified_method":"public void testEditWikiFrontPageMinorChange() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//div[@class='wiki-body']/p\",\n\t\t\t\"Wiki FrontPage Content\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\",\n\t\t\tRuntimeVariables.replace(\"Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/wikilink/plugin.js')]\");\n\t\tselenium.waitForText(\"//span[@class='cke_toolbar']/span[contains(.,'Format')]/a\",\n\t\t\t\"Format\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage Content Edit\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_off']\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki FrontPage Content Edit\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\"//input[contains(@id,'_minorEditCheckbox')]\"));\n\t\tselenium.clickAt(\"//input[contains(@id,'_minorEditCheckbox')]\",\n\t\t\tRuntimeVariables.replace(\"This is a minor edit.\"));\n\t\tassertTrue(selenium.isChecked(\n\t\t\t\t\"//input[contains(@id,'_minorEditCheckbox')]\"));\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content Edit\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertNotEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=History\", RuntimeVariables.replace(\"History\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"1.2 (Minor Edit)\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'1.2 (Minor Edit)')]/td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.1\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'1.1')]/td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.0 (Minor Edit)\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'1.0 (Minor Edit)')]/td[4]/a\"));\n\t}","commit_id":"0c39ded887701e7908982879efe5290c42f0fbcb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditWikiFrontPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\",\n\t\t\tRuntimeVariables.replace(\"Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//span[@class='cke_toolbar']/span[contains(.,'Format')]/a\",\n\t\t\t\"Format\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage Content Edit\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki FrontPage Content Edit\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content Edit\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertNotEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\");\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\"link=History\");\n\t\tselenium.clickAt(\"link=History\", RuntimeVariables.replace(\"History\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"1.2\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.1\"),\n\t\t\tselenium.getText(\"//tr[4]/td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.0 (Minor Edit)\"),\n\t\t\tselenium.getText(\"//tr[5]/td[4]/a\"));\n\t}","id":53872,"modified_method":"public void testEditWikiFrontPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//div[@class='wiki-body']/p\",\n\t\t\t\"Wiki FrontPage Content\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\",\n\t\t\tRuntimeVariables.replace(\"Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/wikilink/plugin.js')]\");\n\t\tselenium.waitForText(\"//span[@class='cke_toolbar']/span[contains(.,'Format')]/a\",\n\t\t\t\"Format\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage Content Edit\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_off']\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki FrontPage Content Edit\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content Edit\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertNotEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\");\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\"link=History\");\n\t\tselenium.clickAt(\"link=History\", RuntimeVariables.replace(\"History\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"1.2\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'1.2')]/td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.1\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'1.1')]/td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.0 (Minor Edit)\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'1.0 (Minor Edit)')]/td[4]/a\"));\n\t}","commit_id":"0c39ded887701e7908982879efe5290c42f0fbcb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testLinkWDFrontPageChildPageToWDFrontPageChildPage()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage2 Title')]\",\n\t\t\t\"Wiki FrontPage ChildPage2 Title\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage2 Title')]\"));\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage2 Title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"Wiki FrontPage Child Page1 Title\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\",\n\t\t\tRuntimeVariables.replace(\"Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tselenium.waitForText(\"//span[@class='cke_toolbar']/span[contains(.,'Format')]/a\",\n\t\t\t\"Format\");\n\t\tselenium.waitForText(\"//span[.='Source']\", \"Source\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage2 Content\\n\\n[[Wiki FrontPage ChildPage1 Title]]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForPartialText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki FrontPage ChildPage2 Content\");\n\t\tselenium.waitForPartialText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p[2]\",\n\t\t\t\"Wiki FrontPage ChildPage1 Title\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Title\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p/a\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage2 Title')]\",\n\t\t\t\"Wiki FrontPage ChildPage2 Title\");\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage2 Title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//div[@class='wiki-body']/p/a\",\n\t\t\t\"Wiki FrontPage ChildPage1 Title\");\n\t\tselenium.clickAt(\"//div[@class='wiki-body']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage1 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","id":53873,"modified_method":"public void testLinkWDFrontPageChildPageToWDFrontPageChildPage()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage2 Title')]\"));\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage2 Title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"Wiki FrontPage Child Page1 Title\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\",\n\t\t\tRuntimeVariables.replace(\"Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/wikilink/plugin.js')]\");\n\t\tselenium.waitForText(\"//span[@class='cke_toolbar']/span[contains(.,'Format')]/a\",\n\t\t\t\"Format\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage2 Content\\n\\n[[Wiki FrontPage ChildPage1 Title]]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_off']\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForPartialText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki FrontPage ChildPage2 Content\");\n\t\tselenium.waitForPartialText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p[2]\",\n\t\t\t\"Wiki FrontPage ChildPage1 Title\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Title\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p/a\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage2 Title')]\",\n\t\t\t\"Wiki FrontPage ChildPage2 Title\");\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a[contains(.,'Wiki FrontPage ChildPage2 Title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//div[@class='wiki-body']/p/a\",\n\t\t\t\"Wiki FrontPage ChildPage1 Title\");\n\t\tselenium.clickAt(\"//div[@class='wiki-body']/p/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage1 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","commit_id":"0c39ded887701e7908982879efe5290c42f0fbcb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testPreviewWDFrontPageChildPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki FrontPage ChildPage Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Preview']\",\n\t\t\tRuntimeVariables.replace(\"Preview\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Content\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='preview']/div[@class='wiki-body']/p\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"Wiki FrontPage ChildPage Title\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki FrontPage ChildPage Content\"));\n\t}","id":53874,"modified_method":"public void testPreviewWDFrontPageChildPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tselenium.clickAt(\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\",\n\t\t\tRuntimeVariables.replace(\"Add Child Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[contains(@id,'_title')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/wikilink/plugin.js')]\");\n\t\tselenium.waitForText(\"//span[@class='cke_toolbar']/span[contains(.,'Normal')]/a\",\n\t\t\t\"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Content\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_off']\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki FrontPage ChildPage Content\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Preview']\",\n\t\t\tRuntimeVariables.replace(\"Preview\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"Your request completed successfully.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Content\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='preview']/div[@class='wiki-body']/p\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"Wiki FrontPage ChildPage Title\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki FrontPage ChildPage Content\"));\n\t}","commit_id":"0c39ded887701e7908982879efe5290c42f0fbcb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testRemoveRedirectWDFrontPageChildPage()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span/a[contains(.,'All Pages')]\"));\n\t\tselenium.clickAt(\"//ul[@class='top-links-navigation']/li/span/a[contains(.,'All Pages')]\",\n\t\t\tRuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//tr[4]/td[1]/a\"));\n\t\tselenium.clickAt(\"//tr[4]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Title Rename\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"(Redirected from Wiki FrontPage ChildPage Title)\"),\n\t\t\tselenium.getText(\"//div[@class='page-redirect']\"));\n\t\tselenium.clickAt(\"//div[@class='page-redirect']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"(Redirected from Wiki FrontPage ChildPage Title)\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This page is currently redirected to Wiki FrontPage ChildPage Title Rename.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/div\"));\n\t\tselenium.clickAt(\"//input[@value='Remove Redirect']\",\n\t\t\tRuntimeVariables.replace(\"Remove Redirect\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Content Rename\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForElementPresent(\"//div[@id='cke_1_contents']/iframe\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki FrontPage ChildPage Content Rename\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Content Rename\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span/a[contains(.,'All Pages')]\"));\n\t\tselenium.clickAt(\"//ul[@class='top-links-navigation']/li/span/a[contains(.,'All Pages')]\",\n\t\t\tRuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//tr[4]/td[1]/a\"));\n\t\tselenium.clickAt(\"//tr[4]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//h1[@class='header-title']/span\",\n\t\t\t\"Wiki FrontPage ChildPage Title\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Content Rename\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertNotEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage Child Page Title Rename\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"(Redirected from Wiki FrontPage ChildPage Title1)\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span/a[contains(.,'All Pages')]\"));\n\t\tselenium.clickAt(\"//ul[@class='top-links-navigation']/li/span/a[contains(.,'All Pages')]\",\n\t\t\tRuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Title Rename\"),\n\t\t\tselenium.getText(\"//tr[5]/td[1]/a\"));\n\t\tselenium.clickAt(\"//tr[5]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title Rename\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//h1[@class='header-title']/span\",\n\t\t\t\"Wiki FrontPage ChildPage Title Rename\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Title Rename\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertNotEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"(Redirected from Wiki FrontPage ChildPage Title)\"));\n\t}","id":53875,"modified_method":"public void testRemoveRedirectWDFrontPageChildPage()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span/a[contains(.,'All Pages')]\"));\n\t\tselenium.clickAt(\"//ul[@class='top-links-navigation']/li/span/a[contains(.,'All Pages')]\",\n\t\t\tRuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'Wiki FrontPage ChildPage Title')]/td[1]/a\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'Wiki FrontPage ChildPage Title')]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Title Rename\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"(Redirected from Wiki FrontPage ChildPage Title)\"),\n\t\t\tselenium.getText(\"//div[@class='page-redirect']\"));\n\t\tselenium.clickAt(\"//div[@class='page-redirect']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"(Redirected from Wiki FrontPage ChildPage Title)\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This page is currently redirected to Wiki FrontPage ChildPage Title Rename.\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/div\"));\n\t\tselenium.clickAt(\"//input[@value='Remove Redirect']\",\n\t\t\tRuntimeVariables.replace(\"Remove Redirect\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/html/js/editor/ckeditor/plugins/wikilink/plugin.js')]\");\n\t\tselenium.waitForText(\"//span[@class='cke_toolbar']/span[contains(.,'Normal')]/a\",\n\t\t\t\"Normal\");\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_on']\");\n\t\tselenium.waitForVisible(\"//div[@id='cke_1_contents']/textarea\");\n\t\tselenium.type(\"//div[@id='cke_1_contents']/textarea\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Content Rename\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Source\"),\n\t\t\tselenium.getText(\"//span[.='Source']\"));\n\t\tselenium.clickAt(\"//span[.='Source']\",\n\t\t\tRuntimeVariables.replace(\"Source\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//a[@class='cke_button cke_button__source cke_button_off']\");\n\t\tassertTrue(selenium.isVisible(\"//div[@id='cke_1_contents']/iframe\"));\n\t\tselenium.selectFrame(\"//div[@id='cke_1_contents']/iframe\");\n\t\tselenium.waitForText(\"//body[@class='html-editor portlet portlet-wiki cke_editable cke_editable_themed cke_contents_ltr cke_show_borders']/p\",\n\t\t\t\"Wiki FrontPage ChildPage Content Rename\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Content Rename\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span/a[contains(.,'All Pages')]\"));\n\t\tselenium.clickAt(\"//ul[@class='top-links-navigation']/li/span/a[contains(.,'All Pages')]\",\n\t\t\tRuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'Wiki FrontPage ChildPage Title')]/td[1]/a\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'Wiki FrontPage ChildPage Title')]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//h1[@class='header-title']/span\",\n\t\t\t\"Wiki FrontPage ChildPage Title\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Content Rename\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertNotEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage Child Page Title Rename\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"(Redirected from Wiki FrontPage ChildPage Title1)\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span/a[contains(.,'All Pages')]\"));\n\t\tselenium.clickAt(\"//ul[@class='top-links-navigation']/li/span/a[contains(.,'All Pages')]\",\n\t\t\tRuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Title Rename\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'Wiki FrontPage ChildPage Title Rename')]/td[1]/a\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'Wiki FrontPage ChildPage Title Rename')]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title Rename\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//h1[@class='header-title']/span\",\n\t\t\t\"Wiki FrontPage ChildPage Title Rename\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Title Rename\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertNotEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertFalse(selenium.isTextPresent(\n\t\t\t\t\"(Redirected from Wiki FrontPage ChildPage Title)\"));\n\t}","commit_id":"0c39ded887701e7908982879efe5290c42f0fbcb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testRenameWDFrontPageChildPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//div[@class='child-pages']/ul/li/a\",\n\t\t\t\"Wiki FrontPage ChildPage Title\");\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//h1[@class='header-title']/span\",\n\t\t\t\"Wiki FrontPage ChildPage Title\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//ul[@class='lfr-component taglib-icon-list']/li/a[contains(.,'Move')]\",\n\t\t\t\"Move\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//ul[@class='lfr-component taglib-icon-list']/li/a[contains(.,'Move')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//h1[@class='header-title']/span\",\n\t\t\t\"Wiki FrontPage ChildPage Title\");\n\t\tselenium.type(\"//input[contains(@id,'_newTitle')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title Rename\"));\n\t\tselenium.clickAt(\"//input[@value='Rename']\",\n\t\t\tRuntimeVariables.replace(\"Rename\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Title Rename\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertNotEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"(Redirected from Wiki FrontPage ChildPage Title)\"),\n\t\t\tselenium.getText(\"//div[@class='page-redirect']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//div[@class='child-pages']/ul/li/a\",\n\t\t\t\"Wiki FrontPage ChildPage Title Rename\");\n\t\tassertNotEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//div[@class='child-pages']/ul/li/a\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\"link=All Pages\");\n\t\tselenium.clickAt(\"link=All Pages\", RuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//tr[4]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Title Rename\"),\n\t\t\tselenium.getText(\"//tr[5]/td[1]/a\"));\n\t}","id":53876,"modified_method":"public void testRenameWDFrontPageChildPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//div[@class='child-pages']/ul/li/a\",\n\t\t\t\"Wiki FrontPage ChildPage Title\");\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//h1[@class='header-title']/span\",\n\t\t\t\"Wiki FrontPage ChildPage Title\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//ul[@class='lfr-component taglib-icon-list']/li/a[contains(.,'Move')]\",\n\t\t\t\"Move\");\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//ul[@class='lfr-component taglib-icon-list']/li/a[contains(.,'Move')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//h1[@class='header-title']/span\",\n\t\t\t\"Wiki FrontPage ChildPage Title\");\n\t\tselenium.type(\"//input[contains(@id,'_newTitle')]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title Rename\"));\n\t\tselenium.clickAt(\"//input[@value='Rename']\",\n\t\t\tRuntimeVariables.replace(\"Rename\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Title Rename\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertNotEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"(Redirected from Wiki FrontPage ChildPage Title)\"),\n\t\t\tselenium.getText(\"//div[@class='page-redirect']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//div[@class='child-pages']/ul/li/a\",\n\t\t\t\"Wiki FrontPage ChildPage Title Rename\");\n\t\tassertNotEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//div[@class='child-pages']/ul/li/a\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=All Pages\", RuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'Wiki FrontPage ChildPage Title')]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Title Rename\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'Wiki FrontPage ChildPage Title Rename')]/td[1]/a\"));\n\t}","commit_id":"0c39ded887701e7908982879efe5290c42f0fbcb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testRevertEditWikiFrontPageMinorChange()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content Edit\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=History\", RuntimeVariables.replace(\"History\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"1.3\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.2 (Minor Edit)\"),\n\t\t\tselenium.getText(\"//tr[3]/td[contains(.,'1.2 (Minor Edit)')]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Revert\"),\n\t\t\tselenium.getText(\"//tr[4]/td[contains(.,'Revert')]/span/a/span\"));\n\t\tselenium.clickAt(\"//tr[4]/td[contains(.,'Revert')]/span/a/span\",\n\t\t\tRuntimeVariables.replace(\"Revert\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"1.3\"),\n\t\t\tselenium.getText(\"//tr[3]/td[contains(.,'1.3')]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Reverted to 1.1\"),\n\t\t\tselenium.getText(\"//tr[3]/td[contains(.,'Reverted to 1.1')]\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki FrontPage Content Edit\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"Minor Edit\"));\n\t}","id":53877,"modified_method":"public void testRevertEditWikiFrontPageMinorChange()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content Edit\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=History\", RuntimeVariables.replace(\"History\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"1.3\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.2 (Minor Edit)\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'1.2 (Minor Edit)')]/td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Revert\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Revert')]/td[8]/span/a/span\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'Revert')]/td[8]/span/a/span\",\n\t\t\tRuntimeVariables.replace(\"Revert\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"1.3\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'1.3')]/td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Reverted to 1.1\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Reverted to 1.1')]/td[7]\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki FrontPage Content Edit\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"Minor Edit\"));\n\t}","commit_id":"0c39ded887701e7908982879efe5290c42f0fbcb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testRevertEditWikiFrontPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//div[@class='wiki-body']/p\",\n\t\t\t\"Wiki FrontPage Content Edit\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content Edit\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\"link=History\");\n\t\tselenium.clickAt(\"link=History\", RuntimeVariables.replace(\"History\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"1.3\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.2\"),\n\t\t\tselenium.getText(\"//tr[3]/td[contains(.,'1.2')]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Revert\"),\n\t\t\tselenium.getText(\"//tr[4]/td[contains(.,'Revert')]/span/a/span\"));\n\t\tselenium.clickAt(\"//tr[4]/td[contains(.,'Revert')]/span/a/span\",\n\t\t\tRuntimeVariables.replace(\"Revert\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"1.3\"),\n\t\t\tselenium.getText(\"//tr[3]/td[contains(.,'1.3')]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Reverted to 1.1\"),\n\t\t\tselenium.getText(\"//tr[3]/td[contains(.,'Reverted to 1.1')]\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki FrontPage Content Edit\"));\n\t}","id":53878,"modified_method":"public void testRevertEditWikiFrontPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content Edit\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=History\", RuntimeVariables.replace(\"History\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertFalse(selenium.isTextPresent(\"1.3\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.2\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'1.2')]/td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Revert\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Revert')]/td[8]/span/a/span\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'Revert')]/td[8]/span/a/span\",\n\t\t\tRuntimeVariables.replace(\"Revert\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"1.3\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'1.3')]/td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Reverted to 1.1\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'1.3')]/td[7]\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertFalse(selenium.isTextPresent(\"Wiki FrontPage Content Edit\"));\n\t}","commit_id":"0c39ded887701e7908982879efe5290c42f0fbcb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectMainNodeFrontPageChildPage()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\t\"Options\");\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_nodeId']\");\n\t\tselenium.select(\"//select[@id='_86_nodeId']\",\n\t\t\tRuntimeVariables.replace(\"Main\"));\n\t\tselenium.select(\"//select[@id='_86_title']\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Main\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_nodeId']\"));\n\t\tassertEquals(\"Wiki FrontPage ChildPage Title\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_title']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//h1[@class='header-title']/span\",\n\t\t\t\"Wiki FrontPage ChildPage Title Rename\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Title Rename\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","id":53879,"modified_method":"public void testSelectMainNodeFrontPageChildPage()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tselenium.waitForText(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\t\"Options\");\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_nodeId']\");\n\t\tselenium.select(\"//select[@id='_86_nodeId']\",\n\t\t\tRuntimeVariables.replace(\"Main\"));\n\t\tselenium.select(\"//select[@id='_86_title']\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Main\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_nodeId']\"));\n\t\tassertEquals(\"Wiki FrontPage ChildPage Title\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_title']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//h1[@class='header-title']/span\",\n\t\t\t\"Wiki FrontPage ChildPage Title Rename\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Title Rename\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","commit_id":"0c39ded887701e7908982879efe5290c42f0fbcb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//span[@title='Options']/ul/li/strong/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\"//iFrame\");\n\t\tselenium.selectFrame(\"//iFrame\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_nodeId']\");\n\t\tselenium.select(\"//select[@id='_86_nodeId']\",\n\t\t\tRuntimeVariables.replace(\"Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Main\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_nodeId']\"));\n\t\tassertEquals(\"FrontPage\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_title']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//div[@class='wiki-body']/p\",\n\t\t\t\"Wiki FrontPage Content\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","id":53880,"modified_method":"public void testSelectMainNode() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_nodeId']\");\n\t\tselenium.select(\"//select[@id='_86_nodeId']\",\n\t\t\tRuntimeVariables.replace(\"Main\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Main\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_nodeId']\"));\n\t\tassertEquals(\"FrontPage\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_title']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//div[@class='wiki-body']/p\",\n\t\t\t\"Wiki FrontPage Content\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","commit_id":"0c39ded887701e7908982879efe5290c42f0fbcb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectWikiNode1() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\"//iFrame\");\n\t\tselenium.selectFrame(\"//iFrame\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_nodeId']\");\n\t\tselenium.select(\"//select[@id='_86_nodeId']\",\n\t\t\tRuntimeVariables.replace(\"Wiki Node1 Name\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Wiki Node1 Name\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_nodeId']\"));\n\t\tassertEquals(\"FrontPage\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_title']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tThread.sleep(1000);\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage1 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","id":53881,"modified_method":"public void testSelectWikiNode1() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_nodeId']\");\n\t\tselenium.select(\"//select[@id='_86_nodeId']\",\n\t\t\tRuntimeVariables.replace(\"Wiki Node1 Name\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Wiki Node1 Name\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_nodeId']\"));\n\t\tassertEquals(\"FrontPage\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_title']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage1 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","commit_id":"0c39ded887701e7908982879efe5290c42f0fbcb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectWikiNode2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\"//iFrame\");\n\t\tselenium.selectFrame(\"//iFrame\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_nodeId']\");\n\t\tselenium.select(\"//select[@id='_86_nodeId']\",\n\t\t\tRuntimeVariables.replace(\"Wiki Node2 Name\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Wiki Node2 Name\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_nodeId']\"));\n\t\tassertEquals(\"FrontPage\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_title']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tThread.sleep(1000);\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage2 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","id":53882,"modified_method":"public void testSelectWikiNode2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_nodeId']\");\n\t\tselenium.select(\"//select[@id='_86_nodeId']\",\n\t\t\tRuntimeVariables.replace(\"Wiki Node2 Name\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Wiki Node2 Name\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_nodeId']\"));\n\t\tassertEquals(\"FrontPage\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_title']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage2 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","commit_id":"0c39ded887701e7908982879efe5290c42f0fbcb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectWikiNode3() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\"//iFrame\");\n\t\tselenium.selectFrame(\"//iFrame\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_nodeId']\");\n\t\tselenium.select(\"//select[@id='_86_nodeId']\",\n\t\t\tRuntimeVariables.replace(\"Wiki Node3 Name\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Wiki Node3 Name\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_nodeId']\"));\n\t\tassertEquals(\"FrontPage\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_title']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tThread.sleep(1000);\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage3 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","id":53883,"modified_method":"public void testSelectWikiNode3() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_nodeId']\");\n\t\tselenium.select(\"//select[@id='_86_nodeId']\",\n\t\t\tRuntimeVariables.replace(\"Wiki Node3 Name\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Wiki Node3 Name\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_nodeId']\"));\n\t\tassertEquals(\"FrontPage\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_title']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage3 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t}","commit_id":"0c39ded887701e7908982879efe5290c42f0fbcb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testSelectWikiNodeNull() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Wiki Display Test Page\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\"//iFrame\");\n\t\tselenium.selectFrame(\"//iFrame\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_nodeId']\");\n\t\tselenium.select(\"//select[@id='_86_nodeId']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"\", selenium.getSelectedLabel(\"//select[@id='_86_nodeId']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Please configure this portlet to make it visible to all users.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='portlet-configuration portlet-msg-info']/a\"));\n\t}","id":53884,"modified_method":"public void testSelectWikiNodeNull() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForVisible(\"link=Wiki Display Test Page\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//select[@id='_86_authType']\");\n\t\tselenium.select(\"//select[@id='_86_authType']\",\n\t\t\tRuntimeVariables.replace(\"Default\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(\"Default\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_authType']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Please configure this portlet to make it visible to all users.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='portlet-configuration portlet-msg-info']/a\"));\n\t}","commit_id":"0c39ded887701e7908982879efe5290c42f0fbcb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewCopyWDFrontPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'All Pages')]\"));\n\t\tselenium.clickAt(\"//ul[@class='top-links-navigation']/li/span[contains(.,'All Pages')]/a\",\n\t\t\tRuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage2\"),\n\t\t\tselenium.getText(\"//tr[4]/td[1]/a\"));\n\t\tselenium.clickAt(\"//tr[4]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"FrontPage2\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'FrontPage')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Recent Changes\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Recent Changes')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'All Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Orphan Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Orphan Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Draft Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Draft Pages')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//span[@class='aui-search-bar']/span/span/span/input\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@title='Search Pages']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage2\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Print\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Print')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0 Attachments\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'0 Attachments')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='page-actions']/div[@class='stats']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[contains(@id,'ratingStarContent')]\", \"Your Rating\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Average (0 Votes)\"),\n\t\t\tselenium.getText(\"//div[contains(@id,'ratingScoreContent')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Comments\"),\n\t\t\tselenium.getText(\"//div[@id='wikiCommentsPanel']/div/div/span\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div\",\n\t\t\t\t\"No comments yet.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Be the first.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Subscribe to Comments\"),\n\t\t\tselenium.getText(\"//span[@class='subscribe-link']/a/span\"));\n\t}","id":53885,"modified_method":"public void testViewCopyWDFrontPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'All Pages')]\"));\n\t\tselenium.clickAt(\"//ul[@class='top-links-navigation']/li/span[contains(.,'All Pages')]/a\",\n\t\t\tRuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage2\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'FrontPage2')]/td[1]/a\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'FrontPage2')]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"FrontPage2\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'FrontPage')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Recent Changes\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Recent Changes')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'All Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Orphan Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Orphan Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Draft Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Draft Pages')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//span[@class='aui-search-bar']/span/span/span/input\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@title='Search Pages']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage2\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Print\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Print')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0 Attachments\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'0 Attachments')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='page-actions']/div[@class='stats']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[contains(@id,'ratingStarContent')]\", \"Your Rating\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Average (0 Votes)\"),\n\t\t\tselenium.getText(\"//div[contains(@id,'ratingScoreContent')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Comments\"),\n\t\t\tselenium.getText(\"//div[@id='wikiCommentsPanel']/div/div/span\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div\",\n\t\t\t\t\"No comments yet.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Be the first.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Subscribe to Comments\"),\n\t\t\tselenium.getText(\"//span[@class='subscribe-link']/a/span\"));\n\t}","commit_id":"0c39ded887701e7908982879efe5290c42f0fbcb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewEditWikiFrontPageMinorChange()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=History\", RuntimeVariables.replace(\"History\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'FrontPage')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Recent Changes\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Recent Changes')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'All Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Orphan Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Orphan Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Draft Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Draft Pages')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//span[@class='aui-search-bar']/span/span/span/input\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@title='Search Pages']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']/a\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='aui-button-holder ']/span/span/input\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Status\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Revision\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[4]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"User\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[5]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Date\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[6]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Summary\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[7]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[8]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[3]/td[1]/input\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"//tr[3]/td[contains(.,'FrontPage')]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Approved\"),\n\t\t\tselenium.getText(\"//tr[3]/td[contains(.,'Approved')]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.2 (Minor Edit)\"),\n\t\t\tselenium.getText(\"//tr[3]/td[contains(.,'1.2 (Minor Edit)')]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//tr[3]/td[contains(.,'Joe Bloggs')]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[3]/td[6]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\"),\n\t\t\tselenium.getText(\"//tr[3]/td[7]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\"),\n\t\t\tselenium.getText(\"//tr[3]/td[8]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[4]/td[1]/input\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"//tr[4]/td[contains(.,'FrontPage')]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Approved\"),\n\t\t\tselenium.getText(\"//tr[4]/td[contains(.,'Approved')]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.1\"),\n\t\t\tselenium.getText(\"//tr[4]/td[contains(.,'1.1')]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//tr[4]/td[contains(.,'Joe Bloggs')]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[4]/td[6]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\"),\n\t\t\tselenium.getText(\"//tr[4]/td[7]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[4]/td[8]/span/a/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Revert\"),\n\t\t\tselenium.getText(\"//tr[4]/td[contains(.,'Revert')]/span/a/span\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[5]/td[1]/input\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"//tr[5]/td[contains(.,'FrontPage')]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Approved\"),\n\t\t\tselenium.getText(\"//tr[5]/td[contains(.,'Approved')]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.0 (Minor Edit)\"),\n\t\t\tselenium.getText(\"//tr[5]/td[contains(.,'1.0 (Minor Edit)')]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\"),\n\t\t\tselenium.getText(\"//tr[5]/td[5]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[5]/td[6]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"New\"),\n\t\t\tselenium.getText(\"//tr[5]/td[7]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[5]/td[8]/span/a/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Revert\"),\n\t\t\tselenium.getText(\"//tr[5]/td[contains(.,'Revert')]/span/a/span\"));\n\t}","id":53886,"modified_method":"public void testViewEditWikiFrontPageMinorChange()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tselenium.clickAt(\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\",\n\t\t\tRuntimeVariables.replace(\"Details\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=History\", RuntimeVariables.replace(\"History\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'FrontPage')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Recent Changes\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Recent Changes')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'All Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Orphan Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Orphan Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Draft Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Draft Pages')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//span[@class='aui-search-bar']/span/span/span/input\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@title='Search Pages']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']/a\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='aui-button-holder ']/span/span/input\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Status\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[3]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Revision\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[4]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"User\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[5]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Date\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[6]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Summary\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[7]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-header results-header']/th[8]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//tr[contains(.,'1.2 (Minor Edit)')]/td[1]/input\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'1.2 (Minor Edit)')]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Approved\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'1.2 (Minor Edit)')]/td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.2 (Minor Edit)\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'1.2 (Minor Edit)')]/td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'1.2 (Minor Edit)')]/td[5]/a\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//tr[contains(.,'1.2 (Minor Edit)')]/td[6]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'1.2 (Minor Edit)')]/td[7]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'1.2 (Minor Edit)')]/td[8]\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[contains(.,'1.1')]/td[1]/input\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'1.1')]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Approved\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'1.1')]/td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.1\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'1.1')]/td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Joe Bloggs\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'1.1')]/td[5]/a\"));\n\t\tassertTrue(selenium.isVisible(\"//tr[contains(.,'1.1')]/td[6]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'1.1')]/td[7]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//tr[contains(.,'1.1')]/td[8]/span/a/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Revert\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'1.1')]/td[8]/span/a/span\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//tr[contains(.,'1.0 (Minor Edit)')]/td[1]/input\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'1.0 (Minor Edit)')]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Approved\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'1.0 (Minor Edit)')]/td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1.0 (Minor Edit)\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'1.0 (Minor Edit)')]/td[4]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'1.0 (Minor Edit)')]/td[5]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//tr[contains(.,'1.0 (Minor Edit)')]/td[6]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"New\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'1.0 (Minor Edit)')]/td[7]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//tr[contains(.,'1.0 (Minor Edit)')]/td[8]/span/a/img\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Revert\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'1.0 (Minor Edit)')]/td[8]/span/a/span\"));\n\t}","commit_id":"0c39ded887701e7908982879efe5290c42f0fbcb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewEditWikiFrontPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//ul[@class='top-links-navigation']/li/span[contains(.,'FrontPage')]\",\n\t\t\t\"FrontPage\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'FrontPage')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Recent Changes\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Recent Changes')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'All Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Orphan Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Orphan Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Draft Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Draft Pages')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//span[@class='aui-search-bar']/span/span/span/input\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@title='Search Pages']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content Edit\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Print\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Print')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0 Attachments\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'0 Attachments')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='page-actions']/div[@class='stats']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[contains(@id,'ratingStarContent')]\", \"Your Rating\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Average (0 Votes)\"),\n\t\t\tselenium.getText(\"//div[contains(@id,'ratingScoreContent')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Comments\"),\n\t\t\tselenium.getText(\"//div[@id='wikiCommentsPanel']/div/div/span\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div\",\n\t\t\t\t\"No comments yet.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Be the first.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Subscribe to Comments\"),\n\t\t\tselenium.getText(\"//span[@class='subscribe-link']/a/span\"));\n\t}","id":53887,"modified_method":"public void testViewEditWikiFrontPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//ul[@class='top-links-navigation']/li/span[contains(.,'FrontPage')]\",\n\t\t\t\"FrontPage\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'FrontPage')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Recent Changes\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Recent Changes')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'All Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Orphan Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Orphan Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Draft Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Draft Pages')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//span[@class='aui-search-bar']/span/span/span/input\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@title='Search Pages']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage Content Edit\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Print\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Print')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0 Attachments\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'0 Attachments')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='page-actions']/div[@class='stats']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[contains(@id,'ratingStarContent')]\", \"Your Rating\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Average (0 Votes)\"),\n\t\t\tselenium.getText(\"//div[contains(@id,'ratingScoreContent')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Comments\"),\n\t\t\tselenium.getText(\"//div[@id='wikiCommentsPanel']/div/div/span\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div\",\n\t\t\t\t\"No comments yet.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Be the first.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Subscribe to Comments\"),\n\t\t\tselenium.getText(\"//span[@class='subscribe-link']/a/span\"));\n\t}","commit_id":"0c39ded887701e7908982879efe5290c42f0fbcb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewPortletWDScopeCurrentPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki Display (Wiki Display Test Page)\"),\n\t\t\tselenium.getText(\"//h1[@class='portlet-title']/span[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\"//iFrame\");\n\t\tselenium.selectFrame(\"//iFrame\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"link=Scope\");\n\t\tselenium.clickAt(\"link=Scope\", RuntimeVariables.replace(\"Scope\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(\"Select Page\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_scopeType']\"));\n\t\tassertEquals(\"Current Page (Wiki Display Test Page)\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[contains(@id,'_86_scopeLayout')]\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":53888,"modified_method":"public void testViewPortletWDScopeCurrentPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(1000);\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki Display (Wiki Display Test Page)\"),\n\t\t\tselenium.getText(\"//h1[@class='portlet-title']/span[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.selectFrame(\n\t\t\t\"//iframe[contains(@id,'configurationIframeDialog')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.clickAt(\"link=Scope\", RuntimeVariables.replace(\"Scope\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(\"Select Page\",\n\t\t\tselenium.getSelectedLabel(\"//select[@id='_86_scopeType']\"));\n\t\tassertEquals(\"Current Page (Wiki Display Test Page)\",\n\t\t\tselenium.getSelectedLabel(\n\t\t\t\t\"//select[contains(@id,'_86_scopeLayout')]\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"0c39ded887701e7908982879efe5290c42f0fbcb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewRenameWDFrontPageChildPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForElementPresent(\"link=All Pages\");\n\t\tselenium.clickAt(\"link=All Pages\", RuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Title Rename\"),\n\t\t\tselenium.getText(\"//tr[5]/td[1]/a\"));\n\t\tselenium.clickAt(\"//tr[5]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title Rename\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'FrontPage')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Recent Changes\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Recent Changes')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'All Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Orphan Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Orphan Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Draft Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Draft Pages')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//span[@class='aui-search-bar']/span/span/span/input\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@title='Search Pages']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Title Rename\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back to FrontPage\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Print\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Print')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0 Attachments\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'0 Attachments')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='page-actions']/div[@class='stats']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[contains(@id,'ratingStarContent')]\", \"Your Rating\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Average (0 Votes)\"),\n\t\t\tselenium.getText(\"//div[contains(@id,'ratingScoreContent')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Comments\"),\n\t\t\tselenium.getText(\"//div[@id='wikiCommentsPanel']/div/div/span\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div\",\n\t\t\t\t\"No comments yet.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Be the first.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Subscribe to Comments\"),\n\t\t\tselenium.getText(\"//span[@class='subscribe-link']/a/span\"));\n\t}","id":53889,"modified_method":"public void testViewRenameWDFrontPageChildPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=All Pages\", RuntimeVariables.replace(\"All Pages\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Title Rename\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'Wiki FrontPage ChildPage Title Rename')]/td[1]/a\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'Wiki FrontPage ChildPage Title Rename')]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title Rename\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'FrontPage')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Recent Changes\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Recent Changes')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'All Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Orphan Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Orphan Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Draft Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Draft Pages')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//span[@class='aui-search-bar']/span/span/span/input\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@title='Search Pages']\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Title Rename\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back to FrontPage\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Print\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Print')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0 Attachments\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'0 Attachments')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='page-actions']/div[@class='stats']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[contains(@id,'ratingStarContent')]\", \"Your Rating\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Average (0 Votes)\"),\n\t\t\tselenium.getText(\"//div[contains(@id,'ratingScoreContent')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Comments\"),\n\t\t\tselenium.getText(\"//div[@id='wikiCommentsPanel']/div/div/span\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div\",\n\t\t\t\t\"No comments yet.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Be the first.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Subscribe to Comments\"),\n\t\t\tselenium.getText(\"//span[@class='subscribe-link']/a/span\"));\n\t}","commit_id":"0c39ded887701e7908982879efe5290c42f0fbcb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewWDFrontPageChildPageFormatHTML()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//div[@class='child-pages']/h2\", \"Children Pages\");\n\t\tassertEquals(RuntimeVariables.replace(\"Children Pages\"),\n\t\t\tselenium.getText(\"//div[@class='child-pages']/h2\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//div[@class='child-pages']/ul/li/a\"));\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'FrontPage')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Recent Changes\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Recent Changes')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'All Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Orphan Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Orphan Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Draft Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Draft Pages')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//span[@class='aui-search-bar']/span/span/span/input\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@title='Search Pages']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back to FrontPage\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Print\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Print')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Welcome to LIFERAY\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0 Attachments\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'0 Attachments')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='page-actions']/div[@class='stats']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[contains(@id,'ratingStarContent')]\", \"Your Rating\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Average (0 Votes)\"),\n\t\t\tselenium.getText(\"//div[contains(@id,'ratingScoreContent')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Comments\"),\n\t\t\tselenium.getText(\"//div[@id='wikiCommentsPanel']/div/div/span\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div\",\n\t\t\t\t\"No comments yet.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Be the first.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Subscribe to Comments\"),\n\t\t\tselenium.getText(\"//span[@class='subscribe-link']/a/span\"));\n\t}","id":53890,"modified_method":"public void testViewWDFrontPageChildPageFormatHTML()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"//div[@class='child-pages']/h2\", \"Children Pages\");\n\t\tassertEquals(RuntimeVariables.replace(\"Children Pages\"),\n\t\t\tselenium.getText(\"//div[@class='child-pages']/h2\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//div[@class='child-pages']/ul/li/a\"));\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'FrontPage')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Recent Changes\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Recent Changes')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'All Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Orphan Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Orphan Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Draft Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Draft Pages')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//span[@class='aui-search-bar']/span/span/span/input\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@title='Search Pages']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back to FrontPage\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Print\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Print')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Welcome to LIFERAY\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0 Attachments\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'0 Attachments')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='page-actions']/div[@class='stats']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[contains(@id,'ratingStarContent')]\", \"Your Rating\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Average (0 Votes)\"),\n\t\t\tselenium.getText(\"//div[contains(@id,'ratingScoreContent')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Comments\"),\n\t\t\tselenium.getText(\"//div[@id='wikiCommentsPanel']/div/div/span\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div\",\n\t\t\t\t\"No comments yet.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Be the first.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Subscribe to Comments\"),\n\t\t\tselenium.getText(\"//span[@class='subscribe-link']/a/span\"));\n\t}","commit_id":"0c39ded887701e7908982879efe5290c42f0fbcb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewWDFrontPageChildPageMulitple()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"xpath=(//div[@class='child-pages']/ul/li/a)[1]\",\n\t\t\t\"Wiki FrontPage ChildPage1 Title\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Title\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='child-pages']/ul/li/a)[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Title\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='child-pages']/ul/li/a)[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage3 Title\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='child-pages']/ul/li/a)[3]\"));\n\t\tselenium.clickAt(\"xpath=(//div[@class='child-pages']/ul/li/a)[1]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'FrontPage')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Recent Changes\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Recent Changes')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'All Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Orphan Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Orphan Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Draft Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Draft Pages')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//span[@class='aui-search-bar']/span/span/span/input\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@title='Search Pages']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back to FrontPage\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Print\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Print')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage1 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0 Attachments\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'0 Attachments')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='page-actions']/div[@class='stats']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[contains(@id,'ratingStarContent')]\", \"Your Rating\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Average (0 Votes)\"),\n\t\t\tselenium.getText(\"//div[contains(@id,'ratingScoreContent')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Comments\"),\n\t\t\tselenium.getText(\"//div[@id='wikiCommentsPanel']/div/div/span\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div\",\n\t\t\t\t\"No comments yet.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Be the first.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Subscribe to Comments\"),\n\t\t\tselenium.getText(\"//span[@class='subscribe-link']/a/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back to FrontPage\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']/a\"));\n\t\tselenium.clickAt(\"//span[@class='header-back-to']/a\",\n\t\t\tRuntimeVariables.replace(\"\\u00ab Back to FrontPage\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Title\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='child-pages']/ul/li/a)[2]\"));\n\t\tselenium.clickAt(\"xpath=(//div[@class='child-pages']/ul/li/a)[2]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'FrontPage')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Recent Changes\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Recent Changes')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'All Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Orphan Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Orphan Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Draft Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Draft Pages')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//span[@class='aui-search-bar']/span/span/span/input\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@title='Search Pages']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back to FrontPage\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Print\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Print')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage2 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0 Attachments\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'0 Attachments')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='page-actions']/div[@class='stats']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[contains(@id,'ratingStarContent')]\", \"Your Rating\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Average (0 Votes)\"),\n\t\t\tselenium.getText(\"//div[contains(@id,'ratingScoreContent')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Comments\"),\n\t\t\tselenium.getText(\"//div[@id='wikiCommentsPanel']/div/div/span\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div\",\n\t\t\t\t\"No comments yet.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Be the first.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Subscribe to Comments\"),\n\t\t\tselenium.getText(\"//span[@class='subscribe-link']/a/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back to FrontPage\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']/a\"));\n\t\tselenium.clickAt(\"//span[@class='header-back-to']/a\",\n\t\t\tRuntimeVariables.replace(\"\\u00ab Back to FrontPage\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage3 Title\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='child-pages']/ul/li/a)[3]\"));\n\t\tselenium.clickAt(\"xpath=(//div[@class='child-pages']/ul/li/a)[3]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage3 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'FrontPage')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Recent Changes\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Recent Changes')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'All Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Orphan Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Orphan Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Draft Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Draft Pages')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//span[@class='aui-search-bar']/span/span/span/input\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@title='Search Pages']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage3 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back to FrontPage\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Print\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Print')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage3 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0 Attachments\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'0 Attachments')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='page-actions']/div[@class='stats']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[contains(@id,'ratingStarContent')]\", \"Your Rating\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Average (0 Votes)\"),\n\t\t\tselenium.getText(\"//div[contains(@id,'ratingScoreContent')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Comments\"),\n\t\t\tselenium.getText(\"//div[@id='wikiCommentsPanel']/div/div/span\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div\",\n\t\t\t\t\"No comments yet.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Be the first.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Subscribe to Comments\"),\n\t\t\tselenium.getText(\"//span[@class='subscribe-link']/a/span\"));\n\t}","id":53891,"modified_method":"public void testViewWDFrontPageChildPageMulitple()\n\t\tthrows Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForText(\"xpath=(//div[@class='child-pages']/ul/li/a)[1]\",\n\t\t\t\"Wiki FrontPage ChildPage1 Title\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Title\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='child-pages']/ul/li/a)[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Title\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='child-pages']/ul/li/a)[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage3 Title\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='child-pages']/ul/li/a)[3]\"));\n\t\tselenium.clickAt(\"xpath=(//div[@class='child-pages']/ul/li/a)[1]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'FrontPage')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Recent Changes\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Recent Changes')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'All Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Orphan Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Orphan Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Draft Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Draft Pages')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//span[@class='aui-search-bar']/span/span/span/input\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@title='Search Pages']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage1 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back to FrontPage\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Print\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Print')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage1 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0 Attachments\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'0 Attachments')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='page-actions']/div[@class='stats']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[contains(@id,'ratingStarContent')]\", \"Your Rating\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Average (0 Votes)\"),\n\t\t\tselenium.getText(\"//div[contains(@id,'ratingScoreContent')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Comments\"),\n\t\t\tselenium.getText(\"//div[@id='wikiCommentsPanel']/div/div/span\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div\",\n\t\t\t\t\"No comments yet.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Be the first.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Subscribe to Comments\"),\n\t\t\tselenium.getText(\"//span[@class='subscribe-link']/a/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back to FrontPage\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']/a\"));\n\t\tselenium.clickAt(\"//span[@class='header-back-to']/a\",\n\t\t\tRuntimeVariables.replace(\"\\u00ab Back to FrontPage\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Title\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='child-pages']/ul/li/a)[2]\"));\n\t\tselenium.clickAt(\"xpath=(//div[@class='child-pages']/ul/li/a)[2]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'FrontPage')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Recent Changes\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Recent Changes')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'All Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Orphan Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Orphan Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Draft Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Draft Pages')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//span[@class='aui-search-bar']/span/span/span/input\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@title='Search Pages']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage2 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back to FrontPage\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Print\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Print')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage2 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0 Attachments\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'0 Attachments')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='page-actions']/div[@class='stats']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[contains(@id,'ratingStarContent')]\", \"Your Rating\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Average (0 Votes)\"),\n\t\t\tselenium.getText(\"//div[contains(@id,'ratingScoreContent')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Comments\"),\n\t\t\tselenium.getText(\"//div[@id='wikiCommentsPanel']/div/div/span\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div\",\n\t\t\t\t\"No comments yet.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Be the first.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Subscribe to Comments\"),\n\t\t\tselenium.getText(\"//span[@class='subscribe-link']/a/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back to FrontPage\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']/a\"));\n\t\tselenium.clickAt(\"//span[@class='header-back-to']/a\",\n\t\t\tRuntimeVariables.replace(\"\\u00ab Back to FrontPage\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage3 Title\"),\n\t\t\tselenium.getText(\"xpath=(//div[@class='child-pages']/ul/li/a)[3]\"));\n\t\tselenium.clickAt(\"xpath=(//div[@class='child-pages']/ul/li/a)[3]\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage3 Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'FrontPage')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Recent Changes\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Recent Changes')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'All Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Orphan Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Orphan Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Draft Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Draft Pages')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//span[@class='aui-search-bar']/span/span/span/input\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@title='Search Pages']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage3 Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back to FrontPage\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Print\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Print')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage3 Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0 Attachments\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'0 Attachments')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='page-actions']/div[@class='stats']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[contains(@id,'ratingStarContent')]\", \"Your Rating\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Average (0 Votes)\"),\n\t\t\tselenium.getText(\"//div[contains(@id,'ratingScoreContent')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Comments\"),\n\t\t\tselenium.getText(\"//div[@id='wikiCommentsPanel']/div/div/span\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div\",\n\t\t\t\t\"No comments yet.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Be the first.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Subscribe to Comments\"),\n\t\t\tselenium.getText(\"//span[@class='subscribe-link']/a/span\"));\n\t}","commit_id":"0c39ded887701e7908982879efe5290c42f0fbcb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewWDFrontPageChildPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Wiki Display Test Page\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Children Pages\"),\n\t\t\tselenium.getText(\"//div[@class='child-pages']/h2\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//div[@class='child-pages']/ul/li/a\"));\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'FrontPage')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Recent Changes\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Recent Changes')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'All Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Orphan Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Orphan Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Draft Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Draft Pages')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//span[@class='aui-search-bar']/span/span/span/input\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@title='Search Pages']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back to FrontPage\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Print\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Print')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0 Attachments\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'0 Attachments')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='page-actions']/div[@class='stats']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[contains(@id,'ratingStarContent')]\", \"Your Rating\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Average (0 Votes)\"),\n\t\t\tselenium.getText(\"//div[contains(@id,'ratingScoreContent')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Comments\"),\n\t\t\tselenium.getText(\"//div[@id='wikiCommentsPanel']/div/div/span\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div\",\n\t\t\t\t\"No comments yet.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Be the first.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Subscribe to Comments\"),\n\t\t\tselenium.getText(\"//span[@class='subscribe-link']/a/span\"));\n\t}","id":53892,"modified_method":"public void testViewWDFrontPageChildPage() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Wiki Display Test Page\",\n\t\t\tRuntimeVariables.replace(\"Wiki Display Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Children Pages\"),\n\t\t\tselenium.getText(\"//div[@class='child-pages']/h2\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//div[@class='child-pages']/ul/li/a\"));\n\t\tselenium.clickAt(\"//div[@class='child-pages']/ul/li/a\",\n\t\t\tRuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"FrontPage\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'FrontPage')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Recent Changes\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Recent Changes')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"All Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'All Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Orphan Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Orphan Pages')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Draft Pages\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='top-links-navigation']/li/span[contains(.,'Draft Pages')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//span[@class='aui-search-bar']/span/span/span/input\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@title='Search Pages']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Wiki FrontPage ChildPage Title\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"\\u00ab Back to FrontPage\"),\n\t\t\tselenium.getText(\"//span[@class='header-back-to']/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Edit')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Details\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Details')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Print\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='page-actions top-actions']/span/a[contains(.,'Print')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Wiki FrontPage ChildPage Content\"),\n\t\t\tselenium.getText(\"//div[@class='wiki-body']/p\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Add Child Page\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'Add Child Page')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0 Attachments\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='article-actions']/span/a[contains(.,'0 Attachments')]\"));\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//div[@class='page-actions']/div[@class='stats']\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//div[contains(@id,'ratingStarContent')]\", \"Your Rating\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Average (0 Votes)\"),\n\t\t\tselenium.getText(\"//div[contains(@id,'ratingScoreContent')]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Comments\"),\n\t\t\tselenium.getText(\"//div[@id='wikiCommentsPanel']/div/div/span\"));\n\t\tassertTrue(selenium.isPartialText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div\",\n\t\t\t\t\"No comments yet.\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Be the first.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//fieldset[@class='aui-fieldset add-comment ']/div/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Subscribe to Comments\"),\n\t\t\tselenium.getText(\"//span[@class='subscribe-link']/a/span\"));\n\t}","commit_id":"0c39ded887701e7908982879efe5290c42f0fbcb","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddAdSense() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Google Adsense Test Page\",\n\t\t\tRuntimeVariables.replace(\"Google Adsense Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Configuration')]/a\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'googleadsenseportlet')]\");\n\t\tselenium.selectFrame(\"//iframe[contains(@id,'googleadsenseportlet')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='_86_adClient']\");\n\t\tselenium.type(\"//input[@id='_86_adClient']\",\n\t\t\tRuntimeVariables.replace(\"ca-pub-7910614330042482\"));\n\t\tselenium.type(\"//input[@id='_86_adChannel']\",\n\t\t\tRuntimeVariables.replace(\"12345678\"));\n\t\tselenium.select(\"//select[@id='_86_adType']\",\n\t\t\tRuntimeVariables.replace(\"Text\"));\n\t\tselenium.select(\"//select[@id='_86_adFormat']\",\n\t\t\tRuntimeVariables.replace(\"(728 x 90) - Leaderboard\"));\n\t\tselenium.type(\"//input[@id='_86_colorBorder']\",\n\t\t\tRuntimeVariables.replace(\"FFFFFF\"));\n\t\tselenium.type(\"//input[@id='_86_colorBg']\",\n\t\t\tRuntimeVariables.replace(\"0000FF\"));\n\t\tselenium.type(\"//input[@id='_86_colorLink']\",\n\t\t\tRuntimeVariables.replace(\"FFFFFF\"));\n\t\tselenium.type(\"//input[@id='_86_colorText']\",\n\t\t\tRuntimeVariables.replace(\"000000\"));\n\t\tselenium.type(\"//input[@id='_86_colorUrl']\",\n\t\t\tRuntimeVariables.replace(\"008000\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tThread.sleep(5000);\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","id":53893,"modified_method":"public void testAddAdSense() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Google Adsense Test Page\",\n\t\t\tRuntimeVariables.replace(\"Google Adsense Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertEquals(RuntimeVariables.replace(\"Options\"),\n\t\t\tselenium.getText(\"//span[@title='Options']/ul/li/strong/a\"));\n\t\tselenium.clickAt(\"//span[@title='Options']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Options\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Configuration\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Configuration')]\",\n\t\t\tRuntimeVariables.replace(\"Configuration\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//iframe[contains(@id,'googleadsenseportlet')]\");\n\t\tselenium.selectFrame(\"//iframe[contains(@id,'googleadsenseportlet')]\");\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/liferay/navigation_interaction.js')]\");\n\t\tselenium.waitForVisible(\"//input[@id='_86_adClient']\");\n\t\tselenium.type(\"//input[@id='_86_adClient']\",\n\t\t\tRuntimeVariables.replace(\"ca-pub-7910614330042482\"));\n\t\tselenium.type(\"//input[@id='_86_adChannel']\",\n\t\t\tRuntimeVariables.replace(\"12345678\"));\n\t\tselenium.select(\"//select[@id='_86_adType']\",\n\t\t\tRuntimeVariables.replace(\"Text\"));\n\t\tselenium.select(\"//select[@id='_86_adFormat']\",\n\t\t\tRuntimeVariables.replace(\"(728 x 90) - Leaderboard\"));\n\t\tselenium.type(\"//input[@id='_86_colorBorder']\",\n\t\t\tRuntimeVariables.replace(\"FFFFFF\"));\n\t\tselenium.type(\"//input[@id='_86_colorBg']\",\n\t\t\tRuntimeVariables.replace(\"0000FF\"));\n\t\tselenium.type(\"//input[@id='_86_colorLink']\",\n\t\t\tRuntimeVariables.replace(\"FFFFFF\"));\n\t\tselenium.type(\"//input[@id='_86_colorText']\",\n\t\t\tRuntimeVariables.replace(\"000000\"));\n\t\tselenium.type(\"//input[@id='_86_colorUrl']\",\n\t\t\tRuntimeVariables.replace(\"008000\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForVisible(\"//div[@class='portlet-msg-success']\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"You have successfully updated the setup.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"5c68c1fa8a99114c63b12a2c8f26f8d2097e90e9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertAdSensePresent() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.waitForElementPresent(\"link=Google Adsense Test Page\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Google Adsense Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t}","id":53894,"modified_method":"public void testAssertAdSensePresent() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"link=Google Adsense Test Page\",\n\t\t\tRuntimeVariables.replace(\"Google Adsense Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.waitForVisible(\"//iframe[@id='aswift_0']\");\n\t\tselenium.selectFrame(\"//iframe[@id='aswift_0']\");\n\t\tselenium.waitForVisible(\"//iframe[@id='google_ads_frame1']\");\n\t\tselenium.selectFrame(\"//iframe[@id='google_ads_frame1']\");\n\t\tassertTrue(selenium.isVisible(\"//img[@alt='AdChoices']\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t}","commit_id":"5c68c1fa8a99114c63b12a2c8f26f8d2097e90e9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(AddPageTest.class);\n\t\ttestSuite.addTestSuite(AddPortletTest.class);\n\t\ttestSuite.addTestSuite(AddAdSenseTest.class);\n\t\ttestSuite.addTestSuite(AssertAdSensePresentTest.class);\n\t\ttestSuite.addTestSuite(TearDownPageTest.class);\n\n\t\treturn testSuite;\n\t}","id":53895,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\t\ttestSuite.addTestSuite(AddPageGATest.class);\n\t\ttestSuite.addTestSuite(AddPortletGATest.class);\n\t\ttestSuite.addTestSuite(AddAdSenseTest.class);\n\t\ttestSuite.addTestSuite(AssertAdSensePresentTest.class);\n\t\ttestSuite.addTestSuite(TearDownPageTest.class);\n\n\t\treturn testSuite;\n\t}","commit_id":"5c68c1fa8a99114c63b12a2c8f26f8d2097e90e9","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddNullChoicePoll() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"Polls\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Question']\",\n\t\t\tRuntimeVariables.replace(\"Add Question\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_25_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Null Choice Poll Test Title\"));\n\t\tselenium.type(\"//textarea[@id='_25_description_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Null Choice Poll Test Description\"));\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptiona_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Null Choice Poll Test Choice A\"));\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptionb_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Null Choice Poll Test Choice B\"));\n\t\tselenium.clickAt(\"//input[@value='Add Choice']\",\n\t\t\tRuntimeVariables.replace(\"Add Choice\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptionc_en_US']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter valid choices.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-error']\"));\n\t}","id":53896,"modified_method":"public void testAddNullChoicePoll() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"Polls\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Question']\",\n\t\t\tRuntimeVariables.replace(\"Add Question\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_25_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Null Choice Poll Test Title\"));\n\t\tselenium.type(\"//textarea[@id='_25_description_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Null Choice Poll Test Description\"));\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptiona_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Null Choice Poll Test Choice A\"));\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptionb_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Null Choice Poll Test Choice B\"));\n\t\tselenium.clickAt(\"//input[@value='Add Choice']\",\n\t\t\tRuntimeVariables.replace(\"Add Choice\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptionc_en_US']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Please enter valid choices.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-error']\"));\n\t}","commit_id":"d48221328463d34e1553429daa4d322a1ef44d3e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddNullDescriptionPoll() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"Polls\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Question']\",\n\t\t\tRuntimeVariables.replace(\"Add Question\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_25_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Null Description Poll Test Title\"));\n\t\tselenium.type(\"//textarea[@id='_25_description_en_US']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptiona_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Null Description Poll Test Choice A\"));\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptionb_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Null Description Poll Test Choice B\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForText(\"//div[@role='alert']\", \"This field is required.\");\n\t\tassertEquals(RuntimeVariables.replace(\"This field is required.\"),\n\t\t\tselenium.getText(\"//div[@role='alert']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Polls Question (Required)\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//span[contains(@class,'aui-form-validator-error-container')]/span/label\"));\n\t}","id":53897,"modified_method":"public void testAddNullDescriptionPoll() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"Polls\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Question']\",\n\t\t\tRuntimeVariables.replace(\"Add Question\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_25_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Null Description Poll Test Title\"));\n\t\tselenium.type(\"//textarea[@id='_25_description_en_US']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptiona_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Null Description Poll Test Choice A\"));\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptionb_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Null Description Poll Test Choice B\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForText(\"//div[@role='alert']\", \"This field is required.\");\n\t\tassertEquals(RuntimeVariables.replace(\"This field is required.\"),\n\t\t\tselenium.getText(\"//div[@role='alert']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Polls Question (Required)\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//span[contains(@class,'aui-form-validator-error-container')]/span/label\"));\n\t}","commit_id":"d48221328463d34e1553429daa4d322a1ef44d3e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddNullTitlePoll() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"Polls\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Question']\",\n\t\t\tRuntimeVariables.replace(\"Add Question\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//textarea[@id='_25_description_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Null Title Poll Test Description\"));\n\t\tselenium.type(\"//input[@id='_25_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptiona_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Null Title Poll Test Choice A\"));\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptionb_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Null Title Poll Test Choice B\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForText(\"//div[@role='alert']\", \"This field is required.\");\n\t\tassertEquals(RuntimeVariables.replace(\"This field is required.\"),\n\t\t\tselenium.getText(\"//div[@role='alert']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Title (Required)\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//span[contains(@class,'aui-form-validator-error-container')]/span/label\"));\n\t}","id":53898,"modified_method":"public void testAddNullTitlePoll() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"Polls\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Question']\",\n\t\t\tRuntimeVariables.replace(\"Add Question\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//textarea[@id='_25_description_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Null Title Poll Test Description\"));\n\t\tselenium.type(\"//input[@id='_25_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptiona_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Null Title Poll Test Choice A\"));\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptionb_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Null Title Poll Test Choice B\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForText(\"//div[@role='alert']\", \"This field is required.\");\n\t\tassertEquals(RuntimeVariables.replace(\"This field is required.\"),\n\t\t\tselenium.getText(\"//div[@role='alert']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Title (Required)\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//span[contains(@class,'aui-form-validator-error-container')]/span/label\"));\n\t}","commit_id":"d48221328463d34e1553429daa4d322a1ef44d3e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddQuestion2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"Polls\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Question']\",\n\t\t\tRuntimeVariables.replace(\"Add Question\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_25_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Test Poll Question 2\"));\n\t\tselenium.type(\"//textarea[@id='_25_description_en_US']\",\n\t\t\tRuntimeVariables.replace(\"This is a test poll 2 description.\"));\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptiona_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Test Choice A\"));\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptionb_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Test Choice B\"));\n\t\tselenium.clickAt(\"//input[@value='Add Choice']\",\n\t\t\tRuntimeVariables.replace(\"Add Choice\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptionc_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Test Choice C\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Test Poll Question 2\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t}","id":53899,"modified_method":"public void testAddQuestion2() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"Polls\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Question']\",\n\t\t\tRuntimeVariables.replace(\"Add Question\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_25_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Test Poll Question 2\"));\n\t\tselenium.type(\"//textarea[@id='_25_description_en_US']\",\n\t\t\tRuntimeVariables.replace(\"This is a test poll 2 description.\"));\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptiona_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Test Choice A\"));\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptionb_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Test Choice B\"));\n\t\tselenium.clickAt(\"//input[@value='Add Choice']\",\n\t\t\tRuntimeVariables.replace(\"Add Choice\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptionc_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Test Choice C\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Test Poll Question 2\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Test Poll Question 2')]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Test Poll Question 2')]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Test Poll Question 2')]/td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Test Poll Question 2')]/td[4]/a\"));\n\t}","commit_id":"d48221328463d34e1553429daa4d322a1ef44d3e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddQuestion() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"Polls\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Question']\",\n\t\t\tRuntimeVariables.replace(\"Add Question\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_25_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Test Poll Question\"));\n\t\tselenium.type(\"//textarea[@id='_25_description_en_US']\",\n\t\t\tRuntimeVariables.replace(\"This is a test poll description.\"));\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptiona_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Test Choice A\"));\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptionb_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Test Choice B\"));\n\t\tselenium.clickAt(\"//input[@value='Add Choice']\",\n\t\t\tRuntimeVariables.replace(\"Add Choice\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptionc_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Test Choice C\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Test Poll Question\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0\"),\n\t\t\tselenium.getText(\"//td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//td[4]/a\"));\n\t}","id":53900,"modified_method":"public void testAddQuestion() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"Polls\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Question']\",\n\t\t\tRuntimeVariables.replace(\"Add Question\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_25_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Test Poll Question\"));\n\t\tselenium.type(\"//textarea[@id='_25_description_en_US']\",\n\t\t\tRuntimeVariables.replace(\"This is a test poll description.\"));\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptiona_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Test Choice A\"));\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptionb_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Test Choice B\"));\n\t\tselenium.clickAt(\"//input[@value='Add Choice']\",\n\t\t\tRuntimeVariables.replace(\"Add Choice\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptionc_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Test Choice C\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Test Poll Question\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Test Poll Question')]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"0\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Test Poll Question')]/td[2]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Test Poll Question')]/td[3]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Never\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Test Poll Question')]/td[4]/a\"));\n\t}","commit_id":"d48221328463d34e1553429daa4d322a1ef44d3e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAddVote() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"Polls\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Test Poll Question\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Test Poll Question\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@name='_25_choiceId']\",\n\t\t\tRuntimeVariables.replace(\"Choice A\"));\n\t\tselenium.clickAt(\"//input[@value='Vote']\",\n\t\t\tRuntimeVariables.replace(\"Vote\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Test Poll Question\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a test poll description.\"),\n\t\t\tselenium.getText(\"//fieldset/div/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"100%\"),\n\t\t\tselenium.getText(\"//tr[2]/td[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1\"),\n\t\t\tselenium.getText(\"//tr[2]/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"a.\"),\n\t\t\tselenium.getText(\"//td[6]/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Test Choice A\"),\n\t\t\tselenium.getText(\"//td[7]\"));\n\t}","id":53901,"modified_method":"public void testAddVote() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"Polls\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Test Poll Question\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Test Poll Question')]/td[1]/a\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'Test Poll Question')]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Test Poll Question\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@name='_25_choiceId']\",\n\t\t\tRuntimeVariables.replace(\"Choice A\"));\n\t\tselenium.clickAt(\"//input[@value='Vote']\",\n\t\t\tRuntimeVariables.replace(\"Vote\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Test Poll Question\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"This is a test poll description.\"),\n\t\t\tselenium.getText(\"//fieldset/div/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"100%\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-alternate results-row alt']/td[1]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"1\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-alternate results-row alt']/td[2]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"a.\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-alternate results-row alt']/td[4]\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Test Choice A\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[@class='portlet-section-alternate results-row alt']/td[5]\"));\n\t}","commit_id":"d48221328463d34e1553429daa4d322a1ef44d3e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertDeleteChoice() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"Polls\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Question']\",\n\t\t\tRuntimeVariables.replace(\"Add Question\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_25_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Delete Choice Title Test\"));\n\t\tselenium.type(\"//textarea[@id='_25_description_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Delete Choice Description Test\"));\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptiona_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Delete Choice A\"));\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptionb_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Delete Choice B\"));\n\t\tselenium.clickAt(\"//input[@value='Add Choice']\",\n\t\t\tRuntimeVariables.replace(\"Add Choice\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptionc_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Delete Choice C\"));\n\t\tselenium.clickAt(\"//input[@value='Add Choice']\",\n\t\t\tRuntimeVariables.replace(\"Add Choice\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptiond_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Delete Choice D\"));\n\t\tselenium.clickAt(\"//input[@value='Add Choice']\",\n\t\t\tRuntimeVariables.replace(\"Add Choice\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptione_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Delete Choice E\"));\n\t\tassertEquals(\"Delete Choice C\",\n\t\t\tselenium.getValue(\"//input[@id='_25_choiceDescriptionc_en_US']\"));\n\t\tassertEquals(\"Delete Choice D\",\n\t\t\tselenium.getValue(\"//input[@id='_25_choiceDescriptiond_en_US']\"));\n\t\tassertEquals(\"Delete Choice E\",\n\t\t\tselenium.getValue(\"//input[@id='_25_choiceDescriptione_en_US']\"));\n\t\tselenium.clickAt(\"//input[@value='Delete']\",\n\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(\"Delete Choice C\",\n\t\t\tselenium.getValue(\"//input[@id='_25_choiceDescriptionc_en_US']\"));\n\t\tassertEquals(\"Delete Choice D\",\n\t\t\tselenium.getValue(\"//input[@id='_25_choiceDescriptiond_en_US']\"));\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//input[@id='_25_choiceDescriptione_en_US']\"));\n\t\tselenium.clickAt(\"//input[@value='Delete']\",\n\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(\"Delete Choice C\",\n\t\t\tselenium.getValue(\"//input[@id='_25_choiceDescriptionc_en_US']\"));\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//input[@id='_25_choiceDescriptiond_en_US']\"));\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//input[@id='_25_choiceDescriptione_en_US']\"));\n\t\tselenium.clickAt(\"//input[@value='Delete']\",\n\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//input[@id='_25_choiceDescriptionc_en_US']\"));\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//input[@id='_25_choiceDescriptiond_en_US']\"));\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//input[@id='_25_choiceDescriptione_en_US']\"));\n\t}","id":53902,"modified_method":"public void testAssertDeleteChoice() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"Polls\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"//input[@value='Add Question']\",\n\t\t\tRuntimeVariables.replace(\"Add Question\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_25_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Delete Choice Title Test\"));\n\t\tselenium.type(\"//textarea[@id='_25_description_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Delete Choice Description Test\"));\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptiona_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Delete Choice A\"));\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptionb_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Delete Choice B\"));\n\t\tselenium.clickAt(\"//input[@value='Add Choice']\",\n\t\t\tRuntimeVariables.replace(\"Add Choice\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptionc_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Delete Choice C\"));\n\t\tselenium.clickAt(\"//input[@value='Add Choice']\",\n\t\t\tRuntimeVariables.replace(\"Add Choice\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptiond_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Delete Choice D\"));\n\t\tselenium.clickAt(\"//input[@value='Add Choice']\",\n\t\t\tRuntimeVariables.replace(\"Add Choice\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptione_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Delete Choice E\"));\n\t\tassertEquals(\"Delete Choice C\",\n\t\t\tselenium.getValue(\"//input[@id='_25_choiceDescriptionc_en_US']\"));\n\t\tassertEquals(\"Delete Choice D\",\n\t\t\tselenium.getValue(\"//input[@id='_25_choiceDescriptiond_en_US']\"));\n\t\tassertEquals(\"Delete Choice E\",\n\t\t\tselenium.getValue(\"//input[@id='_25_choiceDescriptione_en_US']\"));\n\t\tselenium.clickAt(\"//input[@value='Delete']\",\n\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(\"Delete Choice C\",\n\t\t\tselenium.getValue(\"//input[@id='_25_choiceDescriptionc_en_US']\"));\n\t\tassertEquals(\"Delete Choice D\",\n\t\t\tselenium.getValue(\"//input[@id='_25_choiceDescriptiond_en_US']\"));\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//input[@id='_25_choiceDescriptione_en_US']\"));\n\t\tselenium.clickAt(\"//input[@value='Delete']\",\n\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(\"Delete Choice C\",\n\t\t\tselenium.getValue(\"//input[@id='_25_choiceDescriptionc_en_US']\"));\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//input[@id='_25_choiceDescriptiond_en_US']\"));\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//input[@id='_25_choiceDescriptione_en_US']\"));\n\t\tselenium.clickAt(\"//input[@value='Delete']\",\n\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//input[@id='_25_choiceDescriptionc_en_US']\"));\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//input[@id='_25_choiceDescriptiond_en_US']\"));\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//input[@id='_25_choiceDescriptione_en_US']\"));\n\t}","commit_id":"d48221328463d34e1553429daa4d322a1ef44d3e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertExpiredQuestion() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"Polls\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Edited Test Question 2\",\n\t\t\tRuntimeVariables.replace(\"Edited Test Question 2\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//div[2]/div/span[1]/span/span/input\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"//span[2]/span/span/input\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"//span[3]/span/span/input\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"//span[4]/span/span/input\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Voting is disabled because this poll expired on 1/1/08 12:00 AM.\"),\n\t\t\tselenium.getText(\"//div[6]\"));\n\t}","id":53903,"modified_method":"public void testAssertExpiredQuestion() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"Polls\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edited Test Question 2\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'Edited Test Question 2')]/td[1]/a\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'Edited Test Question 2')]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Edited Test Question 2\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementNotPresent(\n\t\t\t\t\"//div[2]/div/span[1]/span/span/input\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"//span[2]/span/span/input\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"//span[3]/span/span/input\"));\n\t\tassertTrue(selenium.isElementNotPresent(\"//span[4]/span/span/input\"));\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Voting is disabled because this poll expired on 1/1/08 12:00 AM.\"),\n\t\t\tselenium.getText(\"//div[6]\"));\n\t}","commit_id":"d48221328463d34e1553429daa4d322a1ef44d3e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testEditQuestion() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"Polls\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Test Poll Question 2\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_25_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Edited Test Question 2\"));\n\t\tselenium.type(\"//textarea[@id='_25_description_en_US']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This is an edited test poll 2 description.\"));\n\t\tselenium.clickAt(\"//input[@value='Add Choice']\",\n\t\t\tRuntimeVariables.replace(\"Add Choice\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptiond_en_US']\",\n\t\t\tRuntimeVariables.replace(\"NEW Test Choice D\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edited Test Question 2\"),\n\t\t\tselenium.getText(\"//td[1]/a\"));\n\t\tselenium.clickAt(\"//td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Edited Test Question 2\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"d. NEW Test Choice D\"),\n\t\t\tselenium.getText(\"//span[4]/span/label\"));\n\t}","id":53904,"modified_method":"public void testEditQuestion() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"Polls\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Test Poll Question 2\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Test Poll Question 2')]/td[1]/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_25_title_en_US']\",\n\t\t\tRuntimeVariables.replace(\"Edited Test Question 2\"));\n\t\tselenium.type(\"//textarea[@id='_25_description_en_US']\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"This is an edited test poll 2 description.\"));\n\t\tselenium.clickAt(\"//input[@value='Add Choice']\",\n\t\t\tRuntimeVariables.replace(\"Add Choice\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.type(\"//input[@id='_25_choiceDescriptiond_en_US']\",\n\t\t\tRuntimeVariables.replace(\"NEW Test Choice D\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Edited Test Question 2\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//tr[contains(.,'Edited Test Question 2')]/td[1]/a\"));\n\t\tselenium.clickAt(\"//tr[contains(.,'Edited Test Question 2')]/td[1]/a\",\n\t\t\tRuntimeVariables.replace(\"Edited Test Question 2\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"d. NEW Test Choice D\"),\n\t\t\tselenium.getText(\"//span[4]/span/label\"));\n\t}","commit_id":"d48221328463d34e1553429daa4d322a1ef44d3e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testExpireQuestion() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"Polls\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Edited Test Question 2\",\n\t\t\tRuntimeVariables.replace(\"Edited Test Question 2\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//div[2]/div/span[1]/span/span/input\"));\n\t\tassertTrue(selenium.isElementPresent(\"//span[2]/span/span/input\"));\n\t\tassertTrue(selenium.isElementPresent(\"//span[3]/span/span/input\"));\n\t\tassertTrue(selenium.isElementPresent(\"//span[4]/span/span/input\"));\n\t\tselenium.clickAt(\"//input[@value='Cancel']\",\n\t\t\tRuntimeVariables.replace(\"Cancel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\tselenium.getText(\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tselenium.waitForVisible(\n\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\");\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\"));\n\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Edit')]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isChecked(\"//input[@id='_25_neverExpireCheckbox']\"));\n\t\tselenium.clickAt(\"//input[@id='_25_neverExpireCheckbox']\",\n\t\t\tRuntimeVariables.replace(\"Never Expire\"));\n\t\tassertFalse(selenium.isChecked(\"//input[@id='_25_neverExpireCheckbox']\"));\n\t\tselenium.waitForVisible(\"//select[@id='_25_expirationDateMonth']\");\n\t\tselenium.select(\"//select[@id='_25_expirationDateYear']\",\n\t\t\tRuntimeVariables.replace(\"label=2008\"));\n\t\tselenium.select(\"//select[@id='_25_expirationDateMonth']\",\n\t\t\tRuntimeVariables.replace(\"label=January\"));\n\t\tselenium.select(\"//select[@id='_25_expirationDateDay']\",\n\t\t\tRuntimeVariables.replace(\"label=1\"));\n\t\tselenium.select(\"//select[@name='_25_expirationDateHour']\",\n\t\t\tRuntimeVariables.replace(\"label=12\"));\n\t\tselenium.select(\"//select[@name='_25_expirationDateMinute']\",\n\t\t\tRuntimeVariables.replace(\"label=:00\"));\n\t\tselenium.select(\"//select[@name='_25_expirationDateAmPm']\",\n\t\t\tRuntimeVariables.replace(\"label=AM\"));\n\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t}","id":53905,"modified_method":"public void testExpireQuestion() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"Polls\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Edited Test Question 2\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//tr[contains(.,'Edited Test Question 2')]/td[1]/a\"));\n\t\t\t\tselenium.clickAt(\"//tr[contains(.,'Edited Test Question 2')]/td[1]/a\",\n\t\t\t\t\tRuntimeVariables.replace(\"Edited Test Question 2\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\t\t\"//div[2]/div/span[1]/span/span/input\"));\n\t\t\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[2]/span/span/input\"));\n\t\t\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[3]/span/span/input\"));\n\t\t\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\t\t\"//span[4]/span/span/input\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Cancel']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Cancel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Edit')]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean neverExpireCheckbox = selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_25_neverExpireCheckbox']\");\n\n\t\t\t\tif (!neverExpireCheckbox) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tselenium.clickAt(\"//input[@id='_25_neverExpireCheckbox']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Never Expire\"));\n\n\t\t\tcase 2:\n\t\t\t\tassertFalse(selenium.isChecked(\n\t\t\t\t\t\t\"//input[@id='_25_neverExpireCheckbox']\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//select[@id='_25_expirationDateMonth']\");\n\t\t\t\tselenium.select(\"//select[@id='_25_expirationDateYear']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=2008\"));\n\t\t\t\tselenium.select(\"//select[@id='_25_expirationDateMonth']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=January\"));\n\t\t\t\tselenium.select(\"//select[@id='_25_expirationDateDay']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=1\"));\n\t\t\t\tselenium.select(\"//select[@name='_25_expirationDateHour']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=12\"));\n\t\t\t\tselenium.select(\"//select[@name='_25_expirationDateMinute']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=:00\"));\n\t\t\t\tselenium.select(\"//select[@name='_25_expirationDateAmPm']\",\n\t\t\t\t\tRuntimeVariables.replace(\"label=AM\"));\n\t\t\t\tselenium.clickAt(\"//input[@value='Save']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Save\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\t\t\"Your request completed successfully.\"),\n\t\t\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"d48221328463d34e1553429daa4d322a1ef44d3e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testTearDownQuestion() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"Polls\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean question1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!question1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean question2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!question2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean question3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!question3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean question4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!question4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean question5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!question5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[contains(.,'Delete')]/a\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S] It will be deleted immediately.$\"));\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","id":53906,"modified_method":"public void testTearDownQuestion() throws Exception {\n\t\tint label = 1;\n\n\t\twhile (label >= 1) {\n\t\t\tswitch (label) {\n\t\t\tcase 1:\n\t\t\t\tselenium.selectWindow(\"null\");\n\t\t\t\tselenium.selectFrame(\"relative=top\");\n\t\t\t\tselenium.open(\"/web/guest/home/\");\n\t\t\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\t\t\tselenium.waitForElementPresent(\n\t\t\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\t\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\t\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\t\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"Polls\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\t\t\tboolean question1Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!question1Present) {\n\t\t\t\t\tlabel = 2;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForConfirmation(\n\t\t\t\t\t\"Are you sure you want to delete this? It will be deleted immediately.\");\n\n\t\t\tcase 2:\n\n\t\t\t\tboolean question2Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!question2Present) {\n\t\t\t\t\tlabel = 3;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForConfirmation(\n\t\t\t\t\t\"Are you sure you want to delete this? It will be deleted immediately.\");\n\n\t\t\tcase 3:\n\n\t\t\t\tboolean question3Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!question3Present) {\n\t\t\t\t\tlabel = 4;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForConfirmation(\n\t\t\t\t\t\"Are you sure you want to delete this? It will be deleted immediately.\");\n\n\t\t\tcase 4:\n\n\t\t\t\tboolean question4Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!question4Present) {\n\t\t\t\t\tlabel = 5;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForConfirmation(\n\t\t\t\t\t\"Are you sure you want to delete this? It will be deleted immediately.\");\n\n\t\t\tcase 5:\n\n\t\t\t\tboolean question5Present = selenium.isElementPresent(\n\t\t\t\t\t\t\"//td[5]/span/ul/li/strong/a\");\n\n\t\t\t\tif (!question5Present) {\n\t\t\t\t\tlabel = 6;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Actions\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//span[@title='Actions']/ul/li/strong/a/span\"));\n\t\t\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a/span\",\n\t\t\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\t\t\tselenium.waitForVisible(\n\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\");\n\t\t\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\t\t\tselenium.getText(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.click(RuntimeVariables.replace(\n\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li/a[contains(.,'Delete')]\"));\n\t\t\t\tselenium.waitForPageToLoad(\"30000\");\n\t\t\t\tselenium.waitForConfirmation(\n\t\t\t\t\t\"Are you sure you want to delete this? It will be deleted immediately.\");\n\n\t\t\tcase 6:\n\t\t\tcase 100:\n\t\t\t\tlabel = -1;\n\t\t\t}\n\t\t}\n\t}","commit_id":"d48221328463d34e1553429daa4d322a1ef44d3e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testViewQuestionGraphs() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"Polls\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Test Poll Question\",\n\t\t\tRuntimeVariables.replace(\"Test Poll Question\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Area\", RuntimeVariables.replace(\"Area\"));\n\t\tselenium.waitForPopUp(\"viewChart\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"viewChart\");\n\t\tselenium.close();\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.waitForVisible(\"link=Horizontal Bar\");\n\t\tselenium.clickAt(\"link=Horizontal Bar\",\n\t\t\tRuntimeVariables.replace(\"Horizontal Bar\"));\n\t\tselenium.waitForPopUp(\"viewChart\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"viewChart\");\n\t\tselenium.close();\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.waitForVisible(\"link=Line\");\n\t\tselenium.clickAt(\"link=Line\", RuntimeVariables.replace(\"Line\"));\n\t\tselenium.waitForPopUp(\"viewChart\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"viewChart\");\n\t\tselenium.close();\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.waitForVisible(\"link=Pie\");\n\t\tselenium.clickAt(\"link=Pie\", RuntimeVariables.replace(\"Pie\"));\n\t\tselenium.waitForPopUp(\"viewChart\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"viewChart\");\n\t\tselenium.close();\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.waitForVisible(\"link=Vertical Bar\");\n\t\tselenium.clickAt(\"link=Vertical Bar\",\n\t\t\tRuntimeVariables.replace(\"Vertical Bar\"));\n\t\tselenium.waitForPopUp(\"viewChart\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"viewChart\");\n\t\tselenium.close();\n\t\tselenium.selectWindow(\"null\");\n\t}","id":53907,"modified_method":"public void testViewQuestionGraphs() throws Exception {\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.open(\"/web/guest/home/\");\n\t\tselenium.clickAt(\"//div[@id='dockbar']\",\n\t\t\tRuntimeVariables.replace(\"Dockbar\"));\n\t\tselenium.waitForElementPresent(\n\t\t\t\"//script[contains(@src,'/aui/aui-editable/aui-editable-min.js')]\");\n\t\tassertEquals(RuntimeVariables.replace(\"Go to\"),\n\t\t\tselenium.getText(\"//li[@id='_145_mySites']/a/span\"));\n\t\tselenium.mouseOver(\"//li[@id='_145_mySites']/a/span\");\n\t\tselenium.waitForVisible(\"link=Control Panel\");\n\t\tselenium.clickAt(\"link=Control Panel\",\n\t\t\tRuntimeVariables.replace(\"Control Panel\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.clickAt(\"link=Polls\", RuntimeVariables.replace(\"Polls\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Test Poll Question\"),\n\t\t\tselenium.getText(\"//tr[contains(.,'Test Poll Question')]/td[1]/a\"));\n\t\tselenium.clickAt(\"link=Test Poll Question\",\n\t\t\tRuntimeVariables.replace(\"Test Poll Question\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertEquals(RuntimeVariables.replace(\"Area\"),\n\t\t\tselenium.getText(\"//a[contains(.,'Area')]\"));\n\t\tselenium.clickAt(\"//a[contains(.,'Area')]\",\n\t\t\tRuntimeVariables.replace(\"Area\"));\n\t\tThread.sleep(5000);\n\t\tselenium.selectPopUp(\"\");\n\t\tassertTrue(selenium.isVisible(\"//body/img\"));\n\t\tselenium.close();\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.waitForVisible(\"//a[contains(.,'Horizontal Bar')]\");\n\t\tselenium.clickAt(\"//a[contains(.,'Horizontal Bar')]\",\n\t\t\tRuntimeVariables.replace(\"Horizontal Bar\"));\n\t\tThread.sleep(5000);\n\t\tselenium.selectPopUp(\"\");\n\t\tassertTrue(selenium.isVisible(\"//body/img\"));\n\t\tselenium.close();\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.waitForVisible(\"//a[contains(.,'Line')]\");\n\t\tselenium.clickAt(\"//a[contains(.,'Line')]\",\n\t\t\tRuntimeVariables.replace(\"Line\"));\n\t\tThread.sleep(5000);\n\t\tselenium.selectPopUp(\"\");\n\t\tassertTrue(selenium.isVisible(\"//body/img\"));\n\t\tselenium.close();\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.waitForVisible(\"//a[contains(.,'Pie')]\");\n\t\tselenium.clickAt(\"//a[contains(.,'Pie')]\",\n\t\t\tRuntimeVariables.replace(\"Pie\"));\n\t\tThread.sleep(5000);\n\t\tselenium.selectPopUp(\"\");\n\t\tassertTrue(selenium.isVisible(\"//body/img\"));\n\t\tselenium.close();\n\t\tselenium.selectWindow(\"null\");\n\t\tselenium.waitForVisible(\"//a[contains(.,'Vertical Bar')]\");\n\t\tselenium.clickAt(\"//a[contains(.,'Vertical Bar')]\",\n\t\t\tRuntimeVariables.replace(\"Vertical Bar\"));\n\t\tThread.sleep(5000);\n\t\tselenium.selectPopUp(\"\");\n\t\tassertTrue(selenium.isVisible(\"//body/img\"));\n\t\tselenium.close();\n\t\tselenium.selectWindow(\"null\");\n\t}","commit_id":"d48221328463d34e1553429daa4d322a1ef44d3e","url":"https://github.com/liferay/liferay-portal"},{"original_method":"/**\n     * Shows the annotations pane from the top of the page\n     */\n    public void showAnnotationsPane()\n    {\n        // Open the page menu\n        getDriver().findElement(By.xpath(\"//div[@id='tmMoreActions']/button[contains(@class, 'dropdown-toggle')]\")).\n            click();\n        // Click on the annotations button\n        WebElement annotationsPane = getDriver().findElement(\n            By.xpath(\"//div[@id='tmMoreActions]//a[contains(., 'Annotations')]\"));\n        annotationsPane.click();\n        // Verify that the annotationssettings panel is open\n        waitUntilElementIsVisible(By.className(\"annotationsettings\"));\n    }","id":53908,"modified_method":"/**\n     * Shows the annotations pane from the top of the page\n     */\n    public void showAnnotationsPane()\n    {\n        // Open the page menu\n        getDriver().findElement(By.xpath(\"//div[@id='tmMoreActions']/button[contains(@class, 'dropdown-toggle')]\")).\n            click();\n        // Click on the annotations button\n        WebElement annotationsPane = getDriver().findElement(\n            By.xpath(\"//div[@id='tmMoreActions']//a[contains(., 'Annotations')]\"));\n        annotationsPane.click();\n        // Verify that the annotationssettings panel is open\n        waitUntilElementIsVisible(By.className(\"annotationsettings\"));\n    }","commit_id":"e42c0d5294f8246169f347eae84b3df70ced46ff","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Hides the annotations pane from the top of the page\n     */\n    public void hideAnnotationsPane()\n    {\n        // Open the page menu\n        getDriver().findElement(By.xpath(\"//div[@id='tmMoreActions']/button[contains(@class, 'dropdown-toggle')]\")).\n                click();\n        // Click on the annotations button\n        WebElement annotationsPane = getDriver().findElement(\n                By.xpath(\"//div[@id='tmMoreActions]//a[contains(., 'Annotations')]\"));\n        annotationsPane.click();\n        // Verify that the annotationssettings panel is close\n        waitUntilElementDisappears(By.className(\"annotationsettings\"));\n    }","id":53909,"modified_method":"/**\n     * Hides the annotations pane from the top of the page\n     */\n    public void hideAnnotationsPane()\n    {\n        // Open the page menu\n        getDriver().findElement(By.xpath(\"//div[@id='tmMoreActions']/button[contains(@class, 'dropdown-toggle')]\")).\n                click();\n        // Click on the annotations button\n        WebElement annotationsPane = getDriver().findElement(\n                By.xpath(\"//div[@id='tmMoreActions']//a[contains(., 'Annotations')]\"));\n        annotationsPane.click();\n        // Verify that the annotationssettings panel is close\n        waitUntilElementDisappears(By.className(\"annotationsettings\"));\n    }","commit_id":"e42c0d5294f8246169f347eae84b3df70ced46ff","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Drags a field of the specified type from the field palette to the field canvas.\n     * \n     * @param fieldType the type of field to add, as displayed on the field palette\n     */\n    public ClassFieldEditPane addField(String fieldType)\n    {\n        String fieldXPath = \"//span[@class = 'field' and normalize-space(.) = '%s']\";\n        WebElement field = palette.findElement(By.xpath(String.format(fieldXPath, fieldType)));\n        int fieldCount = getUtil().findElementsWithoutWaiting(getDriver(), fields, By.xpath(\"li\")).size();\n        // NOTE: We scroll the page up because the drag&drop fails sometimes if the dragged field and the canvas (drop\n        // target) are not fully visible. See https://code.google.com/p/selenium/issues/detail?id=3075 .\n        palette.sendKeys(Keys.HOME);\n        new Actions(getDriver()).dragAndDrop(field, fields).perform();\n        final WebElement addedField = fields.findElement(By.xpath(\"li[\" + (fieldCount + 1) + \"]\"));\n\n        getUtil().waitUntilCondition(new ExpectedCondition<Boolean>()\n        {\n            @Override\n            public Boolean apply(WebDriver driver)\n            {\n                try {\n                    return !addedField.getAttribute(\"class\").contains(\"loading\");\n                } catch (NotFoundException e) {\n                    return false;\n                } catch (StaleElementReferenceException e) {\n                    // The element was removed from DOM in the meantime\n                    return false;\n                }\n            }\n        });\n\n        return new ClassFieldEditPane(addedField.getAttribute(\"id\").substring(\"field-\".length()));\n    }","id":53910,"modified_method":"/**\n     * Drags a field of the specified type from the field palette to the field canvas.\n     * \n     * @param fieldType the type of field to add, as displayed on the field palette\n     */\n    public ClassFieldEditPane addField(String fieldType)\n    {\n        String fieldXPath = \"//span[@class = 'field' and normalize-space(.) = '%s']\";\n        WebElement field = palette.findElement(By.xpath(String.format(fieldXPath, fieldType)));\n        // NOTE: We scroll the page up because the drag&drop fails sometimes if the dragged field and the canvas (drop\n        // target) are not fully visible. See https://code.google.com/p/selenium/issues/detail?id=3075 .\n        palette.sendKeys(Keys.HOME);\n        new Actions(getDriver()).dragAndDrop(field, fieldsCanvas).perform();\n        final WebElement addedField = fieldsCanvas.findElement(By.xpath(\"./ul[@id='fields']/li[last()]\"));\n\n        getUtil().waitUntilCondition(new ExpectedCondition<Boolean>()\n        {\n            @Override\n            public Boolean apply(WebDriver driver)\n            {\n                try {\n                    return !addedField.getAttribute(\"class\").contains(\"loading\");\n                } catch (NotFoundException e) {\n                    return false;\n                } catch (StaleElementReferenceException e) {\n                    // The element was removed from DOM in the meantime\n                    return false;\n                }\n            }\n        });\n\n        return new ClassFieldEditPane(addedField.getAttribute(\"id\").substring(\"field-\".length()));\n    }","commit_id":"e42c0d5294f8246169f347eae84b3df70ced46ff","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"/**\n     * Moves the class field specified by the first parameter before the class field specified by the second parameter\n     * \n     * @param fieldToMove the class field to be moved\n     * @param beforeField the class field before which to insert the field being moved\n     */\n    public void moveFieldBefore(String fieldToMove, String beforeField)\n    {\n        // Drag the field slightly before the target field (vertically). For some reason it doesn't work if we use x=0.\n        new ClassFieldEditPane(fieldToMove).dragTo(fields.findElement(By.id(\"field-\" + beforeField)), 1, -3);\n    }","id":53911,"modified_method":"/**\n     * Moves the class field specified by the first parameter before the class field specified by the second parameter\n     * \n     * @param fieldToMove the class field to be moved\n     * @param beforeField the class field before which to insert the field being moved\n     */\n    public void moveFieldBefore(String fieldToMove, String beforeField)\n    {\n        // Drag the field slightly before the target field (vertically). For some reason it doesn't work if we use x=0.\n        new ClassFieldEditPane(fieldToMove).dragTo(fieldsCanvas.findElement(By.id(\"field-\" + beforeField)), 1, -30);\n    }","commit_id":"e42c0d5294f8246169f347eae84b3df70ced46ff","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public AddLanguagePage selectLanguage(String language)\n   {\n      languageInput.sendKeys(language);\n      return this;\n   }","id":53912,"modified_method":"public AddLanguagePage inputLanguage(String language)\n   {\n      languageInput.sendKeys(language);\n      return this;\n   }","commit_id":"11a5783d1c43f40fd86a2faadf60e4fe73e076c9","url":"https://github.com/zanata/zanata-server"},{"original_method":"public ManageLanguagePage addLanguageAndJoin(String localeId)\n   {\n      ManageLanguagePage manageLanguagePage = addLanguage(localeId);\n      manageLanguagePage = manageLanguagePage.manageTeamMembersFor(localeId);\n      if (!manageLanguagePage.getMemberUsernames().contains(\"admin\"))\n      {\n         return manageLanguagePage.joinLanguageTeam();\n      }\n      else\n      {\n         LOGGER.warn(\"admin has already joined the language [{}]\", localeId);\n         return manageLanguagePage;\n      }\n   }","id":53913,"modified_method":"public ManageLanguagePage addLanguageAndJoin(String localeId)\n   {\n      ManageLanguagePage manageLanguagePage = addLanguage(localeId);\n      manageLanguagePage = manageLanguagePage.manageTeamMembersFor(localeId);\n      if (!manageLanguagePage.getMemberUsernames().contains(\"admin\"))\n      {\n         return manageLanguagePage.joinLanguageTeam();\n      }\n      else\n      {\n         log.warn(\"admin has already joined the language [{}]\", localeId);\n         return manageLanguagePage;\n      }\n   }","commit_id":"11a5783d1c43f40fd86a2faadf60e4fe73e076c9","url":"https://github.com/zanata/zanata-server"},{"original_method":"public ManageLanguagePage addLanguage(String localeId)\n   {\n      return goToHome().goToAdministration().goToManageLanguagePage().addNewLanguage()\n            .enableLanguageByDefault().selectLanguage(localeId).saveLanguage();\n   }","id":53914,"modified_method":"public ManageLanguagePage addLanguage(String localeId)\n   {\n      ManageLanguagePage manageLanguagePage = goToHome().goToAdministration().goToManageLanguagePage();\n      List<String> locales = manageLanguagePage.getLanguageLocales();\n      if (locales.contains(localeId))\n      {\n         log.warn(\"{} has already been added\", localeId);\n         return manageLanguagePage;\n      }\n      //continue to add the new language\n      return manageLanguagePage.addNewLanguage().enableLanguageByDefault().inputLanguage(localeId).saveLanguage();\n   }","commit_id":"11a5783d1c43f40fd86a2faadf60e4fe73e076c9","url":"https://github.com/zanata/zanata-server"},{"original_method":"public ManageLanguagePage manageTeamMembersFor(String localeId)\n   {\n      List<WebElement> languageTableRows = getDriver().findElements(By.className(\"rich-table-row\"));\n      for (int i = 0, languageTableRowsSize = languageTableRows.size(); i < languageTableRowsSize; i++)\n      {\n         WebElement row = languageTableRows.get(i);\n         LOGGER.info(\"tabel row is: {}\", row.getText());\n         if (row.getText().contains(localeId))\n         {\n            LOGGER.info(\"about to click team members button #{}\", i);\n            List<WebElement> teamMembersButtons = row.findElements(By.xpath(\"//input[@value='Team Members']\"));\n            teamMembersButtons.get(i).click();\n            return this;\n         }\n      }\n      throw new RuntimeException(\"can't find localeId\");\n   }","id":53915,"modified_method":"public ManageLanguagePage manageTeamMembersFor(final String localeId)\n   {\n      List<TableRow> tableRows = WebElementUtil.getTableRows(getDriver(), By.xpath(\"//table\"));\n      Collection<TableRow> matchedRow = Collections2.filter(tableRows, new Predicate<TableRow>()\n      {\n         @Override\n         public boolean apply(TableRow input)\n         {\n            List<String> cellContents = input.getCellContents();\n            String localeCell = cellContents.get(0).trim();\n            return localeCell.equalsIgnoreCase(localeId);\n         }\n      });\n\n      log.debug(\"for locale [{}] found table row: {}\", localeId, matchedRow);\n      Preconditions.checkState(matchedRow.size() == 1, \"given localeId can't not be found on table\");\n      List<WebElement> cells = matchedRow.iterator().next().getCells();\n      int teamMemberCellIndex = cells.size() - 1;\n      WebElement teamMemberCell = cells.get(teamMemberCellIndex);\n      WebElement teamMemberButton = teamMemberCell.findElement(By.xpath(\".//input[@value='Team Members']\"));\n      teamMemberButton.click();\n      return this;\n   }","commit_id":"11a5783d1c43f40fd86a2faadf60e4fe73e076c9","url":"https://github.com/zanata/zanata-server"},{"original_method":"public List<String> getMemberUsernames()\n   {\n      List<WebElement> elements = getDriver().findElements(By.className(\"rich-table-row\"));\n      Collection<String> rows = Collections2.transform(elements, new Function<WebElement, String>()\n      {\n         @Override\n         public String apply(WebElement from)\n         {\n            String text = from.getText();\n            return text.split(\"\\\\s\")[0];\n         }\n      });\n      return ImmutableList.copyOf(rows);\n   }","id":53916,"modified_method":"public List<String> getMemberUsernames()\n   {\n      List<TableRow> languageMembersTable = WebElementUtil.getTableRows(getDriver(), By.xpath(\"//table\"));\n      return WebElementUtil.getColumnContents(languageMembersTable, USERNAME_COLUMN);\n   }","commit_id":"11a5783d1c43f40fd86a2faadf60e4fe73e076c9","url":"https://github.com/zanata/zanata-server"},{"original_method":"public List<String> getProjectNamesOnCurrentPage()\n   {\n      if (mainContentDiv.getText().contains(\"No project exists\"))\n      {\n         return Collections.emptyList();\n      }\n\n      List<TableRow> tableRows = WebElementUtil.getTableRows(getDriver(), By.className(\"rich-table\"));\n\n      return ImmutableList.copyOf(Collections2.transform(tableRows, new Function<TableRow, String>()\n      {\n         @Override\n         public String apply(TableRow from)\n         {\n            // first column is name\n            return from.getCellContents().get(0);\n         }\n      }));\n//      WebElement table = getDriver().findElement(By.className(\"rich-table\"));\n//      List<WebElement> rows = table.findElements(By.xpath(\".//tbody/tr/td[1]\"));\n//      return WebElementUtil.elementsToText(rows);\n   }","id":53917,"modified_method":"public List<String> getProjectNamesOnCurrentPage()\n   {\n      if (mainContentDiv.getText().contains(\"No project exists\"))\n      {\n         return Collections.emptyList();\n      }\n\n      List<TableRow> tableRows = WebElementUtil.getTableRows(getDriver(), By.className(\"rich-table\"));\n\n      return WebElementUtil.getColumnContents(tableRows, PROJECT_NAME_COLUMN);\n   }","commit_id":"11a5783d1c43f40fd86a2faadf60e4fe73e076c9","url":"https://github.com/zanata/zanata-server"},{"original_method":"public static List<TableRow> getTableRows(WebDriver driver, By byQueryForTable)\n   {\n      WebElement table = driver.findElement(byQueryForTable);\n      Preconditions.checkArgument(table.getTagName().equalsIgnoreCase(\"table\"), \"argument must be a table\");\n\n      List<WebElement> rows = table.findElements(By.xpath(\".//tbody/tr\"));\n      return ImmutableList.copyOf(Collections2.transform(rows, WebElementTableRowFunction.FUNCTION));\n   }","id":53918,"modified_method":"public static List<TableRow> getTableRows(WebDriver driver, By byQueryForTable)\n   {\n      WebElement table = driver.findElement(byQueryForTable);\n      Preconditions.checkArgument(table.getTagName().equalsIgnoreCase(\"table\"), \"By query must return a table\");\n\n      List<WebElement> rows = table.findElements(By.xpath(\".//tbody/tr\"));\n      return ImmutableList.copyOf(Collections2.transform(rows, WebElementTableRowFunction.FUNCTION));\n   }","commit_id":"11a5783d1c43f40fd86a2faadf60e4fe73e076c9","url":"https://github.com/zanata/zanata-server"},{"original_method":"public List<WebElement> getExistingTemplatesLinks()\n    {\n        WebElement availableTemplatesHeader = getDriver().findElement(By.id(\"HAvailableTemplateProviders\"));\n        // a bit unreliable here, but it's the best I can do\n        WebElement ul = availableTemplatesHeader.findElement(By.xpath(\"following-sibling::node()\"));\n        return ul.findElements(By.tagName(\"a\"));\n    }","id":53919,"modified_method":"public List<WebElement> getExistingTemplatesLinks()\n    {\n        // A bit unreliable here, but it's the best I can do.\n        return getDriver().findElements(By.xpath(\"//ul[preceding-sibling::*[. = 'Available Template Providers']]//a\"));\n    }","commit_id":"d0b72429f8280d0a049472910e0c30cecb3ff7f4","url":"https://github.com/xwiki/xwiki-platform"},{"original_method":"public AbstractPage(final  WebDriver driver, PageContext pageContext)\n   {\n      PageFactory.initElements(new AjaxElementLocatorFactory(driver, 30), this);\n      this.driver = driver;\n      ajaxWaitForTenSec = waitForSeconds(driver, 10);\n      if (pageContext == PageContext.jsf)\n      {\n         //webTran and jsp don't share same page layout\n         navMenuItems = driver.findElement(By.id(\"tabs-menu\")).findElements(By.tagName(\"a\"));\n      }\n   }","id":53920,"modified_method":"public AbstractPage(final  WebDriver driver, PageContext pageContext)\n   {\n      PageFactory.initElements(new AjaxElementLocatorFactory(driver, 30), this);\n      this.driver = driver;\n      ajaxWaitForTenSec = waitForSeconds(driver, 10);\n      if (pageContext == PageContext.jsf)\n      {\n         //webTran and jsp don't share same page layout\n         navMenuItems = driver.findElement(By.className(\"navBar\")).findElements(By.tagName(\"a\"));\n      }\n   }","commit_id":"76a1005d9bf0b98827fcc818d97ae15738a6a2c5","url":"https://github.com/zanata/zanata-server"},{"original_method":"@Test\n   public void canCreateProjectAndVersion()\n   {\n      final String projectId = \"plurals\";\n      final String projectVersion = \"master\";\n      final String projectName = \"plural project\";\n\n      new LoginWorkFlow().signIn(\"admin\", \"admin\");\n      ProjectWorkFlow projectWorkFlow = new ProjectWorkFlow();\n      List<String> projects = projectWorkFlow.goToHome().goToProjects().getProjectNamesOnCurrentPage();\n      log.info(\"current projects: {}\", projects);\n\n      ProjectPage projectPage = projectWorkFlow.createNewProject(projectId, projectName);\n\n      assertThat(projectPage.getProjectId(), Matchers.equalTo(\"Project ID: \" + projectId));\n      assertThat(projectPage.getProjectName(), Matchers.equalTo(\"Name: plural project\"));\n\n      ProjectVersionPage projectVersionPage = projectWorkFlow.createNewProjectVersion(projectPage, projectVersion);\n\n      // can go to project version page\n      projectPage = projectWorkFlow.goToProjectByName(projectName);\n      projectVersionPage = projectPage.goToActiveVersion(projectVersion);\n\n   }","id":53921,"modified_method":"@Test\n   public void canCreateProjectAndVersion()\n   {\n      final String projectId = \"plurals\";\n      final String projectVersion = \"master\";\n      final String projectName = \"plural project\";\n\n      new LoginWorkFlow().signIn(\"admin\", \"admin\");\n      ProjectWorkFlow projectWorkFlow = new ProjectWorkFlow();\n      List<String> projects = projectWorkFlow.goToHome().goToProjects().getProjectNamesOnCurrentPage();\n      log.info(\"current projects: {}\", projects);\n\n      ProjectPage projectPage = projectWorkFlow.createNewProject(projectId, projectName);\n\n      assertThat(projectPage.getProjectId(), Matchers.equalTo(projectId));\n      assertThat(projectPage.getProjectName(), Matchers.equalTo(projectName));\n\n      ProjectVersionPage projectVersionPage = projectWorkFlow.createNewProjectVersion(projectPage, projectVersion);\n\n      // can go to project version page\n      projectPage = projectWorkFlow.goToProjectByName(projectName);\n      projectVersionPage = projectPage.goToActiveVersion(projectVersion);\n\n   }","commit_id":"76a1005d9bf0b98827fcc818d97ae15738a6a2c5","url":"https://github.com/zanata/zanata-server"},{"original_method":"public String loggedInAs()\n   {\n      String[] parts = headerTopRightDiv.getText().split(\"\\\\s\");\n      return parts[0];\n   }","id":53922,"modified_method":"public String loggedInAs()\n   {\n      String[] parts = userColumn.getText().split(\"\\\\s\");\n      return parts[0];\n   }","commit_id":"76a1005d9bf0b98827fcc818d97ae15738a6a2c5","url":"https://github.com/zanata/zanata-server"},{"original_method":"public SignInPage clickSignInLink()\n   {\n      LOGGER.info(\"header text: {}\", headerTopRightDiv.getText());\n      List<WebElement> links = headerTopRightDiv.findElements(By.tagName(\"a\"));\n      WebElement firstLink = links.get(0);\n      if (firstLink.getText().equalsIgnoreCase(\"Sign In\"))\n      {\n         firstLink.click();\n      }\n      // else already signed in, no op\n      return new SignInPage(getDriver());\n   }","id":53923,"modified_method":"public SignInPage clickSignInLink()\n   {\n      LOGGER.info(\"header text: {}\", userColumn.getText());\n      WebElement signInLink = userColumn.findElement(By.id(\"Sign_in\"));\n      signInLink.click();\n      // else already signed in, no op\n      return new SignInPage(getDriver());\n   }","commit_id":"76a1005d9bf0b98827fcc818d97ae15738a6a2c5","url":"https://github.com/zanata/zanata-server"},{"original_method":"public boolean hasLoggedIn()\n   {\n      LOGGER.info(\"header text: {}\", headerTopRightDiv.getText());\n      return headerTopRightDiv.getText().contains(\"Sign Out\");\n   }","id":53924,"modified_method":"public boolean hasLoggedIn()\n   {\n      List<WebElement> signOutLink = getDriver().findElements(By.id(\"Sign_out\"));\n      return signOutLink.size() > 0;\n   }","commit_id":"76a1005d9bf0b98827fcc818d97ae15738a6a2c5","url":"https://github.com/zanata/zanata-server"},{"original_method":"public ManageLanguagePage(WebDriver driver)\n   {\n      super(driver);\n   }","id":53925,"modified_method":"public ManageLanguagePage(WebDriver driver)\n   {\n      super(driver);\n      languageTable = mainBody.findElement(By.xpath(\".//table\"));\n   }","commit_id":"76a1005d9bf0b98827fcc818d97ae15738a6a2c5","url":"https://github.com/zanata/zanata-server"},{"original_method":"public List<String> getLanguageLocales()\n   {\n      List<TableRow> languageTable = WebElementUtil.getTableRows(getDriver(), By.xpath(\"//table\"));\n      return WebElementUtil.getColumnContents(languageTable, LOCALE_COLUMN);\n   }","id":53926,"modified_method":"public List<String> getLanguageLocales()\n   {\n      List<TableRow> languages = WebElementUtil.getTableRows(languageTable);\n      return WebElementUtil.getColumnContents(languages, LOCALE_COLUMN);\n   }","commit_id":"76a1005d9bf0b98827fcc818d97ae15738a6a2c5","url":"https://github.com/zanata/zanata-server"},{"original_method":"private TableRow findRowByLocale(final String localeId)\n   {\n\n      TableRow matchedRow = waitForSeconds(getDriver(), 20).until(new Function<WebDriver, TableRow>()\n      {\n         @Override\n         public TableRow apply(WebDriver driver)\n         {\n            List<TableRow> tableRows = WebElementUtil.getTableRows(driver, By.xpath(\"//table\"));\n            Collection<TableRow> matchedRow = Collections2.filter(tableRows, new Predicate<TableRow>()\n            {\n               @Override\n               public boolean apply(TableRow input)\n               {\n                  List<String> cellContents = input.getCellContents();\n                  String localeCell = cellContents.get(LOCALE_COLUMN).trim();\n                  return localeCell.equalsIgnoreCase(localeId);\n               }\n            });\n\n            log.debug(\"for locale [{}] found table row: {}\", localeId, matchedRow);\n            //we keep looking for the locale until timeout\n            return (matchedRow.size() == 1) ? matchedRow.iterator().next() : null;\n         }\n      });\n      return matchedRow;\n   }","id":53927,"modified_method":"private TableRow findRowByLocale(final String localeId)\n   {\n      TableRow matchedRow = waitForSeconds(getDriver(), 20).until(new Function<WebDriver, TableRow>()\n      {\n         @Override\n         public TableRow apply(WebDriver driver)\n         {\n            List<TableRow> tableRows = WebElementUtil.getTableRows(languageTable);\n            Collection<TableRow> matchedRow = Collections2.filter(tableRows, new Predicate<TableRow>()\n            {\n               @Override\n               public boolean apply(TableRow input)\n               {\n                  List<String> cellContents = input.getCellContents();\n                  String localeCell = cellContents.get(LOCALE_COLUMN).trim();\n                  return localeCell.equalsIgnoreCase(localeId);\n               }\n            });\n\n            log.debug(\"for locale [{}] found table row: {}\", localeId, matchedRow);\n            //we keep looking for the locale until timeout\n            return (matchedRow.size() == 1) ? matchedRow.iterator().next() : null;\n         }\n      });\n      return matchedRow;\n   }","commit_id":"76a1005d9bf0b98827fcc818d97ae15738a6a2c5","url":"https://github.com/zanata/zanata-server"},{"original_method":"public List<String> getMemberUsernames()\n   {\n      if (getMembersInfo().contains(\"0 members\"))\n      {\n         ManageLanguageTeamMemberPage.log.info(\"no members yet for this language\");\n         return Collections.emptyList();\n      }\n      List<TableRow> languageMembersTable = WebElementUtil.getTableRows(getDriver(), By.xpath(\"//table\"));\n      return WebElementUtil.getColumnContents(languageMembersTable, USERNAME_COLUMN);\n   }","id":53928,"modified_method":"public List<String> getMemberUsernames()\n   {\n      if (getMembersInfo().contains(\"0 members\"))\n      {\n         ManageLanguageTeamMemberPage.log.info(\"no members yet for this language\");\n         return Collections.emptyList();\n      }\n      List<TableRow> languageMembersTable = WebElementUtil.getTableRows(memberPanelBody.findElement(By.xpath(\".//table\")));\n      return WebElementUtil.getColumnContents(languageMembersTable, USERNAME_COLUMN);\n   }","commit_id":"76a1005d9bf0b98827fcc818d97ae15738a6a2c5","url":"https://github.com/zanata/zanata-server"},{"original_method":"public String getProjectId()\n   {\n      return h1.get(0).getText();\n   }","id":53929,"modified_method":"public String getProjectId()\n   {\n      List<String> breadcrumbs = getBreadcrumbs();\n      return breadcrumbs.get(breadcrumbs.size() - 1);\n   }","commit_id":"76a1005d9bf0b98827fcc818d97ae15738a6a2c5","url":"https://github.com/zanata/zanata-server"},{"original_method":"public ProjectPage(final WebDriver driver)\n   {\n      super(driver);\n      //TODO this is ugly and may change in the future\n      h1 = mainContent.findElements(By.tagName(\"h1\"));\n      Preconditions.checkState(h1.size() >= 2, \"should have at least 2 <h1> under main content\");\n   }","id":53930,"modified_method":"public ProjectPage(final WebDriver driver)\n   {\n      super(driver);\n   }","commit_id":"76a1005d9bf0b98827fcc818d97ae15738a6a2c5","url":"https://github.com/zanata/zanata-server"},{"original_method":"public String getProjectName()\n   {\n      return h1.get(1).getText();\n   }","id":53931,"modified_method":"public String getProjectName()\n   {\n      return getTitle().replaceAll(\"Zanata:\", \"\");\n   }","commit_id":"76a1005d9bf0b98827fcc818d97ae15738a6a2c5","url":"https://github.com/zanata/zanata-server"},{"original_method":"public <P extends AbstractPage> P signInAndGoToPage(String username, String password, Class<P> pageClass)\n   {\n      LOGGER.info(\"log in as username: {}\", username);\n      usernameField.sendKeys(username);\n      passwordField.sendKeys(password);\n      signInButton.click();\n      return PageFactory.initElements(getDriver(), pageClass);\n   }","id":53932,"modified_method":"public <P extends AbstractPage> P signInAndGoToPage(String username, String password, Class<P> pageClass)\n   {\n      LOGGER.info(\"log in as username: {}\", username);\n      usernameField.sendKeys(username);\n      passwordField.sendKeys(password);\n      signInButton.click();\n      try\n      {\n         waitForSeconds(getDriver(), 3).until(new Predicate<WebDriver>()\n         {\n            @Override\n            public boolean apply(WebDriver driver)\n            {\n               List<WebElement> signOutLink = driver.findElements(By.id(\"Sign_out\"));\n               return signOutLink.size() == 1;\n            }\n         });\n      }\n      catch (TimeoutException e)\n      {\n         log.error(\"timeout on login. If you are running tests manually with cargo.wait, you probably forget to create the user admin/admin. See ManualRunHelper.\");\n         throw e;\n      }\n      return PageFactory.initElements(getDriver(), pageClass);\n   }","commit_id":"76a1005d9bf0b98827fcc818d97ae15738a6a2c5","url":"https://github.com/zanata/zanata-server"},{"original_method":"public List<String> getGroupNames()\n   {\n      if (mainContentDiv.getText().contains(\"No group exists\"))\n      {\n         return Collections.emptyList();\n      }\n\n      List<TableRow> tableRows = WebElementUtil.getTableRows(getDriver(), By.tagName(\"table\"));\n      return WebElementUtil.getColumnContents(tableRows, GROUP_NAME_COLUMN);\n   }","id":53933,"modified_method":"public List<String> getGroupNames()\n   {\n      if (mainContentDiv.getText().contains(\"No group exists\"))\n      {\n         return Collections.emptyList();\n      }\n\n      List<TableRow> tableRows = WebElementUtil.getTableRows(mainContentDiv.findElement(By.xpath(\".//table\")));\n      return WebElementUtil.getColumnContents(tableRows, GROUP_NAME_COLUMN);\n   }","commit_id":"76a1005d9bf0b98827fcc818d97ae15738a6a2c5","url":"https://github.com/zanata/zanata-server"},{"original_method":"private void addCommonHostListenerDeps(OperationContext context, ServiceBuilder<WebServerService> builder, final PathElement listenerPath) {\n        ModelNode listeners = Resource.Tools.readModel(context.readResource(PathAddress.pathAddress(listenerPath)), 1);\n        if (listeners.isDefined()) {\n            for (Property p : listeners.asPropertyList()) {\n                String listenerName = p.getValue().asProperty().getName();\n                builder.addDependency(UndertowService.LISTENER.append(listenerName));\n            }\n        }\n    }","id":53934,"modified_method":"private void addCommonHostListenerDeps(OperationContext context, ServiceBuilder<WebServerService> builder, final PathElement listenerPath) {\n        ModelNode listeners = Resource.Tools.readModel(context.readResource(PathAddress.pathAddress(listenerPath)), 1);\n        if (listeners.isDefined()) {\n            for (Property p : listeners.asPropertyList()) {\n                for (Property listener : p.getValue().asPropertyList()) {\n                    builder.addDependency(UndertowService.LISTENER.append(listener.getName()));\n                }\n            }\n        }\n    }","commit_id":"9d61930ff7ce08ddabee440218a4c898bc59d535","url":"https://github.com/wildfly/wildfly"},{"original_method":"public BatchEnvironment getBatchEnvironment(final ClassLoader cl) {\n        return environments.get(cl);\n    }","id":53935,"modified_method":"public BatchEnvironment getBatchEnvironment(final ClassLoader cl) {\n        BatchEnvironment result = environments.get(cl);\n        if (result == null) {\n            result = INVALID_BATCH_ENV;\n        }\n        return result;\n    }","commit_id":"aa6bc51caf8d4da1d4a9b79ec673d0341fe383b7","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public synchronized void start(final StartContext context) throws StartException {\n        final BatchEnvironment batchEnvironment = new WildFlyBatchEnvironment(classLoader,\n                beanManagerInjector.getOptionalValue(), executorServiceInjector.getValue(),\n                userTransactionInjector.getOptionalValue(), properties);\n        // Add the service to the factory\n        BatchEnvironmentFactory.getInstance().add(classLoader, batchEnvironment);\n        this.batchEnvironment = batchEnvironment;\n    }","id":53936,"modified_method":"@Override\n    public synchronized void start(final StartContext context) throws StartException {\n        WildFlyBatchLogger.LOGGER.debugf(\"Creating batch environment; %s\", classLoader);\n        final BatchEnvironment batchEnvironment = new WildFlyBatchEnvironment(classLoader,\n                beanManagerInjector.getOptionalValue(), executorServiceInjector.getValue(),\n                userTransactionInjector.getOptionalValue(), properties);\n        // Add the service to the factory\n        BatchEnvironmentFactory.getInstance().add(classLoader, batchEnvironment);\n        this.batchEnvironment = batchEnvironment;\n    }","commit_id":"aa6bc51caf8d4da1d4a9b79ec673d0341fe383b7","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public synchronized void stop(final StopContext context) {\n        if (batchEnvironment != null)\n            BatchEnvironmentFactory.getInstance().remove(batchEnvironment.getClassLoader());\n        batchEnvironment = null;\n    }","id":53937,"modified_method":"@Override\n    public synchronized void stop(final StopContext context) {\n        WildFlyBatchLogger.LOGGER.debugf(\"Removing batch environment; %s\", classLoader);\n        BatchEnvironmentFactory.getInstance().remove(classLoader);\n        properties = null;\n        classLoader = null;\n        batchEnvironment = null;\n    }","commit_id":"aa6bc51caf8d4da1d4a9b79ec673d0341fe383b7","url":"https://github.com/wildfly/wildfly"},{"original_method":"@Override\n    public void writeContent(final XMLExtendedStreamWriter writer, final SubsystemMarshallingContext context) throws XMLStreamException {\n        context.startSubsystemElement(Namespace.CURRENT.getUriString(), false);\n        final ModelNode model = context.getModelNode();\n        BatchSubsystemDefinition.JOB_REPOSITORY_TYPE.marshallAsElement(model, writer);\n\n        // Write the thread pool\n        threadsParser.writeUnboundedQueueThreadPool(writer, model.get(BatchConstants.THREAD_POOL).asProperty(), Element.THREAD_POOL.getLocalName(), false);\n\n        // Write out the thread factory\n        if (model.hasDefined(BatchConstants.THREAD_FACTORY)) {\n            threadsParser.writeThreadFactory(writer, model.get(BatchConstants.THREAD_FACTORY).asProperty());\n        }\n\n        writer.writeEndElement();\n    }","id":53938,"modified_method":"@Override\n    public void writeContent(final XMLExtendedStreamWriter writer, final SubsystemMarshallingContext context) throws XMLStreamException {\n        context.startSubsystemElement(Namespace.CURRENT.getUriString(), false);\n        final ModelNode model = context.getModelNode();\n        BatchSubsystemDefinition.JOB_REPOSITORY_TYPE.marshallAsElement(model, writer);\n\n        // Write the thread pool\n        if (model.hasDefined(BatchConstants.THREAD_POOL)) {\n            final List<Property> threadPools = model.get(BatchConstants.THREAD_POOL).asPropertyList();\n            for (Property threadPool : threadPools) {\n                threadsParser.writeUnboundedQueueThreadPool(writer, threadPool, Element.THREAD_POOL.getLocalName(), false);\n            }\n        }\n\n        // Write out the thread factory\n        if (model.hasDefined(BatchConstants.THREAD_FACTORY)) {\n            final List<Property> threadFactories = model.get(BatchConstants.THREAD_FACTORY).asPropertyList();\n            for (Property threadFactory : threadFactories) {\n                threadsParser.writeThreadFactory(writer, threadFactory);\n            }\n        }\n\n        writer.writeEndElement();\n    }","commit_id":"aa6bc51caf8d4da1d4a9b79ec673d0341fe383b7","url":"https://github.com/wildfly/wildfly"},{"original_method":"public void visitClassContext(ClassContext classContext) {\n\t\ttry {\n\t\t\tByteCodePattern pattern = getPattern();\n\t\t\tJavaClass jclass = classContext.getJavaClass();\n\t\t\tMethod[] methodList = jclass.getMethods();\n\n\t\t\tfor (int i = 0; i < methodList.length; ++i) {\n\t\t\t\tMethod method = methodList[i];\n\t\t\t\tif (method.isAbstract() || method.isNative())\n\t\t\t\t\tcontinue;\n\n\t\t\t\tif (DEBUG) {\n\t\t\t\t\tSystem.out.print(\n\t\t\t\t\t\t\"=====================================================================\\n\"+\n\t\t\t\t\t\t\"Method \" + jclass.getClassName() + \".\" + method.getName() + \"\\n\" +\n\t\t\t\t\t\t\"=====================================================================\\n\");\n\t\t\t\t}\n\n\t\t\t\tif (!prescreen(method, classContext))\n\t\t\t\t\tcontinue;\n\t\n\t\t\t\tMethodGen methodGen = classContext.getMethodGen(method);\n\t\t\t\tConstantPoolGen cpg = methodGen.getConstantPool();\n\t\t\t\tCFG cfg = classContext.getCFG(method);\n\t\t\t\tDepthFirstSearch dfs = classContext.getDepthFirstSearch(method);\n\t\t\t\tValueNumberDataflow vnaDataflow = classContext.getValueNumberDataflow(method);\n\n\t\t\t\tPatternMatcher matcher = new PatternMatcher(pattern, cfg, cpg, dfs, vnaDataflow);\n\t\t\t\tmatcher.execute();\n\t\n\t\t\t\tIterator<ByteCodePatternMatch> j = matcher.byteCodePatternMatchIterator();\n\t\t\t\twhile (j.hasNext()) {\n\t\t\t\t\tByteCodePatternMatch match = j.next();\n\n\t\t\t\t\tif (DEBUG) {\n\t\t\t\t\t\tSystem.out.println(\"Pattern match:\");\n\t\t\t\t\t\tIterator<PatternElementMatch> pemIter = match.patternElementMatchIterator();\n\t\t\t\t\t\twhile (pemIter.hasNext()) {\n\t\t\t\t\t\t\tPatternElementMatch pem = pemIter.next();\n\t\t\t\t\t\t\tSystem.out.println(\"\\t\" + pem.toString());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treportMatch(methodGen, match);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (DataflowAnalysisException e) {\n\t\t\tthrow new AnalysisException(\"BCPDoubleCheck caught exception\", e);\n\t\t} catch (CFGBuilderException e) {\n\t\t\tthrow new AnalysisException(e.getMessage());\n\t\t}\n\t}","id":53939,"modified_method":"public void visitClassContext(ClassContext classContext) {\n\t\ttry {\n\t\t\tByteCodePattern pattern = getPattern();\n\t\t\tJavaClass jclass = classContext.getJavaClass();\n\t\t\tMethod[] methodList = jclass.getMethods();\n\n\t\t\tfor (int i = 0; i < methodList.length; ++i) {\n\t\t\t\tMethod method = methodList[i];\n\t\t\t\tif (method.isAbstract() || method.isNative())\n\t\t\t\t\tcontinue;\n\n\t\t\t\tif (DEBUG) {\n\t\t\t\t\tSystem.out.print(\n\t\t\t\t\t\t\"=====================================================================\\n\"+\n\t\t\t\t\t\t\"Method \" + jclass.getClassName() + \".\" + method.getName() + \"\\n\" +\n\t\t\t\t\t\t\"=====================================================================\\n\");\n\t\t\t\t}\n\n\t\t\t\tif (!prescreen(method, classContext))\n\t\t\t\t\tcontinue;\n\t\n\t\t\t\tMethodGen methodGen = classContext.getMethodGen(method);\n\t\t\t\tif (methodGen == null)\n\t\t\t\t\tcontinue;\n\t\t\t\tConstantPoolGen cpg = methodGen.getConstantPool();\n\t\t\t\tCFG cfg = classContext.getCFG(method);\n\t\t\t\tDepthFirstSearch dfs = classContext.getDepthFirstSearch(method);\n\t\t\t\tValueNumberDataflow vnaDataflow = classContext.getValueNumberDataflow(method);\n\n\t\t\t\tPatternMatcher matcher = new PatternMatcher(pattern, cfg, cpg, dfs, vnaDataflow);\n\t\t\t\tmatcher.execute();\n\t\n\t\t\t\tIterator<ByteCodePatternMatch> j = matcher.byteCodePatternMatchIterator();\n\t\t\t\twhile (j.hasNext()) {\n\t\t\t\t\tByteCodePatternMatch match = j.next();\n\n\t\t\t\t\tif (DEBUG) {\n\t\t\t\t\t\tSystem.out.println(\"Pattern match:\");\n\t\t\t\t\t\tIterator<PatternElementMatch> pemIter = match.patternElementMatchIterator();\n\t\t\t\t\t\twhile (pemIter.hasNext()) {\n\t\t\t\t\t\t\tPatternElementMatch pem = pemIter.next();\n\t\t\t\t\t\t\tSystem.out.println(\"\\t\" + pem.toString());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treportMatch(methodGen, match);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (DataflowAnalysisException e) {\n\t\t\tthrow new AnalysisException(\"BCPDoubleCheck caught exception\", e);\n\t\t} catch (CFGBuilderException e) {\n\t\t\tthrow new AnalysisException(e.getMessage());\n\t\t}\n\t}","commit_id":"d370ea40403e30c950f733ae114b75c853dd83ac","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"/**\n\t * Visit ClassContext for a class.\n\t * The class context caches MethodGens and CFGs for a class,\n\t * so each visitor doesn't have to reconstruct them from scratch.\n\t * Build a control flow graph for each concrete method in the\n\t * class, and invoke the visitCFG() method on it.\n\t *\n\t * @param classContext the ClassContext\n\t */\n\tpublic void visitClassContext(ClassContext classContext) {\n\t\tthis.classContext = classContext;\n\n\t\tstartClass(classContext);\n\n\t\tJavaClass jclass = classContext.getJavaClass();\n\n\t\tMethod[] methods = jclass.getMethods();\n\t\tfor (int i = 0; i < methods.length; ++i) {\n\t\t\tMethod method = methods[i];\n\t\t\tif (method.isAbstract() || method.isNative())\n\t\t\t\tcontinue;\n\n\t\t\t// Get the MethodGen for the method from the ClassContext\n\t\t\tMethodGen mg = classContext.getMethodGen(method);\n\t\t\tif (DEBUG) System.out.println(\"**** Visiting method \" + jclass.getClassName() +  \".\" + mg.getName() + \" ****\");\n\n\t\t\t// Pre-screening hook for method.\n\t\t\t// The subclass may indicate that we don't need to build a CFG\n\t\t\t// for this method (because it is not interesting).\n\t\t\tif (!NOSCREEN && !preScreen(mg))\n\t\t\t\tcontinue;\n\n\t\t\t// Get the CFG for the method from the ClassContext\n\t\t\tCFG cfg;\n\t\t\ttry {\n\t\t\t\tcfg = classContext.getCFG(method);\n\t\t\t} catch (CFGBuilderException e) {\n\t\t\t\tthrow new AnalysisException(e.getMessage());\n\t\t\t}\n\n\t\t\tif (PRINTCFG) {\n\t\t\t\tCFGPrinter printer = new CFGPrinter(cfg);\n\t\t\t\tprinter.print(System.out);\n\t\t\t}\n\n\t\t\tvisitCFG(cfg, mg);\n\t\t}\n\n\t\tfinishClass();\n\t}","id":53940,"modified_method":"/**\n\t * Visit ClassContext for a class.\n\t * The class context caches MethodGens and CFGs for a class,\n\t * so each visitor doesn't have to reconstruct them from scratch.\n\t * Build a control flow graph for each concrete method in the\n\t * class, and invoke the visitCFG() method on it.\n\t *\n\t * @param classContext the ClassContext\n\t */\n\tpublic void visitClassContext(ClassContext classContext) {\n\t\tthis.classContext = classContext;\n\n\t\tstartClass(classContext);\n\n\t\tJavaClass jclass = classContext.getJavaClass();\n\n\t\tMethod[] methods = jclass.getMethods();\n\t\tfor (int i = 0; i < methods.length; ++i) {\n\t\t\tMethod method = methods[i];\n\t\t\tif (method.isAbstract() || method.isNative())\n\t\t\t\tcontinue;\n\n\t\t\t// Get the MethodGen for the method from the ClassContext\n\t\t\tMethodGen mg = classContext.getMethodGen(method);\n\t\t\tif (mg == null)\n\t\t\t\tcontinue;\n\t\t\tif (DEBUG) System.out.println(\"**** Visiting method \" + jclass.getClassName() +  \".\" + mg.getName() + \" ****\");\n\n\t\t\t// Pre-screening hook for method.\n\t\t\t// The subclass may indicate that we don't need to build a CFG\n\t\t\t// for this method (because it is not interesting).\n\t\t\tif (!NOSCREEN && !preScreen(mg))\n\t\t\t\tcontinue;\n\n\t\t\t// Get the CFG for the method from the ClassContext\n\t\t\tCFG cfg;\n\t\t\ttry {\n\t\t\t\tcfg = classContext.getCFG(method);\n\t\t\t} catch (CFGBuilderException e) {\n\t\t\t\tthrow new AnalysisException(e.getMessage());\n\t\t\t}\n\n\t\t\tif (PRINTCFG) {\n\t\t\t\tCFGPrinter printer = new CFGPrinter(cfg);\n\t\t\t\tprinter.print(System.out);\n\t\t\t}\n\n\t\t\tvisitCFG(cfg, mg);\n\t\t}\n\n\t\tfinishClass();\n\t}","commit_id":"d370ea40403e30c950f733ae114b75c853dd83ac","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"/**\n\t * Get a BitSet representing the bytecodes that are used in the given method.\n\t * This is useful for prescreening a method for the existence of particular instructions.\n\t * Because this step doesn't require building a MethodGen, it is very\n\t * fast and memory-efficient.  It may allow a Detector to avoid some\n\t * very expensive analysis, which is a Big Win for the user.\n\t *\n\t * @param method the method\n\t * @return the BitSet containing the opcodes which appear in the method\n\t */\n\tpublic BitSet getBytecodeSet(Method method) {\n\t\tBitSet bytecodeSet = bytecodeMap.get(method);\n\t\tif (bytecodeSet == null) {\n\t\t\tfinal BitSet result = new BitSet();\n\t\t\tbyte[] instructionList = method.getCode().getCode();\n\n\t\t\t// Create a callback to put the opcodes of the method's\n\t\t\t// bytecode instructions into the BitSet.\n\t\t\tBytecodeScanner.Callback callback = new BytecodeScanner.Callback() {\n\t\t\t\tpublic void handleInstruction(int opcode) {\n\t\t\t\t\tresult.set(opcode, true);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Scan the method.\n\t\t\tBytecodeScanner scanner = new BytecodeScanner();\n\t\t\tscanner.scan(instructionList, callback);\n\n\t\t\t// Save the result in the map.\n\t\t\tbytecodeSet = result;\n\t\t\tbytecodeMap.put(method, bytecodeSet);\n\t\t}\n\t\treturn bytecodeSet;\n\t}","id":53941,"modified_method":"/**\n\t * Get a BitSet representing the bytecodes that are used in the given method.\n\t * This is useful for prescreening a method for the existence of particular instructions.\n\t * Because this step doesn't require building a MethodGen, it is very\n\t * fast and memory-efficient.  It may allow a Detector to avoid some\n\t * very expensive analysis, which is a Big Win for the user.\n\t *\n\t * @param method the method\n\t * @return the BitSet containing the opcodes which appear in the method\n\t */\n\tpublic BitSet getBytecodeSet(Method method) {\n\t\tBitSet bytecodeSet = bytecodeMap.get(method);\n\t\tif (bytecodeSet == null) {\n\t\t\tfinal BitSet result = new BitSet();\n\n\t\t\tCode code = method.getCode();\n\t\t\tif (code != null) {\n\t\t\t\tbyte[] instructionList = code.getCode();\n\t\n\t\t\t\t// Create a callback to put the opcodes of the method's\n\t\t\t\t// bytecode instructions into the BitSet.\n\t\t\t\tBytecodeScanner.Callback callback = new BytecodeScanner.Callback() {\n\t\t\t\t\tpublic void handleInstruction(int opcode) {\n\t\t\t\t\t\tresult.set(opcode, true);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\n\t\t\t\t// Scan the method.\n\t\t\t\tBytecodeScanner scanner = new BytecodeScanner();\n\t\t\t\tscanner.scan(instructionList, callback);\n\t\t\t}\n\n\t\t\t// Save the result in the map.\n\t\t\tbytecodeSet = result;\n\t\t\tbytecodeMap.put(method, bytecodeSet);\n\t\t}\n\t\treturn bytecodeSet;\n\t}","commit_id":"d370ea40403e30c950f733ae114b75c853dd83ac","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"/**\n\t * Get a MethodGen object for given method.\n\t * @param method the method\n\t * @return the MethodGen object for the method\n\t */\n\tpublic MethodGen getMethodGen(Method method) {\n\t\tMethodGen methodGen = methodGenMap.get(method);\n\t\tif (methodGen == null) {\n\t\t\tConstantPoolGen cpg = getConstantPoolGen();\n\t\t\tmethodGen = new MethodGen(method, jclass.getClassName(), cpg);\n\t\t\tmethodGenMap.put(method, methodGen);\n\t\t}\n\t\treturn methodGen;\n\t}","id":53942,"modified_method":"/**\n\t * Get a MethodGen object for given method.\n\t * @param method the method\n\t * @return the MethodGen object for the method, or null\n\t *   if the method has no Code attribute (and thus cannot be analyzed)\n\t */\n\tpublic MethodGen getMethodGen(Method method) {\n\t\tMethodGen methodGen = methodGenMap.get(method);\n\t\tif (methodGen == null && method.getCode() != null) {\n\t\t\tConstantPoolGen cpg = getConstantPoolGen();\n\t\t\tmethodGen = new MethodGen(method, jclass.getClassName(), cpg);\n\t\t\tmethodGenMap.put(method, methodGen);\n\t\t}\n\t\treturn methodGen;\n\t}","commit_id":"d370ea40403e30c950f733ae114b75c853dd83ac","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"public void visitClassContext(ClassContext classContext) {\n\t\ttry {\n\n\t\t\tJavaClass jclass = classContext.getJavaClass();\n\t\t\tMethod[] methodList = jclass.getMethods();\n\t\t\tfor (int i = 0; i < methodList.length; ++i) {\n\t\t\t\tMethod method = methodList[i];\n\t\t\t\tif (method.isAbstract() || method.isNative())\n\t\t\t\t\tcontinue;\n\n\t\t\t\tif (DEBUG) System.out.println(SignatureConverter.convertMethodSignature(jclass.getClassName(), method.getName(), method.getSignature()));\n\n\t\t\t\t// Get the IsNullValueAnalysis for the method from the ClassContext\n\t\t\t\tIsNullValueDataflow invDataflow = classContext.getIsNullValueDataflow(method);\n\n\t\t\t\t// Look for null check blocks where the reference being checked\n\t\t\t\t// is definitely null, or null on some path\n\t\t\t\tIterator<BasicBlock> bbIter = invDataflow.getCFG().blockIterator();\n\t\t\t\twhile (bbIter.hasNext()) {\n\t\t\t\t\tBasicBlock basicBlock = bbIter.next();\n\n\t\t\t\t\tif (basicBlock.isNullCheck()) {\n\t\t\t\t\t\tInstructionHandle exceptionThrowerHandle = basicBlock.getExceptionThrower();\n\t\t\t\t\t\tInstruction exceptionThrower = exceptionThrowerHandle.getInstruction();\n\n\t\t\t\t\t\t// Figure out where the reference operand is in the stack frame.\n\t\t\t\t\t\tint consumed = exceptionThrower.consumeStack(classContext.getConstantPoolGen());\n\t\t\t\t\t\tif (consumed == Constants.UNPREDICTABLE)\n\t\t\t\t\t\t\tthrow new DataflowAnalysisException(\"Unpredictable stack consumption for \" + exceptionThrower);\n\n\t\t\t\t\t\t// Get the stack values at entry to the null check.\n\t\t\t\t\t\tIsNullValueFrame frame = invDataflow.getStartFact(basicBlock);\n\n\t\t\t\t\t\t// Could the reference be null?\n\t\t\t\t\t\tIsNullValue refValue = frame.getValue(frame.getNumSlots() - consumed);\n\n\t\t\t\t\t\tboolean onExceptionPath = refValue.isException();\n\t\t\t\t\t\tif (refValue.isDefinitelyNull()) {\n\t\t\t\t\t\t\tString type = onExceptionPath ? \"NP_ALWAYS_NULL_EXCEPTION\" : \"NP_ALWAYS_NULL\";\n\t\t\t\t\t\t\tint priority = onExceptionPath ? LOW_PRIORITY : HIGH_PRIORITY;\n\t\t\t\t\t\t\treportNullDeref(classContext, method, exceptionThrowerHandle, type, priority);\n\t\t\t\t\t\t} else if (refValue.isNullOnSomePath()) {\n\t\t\t\t\t\t\tString type = onExceptionPath ? \"NP_NULL_ON_SOME_PATH_EXCEPTION\" : \"NP_NULL_ON_SOME_PATH\";\n\t\t\t\t\t\t\tint priority = onExceptionPath ? LOW_PRIORITY : NORMAL_PRIORITY;\n\t\t\t\t\t\t\treportNullDeref(classContext, method, exceptionThrowerHandle, type, priority);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t} catch (DataflowAnalysisException e) {\n\t\t\tthrow new AnalysisException(\"FindNullDeref caught exception\", e);\n\t\t} catch (CFGBuilderException e) {\n\t\t\tthrow new AnalysisException(e.getMessage());\n\t\t}\n\t}","id":53943,"modified_method":"public void visitClassContext(ClassContext classContext) {\n\t\ttry {\n\n\t\t\tJavaClass jclass = classContext.getJavaClass();\n\t\t\tMethod[] methodList = jclass.getMethods();\n\t\t\tfor (int i = 0; i < methodList.length; ++i) {\n\t\t\t\tMethod method = methodList[i];\n\t\t\t\tif (method.isAbstract() || method.isNative() || method.getCode() == null)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tif (DEBUG) System.out.println(SignatureConverter.convertMethodSignature(jclass.getClassName(), method.getName(), method.getSignature()));\n\n\t\t\t\t// Get the IsNullValueAnalysis for the method from the ClassContext\n\t\t\t\tIsNullValueDataflow invDataflow = classContext.getIsNullValueDataflow(method);\n\n\t\t\t\t// Look for null check blocks where the reference being checked\n\t\t\t\t// is definitely null, or null on some path\n\t\t\t\tIterator<BasicBlock> bbIter = invDataflow.getCFG().blockIterator();\n\t\t\t\twhile (bbIter.hasNext()) {\n\t\t\t\t\tBasicBlock basicBlock = bbIter.next();\n\n\t\t\t\t\tif (basicBlock.isNullCheck()) {\n\t\t\t\t\t\tInstructionHandle exceptionThrowerHandle = basicBlock.getExceptionThrower();\n\t\t\t\t\t\tInstruction exceptionThrower = exceptionThrowerHandle.getInstruction();\n\n\t\t\t\t\t\t// Figure out where the reference operand is in the stack frame.\n\t\t\t\t\t\tint consumed = exceptionThrower.consumeStack(classContext.getConstantPoolGen());\n\t\t\t\t\t\tif (consumed == Constants.UNPREDICTABLE)\n\t\t\t\t\t\t\tthrow new DataflowAnalysisException(\"Unpredictable stack consumption for \" + exceptionThrower);\n\n\t\t\t\t\t\t// Get the stack values at entry to the null check.\n\t\t\t\t\t\tIsNullValueFrame frame = invDataflow.getStartFact(basicBlock);\n\n\t\t\t\t\t\t// Could the reference be null?\n\t\t\t\t\t\tIsNullValue refValue = frame.getValue(frame.getNumSlots() - consumed);\n\n\t\t\t\t\t\tboolean onExceptionPath = refValue.isException();\n\t\t\t\t\t\tif (refValue.isDefinitelyNull()) {\n\t\t\t\t\t\t\tString type = onExceptionPath ? \"NP_ALWAYS_NULL_EXCEPTION\" : \"NP_ALWAYS_NULL\";\n\t\t\t\t\t\t\tint priority = onExceptionPath ? LOW_PRIORITY : HIGH_PRIORITY;\n\t\t\t\t\t\t\treportNullDeref(classContext, method, exceptionThrowerHandle, type, priority);\n\t\t\t\t\t\t} else if (refValue.isNullOnSomePath()) {\n\t\t\t\t\t\t\tString type = onExceptionPath ? \"NP_NULL_ON_SOME_PATH_EXCEPTION\" : \"NP_NULL_ON_SOME_PATH\";\n\t\t\t\t\t\t\tint priority = onExceptionPath ? LOW_PRIORITY : NORMAL_PRIORITY;\n\t\t\t\t\t\t\treportNullDeref(classContext, method, exceptionThrowerHandle, type, priority);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t} catch (DataflowAnalysisException e) {\n\t\t\tthrow new AnalysisException(\"FindNullDeref caught exception\", e);\n\t\t} catch (CFGBuilderException e) {\n\t\t\tthrow new AnalysisException(e.getMessage());\n\t\t}\n\t}","commit_id":"d370ea40403e30c950f733ae114b75c853dd83ac","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"public void visitClassContext(ClassContext classContext) {\n\t\tfinal ResourceTracker<Resource> resourceTracker = getResourceTracker();\n\n\t\ttry {\n\t\t\tJavaClass jclass = classContext.getJavaClass();\n\t\t\tMethod[] methodList = jclass.getMethods();\n\t\t\tfor (int i = 0; i < methodList.length; ++i) {\n\t\t\t\tMethod method = methodList[i];\n\t\t\t\tif (method.isAbstract() || method.isNative())\n\t\t\t\t\tcontinue;\n\n\t\t\t\tif (!prescreen(classContext, method))\n\t\t\t\t\tcontinue;\n\n\t\t\t\tfinal MethodGen methodGen = classContext.getMethodGen(method);\n\t\t\t\tfinal CFG cfg = classContext.getCFG(method);\n\n\t\t\t\tnew LocationScanner(cfg).scan(new LocationScanner.Callback() {\n\t\t\t\t\tpublic void visitLocation(Location location) {\n\t\t\t\t\t\tBasicBlock basicBlock = location.getBasicBlock();\n\t\t\t\t\t\tInstructionHandle handle = location.getHandle();\n\n\t\t\t\t\t\tResource resource = resourceTracker.isResourceCreation(basicBlock, handle, methodGen.getConstantPool());\n\t\t\t\t\t\tif (resource != null) {\n\t\t\t\t\t\t\tResourceValueAnalysis<Resource> analysis =\n\t\t\t\t\t\t\t\tnew ResourceValueAnalysis<Resource>(methodGen, resourceTracker, resource);\n\t\t\t\t\t\t\tDataflow<ResourceValueFrame> dataflow = new Dataflow<ResourceValueFrame>(cfg, analysis);\n\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tdataflow.execute();\n\t\t\t\t\t\t\t\tinspectResult(methodGen, cfg, dataflow, resource);\n\t\t\t\t\t\t\t} catch (DataflowAnalysisException e) {\n\t\t\t\t\t\t\t\tthrow new AnalysisException(\"FindOpenResource caught exception: \" + e.toString(), e);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t} catch (CFGBuilderException e) {\n\t\t\tthrow new AnalysisException(e.getMessage());\n\t\t}\n\n\t}","id":53944,"modified_method":"public void visitClassContext(ClassContext classContext) {\n\t\tfinal ResourceTracker<Resource> resourceTracker = getResourceTracker();\n\n\t\ttry {\n\t\t\tJavaClass jclass = classContext.getJavaClass();\n\t\t\tMethod[] methodList = jclass.getMethods();\n\t\t\tfor (int i = 0; i < methodList.length; ++i) {\n\t\t\t\tMethod method = methodList[i];\n\t\t\t\tif (method.isAbstract() || method.isNative())\n\t\t\t\t\tcontinue;\n\n\t\t\t\tif (!prescreen(classContext, method))\n\t\t\t\t\tcontinue;\n\n\t\t\t\tfinal MethodGen methodGen = classContext.getMethodGen(method);\n\t\t\t\tif (methodGen == null)\n\t\t\t\t\tcontinue;\n\t\t\t\tfinal CFG cfg = classContext.getCFG(method);\n\n\t\t\t\tnew LocationScanner(cfg).scan(new LocationScanner.Callback() {\n\t\t\t\t\tpublic void visitLocation(Location location) {\n\t\t\t\t\t\tBasicBlock basicBlock = location.getBasicBlock();\n\t\t\t\t\t\tInstructionHandle handle = location.getHandle();\n\n\t\t\t\t\t\tResource resource = resourceTracker.isResourceCreation(basicBlock, handle, methodGen.getConstantPool());\n\t\t\t\t\t\tif (resource != null) {\n\t\t\t\t\t\t\tResourceValueAnalysis<Resource> analysis =\n\t\t\t\t\t\t\t\tnew ResourceValueAnalysis<Resource>(methodGen, resourceTracker, resource);\n\t\t\t\t\t\t\tDataflow<ResourceValueFrame> dataflow = new Dataflow<ResourceValueFrame>(cfg, analysis);\n\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tdataflow.execute();\n\t\t\t\t\t\t\t\tinspectResult(methodGen, cfg, dataflow, resource);\n\t\t\t\t\t\t\t} catch (DataflowAnalysisException e) {\n\t\t\t\t\t\t\t\tthrow new AnalysisException(\"FindOpenResource caught exception: \" + e.toString(), e);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t} catch (CFGBuilderException e) {\n\t\t\tthrow new AnalysisException(e.getMessage());\n\t\t}\n\n\t}","commit_id":"d370ea40403e30c950f733ae114b75c853dd83ac","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"public void execute() throws CFGBuilderException {\n\t\tJavaClass jclass = classContext.getJavaClass();\n\t\tMethod[] methods = jclass.getMethods();\n\t\tfor (int i = 0; i < methods.length; ++i) {\n\t\t\tMethod method = methods[i];\n\t\t\tif (method.isAbstract() || method.isNative())\n\t\t\t\tcontinue;\n\n\t\t\tMethodGen mg = classContext.getMethodGen(method);\n\t\t\tCFG cfg = classContext.getCFG(method);\n\n\t\t\tscan(method, mg, cfg);\n\t\t}\n\n\t\tif (DEBUG) System.out.println(\"Found \" + selfCallToMethodMap.size() + \" self calls\");\n\t}","id":53945,"modified_method":"public void execute() throws CFGBuilderException {\n\t\tJavaClass jclass = classContext.getJavaClass();\n\t\tMethod[] methods = jclass.getMethods();\n\t\tfor (int i = 0; i < methods.length; ++i) {\n\t\t\tMethod method = methods[i];\n\t\t\tif (method.isAbstract() || method.isNative())\n\t\t\t\tcontinue;\n\n\t\t\tMethodGen mg = classContext.getMethodGen(method);\n\t\t\tif (mg == null)\n\t\t\t\tcontinue;\n\t\t\tCFG cfg = classContext.getCFG(method);\n\n\t\t\tscan(method, mg, cfg);\n\t\t}\n\n\t\tif (DEBUG) System.out.println(\"Found \" + selfCallToMethodMap.size() + \" self calls\");\n\t}","commit_id":"d370ea40403e30c950f733ae114b75c853dd83ac","url":"https://github.com/findbugsproject/findbugs"},{"original_method":"@Override\n    public void scan(URL jarUrl, String webappPath, boolean isWebapp) throws IOException {\n\n        Jar jar = null;\n        InputStream is = null;\n        WebXml fragment = new WebXml();\n        fragment.setWebappJar(isWebapp);\n        fragment.setDelegate(delegate);\n\n        try {\n            // Only web application JARs are checked for web-fragment.xml\n            // files.\n            // web-fragment.xml files don't need to be parsed if they are never\n            // going to be used.\n            if (isWebapp && parseRequired) {\n                jar = JarFactory.newInstance(jarUrl);\n                is = jar.getInputStream(FRAGMENT_LOCATION);\n            }\n\n            if (is == null) {\n                // If there is no web.xml, normal JAR no impact on\n                // distributable\n                fragment.setDistributable(true);\n            } else {\n                @SuppressWarnings(\"null\") // Cannot be null here\n                String fragmentUrl = jar.getURL(FRAGMENT_LOCATION);\n                InputSource source = new InputSource(fragmentUrl);\n                source.setByteStream(is);\n                if (!webXmlParser.parseWebXml(source, fragment, true)) {\n                    ok = false;\n                }\n            }\n        } finally {\n            if (jar != null) {\n                jar.close();\n            }\n            fragment.setURL(jarUrl);\n            if (fragment.getName() == null) {\n                fragment.setName(fragment.getURL().toString());\n            }\n            fragment.setJarName(extractJarFileName(jarUrl));\n            fragments.put(fragment.getName(), fragment);\n        }\n    }","id":53946,"modified_method":"@Override\n    public void scan(Jar jar, String webappPath, boolean isWebapp) throws IOException {\n\n        InputStream is = null;\n        WebXml fragment = new WebXml();\n        fragment.setWebappJar(isWebapp);\n        fragment.setDelegate(delegate);\n\n        try {\n            // Only web application JARs are checked for web-fragment.xml\n            // files.\n            // web-fragment.xml files don't need to be parsed if they are never\n            // going to be used.\n            if (isWebapp && parseRequired) {\n                is = jar.getInputStream(FRAGMENT_LOCATION);\n            }\n\n            if (is == null) {\n                // If there is no web.xml, normal JAR no impact on\n                // distributable\n                fragment.setDistributable(true);\n            } else {\n                String fragmentUrl = jar.getURL(FRAGMENT_LOCATION);\n                InputSource source = new InputSource(fragmentUrl);\n                source.setByteStream(is);\n                if (!webXmlParser.parseWebXml(source, fragment, true)) {\n                    ok = false;\n                }\n            }\n        } finally {\n            fragment.setURL(jar.getJarFileURL());\n            if (fragment.getName() == null) {\n                fragment.setName(fragment.getURL().toString());\n            }\n            fragment.setJarName(extractJarFileName(jar.getJarFileURL()));\n            fragments.put(fragment.getName(), fragment);\n        }\n    }","commit_id":"a80cf1be047dec1f52d238286d71819bfd9ccda2","url":"https://github.com/apache/tomcat"},{"original_method":"private void process(JarScanType scanType, JarScannerCallback callback,\n            URL url, String webappPath, boolean isWebapp) throws IOException {\n\n        if (log.isTraceEnabled()) {\n            log.trace(sm.getString(\"jarScan.jarUrlStart\", url));\n        }\n\n        if (\"jar\".equals(url.getProtocol()) || url.getPath().endsWith(Constants.JAR_EXT)) {\n            callback.scan(url, webappPath, isWebapp);\n        } else if (\"file\".equals(url.getProtocol())) {\n            File f;\n            try {\n                f = new File(url.toURI());\n                if (f.isFile() && isScanAllFiles()) {\n                    // Treat this file as a JAR\n                    URL jarURL = UriUtil.buildJarUrl(f);\n                    callback.scan(jarURL, webappPath, isWebapp);\n                } else if (f.isDirectory()) {\n                    if (scanType == JarScanType.PLUGGABILITY) {\n                        callback.scan(f, webappPath, isWebapp);\n                    } else {\n                        File metainf = new File(f.getAbsoluteFile() + File.separator + \"META-INF\");\n                        if (metainf.isDirectory()) {\n                            callback.scan(f, webappPath, isWebapp);\n                        }\n                    }\n                }\n            } catch (Throwable t) {\n                ExceptionUtils.handleThrowable(t);\n                // Wrap the exception and re-throw\n                IOException ioe = new IOException();\n                ioe.initCause(t);\n                throw ioe;\n            }\n        }\n    }","id":53947,"modified_method":"private void process(JarScanType scanType, JarScannerCallback callback,\n            URL url, String webappPath, boolean isWebapp) throws IOException {\n\n        if (log.isTraceEnabled()) {\n            log.trace(sm.getString(\"jarScan.jarUrlStart\", url));\n        }\n\n        if (\"jar\".equals(url.getProtocol()) || url.getPath().endsWith(Constants.JAR_EXT)) {\n            try (Jar jar = JarFactory.newInstance(url)) {\n                callback.scan(jar, webappPath, isWebapp);\n            }\n        } else if (\"file\".equals(url.getProtocol())) {\n            File f;\n            try {\n                f = new File(url.toURI());\n                if (f.isFile() && isScanAllFiles()) {\n                    // Treat this file as a JAR\n                    URL jarURL = UriUtil.buildJarUrl(f);\n                    try (Jar jar = JarFactory.newInstance(jarURL)) {\n                        callback.scan(jar, webappPath, isWebapp);\n                    }\n                } else if (f.isDirectory()) {\n                    if (scanType == JarScanType.PLUGGABILITY) {\n                        callback.scan(f, webappPath, isWebapp);\n                    } else {\n                        File metainf = new File(f.getAbsoluteFile() + File.separator + \"META-INF\");\n                        if (metainf.isDirectory()) {\n                            callback.scan(f, webappPath, isWebapp);\n                        }\n                    }\n                }\n            } catch (Throwable t) {\n                ExceptionUtils.handleThrowable(t);\n                // Wrap the exception and re-throw\n                IOException ioe = new IOException();\n                ioe.initCause(t);\n                throw ioe;\n            }\n        }\n    }","commit_id":"a80cf1be047dec1f52d238286d71819bfd9ccda2","url":"https://github.com/apache/tomcat"},{"original_method":"@Override\n        public void scan(URL jarUrl, String webappPath,\n                boolean isWebapp) throws IOException {\n            callbacks.add(jarUrl.toString() + \"::\" + webappPath + \"::\" + isWebapp);\n        }","id":53948,"modified_method":"@Override\n        public void scan(Jar jar, String webappPath,\n                boolean isWebapp) throws IOException {\n            callbacks.add(jar.getJarFileURL().toString() + \"::\" + webappPath + \"::\" + isWebapp);\n        }","commit_id":"a80cf1be047dec1f52d238286d71819bfd9ccda2","url":"https://github.com/apache/tomcat"},{"original_method":"private static void scan(TldScanner.TldScannerCallback callback, File webapp, String path)\n            throws Exception {\n        String fullPath = new File(webapp, path).toURI().toString();\n        URL jarUrl = new URL(\"jar:\" + fullPath + \"!/\");\n        callback.scan(jarUrl, path, true);\n    }","id":53949,"modified_method":"private static void scan(TldScanner.TldScannerCallback callback, File webapp, String path)\n            throws Exception {\n        String fullPath = new File(webapp, path).toURI().toString();\n        URL jarUrl = new URL(\"jar:\" + fullPath + \"!/\");\n        try (Jar jar = JarFactory.newInstance(jarUrl)) {\n            callback.scan(jar, path, true);\n        }\n    }","commit_id":"a80cf1be047dec1f52d238286d71819bfd9ccda2","url":"https://github.com/apache/tomcat"},{"original_method":"@Override\n        public void scan(URL jarUrl, String webappPath, boolean isWebapp) throws IOException {\n            boolean found = false;\n            URL jarFileUrl;\n            try (Jar jar = JarFactory.newInstance(jarUrl)) {\n                jarFileUrl = jar.getJarFileURL();\n                jar.nextEntry();\n                for (String entryName = jar.getEntryName();\n                    entryName != null;\n                    jar.nextEntry(), entryName = jar.getEntryName()) {\n                    if (!(entryName.startsWith(\"META-INF/\") &&\n                            entryName.endsWith(TLD_EXT))) {\n                        continue;\n                    }\n                    found = true;\n                    TldResourcePath tldResourcePath =\n                            new TldResourcePath(jarFileUrl, webappPath, entryName);\n                    try {\n                        parseTld(tldResourcePath);\n                    } catch (SAXException e) {\n                        throw new IOException(e);\n                    }\n                }\n            }\n            if (found) {\n                if (log.isDebugEnabled()) {\n                    log.debug(Localizer.getMessage(\"jsp.tldCache.tldInJar\", jarFileUrl.toString()));\n                }\n            } else {\n                foundJarWithoutTld = true;\n                if (log.isDebugEnabled()) {\n                    log.debug(Localizer.getMessage(\n                            \"jsp.tldCache.noTldInJar\", jarFileUrl.toString()));\n                }\n            }\n        }","id":53950,"modified_method":"@Override\n        public void scan(Jar jar, String webappPath, boolean isWebapp) throws IOException {\n            boolean found = false;\n            URL jarFileUrl = jar.getJarFileURL();\n            jar.nextEntry();\n            for (String entryName = jar.getEntryName();\n                entryName != null;\n                jar.nextEntry(), entryName = jar.getEntryName()) {\n                if (!(entryName.startsWith(\"META-INF/\") &&\n                        entryName.endsWith(TLD_EXT))) {\n                    continue;\n                }\n                found = true;\n                TldResourcePath tldResourcePath =\n                        new TldResourcePath(jarFileUrl, webappPath, entryName);\n                try {\n                    parseTld(tldResourcePath);\n                } catch (SAXException e) {\n                    throw new IOException(e);\n                }\n            }\n            if (found) {\n                if (log.isDebugEnabled()) {\n                    log.debug(Localizer.getMessage(\"jsp.tldCache.tldInJar\", jarFileUrl.toString()));\n                }\n            } else {\n                foundJarWithoutTld = true;\n                if (log.isDebugEnabled()) {\n                    log.debug(Localizer.getMessage(\n                            \"jsp.tldCache.noTldInJar\", jarFileUrl.toString()));\n                }\n            }\n        }","commit_id":"a80cf1be047dec1f52d238286d71819bfd9ccda2","url":"https://github.com/apache/tomcat"},{"original_method":"/**\r\n\t * Try to find Enclosures that have their controllers added already, and add them to the target.\r\n\t */\r\n\t@Override\r\n\tpublic void onBeforeRespond(final Map<String, Component> map, final AjaxRequestTarget target)\r\n\t{\r\n\t\t// We need to iterate over the map, but the map changes if we add an\r\n\t\t// InlineEnclosure to the target. --> make a copy of the map and iterate that instead.\r\n\t\tfinal List<Component> originalComponents = Collections.unmodifiableList(new ArrayList<Component>(\r\n\t\t\tmap.values()));\r\n\r\n\t\ttarget.getPage().visitChildren(InlineEnclosure.class, new IVisitor<InlineEnclosure, Void>()\r\n\t\t{\r\n\t\t\t@Override\r\n\t\t\tpublic void component(final InlineEnclosure enclosure, final IVisit<Void> visit)\r\n\t\t\t{\r\n\t\t\t\tfor (Component component : originalComponents)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (isControllerOfEnclosure(component, enclosure))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// update the visibility of the enclosure\r\n\t\t\t\t\t\tenclosure.updateVisibility();\r\n\r\n\t\t\t\t\t\t// add enclosure to Ajax target\r\n\t\t\t\t\t\ttarget.add(enclosure);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}","id":53951,"modified_method":"/**\r\n\t * Try to find Enclosures that have their controllers added already, and add them to the target.\r\n\t */\r\n\t@Override\r\n\tpublic void onBeforeRespond(final Map<String, Component> map, final AjaxRequestTarget target)\r\n\t{\r\n\t\tString key = target.getPage().visitChildren(InlineEnclosure.class, new IVisitor<InlineEnclosure, String>()\r\n\t\t{\r\n\t\t\t@Override\r\n\t\t\tpublic void component(final InlineEnclosure enclosure, final IVisit<String> visit)\r\n\t\t\t{\r\n\t\t\t\tfor (Map.Entry<String, Component> entry : map.entrySet())\r\n\t\t\t\t{\r\n\t\t\t\t\tString key = entry.getKey();\r\n\t\t\t\t\tComponent component = entry.getValue();\r\n\r\n\t\t\t\t\tif (isControllerOfEnclosure(component, enclosure))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// update the visibility of the enclosure\r\n\t\t\t\t\t\tenclosure.updateVisibility();\r\n\r\n\t\t\t\t\t\t// add enclosure to Ajax target\r\n\t\t\t\t\t\ttarget.add(enclosure);\r\n\t\t\t\t\t\tvisit.stop(key);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (key != null)\r\n\t\t{\r\n\t\t\tmap.remove(key);\r\n\t\t}\r\n\t}","commit_id":"fa01402233fb56abc0709bcdc6f6a6c008a1abc7","url":"https://github.com/apache/wicket"},{"original_method":"/**\n\t * Constructor\n\t * \n\t * @param page\n\t *      the currently active page\n\t */\n\tpublic AjaxRequestHandler(final Page page)\n\t{\n\t\tthis.page = Args.notNull(page, \"page\");\n\n\t\tresponseObject = new XmlAjaxResponse(page)\n\t\t{\n\n\t\t\t/**\n\t\t\t * Freezes the {@link AjaxRequestHandler#listeners}, and does not un-freeze them as the\n\t\t\t * events will have been fired by now.\n\t\t\t * \n\t\t\t * @param response\n\t\t\t *      the response to write to\n\t\t\t */\n\t\t\t@Override\n\t\t\tprotected void fireOnAfterRespondListeners(final Response response)\n\t\t\t{\n\t\t\t\tlistenersFrozen = true;\n\n\t\t\t\t// invoke onafterresponse event on listeners\n\t\t\t\tif (listeners != null)\n\t\t\t\t{\n\t\t\t\t\tfinal Map<String, Component> components = Collections.unmodifiableMap(markupIdToComponent);\n\n\t\t\t\t\t// create response that will be used by listeners to append\n\t\t\t\t\t// javascript\n\t\t\t\t\tfinal AjaxRequestTarget.IJavaScriptResponse jsresponse = new AjaxRequestTarget.IJavaScriptResponse()\n\t\t\t\t\t{\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic void addJavaScript(String script)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\twriteNormalEvaluations(response, Collections.<CharSequence>singleton(script));\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tfor (AjaxRequestTarget.IListener listener : listeners)\n\t\t\t\t\t{\n\t\t\t\t\t\tlistener.onAfterRespond(components, jsresponse);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Freezes the {@link AjaxRequestHandler#listeners} before firing the event and\n\t\t\t * un-freezes them afterwards to allow components to add more\n\t\t\t * {@link AjaxRequestTarget.IListener}s for the second event.\n\t\t\t */\n\t\t\t@Override\n\t\t\tprotected void fireOnBeforeRespondListeners()\n\t\t\t{\n\t\t\t\tlistenersFrozen = true;\n\n\t\t\t\tif (listeners != null)\n\t\t\t\t{\n\t\t\t\t\tfinal Map<String, Component> components = Collections.unmodifiableMap(markupIdToComponent);\n\n\t\t\t\t\tfor (AjaxRequestTarget.IListener listener : listeners)\n\t\t\t\t\t{\n\t\t\t\t\t\tlistener.onBeforeRespond(components, AjaxRequestHandler.this);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlistenersFrozen = false;\n\t\t\t}\n\n\t\t};\n\t}","id":53952,"modified_method":"/**\n\t * Constructor\n\t * \n\t * @param page\n\t *      the currently active page\n\t */\n\tpublic AjaxRequestHandler(final Page page)\n\t{\n\t\tthis.page = Args.notNull(page, \"page\");\n\n\t\tresponseObject = new XmlAjaxResponse(page)\n\t\t{\n\n\t\t\t/**\n\t\t\t * Freezes the {@link AjaxRequestHandler#listeners}, and does not un-freeze them as the\n\t\t\t * events will have been fired by now.\n\t\t\t * \n\t\t\t * @param response\n\t\t\t *      the response to write to\n\t\t\t */\n\t\t\t@Override\n\t\t\tprotected void fireOnAfterRespondListeners(final Response response)\n\t\t\t{\n\t\t\t\tlistenersFrozen = true;\n\n\t\t\t\t// invoke onafterresponse event on listeners\n\t\t\t\tif (listeners != null)\n\t\t\t\t{\n\t\t\t\t\tfinal Map<String, Component> components = Collections.unmodifiableMap(markupIdToComponent);\n\n\t\t\t\t\t// create response that will be used by listeners to append\n\t\t\t\t\t// javascript\n\t\t\t\t\tfinal AjaxRequestTarget.IJavaScriptResponse jsresponse = new AjaxRequestTarget.IJavaScriptResponse()\n\t\t\t\t\t{\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic void addJavaScript(String script)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\twriteNormalEvaluations(response, Collections.<CharSequence>singleton(script));\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tfor (AjaxRequestTarget.IListener listener : listeners)\n\t\t\t\t\t{\n\t\t\t\t\t\tlistener.onAfterRespond(components, jsresponse);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Freezes the {@link AjaxRequestHandler#listeners} before firing the event and\n\t\t\t * un-freezes them afterwards to allow components to add more\n\t\t\t * {@link AjaxRequestTarget.IListener}s for the second event.\n\t\t\t */\n\t\t\t@Override\n\t\t\tprotected void fireOnBeforeRespondListeners()\n\t\t\t{\n\t\t\t\tlistenersFrozen = true;\n\n\t\t\t\tif (listeners != null)\n\t\t\t\t{\n\t\t\t\t\tfor (AjaxRequestTarget.IListener listener : listeners)\n\t\t\t\t\t{\n\t\t\t\t\t\tlistener.onBeforeRespond(markupIdToComponent, AjaxRequestHandler.this);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlistenersFrozen = false;\n\t\t\t}\n\n\t\t};\n\t}","commit_id":"fa01402233fb56abc0709bcdc6f6a6c008a1abc7","url":"https://github.com/apache/wicket"},{"original_method":"@Test\r\n\tpublic void testInlineEnclosureWithAdditionalAjaxTarget()\r\n\t{\r\n\t\t{\r\n\t\t\t// On\r\n\t\t\tInlineEnclosureWithAdditionalAjaxTargetPage ajaxPage = tester.startPage(InlineEnclosureWithAdditionalAjaxTargetPage.class);\r\n\t\t\tassertVisible(ajaxPage.getLabel1());\r\n\t\t\tassertVisible(ajaxPage.getLabel2());\r\n\t\t\ttester.clickLink(ajaxPage.getLink().getPageRelativePath(), true);\r\n\t\t}\r\n\t\t{\r\n\t\t\t// Off\r\n\t\t\tInlineEnclosureWithAdditionalAjaxTargetPage ajaxPage = (InlineEnclosureWithAdditionalAjaxTargetPage)tester.getLastRenderedPage();\r\n\t\t\ttester.assertComponentOnAjaxResponse(ajaxPage.getLabel2());\r\n\t\t\tassertInVisible(ajaxPage.getLabel1());\r\n\t\t\tassertInVisible(ajaxPage.getLabel2());\r\n\t\t\ttester.clickLink(ajaxPage.getLink().getPageRelativePath(), true);\r\n\t\t}\r\n\t\t{\r\n\t\t\t// On\r\n\t\t\tInlineEnclosureWithAdditionalAjaxTargetPage ajaxPage = (InlineEnclosureWithAdditionalAjaxTargetPage)tester.getLastRenderedPage();\r\n\t\t\ttester.assertComponentOnAjaxResponse(ajaxPage.getLabel1());\r\n\t\t\ttester.assertComponentOnAjaxResponse(ajaxPage.getLabel2());\r\n\t\t\tassertVisible(ajaxPage.getLabel1());\r\n\t\t\tassertVisible(ajaxPage.getLabel2());\r\n\t\t\ttester.clickLink(ajaxPage.getLink().getPageRelativePath(), true);\r\n\t\t}\r\n\t\t{\r\n\t\t\t// Off\r\n\t\t\tInlineEnclosureWithAdditionalAjaxTargetPage ajaxPage = (InlineEnclosureWithAdditionalAjaxTargetPage)tester.getLastRenderedPage();\r\n\t\t\ttester.assertComponentOnAjaxResponse(ajaxPage.getLabel2());\r\n\t\t\tassertInVisible(ajaxPage.getLabel1());\r\n\t\t\tassertInVisible(ajaxPage.getLabel2());\r\n\t\t}\r\n\t}","id":53953,"modified_method":"@Test\r\n\tpublic void testInlineEnclosureWithAdditionalAjaxTarget()\r\n\t{\r\n\t\t{\r\n\t\t\t// On\r\n\t\t\tInlineEnclosureWithAdditionalAjaxTargetPage ajaxPage = tester.startPage(InlineEnclosureWithAdditionalAjaxTargetPage.class);\r\n\t\t\tassertVisible(ajaxPage.getLabel1());\r\n\t\t\tassertVisible(ajaxPage.getLabel2());\r\n\t\t\ttester.clickLink(ajaxPage.getLink().getPageRelativePath(), true);\r\n\t\t}\r\n\t\t{\r\n\t\t\t// Off\r\n\t\t\tInlineEnclosureWithAdditionalAjaxTargetPage ajaxPage = (InlineEnclosureWithAdditionalAjaxTargetPage)tester.getLastRenderedPage();\r\n\t\t\ttester.assertComponentOnAjaxResponse(ajaxPage.getLabel2());\r\n\t\t\tassertInVisible(ajaxPage.getLabel1());\r\n\t\t\tassertInVisible(ajaxPage.getLabel2());\r\n\t\t\ttester.clickLink(ajaxPage.getLink().getPageRelativePath(), true);\r\n\t\t}\r\n\t\t{\r\n\t\t\t// On\r\n\t\t\tInlineEnclosureWithAdditionalAjaxTargetPage ajaxPage = (InlineEnclosureWithAdditionalAjaxTargetPage)tester.getLastRenderedPage();\r\n\t\t\t// WICKET-5302 - only the InlineEnclosure is in the Ajax response\r\n\t\t\t// Label1 is inside the InlineEncosure\r\n\t\t\ttester.assertComponentOnAjaxResponse(\"wicket_InlineEnclosure-0\");\r\n\t\t\ttester.assertComponentOnAjaxResponse(ajaxPage.getLabel2());\r\n\t\t\tassertVisible(ajaxPage.getLabel1());\r\n\t\t\tassertVisible(ajaxPage.getLabel2());\r\n\t\t\ttester.clickLink(ajaxPage.getLink().getPageRelativePath(), true);\r\n\t\t}\r\n\t\t{\r\n\t\t\t// Off\r\n\t\t\tInlineEnclosureWithAdditionalAjaxTargetPage ajaxPage = (InlineEnclosureWithAdditionalAjaxTargetPage)tester.getLastRenderedPage();\r\n\t\t\ttester.assertComponentOnAjaxResponse(ajaxPage.getLabel2());\r\n\t\t\tassertInVisible(ajaxPage.getLabel1());\r\n\t\t\tassertInVisible(ajaxPage.getLabel2());\r\n\t\t}\r\n\t}","commit_id":"fa01402233fb56abc0709bcdc6f6a6c008a1abc7","url":"https://github.com/apache/wicket"},{"original_method":"/**\n\t * Find out whether there is any registered error for a form component.\n\t * \n\t * @return whether there is any registered error for a form component\n\t */\n\tprivate boolean anyFormComponentError()\n\t{\n\t\tfinal boolean[] error = new boolean[] { false };\n\n\t\tfinal IVisitor<Component> visitor = new IVisitor<Component>()\n\t\t{\n\t\t\tpublic Object component(final Component component)\n\t\t\t{\n\t\t\t\tif (component.hasErrorMessage())\n\t\t\t\t{\n\t\t\t\t\terror[0] = true;\n\t\t\t\t\treturn Component.IVisitor.STOP_TRAVERSAL;\n\t\t\t\t}\n\n\t\t\t\t// Traverse all children\n\t\t\t\treturn Component.IVisitor.CONTINUE_TRAVERSAL;\n\t\t\t}\n\t\t};\n\n\t\tvisitChildren(Component.class, new IVisitor<Component>()\n\t\t{\n\t\t\tpublic Object component(final Component component)\n\t\t\t{\n\t\t\t\tif ((component instanceof Form) || (component instanceof FormComponent))\n\t\t\t\t{\n\t\t\t\t\treturn visitor.component(component);\n\t\t\t\t}\n\t\t\t\treturn Component.IVisitor.CONTINUE_TRAVERSAL;\n\t\t\t}\n\t\t});\n\n\t\treturn error[0];\n\t}","id":53954,"modified_method":"/**\n\t * Find out whether there is any registered error for a form component.\n\t * \n\t * @return whether there is any registered error for a form component\n\t */\n\tprivate boolean anyFormComponentError()\n\t{\n\t\t// Check ALL children for error messages irrespective of FormComponents or not\n\t\tBoolean error = (Boolean)visitChildren(Component.class, new IVisitor<Component>()\n\t\t{\n\t\t\tpublic Object component(final Component component)\n\t\t\t{\n\t\t\t\tif (component.hasErrorMessage())\n\t\t\t\t{\n\t\t\t\t\treturn Boolean.TRUE;\n\t\t\t\t}\n\n\t\t\t\t// Traverse all children\n\t\t\t\treturn Component.IVisitor.CONTINUE_TRAVERSAL;\n\t\t\t}\n\t\t});\n\n\t\treturn (error != null) && error;\n\t}","commit_id":"73bcfb287a4f4161a2ecec51ac1cf2f3cc603736","url":"https://github.com/apache/wicket"},{"original_method":"/**\n\t * Traverses all child components of the given class in this container,\n\t * calling the visitor's visit method at each one.\n\t * \n\t * @param c\n\t *            The class of child to visit, or null to visit all children\n\t * @param visitor\n\t *            The visitor to call back to\n\t * @return The return value from a visitor which halted the traversal, or\n\t *         null if the entire traversal occurred\n\t */\n\tpublic final Object visitChildren(final Class c, final IVisitor visitor)\n\t{\n\t\t// Iterate through children of this container\n\t\tfor (int i = 0; i < children_size(); i++)\n\t\t{\n\t\t\t// Get next child component\n\t\t\tfinal Component child = (Component)children_get(i);\n\n\t\t\t// Is the child of the correct class (or was no class specified)?\n\t\t\tif (c == null || c.isInstance(child))\n\t\t\t{\n\t\t\t\t// Call visitor\n\t\t\t\tfinal Object value = visitor.component(child);\n\n\t\t\t\t// If visitor returns a non-null value, it halts the traversal\n\t\t\t\tif (value != IVisitor.CONTINUE_TRAVERSAL)\n\t\t\t\t{\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If child is a container\n\t\t\tif (child instanceof MarkupContainer)\n\t\t\t{\n\t\t\t\t// visit the children in the container\n\t\t\t\tfinal Object value = ((MarkupContainer)child).visitChildren(c, visitor);\n\n\t\t\t\t// If visitor returns a non-null value, it halts the traversal\n\t\t\t\tif (value != IVisitor.CONTINUE_TRAVERSAL)\n\t\t\t\t{\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}","id":53955,"modified_method":"/**\n\t * Traverses all child components of the given class in this container,\n\t * calling the visitor's visit method at each one.\n\t * \n\t * @param clazz\n\t *            The class of child to visit, or null to visit all children\n\t * @param visitor\n\t *            The visitor to call back to\n\t * @return The return value from a visitor which halted the traversal, or\n\t *         null if the entire traversal occurred\n\t */\n\tpublic final Object visitChildren(final Class clazz, final IVisitor visitor)\n\t{\n\t\t// Iterate through children of this container\n\t\tfor (int i = 0; i < children_size(); i++)\n\t\t{\n\t\t\t// Get next child component\n\t\t\tfinal Component child = (Component)children_get(i);\n\t\t\tObject value = null;\n\t\t\t\n\t\t\t// Is the child of the correct class (or was no class specified)?\n\t\t\tif (clazz == null || clazz.isInstance(child))\n\t\t\t{\n\t\t\t\t// Call visitor\n\t\t\t\tvalue = visitor.component(child);\n\n\t\t\t\t// If visitor returns a non-null value, it halts the traversal\n\t\t\t\tif ((value != IVisitor.CONTINUE_TRAVERSAL) && \n\t\t\t\t\t\t(value != IVisitor.CONTINUE_TRAVERSAL_BUT_DONT_GO_DEEPER))\n\t\t\t\t{\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If child is a container\n\t\t\tif ((child instanceof MarkupContainer) && \n\t\t\t\t\t(value != IVisitor.CONTINUE_TRAVERSAL_BUT_DONT_GO_DEEPER))\n\t\t\t{\n\t\t\t\t// visit the children in the container\n\t\t\t\tvalue = ((MarkupContainer)child).visitChildren(clazz, visitor);\n\n\t\t\t\t// If visitor returns a non-null value, it halts the traversal\n\t\t\t\tif ((value != IVisitor.CONTINUE_TRAVERSAL) && \n\t\t\t\t\t\t(value != IVisitor.CONTINUE_TRAVERSAL_BUT_DONT_GO_DEEPER))\n\t\t\t\t{\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}","commit_id":"44c6d7f947c16842aff81fc766e84f13aa784b47","url":"https://github.com/apache/wicket"},{"original_method":"public void putBuffer(ByteBuffer bb) {\n    // If buffer is larger than we want to keep around, just let it go.\n    if (bb.capacity() > this.maxByteBufferSizeToCache) return;\n    boolean success = false;\n    int average = 0;\n    lock.lock();\n    try {\n      success = this.buffers.offer(bb);\n      if (success) {\n        this.totalReservoirCapacity += bb.capacity();\n        average = this.totalReservoirCapacity / this.buffers.size(); // size will never be 0.\n      }\n    } finally {\n      lock.unlock();\n    }\n    if (!success) {\n      LOG.warn(\"At capacity: \" + this.buffers.size());\n    } else {\n      if (average > this.runningAverage && average < this.maxByteBufferSizeToCache) {\n        this.runningAverage = average;\n      }\n    }\n  }","id":53956,"modified_method":"public void putBuffer(ByteBuffer bb) {\n    // If buffer is larger than we want to keep around, just let it go.\n    if (bb.capacity() > maxByteBufferSizeToCache) {\n      return;\n    }\n\n    int countOfBuffers;\n    int totalCapacity;\n    while (true) {\n      long prevState = stateRef.get();\n      countOfBuffers = toCountOfBuffers(prevState);\n      if (countOfBuffers >= maxToCache) {\n        if (LOG.isWarnEnabled()) {\n          LOG.warn(\"At capacity: \" + countOfBuffers);\n        }\n        return;\n      }\n      countOfBuffers++;\n      assert 0 < countOfBuffers && countOfBuffers <= maxToCache;\n\n      totalCapacity = toTotalCapacity(prevState) + bb.capacity();\n      if (totalCapacity < 0) {\n        if (LOG.isWarnEnabled()) {\n          LOG.warn(\"Overflowed total capacity.\");\n        }\n        return;\n      }\n\n      long state = toState(countOfBuffers, totalCapacity);\n      if (stateRef.compareAndSet(prevState, state)) {\n        break;\n      }\n    }\n\n    // ConcurrentLinkQueue#offer says \"this method will never return false\"\n    buffers.offer(bb);\n\n    int runningAverageUpdate = Math.min(\n        totalCapacity / countOfBuffers, // size will never be 0.\n        maxByteBufferSizeToCache);\n    while (true) {\n      int prev = runningAverageRef.get();\n      if (prev >= runningAverageUpdate || // only rises, never recedes\n          runningAverageRef.compareAndSet(prev, runningAverageUpdate)) {\n        break;\n      }\n    }\n  }","commit_id":"d8f2ac3e6ee26fc338f43c0512379a0ff98ea236","url":"https://github.com/apache/hbase"},{"original_method":"/**\n   * @param maxByteBufferSizeToCache\n   * @param initialByteBufferSize\n   * @param maxToCache\n   */\n  public BoundedByteBufferPool(final int maxByteBufferSizeToCache, final int initialByteBufferSize,\n      final int maxToCache) {\n    this.maxByteBufferSizeToCache = maxByteBufferSizeToCache;\n    this.runningAverage = initialByteBufferSize;\n    this.buffers = new BoundedArrayQueue<ByteBuffer>(maxToCache);\n  }","id":53957,"modified_method":"/**\n   * @param maxByteBufferSizeToCache\n   * @param initialByteBufferSize\n   * @param maxToCache\n   */\n  public BoundedByteBufferPool(final int maxByteBufferSizeToCache, final int initialByteBufferSize,\n      final int maxToCache) {\n    this.maxByteBufferSizeToCache = maxByteBufferSizeToCache;\n    this.runningAverageRef = new AtomicInteger(initialByteBufferSize);\n    this.maxToCache = maxToCache;\n  }","commit_id":"d8f2ac3e6ee26fc338f43c0512379a0ff98ea236","url":"https://github.com/apache/hbase"},{"original_method":"public ByteBuffer getBuffer() {\n    ByteBuffer bb = null;\n    lock.lock();\n    try {\n      bb = this.buffers.poll();\n      if (bb != null) {\n        this.totalReservoirCapacity -= bb.capacity();\n      }\n    } finally {\n      lock.unlock();\n    }\n    if (bb != null) {\n      // Clear sets limit == capacity. Postion == 0.\n      bb.clear();\n    } else {\n      bb = ByteBuffer.allocateDirect(this.runningAverage);\n      this.allocations.incrementAndGet();\n    }\n    if (LOG.isTraceEnabled()) {\n      LOG.trace(\"runningAverage=\" + this.runningAverage +\n        \", totalCapacity=\" + this.totalReservoirCapacity + \", count=\" + this.buffers.size() +\n        \", alloctions=\" + this.allocations.get());\n    }\n    return bb;\n  }","id":53958,"modified_method":"public ByteBuffer getBuffer() {\n    ByteBuffer bb = buffers.poll();\n    if (bb != null) {\n      long state;\n      while (true) {\n        long prevState = stateRef.get();\n        state = subtractOneBufferFromState(prevState, bb.capacity());\n        if (stateRef.compareAndSet(prevState, state)) {\n          break;\n        }\n      }\n      // Clear sets limit == capacity. Postion == 0.\n      bb.clear();\n\n      if (LOG.isTraceEnabled()) {\n        int countOfBuffers = toCountOfBuffers(state);\n        int totalCapacity = toTotalCapacity(state);\n        LOG.trace(\"totalCapacity=\" + totalCapacity + \", count=\" + countOfBuffers);\n      }\n      return bb;\n    }\n\n    int runningAverage = runningAverageRef.get();\n    bb = ByteBuffer.allocateDirect(runningAverage);\n\n    if (LOG.isTraceEnabled()) {\n      long allocations = allocationsRef.incrementAndGet();\n      LOG.trace(\"runningAverage=\" + runningAverage + \", alloctions=\" + allocations);\n    }\n    return bb;\n  }","commit_id":"d8f2ac3e6ee26fc338f43c0512379a0ff98ea236","url":"https://github.com/apache/hbase"},{"original_method":"@Test\n  public void testEquivalence() {\n    ByteBuffer bb = ByteBuffer.allocate(1);\n    this.reservoir.putBuffer(bb);\n    this.reservoir.putBuffer(bb);\n    this.reservoir.putBuffer(bb);\n    assertEquals(3, this.reservoir.buffers.size());\n  }","id":53959,"modified_method":"@Test\n  public void testEquivalence() {\n    ByteBuffer bb = ByteBuffer.allocate(1);\n    this.reservoir.putBuffer(bb);\n    this.reservoir.putBuffer(bb);\n    this.reservoir.putBuffer(bb);\n    assertEquals(3, this.reservoir.getQueueSize());\n  }","commit_id":"d8f2ac3e6ee26fc338f43c0512379a0ff98ea236","url":"https://github.com/apache/hbase"},{"original_method":"@Test\n  public void testBufferSizeGrowWithMultiThread() throws Exception {\n    final ConcurrentLinkedDeque<ByteBuffer> bufferQueue = new ConcurrentLinkedDeque<ByteBuffer>();\n    int takeBufferThreadsCount = 30;\n    int putBufferThreadsCount = 1;\n    Thread takeBufferThreads[] = new Thread[takeBufferThreadsCount];\n    for (int i = 0; i < takeBufferThreadsCount; i++) {\n      takeBufferThreads[i] = new Thread(new Runnable() {\n        @Override\n        public void run() {\n          while (true) {\n            ByteBuffer buffer = reservoir.getBuffer();\n            try {\n              Thread.sleep(5);\n            } catch (InterruptedException e) {\n              break;\n            }\n            bufferQueue.offer(buffer);\n            if (Thread.currentThread().isInterrupted()) break;\n          }\n        }\n      });\n    }\n\n    Thread putBufferThread[] = new Thread[putBufferThreadsCount];\n    for (int i = 0; i < putBufferThreadsCount; i++) {\n      putBufferThread[i] = new Thread(new Runnable() {\n        @Override\n        public void run() {\n          while (true) {\n            ByteBuffer buffer = bufferQueue.poll();\n            if (buffer != null) {\n              reservoir.putBuffer(buffer);\n            }\n            if (Thread.currentThread().isInterrupted()) break;\n          }\n        }\n      });\n    }\n\n    for (int i = 0; i < takeBufferThreadsCount; i++) {\n      takeBufferThreads[i].start();\n    }\n    for (int i = 0; i < putBufferThreadsCount; i++) {\n      putBufferThread[i].start();\n    }\n    Thread.sleep(2 * 1000);// Let the threads run for 2 secs\n    for (int i = 0; i < takeBufferThreadsCount; i++) {\n      takeBufferThreads[i].interrupt();\n      takeBufferThreads[i].join();\n    }\n    for (int i = 0; i < putBufferThreadsCount; i++) {\n      putBufferThread[i].interrupt();\n      putBufferThread[i].join();\n    }\n    // None of the BBs we got from pool is growing while in use. So we should not change the\n    // runningAverage in pool\n    assertEquals(initialByteBufferSize, this.reservoir.runningAverage);\n  }","id":53960,"modified_method":"@Test\n  public void testBufferSizeGrowWithMultiThread() throws Exception {\n    final ConcurrentLinkedDeque<ByteBuffer> bufferQueue = new ConcurrentLinkedDeque<ByteBuffer>();\n    int takeBufferThreadsCount = 30;\n    int putBufferThreadsCount = 1;\n    Thread takeBufferThreads[] = new Thread[takeBufferThreadsCount];\n    for (int i = 0; i < takeBufferThreadsCount; i++) {\n      takeBufferThreads[i] = new Thread(new Runnable() {\n        @Override\n        public void run() {\n          while (true) {\n            ByteBuffer buffer = reservoir.getBuffer();\n            try {\n              Thread.sleep(5);\n            } catch (InterruptedException e) {\n              break;\n            }\n            bufferQueue.offer(buffer);\n            if (Thread.currentThread().isInterrupted()) break;\n          }\n        }\n      });\n    }\n\n    Thread putBufferThread[] = new Thread[putBufferThreadsCount];\n    for (int i = 0; i < putBufferThreadsCount; i++) {\n      putBufferThread[i] = new Thread(new Runnable() {\n        @Override\n        public void run() {\n          while (true) {\n            ByteBuffer buffer = bufferQueue.poll();\n            if (buffer != null) {\n              reservoir.putBuffer(buffer);\n            }\n            if (Thread.currentThread().isInterrupted()) break;\n          }\n        }\n      });\n    }\n\n    for (int i = 0; i < takeBufferThreadsCount; i++) {\n      takeBufferThreads[i].start();\n    }\n    for (int i = 0; i < putBufferThreadsCount; i++) {\n      putBufferThread[i].start();\n    }\n    Thread.sleep(2 * 1000);// Let the threads run for 2 secs\n    for (int i = 0; i < takeBufferThreadsCount; i++) {\n      takeBufferThreads[i].interrupt();\n      takeBufferThreads[i].join();\n    }\n    for (int i = 0; i < putBufferThreadsCount; i++) {\n      putBufferThread[i].interrupt();\n      putBufferThread[i].join();\n    }\n    // None of the BBs we got from pool is growing while in use. So we should not change the\n    // runningAverage in pool\n    assertEquals(initialByteBufferSize, this.reservoir.getRunningAverage());\n  }","commit_id":"d8f2ac3e6ee26fc338f43c0512379a0ff98ea236","url":"https://github.com/apache/hbase"},{"original_method":"@Test\n  public void testGetPut() {\n    ByteBuffer bb = this.reservoir.getBuffer();\n    assertEquals(initialByteBufferSize, bb.capacity());\n    assertEquals(0, this.reservoir.buffers.size());\n    this.reservoir.putBuffer(bb);\n    assertEquals(1, this.reservoir.buffers.size());\n    // Now remove a buffer and don't put it back so reservoir is empty.\n    this.reservoir.getBuffer();\n    assertEquals(0, this.reservoir.buffers.size());\n    // Try adding in a buffer with a bigger-than-initial size and see if our runningAverage works.\n    // Need to add then remove, then get a new bytebuffer so reservoir internally is doing\n    // allocation\n    final int newCapacity = 2;\n    this.reservoir.putBuffer(ByteBuffer.allocate(newCapacity));\n    assertEquals(1, reservoir.buffers.size());\n    this.reservoir.getBuffer();\n    assertEquals(0, this.reservoir.buffers.size());\n    bb = this.reservoir.getBuffer();\n    assertEquals(newCapacity, bb.capacity());\n    // Assert that adding a too-big buffer won't happen\n    assertEquals(0, this.reservoir.buffers.size());\n    this.reservoir.putBuffer(ByteBuffer.allocate(maxByteBufferSizeToCache * 2));\n    assertEquals(0, this.reservoir.buffers.size());\n    // Assert we can't add more than max allowed instances.\n    for (int i = 0; i < maxToCache; i++) {\n      this.reservoir.putBuffer(ByteBuffer.allocate(initialByteBufferSize));\n    }\n    assertEquals(maxToCache, this.reservoir.buffers.size());\n  }","id":53961,"modified_method":"@Test\n  public void testGetPut() {\n    ByteBuffer bb = this.reservoir.getBuffer();\n    assertEquals(initialByteBufferSize, bb.capacity());\n    assertEquals(0, this.reservoir.getQueueSize());\n    this.reservoir.putBuffer(bb);\n    assertEquals(1, this.reservoir.getQueueSize());\n    // Now remove a buffer and don't put it back so reservoir is empty.\n    this.reservoir.getBuffer();\n    assertEquals(0, this.reservoir.getQueueSize());\n    // Try adding in a buffer with a bigger-than-initial size and see if our runningAverage works.\n    // Need to add then remove, then get a new bytebuffer so reservoir internally is doing\n    // allocation\n    final int newCapacity = 2;\n    this.reservoir.putBuffer(ByteBuffer.allocate(newCapacity));\n    assertEquals(1, reservoir.getQueueSize());\n    this.reservoir.getBuffer();\n    assertEquals(0, this.reservoir.getQueueSize());\n    bb = this.reservoir.getBuffer();\n    assertEquals(newCapacity, bb.capacity());\n    // Assert that adding a too-big buffer won't happen\n    assertEquals(0, this.reservoir.getQueueSize());\n    this.reservoir.putBuffer(ByteBuffer.allocate(maxByteBufferSizeToCache * 2));\n    assertEquals(0, this.reservoir.getQueueSize());\n    // Assert we can't add more than max allowed instances.\n    for (int i = 0; i < maxToCache; i++) {\n      this.reservoir.putBuffer(ByteBuffer.allocate(initialByteBufferSize));\n    }\n    assertEquals(maxToCache, this.reservoir.getQueueSize());\n  }","commit_id":"d8f2ac3e6ee26fc338f43c0512379a0ff98ea236","url":"https://github.com/apache/hbase"},{"original_method":"/**\n   * Updates the buffer so it is ready to be read from. After calling this method, the buffer will\n   * be positioned at 0. If the buffer does not have any valid data, the EOF flag will be set.\n   *\n   * @throws IOException if an error occurs reading the data\n   */\n  private void updateBuffer() throws IOException {\n    bufferedRead(mBuffer.capacity());\n    mIsBufferValid = true;\n  }","id":53962,"modified_method":"/**\n   * Updates the buffer so it is ready to be read from. After calling this method, the buffer will\n   * be positioned at 0. If the buffer does not have any valid data, the EOF flag will be set.\n   *\n   * @throws IOException if an error occurs reading the data\n   */\n  private void updateBuffer() throws IOException {\n    mBuffer.clear();\n    int bytesRead = directRead(mBuffer.array(), 0, mBuffer.capacity());\n    if (bytesRead != -1) {\n      mBuffer.limit(bytesRead);\n      mIsBufferValid = true;\n    } else {\n      mEOF = true;\n    }\n  }","commit_id":"ca542612583c1c0b39bd1754fc841381cd3517f7","url":"https://github.com/amplab/tachyon"},{"original_method":"private void free(EphemeralFileChannel fileChannel)\n    {\n        if (fileChannel != null) freeBuffer(fileChannel.fileAsBuffer);\n    }","id":53963,"modified_method":"private void free(EphemeralFileChannel fileChannel)\n    {\n        if (fileChannel != null) fileChannel.fileAsBuffer.free();\n    }","commit_id":"65671a039c4b760f514cdf54f305735c0afafebe","url":"https://github.com/neo4j/neo4j"},{"original_method":"/**\n         * Checks if more space needs to be allocated.\n         */\n        private void verifySize(int amount)\n        {\n            if (buf.remaining() >= amount)\n            {\n                return;\n            }\n\n            // Double size each time, but after 1M only increase by 1M at a time. If wanted amount is bigger than this, use that instead\n            int newSize = buf.capacity() + Math.max(Math.min(this.buf.capacity(), 1024*1000), amount);\n            int oldPosition = this.buf.position();\n            ByteBuffer buf = ByteBuffer.allocate(newSize);\n            this.buf.position(0);\n            buf.put(this.buf);\n            this.buf = buf;\n            this.buf.position(oldPosition);\n        }","id":53964,"modified_method":"/**\n         * Checks if more space needs to be allocated.\n         */\n        private void verifySize(int amount)\n        {\n            if (buf.remaining() >= amount)\n            {\n                return;\n            }\n            \n            // Double size each time, but after 1M only increase by 1M at a time, until required amount is reached.\n            int newSize = buf.capacity();\n            int sizeIndex = newSize / SIZES[SIZES.length - 1];\n            if (sizeIndex == 0) for ( ; sizeIndex < SIZES.length; sizeIndex++ )\n            {\n                if (newSize == SIZES[sizeIndex]) break;\n            }\n            else\n            {\n                sizeIndex += SIZES.length - 1;\n            }\n            for ( int required = newSize + amount - buf.remaining();\n                  newSize < required;\n                  newSize += Math.min( newSize, 1024 * 1024 ), sizeIndex++ );\n            int oldPosition = this.buf.position();\n            ByteBuffer buf = allocate( sizeIndex );\n            this.buf.position(0);\n            buf.put(this.buf);\n            this.buf = buf;\n            this.buf.position(oldPosition);\n        }","commit_id":"65671a039c4b760f514cdf54f305735c0afafebe","url":"https://github.com/neo4j/neo4j"},{"original_method":"public DynamicByteBuffer()\n        {\n            buf = ByteBuffer.allocate(BUFFER_SIZE);\n        }","id":53965,"modified_method":"public DynamicByteBuffer()\n        {\n            buf = allocate( 0 );\n        }","commit_id":"65671a039c4b760f514cdf54f305735c0afafebe","url":"https://github.com/neo4j/neo4j"},{"original_method":"/**\n   * Transform a string Vec where all values are string versions of a number to\n   * a numeric Vec. Any rows that cannot be converted to a number are set to NA.\n   * Currently only does basic numeric formats. No exponents, or hex values. Doesn't\n   * even like commas or spaces.  :( Needs love.\n   *\n   * @return A new Vec\n   */\n  public static Vec stringToNumeric(Vec src) {\n    if(!src.isString()) throw new H2OIllegalArgumentException(\"stringToNumeric conversion only works on string columns\");\n    Vec res = new MRTask() {\n      @Override public void map(Chunk chk, NewChunk newChk){\n        if (chk instanceof C0DChunk) { // all NAs\n          for (int i=0; i < chk._len; i++)\n            newChk.addNA();\n        } else {\n          BufferedString tmpStr = new BufferedString();\n          for (int i=0; i < chk._len; i++) {\n            if (!chk.isNA(i)) {\n              tmpStr = chk.atStr(tmpStr, i);\n              switch (tmpStr.getNumericType()) {\n                case BufferedString.NA:\n                  newChk.addNA(); break;\n                case BufferedString.INT:\n                  newChk.addNum(Long.parseLong(tmpStr.toString()),0); break;\n                case BufferedString.REAL:\n                  newChk.addNum(Double.parseDouble(tmpStr.toString())); break;\n                default:\n                  throw new H2OIllegalValueException(\"Received unexpected type when parsing a string to a number.\", this);\n              }\n            } else newChk.addNA();\n          }\n        }\n      }\n    }.doAll(Vec.T_NUM, src).outputFrame().anyVec();\n    assert res != null;\n    return res;\n  }","id":53966,"modified_method":"/**\n   * Create a new vector of numeric values from a string vector. Any rows that cannot be\n   * converted to a number are set to NA.\n   *\n   * Currently only does basic numeric formats. No exponents, or hex values. Doesn't\n   * even like commas or spaces.  :( Needs love. Handling more numeric\n   * representations is PUBDEV-2209\n   *\n   * @param src a string vector\n   * @return a numeric vector\n   */\n  public static Vec stringToNumeric(Vec src) {\n    if(!src.isString()) throw new H2OIllegalArgumentException(\"stringToNumeric conversion only works on string columns\");\n    Vec res = new MRTask() {\n      @Override public void map(Chunk chk, NewChunk newChk){\n        if (chk instanceof C0DChunk) { // all NAs\n          for (int i=0; i < chk._len; i++)\n            newChk.addNA();\n        } else {\n          BufferedString tmpStr = new BufferedString();\n          for (int i=0; i < chk._len; i++) {\n            if (!chk.isNA(i)) {\n              tmpStr = chk.atStr(tmpStr, i);\n              switch (tmpStr.getNumericType()) {\n                case BufferedString.NA:\n                  newChk.addNA(); break;\n                case BufferedString.INT:\n                  newChk.addNum(Long.parseLong(tmpStr.toString()),0); break;\n                case BufferedString.REAL:\n                  newChk.addNum(Double.parseDouble(tmpStr.toString())); break;\n                default:\n                  throw new H2OIllegalValueException(\"Received unexpected type when parsing a string to a number.\", this);\n              }\n            } else newChk.addNA();\n          }\n        }\n      }\n    }.doAll(Vec.T_NUM, src).outputFrame().anyVec();\n    assert res != null;\n    return res;\n  }","commit_id":"9f2adde4bc1e3e83b918f05b16112447bbe533a8","url":"https://github.com/h2oai/h2o-3"},{"original_method":"/** Transform an categorical Vec to a Int Vec. If the domain of the Vec is stringified ints, then\n   * it will use those ints. Otherwise, it will use the raw domain mapping.\n   * If the domain is stringified ints, then all of the domain must be able to be parsed as\n   * an int. If it cannot be parsed as such, a NumberFormatException will be caught and\n   * rethrown as an IllegalArgumentException that declares the illegal domain value.\n   * Otherwise, the this pointer is copied to a new Vec whose domain is null.\n   * @return A new Vec\n   */\n  public static Vec categoricalToInt(final Vec src) {\n    if( src.isInt() && src.domain()==null ) return copyOver(src, Vec.T_NUM, null);\n    if( !src.isCategorical() ) throw new IllegalArgumentException(\"categoricalToInt conversion only works on categorical columns.\");\n    // check if the 1st lvl of the domain can be parsed as int\n    boolean useDomain=false;\n    Vec newVec = copyOver(src, Vec.T_NUM, null);\n    try {\n      Integer.parseInt(src.domain()[0]);\n      useDomain=true;\n    } catch (NumberFormatException e) {\n      // makeCopy and return...\n    }\n    if( useDomain ) {\n      new MRTask() {\n        @Override public void map(Chunk c) {\n          for (int i=0;i<c._len;++i)\n            if( !c.isNA(i) )\n              c.set(i, Integer.parseInt(src.domain()[(int)c.at8(i)]));\n        }\n      }.doAll(newVec);\n    }\n    return newVec;\n  }","id":53967,"modified_method":"/**\n   * Create a new vector of numeric values from a categorical vector.\n   *\n   * If the first value in the domain of the src Vec is a stringified ints,\n   * then it will use those ints. Otherwise, it will use the raw enumeration level mapping.\n   * If the domain is stringified ints, then all of the domain must be able to be parsed as\n   * an int. If it cannot be parsed as such, a NumberFormatException will be caught and\n   * rethrown as an H2OIllegalArgumentException that declares the illegal domain value.\n   * Otherwise, the this pointer is copied to a new Vec whose domain is null.\n   *\n   * The magic of this method should be eliminated. It should just use enumeration level\n   * maps. If the user wants domains to be used, call categoricalDomainsToNumeric().\n   * PUBDEV-2209\n   *\n   * @param src a categorical vector\n   * @return a numeric vector\n   */\n  public static Vec categoricalToInt(final Vec src) {\n    if( src.isInt() && src.domain()==null ) return copyOver(src, Vec.T_NUM, null);\n    if( !src.isCategorical() ) throw new IllegalArgumentException(\"categoricalToInt conversion only works on categorical columns.\");\n    // check if the 1st lvl of the domain can be parsed as int\n    boolean useDomain=false;\n    Vec newVec = copyOver(src, Vec.T_NUM, null);\n    try {\n      Integer.parseInt(src.domain()[0]);\n      useDomain=true;\n    } catch (NumberFormatException e) {\n      // makeCopy and return...\n    }\n    if( useDomain ) {\n      new MRTask() {\n        @Override public void map(Chunk c) {\n          for (int i=0;i<c._len;++i)\n            if( !c.isNA(i) )\n              c.set(i, Integer.parseInt(src.domain()[(int)c.at8(i)]));\n        }\n      }.doAll(newVec);\n    }\n    return newVec;\n  }","commit_id":"9f2adde4bc1e3e83b918f05b16112447bbe533a8","url":"https://github.com/h2oai/h2o-3"},{"original_method":"public static Vec numericToStringVec(Vec src) {\n    if (src.isCategorical() || src.isUUID())\n      throw new H2OIllegalValueException(\"Cannot convert a non-numeric column\"\n          + \" using numericToStringVec() \",src);\n    Vec res = new MRTask() {\n      @Override\n      public void map(Chunk chk, NewChunk newChk) {\n        if (chk instanceof C0DChunk) { // all NAs\n          for (int i=0; i < chk._len; i++)\n            newChk.addNA();\n        } else {\n          for (int i=0; i < chk._len; i++) {\n            if (!chk.isNA(i))\n              newChk.addStr(PrettyPrint.number(chk, chk.atd(i), 4));\n            else\n              newChk.addNA();\n          }\n        }\n      }\n    }.doAll(Vec.T_STR, src).outputFrame().anyVec();\n    assert res != null;\n    return res;\n  }","id":53968,"modified_method":"/**\n   * Create a new vector of string values from a numeric vector.\n   *\n   * Currently only uses a default pretty printer. Would be better if\n   * it accepted a format string PUBDEV-2211\n   *\n   * @param src a numeric vector\n   * @return a string vector\n   */\n  public static Vec numericToStringVec(Vec src) {\n    if (src.isCategorical() || src.isUUID())\n      throw new H2OIllegalValueException(\"Cannot convert a non-numeric column\"\n          + \" using numericToStringVec() \",src);\n    Vec res = new MRTask() {\n      @Override\n      public void map(Chunk chk, NewChunk newChk) {\n        if (chk instanceof C0DChunk) { // all NAs\n          for (int i=0; i < chk._len; i++)\n            newChk.addNA();\n        } else {\n          for (int i=0; i < chk._len; i++) {\n            if (!chk.isNA(i))\n              newChk.addStr(PrettyPrint.number(chk, chk.atd(i), 4));\n            else\n              newChk.addNA();\n          }\n        }\n      }\n    }.doAll(Vec.T_STR, src).outputFrame().anyVec();\n    assert res != null;\n    return res;\n  }","commit_id":"9f2adde4bc1e3e83b918f05b16112447bbe533a8","url":"https://github.com/h2oai/h2o-3"},{"original_method":"/** Transform this vector to strings.  If the\n   *  vector is categorical an identity transformation vector is returned.\n   *  Transformation is done by a {@link Categorical2StrChkTask} which provides a mapping\n   *  between values - without copying the underlying data.\n   *  @return A new String Vec  */\n  public static Vec categoricalToStringVec(Vec src) {\n    if( !src.isCategorical() )\n      throw new H2OIllegalValueException(\"Can not convert a non-categorical column\"\n          + \" using categoricalToStringVec().\",src);\n    return new Categorical2StrChkTask(src.domain()).doAll(Vec.T_STR,src).outputFrame().anyVec();\n  }","id":53969,"modified_method":"/**\n   * Create a new vector of string values from a categorical vector.\n   *\n   * Transformation is done by a {@link Categorical2StrChkTask} which provides a mapping\n   *  between values - without copying the underlying data.\n   *\n   * @param src a categorical vector\n   * @return a string vector\n   */\n  public static Vec categoricalToStringVec(Vec src) {\n    if( !src.isCategorical() )\n      throw new H2OIllegalValueException(\"Can not convert a non-categorical column\"\n          + \" using categoricalToStringVec().\",src);\n    return new Categorical2StrChkTask(src.domain()).doAll(Vec.T_STR,src).outputFrame().anyVec();\n  }","commit_id":"9f2adde4bc1e3e83b918f05b16112447bbe533a8","url":"https://github.com/h2oai/h2o-3"},{"original_method":"public static Vec numericToCategorical(Vec src) {\n    if (src.isInt()) {\n      int min = (int) src.min(), max = (int) src.max();\n      // try to do the fast domain collection\n      long dom[] = (min >= 0 && max < Integer.MAX_VALUE - 4) ? new CollectDomainFast(max).doAll(src).domain() : new CollectDomain().doAll(src).domain();\n      if (dom.length > Categorical.MAX_CATEGORICAL_COUNT)\n        throw new H2OIllegalArgumentException(\"Column domain is too large to be represented as an categorical: \" + dom.length + \" > \" + Categorical.MAX_CATEGORICAL_COUNT);\n      return copyOver(src, Vec.T_CAT, dom);\n    } else throw new H2OIllegalArgumentException(\"Categorical conversion can only currently be applied to integer columns.\");\n  }","id":53970,"modified_method":"/**\n   * Create a new vector of categorical values from a numeric vector.\n   *\n   * This currently only ingests a vector of integers.\n   *\n   * Handling reals is PUBDEV-2207\n   *\n   * @param src a numeric vector\n   * @return a categorical vector\n   */\n  public static Vec numericToCategorical(Vec src) {\n    if (src.isInt()) {\n      int min = (int) src.min(), max = (int) src.max();\n      // try to do the fast domain collection\n      long dom[] = (min >= 0 && max < Integer.MAX_VALUE - 4) ? new CollectDomainFast(max).doAll(src).domain() : new CollectDomain().doAll(src).domain();\n      if (dom.length > Categorical.MAX_CATEGORICAL_COUNT)\n        throw new H2OIllegalArgumentException(\"Column domain is too large to be represented as an categorical: \" + dom.length + \" > \" + Categorical.MAX_CATEGORICAL_COUNT);\n      return copyOver(src, Vec.T_CAT, dom);\n    } else throw new H2OIllegalArgumentException(\"Categorical conversion can only currently be applied to integer columns.\");\n  }","commit_id":"9f2adde4bc1e3e83b918f05b16112447bbe533a8","url":"https://github.com/h2oai/h2o-3"},{"original_method":"/**\n   * Transform a categorical Vec where all domain values are string versions of a number to\n   * a numeric Vec. Any rows that cannot be converted to a number are set to NA.\n   *\n   * @return A new Vec\n   */\n  public static Vec categoricalDomainsToNumeric(final Vec src) {\n    if( !src.isCategorical() ) throw new H2OIllegalArgumentException(\"categoricalToNumeric() conversion only works on categorical vecs\");\n    // check if the 1st lvl of the domain can be parsed as int\n    boolean useDomain=false;\n    Vec newVec = copyOver(src, Vec.T_NUM, null);\n    try {\n      Integer.parseInt(src.domain()[0]);\n      useDomain=true;\n    } catch (NumberFormatException e) {\n      // makeCopy and return...\n    }\n    if( useDomain ) {\n      new MRTask() {\n        @Override public void map(Chunk c) {\n          for (int i=0;i<c._len;++i)\n            if( !c.isNA(i) )\n              c.set(i, Integer.parseInt(src.domain()[(int)c.at8(i)]));\n        }\n      }.doAll(newVec);\n    }\n    return newVec;\n  }","id":53971,"modified_method":"/**\n   * Create a new vector of numeric values from a categorical vector.\n   *\n   * Numeric values are generated explicitly from the domain values, and not the\n   * enumeration levels. If a domain value cannot be translated as a number, that\n   * domain and all values for that domain will be NA.\n   *\n   * @param src a categorical vector\n   * @return a numeric vector\n   */\n  public static Vec categoricalDomainsToNumeric(final Vec src) {\n    if( !src.isCategorical() ) throw new H2OIllegalArgumentException(\"categoricalToNumeric() conversion only works on categorical columns\");\n    // check if the 1st lvl of the domain can be parsed as int\n    return new MRTask() {\n        @Override public void map(Chunk c) {\n          for (int i=0;i<c._len;++i)\n            if( !c.isNA(i) )\n              c.set(i, Integer.parseInt(src.domain()[(int)c.at8(i)]));\n        }\n      }.doAll(Vec.T_NUM, src).outputFrame().anyVec();\n  }","commit_id":"9f2adde4bc1e3e83b918f05b16112447bbe533a8","url":"https://github.com/h2oai/h2o-3"},{"original_method":"public static Vec UUIDToStringVec(Vec src) {\n    Vec res = new MRTask() {\n      @Override public void map(Chunk chk, NewChunk newChk) {\n        if (chk instanceof C0DChunk) { // all NAs\n          for (int i=0; i < chk._len; i++)\n            newChk.addNA();\n        } else {\n          for (int i=0; i < chk._len; i++) {\n            if (!chk.isNA(i))\n              newChk.addStr(PrettyPrint.UUID(chk.at16l(i), chk.at16h(i)));\n            else\n              newChk.addNA();\n          }\n        }\n      }\n    }.doAll(Vec.T_STR,src).outputFrame().anyVec();\n    assert res != null;\n    return res;\n  }","id":53972,"modified_method":"/**\n   * Create a new vector of string values from a UUID vector.\n   *\n   * String vector is the standard hexadecimal representations of a UUID.\n   *\n   * @param src a UUID vector\n   * @return a string vector\n   */\n  public static Vec UUIDToStringVec(Vec src) {\n    if( !src.isUUID() ) throw new H2OIllegalArgumentException(\"UUIDToStringVec() conversion only works on UUID columns\");\n    Vec res = new MRTask() {\n      @Override public void map(Chunk chk, NewChunk newChk) {\n        if (chk instanceof C0DChunk) { // all NAs\n          for (int i=0; i < chk._len; i++)\n            newChk.addNA();\n        } else {\n          for (int i=0; i < chk._len; i++) {\n            if (!chk.isNA(i))\n              newChk.addStr(PrettyPrint.UUID(chk.at16l(i), chk.at16h(i)));\n            else\n              newChk.addNA();\n          }\n        }\n      }\n    }.doAll(Vec.T_STR,src).outputFrame().anyVec();\n    assert res != null;\n    return res;\n  }","commit_id":"9f2adde4bc1e3e83b918f05b16112447bbe533a8","url":"https://github.com/h2oai/h2o-3"},{"original_method":"/**\n   * Convert to a string value.\n   *\n   * For string columns, a copy of the column is made.\n   *\n   * For categorical columns, levels are dropped, and the column only records the string.\n   *\n   * For all numeric columns, the number is converted to a string.\n   *\n   * For all UUID columns, the hex representation is stored as a string.\n   *\n   * @return\n   */\n  public static Vec toStringVec(Vec src) {\n    switch (src.get_type()) {\n      case Vec.T_STR:\n        return src.makeCopy();\n      case Vec.T_CAT:\n        return categoricalToStringVec(src);\n      case Vec.T_UUID:\n        return UUIDToStringVec(src);\n      case Vec.T_TIME:\n      case Vec.T_NUM:\n        return numericToStringVec(src);\n      default:\n        throw new H2OIllegalArgumentException(\"Unrecognized column type \" + src.get_type_str()\n            + \" given to toStringVec().\");\n    }\n  }","id":53973,"modified_method":"/**\n   * Create a new vector of string values from an existing vector.\n   *\n   * This method accepts all vector types as input. The original Vec is not mutated.\n   *\n   * If src is a string vector, a copy of the vector is made.\n   *\n   * If src is a categorical vector, levels are dropped, and the vector only records the string.\n   *\n   * For all numeric vectors, the number is converted to a string.\n   *\n   * For all UUID vectors, the hex representation is stored as a string.\n   *\n   *  @param src A vector whose values will be used as the basis for a new string Vec\n   *  @return the resulting string Vec\n   */\n  public static Vec toStringVec(Vec src) {\n    switch (src.get_type()) {\n      case Vec.T_STR:\n        return src.makeCopy();\n      case Vec.T_CAT:\n        return categoricalToStringVec(src);\n      case Vec.T_UUID:\n        return UUIDToStringVec(src);\n      case Vec.T_TIME:\n      case Vec.T_NUM:\n        return numericToStringVec(src);\n      default:\n        throw new H2OIllegalArgumentException(\"Unrecognized column type \" + src.get_type_str()\n            + \" given to toStringVec().\");\n    }\n  }","commit_id":"9f2adde4bc1e3e83b918f05b16112447bbe533a8","url":"https://github.com/h2oai/h2o-3"},{"original_method":"/** Create a new Vec (as opposed to wrapping it) that is the categorical'ified version of the original.\n   *  The original Vec is not mutated.  */\n  public static Vec toCategoricalVec(Vec src) {\n    switch (src.get_type()) {\n      case Vec.T_STR:\n        throw new H2OIllegalArgumentException(\"Changing string columns to a categorical\"\n            + \" column has not been implemented yet.\");\n        //return stringToCategorical(src);\n      case Vec.T_CAT:\n        return src.makeCopy(src.domain());\n      case Vec.T_UUID:\n        throw new H2OIllegalArgumentException(\"Changing UUID columns to a categorical\"\n            + \" column has not been implemented yet.\");\n      case Vec.T_TIME:\n        throw new H2OIllegalArgumentException(\"Changing time/date columns to a categorical\"\n            + \" column has not been implemented yet.\");\n      case Vec.T_NUM:\n        return numericToCategorical(src);\n      default:\n        throw new H2OIllegalArgumentException(\"Unrecognized column type \" + src.get_type_str()\n            + \" given to toCategoricalVec()\");\n    }\n  }","id":53974,"modified_method":"/**\n   * Create a new vector of categorical values from an existing vector.\n   *\n   * This method accepts all vector types as input. The original Vec is not mutated.\n   *\n   * If src is a categorical vector, a copy is returned.\n   *\n   * If src is a numeric vector, the values are converted to strings used as domain\n   * values.\n   *\n   * For all other types, an exception is currently thrown. These need to be replaced\n   * with appropriate conversions.\n   *\n   * Throws H2OIllegalArgumentException() if the resulting domain exceeds\n   * Categorical.MAX_CATEGORICAL_COUNT.\n   *\n   *  @param src A vector whose values will be used as the basis for a new categorical vec\n   *  @return the resulting categorical Vec\n   */\n  public static Vec toCategoricalVec(Vec src) {\n    switch (src.get_type()) {\n      case Vec.T_CAT:\n        return src.makeCopy(src.domain());\n      case Vec.T_NUM:\n        return numericToCategorical(src);\n      case Vec.T_STR: // PUBDEV-2204\n        throw new H2OIllegalArgumentException(\"Changing string columns to a categorical\"\n            + \" column has not been implemented yet.\");\n        //return stringToCategorical(src);\n      case Vec.T_TIME: // PUBDEV-2205\n        throw new H2OIllegalArgumentException(\"Changing time/date columns to a categorical\"\n            + \" column has not been implemented yet.\");\n      case Vec.T_UUID:\n        throw new H2OIllegalArgumentException(\"Changing UUID columns to a categorical\"\n            + \" column has not been implemented yet.\");\n      default:\n        throw new H2OIllegalArgumentException(\"Unrecognized column type \" + src.get_type_str()\n            + \" given to toCategoricalVec()\");\n    }\n  }","commit_id":"9f2adde4bc1e3e83b918f05b16112447bbe533a8","url":"https://github.com/h2oai/h2o-3"},{"original_method":"public static Vec stringToCategorical(Vec src) {\n    Vec res = null;\n    return res;\n  }","id":53975,"modified_method":"/**\n   * Create a new vector of categorical values from string vector.\n   *\n   * To be finished, PUBDEV-2204\n   *\n   * @param src a string vector\n   * @return a categorical vector\n   */\n  public static Vec stringToCategorical(Vec src) {\n    Vec res = null;\n    return res;\n  }","commit_id":"9f2adde4bc1e3e83b918f05b16112447bbe533a8","url":"https://github.com/h2oai/h2o-3"},{"original_method":"/**\n   * Convert to a numeric value.\n   *\n   * For string columns, any row that can parse to a number does so,\n   * and all others become NA.\n   *\n   * For enumeration columns, the levels of each category are returned.\n   *\n   * For all numeric columns, a copy is made.\n   *\n   */\n  public static Vec toNumericVec(Vec src) {\n    switch (src.get_type()) {\n      case Vec.T_STR:\n        return stringToNumeric(src);\n      case Vec.T_CAT:\n        return categoricalToInt(src);\n      case Vec.T_UUID:\n      case Vec.T_TIME:\n      case Vec.T_NUM:\n        return src.makeCopy(null, Vec.T_NUM);\n      default:\n        throw new H2OIllegalArgumentException(\"Unrecognized column type \" + src.get_type_str()\n            + \" given to toNumericVec()\");\n    }\n  }","id":53976,"modified_method":"/**\n   * Create a new vector of numeric values from an existing vector.\n   *\n   * This method accepts all vector types as input. The original Vec is not mutated.\n   *\n   * If src is a categorical vector, a copy is returned.\n   *\n   * If src is a string vector, all values that can be are parsed into reals or integers, and all\n   * others become NA. See stringToNumeric for parsing details.\n   *\n   * If src is a numeric vector, a copy is made.\n   *\n   * If src is a time vector, the milliseconds since the epoch are used to populate the new Vec.\n   *\n   * If src is a UUID vector, the existing numeric storage is used to populate the new Vec.\n   *\n   * Throws H2OIllegalArgumentException() if the resulting domain exceeds\n   * Categorical.MAX_CATEGORICAL_COUNT.\n   *\n   *  @param src A vector whose values will be used as the basis for a new numeric vec\n   *  @return the resulting numeric Vec\n   */\n  public static Vec toNumericVec(Vec src) {\n    switch (src.get_type()) {\n      case Vec.T_CAT:\n        return categoricalToInt(src);\n      case Vec.T_STR:\n        return stringToNumeric(src);\n      case Vec.T_NUM:\n      case Vec.T_TIME:\n      case Vec.T_UUID:\n        return src.makeCopy(null, Vec.T_NUM);\n      default:\n        throw new H2OIllegalArgumentException(\"Unrecognized column type \" + src.get_type_str()\n            + \" given to toNumericVec()\");\n    }\n  }","commit_id":"9f2adde4bc1e3e83b918f05b16112447bbe533a8","url":"https://github.com/h2oai/h2o-3"},{"original_method":"@Override ValFrame apply( Env env, Env.StackHelp stk, AST asts[] ) {\n    Frame fr = stk.track(asts[1].exec(env)).getFrame();\n    String pattern = asts[2].exec(env).getStr();\n    if (fr.numCols() != 1) throw new IllegalArgumentException(\"countmatches requires a single column.\");\n    final int[] matchCounts = countMatches(fr.anyVec().domain(),pattern);\n\n    Frame fr2 = new MRTask() {\n      @Override public void map(Chunk[] cs, NewChunk[] ncs) {\n        Chunk c = cs[0];\n        for (int i = 0; i < c._len; ++i) {\n          if( !c.isNA(i) ) {\n            int idx = (int) c.at8(i);\n            ncs[0].addNum(matchCounts[idx]);\n          } else ncs[i].addNA();\n        }\n      }\n    }.doAll(1, fr).outputFrame(null, null, null);\n    return new ValFrame(fr);\n  }","id":53977,"modified_method":"@Override ValFrame apply( Env env, Env.StackHelp stk, AST asts[] ) {\n    Frame fr = stk.track(asts[1].exec(env)).getFrame();\n    String[] pattern;\n    if( asts[2] instanceof ASTStrList ) pattern = ((ASTStrList)asts[2])._strs;\n    else                                pattern = new String[]{asts[2].exec(env).getStr()};\n\n    if (fr.numCols() != 1) throw new IllegalArgumentException(\"countmatches requires a single column.\");\n    final int[] matchCounts = countMatches(fr.anyVec().domain(),pattern);\n\n    Frame fr2 = new MRTask() {\n      @Override public void map(Chunk[] cs, NewChunk[] ncs) {\n        Chunk c = cs[0];\n        for (int i = 0; i < c._len; ++i) {\n          if( !c.isNA(i) ) {\n            int idx = (int) c.at8(i);\n            ncs[0].addNum(matchCounts[idx]);\n          } else ncs[i].addNA();\n        }\n      }\n    }.doAll(1, fr).outputFrame();\n    return new ValFrame(fr2);\n  }","commit_id":"fcd4c22050fe67ff8eefc1eb976e1d79f5f8fa00","url":"https://github.com/h2oai/h2o-3"},{"original_method":"int[] countMatches(String[] domain, String pattern) {\n    int[] res = new int[domain.length];\n    for (int i=0; i < domain.length; i++)\n      res[i] += StringUtils.countMatches(domain[i],pattern);\n    return res;\n  }","id":53978,"modified_method":"int[] countMatches(String[] domain, String[] pattern) {\n    int[] res = new int[domain.length];\n    for (int i=0; i < domain.length; i++)\n      for (String aPattern : pattern)\n        res[i] += StringUtils.countMatches(domain[i], aPattern);\n    return res;\n  }","commit_id":"fcd4c22050fe67ff8eefc1eb976e1d79f5f8fa00","url":"https://github.com/h2oai/h2o-3"},{"original_method":"/**\n   * Score auto-encoded reconstruction (on-the-fly, without allocating the reconstruction as done in Frame score(Frame fr))\n   * @param frame Original data (can contain response, will be ignored)\n   * @return Frame containing one Vec with reconstruction error (MSE) of each reconstructed row, caller is responsible for deletion\n   */\n  public Frame scoreAutoEncoder(Frame frame, Key destination_key) {\n    if (!get_params()._autoencoder)\n      throw new H2OIllegalArgumentException(\"Only for AutoEncoder Deep Learning model.\", \"\");\n    final int len = _output._names.length;\n    Frame adaptFrm = new Frame(frame);\n    Vec v0 = adaptFrm.anyVec().makeZero();\n    Scope.enter();\n    adaptTestForTrain(adaptFrm,true, false);\n    adaptFrm.add(\"Reconstruction.MSE\", v0);\n    new MRTask() {\n      @Override public void map( Chunk chks[] ) {\n        double tmp [] = new double[len];\n        final Neurons[] neurons = DeepLearningTask.makeNeuronsForTesting(model_info);\n        for( int row=0; row<chks[0]._len; row++ ) {\n          for( int i=0; i<len; i++ )\n            tmp[i] = chks[i].atd(row);\n          //store the per-row reconstruction error (MSE) in the last column\n          chks[len].set(row, score_autoencoder(tmp, null, neurons));\n        }\n      }\n    }.doAll(adaptFrm);\n    Scope.exit();\n\n    Frame res = adaptFrm.extractFrame(len, adaptFrm.numCols());\n    res = new Frame(destination_key, res.names(), res.vecs());\n    DKV.put(res);\n    _output.addModelMetrics(new ModelMetricsAutoEncoder(this, frame, res.vecs()[0].mean() /*mean MSE*/));\n    return res;\n  }","id":53979,"modified_method":"/**\n   * Score auto-encoded reconstruction (on-the-fly, without allocating the reconstruction as done in Frame score(Frame fr))\n   * @param frame Original data (can contain response, will be ignored)\n   * @return Frame containing one Vec with reconstruction error (MSE) of each reconstructed row, caller is responsible for deletion\n   */\n  public Frame scoreAutoEncoder(Frame frame, Key destination_key) {\n    if (!get_params()._autoencoder)\n      throw new H2OIllegalArgumentException(\"Only for AutoEncoder Deep Learning model.\", \"\");\n    final int len = _output._names.length;\n    Frame adaptFrm = new Frame(frame);\n    adaptTestForTrain(adaptFrm,true, false);\n    Frame mse = new MRTask() {\n      @Override public void map( Chunk chks[], NewChunk[] mse ) {\n        double tmp [] = new double[len];\n        final Neurons[] neurons = DeepLearningTask.makeNeuronsForTesting(model_info);\n        for( int row=0; row<chks[0]._len; row++ ) {\n          for( int i=0; i<len; i++ )\n            tmp[i] = chks[i].atd(row);\n          //store the per-row reconstruction error (MSE) in the last column\n          mse[0].addNum(score_autoencoder(tmp, null, neurons));\n        }\n      }\n    }.doAll(1,adaptFrm).outputFrame();\n\n    Frame res = new Frame(destination_key, new String[]{\"Reconstruction.MSE\"}, mse.vecs());\n    DKV.put(res);\n    _output.addModelMetrics(new ModelMetricsAutoEncoder(this, frame, res.vecs()[0].mean() /*mean MSE*/));\n    return res;\n  }","commit_id":"6b1073b310d3058b44ac2e10546115338fa5ac23","url":"https://github.com/h2oai/h2o-3"},{"original_method":"/** Make either a prediction or a reconstruction.\n   * @param orig Test dataset\n   * @param adaptedFr Test dataset, adapted to the model\n   * @return A frame containing the prediction or reconstruction\n   */\n  @Override protected Frame predictScoreImpl(Frame orig, Frame adaptedFr, String destination_key) {\n    if (!get_params()._autoencoder) {\n      return super.predictScoreImpl(orig, adaptedFr, destination_key);\n    } else {\n      // Reconstruction\n      final int len = model_info().data_info().fullN();\n      String prefix = \"reconstr_\";\n      assert(model_info().data_info()._responses == 0);\n      String[] coefnames = model_info().data_info().coefNames();\n      assert(len == coefnames.length);\n      Frame adaptFrm = new Frame(adaptedFr);\n      for( int c=0; c<len; c++ )\n        adaptFrm.add(prefix+coefnames[c],adaptFrm.anyVec().makeZero());\n      new MRTask() {\n        @Override public void map( Chunk chks[] ) {\n          double tmp [] = new double[_output._names.length];\n          double preds[] = new double [len];\n          final Neurons[] neurons = DeepLearningTask.makeNeuronsForTesting(model_info);\n          for( int row=0; row<chks[0]._len; row++ ) {\n            double p[] = score_autoencoder(chks, row, tmp, preds, neurons);\n            for( int c=0; c<preds.length; c++ )\n              chks[_output._names.length+c].set(row,p[c]);\n          }\n        }\n      }.doAll(adaptFrm);\n\n      // Return the predicted columns\n      int x=_output._names.length, y=adaptFrm.numCols();\n      Frame f = adaptFrm.extractFrame(x, y); //this will call vec_impl() and we cannot call the delete() below just yet\n\n      f = new Frame((null == destination_key ? Key.make() : Key.make(destination_key)), f.names(), f.vecs());\n      DKV.put(f);\n      makeMetricBuilder(null).makeModelMetrics(this, orig);\n      return f;\n    }\n  }","id":53980,"modified_method":"/** Make either a prediction or a reconstruction.\n   * @param orig Test dataset\n   * @param adaptedFr Test dataset, adapted to the model\n   * @return A frame containing the prediction or reconstruction\n   */\n  @Override protected Frame predictScoreImpl(Frame orig, Frame adaptedFr, String destination_key) {\n    if (!get_params()._autoencoder) {\n      return super.predictScoreImpl(orig, adaptedFr, destination_key);\n    } else {\n      // Reconstruction\n      final int len = model_info().data_info().fullN();\n      assert(model_info().data_info()._responses == 0);\n      String[] coefnames = model_info().data_info().coefNames();\n      assert(len == coefnames.length);\n      String[] names = new String[len];\n      for(int i = 0; i < names.length; ++i) {\n        names[i] = \"reconstr_\" + coefnames[i];\n      }\n      Frame f = new MRTask() {\n        @Override public void map( Chunk chks[], NewChunk recon[] ) {\n          double tmp [] = new double[_output._names.length];\n          double preds[] = new double [len];\n          final Neurons[] neurons = DeepLearningTask.makeNeuronsForTesting(model_info);\n          for( int row=0; row<chks[0]._len; row++ ) {\n            double p[] = score_autoencoder(chks, row, tmp, preds, neurons);\n            for( int c=0; c<len; c++ )\n              recon[c].addNum(p[c]);\n          }\n        }\n      }.doAll(len,adaptedFr).outputFrame();\n\n      Frame of = new Frame((null == destination_key ? Key.make() : Key.make(destination_key)), names, f.vecs());\n      DKV.put(of);\n      makeMetricBuilder(null).makeModelMetrics(this, orig);\n      return of;\n    }\n  }","commit_id":"6b1073b310d3058b44ac2e10546115338fa5ac23","url":"https://github.com/h2oai/h2o-3"},{"original_method":"@Override\r\n    public String getText(Mode mode) {\r\n        if (staticText != null && !staticText.isEmpty()) {\r\n            return staticText;\r\n        }\r\n        StringBuilder sb = new StringBuilder();\r\n        Target target = mode.getTargets().get(0);\r\n        \r\n        if (target.getMaxNumberOfTargets() == target.getNumberOfTargets()) {\r\n            if (target.getMaxNumberOfTargets() == 1) {\r\n                sb.append(\"detain target \").append(target.getTargetName());\r\n            }\r\n            else {\r\n                sb.append(\"detain \").append(target.getMaxNumberOfTargets()).append(\" target \").append(target.getTargetName());\r\n            }\r\n        } else {\r\n                sb.append(\"detain up to \").append(target.getMaxNumberOfTargets()).append(\" target \").append(target.getTargetName());\r\n        }\r\n        sb.append(\". <i>(Until your next turn, \");\r\n\r\n\r\n        if (target instanceof TargetCreaturePermanent) {\r\n            sb.append(target.getMaxNumberOfTargets() == 1 ? \"that creature\": \"those creatures\");\r\n        } \r\n        else  {\r\n            sb.append(target.getMaxNumberOfTargets() == 1 ? \"that permanent\": \"those permanents\");\r\n        }\r\n        sb.append(\" can't attack or block and \");\r\n        sb.append(target.getMaxNumberOfTargets() == 1 ? \"its\": \"their\");\r\n        sb.append(\" activated abilities can't be activated)<\/i>\");\r\n        return sb.toString();\r\n    }","id":53981,"modified_method":"@Override\r\n    public String getText(Mode mode) {\r\n        if (staticText != null && !staticText.isEmpty()) {\r\n            return staticText;\r\n        }\r\n        StringBuilder sb = new StringBuilder();\r\n        Target target = mode.getTargets().get(0);\r\n        \r\n        if (target.getMaxNumberOfTargets() == target.getNumberOfTargets()) {\r\n            if (target.getMaxNumberOfTargets() == 1) {\r\n                sb.append(\"detain target \").append(target.getTargetName());\r\n            }\r\n            else {\r\n                sb.append(\"detain \").append(target.getMaxNumberOfTargets()).append(\" target \").append(target.getTargetName());\r\n            }\r\n        } else {\r\n                sb.append(\"detain up to \").append(CardUtil.numberToText(target.getMaxNumberOfTargets())).append(\" target \").append(target.getTargetName());\r\n        }\r\n        sb.append(\". <i>(Until your next turn, \");\r\n\r\n\r\n        if (target instanceof TargetCreaturePermanent) {\r\n            sb.append(target.getMaxNumberOfTargets() == 1 ? \"that creature\": \"those creatures\");\r\n        } \r\n        else  {\r\n            sb.append(target.getMaxNumberOfTargets() == 1 ? \"that permanent\": \"those permanents\");\r\n        }\r\n        sb.append(\" can't attack or block and \");\r\n        sb.append(target.getMaxNumberOfTargets() == 1 ? \"its\": \"their\");\r\n        sb.append(\" activated abilities can't be activated)<\/i>\");\r\n        return sb.toString();\r\n    }","commit_id":"46472218683ca03c4c0d38369317e0850ac4c765","url":"https://github.com/magefree/mage"},{"original_method":"@Override\r\n    public boolean applies(GameEvent event, Ability source, Game game) {\r\n        // replace untap event of creatures of target player\r\n        if (game.getTurn().getStepType() == PhaseStep.UNTAP && event.getType() == EventType.UNTAP) {\r\n            Permanent permanent = game.getPermanent(event.getTargetId());\r\n            if (permanent != null && permanent.getControllerId().equals(targetPlayerId) && filter.match(permanent, game)) {\r\n                return true;\r\n            }\r\n        }\r\n        // discard effect at end of next untap step of target player\r\n        if (event.getType().equals(EventType.UNTAP_STEP_POST)) {\r\n            if (targetPlayerId.equals(event.getPlayerId())) {\r\n                discard();\r\n            }\r\n        }\r\n        return false;\r\n    }","id":53982,"modified_method":"@Override\r\n    public boolean applies(GameEvent event, Ability source, Game game) {\r\n        // replace untap event of creatures of target player\r\n        if (game.getTurn().getStepType() == PhaseStep.UNTAP && event.getType() == EventType.UNTAP) {\r\n            Permanent permanent = game.getPermanent(event.getTargetId());\r\n            if (permanent != null && permanent.getControllerId().equals(targetPlayerId) && filter.match(permanent, game)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }","commit_id":"f4c0412c8c4e3f12c11d2a75ec22a9fd23ff9d94","url":"https://github.com/magefree/mage"},{"original_method":"@Override\n    public String getText(Mode mode) {\n        if (staticText.length() > 0) {\n            return \"tap \" + staticText;\n        }\n\n        Target target = mode.getTargets().get(0);\n        if (target.getMaxNumberOfTargets() > 1) {\n            if (target.getMaxNumberOfTargets() == target.getNumberOfTargets()) {\n                return \"tap \" + target.getNumberOfTargets() + \" target \" + target.getTargetName() + \"s\";\n            } else {\n                return \"tap up to \" + target.getMaxNumberOfTargets() + \" target \" + target.getTargetName() + \"s\";\n            }\n        } else if (target.getMaxNumberOfTargets() == 0){\n            return \"tap X target \" + mode.getTargets().get(0).getTargetName();\n        } else {\n            return \"tap target \" + mode.getTargets().get(0).getTargetName();\n        }\n    }","id":53983,"modified_method":"@Override\n    public String getText(Mode mode) {\n        if (staticText.length() > 0) {\n            return \"tap \" + staticText;\n        }\n\n        Target target = mode.getTargets().get(0);\n        if (target.getMaxNumberOfTargets() > 1) {\n            if (target.getMaxNumberOfTargets() == target.getNumberOfTargets()) {\n                return \"tap \" + CardUtil.numberToText(target.getNumberOfTargets()) + \" target \" + target.getTargetName() + \"s\";\n            } else {\n                return \"tap up to \" + CardUtil.numberToText(target.getMaxNumberOfTargets()) + \" target \" + target.getTargetName() + \"s\";\n            }\n        } else if (target.getMaxNumberOfTargets() == 0){\n            return \"tap X target \" + mode.getTargets().get(0).getTargetName();\n        } else {\n            return \"tap target \" + mode.getTargets().get(0).getTargetName();\n        }\n    }","commit_id":"f4c0412c8c4e3f12c11d2a75ec22a9fd23ff9d94","url":"https://github.com/magefree/mage"},{"original_method":"/**\r\n     * Converts an integer number to string\r\n     * Numbers > 20 will be returned as digits\r\n     *\r\n     */\r\n    public static String numberToText(int number) {\r\n        if (number >= 0 && number < 21) {\r\n            return numberStrings[number];\r\n        }\r\n        return Integer.toString(number);\r\n    }","id":53984,"modified_method":"/**\r\n     * Converts an integer number to string\r\n     * Numbers > 20 will be returned as digits\r\n     *\r\n     */\r\n    public static String numberToText(int number) {\r\n        if (number >= 0 && number < 21) {\r\n            return numberStrings[number];\r\n        }\r\n        if (number == Integer.MAX_VALUE) {\r\n            return \"any number of\";\r\n        }\r\n        return Integer.toString(number);\r\n    }","commit_id":"4e35568bb5f1986f7324bb57079635b9440057a6","url":"https://github.com/magefree/mage"},{"original_method":"@Override\n    public String getText(Mode mode) {\n        if (staticText != null && !staticText.isEmpty()) {\n            return staticText;\n        }\n        if (mode.getTargets().size() < 1) {\n            return \"\";\n        }\n        Target target = mode.getTargets().get(0);\n        StringBuilder sb = new StringBuilder(\"Return \");\n        if (target.getNumberOfTargets() == 0 && target.getMaxNumberOfTargets() > 0) {\n            sb.append(\"up to \").append(target.getMaxNumberOfTargets()).append(\" target \").append(target.getTargetName()).append(\" to their owners' hand\");\n            return sb.toString();\n        } else {\n            if (!target.getTargetName().startsWith(\"another\")) {\n                sb.append(\" target \");\n            }\n            sb.append(target.getTargetName()).append(\" to it's owner's hand\").toString();\n            return sb.toString();\n        }\n    }","id":53985,"modified_method":"@Override\n    public String getText(Mode mode) {\n        if (staticText != null && !staticText.isEmpty()) {\n            return staticText;\n        }\n        if (mode.getTargets().size() < 1) {\n            return \"\";\n        }\n        Target target = mode.getTargets().get(0);\n        StringBuilder sb = new StringBuilder(\"Return \");\n        if (target.getNumberOfTargets() == 0 && target.getMaxNumberOfTargets() > 0) {\n            sb.append(\"up to \").append(CardUtil.numberToText(target.getMaxNumberOfTargets())).append(\" target \").append(target.getTargetName()).append(\" to their owners' hand\");\n            return sb.toString();\n        } else {\n            if (!target.getTargetName().startsWith(\"another\")) {\n                sb.append(\" target \");\n            }\n            sb.append(target.getTargetName()).append(\" to it's owner's hand\").toString();\n            return sb.toString();\n        }\n    }","commit_id":"4e35568bb5f1986f7324bb57079635b9440057a6","url":"https://github.com/magefree/mage"},{"original_method":"/**\r\n     * Creates and saves a (card + zoneChangeCounter) specific exileId.\r\n     *\r\n     * @param game the current game\r\n     * @param source source ability\r\n     * @return the specific UUID\r\n     */\r\n    public static UUID getCardExileZoneId(Game game, Ability source) {\r\n        String key = getCardZoneString(\"SourceExileZone\", source.getSourceId(), game);\r\n        UUID exileId = (UUID) game.getState().getValue(key);\r\n        if (exileId == null) {\r\n            exileId = UUID.randomUUID();\r\n            game.getState().setValue(key, exileId);\r\n        }\r\n        return exileId;\r\n    }","id":53986,"modified_method":"/**\r\n     * Creates and saves a (card + zoneChangeCounter) specific exileId.\r\n     *\r\n     * @param game the current game\r\n     * @param source source ability\r\n     * @return the specific UUID\r\n     */\r\n    public static UUID getCardExileZoneId(Game game, Ability source) {\r\n        return getCardExileZoneId(game, source.getSourceId());\r\n    }","commit_id":"b0f137ffec9aeae0ce289cb98f97ff9384a8a53b","url":"https://github.com/magefree/mage"},{"original_method":"private void setText() {\n        StringBuilder sb = new StringBuilder();\n        sb.append(rulePrefix);\n        if (target.getNumberOfTargets() == 0 && target.getMaxNumberOfTargets() > 0) {\n            sb.append(\"up to \").append(target.getMaxNumberOfTargets()).append(\" \");\n            sb.append(target.getTargetName()).append(revealCards ? \", reveal them, \" : \"\").append(\" and put them into your hand\");\n        }\n        else {\n            sb.append(\"a \").append(target.getTargetName()).append(revealCards ? \", reveal it, \" : \"\").append(\" and put that card into your hand\");\n        }\n        if (forceShuffle) {\n            sb.append(\". Then shuffle your library\");\n        }\n        else {\n            sb.append(\". If you do, shuffle your library\");\n        }\n        staticText = sb.toString();\n    }","id":53987,"modified_method":"private void setText() {\n        StringBuilder sb = new StringBuilder();\n        sb.append(rulePrefix);\n        if (target.getNumberOfTargets() == 0 && target.getMaxNumberOfTargets() > 0) {\n            sb.append(\"up to \").append(CardUtil.numberToText(target.getMaxNumberOfTargets())).append(\" \");\n            sb.append(target.getTargetName()).append(revealCards ? \", reveal them, \" : \"\").append(\" and put them into your hand\");\n        }\n        else {\n            sb.append(\"a \").append(target.getTargetName()).append(revealCards ? \", reveal it, \" : \"\").append(\" and put that card into your hand\");\n        }\n        if (forceShuffle) {\n            sb.append(\". Then shuffle your library\");\n        }\n        else {\n            sb.append(\". If you do, shuffle your library\");\n        }\n        staticText = sb.toString();\n    }","commit_id":"b0f137ffec9aeae0ce289cb98f97ff9384a8a53b","url":"https://github.com/magefree/mage"},{"original_method":"@Override\r\n    public String getText(Mode mode) {\r\n        if (mode.getTargets().isEmpty()) {\r\n            return \"\";\r\n        }\r\n\r\n        StringBuilder sb = new StringBuilder();\r\n        Target target = mode.getTargets().get(0);\r\n        if (target.getMaxNumberOfTargets() > 1) {\r\n            if (target.getMaxNumberOfTargets() != target.getNumberOfTargets()) {\r\n                sb.append(\"up to \");\r\n            }\r\n            sb.append(target.getMaxNumberOfTargets()).append(\" \");\r\n        }\r\n        sb.append(\"target \").append(mode.getTargets().get(0).getTargetName());\r\n        if (target.getMaxNumberOfTargets() > 1) {\r\n            sb.append(\"s\");\r\n        }\r\n\r\n        sb.append(\" can't block\");\r\n        if (Duration.EndOfTurn.equals(this.duration)) {\r\n            sb.append(\" this turn\");\r\n        }\r\n\r\n        return sb.toString();\r\n    }","id":53988,"modified_method":"@Override\r\n    public String getText(Mode mode) {\r\n        if (mode.getTargets().isEmpty()) {\r\n            return \"\";\r\n        }\r\n\r\n        StringBuilder sb = new StringBuilder();\r\n        Target target = mode.getTargets().get(0);\r\n        if (target.getMaxNumberOfTargets() > 1) {\r\n            if (target.getMaxNumberOfTargets() != target.getNumberOfTargets()) {\r\n                sb.append(\"up to \");\r\n            }\r\n            sb.append(CardUtil.numberToText(target.getMaxNumberOfTargets())).append(\" \");\r\n        }\r\n        sb.append(\"target \").append(mode.getTargets().get(0).getTargetName());\r\n        if (target.getMaxNumberOfTargets() > 1) {\r\n            sb.append(\"s\");\r\n        }\r\n\r\n        sb.append(\" can't block\");\r\n        if (Duration.EndOfTurn.equals(this.duration)) {\r\n            sb.append(\" this turn\");\r\n        }\r\n\r\n        return sb.toString();\r\n    }","commit_id":"3da35269afd64341f920680dfc74a17b32146648","url":"https://github.com/magefree/mage"},{"original_method":"public KickerAbility(String manaString) {\n       this(KickerKeyword, KickerReminderMana);\n       this.addKickerCost(manaString);\n    }","id":53989,"modified_method":"public KickerAbility(String manaString) {\n       this(KICKER_KEYWORD, KICKER_REMINDER_MANA);\n       this.addKickerCost(manaString);\n    }","commit_id":"3da35269afd64341f920680dfc74a17b32146648","url":"https://github.com/magefree/mage"},{"original_method":"public KickerAbility(Cost cost) {\n       this(KickerKeyword, KickerReminderCost);\n       this.addKickerCost(cost);\n    }","id":53990,"modified_method":"public KickerAbility(Cost cost) {\n       this(KICKER_KEYWORD, KICKER_REMINDER_COST);\n       this.addKickerCost(cost);\n    }","commit_id":"3da35269afd64341f920680dfc74a17b32146648","url":"https://github.com/magefree/mage"},{"original_method":"@Override\n    public String getText(Mode mode) {\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"Return target \").append(mode.getTargets().get(0).getTargetName()).append(\" to the battlefield\");\n        if (tapped) {\n            sb.append(\" tapped\");\n        }\n        sb.append(\" under your control\");\n        return sb.toString();\n    }","id":53991,"modified_method":"@Override\n    public String getText(Mode mode) {\n        StringBuilder sb = new StringBuilder();\n        Target target = mode.getTargets().get(0);\n        sb.append(\"Return \");\n        if (target.getMaxNumberOfTargets() > 1) {\n            if (target.getMaxNumberOfTargets() != target.getNumberOfTargets()) {\n                sb.append(\"up to \");\n            }\n            sb.append(CardUtil.numberToText(target.getMaxNumberOfTargets())).append(\" \");\n        }\n        sb.append(\"target \").append(mode.getTargets().get(0).getTargetName()).append(\" to the battlefield\");\n        if (tapped) {\n            sb.append(\" tapped\");\n        }\n        sb.append(\" under your control\");\n        return sb.toString();\n    }","commit_id":"3da35269afd64341f920680dfc74a17b32146648","url":"https://github.com/magefree/mage"},{"original_method":"@Override\n    public boolean apply(Game game, Ability source) {\n        Card card = game.getCard(source.getFirstTarget());\n        if (card != null) {\n            Player player = game.getPlayer(card.getOwnerId());\n            if (player != null) {\n                if (card.putOntoBattlefield(game, Zone.GRAVEYARD, source.getId(), source.getControllerId())) {\n                    if (tapped) {\n                        Permanent permanent = game.getPermanent(card.getId());\n                        if (permanent != null) {\n                            permanent.setTapped(true);\n                        }\n                    }\n                    return true;\n                }\n            }\n        }\n        return false;\n    }","id":53992,"modified_method":"@Override\n    public boolean apply(Game game, Ability source) {\n        for (UUID targetId: getTargetPointer().getTargets(game, source)) {\n            Card card = game.getCard(targetId);\n            if (card != null) {\n                Player player = game.getPlayer(card.getOwnerId());\n                if (player != null) {\n                    if (card.putOntoBattlefield(game, Zone.GRAVEYARD, source.getId(), source.getControllerId())) {\n                        if (tapped) {\n                            Permanent permanent = game.getPermanent(card.getId());\n                            if (permanent != null) {\n                                permanent.setTapped(true);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return true;\n    }","commit_id":"3da35269afd64341f920680dfc74a17b32146648","url":"https://github.com/magefree/mage"},{"original_method":"public ExileFromGraveCost(TargetCardInYourGraveyard target) {\n        this.addTarget(target);\n        if (target.getMaxNumberOfTargets() > 1) {\n            this.text = \"Exile \" + target.getMaxNumberOfTargets() + \" \" + target.getTargetName();\n        }\n        else {\n            this.text = \"Exile \" + target.getTargetName();\n        }\n        if (!this.text.endsWith(\" from your graveyard\")) {\n            this.text = this.text + \" from your graveyard\";\n        }\n        \n    }","id":53993,"modified_method":"public ExileFromGraveCost(TargetCardInYourGraveyard target) {\n        this.addTarget(target);\n        if (target.getMaxNumberOfTargets() > 1) {\n            this.text = \"Exile \" + CardUtil.numberToText(target.getMaxNumberOfTargets()) + \" \" + target.getTargetName();\n        }\n        else {\n            this.text = \"Exile \" + target.getTargetName();\n        }\n        if (!this.text.endsWith(\" from your graveyard\")) {\n            this.text = this.text + \" from your graveyard\";\n        }\n        \n    }","commit_id":"4676b617da4cf0f75b960f16acb81887736db552","url":"https://github.com/magefree/mage"},{"original_method":"public N1Starfighter(UUID ownerId) {\r\n        super(ownerId, 224, \"N-1 Starfighter\", Rarity.COMMON, new CardType[]{CardType.ARTIFACT, CardType.CREATURE}, \"{1}{W/U}{W/U}\");\r\n        this.expansionSetCode = \"SWS\";\r\n        this.subtype.add(\"Starship\");\r\n        this.power = new MageInt(2);\r\n        this.toughness = new MageInt(2);\r\n\r\n        // Spaceflight\r\n        this.addAbility(SpaceflightAbility.getInstance());\r\n\r\n        // Whenever N-1 Starfighter deals combat damage to a player, you may pay {1}. If you do, exile another creature you control, then return that card to the battlefield under its owner's control.\r\n        Ability ability = new DealsCombatDamageToAPlayerTriggeredAbility(new DoIfCostPaid(new ExileTargetForSourceEffect(), new GenericManaCost(1)), true);\r\n        Effect effect = new ReturnToBattlefieldUnderYourControlTargetEffect(true);\r\n        effect.setText(\", then return the card to the battlefield under their owner's control\");\r\n        ability.addEffect(effect);\r\n        ability.addTarget(new TargetControlledCreaturePermanent(filter));\r\n        this.addAbility(ability);\r\n    }","id":53994,"modified_method":"public N1Starfighter(UUID ownerId) {\r\n        super(ownerId, 224, \"N-1 Starfighter\", Rarity.COMMON, new CardType[]{CardType.ARTIFACT, CardType.CREATURE}, \"{1}{W/U}{W/U}\");\r\n        this.expansionSetCode = \"SWS\";\r\n        this.subtype.add(\"Starship\");\r\n        this.power = new MageInt(2);\r\n        this.toughness = new MageInt(2);\r\n\r\n        // Spaceflight\r\n        this.addAbility(SpaceflightAbility.getInstance());\r\n\r\n        // Whenever N-1 Starfighter deals combat damage to a player, you may pay {1}. If you do, exile another creature you control, then return that card to the battlefield under its owner's control.\r\n        Ability ability = new DealsCombatDamageToAPlayerTriggeredAbility(new DoIfCostPaid(new ExileTargetForSourceEffect(), new GenericManaCost(1)), false);\r\n        Effect effect = new ReturnToBattlefieldUnderOwnerControlTargetEffect(false, true);\r\n        effect.setText(\", then return the card to the battlefield under their owner's control\");\r\n        ability.addEffect(effect);\r\n        ability.addTarget(new TargetControlledCreaturePermanent(filter));\r\n        this.addAbility(ability);\r\n    }","commit_id":"e19172fb916dead150adb1663579df4be6e9a1e2","url":"https://github.com/magefree/mage"},{"original_method":"@Override\n    public String getText(Mode mode) {\n        if (staticText != null && !staticText.isEmpty()) {\n            return staticText;\n        }\n        Target target = mode.getTargets().get(0);\n\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"Untap \");\n        if (target.getNumberOfTargets() == 0) {\n            sb.append(\"up to \");\n        }\n\n        if (target.getMaxNumberOfTargets() > 1 || target.getNumberOfTargets() == 0) {\n            sb.append(target.getMaxNumberOfTargets()).append(\" target \").append(target.getTargetName()).append(\"s\");\n        } else {\n            if (!target.getTargetName().startsWith(\"another\")) {\n                sb.append(\"target \");\n            }\n            sb.append(target.getTargetName());\n        }\n\n        return sb.toString();\n    }","id":53995,"modified_method":"@Override\n    public String getText(Mode mode) {\n        if (staticText != null && !staticText.isEmpty()) {\n            return staticText;\n        }\n        Target target = mode.getTargets().get(0);\n\n        StringBuilder sb = new StringBuilder();\n        sb.append(\"Untap \");\n        if (target.getNumberOfTargets() == 0) {\n            sb.append(\"up to \");\n        }\n\n        if (target.getMaxNumberOfTargets() > 1 || target.getNumberOfTargets() == 0) {\n            sb.append(CardUtil.numberToText(target.getMaxNumberOfTargets())).append(\" target \").append(target.getTargetName()).append(\"s\");\n        } else {\n            if (!target.getTargetName().startsWith(\"another\")) {\n                sb.append(\"target \");\n            }\n            sb.append(target.getTargetName());\n        }\n\n        return sb.toString();\n    }","commit_id":"e19172fb916dead150adb1663579df4be6e9a1e2","url":"https://github.com/magefree/mage"},{"original_method":"@Override\n    public void onCreate(final ITenant tenant) {\n\n        final StandardEvaluationContext ctx = new StandardEvaluationContext();\n        ctx.setRootObject(new RootObjectImpl(tenant));\n\n        /*\n         * First load dom4j Documents and sort the entity files into the proper order \n         */\n        final Map<PortalDataKey,Set<Document>> importQueue = new HashMap<PortalDataKey,Set<Document>>();\n        Resource rsc = null;\n        try {\n            for (Resource r : templateResources) {\n                rsc = r;\n                if (log.isDebugEnabled()) {\n                    log.debug(\"Loading template resource file for tenant \" \n                            + \"'\" + tenant.getFname() + \"':  \" \n                            + rsc.getFilename());\n                }\n                final Document doc = reader.read(rsc.getInputStream());\n                final QName qname = doc.getRootElement().getQName();\n                PortalDataKey atLeastOneMatchingDataKey = null;\n                for (PortalDataKey pdk : dataKeyImportOrder) {\n                    // Matching is tougher because it's dom4j <> w3c...\n                    boolean matches = qname.getName().equals(pdk.getName().getLocalPart())\n                            && qname.getNamespaceURI().equals(pdk.getName().getNamespaceURI());\n                    if (matches) {\n                        // Found the right bucket...\n                        atLeastOneMatchingDataKey = pdk;\n                        Set<Document> bucket = importQueue.get(atLeastOneMatchingDataKey);\n                        if (bucket == null) {\n                            // First of these we've seen;  create the bucket;\n                            bucket = new HashSet<Document>();\n                            importQueue.put(atLeastOneMatchingDataKey, bucket);\n                        }\n                        bucket.add(doc);\n                        /*\n                         * At this point, we would normally add a break;\n                         * statement, but group_membership.xml files need to\n                         * match more than one PortalDataKey.\n                         */\n                    }\n                }\n                if (atLeastOneMatchingDataKey == null) {\n                    // We can't proceed\n                    throw new RuntimeException(\"No PortalDataKey found for QName:  \" \n                                                + doc.getRootElement().getQName());\n                }\n            }\n        } catch (Exception e) {\n            throw new RuntimeException(\"Failed to process the specified template:  \" \n                                    + (rsc != null ? rsc.getFilename() : \"\"), e);\n        }\n\n        log.trace(\"Ready to import data entity templates for new tenant '{}';  importQueue={}\", \n                                                            tenant.getName(), importQueue);\n\n        /*\n         * Now import the identified entities each bucket in turn \n         */\n        Document doc = null;\n        org.w3c.dom.Document w3c = null;\n        try {\n            for (PortalDataKey pdk : dataKeyImportOrder) {\n                Set<Document> bucket = importQueue.get(pdk);\n                if (bucket != null) {\n                    log.debug(\"Importing the specified PortalDataKey tenant '{}':  {}\",\n                            tenant.getName(), pdk.getName());\n                    for (Document d : bucket) {\n                        doc = d;\n                        log.trace(\"Importing document XML={}\", doc.asXML());\n                        for (String xpath : XPATH_EXPRESSIONS) {\n                            @SuppressWarnings(\"unchecked\")\n                            List<Node> nodes = doc.selectNodes(xpath);\n                            for (Node n : nodes) {\n                                String inpt, otpt;\n                                switch (n.getNodeType()) {\n                                    case org.w3c.dom.Node.ATTRIBUTE_NODE:\n                                        Attribute a = (Attribute) n;\n                                        inpt = a.getValue();\n                                        otpt = processText(inpt, ctx);\n                                        if (!otpt.equals(inpt)) {\n                                            a.setValue(otpt);\n                                        }\n                                        break;\n                                    case org.w3c.dom.Node.TEXT_NODE:\n                                        Text t = (Text) n;\n                                        inpt = t.getText();\n                                        otpt = processText(inpt, ctx);\n                                        if (!otpt.equals(inpt)) {\n                                            t.setText(otpt);\n                                        }\n                                        break;\n                                    default:\n                                        String msg = \"Unsupported node type:  \" + n.getNodeTypeName();\n                                        throw new RuntimeException(msg);\n                                }\n                            }\n                        }\n                        w3c = writer.write(doc, domImpl);\n                        Source source = new DOMSource(w3c);\n                        source.setSystemId(rsc.getFilename());  // must be set, else import chokes\n                        dataHandlerService.importData(source, pdk);\n                    }\n                }\n            }\n\n        } catch (Exception e) {\n            log.warn(\"w3c DOM=\"+this.nodeToString(w3c));\n            throw new RuntimeException(\"Failed to process the specified template document:  \" \n                                    + (doc != null ? doc.asXML() : \"\"), e);\n        }\n\n    }","id":53996,"modified_method":"@Override\n    public void onCreate(final ITenant tenant) {\n\n        /*\n         * First load dom4j Documents and sort the entity files into the proper order \n         */\n        final Map<PortalDataKey,Set<BucketTuple>> importQueue = new HashMap<PortalDataKey,Set<BucketTuple>>();\n        Resource rsc = null;\n        try {\n            for (Resource r : templateResources) {\n                rsc = r;\n                if (log.isDebugEnabled()) {\n                    log.debug(\"Loading template resource file for tenant \" \n                            + \"'\" + tenant.getFname() + \"':  \" \n                            + rsc.getFilename());\n                }\n                final Document doc = reader.read(rsc.getInputStream());\n                PortalDataKey atLeastOneMatchingDataKey = null;\n                for (PortalDataKey pdk : dataKeyImportOrder) {\n                    boolean matches = evaluatePortalDataKeyMatch(doc, pdk);\n                    if (matches) {\n                        // Found the right bucket...\n                        log.debug(\"Found PortalDataKey '{}' for data document {}\", pdk, r.getURI());\n                        atLeastOneMatchingDataKey = pdk;\n                        Set<BucketTuple> bucket = importQueue.get(atLeastOneMatchingDataKey);\n                        if (bucket == null) {\n                            // First of these we've seen;  create the bucket;\n                            bucket = new HashSet<BucketTuple>();\n                            importQueue.put(atLeastOneMatchingDataKey, bucket);\n                        }\n                        BucketTuple tuple = new BucketTuple(rsc, doc);\n                        bucket.add(tuple);\n                        /*\n                         * At this point, we would normally add a break;\n                         * statement, but group_membership.xml files need to\n                         * match more than one PortalDataKey.\n                         */\n                    }\n                }\n                if (atLeastOneMatchingDataKey == null) {\n                    // We can't proceed\n                    throw new RuntimeException(\"No PortalDataKey found for QName:  \" \n                                                + doc.getRootElement().getQName());\n                }\n            }\n        } catch (Exception e) {\n            throw new RuntimeException(\"Failed to process the specified template:  \" \n                                    + (rsc != null ? rsc.getFilename() : \"\"), e);\n        }\n\n        log.trace(\"Ready to import data entity templates for new tenant '{}';  importQueue={}\", \n                                                            tenant.getName(), importQueue);\n\n        /*\n         * Now import the identified entities each bucket in turn \n         */\n        final StandardEvaluationContext ctx = new StandardEvaluationContext();\n        ctx.setRootObject(new RootObjectImpl(tenant));\n        IDataTemplatingStrategy templating = new SpELDataTemplatingStrategy(portalSpELService, ctx);\n        Document doc = null;\n        try {\n            for (PortalDataKey pdk : dataKeyImportOrder) {\n                Set<BucketTuple> bucket = importQueue.get(pdk);\n                if (bucket != null) {\n                    log.debug(\"Importing the specified PortalDataKey tenant '{}':  {}\",\n                            tenant.getName(), pdk.getName());\n                    for (BucketTuple tuple : bucket) {\n                        doc = tuple.getDocument();\n                        Source data = templating.processTemplates(doc, tuple.getResource().getURL().toString());\n                        dataHandlerService.importData(data, pdk);\n                    }\n                }\n            }\n\n        } catch (Exception e) {\n            throw new RuntimeException(\"Failed to process the specified template document:  \" \n                                    + (doc != null ? doc.asXML() : \"\"), e);\n        }\n\n    }","commit_id":"c1bd8df881f5284a3156d5b0a8afed294cbeb069","url":"https://github.com/Jasig/uPortal"},{"original_method":"@PostConstruct\n    public void setup() throws Exception {\n        templateResources = applicationContext.getResources(TEMPLATE_LOCATION);\n\n        Map<String,String> nsPrefixes = new HashMap<String,String>();\n        nsPrefixes.put(\"dlm\", FragmentDefinition.NAMESPACE_URI);\n        DocumentFactory factory = new DocumentFactory();\n        factory.setXPathNamespaceURIs(nsPrefixes);\n        reader.setDocumentFactory(factory);\n\n        DocumentBuilderFactory fac = DocumentBuilderFactory.newInstance();\n        fac.setNamespaceAware(true);\n        domImpl = fac.newDocumentBuilder().getDOMImplementation();\n    }","id":53997,"modified_method":"@PostConstruct\n    public void setup() throws Exception {\n        templateResources = applicationContext.getResources(templateLocation);\n    }","commit_id":"c1bd8df881f5284a3156d5b0a8afed294cbeb069","url":"https://github.com/Jasig/uPortal"},{"original_method":"@Override\n        protected void realRun() throws SAXException, IOException, OsmTransferException {\n            if (files == null || files.isEmpty()) return;\n\n            /**\n             * Find the importer with the chosen file filter\n             */\n            FileImporter chosenImporter = null;\n            for (FileImporter importer : ExtensionFileFilter.importers) {\n                if (fileFilter == importer.filter) {\n                    chosenImporter = importer;\n                }\n            }\n            /**\n             * If the filter wasn't changed in the dialog, chosenImporter is null now.\n             * When the filter was explicitly set to AllFormatsImporter, treat this the same.\n             */\n            if (chosenImporter instanceof AllFormatsImporter) {\n                chosenImporter = null;\n            }\n            getProgressMonitor().setTicksCount(files.size());\n\n            if (chosenImporter != null) { // The importer was expicitely chosen, so use it.\n                //System.err.println(\"Importer: \" +chosenImporter.getClass().getName());\n                for (File f : files) {\n                    if (!chosenImporter.acceptFile(f)) {\n                        if (f.isDirectory()) {\n                            JOptionPane.showMessageDialog(\n                                    Main.parent,\n                                    tr(\"<html>Cannot open directory.<br>Please select a file!<\/html>\"),\n                                    tr(\"Open file\"),\n                                    JOptionPane.INFORMATION_MESSAGE\n                            );\n                            return;\n                        } else\n                            throw new IllegalStateException();\n                    }\n                }\n                importData(chosenImporter, files);\n            }\n            else {    // find apropriate importer\n                MultiMap<FileImporter, File> map = new MultiMap<FileImporter, File>();\n                FILES:\n                    for (File f: files) {\n                        for (FileImporter importer : ExtensionFileFilter.importers) {\n                            if (importer.acceptFile(f)) {\n                                map.put(importer, f);\n                                continue FILES;\n                            }\n                        }\n                        throw new RuntimeException(); // no importer found\n                    }\n                List<FileImporter> ims = new ArrayList<FileImporter>(map.keySet());\n                Collections.sort(ims);\n                Collections.reverse(ims);\n                for (FileImporter importer : ims) {\n                    //System.err.println(\"Using \"+importer.getClass().getName());\n                    List<File> files = new ArrayList<File>(map.get(importer));\n                    //System.err.println(\"for files: \"+files);\n                    importData(importer, files);\n                }\n            }\n        }","id":53998,"modified_method":"@Override\n        protected void realRun() throws SAXException, IOException, OsmTransferException {\n            if (files == null || files.isEmpty()) return;\n\n            /**\n             * Find the importer with the chosen file filter\n             */\n            FileImporter chosenImporter = null;\n            for (FileImporter importer : ExtensionFileFilter.importers) {\n                if (fileFilter == importer.filter) {\n                    chosenImporter = importer;\n                }\n            }\n            /**\n             * If the filter wasn't changed in the dialog, chosenImporter is null now.\n             * When the filter was explicitly set to AllFormatsImporter, treat this the same.\n             */\n            if (chosenImporter instanceof AllFormatsImporter) {\n                chosenImporter = null;\n            }\n            getProgressMonitor().setTicksCount(files.size());\n\n            if (chosenImporter != null) {\n                // The importer was expicitely chosen, so use it.\n                List<File> filesNotMatchingWithImporter = new LinkedList<File>();\n                List<File> filesMatchingWithImporter = new LinkedList<File>();\n                for (File f : files) {\n                    if (!chosenImporter.acceptFile(f)) {\n                        if (f.isDirectory()) {\n                            JOptionPane.showMessageDialog(Main.parent, tr(\n                                    \"<html>Cannot open directory ''{0}''.<br>Please select a file.<\/html>\", f\n                                    .getAbsolutePath()), tr(\"Open file\"), JOptionPane.ERROR_MESSAGE);\n                        } else {\n                            filesNotMatchingWithImporter.add(f);\n                        }\n                    } else {\n                        filesMatchingWithImporter.add(f);\n                    }\n                }\n\n                if (!filesNotMatchingWithImporter.isEmpty()) {\n                    alertFilesNotMatchingWithImporter(filesNotMatchingWithImporter, chosenImporter);\n                }\n                if (!filesNotMatchingWithImporter.isEmpty()) {\n                    importData(chosenImporter, filesMatchingWithImporter);\n                }\n            } else {\n                // find appropriate importer\n                MultiMap<FileImporter, File> map = new MultiMap<FileImporter, File>();\n                List<File> filesWithKnownImporter = new LinkedList<File>();\n                List<File> filesWithUnknownImporter = new LinkedList<File>();\n                FILES: for (File f : files) {\n                    for (FileImporter importer : ExtensionFileFilter.importers) {\n                        if (importer.acceptFile(f)) {\n                            map.put(importer, f);\n                            filesWithKnownImporter.add(f);\n                            continue FILES;\n                        }\n                    }\n                    filesWithUnknownImporter.add(f);\n                }\n                if (!filesWithUnknownImporter.isEmpty()) {\n                    alertFilesWithUnknownImporter(filesWithUnknownImporter);\n                }\n                List<FileImporter> ims = new ArrayList<FileImporter>(map.keySet());\n                Collections.sort(ims);\n                Collections.reverse(ims);\n                for (FileImporter importer : ims) {\n                    List<File> files = new ArrayList<File>(map.get(importer));\n                    importData(importer, files);\n                }\n            }\n        }","commit_id":"1b3ad7a8f87be8a11527d5d91987982a91076a37","url":"https://github.com/openstreetmap/josm"},{"original_method":"public void importData(FileImporter importer, List<File> files) {\n            if (importer.isBatchImporter()) {\n                if (cancelled) return;\n                String msg;\n                if (files.size() == 1) {\n                    msg = tr(\"Opening 1 file...\");\n                } else {\n                    msg = trn(\"Opening {0} file...\", \"Opening {0} files...\", files.size(), files.size());\n                }\n                getProgressMonitor().indeterminateSubTask(msg);\n                importer.importDataHandleExceptions(files, getProgressMonitor().createSubTaskMonitor(files.size(), false));\n            } else {\n                for (File f : files) {\n                    if (cancelled) return;\n                    getProgressMonitor().indeterminateSubTask(tr(\"Opening file ''{0}'' ...\", f.getAbsolutePath()));\n                    importer.importDataHandleExceptions(f, getProgressMonitor().createSubTaskMonitor(1, false));\n                }\n            }\n        }","id":53999,"modified_method":"public void importData(FileImporter importer, List<File> files) {\n            if (importer.isBatchImporter()) {\n                if (cancelled) return;\n                String msg;\n                if (files.size() == 1) {\n                    msg = tr(\"Opening 1 file...\");\n                } else {\n                    msg = trn(\"Opening {0} file...\", \"Opening {0} files...\", files.size(), files.size());\n                }\n                getProgressMonitor().setCustomText(msg);\n                getProgressMonitor().indeterminateSubTask(msg);\n                importer.importDataHandleExceptions(files, getProgressMonitor().createSubTaskMonitor(files.size(), false));\n            } else {\n                for (File f : files) {\n                    if (cancelled) return;\n                    getProgressMonitor().indeterminateSubTask(tr(\"Opening file ''{0}'' ...\", f.getAbsolutePath()));\n                    importer.importDataHandleExceptions(f, getProgressMonitor().createSubTaskMonitor(1, false));\n                }\n            }\n        }","commit_id":"1b3ad7a8f87be8a11527d5d91987982a91076a37","url":"https://github.com/openstreetmap/josm"}]